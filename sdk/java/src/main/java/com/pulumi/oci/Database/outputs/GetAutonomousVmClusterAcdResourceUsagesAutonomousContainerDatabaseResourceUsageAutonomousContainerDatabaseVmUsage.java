// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage {
    /**
     * @return The user-friendly name for the Autonomous Container Database. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Container Database.
     * 
     */
    private String id;
    /**
     * @return CPUs / cores assigned to ADBs in the Autonomous Container Database.
     * 
     */
    private Double provisionedCpus;
    /**
     * @return CPUs / cores reclaimable or released to cluster on Autonomous Container Database restart.
     * 
     */
    private Double reclaimableCpus;
    /**
     * @return CPUs / cores reserved for scalability, resilliency and other overheads. This includes failover, autoscaling and idle instance overhead.
     * 
     */
    private Double reservedCpus;
    /**
     * @return CPUs / cores assigned to the Autonomous Container Database. Sum of provisioned, reserved and reclaimable CPUs/ cores.
     * 
     */
    private Double usedCpus;

    private GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage() {}
    /**
     * @return The user-friendly name for the Autonomous Container Database. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Container Database.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return CPUs / cores assigned to ADBs in the Autonomous Container Database.
     * 
     */
    public Double provisionedCpus() {
        return this.provisionedCpus;
    }
    /**
     * @return CPUs / cores reclaimable or released to cluster on Autonomous Container Database restart.
     * 
     */
    public Double reclaimableCpus() {
        return this.reclaimableCpus;
    }
    /**
     * @return CPUs / cores reserved for scalability, resilliency and other overheads. This includes failover, autoscaling and idle instance overhead.
     * 
     */
    public Double reservedCpus() {
        return this.reservedCpus;
    }
    /**
     * @return CPUs / cores assigned to the Autonomous Container Database. Sum of provisioned, reserved and reclaimable CPUs/ cores.
     * 
     */
    public Double usedCpus() {
        return this.usedCpus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String id;
        private Double provisionedCpus;
        private Double reclaimableCpus;
        private Double reservedCpus;
        private Double usedCpus;
        public Builder() {}
        public Builder(GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.provisionedCpus = defaults.provisionedCpus;
    	      this.reclaimableCpus = defaults.reclaimableCpus;
    	      this.reservedCpus = defaults.reservedCpus;
    	      this.usedCpus = defaults.usedCpus;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedCpus(Double provisionedCpus) {
            if (provisionedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage", "provisionedCpus");
            }
            this.provisionedCpus = provisionedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reclaimableCpus(Double reclaimableCpus) {
            if (reclaimableCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage", "reclaimableCpus");
            }
            this.reclaimableCpus = reclaimableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reservedCpus(Double reservedCpus) {
            if (reservedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage", "reservedCpus");
            }
            this.reservedCpus = reservedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder usedCpus(Double usedCpus) {
            if (usedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage", "usedCpus");
            }
            this.usedCpus = usedCpus;
            return this;
        }
        public GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage build() {
            final var _resultValue = new GetAutonomousVmClusterAcdResourceUsagesAutonomousContainerDatabaseResourceUsageAutonomousContainerDatabaseVmUsage();
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.provisionedCpus = provisionedCpus;
            _resultValue.reclaimableCpus = reclaimableCpus;
            _resultValue.reservedCpus = reservedCpus;
            _resultValue.usedCpus = usedCpus;
            return _resultValue;
        }
    }
}
