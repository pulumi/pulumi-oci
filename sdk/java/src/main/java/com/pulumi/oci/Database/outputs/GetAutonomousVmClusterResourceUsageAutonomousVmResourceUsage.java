// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsageAutonomousContainerDatabaseUsage;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage {
    /**
     * @return associated autonomous container database usages
     * 
     */
    private List<GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsageAutonomousContainerDatabaseUsage> autonomousContainerDatabaseUsages;
    /**
     * @return The number of CPU cores available.
     * 
     */
    private Double availableCpus;
    /**
     * @return The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM cluster.
     * 
     */
    private String id;
    /**
     * @return The number of CPUs provisioned in an Autonomous VM Cluster.
     * 
     */
    private Double provisionedCpus;
    /**
     * @return CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
     * 
     */
    private Double reclaimableCpus;
    /**
     * @return The number of CPUs reserved in an Autonomous VM Cluster.
     * 
     */
    private Double reservedCpus;
    /**
     * @return The number of CPU cores alloted to the Autonomous Container Databases in an Autonomous VM cluster.
     * 
     */
    private Double usedCpus;

    private GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage() {}
    /**
     * @return associated autonomous container database usages
     * 
     */
    public List<GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsageAutonomousContainerDatabaseUsage> autonomousContainerDatabaseUsages() {
        return this.autonomousContainerDatabaseUsages;
    }
    /**
     * @return The number of CPU cores available.
     * 
     */
    public Double availableCpus() {
        return this.availableCpus;
    }
    /**
     * @return The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM cluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The number of CPUs provisioned in an Autonomous VM Cluster.
     * 
     */
    public Double provisionedCpus() {
        return this.provisionedCpus;
    }
    /**
     * @return CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
     * 
     */
    public Double reclaimableCpus() {
        return this.reclaimableCpus;
    }
    /**
     * @return The number of CPUs reserved in an Autonomous VM Cluster.
     * 
     */
    public Double reservedCpus() {
        return this.reservedCpus;
    }
    /**
     * @return The number of CPU cores alloted to the Autonomous Container Databases in an Autonomous VM cluster.
     * 
     */
    public Double usedCpus() {
        return this.usedCpus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsageAutonomousContainerDatabaseUsage> autonomousContainerDatabaseUsages;
        private Double availableCpus;
        private String displayName;
        private String id;
        private Double provisionedCpus;
        private Double reclaimableCpus;
        private Double reservedCpus;
        private Double usedCpus;
        public Builder() {}
        public Builder(GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousContainerDatabaseUsages = defaults.autonomousContainerDatabaseUsages;
    	      this.availableCpus = defaults.availableCpus;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.provisionedCpus = defaults.provisionedCpus;
    	      this.reclaimableCpus = defaults.reclaimableCpus;
    	      this.reservedCpus = defaults.reservedCpus;
    	      this.usedCpus = defaults.usedCpus;
        }

        @CustomType.Setter
        public Builder autonomousContainerDatabaseUsages(List<GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsageAutonomousContainerDatabaseUsage> autonomousContainerDatabaseUsages) {
            this.autonomousContainerDatabaseUsages = Objects.requireNonNull(autonomousContainerDatabaseUsages);
            return this;
        }
        public Builder autonomousContainerDatabaseUsages(GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsageAutonomousContainerDatabaseUsage... autonomousContainerDatabaseUsages) {
            return autonomousContainerDatabaseUsages(List.of(autonomousContainerDatabaseUsages));
        }
        @CustomType.Setter
        public Builder availableCpus(Double availableCpus) {
            this.availableCpus = Objects.requireNonNull(availableCpus);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder provisionedCpus(Double provisionedCpus) {
            this.provisionedCpus = Objects.requireNonNull(provisionedCpus);
            return this;
        }
        @CustomType.Setter
        public Builder reclaimableCpus(Double reclaimableCpus) {
            this.reclaimableCpus = Objects.requireNonNull(reclaimableCpus);
            return this;
        }
        @CustomType.Setter
        public Builder reservedCpus(Double reservedCpus) {
            this.reservedCpus = Objects.requireNonNull(reservedCpus);
            return this;
        }
        @CustomType.Setter
        public Builder usedCpus(Double usedCpus) {
            this.usedCpus = Objects.requireNonNull(usedCpus);
            return this;
        }
        public GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage build() {
            final var o = new GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage();
            o.autonomousContainerDatabaseUsages = autonomousContainerDatabaseUsages;
            o.availableCpus = availableCpus;
            o.displayName = displayName;
            o.id = id;
            o.provisionedCpus = provisionedCpus;
            o.reclaimableCpus = reclaimableCpus;
            o.reservedCpus = reservedCpus;
            o.usedCpus = usedCpus;
            return o;
        }
    }
}
