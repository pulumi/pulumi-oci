// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAutonomousVmClusterResourceUsageResult {
    /**
     * @return The data disk group size allocated for Autonomous Databases, in TBs.
     * 
     */
    private @Nullable Double autonomousDataStorageSizeInTbs;
    private String autonomousVmClusterId;
    /**
     * @return List of autonomous vm cluster resource usages.
     * 
     */
    private @Nullable List<GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage> autonomousVmResourceUsages;
    /**
     * @return The data disk group size available for Autonomous Databases, in TBs.
     * 
     */
    private @Nullable Double availableAutonomousDataStorageSizeInTbs;
    /**
     * @return The number of CPU cores available.
     * 
     */
    private @Nullable Double availableCpus;
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    private @Nullable Integer dbNodeStorageSizeInGbs;
    /**
     * @return The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Total exadata storage allocated for the Autonomous VM Cluster. DATA + RECOVERY + SPARSE + any overhead in TBs.
     * 
     */
    private @Nullable Double exadataStorageInTbs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return If true, database backup on local Exadata storage is configured for the Autonomous VM cluster. If false, database backup on local Exadata storage is not available in the Autonomous VM cluster.
     * 
     */
    private @Nullable Boolean isLocalBackupEnabled;
    /**
     * @return The amount of memory (in GBs) to be enabled per each CPU core.
     * 
     */
    private @Nullable Integer memoryPerOracleComputeUnitInGbs;
    /**
     * @return The memory allocated in GBs.
     * 
     */
    private @Nullable Integer memorySizeInGbs;
    /**
     * @return The number of non-provisionable Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    private @Nullable Integer nonProvisionableAutonomousContainerDatabases;
    /**
     * @return The number of provisionable Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    private @Nullable Integer provisionableAutonomousContainerDatabases;
    /**
     * @return The number of provisioned Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    private @Nullable Integer provisionedAutonomousContainerDatabases;
    /**
     * @return The number of CPUs provisioned in an Autonomous VM Cluster.
     * 
     */
    private @Nullable Double provisionedCpus;
    /**
     * @return CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
     * 
     */
    private @Nullable Double reclaimableCpus;
    /**
     * @return The number of CPUs reserved in an Autonomous VM Cluster.
     * 
     */
    private @Nullable Double reservedCpus;
    /**
     * @return The total number of Autonomous Container Databases that can be created.
     * 
     */
    private @Nullable Integer totalContainerDatabases;
    /**
     * @return The number of CPU cores enabled on the Autonomous VM cluster.
     * 
     */
    private @Nullable Double totalCpus;
    /**
     * @return The data disk group size used for Autonomous Databases, in TBs.
     * 
     */
    private @Nullable Double usedAutonomousDataStorageSizeInTbs;
    /**
     * @return The number of CPU cores alloted to the Autonomous Container Databases in an Autonomous VM cluster.
     * 
     */
    private @Nullable Double usedCpus;

    private GetAutonomousVmClusterResourceUsageResult() {}
    /**
     * @return The data disk group size allocated for Autonomous Databases, in TBs.
     * 
     */
    public Optional<Double> autonomousDataStorageSizeInTbs() {
        return Optional.ofNullable(this.autonomousDataStorageSizeInTbs);
    }
    public String autonomousVmClusterId() {
        return this.autonomousVmClusterId;
    }
    /**
     * @return List of autonomous vm cluster resource usages.
     * 
     */
    public List<GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage> autonomousVmResourceUsages() {
        return this.autonomousVmResourceUsages == null ? List.of() : this.autonomousVmResourceUsages;
    }
    /**
     * @return The data disk group size available for Autonomous Databases, in TBs.
     * 
     */
    public Optional<Double> availableAutonomousDataStorageSizeInTbs() {
        return Optional.ofNullable(this.availableAutonomousDataStorageSizeInTbs);
    }
    /**
     * @return The number of CPU cores available.
     * 
     */
    public Optional<Double> availableCpus() {
        return Optional.ofNullable(this.availableCpus);
    }
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    public Optional<Integer> dbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.dbNodeStorageSizeInGbs);
    }
    /**
     * @return The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Total exadata storage allocated for the Autonomous VM Cluster. DATA + RECOVERY + SPARSE + any overhead in TBs.
     * 
     */
    public Optional<Double> exadataStorageInTbs() {
        return Optional.ofNullable(this.exadataStorageInTbs);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return If true, database backup on local Exadata storage is configured for the Autonomous VM cluster. If false, database backup on local Exadata storage is not available in the Autonomous VM cluster.
     * 
     */
    public Optional<Boolean> isLocalBackupEnabled() {
        return Optional.ofNullable(this.isLocalBackupEnabled);
    }
    /**
     * @return The amount of memory (in GBs) to be enabled per each CPU core.
     * 
     */
    public Optional<Integer> memoryPerOracleComputeUnitInGbs() {
        return Optional.ofNullable(this.memoryPerOracleComputeUnitInGbs);
    }
    /**
     * @return The memory allocated in GBs.
     * 
     */
    public Optional<Integer> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }
    /**
     * @return The number of non-provisionable Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    public Optional<Integer> nonProvisionableAutonomousContainerDatabases() {
        return Optional.ofNullable(this.nonProvisionableAutonomousContainerDatabases);
    }
    /**
     * @return The number of provisionable Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    public Optional<Integer> provisionableAutonomousContainerDatabases() {
        return Optional.ofNullable(this.provisionableAutonomousContainerDatabases);
    }
    /**
     * @return The number of provisioned Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    public Optional<Integer> provisionedAutonomousContainerDatabases() {
        return Optional.ofNullable(this.provisionedAutonomousContainerDatabases);
    }
    /**
     * @return The number of CPUs provisioned in an Autonomous VM Cluster.
     * 
     */
    public Optional<Double> provisionedCpus() {
        return Optional.ofNullable(this.provisionedCpus);
    }
    /**
     * @return CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
     * 
     */
    public Optional<Double> reclaimableCpus() {
        return Optional.ofNullable(this.reclaimableCpus);
    }
    /**
     * @return The number of CPUs reserved in an Autonomous VM Cluster.
     * 
     */
    public Optional<Double> reservedCpus() {
        return Optional.ofNullable(this.reservedCpus);
    }
    /**
     * @return The total number of Autonomous Container Databases that can be created.
     * 
     */
    public Optional<Integer> totalContainerDatabases() {
        return Optional.ofNullable(this.totalContainerDatabases);
    }
    /**
     * @return The number of CPU cores enabled on the Autonomous VM cluster.
     * 
     */
    public Optional<Double> totalCpus() {
        return Optional.ofNullable(this.totalCpus);
    }
    /**
     * @return The data disk group size used for Autonomous Databases, in TBs.
     * 
     */
    public Optional<Double> usedAutonomousDataStorageSizeInTbs() {
        return Optional.ofNullable(this.usedAutonomousDataStorageSizeInTbs);
    }
    /**
     * @return The number of CPU cores alloted to the Autonomous Container Databases in an Autonomous VM cluster.
     * 
     */
    public Optional<Double> usedCpus() {
        return Optional.ofNullable(this.usedCpus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousVmClusterResourceUsageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double autonomousDataStorageSizeInTbs;
        private String autonomousVmClusterId;
        private @Nullable List<GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage> autonomousVmResourceUsages;
        private @Nullable Double availableAutonomousDataStorageSizeInTbs;
        private @Nullable Double availableCpus;
        private @Nullable Integer dbNodeStorageSizeInGbs;
        private @Nullable String displayName;
        private @Nullable Double exadataStorageInTbs;
        private @Nullable String id;
        private @Nullable Boolean isLocalBackupEnabled;
        private @Nullable Integer memoryPerOracleComputeUnitInGbs;
        private @Nullable Integer memorySizeInGbs;
        private @Nullable Integer nonProvisionableAutonomousContainerDatabases;
        private @Nullable Integer provisionableAutonomousContainerDatabases;
        private @Nullable Integer provisionedAutonomousContainerDatabases;
        private @Nullable Double provisionedCpus;
        private @Nullable Double reclaimableCpus;
        private @Nullable Double reservedCpus;
        private @Nullable Integer totalContainerDatabases;
        private @Nullable Double totalCpus;
        private @Nullable Double usedAutonomousDataStorageSizeInTbs;
        private @Nullable Double usedCpus;
        public Builder() {}
        public Builder(GetAutonomousVmClusterResourceUsageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDataStorageSizeInTbs = defaults.autonomousDataStorageSizeInTbs;
    	      this.autonomousVmClusterId = defaults.autonomousVmClusterId;
    	      this.autonomousVmResourceUsages = defaults.autonomousVmResourceUsages;
    	      this.availableAutonomousDataStorageSizeInTbs = defaults.availableAutonomousDataStorageSizeInTbs;
    	      this.availableCpus = defaults.availableCpus;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.displayName = defaults.displayName;
    	      this.exadataStorageInTbs = defaults.exadataStorageInTbs;
    	      this.id = defaults.id;
    	      this.isLocalBackupEnabled = defaults.isLocalBackupEnabled;
    	      this.memoryPerOracleComputeUnitInGbs = defaults.memoryPerOracleComputeUnitInGbs;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.nonProvisionableAutonomousContainerDatabases = defaults.nonProvisionableAutonomousContainerDatabases;
    	      this.provisionableAutonomousContainerDatabases = defaults.provisionableAutonomousContainerDatabases;
    	      this.provisionedAutonomousContainerDatabases = defaults.provisionedAutonomousContainerDatabases;
    	      this.provisionedCpus = defaults.provisionedCpus;
    	      this.reclaimableCpus = defaults.reclaimableCpus;
    	      this.reservedCpus = defaults.reservedCpus;
    	      this.totalContainerDatabases = defaults.totalContainerDatabases;
    	      this.totalCpus = defaults.totalCpus;
    	      this.usedAutonomousDataStorageSizeInTbs = defaults.usedAutonomousDataStorageSizeInTbs;
    	      this.usedCpus = defaults.usedCpus;
        }

        @CustomType.Setter
        public Builder autonomousDataStorageSizeInTbs(@Nullable Double autonomousDataStorageSizeInTbs) {
            this.autonomousDataStorageSizeInTbs = autonomousDataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousVmClusterId(String autonomousVmClusterId) {
            this.autonomousVmClusterId = Objects.requireNonNull(autonomousVmClusterId);
            return this;
        }
        @CustomType.Setter
        public Builder autonomousVmResourceUsages(@Nullable List<GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage> autonomousVmResourceUsages) {
            this.autonomousVmResourceUsages = autonomousVmResourceUsages;
            return this;
        }
        public Builder autonomousVmResourceUsages(GetAutonomousVmClusterResourceUsageAutonomousVmResourceUsage... autonomousVmResourceUsages) {
            return autonomousVmResourceUsages(List.of(autonomousVmResourceUsages));
        }
        @CustomType.Setter
        public Builder availableAutonomousDataStorageSizeInTbs(@Nullable Double availableAutonomousDataStorageSizeInTbs) {
            this.availableAutonomousDataStorageSizeInTbs = availableAutonomousDataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder availableCpus(@Nullable Double availableCpus) {
            this.availableCpus = availableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(@Nullable Integer dbNodeStorageSizeInGbs) {
            this.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder exadataStorageInTbs(@Nullable Double exadataStorageInTbs) {
            this.exadataStorageInTbs = exadataStorageInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isLocalBackupEnabled(@Nullable Boolean isLocalBackupEnabled) {
            this.isLocalBackupEnabled = isLocalBackupEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder memoryPerOracleComputeUnitInGbs(@Nullable Integer memoryPerOracleComputeUnitInGbs) {
            this.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(@Nullable Integer memorySizeInGbs) {
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder nonProvisionableAutonomousContainerDatabases(@Nullable Integer nonProvisionableAutonomousContainerDatabases) {
            this.nonProvisionableAutonomousContainerDatabases = nonProvisionableAutonomousContainerDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder provisionableAutonomousContainerDatabases(@Nullable Integer provisionableAutonomousContainerDatabases) {
            this.provisionableAutonomousContainerDatabases = provisionableAutonomousContainerDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedAutonomousContainerDatabases(@Nullable Integer provisionedAutonomousContainerDatabases) {
            this.provisionedAutonomousContainerDatabases = provisionedAutonomousContainerDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedCpus(@Nullable Double provisionedCpus) {
            this.provisionedCpus = provisionedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reclaimableCpus(@Nullable Double reclaimableCpus) {
            this.reclaimableCpus = reclaimableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reservedCpus(@Nullable Double reservedCpus) {
            this.reservedCpus = reservedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder totalContainerDatabases(@Nullable Integer totalContainerDatabases) {
            this.totalContainerDatabases = totalContainerDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder totalCpus(@Nullable Double totalCpus) {
            this.totalCpus = totalCpus;
            return this;
        }
        @CustomType.Setter
        public Builder usedAutonomousDataStorageSizeInTbs(@Nullable Double usedAutonomousDataStorageSizeInTbs) {
            this.usedAutonomousDataStorageSizeInTbs = usedAutonomousDataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder usedCpus(@Nullable Double usedCpus) {
            this.usedCpus = usedCpus;
            return this;
        }
        public GetAutonomousVmClusterResourceUsageResult build() {
            final var o = new GetAutonomousVmClusterResourceUsageResult();
            o.autonomousDataStorageSizeInTbs = autonomousDataStorageSizeInTbs;
            o.autonomousVmClusterId = autonomousVmClusterId;
            o.autonomousVmResourceUsages = autonomousVmResourceUsages;
            o.availableAutonomousDataStorageSizeInTbs = availableAutonomousDataStorageSizeInTbs;
            o.availableCpus = availableCpus;
            o.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            o.displayName = displayName;
            o.exadataStorageInTbs = exadataStorageInTbs;
            o.id = id;
            o.isLocalBackupEnabled = isLocalBackupEnabled;
            o.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            o.memorySizeInGbs = memorySizeInGbs;
            o.nonProvisionableAutonomousContainerDatabases = nonProvisionableAutonomousContainerDatabases;
            o.provisionableAutonomousContainerDatabases = provisionableAutonomousContainerDatabases;
            o.provisionedAutonomousContainerDatabases = provisionedAutonomousContainerDatabases;
            o.provisionedCpus = provisionedCpus;
            o.reclaimableCpus = reclaimableCpus;
            o.reservedCpus = reservedCpus;
            o.totalContainerDatabases = totalContainerDatabases;
            o.totalCpus = totalCpus;
            o.usedAutonomousDataStorageSizeInTbs = usedAutonomousDataStorageSizeInTbs;
            o.usedCpus = usedCpus;
            return o;
        }
    }
}
