// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetAutonomousVmClusterMaintenanceWindow;
import com.pulumi.oci.Database.outputs.GetAutonomousVmClusterMaintenanceWindowDetail;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAutonomousVmClusterResult {
    private Double autonomousDataStoragePercentage;
    /**
     * @return The data disk group size allocated for Autonomous Databases, in TBs.
     * 
     */
    private Double autonomousDataStorageSizeInTbs;
    private String autonomousVmClusterId;
    /**
     * @return The data disk group size available for Autonomous Databases, in TBs.
     * 
     */
    private Double availableAutonomousDataStorageSizeInTbs;
    /**
     * @return The number of Autonomous Container Databases that can be created with the currently available local storage.
     * 
     */
    private Integer availableContainerDatabases;
    /**
     * @return The numnber of CPU cores available.
     * 
     */
    private Integer availableCpus;
    /**
     * @return **Deprecated.** Use `availableAutonomousDataStorageSizeInTBs` for Autonomous Databases&#39; data storage availability in TBs.
     * 
     */
    private Double availableDataStorageSizeInTbs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The compute model of the Autonomous VM Cluster. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata #Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    private String computeModel;
    /**
     * @return The number of CPU cores enabled per VM cluster node.
     * 
     */
    private Integer cpuCoreCountPerNode;
    private Double cpuPercentage;
    /**
     * @return The number of enabled CPU cores.
     * 
     */
    private Integer cpusEnabled;
    /**
     * @return The lowest value to which cpus can be scaled down.
     * 
     */
    private Integer cpusLowestScaledValue;
    /**
     * @return The total data storage allocated in GBs.
     * 
     */
    private Double dataStorageSizeInGb;
    /**
     * @return The total data storage allocated in TBs
     * 
     */
    private Double dataStorageSizeInTbs;
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    private Integer dbNodeStorageSizeInGbs;
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Db servers.
     * 
     */
    private List<String> dbServers;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    private String exadataInfrastructureId;
    /**
     * @return The lowest value to which exadataStorage(in TBs) can be scaled down.
     * 
     */
    private Double exadataStorageInTbsLowestScaledValue;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM cluster.
     * 
     */
    private String id;
    /**
     * @return If true, database backup on local Exadata storage is configured for the Autonomous VM cluster. If false, database backup on local Exadata storage is not available in the Autonomous VM cluster.
     * 
     */
    private Boolean isLocalBackupEnabled;
    /**
     * @return Enable mutual TLS(mTLS) authentication for database while provisioning a VMCluster. Default is TLS.
     * 
     */
    private Boolean isMtlsEnabled;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    private String lastMaintenanceRunId;
    /**
     * @return The Oracle license model that applies to the Autonomous VM cluster. The default is LICENSE_INCLUDED.
     * 
     */
    private String licenseModel;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    private List<GetAutonomousVmClusterMaintenanceWindowDetail> maintenanceWindowDetails;
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    private List<GetAutonomousVmClusterMaintenanceWindow> maintenanceWindows;
    /**
     * @return The lowest value to which maximum number of ACDs can be scaled down.
     * 
     */
    private Integer maxAcdsLowestScaledValue;
    /**
     * @return The amount of memory (in GBs) to be enabled per OCPU or ECPU.
     * 
     */
    private Integer memoryPerOracleComputeUnitInGbs;
    /**
     * @return The memory allocated in GBs.
     * 
     */
    private Integer memorySizeInGbs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    private String nextMaintenanceRunId;
    /**
     * @return The number of nodes in the Autonomous VM Cluster.
     * 
     */
    private Integer nodeCount;
    private Integer nonProvisionableAutonomousContainerDatabases;
    /**
     * @return The number of enabled OCPU cores.
     * 
     */
    private Double ocpusEnabled;
    /**
     * @return **Deprecated.** Use field totalContainerDatabases.
     * 
     */
    private Integer provisionableAutonomousContainerDatabases;
    /**
     * @return The number of provisioned Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    private Integer provisionedAutonomousContainerDatabases;
    /**
     * @return The number of CPUs provisioned in an Autonomous VM Cluster.
     * 
     */
    private Double provisionedCpus;
    /**
     * @return CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
     * 
     */
    private Integer reclaimableCpus;
    /**
     * @return The number of CPUs reserved in an Autonomous VM Cluster.
     * 
     */
    private Double reservedCpus;
    /**
     * @return The SCAN Listener Non TLS port number. Default value is 1521.
     * 
     */
    private Integer scanListenerPortNonTls;
    /**
     * @return The SCAN Listener TLS port number. Default value is 2484.
     * 
     */
    private Integer scanListenerPortTls;
    /**
     * @return The current state of the Autonomous VM cluster.
     * 
     */
    private String state;
    /**
     * @return The date and time that the Autonomous VM cluster was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time of Database SSL certificate expiration.
     * 
     */
    private String timeDatabaseSslCertificateExpires;
    /**
     * @return The date and time of ORDS certificate expiration.
     * 
     */
    private String timeOrdsCertificateExpires;
    /**
     * @return The time zone to use for the Autonomous VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    private String timeZone;
    private Double totalAutonomousDataStorageInTbs;
    /**
     * @return The total number of Autonomous Container Databases that can be created.
     * 
     */
    private Integer totalContainerDatabases;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
     * 
     */
    private String vmClusterNetworkId;

    private GetAutonomousVmClusterResult() {}
    public Double autonomousDataStoragePercentage() {
        return this.autonomousDataStoragePercentage;
    }
    /**
     * @return The data disk group size allocated for Autonomous Databases, in TBs.
     * 
     */
    public Double autonomousDataStorageSizeInTbs() {
        return this.autonomousDataStorageSizeInTbs;
    }
    public String autonomousVmClusterId() {
        return this.autonomousVmClusterId;
    }
    /**
     * @return The data disk group size available for Autonomous Databases, in TBs.
     * 
     */
    public Double availableAutonomousDataStorageSizeInTbs() {
        return this.availableAutonomousDataStorageSizeInTbs;
    }
    /**
     * @return The number of Autonomous Container Databases that can be created with the currently available local storage.
     * 
     */
    public Integer availableContainerDatabases() {
        return this.availableContainerDatabases;
    }
    /**
     * @return The numnber of CPU cores available.
     * 
     */
    public Integer availableCpus() {
        return this.availableCpus;
    }
    /**
     * @return **Deprecated.** Use `availableAutonomousDataStorageSizeInTBs` for Autonomous Databases&#39; data storage availability in TBs.
     * 
     */
    public Double availableDataStorageSizeInTbs() {
        return this.availableDataStorageSizeInTbs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The compute model of the Autonomous VM Cluster. ECPU compute model is the recommended model and OCPU compute model is legacy. See [Compute Models in Autonomous Database on Dedicated Exadata #Infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbak) for more details.
     * 
     */
    public String computeModel() {
        return this.computeModel;
    }
    /**
     * @return The number of CPU cores enabled per VM cluster node.
     * 
     */
    public Integer cpuCoreCountPerNode() {
        return this.cpuCoreCountPerNode;
    }
    public Double cpuPercentage() {
        return this.cpuPercentage;
    }
    /**
     * @return The number of enabled CPU cores.
     * 
     */
    public Integer cpusEnabled() {
        return this.cpusEnabled;
    }
    /**
     * @return The lowest value to which cpus can be scaled down.
     * 
     */
    public Integer cpusLowestScaledValue() {
        return this.cpusLowestScaledValue;
    }
    /**
     * @return The total data storage allocated in GBs.
     * 
     */
    public Double dataStorageSizeInGb() {
        return this.dataStorageSizeInGb;
    }
    /**
     * @return The total data storage allocated in TBs
     * 
     */
    public Double dataStorageSizeInTbs() {
        return this.dataStorageSizeInTbs;
    }
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Db servers.
     * 
     */
    public List<String> dbServers() {
        return this.dbServers;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    public String exadataInfrastructureId() {
        return this.exadataInfrastructureId;
    }
    /**
     * @return The lowest value to which exadataStorage(in TBs) can be scaled down.
     * 
     */
    public Double exadataStorageInTbsLowestScaledValue() {
        return this.exadataStorageInTbsLowestScaledValue;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM cluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return If true, database backup on local Exadata storage is configured for the Autonomous VM cluster. If false, database backup on local Exadata storage is not available in the Autonomous VM cluster.
     * 
     */
    public Boolean isLocalBackupEnabled() {
        return this.isLocalBackupEnabled;
    }
    /**
     * @return Enable mutual TLS(mTLS) authentication for database while provisioning a VMCluster. Default is TLS.
     * 
     */
    public Boolean isMtlsEnabled() {
        return this.isMtlsEnabled;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    public String lastMaintenanceRunId() {
        return this.lastMaintenanceRunId;
    }
    /**
     * @return The Oracle license model that applies to the Autonomous VM cluster. The default is LICENSE_INCLUDED.
     * 
     */
    public String licenseModel() {
        return this.licenseModel;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public List<GetAutonomousVmClusterMaintenanceWindowDetail> maintenanceWindowDetails() {
        return this.maintenanceWindowDetails;
    }
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public List<GetAutonomousVmClusterMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return The lowest value to which maximum number of ACDs can be scaled down.
     * 
     */
    public Integer maxAcdsLowestScaledValue() {
        return this.maxAcdsLowestScaledValue;
    }
    /**
     * @return The amount of memory (in GBs) to be enabled per OCPU or ECPU.
     * 
     */
    public Integer memoryPerOracleComputeUnitInGbs() {
        return this.memoryPerOracleComputeUnitInGbs;
    }
    /**
     * @return The memory allocated in GBs.
     * 
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    public String nextMaintenanceRunId() {
        return this.nextMaintenanceRunId;
    }
    /**
     * @return The number of nodes in the Autonomous VM Cluster.
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    public Integer nonProvisionableAutonomousContainerDatabases() {
        return this.nonProvisionableAutonomousContainerDatabases;
    }
    /**
     * @return The number of enabled OCPU cores.
     * 
     */
    public Double ocpusEnabled() {
        return this.ocpusEnabled;
    }
    /**
     * @return **Deprecated.** Use field totalContainerDatabases.
     * 
     */
    public Integer provisionableAutonomousContainerDatabases() {
        return this.provisionableAutonomousContainerDatabases;
    }
    /**
     * @return The number of provisioned Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    public Integer provisionedAutonomousContainerDatabases() {
        return this.provisionedAutonomousContainerDatabases;
    }
    /**
     * @return The number of CPUs provisioned in an Autonomous VM Cluster.
     * 
     */
    public Double provisionedCpus() {
        return this.provisionedCpus;
    }
    /**
     * @return CPUs that continue to be included in the count of CPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available CPUs at its parent Autonomous VM Cluster level by restarting the Autonomous Container Database.
     * 
     */
    public Integer reclaimableCpus() {
        return this.reclaimableCpus;
    }
    /**
     * @return The number of CPUs reserved in an Autonomous VM Cluster.
     * 
     */
    public Double reservedCpus() {
        return this.reservedCpus;
    }
    /**
     * @return The SCAN Listener Non TLS port number. Default value is 1521.
     * 
     */
    public Integer scanListenerPortNonTls() {
        return this.scanListenerPortNonTls;
    }
    /**
     * @return The SCAN Listener TLS port number. Default value is 2484.
     * 
     */
    public Integer scanListenerPortTls() {
        return this.scanListenerPortTls;
    }
    /**
     * @return The current state of the Autonomous VM cluster.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time that the Autonomous VM cluster was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time of Database SSL certificate expiration.
     * 
     */
    public String timeDatabaseSslCertificateExpires() {
        return this.timeDatabaseSslCertificateExpires;
    }
    /**
     * @return The date and time of ORDS certificate expiration.
     * 
     */
    public String timeOrdsCertificateExpires() {
        return this.timeOrdsCertificateExpires;
    }
    /**
     * @return The time zone to use for the Autonomous VM cluster. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    public Double totalAutonomousDataStorageInTbs() {
        return this.totalAutonomousDataStorageInTbs;
    }
    /**
     * @return The total number of Autonomous Container Databases that can be created.
     * 
     */
    public Integer totalContainerDatabases() {
        return this.totalContainerDatabases;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
     * 
     */
    public String vmClusterNetworkId() {
        return this.vmClusterNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousVmClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double autonomousDataStoragePercentage;
        private Double autonomousDataStorageSizeInTbs;
        private String autonomousVmClusterId;
        private Double availableAutonomousDataStorageSizeInTbs;
        private Integer availableContainerDatabases;
        private Integer availableCpus;
        private Double availableDataStorageSizeInTbs;
        private String compartmentId;
        private String computeModel;
        private Integer cpuCoreCountPerNode;
        private Double cpuPercentage;
        private Integer cpusEnabled;
        private Integer cpusLowestScaledValue;
        private Double dataStorageSizeInGb;
        private Double dataStorageSizeInTbs;
        private Integer dbNodeStorageSizeInGbs;
        private List<String> dbServers;
        private Map<String,Object> definedTags;
        private String displayName;
        private String exadataInfrastructureId;
        private Double exadataStorageInTbsLowestScaledValue;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isLocalBackupEnabled;
        private Boolean isMtlsEnabled;
        private String lastMaintenanceRunId;
        private String licenseModel;
        private String lifecycleDetails;
        private List<GetAutonomousVmClusterMaintenanceWindowDetail> maintenanceWindowDetails;
        private List<GetAutonomousVmClusterMaintenanceWindow> maintenanceWindows;
        private Integer maxAcdsLowestScaledValue;
        private Integer memoryPerOracleComputeUnitInGbs;
        private Integer memorySizeInGbs;
        private String nextMaintenanceRunId;
        private Integer nodeCount;
        private Integer nonProvisionableAutonomousContainerDatabases;
        private Double ocpusEnabled;
        private Integer provisionableAutonomousContainerDatabases;
        private Integer provisionedAutonomousContainerDatabases;
        private Double provisionedCpus;
        private Integer reclaimableCpus;
        private Double reservedCpus;
        private Integer scanListenerPortNonTls;
        private Integer scanListenerPortTls;
        private String state;
        private String timeCreated;
        private String timeDatabaseSslCertificateExpires;
        private String timeOrdsCertificateExpires;
        private String timeZone;
        private Double totalAutonomousDataStorageInTbs;
        private Integer totalContainerDatabases;
        private String vmClusterNetworkId;
        public Builder() {}
        public Builder(GetAutonomousVmClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDataStoragePercentage = defaults.autonomousDataStoragePercentage;
    	      this.autonomousDataStorageSizeInTbs = defaults.autonomousDataStorageSizeInTbs;
    	      this.autonomousVmClusterId = defaults.autonomousVmClusterId;
    	      this.availableAutonomousDataStorageSizeInTbs = defaults.availableAutonomousDataStorageSizeInTbs;
    	      this.availableContainerDatabases = defaults.availableContainerDatabases;
    	      this.availableCpus = defaults.availableCpus;
    	      this.availableDataStorageSizeInTbs = defaults.availableDataStorageSizeInTbs;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeModel = defaults.computeModel;
    	      this.cpuCoreCountPerNode = defaults.cpuCoreCountPerNode;
    	      this.cpuPercentage = defaults.cpuPercentage;
    	      this.cpusEnabled = defaults.cpusEnabled;
    	      this.cpusLowestScaledValue = defaults.cpusLowestScaledValue;
    	      this.dataStorageSizeInGb = defaults.dataStorageSizeInGb;
    	      this.dataStorageSizeInTbs = defaults.dataStorageSizeInTbs;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.dbServers = defaults.dbServers;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.exadataInfrastructureId = defaults.exadataInfrastructureId;
    	      this.exadataStorageInTbsLowestScaledValue = defaults.exadataStorageInTbsLowestScaledValue;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isLocalBackupEnabled = defaults.isLocalBackupEnabled;
    	      this.isMtlsEnabled = defaults.isMtlsEnabled;
    	      this.lastMaintenanceRunId = defaults.lastMaintenanceRunId;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maintenanceWindowDetails = defaults.maintenanceWindowDetails;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.maxAcdsLowestScaledValue = defaults.maxAcdsLowestScaledValue;
    	      this.memoryPerOracleComputeUnitInGbs = defaults.memoryPerOracleComputeUnitInGbs;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.nextMaintenanceRunId = defaults.nextMaintenanceRunId;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nonProvisionableAutonomousContainerDatabases = defaults.nonProvisionableAutonomousContainerDatabases;
    	      this.ocpusEnabled = defaults.ocpusEnabled;
    	      this.provisionableAutonomousContainerDatabases = defaults.provisionableAutonomousContainerDatabases;
    	      this.provisionedAutonomousContainerDatabases = defaults.provisionedAutonomousContainerDatabases;
    	      this.provisionedCpus = defaults.provisionedCpus;
    	      this.reclaimableCpus = defaults.reclaimableCpus;
    	      this.reservedCpus = defaults.reservedCpus;
    	      this.scanListenerPortNonTls = defaults.scanListenerPortNonTls;
    	      this.scanListenerPortTls = defaults.scanListenerPortTls;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeDatabaseSslCertificateExpires = defaults.timeDatabaseSslCertificateExpires;
    	      this.timeOrdsCertificateExpires = defaults.timeOrdsCertificateExpires;
    	      this.timeZone = defaults.timeZone;
    	      this.totalAutonomousDataStorageInTbs = defaults.totalAutonomousDataStorageInTbs;
    	      this.totalContainerDatabases = defaults.totalContainerDatabases;
    	      this.vmClusterNetworkId = defaults.vmClusterNetworkId;
        }

        @CustomType.Setter
        public Builder autonomousDataStoragePercentage(Double autonomousDataStoragePercentage) {
            if (autonomousDataStoragePercentage == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "autonomousDataStoragePercentage");
            }
            this.autonomousDataStoragePercentage = autonomousDataStoragePercentage;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousDataStorageSizeInTbs(Double autonomousDataStorageSizeInTbs) {
            if (autonomousDataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "autonomousDataStorageSizeInTbs");
            }
            this.autonomousDataStorageSizeInTbs = autonomousDataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousVmClusterId(String autonomousVmClusterId) {
            if (autonomousVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "autonomousVmClusterId");
            }
            this.autonomousVmClusterId = autonomousVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder availableAutonomousDataStorageSizeInTbs(Double availableAutonomousDataStorageSizeInTbs) {
            if (availableAutonomousDataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "availableAutonomousDataStorageSizeInTbs");
            }
            this.availableAutonomousDataStorageSizeInTbs = availableAutonomousDataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder availableContainerDatabases(Integer availableContainerDatabases) {
            if (availableContainerDatabases == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "availableContainerDatabases");
            }
            this.availableContainerDatabases = availableContainerDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder availableCpus(Integer availableCpus) {
            if (availableCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "availableCpus");
            }
            this.availableCpus = availableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder availableDataStorageSizeInTbs(Double availableDataStorageSizeInTbs) {
            if (availableDataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "availableDataStorageSizeInTbs");
            }
            this.availableDataStorageSizeInTbs = availableDataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeModel(String computeModel) {
            if (computeModel == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "computeModel");
            }
            this.computeModel = computeModel;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCountPerNode(Integer cpuCoreCountPerNode) {
            if (cpuCoreCountPerNode == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "cpuCoreCountPerNode");
            }
            this.cpuCoreCountPerNode = cpuCoreCountPerNode;
            return this;
        }
        @CustomType.Setter
        public Builder cpuPercentage(Double cpuPercentage) {
            if (cpuPercentage == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "cpuPercentage");
            }
            this.cpuPercentage = cpuPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder cpusEnabled(Integer cpusEnabled) {
            if (cpusEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "cpusEnabled");
            }
            this.cpusEnabled = cpusEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder cpusLowestScaledValue(Integer cpusLowestScaledValue) {
            if (cpusLowestScaledValue == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "cpusLowestScaledValue");
            }
            this.cpusLowestScaledValue = cpusLowestScaledValue;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeInGb(Double dataStorageSizeInGb) {
            if (dataStorageSizeInGb == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "dataStorageSizeInGb");
            }
            this.dataStorageSizeInGb = dataStorageSizeInGb;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            if (dataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "dataStorageSizeInTbs");
            }
            this.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            if (dbNodeStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "dbNodeStorageSizeInGbs");
            }
            this.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbServers(List<String> dbServers) {
            if (dbServers == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "dbServers");
            }
            this.dbServers = dbServers;
            return this;
        }
        public Builder dbServers(String... dbServers) {
            return dbServers(List.of(dbServers));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder exadataInfrastructureId(String exadataInfrastructureId) {
            if (exadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "exadataInfrastructureId");
            }
            this.exadataInfrastructureId = exadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder exadataStorageInTbsLowestScaledValue(Double exadataStorageInTbsLowestScaledValue) {
            if (exadataStorageInTbsLowestScaledValue == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "exadataStorageInTbsLowestScaledValue");
            }
            this.exadataStorageInTbsLowestScaledValue = exadataStorageInTbsLowestScaledValue;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isLocalBackupEnabled(Boolean isLocalBackupEnabled) {
            if (isLocalBackupEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "isLocalBackupEnabled");
            }
            this.isLocalBackupEnabled = isLocalBackupEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isMtlsEnabled(Boolean isMtlsEnabled) {
            if (isMtlsEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "isMtlsEnabled");
            }
            this.isMtlsEnabled = isMtlsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lastMaintenanceRunId(String lastMaintenanceRunId) {
            if (lastMaintenanceRunId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "lastMaintenanceRunId");
            }
            this.lastMaintenanceRunId = lastMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(String licenseModel) {
            if (licenseModel == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "licenseModel");
            }
            this.licenseModel = licenseModel;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindowDetails(List<GetAutonomousVmClusterMaintenanceWindowDetail> maintenanceWindowDetails) {
            if (maintenanceWindowDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "maintenanceWindowDetails");
            }
            this.maintenanceWindowDetails = maintenanceWindowDetails;
            return this;
        }
        public Builder maintenanceWindowDetails(GetAutonomousVmClusterMaintenanceWindowDetail... maintenanceWindowDetails) {
            return maintenanceWindowDetails(List.of(maintenanceWindowDetails));
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetAutonomousVmClusterMaintenanceWindow> maintenanceWindows) {
            if (maintenanceWindows == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "maintenanceWindows");
            }
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetAutonomousVmClusterMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder maxAcdsLowestScaledValue(Integer maxAcdsLowestScaledValue) {
            if (maxAcdsLowestScaledValue == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "maxAcdsLowestScaledValue");
            }
            this.maxAcdsLowestScaledValue = maxAcdsLowestScaledValue;
            return this;
        }
        @CustomType.Setter
        public Builder memoryPerOracleComputeUnitInGbs(Integer memoryPerOracleComputeUnitInGbs) {
            if (memoryPerOracleComputeUnitInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "memoryPerOracleComputeUnitInGbs");
            }
            this.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            if (memorySizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "memorySizeInGbs");
            }
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceRunId(String nextMaintenanceRunId) {
            if (nextMaintenanceRunId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "nextMaintenanceRunId");
            }
            this.nextMaintenanceRunId = nextMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(Integer nodeCount) {
            if (nodeCount == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "nodeCount");
            }
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder nonProvisionableAutonomousContainerDatabases(Integer nonProvisionableAutonomousContainerDatabases) {
            if (nonProvisionableAutonomousContainerDatabases == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "nonProvisionableAutonomousContainerDatabases");
            }
            this.nonProvisionableAutonomousContainerDatabases = nonProvisionableAutonomousContainerDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder ocpusEnabled(Double ocpusEnabled) {
            if (ocpusEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "ocpusEnabled");
            }
            this.ocpusEnabled = ocpusEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder provisionableAutonomousContainerDatabases(Integer provisionableAutonomousContainerDatabases) {
            if (provisionableAutonomousContainerDatabases == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "provisionableAutonomousContainerDatabases");
            }
            this.provisionableAutonomousContainerDatabases = provisionableAutonomousContainerDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedAutonomousContainerDatabases(Integer provisionedAutonomousContainerDatabases) {
            if (provisionedAutonomousContainerDatabases == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "provisionedAutonomousContainerDatabases");
            }
            this.provisionedAutonomousContainerDatabases = provisionedAutonomousContainerDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder provisionedCpus(Double provisionedCpus) {
            if (provisionedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "provisionedCpus");
            }
            this.provisionedCpus = provisionedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reclaimableCpus(Integer reclaimableCpus) {
            if (reclaimableCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "reclaimableCpus");
            }
            this.reclaimableCpus = reclaimableCpus;
            return this;
        }
        @CustomType.Setter
        public Builder reservedCpus(Double reservedCpus) {
            if (reservedCpus == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "reservedCpus");
            }
            this.reservedCpus = reservedCpus;
            return this;
        }
        @CustomType.Setter
        public Builder scanListenerPortNonTls(Integer scanListenerPortNonTls) {
            if (scanListenerPortNonTls == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "scanListenerPortNonTls");
            }
            this.scanListenerPortNonTls = scanListenerPortNonTls;
            return this;
        }
        @CustomType.Setter
        public Builder scanListenerPortTls(Integer scanListenerPortTls) {
            if (scanListenerPortTls == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "scanListenerPortTls");
            }
            this.scanListenerPortTls = scanListenerPortTls;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeDatabaseSslCertificateExpires(String timeDatabaseSslCertificateExpires) {
            if (timeDatabaseSslCertificateExpires == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "timeDatabaseSslCertificateExpires");
            }
            this.timeDatabaseSslCertificateExpires = timeDatabaseSslCertificateExpires;
            return this;
        }
        @CustomType.Setter
        public Builder timeOrdsCertificateExpires(String timeOrdsCertificateExpires) {
            if (timeOrdsCertificateExpires == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "timeOrdsCertificateExpires");
            }
            this.timeOrdsCertificateExpires = timeOrdsCertificateExpires;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder totalAutonomousDataStorageInTbs(Double totalAutonomousDataStorageInTbs) {
            if (totalAutonomousDataStorageInTbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "totalAutonomousDataStorageInTbs");
            }
            this.totalAutonomousDataStorageInTbs = totalAutonomousDataStorageInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder totalContainerDatabases(Integer totalContainerDatabases) {
            if (totalContainerDatabases == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "totalContainerDatabases");
            }
            this.totalContainerDatabases = totalContainerDatabases;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterNetworkId(String vmClusterNetworkId) {
            if (vmClusterNetworkId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousVmClusterResult", "vmClusterNetworkId");
            }
            this.vmClusterNetworkId = vmClusterNetworkId;
            return this;
        }
        public GetAutonomousVmClusterResult build() {
            final var _resultValue = new GetAutonomousVmClusterResult();
            _resultValue.autonomousDataStoragePercentage = autonomousDataStoragePercentage;
            _resultValue.autonomousDataStorageSizeInTbs = autonomousDataStorageSizeInTbs;
            _resultValue.autonomousVmClusterId = autonomousVmClusterId;
            _resultValue.availableAutonomousDataStorageSizeInTbs = availableAutonomousDataStorageSizeInTbs;
            _resultValue.availableContainerDatabases = availableContainerDatabases;
            _resultValue.availableCpus = availableCpus;
            _resultValue.availableDataStorageSizeInTbs = availableDataStorageSizeInTbs;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeModel = computeModel;
            _resultValue.cpuCoreCountPerNode = cpuCoreCountPerNode;
            _resultValue.cpuPercentage = cpuPercentage;
            _resultValue.cpusEnabled = cpusEnabled;
            _resultValue.cpusLowestScaledValue = cpusLowestScaledValue;
            _resultValue.dataStorageSizeInGb = dataStorageSizeInGb;
            _resultValue.dataStorageSizeInTbs = dataStorageSizeInTbs;
            _resultValue.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            _resultValue.dbServers = dbServers;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.exadataInfrastructureId = exadataInfrastructureId;
            _resultValue.exadataStorageInTbsLowestScaledValue = exadataStorageInTbsLowestScaledValue;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isLocalBackupEnabled = isLocalBackupEnabled;
            _resultValue.isMtlsEnabled = isMtlsEnabled;
            _resultValue.lastMaintenanceRunId = lastMaintenanceRunId;
            _resultValue.licenseModel = licenseModel;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.maintenanceWindowDetails = maintenanceWindowDetails;
            _resultValue.maintenanceWindows = maintenanceWindows;
            _resultValue.maxAcdsLowestScaledValue = maxAcdsLowestScaledValue;
            _resultValue.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            _resultValue.memorySizeInGbs = memorySizeInGbs;
            _resultValue.nextMaintenanceRunId = nextMaintenanceRunId;
            _resultValue.nodeCount = nodeCount;
            _resultValue.nonProvisionableAutonomousContainerDatabases = nonProvisionableAutonomousContainerDatabases;
            _resultValue.ocpusEnabled = ocpusEnabled;
            _resultValue.provisionableAutonomousContainerDatabases = provisionableAutonomousContainerDatabases;
            _resultValue.provisionedAutonomousContainerDatabases = provisionedAutonomousContainerDatabases;
            _resultValue.provisionedCpus = provisionedCpus;
            _resultValue.reclaimableCpus = reclaimableCpus;
            _resultValue.reservedCpus = reservedCpus;
            _resultValue.scanListenerPortNonTls = scanListenerPortNonTls;
            _resultValue.scanListenerPortTls = scanListenerPortTls;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeDatabaseSslCertificateExpires = timeDatabaseSslCertificateExpires;
            _resultValue.timeOrdsCertificateExpires = timeOrdsCertificateExpires;
            _resultValue.timeZone = timeZone;
            _resultValue.totalAutonomousDataStorageInTbs = totalAutonomousDataStorageInTbs;
            _resultValue.totalContainerDatabases = totalContainerDatabases;
            _resultValue.vmClusterNetworkId = vmClusterNetworkId;
            return _resultValue;
        }
    }
}
