// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetBackupDestinationsBackupDestinationAssociatedDatabase;
import com.pulumi.oci.Database.outputs.GetBackupDestinationsBackupDestinationMountTypeDetail;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBackupDestinationsBackupDestination {
    /**
     * @return List of databases associated with the backup destination.
     * 
     */
    private @Nullable List<GetBackupDestinationsBackupDestinationAssociatedDatabase> associatedDatabases;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the connection string for connecting to the Recovery Appliance.
     * 
     */
    private @Nullable String connectionString;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The user-provided name of the backup destination.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     * 
     */
    private @Nullable String id;
    /**
     * @return A descriptive text associated with the lifecycleState. Typically contains additional displayable text
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
     * 
     * @deprecated
     * The &#39;local_mount_point_path&#39; field has been deprecated. Please use &#39;local_mount_point_path under mount_type_details&#39; instead.
     * 
     */
    @Deprecated /* The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead. */
    private @Nullable String localMountPointPath;
    private @Nullable List<GetBackupDestinationsBackupDestinationMountTypeDetail> mountTypeDetails;
    /**
     * @return NFS Mount type for backup destination.
     * 
     */
    private @Nullable String nfsMountType;
    /**
     * @return Specifies the directory on which to mount the file system
     * 
     */
    private @Nullable String nfsServerExport;
    /**
     * @return Host names or IP addresses for NFS Auto mount.
     * 
     */
    private @Nullable List<String> nfsServers;
    /**
     * @return The current lifecycle state of the backup destination.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the backup destination was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return A filter to return only resources that match the given type of the Backup Destination.
     * 
     */
    private @Nullable String type;
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
     * 
     */
    private @Nullable List<String> vpcUsers;

    private GetBackupDestinationsBackupDestination() {}
    /**
     * @return List of databases associated with the backup destination.
     * 
     */
    public List<GetBackupDestinationsBackupDestinationAssociatedDatabase> associatedDatabases() {
        return this.associatedDatabases == null ? List.of() : this.associatedDatabases;
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the connection string for connecting to the Recovery Appliance.
     * 
     */
    public Optional<String> connectionString() {
        return Optional.ofNullable(this.connectionString);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The user-provided name of the backup destination.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A descriptive text associated with the lifecycleState. Typically contains additional displayable text
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The local directory path on each VM cluster node where the NFS server location is mounted. The local directory path and the NFS server location must each be the same across all of the VM cluster nodes. Ensure that the NFS mount is maintained continuously on all of the VM cluster nodes.
     * 
     * @deprecated
     * The &#39;local_mount_point_path&#39; field has been deprecated. Please use &#39;local_mount_point_path under mount_type_details&#39; instead.
     * 
     */
    @Deprecated /* The 'local_mount_point_path' field has been deprecated. Please use 'local_mount_point_path under mount_type_details' instead. */
    public Optional<String> localMountPointPath() {
        return Optional.ofNullable(this.localMountPointPath);
    }
    public List<GetBackupDestinationsBackupDestinationMountTypeDetail> mountTypeDetails() {
        return this.mountTypeDetails == null ? List.of() : this.mountTypeDetails;
    }
    /**
     * @return NFS Mount type for backup destination.
     * 
     */
    public Optional<String> nfsMountType() {
        return Optional.ofNullable(this.nfsMountType);
    }
    /**
     * @return Specifies the directory on which to mount the file system
     * 
     */
    public Optional<String> nfsServerExport() {
        return Optional.ofNullable(this.nfsServerExport);
    }
    /**
     * @return Host names or IP addresses for NFS Auto mount.
     * 
     */
    public List<String> nfsServers() {
        return this.nfsServers == null ? List.of() : this.nfsServers;
    }
    /**
     * @return The current lifecycle state of the backup destination.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the backup destination was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return A filter to return only resources that match the given type of the Backup Destination.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return For a RECOVERY_APPLIANCE backup destination, the Virtual Private Catalog (VPC) users that are used to access the Recovery Appliance.
     * 
     */
    public List<String> vpcUsers() {
        return this.vpcUsers == null ? List.of() : this.vpcUsers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupDestinationsBackupDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetBackupDestinationsBackupDestinationAssociatedDatabase> associatedDatabases;
        private @Nullable String compartmentId;
        private @Nullable String connectionString;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String localMountPointPath;
        private @Nullable List<GetBackupDestinationsBackupDestinationMountTypeDetail> mountTypeDetails;
        private @Nullable String nfsMountType;
        private @Nullable String nfsServerExport;
        private @Nullable List<String> nfsServers;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String type;
        private @Nullable List<String> vpcUsers;
        public Builder() {}
        public Builder(GetBackupDestinationsBackupDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedDatabases = defaults.associatedDatabases;
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionString = defaults.connectionString;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.localMountPointPath = defaults.localMountPointPath;
    	      this.mountTypeDetails = defaults.mountTypeDetails;
    	      this.nfsMountType = defaults.nfsMountType;
    	      this.nfsServerExport = defaults.nfsServerExport;
    	      this.nfsServers = defaults.nfsServers;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.type = defaults.type;
    	      this.vpcUsers = defaults.vpcUsers;
        }

        @CustomType.Setter
        public Builder associatedDatabases(@Nullable List<GetBackupDestinationsBackupDestinationAssociatedDatabase> associatedDatabases) {
            this.associatedDatabases = associatedDatabases;
            return this;
        }
        public Builder associatedDatabases(GetBackupDestinationsBackupDestinationAssociatedDatabase... associatedDatabases) {
            return associatedDatabases(List.of(associatedDatabases));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectionString(@Nullable String connectionString) {
            this.connectionString = connectionString;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder localMountPointPath(@Nullable String localMountPointPath) {
            this.localMountPointPath = localMountPointPath;
            return this;
        }
        @CustomType.Setter
        public Builder mountTypeDetails(@Nullable List<GetBackupDestinationsBackupDestinationMountTypeDetail> mountTypeDetails) {
            this.mountTypeDetails = mountTypeDetails;
            return this;
        }
        public Builder mountTypeDetails(GetBackupDestinationsBackupDestinationMountTypeDetail... mountTypeDetails) {
            return mountTypeDetails(List.of(mountTypeDetails));
        }
        @CustomType.Setter
        public Builder nfsMountType(@Nullable String nfsMountType) {
            this.nfsMountType = nfsMountType;
            return this;
        }
        @CustomType.Setter
        public Builder nfsServerExport(@Nullable String nfsServerExport) {
            this.nfsServerExport = nfsServerExport;
            return this;
        }
        @CustomType.Setter
        public Builder nfsServers(@Nullable List<String> nfsServers) {
            this.nfsServers = nfsServers;
            return this;
        }
        public Builder nfsServers(String... nfsServers) {
            return nfsServers(List.of(nfsServers));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vpcUsers(@Nullable List<String> vpcUsers) {
            this.vpcUsers = vpcUsers;
            return this;
        }
        public Builder vpcUsers(String... vpcUsers) {
            return vpcUsers(List.of(vpcUsers));
        }
        public GetBackupDestinationsBackupDestination build() {
            final var o = new GetBackupDestinationsBackupDestination();
            o.associatedDatabases = associatedDatabases;
            o.compartmentId = compartmentId;
            o.connectionString = connectionString;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.localMountPointPath = localMountPointPath;
            o.mountTypeDetails = mountTypeDetails;
            o.nfsMountType = nfsMountType;
            o.nfsServerExport = nfsServerExport;
            o.nfsServers = nfsServers;
            o.state = state;
            o.timeCreated = timeCreated;
            o.type = type;
            o.vpcUsers = vpcUsers;
            return o;
        }
    }
}
