// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetBackupsBackup;
import com.pulumi.oci.Database.outputs.GetBackupsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBackupsResult {
    /**
     * @return The list of backups.
     * 
     */
    private @Nullable List<GetBackupsBackup> backups;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    private @Nullable String databaseId;
    private @Nullable List<GetBackupsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;

    private GetBackupsResult() {}
    /**
     * @return The list of backups.
     * 
     */
    public List<GetBackupsBackup> backups() {
        return this.backups == null ? List.of() : this.backups;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    public Optional<String> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }
    public List<GetBackupsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetBackupsBackup> backups;
        private @Nullable String compartmentId;
        private @Nullable String databaseId;
        private @Nullable List<GetBackupsFilter> filters;
        private @Nullable String id;
        public Builder() {}
        public Builder(GetBackupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backups = defaults.backups;
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseId = defaults.databaseId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder backups(@Nullable List<GetBackupsBackup> backups) {
            this.backups = backups;
            return this;
        }
        public Builder backups(GetBackupsBackup... backups) {
            return backups(List.of(backups));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseId(@Nullable String databaseId) {
            this.databaseId = databaseId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetBackupsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetBackupsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public GetBackupsResult build() {
            final var o = new GetBackupsResult();
            o.backups = backups;
            o.compartmentId = compartmentId;
            o.databaseId = databaseId;
            o.filters = filters;
            o.id = id;
            return o;
        }
    }
}
