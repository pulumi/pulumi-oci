// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetCloudAutonomousVmClusterResourceUsageAutonomousVmResourceUsage;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudAutonomousVmClusterResourceUsageResult {
    /**
     * @return The data disk group size allocated for Autonomous Databases, in TBs.
     * 
     */
    private Double autonomousDataStorageSizeInTbs;
    /**
     * @return List of Autonomous VM resource usages.
     * 
     */
    private List<GetCloudAutonomousVmClusterResourceUsageAutonomousVmResourceUsage> autonomousVmResourceUsages;
    /**
     * @return The data disk group size available for Autonomous Databases, in TBs.
     * 
     */
    private Double availableAutonomousDataStorageSizeInTbs;
    /**
     * @return The number of CPU cores available.
     * 
     */
    private Double availableCpus;
    private String cloudAutonomousVmClusterId;
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    private Integer dbNodeStorageSizeInGbs;
    /**
     * @return The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return Total exadata storage allocated for the Autonomous VM Cluster. DATA + RECOVERY + SPARSE + any overhead in TBs.
     * 
     */
    private Double exadataStorageInTbs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The amount of memory (in GBs) to be enabled per each CPU core.
     * 
     */
    private Integer memoryPerOracleComputeUnitInGbs;
    /**
     * @return The memory allocated in GBs.
     * 
     */
    private Integer memorySizeInGbs;
    /**
     * @return The number of non-provisionable Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    private Integer nonProvisionableAutonomousContainerDatabases;
    /**
     * @return The number of provisionable Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    private Integer provisionableAutonomousContainerDatabases;
    /**
     * @return The number of provisioned Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    private Integer provisionedAutonomousContainerDatabases;
    /**
     * @return The number of CPUs provisioned in an Autonomous VM Cluster.
     * 
     */
    private Double provisionedCpus;
    /**
     * @return CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
     * 
     */
    private Double reclaimableCpus;
    /**
     * @return The number of CPUs reserved in an Autonomous VM Cluster.
     * 
     */
    private Double reservedCpus;
    /**
     * @return The total number of Autonomous Container Databases that can be created.
     * 
     */
    private Integer totalContainerDatabases;
    /**
     * @return The number of CPU cores enabled on the Cloud Autonomous VM cluster.
     * 
     */
    private Double totalCpus;
    /**
     * @return The data disk group size used for Autonomous Databases, in TBs.
     * 
     */
    private Double usedAutonomousDataStorageSizeInTbs;
    /**
     * @return The number of CPU cores alloted to the Autonomous Container Databases in an Cloud Autonomous VM cluster.
     * 
     */
    private Double usedCpus;

    private GetCloudAutonomousVmClusterResourceUsageResult() {}
    /**
     * @return The data disk group size allocated for Autonomous Databases, in TBs.
     * 
     */
    public Double autonomousDataStorageSizeInTbs() {
        return this.autonomousDataStorageSizeInTbs;
    }
    /**
     * @return List of Autonomous VM resource usages.
     * 
     */
    public List<GetCloudAutonomousVmClusterResourceUsageAutonomousVmResourceUsage> autonomousVmResourceUsages() {
        return this.autonomousVmResourceUsages;
    }
    /**
     * @return The data disk group size available for Autonomous Databases, in TBs.
     * 
     */
    public Double availableAutonomousDataStorageSizeInTbs() {
        return this.availableAutonomousDataStorageSizeInTbs;
    }
    /**
     * @return The number of CPU cores available.
     * 
     */
    public Double availableCpus() {
        return this.availableCpus;
    }
    public String cloudAutonomousVmClusterId() {
        return this.cloudAutonomousVmClusterId;
    }
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    /**
     * @return The user-friendly name for the Autonomous VM cluster. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Total exadata storage allocated for the Autonomous VM Cluster. DATA + RECOVERY + SPARSE + any overhead in TBs.
     * 
     */
    public Double exadataStorageInTbs() {
        return this.exadataStorageInTbs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The amount of memory (in GBs) to be enabled per each CPU core.
     * 
     */
    public Integer memoryPerOracleComputeUnitInGbs() {
        return this.memoryPerOracleComputeUnitInGbs;
    }
    /**
     * @return The memory allocated in GBs.
     * 
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    /**
     * @return The number of non-provisionable Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    public Integer nonProvisionableAutonomousContainerDatabases() {
        return this.nonProvisionableAutonomousContainerDatabases;
    }
    /**
     * @return The number of provisionable Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    public Integer provisionableAutonomousContainerDatabases() {
        return this.provisionableAutonomousContainerDatabases;
    }
    /**
     * @return The number of provisioned Autonomous Container Databases in an Autonomous VM Cluster.
     * 
     */
    public Integer provisionedAutonomousContainerDatabases() {
        return this.provisionedAutonomousContainerDatabases;
    }
    /**
     * @return The number of CPUs provisioned in an Autonomous VM Cluster.
     * 
     */
    public Double provisionedCpus() {
        return this.provisionedCpus;
    }
    /**
     * @return CPU cores that continue to be included in the count of OCPUs available to the Autonomous Container Database even after one of its Autonomous Database is terminated or scaled down. You can release them to the available OCPUs at its parent AVMC level by restarting the Autonomous Container Database.
     * 
     */
    public Double reclaimableCpus() {
        return this.reclaimableCpus;
    }
    /**
     * @return The number of CPUs reserved in an Autonomous VM Cluster.
     * 
     */
    public Double reservedCpus() {
        return this.reservedCpus;
    }
    /**
     * @return The total number of Autonomous Container Databases that can be created.
     * 
     */
    public Integer totalContainerDatabases() {
        return this.totalContainerDatabases;
    }
    /**
     * @return The number of CPU cores enabled on the Cloud Autonomous VM cluster.
     * 
     */
    public Double totalCpus() {
        return this.totalCpus;
    }
    /**
     * @return The data disk group size used for Autonomous Databases, in TBs.
     * 
     */
    public Double usedAutonomousDataStorageSizeInTbs() {
        return this.usedAutonomousDataStorageSizeInTbs;
    }
    /**
     * @return The number of CPU cores alloted to the Autonomous Container Databases in an Cloud Autonomous VM cluster.
     * 
     */
    public Double usedCpus() {
        return this.usedCpus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudAutonomousVmClusterResourceUsageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double autonomousDataStorageSizeInTbs;
        private List<GetCloudAutonomousVmClusterResourceUsageAutonomousVmResourceUsage> autonomousVmResourceUsages;
        private Double availableAutonomousDataStorageSizeInTbs;
        private Double availableCpus;
        private String cloudAutonomousVmClusterId;
        private Integer dbNodeStorageSizeInGbs;
        private String displayName;
        private Double exadataStorageInTbs;
        private String id;
        private Integer memoryPerOracleComputeUnitInGbs;
        private Integer memorySizeInGbs;
        private Integer nonProvisionableAutonomousContainerDatabases;
        private Integer provisionableAutonomousContainerDatabases;
        private Integer provisionedAutonomousContainerDatabases;
        private Double provisionedCpus;
        private Double reclaimableCpus;
        private Double reservedCpus;
        private Integer totalContainerDatabases;
        private Double totalCpus;
        private Double usedAutonomousDataStorageSizeInTbs;
        private Double usedCpus;
        public Builder() {}
        public Builder(GetCloudAutonomousVmClusterResourceUsageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDataStorageSizeInTbs = defaults.autonomousDataStorageSizeInTbs;
    	      this.autonomousVmResourceUsages = defaults.autonomousVmResourceUsages;
    	      this.availableAutonomousDataStorageSizeInTbs = defaults.availableAutonomousDataStorageSizeInTbs;
    	      this.availableCpus = defaults.availableCpus;
    	      this.cloudAutonomousVmClusterId = defaults.cloudAutonomousVmClusterId;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.displayName = defaults.displayName;
    	      this.exadataStorageInTbs = defaults.exadataStorageInTbs;
    	      this.id = defaults.id;
    	      this.memoryPerOracleComputeUnitInGbs = defaults.memoryPerOracleComputeUnitInGbs;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.nonProvisionableAutonomousContainerDatabases = defaults.nonProvisionableAutonomousContainerDatabases;
    	      this.provisionableAutonomousContainerDatabases = defaults.provisionableAutonomousContainerDatabases;
    	      this.provisionedAutonomousContainerDatabases = defaults.provisionedAutonomousContainerDatabases;
    	      this.provisionedCpus = defaults.provisionedCpus;
    	      this.reclaimableCpus = defaults.reclaimableCpus;
    	      this.reservedCpus = defaults.reservedCpus;
    	      this.totalContainerDatabases = defaults.totalContainerDatabases;
    	      this.totalCpus = defaults.totalCpus;
    	      this.usedAutonomousDataStorageSizeInTbs = defaults.usedAutonomousDataStorageSizeInTbs;
    	      this.usedCpus = defaults.usedCpus;
        }

        @CustomType.Setter
        public Builder autonomousDataStorageSizeInTbs(Double autonomousDataStorageSizeInTbs) {
            this.autonomousDataStorageSizeInTbs = Objects.requireNonNull(autonomousDataStorageSizeInTbs);
            return this;
        }
        @CustomType.Setter
        public Builder autonomousVmResourceUsages(List<GetCloudAutonomousVmClusterResourceUsageAutonomousVmResourceUsage> autonomousVmResourceUsages) {
            this.autonomousVmResourceUsages = Objects.requireNonNull(autonomousVmResourceUsages);
            return this;
        }
        public Builder autonomousVmResourceUsages(GetCloudAutonomousVmClusterResourceUsageAutonomousVmResourceUsage... autonomousVmResourceUsages) {
            return autonomousVmResourceUsages(List.of(autonomousVmResourceUsages));
        }
        @CustomType.Setter
        public Builder availableAutonomousDataStorageSizeInTbs(Double availableAutonomousDataStorageSizeInTbs) {
            this.availableAutonomousDataStorageSizeInTbs = Objects.requireNonNull(availableAutonomousDataStorageSizeInTbs);
            return this;
        }
        @CustomType.Setter
        public Builder availableCpus(Double availableCpus) {
            this.availableCpus = Objects.requireNonNull(availableCpus);
            return this;
        }
        @CustomType.Setter
        public Builder cloudAutonomousVmClusterId(String cloudAutonomousVmClusterId) {
            this.cloudAutonomousVmClusterId = Objects.requireNonNull(cloudAutonomousVmClusterId);
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            this.dbNodeStorageSizeInGbs = Objects.requireNonNull(dbNodeStorageSizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder exadataStorageInTbs(Double exadataStorageInTbs) {
            this.exadataStorageInTbs = Objects.requireNonNull(exadataStorageInTbs);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder memoryPerOracleComputeUnitInGbs(Integer memoryPerOracleComputeUnitInGbs) {
            this.memoryPerOracleComputeUnitInGbs = Objects.requireNonNull(memoryPerOracleComputeUnitInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            this.memorySizeInGbs = Objects.requireNonNull(memorySizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder nonProvisionableAutonomousContainerDatabases(Integer nonProvisionableAutonomousContainerDatabases) {
            this.nonProvisionableAutonomousContainerDatabases = Objects.requireNonNull(nonProvisionableAutonomousContainerDatabases);
            return this;
        }
        @CustomType.Setter
        public Builder provisionableAutonomousContainerDatabases(Integer provisionableAutonomousContainerDatabases) {
            this.provisionableAutonomousContainerDatabases = Objects.requireNonNull(provisionableAutonomousContainerDatabases);
            return this;
        }
        @CustomType.Setter
        public Builder provisionedAutonomousContainerDatabases(Integer provisionedAutonomousContainerDatabases) {
            this.provisionedAutonomousContainerDatabases = Objects.requireNonNull(provisionedAutonomousContainerDatabases);
            return this;
        }
        @CustomType.Setter
        public Builder provisionedCpus(Double provisionedCpus) {
            this.provisionedCpus = Objects.requireNonNull(provisionedCpus);
            return this;
        }
        @CustomType.Setter
        public Builder reclaimableCpus(Double reclaimableCpus) {
            this.reclaimableCpus = Objects.requireNonNull(reclaimableCpus);
            return this;
        }
        @CustomType.Setter
        public Builder reservedCpus(Double reservedCpus) {
            this.reservedCpus = Objects.requireNonNull(reservedCpus);
            return this;
        }
        @CustomType.Setter
        public Builder totalContainerDatabases(Integer totalContainerDatabases) {
            this.totalContainerDatabases = Objects.requireNonNull(totalContainerDatabases);
            return this;
        }
        @CustomType.Setter
        public Builder totalCpus(Double totalCpus) {
            this.totalCpus = Objects.requireNonNull(totalCpus);
            return this;
        }
        @CustomType.Setter
        public Builder usedAutonomousDataStorageSizeInTbs(Double usedAutonomousDataStorageSizeInTbs) {
            this.usedAutonomousDataStorageSizeInTbs = Objects.requireNonNull(usedAutonomousDataStorageSizeInTbs);
            return this;
        }
        @CustomType.Setter
        public Builder usedCpus(Double usedCpus) {
            this.usedCpus = Objects.requireNonNull(usedCpus);
            return this;
        }
        public GetCloudAutonomousVmClusterResourceUsageResult build() {
            final var _resultValue = new GetCloudAutonomousVmClusterResourceUsageResult();
            _resultValue.autonomousDataStorageSizeInTbs = autonomousDataStorageSizeInTbs;
            _resultValue.autonomousVmResourceUsages = autonomousVmResourceUsages;
            _resultValue.availableAutonomousDataStorageSizeInTbs = availableAutonomousDataStorageSizeInTbs;
            _resultValue.availableCpus = availableCpus;
            _resultValue.cloudAutonomousVmClusterId = cloudAutonomousVmClusterId;
            _resultValue.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            _resultValue.displayName = displayName;
            _resultValue.exadataStorageInTbs = exadataStorageInTbs;
            _resultValue.id = id;
            _resultValue.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            _resultValue.memorySizeInGbs = memorySizeInGbs;
            _resultValue.nonProvisionableAutonomousContainerDatabases = nonProvisionableAutonomousContainerDatabases;
            _resultValue.provisionableAutonomousContainerDatabases = provisionableAutonomousContainerDatabases;
            _resultValue.provisionedAutonomousContainerDatabases = provisionedAutonomousContainerDatabases;
            _resultValue.provisionedCpus = provisionedCpus;
            _resultValue.reclaimableCpus = reclaimableCpus;
            _resultValue.reservedCpus = reservedCpus;
            _resultValue.totalContainerDatabases = totalContainerDatabases;
            _resultValue.totalCpus = totalCpus;
            _resultValue.usedAutonomousDataStorageSizeInTbs = usedAutonomousDataStorageSizeInTbs;
            _resultValue.usedCpus = usedCpus;
            return _resultValue;
        }
    }
}
