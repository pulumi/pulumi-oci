// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetCloudExadataInfrastructureCustomerContact;
import com.pulumi.oci.Database.outputs.GetCloudExadataInfrastructureMaintenanceWindow;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCloudExadataInfrastructureResult {
    /**
     * @return The requested number of additional storage servers activated for the Exadata infrastructure.
     * 
     */
    private Integer activatedStorageCount;
    /**
     * @return The requested number of additional storage servers for the Exadata infrastructure.
     * 
     */
    private Integer additionalStorageCount;
    /**
     * @return The name of the availability domain that the cloud Exadata infrastructure resource is located in.
     * 
     */
    private String availabilityDomain;
    /**
     * @return The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    private Integer availableStorageSizeInGbs;
    private String cloudExadataInfrastructureId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Exadata Infrastructure.
     * 
     */
    private String clusterPlacementGroupId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The number of compute servers for the cloud Exadata infrastructure.
     * 
     */
    private Integer computeCount;
    /**
     * @return The total number of CPU cores allocated.
     * 
     */
    private Integer cpuCount;
    /**
     * @return The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
     * 
     */
    private List<GetCloudExadataInfrastructureCustomerContact> customerContacts;
    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    private Double dataStorageSizeInTbs;
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    private Integer dbNodeStorageSizeInGbs;
    /**
     * @return The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    private String dbServerVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure resource.
     * 
     */
    private String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    private String lastMaintenanceRunId;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    private List<GetCloudExadataInfrastructureMaintenanceWindow> maintenanceWindows;
    /**
     * @return The total number of CPU cores available.
     * 
     */
    private Integer maxCpuCount;
    /**
     * @return The total available DATA disk group size.
     * 
     */
    private Double maxDataStorageInTbs;
    /**
     * @return The total local node storage available in GBs.
     * 
     */
    private Integer maxDbNodeStorageInGbs;
    /**
     * @return The total memory available in GBs.
     * 
     */
    private Integer maxMemoryInGbs;
    /**
     * @return The memory allocated in GBs.
     * 
     */
    private Integer memorySizeInGbs;
    /**
     * @return The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    private String monthlyDbServerVersion;
    /**
     * @return The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    private String monthlyStorageServerVersion;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    private String nextMaintenanceRunId;
    /**
     * @return The model name of the cloud Exadata infrastructure resource.
     * 
     */
    private String shape;
    /**
     * @return The current lifecycle state of the cloud Exadata infrastructure resource.
     * 
     */
    private String state;
    /**
     * @return The number of storage servers for the cloud Exadata infrastructure.
     * 
     */
    private Integer storageCount;
    /**
     * @return The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    private String storageServerVersion;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The date and time the cloud Exadata infrastructure resource was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    private Integer totalStorageSizeInGbs;

    private GetCloudExadataInfrastructureResult() {}
    /**
     * @return The requested number of additional storage servers activated for the Exadata infrastructure.
     * 
     */
    public Integer activatedStorageCount() {
        return this.activatedStorageCount;
    }
    /**
     * @return The requested number of additional storage servers for the Exadata infrastructure.
     * 
     */
    public Integer additionalStorageCount() {
        return this.additionalStorageCount;
    }
    /**
     * @return The name of the availability domain that the cloud Exadata infrastructure resource is located in.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    public Integer availableStorageSizeInGbs() {
        return this.availableStorageSizeInGbs;
    }
    public String cloudExadataInfrastructureId() {
        return this.cloudExadataInfrastructureId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Exadata Infrastructure.
     * 
     */
    public String clusterPlacementGroupId() {
        return this.clusterPlacementGroupId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The number of compute servers for the cloud Exadata infrastructure.
     * 
     */
    public Integer computeCount() {
        return this.computeCount;
    }
    /**
     * @return The total number of CPU cores allocated.
     * 
     */
    public Integer cpuCount() {
        return this.cpuCount;
    }
    /**
     * @return The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
     * 
     */
    public List<GetCloudExadataInfrastructureCustomerContact> customerContacts() {
        return this.customerContacts;
    }
    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    public Double dataStorageSizeInTbs() {
        return this.dataStorageSizeInTbs;
    }
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    /**
     * @return The software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    public String dbServerVersion() {
        return this.dbServerVersion;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    public String lastMaintenanceRunId() {
        return this.lastMaintenanceRunId;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public List<GetCloudExadataInfrastructureMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return The total number of CPU cores available.
     * 
     */
    public Integer maxCpuCount() {
        return this.maxCpuCount;
    }
    /**
     * @return The total available DATA disk group size.
     * 
     */
    public Double maxDataStorageInTbs() {
        return this.maxDataStorageInTbs;
    }
    /**
     * @return The total local node storage available in GBs.
     * 
     */
    public Integer maxDbNodeStorageInGbs() {
        return this.maxDbNodeStorageInGbs;
    }
    /**
     * @return The total memory available in GBs.
     * 
     */
    public Integer maxMemoryInGbs() {
        return this.maxMemoryInGbs;
    }
    /**
     * @return The memory allocated in GBs.
     * 
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    /**
     * @return The monthly software version of the database servers (dom0) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    public String monthlyDbServerVersion() {
        return this.monthlyDbServerVersion;
    }
    /**
     * @return The monthly software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    public String monthlyStorageServerVersion() {
        return this.monthlyStorageServerVersion;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    public String nextMaintenanceRunId() {
        return this.nextMaintenanceRunId;
    }
    /**
     * @return The model name of the cloud Exadata infrastructure resource.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return The current lifecycle state of the cloud Exadata infrastructure resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The number of storage servers for the cloud Exadata infrastructure.
     * 
     */
    public Integer storageCount() {
        return this.storageCount;
    }
    /**
     * @return The software version of the storage servers (cells) in the cloud Exadata infrastructure. Example: 20.1.15
     * 
     */
    public String storageServerVersion() {
        return this.storageServerVersion;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the cloud Exadata infrastructure resource was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    public Integer totalStorageSizeInGbs() {
        return this.totalStorageSizeInGbs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudExadataInfrastructureResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer activatedStorageCount;
        private Integer additionalStorageCount;
        private String availabilityDomain;
        private Integer availableStorageSizeInGbs;
        private String cloudExadataInfrastructureId;
        private String clusterPlacementGroupId;
        private String compartmentId;
        private Integer computeCount;
        private Integer cpuCount;
        private List<GetCloudExadataInfrastructureCustomerContact> customerContacts;
        private Double dataStorageSizeInTbs;
        private Integer dbNodeStorageSizeInGbs;
        private String dbServerVersion;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lastMaintenanceRunId;
        private String lifecycleDetails;
        private List<GetCloudExadataInfrastructureMaintenanceWindow> maintenanceWindows;
        private Integer maxCpuCount;
        private Double maxDataStorageInTbs;
        private Integer maxDbNodeStorageInGbs;
        private Integer maxMemoryInGbs;
        private Integer memorySizeInGbs;
        private String monthlyDbServerVersion;
        private String monthlyStorageServerVersion;
        private String nextMaintenanceRunId;
        private String shape;
        private String state;
        private Integer storageCount;
        private String storageServerVersion;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private Integer totalStorageSizeInGbs;
        public Builder() {}
        public Builder(GetCloudExadataInfrastructureResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activatedStorageCount = defaults.activatedStorageCount;
    	      this.additionalStorageCount = defaults.additionalStorageCount;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.availableStorageSizeInGbs = defaults.availableStorageSizeInGbs;
    	      this.cloudExadataInfrastructureId = defaults.cloudExadataInfrastructureId;
    	      this.clusterPlacementGroupId = defaults.clusterPlacementGroupId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeCount = defaults.computeCount;
    	      this.cpuCount = defaults.cpuCount;
    	      this.customerContacts = defaults.customerContacts;
    	      this.dataStorageSizeInTbs = defaults.dataStorageSizeInTbs;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.dbServerVersion = defaults.dbServerVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lastMaintenanceRunId = defaults.lastMaintenanceRunId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.maxCpuCount = defaults.maxCpuCount;
    	      this.maxDataStorageInTbs = defaults.maxDataStorageInTbs;
    	      this.maxDbNodeStorageInGbs = defaults.maxDbNodeStorageInGbs;
    	      this.maxMemoryInGbs = defaults.maxMemoryInGbs;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.monthlyDbServerVersion = defaults.monthlyDbServerVersion;
    	      this.monthlyStorageServerVersion = defaults.monthlyStorageServerVersion;
    	      this.nextMaintenanceRunId = defaults.nextMaintenanceRunId;
    	      this.shape = defaults.shape;
    	      this.state = defaults.state;
    	      this.storageCount = defaults.storageCount;
    	      this.storageServerVersion = defaults.storageServerVersion;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.totalStorageSizeInGbs = defaults.totalStorageSizeInGbs;
        }

        @CustomType.Setter
        public Builder activatedStorageCount(Integer activatedStorageCount) {
            if (activatedStorageCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "activatedStorageCount");
            }
            this.activatedStorageCount = activatedStorageCount;
            return this;
        }
        @CustomType.Setter
        public Builder additionalStorageCount(Integer additionalStorageCount) {
            if (additionalStorageCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "additionalStorageCount");
            }
            this.additionalStorageCount = additionalStorageCount;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder availableStorageSizeInGbs(Integer availableStorageSizeInGbs) {
            if (availableStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "availableStorageSizeInGbs");
            }
            this.availableStorageSizeInGbs = availableStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder cloudExadataInfrastructureId(String cloudExadataInfrastructureId) {
            if (cloudExadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "cloudExadataInfrastructureId");
            }
            this.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterPlacementGroupId(String clusterPlacementGroupId) {
            if (clusterPlacementGroupId == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "clusterPlacementGroupId");
            }
            this.clusterPlacementGroupId = clusterPlacementGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeCount(Integer computeCount) {
            if (computeCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "computeCount");
            }
            this.computeCount = computeCount;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCount(Integer cpuCount) {
            if (cpuCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "cpuCount");
            }
            this.cpuCount = cpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder customerContacts(List<GetCloudExadataInfrastructureCustomerContact> customerContacts) {
            if (customerContacts == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "customerContacts");
            }
            this.customerContacts = customerContacts;
            return this;
        }
        public Builder customerContacts(GetCloudExadataInfrastructureCustomerContact... customerContacts) {
            return customerContacts(List.of(customerContacts));
        }
        @CustomType.Setter
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            if (dataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "dataStorageSizeInTbs");
            }
            this.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            if (dbNodeStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "dbNodeStorageSizeInGbs");
            }
            this.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbServerVersion(String dbServerVersion) {
            if (dbServerVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "dbServerVersion");
            }
            this.dbServerVersion = dbServerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastMaintenanceRunId(String lastMaintenanceRunId) {
            if (lastMaintenanceRunId == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "lastMaintenanceRunId");
            }
            this.lastMaintenanceRunId = lastMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetCloudExadataInfrastructureMaintenanceWindow> maintenanceWindows) {
            if (maintenanceWindows == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "maintenanceWindows");
            }
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetCloudExadataInfrastructureMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder maxCpuCount(Integer maxCpuCount) {
            if (maxCpuCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "maxCpuCount");
            }
            this.maxCpuCount = maxCpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder maxDataStorageInTbs(Double maxDataStorageInTbs) {
            if (maxDataStorageInTbs == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "maxDataStorageInTbs");
            }
            this.maxDataStorageInTbs = maxDataStorageInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder maxDbNodeStorageInGbs(Integer maxDbNodeStorageInGbs) {
            if (maxDbNodeStorageInGbs == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "maxDbNodeStorageInGbs");
            }
            this.maxDbNodeStorageInGbs = maxDbNodeStorageInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder maxMemoryInGbs(Integer maxMemoryInGbs) {
            if (maxMemoryInGbs == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "maxMemoryInGbs");
            }
            this.maxMemoryInGbs = maxMemoryInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            if (memorySizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "memorySizeInGbs");
            }
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder monthlyDbServerVersion(String monthlyDbServerVersion) {
            if (monthlyDbServerVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "monthlyDbServerVersion");
            }
            this.monthlyDbServerVersion = monthlyDbServerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder monthlyStorageServerVersion(String monthlyStorageServerVersion) {
            if (monthlyStorageServerVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "monthlyStorageServerVersion");
            }
            this.monthlyStorageServerVersion = monthlyStorageServerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceRunId(String nextMaintenanceRunId) {
            if (nextMaintenanceRunId == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "nextMaintenanceRunId");
            }
            this.nextMaintenanceRunId = nextMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            if (shape == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "shape");
            }
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder storageCount(Integer storageCount) {
            if (storageCount == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "storageCount");
            }
            this.storageCount = storageCount;
            return this;
        }
        @CustomType.Setter
        public Builder storageServerVersion(String storageServerVersion) {
            if (storageServerVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "storageServerVersion");
            }
            this.storageServerVersion = storageServerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder totalStorageSizeInGbs(Integer totalStorageSizeInGbs) {
            if (totalStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetCloudExadataInfrastructureResult", "totalStorageSizeInGbs");
            }
            this.totalStorageSizeInGbs = totalStorageSizeInGbs;
            return this;
        }
        public GetCloudExadataInfrastructureResult build() {
            final var _resultValue = new GetCloudExadataInfrastructureResult();
            _resultValue.activatedStorageCount = activatedStorageCount;
            _resultValue.additionalStorageCount = additionalStorageCount;
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.availableStorageSizeInGbs = availableStorageSizeInGbs;
            _resultValue.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            _resultValue.clusterPlacementGroupId = clusterPlacementGroupId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeCount = computeCount;
            _resultValue.cpuCount = cpuCount;
            _resultValue.customerContacts = customerContacts;
            _resultValue.dataStorageSizeInTbs = dataStorageSizeInTbs;
            _resultValue.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            _resultValue.dbServerVersion = dbServerVersion;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lastMaintenanceRunId = lastMaintenanceRunId;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.maintenanceWindows = maintenanceWindows;
            _resultValue.maxCpuCount = maxCpuCount;
            _resultValue.maxDataStorageInTbs = maxDataStorageInTbs;
            _resultValue.maxDbNodeStorageInGbs = maxDbNodeStorageInGbs;
            _resultValue.maxMemoryInGbs = maxMemoryInGbs;
            _resultValue.memorySizeInGbs = memorySizeInGbs;
            _resultValue.monthlyDbServerVersion = monthlyDbServerVersion;
            _resultValue.monthlyStorageServerVersion = monthlyStorageServerVersion;
            _resultValue.nextMaintenanceRunId = nextMaintenanceRunId;
            _resultValue.shape = shape;
            _resultValue.state = state;
            _resultValue.storageCount = storageCount;
            _resultValue.storageServerVersion = storageServerVersion;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.totalStorageSizeInGbs = totalStorageSizeInGbs;
            return _resultValue;
        }
    }
}
