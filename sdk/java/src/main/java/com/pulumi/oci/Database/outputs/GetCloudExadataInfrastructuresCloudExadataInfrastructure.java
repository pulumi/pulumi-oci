// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetCloudExadataInfrastructuresCloudExadataInfrastructureCustomerContact;
import com.pulumi.oci.Database.outputs.GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindow;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCloudExadataInfrastructuresCloudExadataInfrastructure {
    /**
     * @return The requested number of additional storage servers activated for the Exadata infrastructure.
     * 
     */
    private Integer activatedStorageCount;
    /**
     * @return The requested number of additional storage servers for the Exadata infrastructure.
     * 
     */
    private Integer additionalStorageCount;
    /**
     * @return The name of the availability domain that the cloud Exadata infrastructure resource is located in.
     * 
     */
    private String availabilityDomain;
    /**
     * @return The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    private Integer availableStorageSizeInGbs;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return The number of compute servers for the cloud Exadata infrastructure.
     * 
     */
    private Integer computeCount;
    /**
     * @return The total number of CPU cores allocated.
     * 
     */
    private Integer cpuCount;
    /**
     * @return The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
     * 
     */
    private List<GetCloudExadataInfrastructuresCloudExadataInfrastructureCustomerContact> customerContacts;
    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    private Double dataStorageSizeInTbs;
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    private Integer dbNodeStorageSizeInGbs;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure resource.
     * 
     */
    private String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    private String lastMaintenanceRunId;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    private List<GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindow> maintenanceWindows;
    /**
     * @return The total number of CPU cores available.
     * 
     */
    private Integer maxCpuCount;
    /**
     * @return The total available DATA disk group size.
     * 
     */
    private Double maxDataStorageInTbs;
    /**
     * @return The total local node storage available in GBs.
     * 
     */
    private Integer maxDbNodeStorageInGbs;
    /**
     * @return The total memory available in GBs.
     * 
     */
    private Integer maxMemoryInGbs;
    /**
     * @return The memory allocated in GBs.
     * 
     */
    private Integer memorySizeInGbs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    private String nextMaintenanceRunId;
    /**
     * @return The model name of the cloud Exadata infrastructure resource.
     * 
     */
    private String shape;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private String state;
    /**
     * @return The number of storage servers for the cloud Exadata infrastructure.
     * 
     */
    private Integer storageCount;
    /**
     * @return The date and time the cloud Exadata infrastructure resource was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    private Integer totalStorageSizeInGbs;

    private GetCloudExadataInfrastructuresCloudExadataInfrastructure() {}
    /**
     * @return The requested number of additional storage servers activated for the Exadata infrastructure.
     * 
     */
    public Integer activatedStorageCount() {
        return this.activatedStorageCount;
    }
    /**
     * @return The requested number of additional storage servers for the Exadata infrastructure.
     * 
     */
    public Integer additionalStorageCount() {
        return this.additionalStorageCount;
    }
    /**
     * @return The name of the availability domain that the cloud Exadata infrastructure resource is located in.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    public Integer availableStorageSizeInGbs() {
        return this.availableStorageSizeInGbs;
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The number of compute servers for the cloud Exadata infrastructure.
     * 
     */
    public Integer computeCount() {
        return this.computeCount;
    }
    /**
     * @return The total number of CPU cores allocated.
     * 
     */
    public Integer cpuCount() {
        return this.cpuCount;
    }
    /**
     * @return The list of customer email addresses that receive information from Oracle about the specified Oracle Cloud Infrastructure Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance.
     * 
     */
    public List<GetCloudExadataInfrastructuresCloudExadataInfrastructureCustomerContact> customerContacts() {
        return this.customerContacts;
    }
    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    public Double dataStorageSizeInTbs() {
        return this.dataStorageSizeInTbs;
    }
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    public String lastMaintenanceRunId() {
        return this.lastMaintenanceRunId;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public List<GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return The total number of CPU cores available.
     * 
     */
    public Integer maxCpuCount() {
        return this.maxCpuCount;
    }
    /**
     * @return The total available DATA disk group size.
     * 
     */
    public Double maxDataStorageInTbs() {
        return this.maxDataStorageInTbs;
    }
    /**
     * @return The total local node storage available in GBs.
     * 
     */
    public Integer maxDbNodeStorageInGbs() {
        return this.maxDbNodeStorageInGbs;
    }
    /**
     * @return The total memory available in GBs.
     * 
     */
    public Integer maxMemoryInGbs() {
        return this.maxMemoryInGbs;
    }
    /**
     * @return The memory allocated in GBs.
     * 
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    public String nextMaintenanceRunId() {
        return this.nextMaintenanceRunId;
    }
    /**
     * @return The model name of the cloud Exadata infrastructure resource.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The number of storage servers for the cloud Exadata infrastructure.
     * 
     */
    public Integer storageCount() {
        return this.storageCount;
    }
    /**
     * @return The date and time the cloud Exadata infrastructure resource was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).
     * 
     */
    public Integer totalStorageSizeInGbs() {
        return this.totalStorageSizeInGbs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudExadataInfrastructuresCloudExadataInfrastructure defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer activatedStorageCount;
        private Integer additionalStorageCount;
        private String availabilityDomain;
        private Integer availableStorageSizeInGbs;
        private String compartmentId;
        private Integer computeCount;
        private Integer cpuCount;
        private List<GetCloudExadataInfrastructuresCloudExadataInfrastructureCustomerContact> customerContacts;
        private Double dataStorageSizeInTbs;
        private Integer dbNodeStorageSizeInGbs;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lastMaintenanceRunId;
        private String lifecycleDetails;
        private List<GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindow> maintenanceWindows;
        private Integer maxCpuCount;
        private Double maxDataStorageInTbs;
        private Integer maxDbNodeStorageInGbs;
        private Integer maxMemoryInGbs;
        private Integer memorySizeInGbs;
        private String nextMaintenanceRunId;
        private String shape;
        private String state;
        private Integer storageCount;
        private String timeCreated;
        private Integer totalStorageSizeInGbs;
        public Builder() {}
        public Builder(GetCloudExadataInfrastructuresCloudExadataInfrastructure defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activatedStorageCount = defaults.activatedStorageCount;
    	      this.additionalStorageCount = defaults.additionalStorageCount;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.availableStorageSizeInGbs = defaults.availableStorageSizeInGbs;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeCount = defaults.computeCount;
    	      this.cpuCount = defaults.cpuCount;
    	      this.customerContacts = defaults.customerContacts;
    	      this.dataStorageSizeInTbs = defaults.dataStorageSizeInTbs;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lastMaintenanceRunId = defaults.lastMaintenanceRunId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.maxCpuCount = defaults.maxCpuCount;
    	      this.maxDataStorageInTbs = defaults.maxDataStorageInTbs;
    	      this.maxDbNodeStorageInGbs = defaults.maxDbNodeStorageInGbs;
    	      this.maxMemoryInGbs = defaults.maxMemoryInGbs;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.nextMaintenanceRunId = defaults.nextMaintenanceRunId;
    	      this.shape = defaults.shape;
    	      this.state = defaults.state;
    	      this.storageCount = defaults.storageCount;
    	      this.timeCreated = defaults.timeCreated;
    	      this.totalStorageSizeInGbs = defaults.totalStorageSizeInGbs;
        }

        @CustomType.Setter
        public Builder activatedStorageCount(Integer activatedStorageCount) {
            this.activatedStorageCount = Objects.requireNonNull(activatedStorageCount);
            return this;
        }
        @CustomType.Setter
        public Builder additionalStorageCount(Integer additionalStorageCount) {
            this.additionalStorageCount = Objects.requireNonNull(additionalStorageCount);
            return this;
        }
        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        @CustomType.Setter
        public Builder availableStorageSizeInGbs(Integer availableStorageSizeInGbs) {
            this.availableStorageSizeInGbs = Objects.requireNonNull(availableStorageSizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder computeCount(Integer computeCount) {
            this.computeCount = Objects.requireNonNull(computeCount);
            return this;
        }
        @CustomType.Setter
        public Builder cpuCount(Integer cpuCount) {
            this.cpuCount = Objects.requireNonNull(cpuCount);
            return this;
        }
        @CustomType.Setter
        public Builder customerContacts(List<GetCloudExadataInfrastructuresCloudExadataInfrastructureCustomerContact> customerContacts) {
            this.customerContacts = Objects.requireNonNull(customerContacts);
            return this;
        }
        public Builder customerContacts(GetCloudExadataInfrastructuresCloudExadataInfrastructureCustomerContact... customerContacts) {
            return customerContacts(List.of(customerContacts));
        }
        @CustomType.Setter
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            this.dataStorageSizeInTbs = Objects.requireNonNull(dataStorageSizeInTbs);
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            this.dbNodeStorageSizeInGbs = Objects.requireNonNull(dbNodeStorageSizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastMaintenanceRunId(String lastMaintenanceRunId) {
            this.lastMaintenanceRunId = Objects.requireNonNull(lastMaintenanceRunId);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindow> maintenanceWindows) {
            this.maintenanceWindows = Objects.requireNonNull(maintenanceWindows);
            return this;
        }
        public Builder maintenanceWindows(GetCloudExadataInfrastructuresCloudExadataInfrastructureMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder maxCpuCount(Integer maxCpuCount) {
            this.maxCpuCount = Objects.requireNonNull(maxCpuCount);
            return this;
        }
        @CustomType.Setter
        public Builder maxDataStorageInTbs(Double maxDataStorageInTbs) {
            this.maxDataStorageInTbs = Objects.requireNonNull(maxDataStorageInTbs);
            return this;
        }
        @CustomType.Setter
        public Builder maxDbNodeStorageInGbs(Integer maxDbNodeStorageInGbs) {
            this.maxDbNodeStorageInGbs = Objects.requireNonNull(maxDbNodeStorageInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder maxMemoryInGbs(Integer maxMemoryInGbs) {
            this.maxMemoryInGbs = Objects.requireNonNull(maxMemoryInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            this.memorySizeInGbs = Objects.requireNonNull(memorySizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceRunId(String nextMaintenanceRunId) {
            this.nextMaintenanceRunId = Objects.requireNonNull(nextMaintenanceRunId);
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder storageCount(Integer storageCount) {
            this.storageCount = Objects.requireNonNull(storageCount);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder totalStorageSizeInGbs(Integer totalStorageSizeInGbs) {
            this.totalStorageSizeInGbs = Objects.requireNonNull(totalStorageSizeInGbs);
            return this;
        }
        public GetCloudExadataInfrastructuresCloudExadataInfrastructure build() {
            final var o = new GetCloudExadataInfrastructuresCloudExadataInfrastructure();
            o.activatedStorageCount = activatedStorageCount;
            o.additionalStorageCount = additionalStorageCount;
            o.availabilityDomain = availabilityDomain;
            o.availableStorageSizeInGbs = availableStorageSizeInGbs;
            o.compartmentId = compartmentId;
            o.computeCount = computeCount;
            o.cpuCount = cpuCount;
            o.customerContacts = customerContacts;
            o.dataStorageSizeInTbs = dataStorageSizeInTbs;
            o.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lastMaintenanceRunId = lastMaintenanceRunId;
            o.lifecycleDetails = lifecycleDetails;
            o.maintenanceWindows = maintenanceWindows;
            o.maxCpuCount = maxCpuCount;
            o.maxDataStorageInTbs = maxDataStorageInTbs;
            o.maxDbNodeStorageInGbs = maxDbNodeStorageInGbs;
            o.maxMemoryInGbs = maxMemoryInGbs;
            o.memorySizeInGbs = memorySizeInGbs;
            o.nextMaintenanceRunId = nextMaintenanceRunId;
            o.shape = shape;
            o.state = state;
            o.storageCount = storageCount;
            o.timeCreated = timeCreated;
            o.totalStorageSizeInGbs = totalStorageSizeInGbs;
            return o;
        }
    }
}
