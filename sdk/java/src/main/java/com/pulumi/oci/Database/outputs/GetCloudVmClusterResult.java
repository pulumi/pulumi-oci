// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetCloudVmClusterCloudAutomationUpdateDetail;
import com.pulumi.oci.Database.outputs.GetCloudVmClusterDataCollectionOption;
import com.pulumi.oci.Database.outputs.GetCloudVmClusterFileSystemConfigurationDetail;
import com.pulumi.oci.Database.outputs.GetCloudVmClusterIormConfigCach;
import com.pulumi.oci.Database.outputs.GetCloudVmClusterMultiCloudIdentityConnectorConfig;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCloudVmClusterResult {
    /**
     * @return The name of the availability domain that the cloud Exadata infrastructure resource is located in.
     * 
     */
    private String availabilityDomain;
    /**
     * @return A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
     * 
     */
    private List<String> backupNetworkNsgIds;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet associated with the cloud VM cluster.
     * 
     */
    private String backupSubnetId;
    /**
     * @return Specifies the properties necessary for cloud automation updates. This includes modifying the apply update time preference, enabling or disabling early adoption, and enabling, modifying, or disabling the update freeze period.
     * 
     */
    private List<GetCloudVmClusterCloudAutomationUpdateDetail> cloudAutomationUpdateDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure.
     * 
     */
    private String cloudExadataInfrastructureId;
    private String cloudVmClusterId;
    /**
     * @return The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
     * 
     */
    private String clusterName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The compute model of the cloud VM cluster.
     * 
     */
    private String computeModel;
    /**
     * @return The number of CPU cores enabled on the cloud VM cluster.
     * 
     */
    private Integer cpuCoreCount;
    private Boolean createAsync;
    /**
     * @return Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     */
    private List<GetCloudVmClusterDataCollectionOption> dataCollectionOptions;
    /**
     * @return The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage.
     * 
     */
    private Integer dataStoragePercentage;
    /**
     * @return The data disk group size to be allocated in TBs.
     * 
     */
    private Double dataStorageSizeInTbs;
    /**
     * @return The local node storage to be allocated in GBs.
     * 
     */
    private Integer dbNodeStorageSizeInGbs;
    /**
     * @return The list of DB servers.
     * 
     */
    private List<String> dbServers;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
     * 
     */
    private String diskRedundancy;
    /**
     * @return The user-friendly name for the cloud VM cluster. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The domain name for the cloud VM cluster.
     * 
     */
    private String domain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Database Storage Vault.
     * 
     */
    private String exascaleDbStorageVaultId;
    /**
     * @return Details of the file system configuration of the VM cluster.
     * 
     */
    private List<GetCloudVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    private String giVersion;
    /**
     * @return The hostname for the cloud VM cluster.
     * 
     */
    private String hostname;
    /**
     * @return The OCID of the identity connector
     * 
     */
    private String id;
    /**
     * @return The IORM settings of the Exadata DB system.
     * 
     */
    private List<GetCloudVmClusterIormConfigCach> iormConfigCaches;
    /**
     * @return If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster.
     * 
     */
    private Boolean isLocalBackupEnabled;
    /**
     * @return If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created.
     * 
     */
    private Boolean isSparseDiskgroupEnabled;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history entry. This value is updated when a maintenance update starts.
     * 
     */
    private String lastUpdateHistoryEntryId;
    /**
     * @return The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
     * 
     */
    private String licenseModel;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The port number configured for the listener on the cloud VM cluster.
     * 
     */
    private String listenerPort;
    /**
     * @return The memory to be allocated in GBs.
     * 
     */
    private Integer memorySizeInGbs;
    /**
     * @return Details of the multi cloud identity connectors of the VM cluster.
     * 
     */
    private List<GetCloudVmClusterMultiCloudIdentityConnectorConfig> multiCloudIdentityConnectorConfigs;
    /**
     * @return The number of nodes in the cloud VM cluster.
     * 
     */
    private Integer nodeCount;
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
     * 
     */
    private List<String> nsgIds;
    /**
     * @return The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
     * 
     */
    private Double ocpuCount;
    private String privateZoneId;
    /**
     * @return The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
     * 
     */
    private String scanDnsName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
     * 
     */
    private String scanDnsRecordId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IPv4 addresses associated with the cloud VM cluster. SCAN IPv4 addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     * 
     */
    private List<String> scanIpIds;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IPv6 addresses associated with the cloud VM cluster. SCAN IPv6 addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     * 
     */
    private List<String> scanIpv6ids;
    /**
     * @return The TCP Single Client Access Name (SCAN) port. The default port is 1521.
     * 
     */
    private Integer scanListenerPortTcp;
    /**
     * @return The TCPS Single Client Access Name (SCAN) port. The default port is 2484.
     * 
     */
    private Integer scanListenerPortTcpSsl;
    /**
     * @return Security Attributes for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Oracle-ZPR&#34;: {&#34;MaxEgressCount&#34;: {&#34;value&#34;: &#34;42&#34;, &#34;mode&#34;: &#34;audit&#34;}}}`
     * 
     */
    private Map<String,String> securityAttributes;
    /**
     * @return The model name of the Exadata hardware running the cloud VM cluster.
     * 
     */
    private String shape;
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
     * 
     */
    private List<String> sshPublicKeys;
    /**
     * @return The current state of the cloud VM cluster.
     * 
     */
    private String state;
    /**
     * @return Specifies the type of storage management for the Cloud VM Cluster if its ASM or Exascale.
     * 
     */
    private String storageManagementType;
    /**
     * @return The storage allocation for the disk group, in gigabytes (GB).
     * 
     */
    private Integer storageSizeInGbs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the cloud VM cluster.
     * 
     */
    private String subnetId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
     * 
     */
    private String subscriptionId;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Operating system version of the image.
     * 
     */
    private String systemVersion;
    /**
     * @return TDE keystore type
     * 
     */
    private String tdeKeyStoreType;
    /**
     * @return The date and time that the cloud VM cluster was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    private String timeZone;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) IPv4 addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP IPv4 address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     * 
     */
    private List<String> vipIds;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) IPv6 addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP IPv6 address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     * 
     */
    private List<String> vipv6ids;
    /**
     * @return The vmcluster type for the VM cluster/Cloud VM cluster.
     * 
     */
    private String vmClusterType;
    /**
     * @return The OCID of the zone the cloud VM cluster is associated with.
     * 
     */
    private String zoneId;

    private GetCloudVmClusterResult() {}
    /**
     * @return The name of the availability domain that the cloud Exadata infrastructure resource is located in.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
     * 
     */
    public List<String> backupNetworkNsgIds() {
        return this.backupNetworkNsgIds;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet associated with the cloud VM cluster.
     * 
     */
    public String backupSubnetId() {
        return this.backupSubnetId;
    }
    /**
     * @return Specifies the properties necessary for cloud automation updates. This includes modifying the apply update time preference, enabling or disabling early adoption, and enabling, modifying, or disabling the update freeze period.
     * 
     */
    public List<GetCloudVmClusterCloudAutomationUpdateDetail> cloudAutomationUpdateDetails() {
        return this.cloudAutomationUpdateDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud Exadata infrastructure.
     * 
     */
    public String cloudExadataInfrastructureId() {
        return this.cloudExadataInfrastructureId;
    }
    public String cloudVmClusterId() {
        return this.cloudVmClusterId;
    }
    /**
     * @return The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The compute model of the cloud VM cluster.
     * 
     */
    public String computeModel() {
        return this.computeModel;
    }
    /**
     * @return The number of CPU cores enabled on the cloud VM cluster.
     * 
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    public Boolean createAsync() {
        return this.createAsync;
    }
    /**
     * @return Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     */
    public List<GetCloudVmClusterDataCollectionOption> dataCollectionOptions() {
        return this.dataCollectionOptions;
    }
    /**
     * @return The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage.
     * 
     */
    public Integer dataStoragePercentage() {
        return this.dataStoragePercentage;
    }
    /**
     * @return The data disk group size to be allocated in TBs.
     * 
     */
    public Double dataStorageSizeInTbs() {
        return this.dataStorageSizeInTbs;
    }
    /**
     * @return The local node storage to be allocated in GBs.
     * 
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    /**
     * @return The list of DB servers.
     * 
     */
    public List<String> dbServers() {
        return this.dbServers;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
     * 
     */
    public String diskRedundancy() {
        return this.diskRedundancy;
    }
    /**
     * @return The user-friendly name for the cloud VM cluster. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The domain name for the cloud VM cluster.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Database Storage Vault.
     * 
     */
    public String exascaleDbStorageVaultId() {
        return this.exascaleDbStorageVaultId;
    }
    /**
     * @return Details of the file system configuration of the VM cluster.
     * 
     */
    public List<GetCloudVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails() {
        return this.fileSystemConfigurationDetails;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    public String giVersion() {
        return this.giVersion;
    }
    /**
     * @return The hostname for the cloud VM cluster.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The OCID of the identity connector
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IORM settings of the Exadata DB system.
     * 
     */
    public List<GetCloudVmClusterIormConfigCach> iormConfigCaches() {
        return this.iormConfigCaches;
    }
    /**
     * @return If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster.
     * 
     */
    public Boolean isLocalBackupEnabled() {
        return this.isLocalBackupEnabled;
    }
    /**
     * @return If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created.
     * 
     */
    public Boolean isSparseDiskgroupEnabled() {
        return this.isSparseDiskgroupEnabled;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history entry. This value is updated when a maintenance update starts.
     * 
     */
    public String lastUpdateHistoryEntryId() {
        return this.lastUpdateHistoryEntryId;
    }
    /**
     * @return The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.
     * 
     */
    public String licenseModel() {
        return this.licenseModel;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The port number configured for the listener on the cloud VM cluster.
     * 
     */
    public String listenerPort() {
        return this.listenerPort;
    }
    /**
     * @return The memory to be allocated in GBs.
     * 
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    /**
     * @return Details of the multi cloud identity connectors of the VM cluster.
     * 
     */
    public List<GetCloudVmClusterMultiCloudIdentityConnectorConfig> multiCloudIdentityConnectorConfigs() {
        return this.multiCloudIdentityConnectorConfigs;
    }
    /**
     * @return The number of nodes in the cloud VM cluster.
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.
     * 
     */
    public Double ocpuCount() {
        return this.ocpuCount;
    }
    public String privateZoneId() {
        return this.privateZoneId;
    }
    /**
     * @return The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
     * 
     */
    public String scanDnsName() {
        return this.scanDnsName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster.
     * 
     */
    public String scanDnsRecordId() {
        return this.scanDnsRecordId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IPv4 addresses associated with the cloud VM cluster. SCAN IPv4 addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     * 
     */
    public List<String> scanIpIds() {
        return this.scanIpIds;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IPv6 addresses associated with the cloud VM cluster. SCAN IPv6 addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     * 
     */
    public List<String> scanIpv6ids() {
        return this.scanIpv6ids;
    }
    /**
     * @return The TCP Single Client Access Name (SCAN) port. The default port is 1521.
     * 
     */
    public Integer scanListenerPortTcp() {
        return this.scanListenerPortTcp;
    }
    /**
     * @return The TCPS Single Client Access Name (SCAN) port. The default port is 2484.
     * 
     */
    public Integer scanListenerPortTcpSsl() {
        return this.scanListenerPortTcpSsl;
    }
    /**
     * @return Security Attributes for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Oracle-ZPR&#34;: {&#34;MaxEgressCount&#34;: {&#34;value&#34;: &#34;42&#34;, &#34;mode&#34;: &#34;audit&#34;}}}`
     * 
     */
    public Map<String,String> securityAttributes() {
        return this.securityAttributes;
    }
    /**
     * @return The model name of the Exadata hardware running the cloud VM cluster.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.
     * 
     */
    public List<String> sshPublicKeys() {
        return this.sshPublicKeys;
    }
    /**
     * @return The current state of the cloud VM cluster.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Specifies the type of storage management for the Cloud VM Cluster if its ASM or Exascale.
     * 
     */
    public String storageManagementType() {
        return this.storageManagementType;
    }
    /**
     * @return The storage allocation for the disk group, in gigabytes (GB).
     * 
     */
    public Integer storageSizeInGbs() {
        return this.storageSizeInGbs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the cloud VM cluster.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subscription with which resource needs to be associated with.
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Operating system version of the image.
     * 
     */
    public String systemVersion() {
        return this.systemVersion;
    }
    /**
     * @return TDE keystore type
     * 
     */
    public String tdeKeyStoreType() {
        return this.tdeKeyStoreType;
    }
    /**
     * @return The date and time that the cloud VM cluster was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) IPv4 addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP IPv4 address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     * 
     */
    public List<String> vipIds() {
        return this.vipIds;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) IPv6 addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP IPv6 address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     * 
     */
    public List<String> vipv6ids() {
        return this.vipv6ids;
    }
    /**
     * @return The vmcluster type for the VM cluster/Cloud VM cluster.
     * 
     */
    public String vmClusterType() {
        return this.vmClusterType;
    }
    /**
     * @return The OCID of the zone the cloud VM cluster is associated with.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudVmClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private List<String> backupNetworkNsgIds;
        private String backupSubnetId;
        private List<GetCloudVmClusterCloudAutomationUpdateDetail> cloudAutomationUpdateDetails;
        private String cloudExadataInfrastructureId;
        private String cloudVmClusterId;
        private String clusterName;
        private String compartmentId;
        private String computeModel;
        private Integer cpuCoreCount;
        private Boolean createAsync;
        private List<GetCloudVmClusterDataCollectionOption> dataCollectionOptions;
        private Integer dataStoragePercentage;
        private Double dataStorageSizeInTbs;
        private Integer dbNodeStorageSizeInGbs;
        private List<String> dbServers;
        private Map<String,String> definedTags;
        private String diskRedundancy;
        private String displayName;
        private String domain;
        private String exascaleDbStorageVaultId;
        private List<GetCloudVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails;
        private Map<String,String> freeformTags;
        private String giVersion;
        private String hostname;
        private String id;
        private List<GetCloudVmClusterIormConfigCach> iormConfigCaches;
        private Boolean isLocalBackupEnabled;
        private Boolean isSparseDiskgroupEnabled;
        private String lastUpdateHistoryEntryId;
        private String licenseModel;
        private String lifecycleDetails;
        private String listenerPort;
        private Integer memorySizeInGbs;
        private List<GetCloudVmClusterMultiCloudIdentityConnectorConfig> multiCloudIdentityConnectorConfigs;
        private Integer nodeCount;
        private List<String> nsgIds;
        private Double ocpuCount;
        private String privateZoneId;
        private String scanDnsName;
        private String scanDnsRecordId;
        private List<String> scanIpIds;
        private List<String> scanIpv6ids;
        private Integer scanListenerPortTcp;
        private Integer scanListenerPortTcpSsl;
        private Map<String,String> securityAttributes;
        private String shape;
        private List<String> sshPublicKeys;
        private String state;
        private String storageManagementType;
        private Integer storageSizeInGbs;
        private String subnetId;
        private String subscriptionId;
        private Map<String,String> systemTags;
        private String systemVersion;
        private String tdeKeyStoreType;
        private String timeCreated;
        private String timeZone;
        private List<String> vipIds;
        private List<String> vipv6ids;
        private String vmClusterType;
        private String zoneId;
        public Builder() {}
        public Builder(GetCloudVmClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.backupNetworkNsgIds = defaults.backupNetworkNsgIds;
    	      this.backupSubnetId = defaults.backupSubnetId;
    	      this.cloudAutomationUpdateDetails = defaults.cloudAutomationUpdateDetails;
    	      this.cloudExadataInfrastructureId = defaults.cloudExadataInfrastructureId;
    	      this.cloudVmClusterId = defaults.cloudVmClusterId;
    	      this.clusterName = defaults.clusterName;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeModel = defaults.computeModel;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.createAsync = defaults.createAsync;
    	      this.dataCollectionOptions = defaults.dataCollectionOptions;
    	      this.dataStoragePercentage = defaults.dataStoragePercentage;
    	      this.dataStorageSizeInTbs = defaults.dataStorageSizeInTbs;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.dbServers = defaults.dbServers;
    	      this.definedTags = defaults.definedTags;
    	      this.diskRedundancy = defaults.diskRedundancy;
    	      this.displayName = defaults.displayName;
    	      this.domain = defaults.domain;
    	      this.exascaleDbStorageVaultId = defaults.exascaleDbStorageVaultId;
    	      this.fileSystemConfigurationDetails = defaults.fileSystemConfigurationDetails;
    	      this.freeformTags = defaults.freeformTags;
    	      this.giVersion = defaults.giVersion;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.iormConfigCaches = defaults.iormConfigCaches;
    	      this.isLocalBackupEnabled = defaults.isLocalBackupEnabled;
    	      this.isSparseDiskgroupEnabled = defaults.isSparseDiskgroupEnabled;
    	      this.lastUpdateHistoryEntryId = defaults.lastUpdateHistoryEntryId;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.listenerPort = defaults.listenerPort;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.multiCloudIdentityConnectorConfigs = defaults.multiCloudIdentityConnectorConfigs;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nsgIds = defaults.nsgIds;
    	      this.ocpuCount = defaults.ocpuCount;
    	      this.privateZoneId = defaults.privateZoneId;
    	      this.scanDnsName = defaults.scanDnsName;
    	      this.scanDnsRecordId = defaults.scanDnsRecordId;
    	      this.scanIpIds = defaults.scanIpIds;
    	      this.scanIpv6ids = defaults.scanIpv6ids;
    	      this.scanListenerPortTcp = defaults.scanListenerPortTcp;
    	      this.scanListenerPortTcpSsl = defaults.scanListenerPortTcpSsl;
    	      this.securityAttributes = defaults.securityAttributes;
    	      this.shape = defaults.shape;
    	      this.sshPublicKeys = defaults.sshPublicKeys;
    	      this.state = defaults.state;
    	      this.storageManagementType = defaults.storageManagementType;
    	      this.storageSizeInGbs = defaults.storageSizeInGbs;
    	      this.subnetId = defaults.subnetId;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.systemTags = defaults.systemTags;
    	      this.systemVersion = defaults.systemVersion;
    	      this.tdeKeyStoreType = defaults.tdeKeyStoreType;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeZone = defaults.timeZone;
    	      this.vipIds = defaults.vipIds;
    	      this.vipv6ids = defaults.vipv6ids;
    	      this.vmClusterType = defaults.vmClusterType;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder backupNetworkNsgIds(List<String> backupNetworkNsgIds) {
            if (backupNetworkNsgIds == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "backupNetworkNsgIds");
            }
            this.backupNetworkNsgIds = backupNetworkNsgIds;
            return this;
        }
        public Builder backupNetworkNsgIds(String... backupNetworkNsgIds) {
            return backupNetworkNsgIds(List.of(backupNetworkNsgIds));
        }
        @CustomType.Setter
        public Builder backupSubnetId(String backupSubnetId) {
            if (backupSubnetId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "backupSubnetId");
            }
            this.backupSubnetId = backupSubnetId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudAutomationUpdateDetails(List<GetCloudVmClusterCloudAutomationUpdateDetail> cloudAutomationUpdateDetails) {
            if (cloudAutomationUpdateDetails == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "cloudAutomationUpdateDetails");
            }
            this.cloudAutomationUpdateDetails = cloudAutomationUpdateDetails;
            return this;
        }
        public Builder cloudAutomationUpdateDetails(GetCloudVmClusterCloudAutomationUpdateDetail... cloudAutomationUpdateDetails) {
            return cloudAutomationUpdateDetails(List.of(cloudAutomationUpdateDetails));
        }
        @CustomType.Setter
        public Builder cloudExadataInfrastructureId(String cloudExadataInfrastructureId) {
            if (cloudExadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "cloudExadataInfrastructureId");
            }
            this.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudVmClusterId(String cloudVmClusterId) {
            if (cloudVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "cloudVmClusterId");
            }
            this.cloudVmClusterId = cloudVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            if (clusterName == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "clusterName");
            }
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeModel(String computeModel) {
            if (computeModel == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "computeModel");
            }
            this.computeModel = computeModel;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            if (cpuCoreCount == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "cpuCoreCount");
            }
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder createAsync(Boolean createAsync) {
            if (createAsync == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "createAsync");
            }
            this.createAsync = createAsync;
            return this;
        }
        @CustomType.Setter
        public Builder dataCollectionOptions(List<GetCloudVmClusterDataCollectionOption> dataCollectionOptions) {
            if (dataCollectionOptions == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "dataCollectionOptions");
            }
            this.dataCollectionOptions = dataCollectionOptions;
            return this;
        }
        public Builder dataCollectionOptions(GetCloudVmClusterDataCollectionOption... dataCollectionOptions) {
            return dataCollectionOptions(List.of(dataCollectionOptions));
        }
        @CustomType.Setter
        public Builder dataStoragePercentage(Integer dataStoragePercentage) {
            if (dataStoragePercentage == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "dataStoragePercentage");
            }
            this.dataStoragePercentage = dataStoragePercentage;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            if (dataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "dataStorageSizeInTbs");
            }
            this.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            if (dbNodeStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "dbNodeStorageSizeInGbs");
            }
            this.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbServers(List<String> dbServers) {
            if (dbServers == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "dbServers");
            }
            this.dbServers = dbServers;
            return this;
        }
        public Builder dbServers(String... dbServers) {
            return dbServers(List.of(dbServers));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder diskRedundancy(String diskRedundancy) {
            if (diskRedundancy == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "diskRedundancy");
            }
            this.diskRedundancy = diskRedundancy;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder exascaleDbStorageVaultId(String exascaleDbStorageVaultId) {
            if (exascaleDbStorageVaultId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "exascaleDbStorageVaultId");
            }
            this.exascaleDbStorageVaultId = exascaleDbStorageVaultId;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemConfigurationDetails(List<GetCloudVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails) {
            if (fileSystemConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "fileSystemConfigurationDetails");
            }
            this.fileSystemConfigurationDetails = fileSystemConfigurationDetails;
            return this;
        }
        public Builder fileSystemConfigurationDetails(GetCloudVmClusterFileSystemConfigurationDetail... fileSystemConfigurationDetails) {
            return fileSystemConfigurationDetails(List.of(fileSystemConfigurationDetails));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder giVersion(String giVersion) {
            if (giVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "giVersion");
            }
            this.giVersion = giVersion;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder iormConfigCaches(List<GetCloudVmClusterIormConfigCach> iormConfigCaches) {
            if (iormConfigCaches == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "iormConfigCaches");
            }
            this.iormConfigCaches = iormConfigCaches;
            return this;
        }
        public Builder iormConfigCaches(GetCloudVmClusterIormConfigCach... iormConfigCaches) {
            return iormConfigCaches(List.of(iormConfigCaches));
        }
        @CustomType.Setter
        public Builder isLocalBackupEnabled(Boolean isLocalBackupEnabled) {
            if (isLocalBackupEnabled == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "isLocalBackupEnabled");
            }
            this.isLocalBackupEnabled = isLocalBackupEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isSparseDiskgroupEnabled(Boolean isSparseDiskgroupEnabled) {
            if (isSparseDiskgroupEnabled == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "isSparseDiskgroupEnabled");
            }
            this.isSparseDiskgroupEnabled = isSparseDiskgroupEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdateHistoryEntryId(String lastUpdateHistoryEntryId) {
            if (lastUpdateHistoryEntryId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "lastUpdateHistoryEntryId");
            }
            this.lastUpdateHistoryEntryId = lastUpdateHistoryEntryId;
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(String licenseModel) {
            if (licenseModel == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "licenseModel");
            }
            this.licenseModel = licenseModel;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder listenerPort(String listenerPort) {
            if (listenerPort == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "listenerPort");
            }
            this.listenerPort = listenerPort;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            if (memorySizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "memorySizeInGbs");
            }
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder multiCloudIdentityConnectorConfigs(List<GetCloudVmClusterMultiCloudIdentityConnectorConfig> multiCloudIdentityConnectorConfigs) {
            if (multiCloudIdentityConnectorConfigs == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "multiCloudIdentityConnectorConfigs");
            }
            this.multiCloudIdentityConnectorConfigs = multiCloudIdentityConnectorConfigs;
            return this;
        }
        public Builder multiCloudIdentityConnectorConfigs(GetCloudVmClusterMultiCloudIdentityConnectorConfig... multiCloudIdentityConnectorConfigs) {
            return multiCloudIdentityConnectorConfigs(List.of(multiCloudIdentityConnectorConfigs));
        }
        @CustomType.Setter
        public Builder nodeCount(Integer nodeCount) {
            if (nodeCount == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "nodeCount");
            }
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            if (nsgIds == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "nsgIds");
            }
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder ocpuCount(Double ocpuCount) {
            if (ocpuCount == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "ocpuCount");
            }
            this.ocpuCount = ocpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder privateZoneId(String privateZoneId) {
            if (privateZoneId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "privateZoneId");
            }
            this.privateZoneId = privateZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder scanDnsName(String scanDnsName) {
            if (scanDnsName == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "scanDnsName");
            }
            this.scanDnsName = scanDnsName;
            return this;
        }
        @CustomType.Setter
        public Builder scanDnsRecordId(String scanDnsRecordId) {
            if (scanDnsRecordId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "scanDnsRecordId");
            }
            this.scanDnsRecordId = scanDnsRecordId;
            return this;
        }
        @CustomType.Setter
        public Builder scanIpIds(List<String> scanIpIds) {
            if (scanIpIds == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "scanIpIds");
            }
            this.scanIpIds = scanIpIds;
            return this;
        }
        public Builder scanIpIds(String... scanIpIds) {
            return scanIpIds(List.of(scanIpIds));
        }
        @CustomType.Setter
        public Builder scanIpv6ids(List<String> scanIpv6ids) {
            if (scanIpv6ids == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "scanIpv6ids");
            }
            this.scanIpv6ids = scanIpv6ids;
            return this;
        }
        public Builder scanIpv6ids(String... scanIpv6ids) {
            return scanIpv6ids(List.of(scanIpv6ids));
        }
        @CustomType.Setter
        public Builder scanListenerPortTcp(Integer scanListenerPortTcp) {
            if (scanListenerPortTcp == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "scanListenerPortTcp");
            }
            this.scanListenerPortTcp = scanListenerPortTcp;
            return this;
        }
        @CustomType.Setter
        public Builder scanListenerPortTcpSsl(Integer scanListenerPortTcpSsl) {
            if (scanListenerPortTcpSsl == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "scanListenerPortTcpSsl");
            }
            this.scanListenerPortTcpSsl = scanListenerPortTcpSsl;
            return this;
        }
        @CustomType.Setter
        public Builder securityAttributes(Map<String,String> securityAttributes) {
            if (securityAttributes == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "securityAttributes");
            }
            this.securityAttributes = securityAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            if (shape == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "shape");
            }
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder sshPublicKeys(List<String> sshPublicKeys) {
            if (sshPublicKeys == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "sshPublicKeys");
            }
            this.sshPublicKeys = sshPublicKeys;
            return this;
        }
        public Builder sshPublicKeys(String... sshPublicKeys) {
            return sshPublicKeys(List.of(sshPublicKeys));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder storageManagementType(String storageManagementType) {
            if (storageManagementType == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "storageManagementType");
            }
            this.storageManagementType = storageManagementType;
            return this;
        }
        @CustomType.Setter
        public Builder storageSizeInGbs(Integer storageSizeInGbs) {
            if (storageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "storageSizeInGbs");
            }
            this.storageSizeInGbs = storageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder systemVersion(String systemVersion) {
            if (systemVersion == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "systemVersion");
            }
            this.systemVersion = systemVersion;
            return this;
        }
        @CustomType.Setter
        public Builder tdeKeyStoreType(String tdeKeyStoreType) {
            if (tdeKeyStoreType == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "tdeKeyStoreType");
            }
            this.tdeKeyStoreType = tdeKeyStoreType;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder vipIds(List<String> vipIds) {
            if (vipIds == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "vipIds");
            }
            this.vipIds = vipIds;
            return this;
        }
        public Builder vipIds(String... vipIds) {
            return vipIds(List.of(vipIds));
        }
        @CustomType.Setter
        public Builder vipv6ids(List<String> vipv6ids) {
            if (vipv6ids == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "vipv6ids");
            }
            this.vipv6ids = vipv6ids;
            return this;
        }
        public Builder vipv6ids(String... vipv6ids) {
            return vipv6ids(List.of(vipv6ids));
        }
        @CustomType.Setter
        public Builder vmClusterType(String vmClusterType) {
            if (vmClusterType == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "vmClusterType");
            }
            this.vmClusterType = vmClusterType;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClusterResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetCloudVmClusterResult build() {
            final var _resultValue = new GetCloudVmClusterResult();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.backupNetworkNsgIds = backupNetworkNsgIds;
            _resultValue.backupSubnetId = backupSubnetId;
            _resultValue.cloudAutomationUpdateDetails = cloudAutomationUpdateDetails;
            _resultValue.cloudExadataInfrastructureId = cloudExadataInfrastructureId;
            _resultValue.cloudVmClusterId = cloudVmClusterId;
            _resultValue.clusterName = clusterName;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeModel = computeModel;
            _resultValue.cpuCoreCount = cpuCoreCount;
            _resultValue.createAsync = createAsync;
            _resultValue.dataCollectionOptions = dataCollectionOptions;
            _resultValue.dataStoragePercentage = dataStoragePercentage;
            _resultValue.dataStorageSizeInTbs = dataStorageSizeInTbs;
            _resultValue.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            _resultValue.dbServers = dbServers;
            _resultValue.definedTags = definedTags;
            _resultValue.diskRedundancy = diskRedundancy;
            _resultValue.displayName = displayName;
            _resultValue.domain = domain;
            _resultValue.exascaleDbStorageVaultId = exascaleDbStorageVaultId;
            _resultValue.fileSystemConfigurationDetails = fileSystemConfigurationDetails;
            _resultValue.freeformTags = freeformTags;
            _resultValue.giVersion = giVersion;
            _resultValue.hostname = hostname;
            _resultValue.id = id;
            _resultValue.iormConfigCaches = iormConfigCaches;
            _resultValue.isLocalBackupEnabled = isLocalBackupEnabled;
            _resultValue.isSparseDiskgroupEnabled = isSparseDiskgroupEnabled;
            _resultValue.lastUpdateHistoryEntryId = lastUpdateHistoryEntryId;
            _resultValue.licenseModel = licenseModel;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.listenerPort = listenerPort;
            _resultValue.memorySizeInGbs = memorySizeInGbs;
            _resultValue.multiCloudIdentityConnectorConfigs = multiCloudIdentityConnectorConfigs;
            _resultValue.nodeCount = nodeCount;
            _resultValue.nsgIds = nsgIds;
            _resultValue.ocpuCount = ocpuCount;
            _resultValue.privateZoneId = privateZoneId;
            _resultValue.scanDnsName = scanDnsName;
            _resultValue.scanDnsRecordId = scanDnsRecordId;
            _resultValue.scanIpIds = scanIpIds;
            _resultValue.scanIpv6ids = scanIpv6ids;
            _resultValue.scanListenerPortTcp = scanListenerPortTcp;
            _resultValue.scanListenerPortTcpSsl = scanListenerPortTcpSsl;
            _resultValue.securityAttributes = securityAttributes;
            _resultValue.shape = shape;
            _resultValue.sshPublicKeys = sshPublicKeys;
            _resultValue.state = state;
            _resultValue.storageManagementType = storageManagementType;
            _resultValue.storageSizeInGbs = storageSizeInGbs;
            _resultValue.subnetId = subnetId;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.systemTags = systemTags;
            _resultValue.systemVersion = systemVersion;
            _resultValue.tdeKeyStoreType = tdeKeyStoreType;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeZone = timeZone;
            _resultValue.vipIds = vipIds;
            _resultValue.vipv6ids = vipv6ids;
            _resultValue.vmClusterType = vmClusterType;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
