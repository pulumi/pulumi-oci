// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetCloudVmClustersCloudVmClusterIormConfigCachDbPlan;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudVmClustersCloudVmClusterIormConfigCach {
    private List<GetCloudVmClustersCloudVmClusterIormConfigCachDbPlan> dbPlans;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    private String objective;
    /**
     * @return A filter to return only cloud VM clusters that match the given lifecycle state exactly.
     * 
     */
    private String state;

    private GetCloudVmClustersCloudVmClusterIormConfigCach() {}
    public List<GetCloudVmClustersCloudVmClusterIormConfigCachDbPlan> dbPlans() {
        return this.dbPlans;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public String objective() {
        return this.objective;
    }
    /**
     * @return A filter to return only cloud VM clusters that match the given lifecycle state exactly.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudVmClustersCloudVmClusterIormConfigCach defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCloudVmClustersCloudVmClusterIormConfigCachDbPlan> dbPlans;
        private String lifecycleDetails;
        private String objective;
        private String state;
        public Builder() {}
        public Builder(GetCloudVmClustersCloudVmClusterIormConfigCach defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbPlans = defaults.dbPlans;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.objective = defaults.objective;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder dbPlans(List<GetCloudVmClustersCloudVmClusterIormConfigCachDbPlan> dbPlans) {
            if (dbPlans == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClustersCloudVmClusterIormConfigCach", "dbPlans");
            }
            this.dbPlans = dbPlans;
            return this;
        }
        public Builder dbPlans(GetCloudVmClustersCloudVmClusterIormConfigCachDbPlan... dbPlans) {
            return dbPlans(List.of(dbPlans));
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClustersCloudVmClusterIormConfigCach", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder objective(String objective) {
            if (objective == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClustersCloudVmClusterIormConfigCach", "objective");
            }
            this.objective = objective;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCloudVmClustersCloudVmClusterIormConfigCach", "state");
            }
            this.state = state;
            return this;
        }
        public GetCloudVmClustersCloudVmClusterIormConfigCach build() {
            final var _resultValue = new GetCloudVmClustersCloudVmClusterIormConfigCach();
            _resultValue.dbPlans = dbPlans;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.objective = objective;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
