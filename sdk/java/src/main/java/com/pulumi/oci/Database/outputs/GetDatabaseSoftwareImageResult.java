// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatabaseSoftwareImageResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    private String databaseSoftwareImageId;
    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    private @Nullable List<String> databaseSoftwareImageIncludedPatches;
    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    private @Nullable List<String> databaseSoftwareImageOneOffPatches;
    /**
     * @return The database version with which the database software image is to be built.
     * 
     */
    private @Nullable String databaseVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The user-friendly name for the database software image. The name does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database software image.
     * 
     */
    private @Nullable String id;
    /**
     * @return To what shape the image is meant for.
     * 
     */
    private @Nullable String imageShapeFamily;
    /**
     * @return The type of software image. Can be grid or database.
     * 
     */
    private @Nullable String imageType;
    /**
     * @return The patches included in the image and the version of the image.
     * 
     */
    private @Nullable String includedPatchesSummary;
    /**
     * @return True if this Database software image is supported for Upgrade.
     * 
     */
    private @Nullable Boolean isUpgradeSupported;
    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The output from the OPatch lsInventory command, which is passed as a string.
     * 
     */
    private @Nullable String lsInventory;
    /**
     * @return The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     * 
     */
    private @Nullable String patchSet;
    private @Nullable String sourceDbHomeId;
    /**
     * @return The current state of the database software image.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the database software image was created.
     * 
     */
    private @Nullable String timeCreated;

    private GetDatabaseSoftwareImageResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public String databaseSoftwareImageId() {
        return this.databaseSoftwareImageId;
    }
    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    public List<String> databaseSoftwareImageIncludedPatches() {
        return this.databaseSoftwareImageIncludedPatches == null ? List.of() : this.databaseSoftwareImageIncludedPatches;
    }
    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    public List<String> databaseSoftwareImageOneOffPatches() {
        return this.databaseSoftwareImageOneOffPatches == null ? List.of() : this.databaseSoftwareImageOneOffPatches;
    }
    /**
     * @return The database version with which the database software image is to be built.
     * 
     */
    public Optional<String> databaseVersion() {
        return Optional.ofNullable(this.databaseVersion);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The user-friendly name for the database software image. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database software image.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return To what shape the image is meant for.
     * 
     */
    public Optional<String> imageShapeFamily() {
        return Optional.ofNullable(this.imageShapeFamily);
    }
    /**
     * @return The type of software image. Can be grid or database.
     * 
     */
    public Optional<String> imageType() {
        return Optional.ofNullable(this.imageType);
    }
    /**
     * @return The patches included in the image and the version of the image.
     * 
     */
    public Optional<String> includedPatchesSummary() {
        return Optional.ofNullable(this.includedPatchesSummary);
    }
    /**
     * @return True if this Database software image is supported for Upgrade.
     * 
     */
    public Optional<Boolean> isUpgradeSupported() {
        return Optional.ofNullable(this.isUpgradeSupported);
    }
    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The output from the OPatch lsInventory command, which is passed as a string.
     * 
     */
    public Optional<String> lsInventory() {
        return Optional.ofNullable(this.lsInventory);
    }
    /**
     * @return The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     * 
     */
    public Optional<String> patchSet() {
        return Optional.ofNullable(this.patchSet);
    }
    public Optional<String> sourceDbHomeId() {
        return Optional.ofNullable(this.sourceDbHomeId);
    }
    /**
     * @return The current state of the database software image.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the database software image was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseSoftwareImageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private String databaseSoftwareImageId;
        private @Nullable List<String> databaseSoftwareImageIncludedPatches;
        private @Nullable List<String> databaseSoftwareImageOneOffPatches;
        private @Nullable String databaseVersion;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String imageShapeFamily;
        private @Nullable String imageType;
        private @Nullable String includedPatchesSummary;
        private @Nullable Boolean isUpgradeSupported;
        private @Nullable String lifecycleDetails;
        private @Nullable String lsInventory;
        private @Nullable String patchSet;
        private @Nullable String sourceDbHomeId;
        private @Nullable String state;
        private @Nullable String timeCreated;
        public Builder() {}
        public Builder(GetDatabaseSoftwareImageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseSoftwareImageId = defaults.databaseSoftwareImageId;
    	      this.databaseSoftwareImageIncludedPatches = defaults.databaseSoftwareImageIncludedPatches;
    	      this.databaseSoftwareImageOneOffPatches = defaults.databaseSoftwareImageOneOffPatches;
    	      this.databaseVersion = defaults.databaseVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.imageShapeFamily = defaults.imageShapeFamily;
    	      this.imageType = defaults.imageType;
    	      this.includedPatchesSummary = defaults.includedPatchesSummary;
    	      this.isUpgradeSupported = defaults.isUpgradeSupported;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lsInventory = defaults.lsInventory;
    	      this.patchSet = defaults.patchSet;
    	      this.sourceDbHomeId = defaults.sourceDbHomeId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseSoftwareImageId(String databaseSoftwareImageId) {
            this.databaseSoftwareImageId = Objects.requireNonNull(databaseSoftwareImageId);
            return this;
        }
        @CustomType.Setter
        public Builder databaseSoftwareImageIncludedPatches(@Nullable List<String> databaseSoftwareImageIncludedPatches) {
            this.databaseSoftwareImageIncludedPatches = databaseSoftwareImageIncludedPatches;
            return this;
        }
        public Builder databaseSoftwareImageIncludedPatches(String... databaseSoftwareImageIncludedPatches) {
            return databaseSoftwareImageIncludedPatches(List.of(databaseSoftwareImageIncludedPatches));
        }
        @CustomType.Setter
        public Builder databaseSoftwareImageOneOffPatches(@Nullable List<String> databaseSoftwareImageOneOffPatches) {
            this.databaseSoftwareImageOneOffPatches = databaseSoftwareImageOneOffPatches;
            return this;
        }
        public Builder databaseSoftwareImageOneOffPatches(String... databaseSoftwareImageOneOffPatches) {
            return databaseSoftwareImageOneOffPatches(List.of(databaseSoftwareImageOneOffPatches));
        }
        @CustomType.Setter
        public Builder databaseVersion(@Nullable String databaseVersion) {
            this.databaseVersion = databaseVersion;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageShapeFamily(@Nullable String imageShapeFamily) {
            this.imageShapeFamily = imageShapeFamily;
            return this;
        }
        @CustomType.Setter
        public Builder imageType(@Nullable String imageType) {
            this.imageType = imageType;
            return this;
        }
        @CustomType.Setter
        public Builder includedPatchesSummary(@Nullable String includedPatchesSummary) {
            this.includedPatchesSummary = includedPatchesSummary;
            return this;
        }
        @CustomType.Setter
        public Builder isUpgradeSupported(@Nullable Boolean isUpgradeSupported) {
            this.isUpgradeSupported = isUpgradeSupported;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lsInventory(@Nullable String lsInventory) {
            this.lsInventory = lsInventory;
            return this;
        }
        @CustomType.Setter
        public Builder patchSet(@Nullable String patchSet) {
            this.patchSet = patchSet;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDbHomeId(@Nullable String sourceDbHomeId) {
            this.sourceDbHomeId = sourceDbHomeId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        public GetDatabaseSoftwareImageResult build() {
            final var o = new GetDatabaseSoftwareImageResult();
            o.compartmentId = compartmentId;
            o.databaseSoftwareImageId = databaseSoftwareImageId;
            o.databaseSoftwareImageIncludedPatches = databaseSoftwareImageIncludedPatches;
            o.databaseSoftwareImageOneOffPatches = databaseSoftwareImageOneOffPatches;
            o.databaseVersion = databaseVersion;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.imageShapeFamily = imageShapeFamily;
            o.imageType = imageType;
            o.includedPatchesSummary = includedPatchesSummary;
            o.isUpgradeSupported = isUpgradeSupported;
            o.lifecycleDetails = lifecycleDetails;
            o.lsInventory = lsInventory;
            o.patchSet = patchSet;
            o.sourceDbHomeId = sourceDbHomeId;
            o.state = state;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
