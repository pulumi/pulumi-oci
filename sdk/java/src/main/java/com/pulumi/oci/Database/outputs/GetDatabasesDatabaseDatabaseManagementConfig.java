// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatabasesDatabaseDatabaseManagementConfig {
    /**
     * @return The status of the Database Management service.
     * 
     */
    private @Nullable String managementStatus;
    /**
     * @return The Database Management type.
     * 
     */
    private @Nullable String managementType;

    private GetDatabasesDatabaseDatabaseManagementConfig() {}
    /**
     * @return The status of the Database Management service.
     * 
     */
    public Optional<String> managementStatus() {
        return Optional.ofNullable(this.managementStatus);
    }
    /**
     * @return The Database Management type.
     * 
     */
    public Optional<String> managementType() {
        return Optional.ofNullable(this.managementType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabasesDatabaseDatabaseManagementConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String managementStatus;
        private @Nullable String managementType;
        public Builder() {}
        public Builder(GetDatabasesDatabaseDatabaseManagementConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.managementStatus = defaults.managementStatus;
    	      this.managementType = defaults.managementType;
        }

        @CustomType.Setter
        public Builder managementStatus(@Nullable String managementStatus) {
            this.managementStatus = managementStatus;
            return this;
        }
        @CustomType.Setter
        public Builder managementType(@Nullable String managementType) {
            this.managementType = managementType;
            return this;
        }
        public GetDatabasesDatabaseDatabaseManagementConfig build() {
            final var o = new GetDatabasesDatabaseDatabaseManagementConfig();
            o.managementStatus = managementStatus;
            o.managementType = managementType;
            return o;
        }
    }
}
