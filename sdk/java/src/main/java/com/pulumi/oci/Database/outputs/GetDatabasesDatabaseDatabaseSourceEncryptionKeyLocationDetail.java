// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabasesDatabaseDatabaseSourceEncryptionKeyLocationDetail {
    /**
     * @return Provide the HSM password as you would in RDBMS for External HSM.
     * 
     */
    private String hsmPassword;
    /**
     * @return Use &#39;EXTERNAL&#39; for creating a new database or migrate database key with External HSM.
     * 
     */
    private String providerType;

    private GetDatabasesDatabaseDatabaseSourceEncryptionKeyLocationDetail() {}
    /**
     * @return Provide the HSM password as you would in RDBMS for External HSM.
     * 
     */
    public String hsmPassword() {
        return this.hsmPassword;
    }
    /**
     * @return Use &#39;EXTERNAL&#39; for creating a new database or migrate database key with External HSM.
     * 
     */
    public String providerType() {
        return this.providerType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabasesDatabaseDatabaseSourceEncryptionKeyLocationDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String hsmPassword;
        private String providerType;
        public Builder() {}
        public Builder(GetDatabasesDatabaseDatabaseSourceEncryptionKeyLocationDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hsmPassword = defaults.hsmPassword;
    	      this.providerType = defaults.providerType;
        }

        @CustomType.Setter
        public Builder hsmPassword(String hsmPassword) {
            if (hsmPassword == null) {
              throw new MissingRequiredPropertyException("GetDatabasesDatabaseDatabaseSourceEncryptionKeyLocationDetail", "hsmPassword");
            }
            this.hsmPassword = hsmPassword;
            return this;
        }
        @CustomType.Setter
        public Builder providerType(String providerType) {
            if (providerType == null) {
              throw new MissingRequiredPropertyException("GetDatabasesDatabaseDatabaseSourceEncryptionKeyLocationDetail", "providerType");
            }
            this.providerType = providerType;
            return this;
        }
        public GetDatabasesDatabaseDatabaseSourceEncryptionKeyLocationDetail build() {
            final var _resultValue = new GetDatabasesDatabaseDatabaseSourceEncryptionKeyLocationDetail();
            _resultValue.hsmPassword = hsmPassword;
            _resultValue.providerType = providerType;
            return _resultValue;
        }
    }
}
