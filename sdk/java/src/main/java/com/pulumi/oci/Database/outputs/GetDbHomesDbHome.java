// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetDbHomesDbHomeDatabase;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbHomesDbHome {
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    private @Nullable String databaseSoftwareImageId;
    private @Nullable List<GetDbHomesDbHomeDatabase> databases;
    private @Nullable String dbHomeId;
    /**
     * @return The location of the Oracle Database Home.
     * 
     */
    private @Nullable String dbHomeLocation;
    /**
     * @return The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
     * 
     */
    private @Nullable String dbSystemId;
    /**
     * @return A filter to return only DB Homes that match the specified dbVersion.
     * 
     */
    private @Nullable String dbVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private @Nullable String displayName;
    private @Nullable Boolean enableDatabaseDelete;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     * 
     */
    private @Nullable String id;
    private @Nullable Boolean isDesupportedVersion;
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    private @Nullable String kmsKeyId;
    private @Nullable String kmsKeyVersionId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation is started.
     * 
     */
    private @Nullable String lastPatchHistoryEntryId;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    private @Nullable String source;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the Database Home was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     * 
     */
    private @Nullable String vmClusterId;

    private GetDbHomesDbHome() {}
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The database software image [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public Optional<String> databaseSoftwareImageId() {
        return Optional.ofNullable(this.databaseSoftwareImageId);
    }
    public List<GetDbHomesDbHomeDatabase> databases() {
        return this.databases == null ? List.of() : this.databases;
    }
    public Optional<String> dbHomeId() {
        return Optional.ofNullable(this.dbHomeId);
    }
    /**
     * @return The location of the Oracle Database Home.
     * 
     */
    public Optional<String> dbHomeLocation() {
        return Optional.ofNullable(this.dbHomeLocation);
    }
    /**
     * @return The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
     * 
     */
    public Optional<String> dbSystemId() {
        return Optional.ofNullable(this.dbSystemId);
    }
    /**
     * @return A filter to return only DB Homes that match the specified dbVersion.
     * 
     */
    public Optional<String> dbVersion() {
        return Optional.ofNullable(this.dbVersion);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public Optional<Boolean> enableDatabaseDelete() {
        return Optional.ofNullable(this.enableDatabaseDelete);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<Boolean> isDesupportedVersion() {
        return Optional.ofNullable(this.isDesupportedVersion);
    }
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    public Optional<String> kmsKeyVersionId() {
        return Optional.ofNullable(this.kmsKeyVersionId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation is started.
     * 
     */
    public Optional<String> lastPatchHistoryEntryId() {
        return Optional.ofNullable(this.lastPatchHistoryEntryId);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the Database Home was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     * 
     */
    public Optional<String> vmClusterId() {
        return Optional.ofNullable(this.vmClusterId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbHomesDbHome defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String databaseSoftwareImageId;
        private @Nullable List<GetDbHomesDbHomeDatabase> databases;
        private @Nullable String dbHomeId;
        private @Nullable String dbHomeLocation;
        private @Nullable String dbSystemId;
        private @Nullable String dbVersion;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Boolean enableDatabaseDelete;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isDesupportedVersion;
        private @Nullable String kmsKeyId;
        private @Nullable String kmsKeyVersionId;
        private @Nullable String lastPatchHistoryEntryId;
        private @Nullable String lifecycleDetails;
        private @Nullable String source;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String vmClusterId;
        public Builder() {}
        public Builder(GetDbHomesDbHome defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseSoftwareImageId = defaults.databaseSoftwareImageId;
    	      this.databases = defaults.databases;
    	      this.dbHomeId = defaults.dbHomeId;
    	      this.dbHomeLocation = defaults.dbHomeLocation;
    	      this.dbSystemId = defaults.dbSystemId;
    	      this.dbVersion = defaults.dbVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.enableDatabaseDelete = defaults.enableDatabaseDelete;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isDesupportedVersion = defaults.isDesupportedVersion;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.kmsKeyVersionId = defaults.kmsKeyVersionId;
    	      this.lastPatchHistoryEntryId = defaults.lastPatchHistoryEntryId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.source = defaults.source;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.vmClusterId = defaults.vmClusterId;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseSoftwareImageId(@Nullable String databaseSoftwareImageId) {
            this.databaseSoftwareImageId = databaseSoftwareImageId;
            return this;
        }
        @CustomType.Setter
        public Builder databases(@Nullable List<GetDbHomesDbHomeDatabase> databases) {
            this.databases = databases;
            return this;
        }
        public Builder databases(GetDbHomesDbHomeDatabase... databases) {
            return databases(List.of(databases));
        }
        @CustomType.Setter
        public Builder dbHomeId(@Nullable String dbHomeId) {
            this.dbHomeId = dbHomeId;
            return this;
        }
        @CustomType.Setter
        public Builder dbHomeLocation(@Nullable String dbHomeLocation) {
            this.dbHomeLocation = dbHomeLocation;
            return this;
        }
        @CustomType.Setter
        public Builder dbSystemId(@Nullable String dbSystemId) {
            this.dbSystemId = dbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(@Nullable String dbVersion) {
            this.dbVersion = dbVersion;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder enableDatabaseDelete(@Nullable Boolean enableDatabaseDelete) {
            this.enableDatabaseDelete = enableDatabaseDelete;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDesupportedVersion(@Nullable Boolean isDesupportedVersion) {
            this.isDesupportedVersion = isDesupportedVersion;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyVersionId(@Nullable String kmsKeyVersionId) {
            this.kmsKeyVersionId = kmsKeyVersionId;
            return this;
        }
        @CustomType.Setter
        public Builder lastPatchHistoryEntryId(@Nullable String lastPatchHistoryEntryId) {
            this.lastPatchHistoryEntryId = lastPatchHistoryEntryId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterId(@Nullable String vmClusterId) {
            this.vmClusterId = vmClusterId;
            return this;
        }
        public GetDbHomesDbHome build() {
            final var o = new GetDbHomesDbHome();
            o.compartmentId = compartmentId;
            o.databaseSoftwareImageId = databaseSoftwareImageId;
            o.databases = databases;
            o.dbHomeId = dbHomeId;
            o.dbHomeLocation = dbHomeLocation;
            o.dbSystemId = dbSystemId;
            o.dbVersion = dbVersion;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.enableDatabaseDelete = enableDatabaseDelete;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isDesupportedVersion = isDesupportedVersion;
            o.kmsKeyId = kmsKeyId;
            o.kmsKeyVersionId = kmsKeyVersionId;
            o.lastPatchHistoryEntryId = lastPatchHistoryEntryId;
            o.lifecycleDetails = lifecycleDetails;
            o.source = source;
            o.state = state;
            o.timeCreated = timeCreated;
            o.vmClusterId = vmClusterId;
            return o;
        }
    }
}
