// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetDbHomesDbHomeDatabaseDbBackupConfigBackupDestinationDetail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbHomesDbHomeDatabaseDbBackupConfig {
    private @Nullable Boolean autoBackupEnabled;
    private @Nullable String autoBackupWindow;
    private @Nullable String autoFullBackupDay;
    private @Nullable String autoFullBackupWindow;
    private @Nullable String backupDeletionPolicy;
    private @Nullable List<GetDbHomesDbHomeDatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails;
    private @Nullable Integer recoveryWindowInDays;
    private @Nullable Boolean runImmediateFullBackup;

    private GetDbHomesDbHomeDatabaseDbBackupConfig() {}
    public Optional<Boolean> autoBackupEnabled() {
        return Optional.ofNullable(this.autoBackupEnabled);
    }
    public Optional<String> autoBackupWindow() {
        return Optional.ofNullable(this.autoBackupWindow);
    }
    public Optional<String> autoFullBackupDay() {
        return Optional.ofNullable(this.autoFullBackupDay);
    }
    public Optional<String> autoFullBackupWindow() {
        return Optional.ofNullable(this.autoFullBackupWindow);
    }
    public Optional<String> backupDeletionPolicy() {
        return Optional.ofNullable(this.backupDeletionPolicy);
    }
    public List<GetDbHomesDbHomeDatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails() {
        return this.backupDestinationDetails == null ? List.of() : this.backupDestinationDetails;
    }
    public Optional<Integer> recoveryWindowInDays() {
        return Optional.ofNullable(this.recoveryWindowInDays);
    }
    public Optional<Boolean> runImmediateFullBackup() {
        return Optional.ofNullable(this.runImmediateFullBackup);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbHomesDbHomeDatabaseDbBackupConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoBackupEnabled;
        private @Nullable String autoBackupWindow;
        private @Nullable String autoFullBackupDay;
        private @Nullable String autoFullBackupWindow;
        private @Nullable String backupDeletionPolicy;
        private @Nullable List<GetDbHomesDbHomeDatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails;
        private @Nullable Integer recoveryWindowInDays;
        private @Nullable Boolean runImmediateFullBackup;
        public Builder() {}
        public Builder(GetDbHomesDbHomeDatabaseDbBackupConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoBackupEnabled = defaults.autoBackupEnabled;
    	      this.autoBackupWindow = defaults.autoBackupWindow;
    	      this.autoFullBackupDay = defaults.autoFullBackupDay;
    	      this.autoFullBackupWindow = defaults.autoFullBackupWindow;
    	      this.backupDeletionPolicy = defaults.backupDeletionPolicy;
    	      this.backupDestinationDetails = defaults.backupDestinationDetails;
    	      this.recoveryWindowInDays = defaults.recoveryWindowInDays;
    	      this.runImmediateFullBackup = defaults.runImmediateFullBackup;
        }

        @CustomType.Setter
        public Builder autoBackupEnabled(@Nullable Boolean autoBackupEnabled) {
            this.autoBackupEnabled = autoBackupEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder autoBackupWindow(@Nullable String autoBackupWindow) {
            this.autoBackupWindow = autoBackupWindow;
            return this;
        }
        @CustomType.Setter
        public Builder autoFullBackupDay(@Nullable String autoFullBackupDay) {
            this.autoFullBackupDay = autoFullBackupDay;
            return this;
        }
        @CustomType.Setter
        public Builder autoFullBackupWindow(@Nullable String autoFullBackupWindow) {
            this.autoFullBackupWindow = autoFullBackupWindow;
            return this;
        }
        @CustomType.Setter
        public Builder backupDeletionPolicy(@Nullable String backupDeletionPolicy) {
            this.backupDeletionPolicy = backupDeletionPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder backupDestinationDetails(@Nullable List<GetDbHomesDbHomeDatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails) {
            this.backupDestinationDetails = backupDestinationDetails;
            return this;
        }
        public Builder backupDestinationDetails(GetDbHomesDbHomeDatabaseDbBackupConfigBackupDestinationDetail... backupDestinationDetails) {
            return backupDestinationDetails(List.of(backupDestinationDetails));
        }
        @CustomType.Setter
        public Builder recoveryWindowInDays(@Nullable Integer recoveryWindowInDays) {
            this.recoveryWindowInDays = recoveryWindowInDays;
            return this;
        }
        @CustomType.Setter
        public Builder runImmediateFullBackup(@Nullable Boolean runImmediateFullBackup) {
            this.runImmediateFullBackup = runImmediateFullBackup;
            return this;
        }
        public GetDbHomesDbHomeDatabaseDbBackupConfig build() {
            final var o = new GetDbHomesDbHomeDatabaseDbBackupConfig();
            o.autoBackupEnabled = autoBackupEnabled;
            o.autoBackupWindow = autoBackupWindow;
            o.autoFullBackupDay = autoFullBackupDay;
            o.autoFullBackupWindow = autoFullBackupWindow;
            o.backupDeletionPolicy = backupDeletionPolicy;
            o.backupDestinationDetails = backupDestinationDetails;
            o.recoveryWindowInDays = recoveryWindowInDays;
            o.runImmediateFullBackup = runImmediateFullBackup;
            return o;
        }
    }
}
