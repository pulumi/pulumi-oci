// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDbNodeConsoleConnectionsConsoleConnection {
    /**
     * @return The OCID of the compartment to contain the console connection.
     * 
     */
    private String compartmentId;
    /**
     * @return The SSH connection string for the console connection.
     * 
     */
    private String connectionString;
    /**
     * @return The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String dbNodeId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The SSH public key fingerprint for the console connection.
     * 
     */
    private String fingerprint;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The OCID of the console connection.
     * 
     */
    private String id;
    /**
     * @return Information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    private String publicKey;
    /**
     * @return The SSH public key&#39;s fingerprint for the console connection service host.
     * 
     */
    private String serviceHostKeyFingerprint;
    /**
     * @return The current state of the console connection.
     * 
     */
    private String state;

    private GetDbNodeConsoleConnectionsConsoleConnection() {}
    /**
     * @return The OCID of the compartment to contain the console connection.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The SSH connection string for the console connection.
     * 
     */
    public String connectionString() {
        return this.connectionString;
    }
    /**
     * @return The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String dbNodeId() {
        return this.dbNodeId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The SSH public key fingerprint for the console connection.
     * 
     */
    public String fingerprint() {
        return this.fingerprint;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the console connection.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public String publicKey() {
        return this.publicKey;
    }
    /**
     * @return The SSH public key&#39;s fingerprint for the console connection service host.
     * 
     */
    public String serviceHostKeyFingerprint() {
        return this.serviceHostKeyFingerprint;
    }
    /**
     * @return The current state of the console connection.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbNodeConsoleConnectionsConsoleConnection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String connectionString;
        private String dbNodeId;
        private Map<String,Object> definedTags;
        private String fingerprint;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String publicKey;
        private String serviceHostKeyFingerprint;
        private String state;
        public Builder() {}
        public Builder(GetDbNodeConsoleConnectionsConsoleConnection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionString = defaults.connectionString;
    	      this.dbNodeId = defaults.dbNodeId;
    	      this.definedTags = defaults.definedTags;
    	      this.fingerprint = defaults.fingerprint;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.publicKey = defaults.publicKey;
    	      this.serviceHostKeyFingerprint = defaults.serviceHostKeyFingerprint;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder connectionString(String connectionString) {
            this.connectionString = Objects.requireNonNull(connectionString);
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeId(String dbNodeId) {
            this.dbNodeId = Objects.requireNonNull(dbNodeId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder fingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            this.publicKey = Objects.requireNonNull(publicKey);
            return this;
        }
        @CustomType.Setter
        public Builder serviceHostKeyFingerprint(String serviceHostKeyFingerprint) {
            this.serviceHostKeyFingerprint = Objects.requireNonNull(serviceHostKeyFingerprint);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public GetDbNodeConsoleConnectionsConsoleConnection build() {
            final var _resultValue = new GetDbNodeConsoleConnectionsConsoleConnection();
            _resultValue.compartmentId = compartmentId;
            _resultValue.connectionString = connectionString;
            _resultValue.dbNodeId = dbNodeId;
            _resultValue.definedTags = definedTags;
            _resultValue.fingerprint = fingerprint;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.publicKey = publicKey;
            _resultValue.serviceHostKeyFingerprint = serviceHostKeyFingerprint;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
