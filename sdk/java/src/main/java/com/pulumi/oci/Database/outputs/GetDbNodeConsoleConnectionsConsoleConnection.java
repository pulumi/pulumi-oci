// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbNodeConsoleConnectionsConsoleConnection {
    /**
     * @return The OCID of the compartment to contain the console connection.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The SSH connection string for the console connection.
     * 
     */
    private @Nullable String connectionString;
    /**
     * @return The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String dbNodeId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The SSH public key fingerprint for the console connection.
     * 
     */
    private @Nullable String fingerprint;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the console connection.
     * 
     */
    private @Nullable String id;
    /**
     * @return Information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    private @Nullable String publicKey;
    /**
     * @return The SSH public key&#39;s fingerprint for the console connection service host.
     * 
     */
    private @Nullable String serviceHostKeyFingerprint;
    /**
     * @return The current state of the console connection.
     * 
     */
    private @Nullable String state;

    private GetDbNodeConsoleConnectionsConsoleConnection() {}
    /**
     * @return The OCID of the compartment to contain the console connection.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The SSH connection string for the console connection.
     * 
     */
    public Optional<String> connectionString() {
        return Optional.ofNullable(this.connectionString);
    }
    /**
     * @return The database node [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> dbNodeId() {
        return Optional.ofNullable(this.dbNodeId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The SSH public key fingerprint for the console connection.
     * 
     */
    public Optional<String> fingerprint() {
        return Optional.ofNullable(this.fingerprint);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the console connection.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    public Optional<String> publicKey() {
        return Optional.ofNullable(this.publicKey);
    }
    /**
     * @return The SSH public key&#39;s fingerprint for the console connection service host.
     * 
     */
    public Optional<String> serviceHostKeyFingerprint() {
        return Optional.ofNullable(this.serviceHostKeyFingerprint);
    }
    /**
     * @return The current state of the console connection.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbNodeConsoleConnectionsConsoleConnection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String connectionString;
        private @Nullable String dbNodeId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String fingerprint;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String publicKey;
        private @Nullable String serviceHostKeyFingerprint;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetDbNodeConsoleConnectionsConsoleConnection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionString = defaults.connectionString;
    	      this.dbNodeId = defaults.dbNodeId;
    	      this.definedTags = defaults.definedTags;
    	      this.fingerprint = defaults.fingerprint;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.publicKey = defaults.publicKey;
    	      this.serviceHostKeyFingerprint = defaults.serviceHostKeyFingerprint;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectionString(@Nullable String connectionString) {
            this.connectionString = connectionString;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeId(@Nullable String dbNodeId) {
            this.dbNodeId = dbNodeId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder fingerprint(@Nullable String fingerprint) {
            this.fingerprint = fingerprint;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(@Nullable String publicKey) {
            this.publicKey = publicKey;
            return this;
        }
        @CustomType.Setter
        public Builder serviceHostKeyFingerprint(@Nullable String serviceHostKeyFingerprint) {
            this.serviceHostKeyFingerprint = serviceHostKeyFingerprint;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetDbNodeConsoleConnectionsConsoleConnection build() {
            final var o = new GetDbNodeConsoleConnectionsConsoleConnection();
            o.compartmentId = compartmentId;
            o.connectionString = connectionString;
            o.dbNodeId = dbNodeId;
            o.definedTags = definedTags;
            o.fingerprint = fingerprint;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.publicKey = publicKey;
            o.serviceHostKeyFingerprint = serviceHostKeyFingerprint;
            o.state = state;
            return o;
        }
    }
}
