// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetDbNodeConsoleHistoriesConsoleHistoryCollection;
import com.pulumi.oci.Database.outputs.GetDbNodeConsoleHistoriesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbNodeConsoleHistoriesResult {
    /**
     * @return The list of console_history_collection.
     * 
     */
    private List<GetDbNodeConsoleHistoriesConsoleHistoryCollection> consoleHistoryCollections;
    /**
     * @return The OCID of the database node.
     * 
     */
    private String dbNodeId;
    /**
     * @return The user-friendly name for the console history. The name does not need to be unique.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetDbNodeConsoleHistoriesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The current state of the console history.
     * 
     */
    private @Nullable String state;

    private GetDbNodeConsoleHistoriesResult() {}
    /**
     * @return The list of console_history_collection.
     * 
     */
    public List<GetDbNodeConsoleHistoriesConsoleHistoryCollection> consoleHistoryCollections() {
        return this.consoleHistoryCollections;
    }
    /**
     * @return The OCID of the database node.
     * 
     */
    public String dbNodeId() {
        return this.dbNodeId;
    }
    /**
     * @return The user-friendly name for the console history. The name does not need to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetDbNodeConsoleHistoriesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of the console history.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbNodeConsoleHistoriesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDbNodeConsoleHistoriesConsoleHistoryCollection> consoleHistoryCollections;
        private String dbNodeId;
        private @Nullable String displayName;
        private @Nullable List<GetDbNodeConsoleHistoriesFilter> filters;
        private String id;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetDbNodeConsoleHistoriesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consoleHistoryCollections = defaults.consoleHistoryCollections;
    	      this.dbNodeId = defaults.dbNodeId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder consoleHistoryCollections(List<GetDbNodeConsoleHistoriesConsoleHistoryCollection> consoleHistoryCollections) {
            if (consoleHistoryCollections == null) {
              throw new MissingRequiredPropertyException("GetDbNodeConsoleHistoriesResult", "consoleHistoryCollections");
            }
            this.consoleHistoryCollections = consoleHistoryCollections;
            return this;
        }
        public Builder consoleHistoryCollections(GetDbNodeConsoleHistoriesConsoleHistoryCollection... consoleHistoryCollections) {
            return consoleHistoryCollections(List.of(consoleHistoryCollections));
        }
        @CustomType.Setter
        public Builder dbNodeId(String dbNodeId) {
            if (dbNodeId == null) {
              throw new MissingRequiredPropertyException("GetDbNodeConsoleHistoriesResult", "dbNodeId");
            }
            this.dbNodeId = dbNodeId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDbNodeConsoleHistoriesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetDbNodeConsoleHistoriesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDbNodeConsoleHistoriesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetDbNodeConsoleHistoriesResult build() {
            final var _resultValue = new GetDbNodeConsoleHistoriesResult();
            _resultValue.consoleHistoryCollections = consoleHistoryCollections;
            _resultValue.dbNodeId = dbNodeId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
