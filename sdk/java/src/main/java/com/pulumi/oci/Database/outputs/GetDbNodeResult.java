// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDbNodeResult {
    /**
     * @return Additional information about the planned maintenance.
     * 
     */
    private String additionalDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
     * 
     */
    private String backupIpId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
     * 
     */
    private String backupVnic2id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
     * 
     */
    private String backupVnicId;
    /**
     * @return The number of CPU cores enabled on the Db node.
     * 
     */
    private Integer cpuCoreCount;
    private String dbNodeId;
    /**
     * @return The allocated local node storage in GBs on the Db node.
     * 
     */
    private Integer dbNodeStorageSizeInGbs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server associated with the database node.
     * 
     */
    private String dbServerId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    private String dbSystemId;
    /**
     * @return The name of the Fault Domain the instance is contained in.
     * 
     */
    private String faultDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
     * 
     */
    private String hostIpId;
    /**
     * @return The host name for the database node.
     * 
     */
    private String hostname;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The type of database node maintenance.
     * 
     */
    private String maintenanceType;
    /**
     * @return The allocated memory in GBs on the Db node.
     * 
     */
    private Integer memorySizeInGbs;
    /**
     * @return The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
     * 
     */
    private Integer softwareStorageSizeInGb;
    /**
     * @return The current state of the database node.
     * 
     */
    private String state;
    /**
     * @return The date and time that the database node was created.
     * 
     */
    private String timeCreated;
    /**
     * @return End date and time of maintenance window.
     * 
     */
    private String timeMaintenanceWindowEnd;
    /**
     * @return Start date and time of maintenance window.
     * 
     */
    private String timeMaintenanceWindowStart;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
     * 
     */
    private String vnic2id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
     * 
     */
    private String vnicId;

    private GetDbNodeResult() {}
    /**
     * @return Additional information about the planned maintenance.
     * 
     */
    public String additionalDetails() {
        return this.additionalDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
     * 
     */
    public String backupIpId() {
        return this.backupIpId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
     * 
     */
    public String backupVnic2id() {
        return this.backupVnic2id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
     * 
     */
    public String backupVnicId() {
        return this.backupVnicId;
    }
    /**
     * @return The number of CPU cores enabled on the Db node.
     * 
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    public String dbNodeId() {
        return this.dbNodeId;
    }
    /**
     * @return The allocated local node storage in GBs on the Db node.
     * 
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server associated with the database node.
     * 
     */
    public String dbServerId() {
        return this.dbServerId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    public String dbSystemId() {
        return this.dbSystemId;
    }
    /**
     * @return The name of the Fault Domain the instance is contained in.
     * 
     */
    public String faultDomain() {
        return this.faultDomain;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
     * 
     */
    public String hostIpId() {
        return this.hostIpId;
    }
    /**
     * @return The host name for the database node.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The type of database node maintenance.
     * 
     */
    public String maintenanceType() {
        return this.maintenanceType;
    }
    /**
     * @return The allocated memory in GBs on the Db node.
     * 
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    /**
     * @return The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
     * 
     */
    public Integer softwareStorageSizeInGb() {
        return this.softwareStorageSizeInGb;
    }
    /**
     * @return The current state of the database node.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time that the database node was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return End date and time of maintenance window.
     * 
     */
    public String timeMaintenanceWindowEnd() {
        return this.timeMaintenanceWindowEnd;
    }
    /**
     * @return Start date and time of maintenance window.
     * 
     */
    public String timeMaintenanceWindowStart() {
        return this.timeMaintenanceWindowStart;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
     * 
     */
    public String vnic2id() {
        return this.vnic2id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
     * 
     */
    public String vnicId() {
        return this.vnicId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbNodeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String additionalDetails;
        private String backupIpId;
        private String backupVnic2id;
        private String backupVnicId;
        private Integer cpuCoreCount;
        private String dbNodeId;
        private Integer dbNodeStorageSizeInGbs;
        private String dbServerId;
        private String dbSystemId;
        private String faultDomain;
        private String hostIpId;
        private String hostname;
        private String id;
        private String maintenanceType;
        private Integer memorySizeInGbs;
        private Integer softwareStorageSizeInGb;
        private String state;
        private String timeCreated;
        private String timeMaintenanceWindowEnd;
        private String timeMaintenanceWindowStart;
        private String vnic2id;
        private String vnicId;
        public Builder() {}
        public Builder(GetDbNodeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetails = defaults.additionalDetails;
    	      this.backupIpId = defaults.backupIpId;
    	      this.backupVnic2id = defaults.backupVnic2id;
    	      this.backupVnicId = defaults.backupVnicId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.dbNodeId = defaults.dbNodeId;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.dbServerId = defaults.dbServerId;
    	      this.dbSystemId = defaults.dbSystemId;
    	      this.faultDomain = defaults.faultDomain;
    	      this.hostIpId = defaults.hostIpId;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.maintenanceType = defaults.maintenanceType;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.softwareStorageSizeInGb = defaults.softwareStorageSizeInGb;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeMaintenanceWindowEnd = defaults.timeMaintenanceWindowEnd;
    	      this.timeMaintenanceWindowStart = defaults.timeMaintenanceWindowStart;
    	      this.vnic2id = defaults.vnic2id;
    	      this.vnicId = defaults.vnicId;
        }

        @CustomType.Setter
        public Builder additionalDetails(String additionalDetails) {
            this.additionalDetails = Objects.requireNonNull(additionalDetails);
            return this;
        }
        @CustomType.Setter
        public Builder backupIpId(String backupIpId) {
            this.backupIpId = Objects.requireNonNull(backupIpId);
            return this;
        }
        @CustomType.Setter
        public Builder backupVnic2id(String backupVnic2id) {
            this.backupVnic2id = Objects.requireNonNull(backupVnic2id);
            return this;
        }
        @CustomType.Setter
        public Builder backupVnicId(String backupVnicId) {
            this.backupVnicId = Objects.requireNonNull(backupVnicId);
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            this.cpuCoreCount = Objects.requireNonNull(cpuCoreCount);
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeId(String dbNodeId) {
            this.dbNodeId = Objects.requireNonNull(dbNodeId);
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            this.dbNodeStorageSizeInGbs = Objects.requireNonNull(dbNodeStorageSizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder dbServerId(String dbServerId) {
            this.dbServerId = Objects.requireNonNull(dbServerId);
            return this;
        }
        @CustomType.Setter
        public Builder dbSystemId(String dbSystemId) {
            this.dbSystemId = Objects.requireNonNull(dbSystemId);
            return this;
        }
        @CustomType.Setter
        public Builder faultDomain(String faultDomain) {
            this.faultDomain = Objects.requireNonNull(faultDomain);
            return this;
        }
        @CustomType.Setter
        public Builder hostIpId(String hostIpId) {
            this.hostIpId = Objects.requireNonNull(hostIpId);
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceType(String maintenanceType) {
            this.maintenanceType = Objects.requireNonNull(maintenanceType);
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            this.memorySizeInGbs = Objects.requireNonNull(memorySizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder softwareStorageSizeInGb(Integer softwareStorageSizeInGb) {
            this.softwareStorageSizeInGb = Objects.requireNonNull(softwareStorageSizeInGb);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeMaintenanceWindowEnd(String timeMaintenanceWindowEnd) {
            this.timeMaintenanceWindowEnd = Objects.requireNonNull(timeMaintenanceWindowEnd);
            return this;
        }
        @CustomType.Setter
        public Builder timeMaintenanceWindowStart(String timeMaintenanceWindowStart) {
            this.timeMaintenanceWindowStart = Objects.requireNonNull(timeMaintenanceWindowStart);
            return this;
        }
        @CustomType.Setter
        public Builder vnic2id(String vnic2id) {
            this.vnic2id = Objects.requireNonNull(vnic2id);
            return this;
        }
        @CustomType.Setter
        public Builder vnicId(String vnicId) {
            this.vnicId = Objects.requireNonNull(vnicId);
            return this;
        }
        public GetDbNodeResult build() {
            final var o = new GetDbNodeResult();
            o.additionalDetails = additionalDetails;
            o.backupIpId = backupIpId;
            o.backupVnic2id = backupVnic2id;
            o.backupVnicId = backupVnicId;
            o.cpuCoreCount = cpuCoreCount;
            o.dbNodeId = dbNodeId;
            o.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            o.dbServerId = dbServerId;
            o.dbSystemId = dbSystemId;
            o.faultDomain = faultDomain;
            o.hostIpId = hostIpId;
            o.hostname = hostname;
            o.id = id;
            o.maintenanceType = maintenanceType;
            o.memorySizeInGbs = memorySizeInGbs;
            o.softwareStorageSizeInGb = softwareStorageSizeInGb;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeMaintenanceWindowEnd = timeMaintenanceWindowEnd;
            o.timeMaintenanceWindowStart = timeMaintenanceWindowStart;
            o.vnic2id = vnic2id;
            o.vnicId = vnicId;
            return o;
        }
    }
}
