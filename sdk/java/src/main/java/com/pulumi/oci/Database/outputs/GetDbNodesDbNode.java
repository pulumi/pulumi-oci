// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbNodesDbNode {
    /**
     * @return Additional information about the planned maintenance.
     * 
     */
    private @Nullable String additionalDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
     * 
     */
    private @Nullable String backupIpId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
     * 
     */
    private @Nullable String backupVnic2id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
     * 
     */
    private @Nullable String backupVnicId;
    /**
     * @return The number of CPU cores enabled on the Db node.
     * 
     */
    private @Nullable Integer cpuCoreCount;
    private @Nullable String dbNodeId;
    /**
     * @return The allocated local node storage in GBs on the Db node.
     * 
     */
    private @Nullable Integer dbNodeStorageSizeInGbs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server.
     * 
     */
    private @Nullable String dbServerId;
    /**
     * @return The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
     * 
     */
    private @Nullable String dbSystemId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The name of the Fault Domain the instance is contained in.
     * 
     */
    private @Nullable String faultDomain;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IP address associated with the database node. Use this OCID with either the  [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address  needed to make a database connection.
     * **Note:** Applies only to Exadata Cloud Service.
     * 
     */
    private @Nullable String hostIpId;
    /**
     * @return The host name for the database node.
     * 
     */
    private @Nullable String hostname;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database node.
     * 
     */
    private @Nullable String id;
    /**
     * @return Information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The type of database node maintenance.
     * 
     */
    private @Nullable String maintenanceType;
    /**
     * @return The allocated memory in GBs on the Db node.
     * 
     */
    private @Nullable Integer memorySizeInGbs;
    /**
     * @return The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
     * 
     */
    private @Nullable Integer softwareStorageSizeInGb;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time that the database node was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return End date and time of maintenance window.
     * 
     */
    private @Nullable String timeMaintenanceWindowEnd;
    /**
     * @return Start date and time of maintenance window.
     * 
     */
    private @Nullable String timeMaintenanceWindowStart;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
     * 
     */
    private @Nullable String vnic2id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
     * 
     */
    private @Nullable String vnicId;

    private GetDbNodesDbNode() {}
    /**
     * @return Additional information about the planned maintenance.
     * 
     */
    public Optional<String> additionalDetails() {
        return Optional.ofNullable(this.additionalDetails);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup IP address associated with the database node. Use this OCID with either the [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address needed to make a database connection.
     * 
     */
    public Optional<String> backupIpId() {
        return Optional.ofNullable(this.backupIpId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second backup VNIC.
     * 
     */
    public Optional<String> backupVnic2id() {
        return Optional.ofNullable(this.backupVnic2id);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup VNIC.
     * 
     */
    public Optional<String> backupVnicId() {
        return Optional.ofNullable(this.backupVnicId);
    }
    /**
     * @return The number of CPU cores enabled on the Db node.
     * 
     */
    public Optional<Integer> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }
    public Optional<String> dbNodeId() {
        return Optional.ofNullable(this.dbNodeId);
    }
    /**
     * @return The allocated local node storage in GBs on the Db node.
     * 
     */
    public Optional<Integer> dbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.dbNodeStorageSizeInGbs);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exacc Db server.
     * 
     */
    public Optional<String> dbServerId() {
        return Optional.ofNullable(this.dbServerId);
    }
    /**
     * @return The DB system [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). If provided, filters the results to the set of database versions which are supported for the DB system.
     * 
     */
    public Optional<String> dbSystemId() {
        return Optional.ofNullable(this.dbSystemId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The name of the Fault Domain the instance is contained in.
     * 
     */
    public Optional<String> faultDomain() {
        return Optional.ofNullable(this.faultDomain);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the host IP address associated with the database node. Use this OCID with either the  [GetPrivateIp](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PrivateIp/GetPrivateIp) or the [GetPublicIpByPrivateIpId](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/PublicIp/GetPublicIpByPrivateIpId) API to get the IP address  needed to make a database connection.
     * **Note:** Applies only to Exadata Cloud Service.
     * 
     */
    public Optional<String> hostIpId() {
        return Optional.ofNullable(this.hostIpId);
    }
    /**
     * @return The host name for the database node.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database node.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The type of database node maintenance.
     * 
     */
    public Optional<String> maintenanceType() {
        return Optional.ofNullable(this.maintenanceType);
    }
    /**
     * @return The allocated memory in GBs on the Db node.
     * 
     */
    public Optional<Integer> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }
    /**
     * @return The size (in GB) of the block storage volume allocation for the DB system. This attribute applies only for virtual machine DB systems.
     * 
     */
    public Optional<Integer> softwareStorageSizeInGb() {
        return Optional.ofNullable(this.softwareStorageSizeInGb);
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time that the database node was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return End date and time of maintenance window.
     * 
     */
    public Optional<String> timeMaintenanceWindowEnd() {
        return Optional.ofNullable(this.timeMaintenanceWindowEnd);
    }
    /**
     * @return Start date and time of maintenance window.
     * 
     */
    public Optional<String> timeMaintenanceWindowStart() {
        return Optional.ofNullable(this.timeMaintenanceWindowStart);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the second VNIC.
     * 
     */
    public Optional<String> vnic2id() {
        return Optional.ofNullable(this.vnic2id);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VNIC.
     * 
     */
    public Optional<String> vnicId() {
        return Optional.ofNullable(this.vnicId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbNodesDbNode defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String additionalDetails;
        private @Nullable String backupIpId;
        private @Nullable String backupVnic2id;
        private @Nullable String backupVnicId;
        private @Nullable Integer cpuCoreCount;
        private @Nullable String dbNodeId;
        private @Nullable Integer dbNodeStorageSizeInGbs;
        private @Nullable String dbServerId;
        private @Nullable String dbSystemId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String faultDomain;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String hostIpId;
        private @Nullable String hostname;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String maintenanceType;
        private @Nullable Integer memorySizeInGbs;
        private @Nullable Integer softwareStorageSizeInGb;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeMaintenanceWindowEnd;
        private @Nullable String timeMaintenanceWindowStart;
        private @Nullable String vnic2id;
        private @Nullable String vnicId;
        public Builder() {}
        public Builder(GetDbNodesDbNode defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetails = defaults.additionalDetails;
    	      this.backupIpId = defaults.backupIpId;
    	      this.backupVnic2id = defaults.backupVnic2id;
    	      this.backupVnicId = defaults.backupVnicId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.dbNodeId = defaults.dbNodeId;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.dbServerId = defaults.dbServerId;
    	      this.dbSystemId = defaults.dbSystemId;
    	      this.definedTags = defaults.definedTags;
    	      this.faultDomain = defaults.faultDomain;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostIpId = defaults.hostIpId;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maintenanceType = defaults.maintenanceType;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.softwareStorageSizeInGb = defaults.softwareStorageSizeInGb;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeMaintenanceWindowEnd = defaults.timeMaintenanceWindowEnd;
    	      this.timeMaintenanceWindowStart = defaults.timeMaintenanceWindowStart;
    	      this.vnic2id = defaults.vnic2id;
    	      this.vnicId = defaults.vnicId;
        }

        @CustomType.Setter
        public Builder additionalDetails(@Nullable String additionalDetails) {
            this.additionalDetails = additionalDetails;
            return this;
        }
        @CustomType.Setter
        public Builder backupIpId(@Nullable String backupIpId) {
            this.backupIpId = backupIpId;
            return this;
        }
        @CustomType.Setter
        public Builder backupVnic2id(@Nullable String backupVnic2id) {
            this.backupVnic2id = backupVnic2id;
            return this;
        }
        @CustomType.Setter
        public Builder backupVnicId(@Nullable String backupVnicId) {
            this.backupVnicId = backupVnicId;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(@Nullable Integer cpuCoreCount) {
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeId(@Nullable String dbNodeId) {
            this.dbNodeId = dbNodeId;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(@Nullable Integer dbNodeStorageSizeInGbs) {
            this.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbServerId(@Nullable String dbServerId) {
            this.dbServerId = dbServerId;
            return this;
        }
        @CustomType.Setter
        public Builder dbSystemId(@Nullable String dbSystemId) {
            this.dbSystemId = dbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomain(@Nullable String faultDomain) {
            this.faultDomain = faultDomain;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostIpId(@Nullable String hostIpId) {
            this.hostIpId = hostIpId;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceType(@Nullable String maintenanceType) {
            this.maintenanceType = maintenanceType;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(@Nullable Integer memorySizeInGbs) {
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder softwareStorageSizeInGb(@Nullable Integer softwareStorageSizeInGb) {
            this.softwareStorageSizeInGb = softwareStorageSizeInGb;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeMaintenanceWindowEnd(@Nullable String timeMaintenanceWindowEnd) {
            this.timeMaintenanceWindowEnd = timeMaintenanceWindowEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeMaintenanceWindowStart(@Nullable String timeMaintenanceWindowStart) {
            this.timeMaintenanceWindowStart = timeMaintenanceWindowStart;
            return this;
        }
        @CustomType.Setter
        public Builder vnic2id(@Nullable String vnic2id) {
            this.vnic2id = vnic2id;
            return this;
        }
        @CustomType.Setter
        public Builder vnicId(@Nullable String vnicId) {
            this.vnicId = vnicId;
            return this;
        }
        public GetDbNodesDbNode build() {
            final var o = new GetDbNodesDbNode();
            o.additionalDetails = additionalDetails;
            o.backupIpId = backupIpId;
            o.backupVnic2id = backupVnic2id;
            o.backupVnicId = backupVnicId;
            o.cpuCoreCount = cpuCoreCount;
            o.dbNodeId = dbNodeId;
            o.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            o.dbServerId = dbServerId;
            o.dbSystemId = dbSystemId;
            o.definedTags = definedTags;
            o.faultDomain = faultDomain;
            o.freeformTags = freeformTags;
            o.hostIpId = hostIpId;
            o.hostname = hostname;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.maintenanceType = maintenanceType;
            o.memorySizeInGbs = memorySizeInGbs;
            o.softwareStorageSizeInGb = softwareStorageSizeInGb;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeMaintenanceWindowEnd = timeMaintenanceWindowEnd;
            o.timeMaintenanceWindowStart = timeMaintenanceWindowStart;
            o.vnic2id = vnic2id;
            o.vnicId = vnicId;
            return o;
        }
    }
}
