// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetDbServerDbServerPatchingDetail;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDbServerResult {
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Virtual Machines associated with the Db server.
     * 
     */
    private List<String> autonomousVirtualMachineIds;
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM Clusters associated with the Db server.
     * 
     */
    private List<String> autonomousVmClusterIds;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The number of CPU cores enabled on the Db server.
     * 
     */
    private Integer cpuCoreCount;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Db nodes associated with the Db server.
     * 
     */
    private List<String> dbNodeIds;
    /**
     * @return The allocated local node storage in GBs on the Db server.
     * 
     */
    private Integer dbNodeStorageSizeInGbs;
    private String dbServerId;
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    private List<GetDbServerDbServerPatchingDetail> dbServerPatchingDetails;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The user-friendly name for the Db server. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    private String exadataInfrastructureId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The total number of CPU cores available.
     * 
     */
    private Integer maxCpuCount;
    /**
     * @return The total local node storage available in GBs.
     * 
     */
    private Integer maxDbNodeStorageInGbs;
    /**
     * @return The total memory available in GBs.
     * 
     */
    private Integer maxMemoryInGbs;
    /**
     * @return The allocated memory in GBs on the Db server.
     * 
     */
    private Integer memorySizeInGbs;
    /**
     * @return The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
     * 
     */
    private String shape;
    /**
     * @return The current state of the Db server.
     * 
     */
    private String state;
    /**
     * @return The date and time that the Db Server was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM Clusters associated with the Db server.
     * 
     */
    private List<String> vmClusterIds;

    private GetDbServerResult() {}
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Virtual Machines associated with the Db server.
     * 
     */
    public List<String> autonomousVirtualMachineIds() {
        return this.autonomousVirtualMachineIds;
    }
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM Clusters associated with the Db server.
     * 
     */
    public List<String> autonomousVmClusterIds() {
        return this.autonomousVmClusterIds;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The number of CPU cores enabled on the Db server.
     * 
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Db nodes associated with the Db server.
     * 
     */
    public List<String> dbNodeIds() {
        return this.dbNodeIds;
    }
    /**
     * @return The allocated local node storage in GBs on the Db server.
     * 
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    public String dbServerId() {
        return this.dbServerId;
    }
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public List<GetDbServerDbServerPatchingDetail> dbServerPatchingDetails() {
        return this.dbServerPatchingDetails;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name for the Db server. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    public String exadataInfrastructureId() {
        return this.exadataInfrastructureId;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The total number of CPU cores available.
     * 
     */
    public Integer maxCpuCount() {
        return this.maxCpuCount;
    }
    /**
     * @return The total local node storage available in GBs.
     * 
     */
    public Integer maxDbNodeStorageInGbs() {
        return this.maxDbNodeStorageInGbs;
    }
    /**
     * @return The total memory available in GBs.
     * 
     */
    public Integer maxMemoryInGbs() {
        return this.maxMemoryInGbs;
    }
    /**
     * @return The allocated memory in GBs on the Db server.
     * 
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    /**
     * @return The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return The current state of the Db server.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time that the Db Server was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM Clusters associated with the Db server.
     * 
     */
    public List<String> vmClusterIds() {
        return this.vmClusterIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbServerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> autonomousVirtualMachineIds;
        private List<String> autonomousVmClusterIds;
        private String compartmentId;
        private Integer cpuCoreCount;
        private List<String> dbNodeIds;
        private Integer dbNodeStorageSizeInGbs;
        private String dbServerId;
        private List<GetDbServerDbServerPatchingDetail> dbServerPatchingDetails;
        private Map<String,Object> definedTags;
        private String displayName;
        private String exadataInfrastructureId;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private Integer maxCpuCount;
        private Integer maxDbNodeStorageInGbs;
        private Integer maxMemoryInGbs;
        private Integer memorySizeInGbs;
        private String shape;
        private String state;
        private String timeCreated;
        private List<String> vmClusterIds;
        public Builder() {}
        public Builder(GetDbServerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousVirtualMachineIds = defaults.autonomousVirtualMachineIds;
    	      this.autonomousVmClusterIds = defaults.autonomousVmClusterIds;
    	      this.compartmentId = defaults.compartmentId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.dbNodeIds = defaults.dbNodeIds;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.dbServerId = defaults.dbServerId;
    	      this.dbServerPatchingDetails = defaults.dbServerPatchingDetails;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.exadataInfrastructureId = defaults.exadataInfrastructureId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maxCpuCount = defaults.maxCpuCount;
    	      this.maxDbNodeStorageInGbs = defaults.maxDbNodeStorageInGbs;
    	      this.maxMemoryInGbs = defaults.maxMemoryInGbs;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.shape = defaults.shape;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.vmClusterIds = defaults.vmClusterIds;
        }

        @CustomType.Setter
        public Builder autonomousVirtualMachineIds(List<String> autonomousVirtualMachineIds) {
            this.autonomousVirtualMachineIds = Objects.requireNonNull(autonomousVirtualMachineIds);
            return this;
        }
        public Builder autonomousVirtualMachineIds(String... autonomousVirtualMachineIds) {
            return autonomousVirtualMachineIds(List.of(autonomousVirtualMachineIds));
        }
        @CustomType.Setter
        public Builder autonomousVmClusterIds(List<String> autonomousVmClusterIds) {
            this.autonomousVmClusterIds = Objects.requireNonNull(autonomousVmClusterIds);
            return this;
        }
        public Builder autonomousVmClusterIds(String... autonomousVmClusterIds) {
            return autonomousVmClusterIds(List.of(autonomousVmClusterIds));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            this.cpuCoreCount = Objects.requireNonNull(cpuCoreCount);
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeIds(List<String> dbNodeIds) {
            this.dbNodeIds = Objects.requireNonNull(dbNodeIds);
            return this;
        }
        public Builder dbNodeIds(String... dbNodeIds) {
            return dbNodeIds(List.of(dbNodeIds));
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            this.dbNodeStorageSizeInGbs = Objects.requireNonNull(dbNodeStorageSizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder dbServerId(String dbServerId) {
            this.dbServerId = Objects.requireNonNull(dbServerId);
            return this;
        }
        @CustomType.Setter
        public Builder dbServerPatchingDetails(List<GetDbServerDbServerPatchingDetail> dbServerPatchingDetails) {
            this.dbServerPatchingDetails = Objects.requireNonNull(dbServerPatchingDetails);
            return this;
        }
        public Builder dbServerPatchingDetails(GetDbServerDbServerPatchingDetail... dbServerPatchingDetails) {
            return dbServerPatchingDetails(List.of(dbServerPatchingDetails));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder exadataInfrastructureId(String exadataInfrastructureId) {
            this.exadataInfrastructureId = Objects.requireNonNull(exadataInfrastructureId);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder maxCpuCount(Integer maxCpuCount) {
            this.maxCpuCount = Objects.requireNonNull(maxCpuCount);
            return this;
        }
        @CustomType.Setter
        public Builder maxDbNodeStorageInGbs(Integer maxDbNodeStorageInGbs) {
            this.maxDbNodeStorageInGbs = Objects.requireNonNull(maxDbNodeStorageInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder maxMemoryInGbs(Integer maxMemoryInGbs) {
            this.maxMemoryInGbs = Objects.requireNonNull(maxMemoryInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            this.memorySizeInGbs = Objects.requireNonNull(memorySizeInGbs);
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterIds(List<String> vmClusterIds) {
            this.vmClusterIds = Objects.requireNonNull(vmClusterIds);
            return this;
        }
        public Builder vmClusterIds(String... vmClusterIds) {
            return vmClusterIds(List.of(vmClusterIds));
        }
        public GetDbServerResult build() {
            final var _resultValue = new GetDbServerResult();
            _resultValue.autonomousVirtualMachineIds = autonomousVirtualMachineIds;
            _resultValue.autonomousVmClusterIds = autonomousVmClusterIds;
            _resultValue.compartmentId = compartmentId;
            _resultValue.cpuCoreCount = cpuCoreCount;
            _resultValue.dbNodeIds = dbNodeIds;
            _resultValue.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            _resultValue.dbServerId = dbServerId;
            _resultValue.dbServerPatchingDetails = dbServerPatchingDetails;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.exadataInfrastructureId = exadataInfrastructureId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.maxCpuCount = maxCpuCount;
            _resultValue.maxDbNodeStorageInGbs = maxDbNodeStorageInGbs;
            _resultValue.maxMemoryInGbs = maxMemoryInGbs;
            _resultValue.memorySizeInGbs = memorySizeInGbs;
            _resultValue.shape = shape;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.vmClusterIds = vmClusterIds;
            return _resultValue;
        }
    }
}
