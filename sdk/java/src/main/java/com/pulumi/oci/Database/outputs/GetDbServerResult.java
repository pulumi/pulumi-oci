// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetDbServerDbServerPatchingDetail;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbServerResult {
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Virtual Machines associated with the Db server.
     * 
     */
    private @Nullable List<String> autonomousVirtualMachineIds;
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM Clusters associated with the Db server.
     * 
     */
    private @Nullable List<String> autonomousVmClusterIds;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The number of CPU cores enabled on the Db server.
     * 
     */
    private @Nullable Integer cpuCoreCount;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Db nodes associated with the Db server.
     * 
     */
    private @Nullable List<String> dbNodeIds;
    /**
     * @return The allocated local node storage in GBs on the Db server.
     * 
     */
    private @Nullable Integer dbNodeStorageSizeInGbs;
    private String dbServerId;
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    private @Nullable List<GetDbServerDbServerPatchingDetail> dbServerPatchingDetails;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The user-friendly name for the Db server. The name does not need to be unique.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    private String exadataInfrastructureId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The total number of CPU cores available.
     * 
     */
    private @Nullable Integer maxCpuCount;
    /**
     * @return The total local node storage available in GBs.
     * 
     */
    private @Nullable Integer maxDbNodeStorageInGbs;
    /**
     * @return The total memory available in GBs.
     * 
     */
    private @Nullable Integer maxMemoryInGbs;
    /**
     * @return The allocated memory in GBs on the Db server.
     * 
     */
    private @Nullable Integer memorySizeInGbs;
    /**
     * @return The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
     * 
     */
    private @Nullable String shape;
    /**
     * @return The current state of the Db server.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time that the Db Server was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM Clusters associated with the Db server.
     * 
     */
    private @Nullable List<String> vmClusterIds;

    private GetDbServerResult() {}
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Virtual Machines associated with the Db server.
     * 
     */
    public List<String> autonomousVirtualMachineIds() {
        return this.autonomousVirtualMachineIds == null ? List.of() : this.autonomousVirtualMachineIds;
    }
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous VM Clusters associated with the Db server.
     * 
     */
    public List<String> autonomousVmClusterIds() {
        return this.autonomousVmClusterIds == null ? List.of() : this.autonomousVmClusterIds;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The number of CPU cores enabled on the Db server.
     * 
     */
    public Optional<Integer> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Db nodes associated with the Db server.
     * 
     */
    public List<String> dbNodeIds() {
        return this.dbNodeIds == null ? List.of() : this.dbNodeIds;
    }
    /**
     * @return The allocated local node storage in GBs on the Db server.
     * 
     */
    public Optional<Integer> dbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.dbNodeStorageSizeInGbs);
    }
    public String dbServerId() {
        return this.dbServerId;
    }
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public List<GetDbServerDbServerPatchingDetail> dbServerPatchingDetails() {
        return this.dbServerPatchingDetails == null ? List.of() : this.dbServerPatchingDetails;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The user-friendly name for the Db server. The name does not need to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    public String exadataInfrastructureId() {
        return this.exadataInfrastructureId;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The total number of CPU cores available.
     * 
     */
    public Optional<Integer> maxCpuCount() {
        return Optional.ofNullable(this.maxCpuCount);
    }
    /**
     * @return The total local node storage available in GBs.
     * 
     */
    public Optional<Integer> maxDbNodeStorageInGbs() {
        return Optional.ofNullable(this.maxDbNodeStorageInGbs);
    }
    /**
     * @return The total memory available in GBs.
     * 
     */
    public Optional<Integer> maxMemoryInGbs() {
        return Optional.ofNullable(this.maxMemoryInGbs);
    }
    /**
     * @return The allocated memory in GBs on the Db server.
     * 
     */
    public Optional<Integer> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }
    /**
     * @return The shape of the Db server. The shape determines the amount of CPU, storage, and memory resources available.
     * 
     */
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }
    /**
     * @return The current state of the Db server.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time that the Db Server was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM Clusters associated with the Db server.
     * 
     */
    public List<String> vmClusterIds() {
        return this.vmClusterIds == null ? List.of() : this.vmClusterIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbServerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> autonomousVirtualMachineIds;
        private @Nullable List<String> autonomousVmClusterIds;
        private @Nullable String compartmentId;
        private @Nullable Integer cpuCoreCount;
        private @Nullable List<String> dbNodeIds;
        private @Nullable Integer dbNodeStorageSizeInGbs;
        private String dbServerId;
        private @Nullable List<GetDbServerDbServerPatchingDetail> dbServerPatchingDetails;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private String exadataInfrastructureId;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable Integer maxCpuCount;
        private @Nullable Integer maxDbNodeStorageInGbs;
        private @Nullable Integer maxMemoryInGbs;
        private @Nullable Integer memorySizeInGbs;
        private @Nullable String shape;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable List<String> vmClusterIds;
        public Builder() {}
        public Builder(GetDbServerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousVirtualMachineIds = defaults.autonomousVirtualMachineIds;
    	      this.autonomousVmClusterIds = defaults.autonomousVmClusterIds;
    	      this.compartmentId = defaults.compartmentId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.dbNodeIds = defaults.dbNodeIds;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.dbServerId = defaults.dbServerId;
    	      this.dbServerPatchingDetails = defaults.dbServerPatchingDetails;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.exadataInfrastructureId = defaults.exadataInfrastructureId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maxCpuCount = defaults.maxCpuCount;
    	      this.maxDbNodeStorageInGbs = defaults.maxDbNodeStorageInGbs;
    	      this.maxMemoryInGbs = defaults.maxMemoryInGbs;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.shape = defaults.shape;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.vmClusterIds = defaults.vmClusterIds;
        }

        @CustomType.Setter
        public Builder autonomousVirtualMachineIds(@Nullable List<String> autonomousVirtualMachineIds) {
            this.autonomousVirtualMachineIds = autonomousVirtualMachineIds;
            return this;
        }
        public Builder autonomousVirtualMachineIds(String... autonomousVirtualMachineIds) {
            return autonomousVirtualMachineIds(List.of(autonomousVirtualMachineIds));
        }
        @CustomType.Setter
        public Builder autonomousVmClusterIds(@Nullable List<String> autonomousVmClusterIds) {
            this.autonomousVmClusterIds = autonomousVmClusterIds;
            return this;
        }
        public Builder autonomousVmClusterIds(String... autonomousVmClusterIds) {
            return autonomousVmClusterIds(List.of(autonomousVmClusterIds));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(@Nullable Integer cpuCoreCount) {
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeIds(@Nullable List<String> dbNodeIds) {
            this.dbNodeIds = dbNodeIds;
            return this;
        }
        public Builder dbNodeIds(String... dbNodeIds) {
            return dbNodeIds(List.of(dbNodeIds));
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(@Nullable Integer dbNodeStorageSizeInGbs) {
            this.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbServerId(String dbServerId) {
            this.dbServerId = Objects.requireNonNull(dbServerId);
            return this;
        }
        @CustomType.Setter
        public Builder dbServerPatchingDetails(@Nullable List<GetDbServerDbServerPatchingDetail> dbServerPatchingDetails) {
            this.dbServerPatchingDetails = dbServerPatchingDetails;
            return this;
        }
        public Builder dbServerPatchingDetails(GetDbServerDbServerPatchingDetail... dbServerPatchingDetails) {
            return dbServerPatchingDetails(List.of(dbServerPatchingDetails));
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder exadataInfrastructureId(String exadataInfrastructureId) {
            this.exadataInfrastructureId = Objects.requireNonNull(exadataInfrastructureId);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder maxCpuCount(@Nullable Integer maxCpuCount) {
            this.maxCpuCount = maxCpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder maxDbNodeStorageInGbs(@Nullable Integer maxDbNodeStorageInGbs) {
            this.maxDbNodeStorageInGbs = maxDbNodeStorageInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder maxMemoryInGbs(@Nullable Integer maxMemoryInGbs) {
            this.maxMemoryInGbs = maxMemoryInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(@Nullable Integer memorySizeInGbs) {
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder shape(@Nullable String shape) {
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterIds(@Nullable List<String> vmClusterIds) {
            this.vmClusterIds = vmClusterIds;
            return this;
        }
        public Builder vmClusterIds(String... vmClusterIds) {
            return vmClusterIds(List.of(vmClusterIds));
        }
        public GetDbServerResult build() {
            final var o = new GetDbServerResult();
            o.autonomousVirtualMachineIds = autonomousVirtualMachineIds;
            o.autonomousVmClusterIds = autonomousVmClusterIds;
            o.compartmentId = compartmentId;
            o.cpuCoreCount = cpuCoreCount;
            o.dbNodeIds = dbNodeIds;
            o.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            o.dbServerId = dbServerId;
            o.dbServerPatchingDetails = dbServerPatchingDetails;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.exadataInfrastructureId = exadataInfrastructureId;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.maxCpuCount = maxCpuCount;
            o.maxDbNodeStorageInGbs = maxDbNodeStorageInGbs;
            o.maxMemoryInGbs = maxMemoryInGbs;
            o.memorySizeInGbs = memorySizeInGbs;
            o.shape = shape;
            o.state = state;
            o.timeCreated = timeCreated;
            o.vmClusterIds = vmClusterIds;
            return o;
        }
    }
}
