// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList {
    /**
     * @return The number of OCPU cores available.
     * 
     */
    private Integer cpuCoreCount;
    /**
     * @return The amount of memory allocated for the VMDB System.
     * 
     */
    private Double memoryInGbs;
    /**
     * @return The network bandwidth of the VMDB system in gbps.
     * 
     */
    private Double networkBandwidthInGbps;
    /**
     * @return IOPS for the VMDB System.
     * 
     */
    private Double networkIops;
    /**
     * @return Network throughput for the VMDB System.
     * 
     */
    private Double networkThroughputInMbps;

    private GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList() {}
    /**
     * @return The number of OCPU cores available.
     * 
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * @return The amount of memory allocated for the VMDB System.
     * 
     */
    public Double memoryInGbs() {
        return this.memoryInGbs;
    }
    /**
     * @return The network bandwidth of the VMDB system in gbps.
     * 
     */
    public Double networkBandwidthInGbps() {
        return this.networkBandwidthInGbps;
    }
    /**
     * @return IOPS for the VMDB System.
     * 
     */
    public Double networkIops() {
        return this.networkIops;
    }
    /**
     * @return Network throughput for the VMDB System.
     * 
     */
    public Double networkThroughputInMbps() {
        return this.networkThroughputInMbps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer cpuCoreCount;
        private Double memoryInGbs;
        private Double networkBandwidthInGbps;
        private Double networkIops;
        private Double networkThroughputInMbps;
        public Builder() {}
        public Builder(GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.memoryInGbs = defaults.memoryInGbs;
    	      this.networkBandwidthInGbps = defaults.networkBandwidthInGbps;
    	      this.networkIops = defaults.networkIops;
    	      this.networkThroughputInMbps = defaults.networkThroughputInMbps;
        }

        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            if (cpuCoreCount == null) {
              throw new MissingRequiredPropertyException("GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList", "cpuCoreCount");
            }
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder memoryInGbs(Double memoryInGbs) {
            if (memoryInGbs == null) {
              throw new MissingRequiredPropertyException("GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList", "memoryInGbs");
            }
            this.memoryInGbs = memoryInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder networkBandwidthInGbps(Double networkBandwidthInGbps) {
            if (networkBandwidthInGbps == null) {
              throw new MissingRequiredPropertyException("GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList", "networkBandwidthInGbps");
            }
            this.networkBandwidthInGbps = networkBandwidthInGbps;
            return this;
        }
        @CustomType.Setter
        public Builder networkIops(Double networkIops) {
            if (networkIops == null) {
              throw new MissingRequiredPropertyException("GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList", "networkIops");
            }
            this.networkIops = networkIops;
            return this;
        }
        @CustomType.Setter
        public Builder networkThroughputInMbps(Double networkThroughputInMbps) {
            if (networkThroughputInMbps == null) {
              throw new MissingRequiredPropertyException("GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList", "networkThroughputInMbps");
            }
            this.networkThroughputInMbps = networkThroughputInMbps;
            return this;
        }
        public GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList build() {
            final var _resultValue = new GetDbSystemComputePerformancesDbSystemComputePerformanceComputePerformanceList();
            _resultValue.cpuCoreCount = cpuCoreCount;
            _resultValue.memoryInGbs = memoryInGbs;
            _resultValue.networkBandwidthInGbps = networkBandwidthInGbps;
            _resultValue.networkIops = networkIops;
            _resultValue.networkThroughputInMbps = networkThroughputInMbps;
            return _resultValue;
        }
    }
}
