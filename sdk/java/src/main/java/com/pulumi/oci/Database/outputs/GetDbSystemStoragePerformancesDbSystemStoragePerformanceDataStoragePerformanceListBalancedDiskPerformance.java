// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.util.Objects;

@CustomType
public final class GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceListBalancedDiskPerformance {
    /**
     * @return Disk IOPS in thousands.
     * 
     */
    private Double diskIops;
    /**
     * @return Disk Throughput in Mbps.
     * 
     */
    private Double diskThroughputInMbps;

    private GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceListBalancedDiskPerformance() {}
    /**
     * @return Disk IOPS in thousands.
     * 
     */
    public Double diskIops() {
        return this.diskIops;
    }
    /**
     * @return Disk Throughput in Mbps.
     * 
     */
    public Double diskThroughputInMbps() {
        return this.diskThroughputInMbps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceListBalancedDiskPerformance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double diskIops;
        private Double diskThroughputInMbps;
        public Builder() {}
        public Builder(GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceListBalancedDiskPerformance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskIops = defaults.diskIops;
    	      this.diskThroughputInMbps = defaults.diskThroughputInMbps;
        }

        @CustomType.Setter
        public Builder diskIops(Double diskIops) {
            this.diskIops = Objects.requireNonNull(diskIops);
            return this;
        }
        @CustomType.Setter
        public Builder diskThroughputInMbps(Double diskThroughputInMbps) {
            this.diskThroughputInMbps = Objects.requireNonNull(diskThroughputInMbps);
            return this;
        }
        public GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceListBalancedDiskPerformance build() {
            final var o = new GetDbSystemStoragePerformancesDbSystemStoragePerformanceDataStoragePerformanceListBalancedDiskPerformance();
            o.diskIops = diskIops;
            o.diskThroughputInMbps = diskThroughputInMbps;
            return o;
        }
    }
}
