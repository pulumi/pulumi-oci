// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemDataCollectionOption;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemDbHome;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemDbSystemOption;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemIormConfigCach;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemMaintenanceWindow;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemMaintenanceWindowDetail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbSystemsDbSystem {
    /**
     * @return A filter to return only resources that match the given availability domain exactly.
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
     * 
     */
    private @Nullable List<String> backupNetworkNsgIds;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet the DB system is associated with. Applicable only to Exadata DB systems.
     * 
     */
    private @Nullable String backupSubnetId;
    /**
     * @return The cluster name for Exadata and 2-node RAC virtual machine DB systems. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
     * 
     */
    private @Nullable String clusterName;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The number of CPU cores enabled on the DB system.
     * 
     */
    private @Nullable Integer cpuCoreCount;
    /**
     * @return Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     */
    private @Nullable List<GetDbSystemsDbSystemDataCollectionOption> dataCollectionOptions;
    /**
     * @return The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 40 and 80. The default is 80 percent assigned to DATA storage. Not applicable for virtual machine DB systems. Required for BMDBs.
     * 
     */
    private @Nullable Integer dataStoragePercentage;
    /**
     * @return The data storage size, in gigabytes, that is currently available to the DB system. Applies only for virtual machine DB systems. Required for VMDBs.
     * 
     */
    private @Nullable Integer dataStorageSizeInGb;
    /**
     * @return The Oracle Database edition that applies to all the databases on the DB system.
     * 
     */
    private @Nullable String databaseEdition;
    private @Nullable List<GetDbSystemsDbSystemDbHome> dbHomes;
    /**
     * @return The DB system options.
     * 
     */
    private @Nullable List<GetDbSystemsDbSystemDbSystemOption> dbSystemOptions;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The type of redundancy configured for the DB system. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
     * 
     */
    private @Nullable String diskRedundancy;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The domain name for the DB system.
     * 
     */
    private @Nullable String domain;
    /**
     * @return List of the Fault Domains in which this DB system is provisioned.
     * 
     */
    private @Nullable List<String> faultDomains;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The hostname for the DB system.
     * 
     */
    private @Nullable String hostname;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    private @Nullable String id;
    private @Nullable List<GetDbSystemsDbSystemIormConfigCach> iormConfigCaches;
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    private @Nullable String kmsKeyId;
    private @Nullable String kmsKeyVersionId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    private @Nullable String lastMaintenanceRunId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     * 
     */
    private @Nullable String lastPatchHistoryEntryId;
    /**
     * @return The Oracle license model that applies to all the databases on the DB system. The default is LICENSE_INCLUDED.
     * 
     */
    private @Nullable String licenseModel;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The port number configured for the listener on the DB system.
     * 
     */
    private @Nullable Integer listenerPort;
    private @Nullable List<GetDbSystemsDbSystemMaintenanceWindowDetail> maintenanceWindowDetails;
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    private @Nullable List<GetDbSystemsDbSystemMaintenanceWindow> maintenanceWindows;
    /**
     * @return Memory allocated to the DB system, in gigabytes.
     * 
     */
    private @Nullable Integer memorySizeInGbs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    private @Nullable String nextMaintenanceRunId;
    /**
     * @return The number of nodes in the DB system. For RAC DB systems, the value is greater than 1.
     * 
     */
    private @Nullable Integer nodeCount;
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
     * 
     */
    private @Nullable List<String> nsgIds;
    /**
     * @return The most recent OS Patch Version applied on the DB system.
     * 
     */
    private @Nullable String osVersion;
    /**
     * @return The point in time for a cloned database system when the data disks were cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    private @Nullable String pointInTimeDataDiskCloneTimestamp;
    private @Nullable String privateIp;
    /**
     * @return The RECO/REDO storage size, in gigabytes, that is currently allocated to the DB system. Applies only for virtual machine DB systems.
     * 
     */
    private @Nullable Integer recoStorageSizeInGb;
    /**
     * @return The FQDN of the DNS record for the SCAN IP addresses that are associated with the DB system.
     * 
     */
    private @Nullable String scanDnsName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the DB system.
     * 
     */
    private @Nullable String scanDnsRecordId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IP addresses associated with the DB system. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     * 
     */
    private @Nullable List<String> scanIpIds;
    /**
     * @return The shape of the DB system. The shape determines resources to allocate to the DB system.
     * * For virtual machine shapes, the number of CPU cores and memory
     * * For bare metal and Exadata shapes, the number of CPU cores, storage, and memory
     * 
     */
    private @Nullable String shape;
    private @Nullable String source;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    private @Nullable String sourceDbSystemId;
    /**
     * @return True, if Sparse Diskgroup is configured for Exadata dbsystem, False, if Sparse diskgroup was not configured. Only applied for Exadata shape.
     * 
     */
    private @Nullable Boolean sparseDiskgroup;
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the DB system.
     * 
     */
    private @Nullable List<String> sshPublicKeys;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private @Nullable String state;
    /**
     * @return The block storage volume performance level. Valid values are `BALANCED` and `HIGH_PERFORMANCE`. See [Block Volume Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm) for more information.
     * 
     */
    private @Nullable String storageVolumePerformanceMode;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the DB system is associated with.
     * 
     */
    private @Nullable String subnetId;
    /**
     * @return The date and time the DB system was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time zone of the DB system. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    private @Nullable String timeZone;
    /**
     * @return The Oracle Database version of the DB system.
     * 
     */
    private @Nullable String version;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the DB system. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the DB system to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     * 
     */
    private @Nullable List<String> vipIds;
    /**
     * @return The OCID of the zone the DB system is associated with.
     * 
     */
    private @Nullable String zoneId;

    private GetDbSystemsDbSystem() {}
    /**
     * @return A filter to return only resources that match the given availability domain exactly.
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
     * 
     */
    public List<String> backupNetworkNsgIds() {
        return this.backupNetworkNsgIds == null ? List.of() : this.backupNetworkNsgIds;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet the DB system is associated with. Applicable only to Exadata DB systems.
     * 
     */
    public Optional<String> backupSubnetId() {
        return Optional.ofNullable(this.backupSubnetId);
    }
    /**
     * @return The cluster name for Exadata and 2-node RAC virtual machine DB systems. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
     * 
     */
    public Optional<String> clusterName() {
        return Optional.ofNullable(this.clusterName);
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The number of CPU cores enabled on the DB system.
     * 
     */
    public Optional<Integer> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }
    /**
     * @return Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     */
    public List<GetDbSystemsDbSystemDataCollectionOption> dataCollectionOptions() {
        return this.dataCollectionOptions == null ? List.of() : this.dataCollectionOptions;
    }
    /**
     * @return The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 40 and 80. The default is 80 percent assigned to DATA storage. Not applicable for virtual machine DB systems. Required for BMDBs.
     * 
     */
    public Optional<Integer> dataStoragePercentage() {
        return Optional.ofNullable(this.dataStoragePercentage);
    }
    /**
     * @return The data storage size, in gigabytes, that is currently available to the DB system. Applies only for virtual machine DB systems. Required for VMDBs.
     * 
     */
    public Optional<Integer> dataStorageSizeInGb() {
        return Optional.ofNullable(this.dataStorageSizeInGb);
    }
    /**
     * @return The Oracle Database edition that applies to all the databases on the DB system.
     * 
     */
    public Optional<String> databaseEdition() {
        return Optional.ofNullable(this.databaseEdition);
    }
    public List<GetDbSystemsDbSystemDbHome> dbHomes() {
        return this.dbHomes == null ? List.of() : this.dbHomes;
    }
    /**
     * @return The DB system options.
     * 
     */
    public List<GetDbSystemsDbSystemDbSystemOption> dbSystemOptions() {
        return this.dbSystemOptions == null ? List.of() : this.dbSystemOptions;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The type of redundancy configured for the DB system. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
     * 
     */
    public Optional<String> diskRedundancy() {
        return Optional.ofNullable(this.diskRedundancy);
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The domain name for the DB system.
     * 
     */
    public Optional<String> domain() {
        return Optional.ofNullable(this.domain);
    }
    /**
     * @return List of the Fault Domains in which this DB system is provisioned.
     * 
     */
    public List<String> faultDomains() {
        return this.faultDomains == null ? List.of() : this.faultDomains;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The hostname for the DB system.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public List<GetDbSystemsDbSystemIormConfigCach> iormConfigCaches() {
        return this.iormConfigCaches == null ? List.of() : this.iormConfigCaches;
    }
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public Optional<String> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }
    public Optional<String> kmsKeyVersionId() {
        return Optional.ofNullable(this.kmsKeyVersionId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    public Optional<String> lastMaintenanceRunId() {
        return Optional.ofNullable(this.lastMaintenanceRunId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     * 
     */
    public Optional<String> lastPatchHistoryEntryId() {
        return Optional.ofNullable(this.lastPatchHistoryEntryId);
    }
    /**
     * @return The Oracle license model that applies to all the databases on the DB system. The default is LICENSE_INCLUDED.
     * 
     */
    public Optional<String> licenseModel() {
        return Optional.ofNullable(this.licenseModel);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The port number configured for the listener on the DB system.
     * 
     */
    public Optional<Integer> listenerPort() {
        return Optional.ofNullable(this.listenerPort);
    }
    public List<GetDbSystemsDbSystemMaintenanceWindowDetail> maintenanceWindowDetails() {
        return this.maintenanceWindowDetails == null ? List.of() : this.maintenanceWindowDetails;
    }
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public List<GetDbSystemsDbSystemMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows == null ? List.of() : this.maintenanceWindows;
    }
    /**
     * @return Memory allocated to the DB system, in gigabytes.
     * 
     */
    public Optional<Integer> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    public Optional<String> nextMaintenanceRunId() {
        return Optional.ofNullable(this.nextMaintenanceRunId);
    }
    /**
     * @return The number of nodes in the DB system. For RAC DB systems, the value is greater than 1.
     * 
     */
    public Optional<Integer> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds == null ? List.of() : this.nsgIds;
    }
    /**
     * @return The most recent OS Patch Version applied on the DB system.
     * 
     */
    public Optional<String> osVersion() {
        return Optional.ofNullable(this.osVersion);
    }
    /**
     * @return The point in time for a cloned database system when the data disks were cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    public Optional<String> pointInTimeDataDiskCloneTimestamp() {
        return Optional.ofNullable(this.pointInTimeDataDiskCloneTimestamp);
    }
    public Optional<String> privateIp() {
        return Optional.ofNullable(this.privateIp);
    }
    /**
     * @return The RECO/REDO storage size, in gigabytes, that is currently allocated to the DB system. Applies only for virtual machine DB systems.
     * 
     */
    public Optional<Integer> recoStorageSizeInGb() {
        return Optional.ofNullable(this.recoStorageSizeInGb);
    }
    /**
     * @return The FQDN of the DNS record for the SCAN IP addresses that are associated with the DB system.
     * 
     */
    public Optional<String> scanDnsName() {
        return Optional.ofNullable(this.scanDnsName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the DB system.
     * 
     */
    public Optional<String> scanDnsRecordId() {
        return Optional.ofNullable(this.scanDnsRecordId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IP addresses associated with the DB system. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     * 
     */
    public List<String> scanIpIds() {
        return this.scanIpIds == null ? List.of() : this.scanIpIds;
    }
    /**
     * @return The shape of the DB system. The shape determines resources to allocate to the DB system.
     * * For virtual machine shapes, the number of CPU cores and memory
     * * For bare metal and Exadata shapes, the number of CPU cores, storage, and memory
     * 
     */
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    public Optional<String> sourceDbSystemId() {
        return Optional.ofNullable(this.sourceDbSystemId);
    }
    /**
     * @return True, if Sparse Diskgroup is configured for Exadata dbsystem, False, if Sparse diskgroup was not configured. Only applied for Exadata shape.
     * 
     */
    public Optional<Boolean> sparseDiskgroup() {
        return Optional.ofNullable(this.sparseDiskgroup);
    }
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the DB system.
     * 
     */
    public List<String> sshPublicKeys() {
        return this.sshPublicKeys == null ? List.of() : this.sshPublicKeys;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The block storage volume performance level. Valid values are `BALANCED` and `HIGH_PERFORMANCE`. See [Block Volume Performance](https://docs.cloud.oracle.com/iaas/Content/Block/Concepts/blockvolumeperformance.htm) for more information.
     * 
     */
    public Optional<String> storageVolumePerformanceMode() {
        return Optional.ofNullable(this.storageVolumePerformanceMode);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the DB system is associated with.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return The date and time the DB system was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time zone of the DB system. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    public Optional<String> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }
    /**
     * @return The Oracle Database version of the DB system.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the DB system. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the DB system to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     * 
     */
    public List<String> vipIds() {
        return this.vipIds == null ? List.of() : this.vipIds;
    }
    /**
     * @return The OCID of the zone the DB system is associated with.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbSystemsDbSystem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private @Nullable List<String> backupNetworkNsgIds;
        private @Nullable String backupSubnetId;
        private @Nullable String clusterName;
        private @Nullable String compartmentId;
        private @Nullable Integer cpuCoreCount;
        private @Nullable List<GetDbSystemsDbSystemDataCollectionOption> dataCollectionOptions;
        private @Nullable Integer dataStoragePercentage;
        private @Nullable Integer dataStorageSizeInGb;
        private @Nullable String databaseEdition;
        private @Nullable List<GetDbSystemsDbSystemDbHome> dbHomes;
        private @Nullable List<GetDbSystemsDbSystemDbSystemOption> dbSystemOptions;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String diskRedundancy;
        private @Nullable String displayName;
        private @Nullable String domain;
        private @Nullable List<String> faultDomains;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String hostname;
        private @Nullable String id;
        private @Nullable List<GetDbSystemsDbSystemIormConfigCach> iormConfigCaches;
        private @Nullable String kmsKeyId;
        private @Nullable String kmsKeyVersionId;
        private @Nullable String lastMaintenanceRunId;
        private @Nullable String lastPatchHistoryEntryId;
        private @Nullable String licenseModel;
        private @Nullable String lifecycleDetails;
        private @Nullable Integer listenerPort;
        private @Nullable List<GetDbSystemsDbSystemMaintenanceWindowDetail> maintenanceWindowDetails;
        private @Nullable List<GetDbSystemsDbSystemMaintenanceWindow> maintenanceWindows;
        private @Nullable Integer memorySizeInGbs;
        private @Nullable String nextMaintenanceRunId;
        private @Nullable Integer nodeCount;
        private @Nullable List<String> nsgIds;
        private @Nullable String osVersion;
        private @Nullable String pointInTimeDataDiskCloneTimestamp;
        private @Nullable String privateIp;
        private @Nullable Integer recoStorageSizeInGb;
        private @Nullable String scanDnsName;
        private @Nullable String scanDnsRecordId;
        private @Nullable List<String> scanIpIds;
        private @Nullable String shape;
        private @Nullable String source;
        private @Nullable String sourceDbSystemId;
        private @Nullable Boolean sparseDiskgroup;
        private @Nullable List<String> sshPublicKeys;
        private @Nullable String state;
        private @Nullable String storageVolumePerformanceMode;
        private @Nullable String subnetId;
        private @Nullable String timeCreated;
        private @Nullable String timeZone;
        private @Nullable String version;
        private @Nullable List<String> vipIds;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(GetDbSystemsDbSystem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.backupNetworkNsgIds = defaults.backupNetworkNsgIds;
    	      this.backupSubnetId = defaults.backupSubnetId;
    	      this.clusterName = defaults.clusterName;
    	      this.compartmentId = defaults.compartmentId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.dataCollectionOptions = defaults.dataCollectionOptions;
    	      this.dataStoragePercentage = defaults.dataStoragePercentage;
    	      this.dataStorageSizeInGb = defaults.dataStorageSizeInGb;
    	      this.databaseEdition = defaults.databaseEdition;
    	      this.dbHomes = defaults.dbHomes;
    	      this.dbSystemOptions = defaults.dbSystemOptions;
    	      this.definedTags = defaults.definedTags;
    	      this.diskRedundancy = defaults.diskRedundancy;
    	      this.displayName = defaults.displayName;
    	      this.domain = defaults.domain;
    	      this.faultDomains = defaults.faultDomains;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.iormConfigCaches = defaults.iormConfigCaches;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.kmsKeyVersionId = defaults.kmsKeyVersionId;
    	      this.lastMaintenanceRunId = defaults.lastMaintenanceRunId;
    	      this.lastPatchHistoryEntryId = defaults.lastPatchHistoryEntryId;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.listenerPort = defaults.listenerPort;
    	      this.maintenanceWindowDetails = defaults.maintenanceWindowDetails;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.nextMaintenanceRunId = defaults.nextMaintenanceRunId;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nsgIds = defaults.nsgIds;
    	      this.osVersion = defaults.osVersion;
    	      this.pointInTimeDataDiskCloneTimestamp = defaults.pointInTimeDataDiskCloneTimestamp;
    	      this.privateIp = defaults.privateIp;
    	      this.recoStorageSizeInGb = defaults.recoStorageSizeInGb;
    	      this.scanDnsName = defaults.scanDnsName;
    	      this.scanDnsRecordId = defaults.scanDnsRecordId;
    	      this.scanIpIds = defaults.scanIpIds;
    	      this.shape = defaults.shape;
    	      this.source = defaults.source;
    	      this.sourceDbSystemId = defaults.sourceDbSystemId;
    	      this.sparseDiskgroup = defaults.sparseDiskgroup;
    	      this.sshPublicKeys = defaults.sshPublicKeys;
    	      this.state = defaults.state;
    	      this.storageVolumePerformanceMode = defaults.storageVolumePerformanceMode;
    	      this.subnetId = defaults.subnetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeZone = defaults.timeZone;
    	      this.version = defaults.version;
    	      this.vipIds = defaults.vipIds;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder backupNetworkNsgIds(@Nullable List<String> backupNetworkNsgIds) {
            this.backupNetworkNsgIds = backupNetworkNsgIds;
            return this;
        }
        public Builder backupNetworkNsgIds(String... backupNetworkNsgIds) {
            return backupNetworkNsgIds(List.of(backupNetworkNsgIds));
        }
        @CustomType.Setter
        public Builder backupSubnetId(@Nullable String backupSubnetId) {
            this.backupSubnetId = backupSubnetId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterName(@Nullable String clusterName) {
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(@Nullable Integer cpuCoreCount) {
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder dataCollectionOptions(@Nullable List<GetDbSystemsDbSystemDataCollectionOption> dataCollectionOptions) {
            this.dataCollectionOptions = dataCollectionOptions;
            return this;
        }
        public Builder dataCollectionOptions(GetDbSystemsDbSystemDataCollectionOption... dataCollectionOptions) {
            return dataCollectionOptions(List.of(dataCollectionOptions));
        }
        @CustomType.Setter
        public Builder dataStoragePercentage(@Nullable Integer dataStoragePercentage) {
            this.dataStoragePercentage = dataStoragePercentage;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeInGb(@Nullable Integer dataStorageSizeInGb) {
            this.dataStorageSizeInGb = dataStorageSizeInGb;
            return this;
        }
        @CustomType.Setter
        public Builder databaseEdition(@Nullable String databaseEdition) {
            this.databaseEdition = databaseEdition;
            return this;
        }
        @CustomType.Setter
        public Builder dbHomes(@Nullable List<GetDbSystemsDbSystemDbHome> dbHomes) {
            this.dbHomes = dbHomes;
            return this;
        }
        public Builder dbHomes(GetDbSystemsDbSystemDbHome... dbHomes) {
            return dbHomes(List.of(dbHomes));
        }
        @CustomType.Setter
        public Builder dbSystemOptions(@Nullable List<GetDbSystemsDbSystemDbSystemOption> dbSystemOptions) {
            this.dbSystemOptions = dbSystemOptions;
            return this;
        }
        public Builder dbSystemOptions(GetDbSystemsDbSystemDbSystemOption... dbSystemOptions) {
            return dbSystemOptions(List.of(dbSystemOptions));
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder diskRedundancy(@Nullable String diskRedundancy) {
            this.diskRedundancy = diskRedundancy;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder domain(@Nullable String domain) {
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomains(@Nullable List<String> faultDomains) {
            this.faultDomains = faultDomains;
            return this;
        }
        public Builder faultDomains(String... faultDomains) {
            return faultDomains(List.of(faultDomains));
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder iormConfigCaches(@Nullable List<GetDbSystemsDbSystemIormConfigCach> iormConfigCaches) {
            this.iormConfigCaches = iormConfigCaches;
            return this;
        }
        public Builder iormConfigCaches(GetDbSystemsDbSystemIormConfigCach... iormConfigCaches) {
            return iormConfigCaches(List.of(iormConfigCaches));
        }
        @CustomType.Setter
        public Builder kmsKeyId(@Nullable String kmsKeyId) {
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyVersionId(@Nullable String kmsKeyVersionId) {
            this.kmsKeyVersionId = kmsKeyVersionId;
            return this;
        }
        @CustomType.Setter
        public Builder lastMaintenanceRunId(@Nullable String lastMaintenanceRunId) {
            this.lastMaintenanceRunId = lastMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder lastPatchHistoryEntryId(@Nullable String lastPatchHistoryEntryId) {
            this.lastPatchHistoryEntryId = lastPatchHistoryEntryId;
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(@Nullable String licenseModel) {
            this.licenseModel = licenseModel;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder listenerPort(@Nullable Integer listenerPort) {
            this.listenerPort = listenerPort;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindowDetails(@Nullable List<GetDbSystemsDbSystemMaintenanceWindowDetail> maintenanceWindowDetails) {
            this.maintenanceWindowDetails = maintenanceWindowDetails;
            return this;
        }
        public Builder maintenanceWindowDetails(GetDbSystemsDbSystemMaintenanceWindowDetail... maintenanceWindowDetails) {
            return maintenanceWindowDetails(List.of(maintenanceWindowDetails));
        }
        @CustomType.Setter
        public Builder maintenanceWindows(@Nullable List<GetDbSystemsDbSystemMaintenanceWindow> maintenanceWindows) {
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetDbSystemsDbSystemMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(@Nullable Integer memorySizeInGbs) {
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceRunId(@Nullable String nextMaintenanceRunId) {
            this.nextMaintenanceRunId = nextMaintenanceRunId;
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(@Nullable Integer nodeCount) {
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder nsgIds(@Nullable List<String> nsgIds) {
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder osVersion(@Nullable String osVersion) {
            this.osVersion = osVersion;
            return this;
        }
        @CustomType.Setter
        public Builder pointInTimeDataDiskCloneTimestamp(@Nullable String pointInTimeDataDiskCloneTimestamp) {
            this.pointInTimeDataDiskCloneTimestamp = pointInTimeDataDiskCloneTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder privateIp(@Nullable String privateIp) {
            this.privateIp = privateIp;
            return this;
        }
        @CustomType.Setter
        public Builder recoStorageSizeInGb(@Nullable Integer recoStorageSizeInGb) {
            this.recoStorageSizeInGb = recoStorageSizeInGb;
            return this;
        }
        @CustomType.Setter
        public Builder scanDnsName(@Nullable String scanDnsName) {
            this.scanDnsName = scanDnsName;
            return this;
        }
        @CustomType.Setter
        public Builder scanDnsRecordId(@Nullable String scanDnsRecordId) {
            this.scanDnsRecordId = scanDnsRecordId;
            return this;
        }
        @CustomType.Setter
        public Builder scanIpIds(@Nullable List<String> scanIpIds) {
            this.scanIpIds = scanIpIds;
            return this;
        }
        public Builder scanIpIds(String... scanIpIds) {
            return scanIpIds(List.of(scanIpIds));
        }
        @CustomType.Setter
        public Builder shape(@Nullable String shape) {
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDbSystemId(@Nullable String sourceDbSystemId) {
            this.sourceDbSystemId = sourceDbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder sparseDiskgroup(@Nullable Boolean sparseDiskgroup) {
            this.sparseDiskgroup = sparseDiskgroup;
            return this;
        }
        @CustomType.Setter
        public Builder sshPublicKeys(@Nullable List<String> sshPublicKeys) {
            this.sshPublicKeys = sshPublicKeys;
            return this;
        }
        public Builder sshPublicKeys(String... sshPublicKeys) {
            return sshPublicKeys(List.of(sshPublicKeys));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder storageVolumePerformanceMode(@Nullable String storageVolumePerformanceMode) {
            this.storageVolumePerformanceMode = storageVolumePerformanceMode;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(@Nullable String timeZone) {
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder vipIds(@Nullable List<String> vipIds) {
            this.vipIds = vipIds;
            return this;
        }
        public Builder vipIds(String... vipIds) {
            return vipIds(List.of(vipIds));
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {
            this.zoneId = zoneId;
            return this;
        }
        public GetDbSystemsDbSystem build() {
            final var o = new GetDbSystemsDbSystem();
            o.availabilityDomain = availabilityDomain;
            o.backupNetworkNsgIds = backupNetworkNsgIds;
            o.backupSubnetId = backupSubnetId;
            o.clusterName = clusterName;
            o.compartmentId = compartmentId;
            o.cpuCoreCount = cpuCoreCount;
            o.dataCollectionOptions = dataCollectionOptions;
            o.dataStoragePercentage = dataStoragePercentage;
            o.dataStorageSizeInGb = dataStorageSizeInGb;
            o.databaseEdition = databaseEdition;
            o.dbHomes = dbHomes;
            o.dbSystemOptions = dbSystemOptions;
            o.definedTags = definedTags;
            o.diskRedundancy = diskRedundancy;
            o.displayName = displayName;
            o.domain = domain;
            o.faultDomains = faultDomains;
            o.freeformTags = freeformTags;
            o.hostname = hostname;
            o.id = id;
            o.iormConfigCaches = iormConfigCaches;
            o.kmsKeyId = kmsKeyId;
            o.kmsKeyVersionId = kmsKeyVersionId;
            o.lastMaintenanceRunId = lastMaintenanceRunId;
            o.lastPatchHistoryEntryId = lastPatchHistoryEntryId;
            o.licenseModel = licenseModel;
            o.lifecycleDetails = lifecycleDetails;
            o.listenerPort = listenerPort;
            o.maintenanceWindowDetails = maintenanceWindowDetails;
            o.maintenanceWindows = maintenanceWindows;
            o.memorySizeInGbs = memorySizeInGbs;
            o.nextMaintenanceRunId = nextMaintenanceRunId;
            o.nodeCount = nodeCount;
            o.nsgIds = nsgIds;
            o.osVersion = osVersion;
            o.pointInTimeDataDiskCloneTimestamp = pointInTimeDataDiskCloneTimestamp;
            o.privateIp = privateIp;
            o.recoStorageSizeInGb = recoStorageSizeInGb;
            o.scanDnsName = scanDnsName;
            o.scanDnsRecordId = scanDnsRecordId;
            o.scanIpIds = scanIpIds;
            o.shape = shape;
            o.source = source;
            o.sourceDbSystemId = sourceDbSystemId;
            o.sparseDiskgroup = sparseDiskgroup;
            o.sshPublicKeys = sshPublicKeys;
            o.state = state;
            o.storageVolumePerformanceMode = storageVolumePerformanceMode;
            o.subnetId = subnetId;
            o.timeCreated = timeCreated;
            o.timeZone = timeZone;
            o.version = version;
            o.vipIds = vipIds;
            o.zoneId = zoneId;
            return o;
        }
    }
}
