// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemDbHomeDatabase;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDbSystemsDbSystemDbHome {
    private Boolean createAsync;
    private String databaseSoftwareImageId;
    private List<GetDbSystemsDbSystemDbHomeDatabase> databases;
    private String dbHomeLocation;
    private String dbVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    private String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     * 
     */
    private String lastPatchHistoryEntryId;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private String state;
    /**
     * @return The date and time the DB system was created.
     * 
     */
    private String timeCreated;

    private GetDbSystemsDbSystemDbHome() {}
    public Boolean createAsync() {
        return this.createAsync;
    }
    public String databaseSoftwareImageId() {
        return this.databaseSoftwareImageId;
    }
    public List<GetDbSystemsDbSystemDbHomeDatabase> databases() {
        return this.databases;
    }
    public String dbHomeLocation() {
        return this.dbHomeLocation;
    }
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     * 
     */
    public String lastPatchHistoryEntryId() {
        return this.lastPatchHistoryEntryId;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the DB system was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbSystemsDbSystemDbHome defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean createAsync;
        private String databaseSoftwareImageId;
        private List<GetDbSystemsDbSystemDbHomeDatabase> databases;
        private String dbHomeLocation;
        private String dbVersion;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lastPatchHistoryEntryId;
        private String lifecycleDetails;
        private String state;
        private String timeCreated;
        public Builder() {}
        public Builder(GetDbSystemsDbSystemDbHome defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createAsync = defaults.createAsync;
    	      this.databaseSoftwareImageId = defaults.databaseSoftwareImageId;
    	      this.databases = defaults.databases;
    	      this.dbHomeLocation = defaults.dbHomeLocation;
    	      this.dbVersion = defaults.dbVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lastPatchHistoryEntryId = defaults.lastPatchHistoryEntryId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder createAsync(Boolean createAsync) {
            this.createAsync = Objects.requireNonNull(createAsync);
            return this;
        }
        @CustomType.Setter
        public Builder databaseSoftwareImageId(String databaseSoftwareImageId) {
            this.databaseSoftwareImageId = Objects.requireNonNull(databaseSoftwareImageId);
            return this;
        }
        @CustomType.Setter
        public Builder databases(List<GetDbSystemsDbSystemDbHomeDatabase> databases) {
            this.databases = Objects.requireNonNull(databases);
            return this;
        }
        public Builder databases(GetDbSystemsDbSystemDbHomeDatabase... databases) {
            return databases(List.of(databases));
        }
        @CustomType.Setter
        public Builder dbHomeLocation(String dbHomeLocation) {
            this.dbHomeLocation = Objects.requireNonNull(dbHomeLocation);
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            this.dbVersion = Objects.requireNonNull(dbVersion);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lastPatchHistoryEntryId(String lastPatchHistoryEntryId) {
            this.lastPatchHistoryEntryId = Objects.requireNonNull(lastPatchHistoryEntryId);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public GetDbSystemsDbSystemDbHome build() {
            final var _resultValue = new GetDbSystemsDbSystemDbHome();
            _resultValue.createAsync = createAsync;
            _resultValue.databaseSoftwareImageId = databaseSoftwareImageId;
            _resultValue.databases = databases;
            _resultValue.dbHomeLocation = dbHomeLocation;
            _resultValue.dbVersion = dbVersion;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lastPatchHistoryEntryId = lastPatchHistoryEntryId;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
