// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfig {
    private Boolean autoBackupEnabled;
    private String autoBackupWindow;
    private String autoFullBackupDay;
    private String autoFullBackupWindow;
    private String backupDeletionPolicy;
    private List<GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails;
    private Integer recoveryWindowInDays;
    private Boolean runImmediateFullBackup;

    private GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfig() {}
    public Boolean autoBackupEnabled() {
        return this.autoBackupEnabled;
    }
    public String autoBackupWindow() {
        return this.autoBackupWindow;
    }
    public String autoFullBackupDay() {
        return this.autoFullBackupDay;
    }
    public String autoFullBackupWindow() {
        return this.autoFullBackupWindow;
    }
    public String backupDeletionPolicy() {
        return this.backupDeletionPolicy;
    }
    public List<GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails() {
        return this.backupDestinationDetails;
    }
    public Integer recoveryWindowInDays() {
        return this.recoveryWindowInDays;
    }
    public Boolean runImmediateFullBackup() {
        return this.runImmediateFullBackup;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoBackupEnabled;
        private String autoBackupWindow;
        private String autoFullBackupDay;
        private String autoFullBackupWindow;
        private String backupDeletionPolicy;
        private List<GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails;
        private Integer recoveryWindowInDays;
        private Boolean runImmediateFullBackup;
        public Builder() {}
        public Builder(GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoBackupEnabled = defaults.autoBackupEnabled;
    	      this.autoBackupWindow = defaults.autoBackupWindow;
    	      this.autoFullBackupDay = defaults.autoFullBackupDay;
    	      this.autoFullBackupWindow = defaults.autoFullBackupWindow;
    	      this.backupDeletionPolicy = defaults.backupDeletionPolicy;
    	      this.backupDestinationDetails = defaults.backupDestinationDetails;
    	      this.recoveryWindowInDays = defaults.recoveryWindowInDays;
    	      this.runImmediateFullBackup = defaults.runImmediateFullBackup;
        }

        @CustomType.Setter
        public Builder autoBackupEnabled(Boolean autoBackupEnabled) {
            this.autoBackupEnabled = Objects.requireNonNull(autoBackupEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder autoBackupWindow(String autoBackupWindow) {
            this.autoBackupWindow = Objects.requireNonNull(autoBackupWindow);
            return this;
        }
        @CustomType.Setter
        public Builder autoFullBackupDay(String autoFullBackupDay) {
            this.autoFullBackupDay = Objects.requireNonNull(autoFullBackupDay);
            return this;
        }
        @CustomType.Setter
        public Builder autoFullBackupWindow(String autoFullBackupWindow) {
            this.autoFullBackupWindow = Objects.requireNonNull(autoFullBackupWindow);
            return this;
        }
        @CustomType.Setter
        public Builder backupDeletionPolicy(String backupDeletionPolicy) {
            this.backupDeletionPolicy = Objects.requireNonNull(backupDeletionPolicy);
            return this;
        }
        @CustomType.Setter
        public Builder backupDestinationDetails(List<GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails) {
            this.backupDestinationDetails = Objects.requireNonNull(backupDestinationDetails);
            return this;
        }
        public Builder backupDestinationDetails(GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfigBackupDestinationDetail... backupDestinationDetails) {
            return backupDestinationDetails(List.of(backupDestinationDetails));
        }
        @CustomType.Setter
        public Builder recoveryWindowInDays(Integer recoveryWindowInDays) {
            this.recoveryWindowInDays = Objects.requireNonNull(recoveryWindowInDays);
            return this;
        }
        @CustomType.Setter
        public Builder runImmediateFullBackup(Boolean runImmediateFullBackup) {
            this.runImmediateFullBackup = Objects.requireNonNull(runImmediateFullBackup);
            return this;
        }
        public GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfig build() {
            final var _resultValue = new GetDbSystemsDbSystemDbHomeDatabaseDbBackupConfig();
            _resultValue.autoBackupEnabled = autoBackupEnabled;
            _resultValue.autoBackupWindow = autoBackupWindow;
            _resultValue.autoFullBackupDay = autoFullBackupDay;
            _resultValue.autoFullBackupWindow = autoFullBackupWindow;
            _resultValue.backupDeletionPolicy = backupDeletionPolicy;
            _resultValue.backupDestinationDetails = backupDestinationDetails;
            _resultValue.recoveryWindowInDays = recoveryWindowInDays;
            _resultValue.runImmediateFullBackup = runImmediateFullBackup;
            return _resultValue;
        }
    }
}
