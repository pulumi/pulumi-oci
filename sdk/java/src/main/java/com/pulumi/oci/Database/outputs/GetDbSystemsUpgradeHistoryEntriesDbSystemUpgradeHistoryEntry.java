// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntry {
    /**
     * @return The operating system upgrade action.
     * 
     */
    private @Nullable String action;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the upgrade history entry.
     * 
     */
    private @Nullable String id;
    /**
     * @return A descriptive text associated with the lifecycleState. Typically contains additional displayable text.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    private @Nullable String newGiVersion;
    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    private @Nullable String oldGiVersion;
    /**
     * @return The retention period, in days, for the snapshot that allows you to perform a rollback of the upgrade operation. After this number of days passes, you cannot roll back the upgrade.
     * 
     */
    private @Nullable Integer snapshotRetentionPeriodInDays;
    /**
     * @return A filter to return only upgrade history entries that match the given lifecycle state exactly.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time when the upgrade action completed
     * 
     */
    private @Nullable String timeEnded;
    /**
     * @return The date and time when the upgrade action started.
     * 
     */
    private @Nullable String timeStarted;

    private GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntry() {}
    /**
     * @return The operating system upgrade action.
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the upgrade history entry.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A descriptive text associated with the lifecycleState. Typically contains additional displayable text.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    public Optional<String> newGiVersion() {
        return Optional.ofNullable(this.newGiVersion);
    }
    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    public Optional<String> oldGiVersion() {
        return Optional.ofNullable(this.oldGiVersion);
    }
    /**
     * @return The retention period, in days, for the snapshot that allows you to perform a rollback of the upgrade operation. After this number of days passes, you cannot roll back the upgrade.
     * 
     */
    public Optional<Integer> snapshotRetentionPeriodInDays() {
        return Optional.ofNullable(this.snapshotRetentionPeriodInDays);
    }
    /**
     * @return A filter to return only upgrade history entries that match the given lifecycle state exactly.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time when the upgrade action completed
     * 
     */
    public Optional<String> timeEnded() {
        return Optional.ofNullable(this.timeEnded);
    }
    /**
     * @return The date and time when the upgrade action started.
     * 
     */
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String newGiVersion;
        private @Nullable String oldGiVersion;
        private @Nullable Integer snapshotRetentionPeriodInDays;
        private @Nullable String state;
        private @Nullable String timeEnded;
        private @Nullable String timeStarted;
        public Builder() {}
        public Builder(GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.newGiVersion = defaults.newGiVersion;
    	      this.oldGiVersion = defaults.oldGiVersion;
    	      this.snapshotRetentionPeriodInDays = defaults.snapshotRetentionPeriodInDays;
    	      this.state = defaults.state;
    	      this.timeEnded = defaults.timeEnded;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder newGiVersion(@Nullable String newGiVersion) {
            this.newGiVersion = newGiVersion;
            return this;
        }
        @CustomType.Setter
        public Builder oldGiVersion(@Nullable String oldGiVersion) {
            this.oldGiVersion = oldGiVersion;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotRetentionPeriodInDays(@Nullable Integer snapshotRetentionPeriodInDays) {
            this.snapshotRetentionPeriodInDays = snapshotRetentionPeriodInDays;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnded(@Nullable String timeEnded) {
            this.timeEnded = timeEnded;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {
            this.timeStarted = timeStarted;
            return this;
        }
        public GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntry build() {
            final var o = new GetDbSystemsUpgradeHistoryEntriesDbSystemUpgradeHistoryEntry();
            o.action = action;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.newGiVersion = newGiVersion;
            o.oldGiVersion = oldGiVersion;
            o.snapshotRetentionPeriodInDays = snapshotRetentionPeriodInDays;
            o.state = state;
            o.timeEnded = timeEnded;
            o.timeStarted = timeStarted;
            return o;
        }
    }
}
