// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetExadataInfrastructuresExadataInfrastructureDefinedFileSystemConfiguration {
    /**
     * @return If true, the file system is used to create a backup prior to Exadata VM OS update.
     * 
     */
    private Boolean isBackupPartition;
    /**
     * @return If true, the file system resize is allowed for the Exadata Infrastructure cluster. If false, the file system resize is not allowed.
     * 
     */
    private Boolean isResizable;
    /**
     * @return The minimum size of file system.
     * 
     */
    private Integer minSizeGb;
    /**
     * @return The mount point of file system.
     * 
     */
    private String mountPoint;

    private GetExadataInfrastructuresExadataInfrastructureDefinedFileSystemConfiguration() {}
    /**
     * @return If true, the file system is used to create a backup prior to Exadata VM OS update.
     * 
     */
    public Boolean isBackupPartition() {
        return this.isBackupPartition;
    }
    /**
     * @return If true, the file system resize is allowed for the Exadata Infrastructure cluster. If false, the file system resize is not allowed.
     * 
     */
    public Boolean isResizable() {
        return this.isResizable;
    }
    /**
     * @return The minimum size of file system.
     * 
     */
    public Integer minSizeGb() {
        return this.minSizeGb;
    }
    /**
     * @return The mount point of file system.
     * 
     */
    public String mountPoint() {
        return this.mountPoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExadataInfrastructuresExadataInfrastructureDefinedFileSystemConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isBackupPartition;
        private Boolean isResizable;
        private Integer minSizeGb;
        private String mountPoint;
        public Builder() {}
        public Builder(GetExadataInfrastructuresExadataInfrastructureDefinedFileSystemConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isBackupPartition = defaults.isBackupPartition;
    	      this.isResizable = defaults.isResizable;
    	      this.minSizeGb = defaults.minSizeGb;
    	      this.mountPoint = defaults.mountPoint;
        }

        @CustomType.Setter
        public Builder isBackupPartition(Boolean isBackupPartition) {
            if (isBackupPartition == null) {
              throw new MissingRequiredPropertyException("GetExadataInfrastructuresExadataInfrastructureDefinedFileSystemConfiguration", "isBackupPartition");
            }
            this.isBackupPartition = isBackupPartition;
            return this;
        }
        @CustomType.Setter
        public Builder isResizable(Boolean isResizable) {
            if (isResizable == null) {
              throw new MissingRequiredPropertyException("GetExadataInfrastructuresExadataInfrastructureDefinedFileSystemConfiguration", "isResizable");
            }
            this.isResizable = isResizable;
            return this;
        }
        @CustomType.Setter
        public Builder minSizeGb(Integer minSizeGb) {
            if (minSizeGb == null) {
              throw new MissingRequiredPropertyException("GetExadataInfrastructuresExadataInfrastructureDefinedFileSystemConfiguration", "minSizeGb");
            }
            this.minSizeGb = minSizeGb;
            return this;
        }
        @CustomType.Setter
        public Builder mountPoint(String mountPoint) {
            if (mountPoint == null) {
              throw new MissingRequiredPropertyException("GetExadataInfrastructuresExadataInfrastructureDefinedFileSystemConfiguration", "mountPoint");
            }
            this.mountPoint = mountPoint;
            return this;
        }
        public GetExadataInfrastructuresExadataInfrastructureDefinedFileSystemConfiguration build() {
            final var _resultValue = new GetExadataInfrastructuresExadataInfrastructureDefinedFileSystemConfiguration();
            _resultValue.isBackupPartition = isBackupPartition;
            _resultValue.isResizable = isResizable;
            _resultValue.minSizeGb = minSizeGb;
            _resultValue.mountPoint = mountPoint;
            return _resultValue;
        }
    }
}
