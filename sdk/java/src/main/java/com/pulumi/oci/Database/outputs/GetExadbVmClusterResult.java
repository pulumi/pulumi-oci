// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetExadbVmClusterDataCollectionOption;
import com.pulumi.oci.Database.outputs.GetExadbVmClusterIormConfigCach;
import com.pulumi.oci.Database.outputs.GetExadbVmClusterNodeConfig;
import com.pulumi.oci.Database.outputs.GetExadbVmClusterNodeResource;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetExadbVmClusterResult {
    /**
     * @return The name of the availability domain in which the Exadata VM cluster on Exascale Infrastructure is located.
     * 
     */
    private String availabilityDomain;
    /**
     * @return A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
     * 
     */
    private List<String> backupNetworkNsgIds;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet associated with the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    private String backupSubnetId;
    /**
     * @return The cluster name for Exadata VM cluster on Exascale Infrastructure. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
     * 
     */
    private String clusterName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     */
    private List<GetExadbVmClusterDataCollectionOption> dataCollectionOptions;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The user-friendly name for the Exadata VM cluster on Exascale Infrastructure. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return A domain name used for the Exadata VM cluster on Exascale Infrastructure. If the Oracle-provided internet and VCN resolver is enabled for the specified subnet, then the domain name for the subnet is used (do not provide one). Otherwise, provide a valid DNS domain name. Hyphens (-) are not permitted.  Applies to Exadata Database Service on Exascale Infrastructure only.
     * 
     */
    private String domain;
    private String exadbVmClusterId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Database Storage Vault.
     * 
     */
    private String exascaleDbStorageVaultId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    private String giVersion;
    /**
     * @return Grid Setup will be done using this grid image id
     * 
     */
    private String gridImageId;
    /**
     * @return The type of Grid Image
     * 
     */
    private String gridImageType;
    /**
     * @return The hostname for the Exadata VM cluster on Exascale Infrastructure. The hostname must begin with an alphabetic character, and  can contain alphanumeric characters and hyphens (-). For Exadata systems, the maximum length of the hostname is 12 characters.
     * 
     */
    private String hostname;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    private String id;
    /**
     * @return The IORM settings of the Exadata DB system.
     * 
     */
    private List<GetExadbVmClusterIormConfigCach> iormConfigCaches;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history entry. This value is updated when a maintenance update starts.
     * 
     */
    private String lastUpdateHistoryEntryId;
    /**
     * @return The Oracle license model that applies to the Exadata VM cluster on Exascale Infrastructure. The default is BRING_YOUR_OWN_LICENSE.
     * 
     */
    private String licenseModel;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The port number configured for the listener on the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    private String listenerPort;
    /**
     * @return The configuration of each node in the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    private List<GetExadbVmClusterNodeConfig> nodeConfigs;
    /**
     * @return The list of node in the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    private List<GetExadbVmClusterNodeResource> nodeResources;
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
     * 
     */
    private List<String> nsgIds;
    /**
     * @return The private zone ID in which you want DNS records to be created.
     * 
     */
    private String privateZoneId;
    /**
     * @return The FQDN of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    private String scanDnsName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    private String scanDnsRecordId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IP addresses associated with the Exadata VM cluster on Exascale Infrastructure. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     * 
     */
    private List<String> scanIpIds;
    /**
     * @return The TCP Single Client Access Name (SCAN) port. The default port is 1521.
     * 
     */
    private Integer scanListenerPortTcp;
    /**
     * @return The Secured Communication (TCPS) protocol Single Client Access Name (SCAN) port. The default port is 2484.
     * 
     */
    private Integer scanListenerPortTcpSsl;
    /**
     * @return The shape of the Exadata VM cluster on Exascale Infrastructure resource
     * 
     */
    private String shape;
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    private List<String> sshPublicKeys;
    /**
     * @return The current state of the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    private String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    private String subnetId;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Operating system version of the image.
     * 
     */
    private String systemVersion;
    /**
     * @return The date and time that the Exadata VM cluster on Exascale Infrastructure was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The time zone to use for the Exadata VM cluster on Exascale Infrastructure. For details, see [Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    private String timeZone;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the Exadata VM cluster on Exascale Infrastructure.  The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to  enable failover. If one node fails, then the VIP is reassigned to another active node in the cluster.
     * 
     */
    private List<String> vipIds;
    /**
     * @return The OCID of the zone with which the Exadata VM cluster on Exascale Infrastructure is associated.
     * 
     */
    private String zoneId;

    private GetExadbVmClusterResult() {}
    /**
     * @return The name of the availability domain in which the Exadata VM cluster on Exascale Infrastructure is located.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
     * 
     */
    public List<String> backupNetworkNsgIds() {
        return this.backupNetworkNsgIds;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet associated with the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    public String backupSubnetId() {
        return this.backupSubnetId;
    }
    /**
     * @return The cluster name for Exadata VM cluster on Exascale Infrastructure. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     */
    public List<GetExadbVmClusterDataCollectionOption> dataCollectionOptions() {
        return this.dataCollectionOptions;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name for the Exadata VM cluster on Exascale Infrastructure. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return A domain name used for the Exadata VM cluster on Exascale Infrastructure. If the Oracle-provided internet and VCN resolver is enabled for the specified subnet, then the domain name for the subnet is used (do not provide one). Otherwise, provide a valid DNS domain name. Hyphens (-) are not permitted.  Applies to Exadata Database Service on Exascale Infrastructure only.
     * 
     */
    public String domain() {
        return this.domain;
    }
    public String exadbVmClusterId() {
        return this.exadbVmClusterId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Database Storage Vault.
     * 
     */
    public String exascaleDbStorageVaultId() {
        return this.exascaleDbStorageVaultId;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    public String giVersion() {
        return this.giVersion;
    }
    /**
     * @return Grid Setup will be done using this grid image id
     * 
     */
    public String gridImageId() {
        return this.gridImageId;
    }
    /**
     * @return The type of Grid Image
     * 
     */
    public String gridImageType() {
        return this.gridImageType;
    }
    /**
     * @return The hostname for the Exadata VM cluster on Exascale Infrastructure. The hostname must begin with an alphabetic character, and  can contain alphanumeric characters and hyphens (-). For Exadata systems, the maximum length of the hostname is 12 characters.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IORM settings of the Exadata DB system.
     * 
     */
    public List<GetExadbVmClusterIormConfigCach> iormConfigCaches() {
        return this.iormConfigCaches;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history entry. This value is updated when a maintenance update starts.
     * 
     */
    public String lastUpdateHistoryEntryId() {
        return this.lastUpdateHistoryEntryId;
    }
    /**
     * @return The Oracle license model that applies to the Exadata VM cluster on Exascale Infrastructure. The default is BRING_YOUR_OWN_LICENSE.
     * 
     */
    public String licenseModel() {
        return this.licenseModel;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The port number configured for the listener on the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    public String listenerPort() {
        return this.listenerPort;
    }
    /**
     * @return The configuration of each node in the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    public List<GetExadbVmClusterNodeConfig> nodeConfigs() {
        return this.nodeConfigs;
    }
    /**
     * @return The list of node in the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    public List<GetExadbVmClusterNodeResource> nodeResources() {
        return this.nodeResources;
    }
    /**
     * @return The list of [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return The private zone ID in which you want DNS records to be created.
     * 
     */
    public String privateZoneId() {
        return this.privateZoneId;
    }
    /**
     * @return The FQDN of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    public String scanDnsName() {
        return this.scanDnsName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    public String scanDnsRecordId() {
        return this.scanDnsRecordId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IP addresses associated with the Exadata VM cluster on Exascale Infrastructure. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     * 
     */
    public List<String> scanIpIds() {
        return this.scanIpIds;
    }
    /**
     * @return The TCP Single Client Access Name (SCAN) port. The default port is 1521.
     * 
     */
    public Integer scanListenerPortTcp() {
        return this.scanListenerPortTcp;
    }
    /**
     * @return The Secured Communication (TCPS) protocol Single Client Access Name (SCAN) port. The default port is 2484.
     * 
     */
    public Integer scanListenerPortTcpSsl() {
        return this.scanListenerPortTcpSsl;
    }
    /**
     * @return The shape of the Exadata VM cluster on Exascale Infrastructure resource
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    public List<String> sshPublicKeys() {
        return this.sshPublicKeys;
    }
    /**
     * @return The current state of the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the Exadata VM cluster on Exascale Infrastructure.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Operating system version of the image.
     * 
     */
    public String systemVersion() {
        return this.systemVersion;
    }
    /**
     * @return The date and time that the Exadata VM cluster on Exascale Infrastructure was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time zone to use for the Exadata VM cluster on Exascale Infrastructure. For details, see [Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the Exadata VM cluster on Exascale Infrastructure.  The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to  enable failover. If one node fails, then the VIP is reassigned to another active node in the cluster.
     * 
     */
    public List<String> vipIds() {
        return this.vipIds;
    }
    /**
     * @return The OCID of the zone with which the Exadata VM cluster on Exascale Infrastructure is associated.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExadbVmClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private List<String> backupNetworkNsgIds;
        private String backupSubnetId;
        private String clusterName;
        private String compartmentId;
        private List<GetExadbVmClusterDataCollectionOption> dataCollectionOptions;
        private Map<String,String> definedTags;
        private String displayName;
        private String domain;
        private String exadbVmClusterId;
        private String exascaleDbStorageVaultId;
        private Map<String,String> freeformTags;
        private String giVersion;
        private String gridImageId;
        private String gridImageType;
        private String hostname;
        private String id;
        private List<GetExadbVmClusterIormConfigCach> iormConfigCaches;
        private String lastUpdateHistoryEntryId;
        private String licenseModel;
        private String lifecycleDetails;
        private String listenerPort;
        private List<GetExadbVmClusterNodeConfig> nodeConfigs;
        private List<GetExadbVmClusterNodeResource> nodeResources;
        private List<String> nsgIds;
        private String privateZoneId;
        private String scanDnsName;
        private String scanDnsRecordId;
        private List<String> scanIpIds;
        private Integer scanListenerPortTcp;
        private Integer scanListenerPortTcpSsl;
        private String shape;
        private List<String> sshPublicKeys;
        private String state;
        private String subnetId;
        private Map<String,String> systemTags;
        private String systemVersion;
        private String timeCreated;
        private String timeZone;
        private List<String> vipIds;
        private String zoneId;
        public Builder() {}
        public Builder(GetExadbVmClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.backupNetworkNsgIds = defaults.backupNetworkNsgIds;
    	      this.backupSubnetId = defaults.backupSubnetId;
    	      this.clusterName = defaults.clusterName;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dataCollectionOptions = defaults.dataCollectionOptions;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.domain = defaults.domain;
    	      this.exadbVmClusterId = defaults.exadbVmClusterId;
    	      this.exascaleDbStorageVaultId = defaults.exascaleDbStorageVaultId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.giVersion = defaults.giVersion;
    	      this.gridImageId = defaults.gridImageId;
    	      this.gridImageType = defaults.gridImageType;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.iormConfigCaches = defaults.iormConfigCaches;
    	      this.lastUpdateHistoryEntryId = defaults.lastUpdateHistoryEntryId;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.listenerPort = defaults.listenerPort;
    	      this.nodeConfigs = defaults.nodeConfigs;
    	      this.nodeResources = defaults.nodeResources;
    	      this.nsgIds = defaults.nsgIds;
    	      this.privateZoneId = defaults.privateZoneId;
    	      this.scanDnsName = defaults.scanDnsName;
    	      this.scanDnsRecordId = defaults.scanDnsRecordId;
    	      this.scanIpIds = defaults.scanIpIds;
    	      this.scanListenerPortTcp = defaults.scanListenerPortTcp;
    	      this.scanListenerPortTcpSsl = defaults.scanListenerPortTcpSsl;
    	      this.shape = defaults.shape;
    	      this.sshPublicKeys = defaults.sshPublicKeys;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.systemVersion = defaults.systemVersion;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeZone = defaults.timeZone;
    	      this.vipIds = defaults.vipIds;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder backupNetworkNsgIds(List<String> backupNetworkNsgIds) {
            if (backupNetworkNsgIds == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "backupNetworkNsgIds");
            }
            this.backupNetworkNsgIds = backupNetworkNsgIds;
            return this;
        }
        public Builder backupNetworkNsgIds(String... backupNetworkNsgIds) {
            return backupNetworkNsgIds(List.of(backupNetworkNsgIds));
        }
        @CustomType.Setter
        public Builder backupSubnetId(String backupSubnetId) {
            if (backupSubnetId == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "backupSubnetId");
            }
            this.backupSubnetId = backupSubnetId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterName(String clusterName) {
            if (clusterName == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "clusterName");
            }
            this.clusterName = clusterName;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dataCollectionOptions(List<GetExadbVmClusterDataCollectionOption> dataCollectionOptions) {
            if (dataCollectionOptions == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "dataCollectionOptions");
            }
            this.dataCollectionOptions = dataCollectionOptions;
            return this;
        }
        public Builder dataCollectionOptions(GetExadbVmClusterDataCollectionOption... dataCollectionOptions) {
            return dataCollectionOptions(List.of(dataCollectionOptions));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder exadbVmClusterId(String exadbVmClusterId) {
            if (exadbVmClusterId == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "exadbVmClusterId");
            }
            this.exadbVmClusterId = exadbVmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder exascaleDbStorageVaultId(String exascaleDbStorageVaultId) {
            if (exascaleDbStorageVaultId == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "exascaleDbStorageVaultId");
            }
            this.exascaleDbStorageVaultId = exascaleDbStorageVaultId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder giVersion(String giVersion) {
            if (giVersion == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "giVersion");
            }
            this.giVersion = giVersion;
            return this;
        }
        @CustomType.Setter
        public Builder gridImageId(String gridImageId) {
            if (gridImageId == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "gridImageId");
            }
            this.gridImageId = gridImageId;
            return this;
        }
        @CustomType.Setter
        public Builder gridImageType(String gridImageType) {
            if (gridImageType == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "gridImageType");
            }
            this.gridImageType = gridImageType;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder iormConfigCaches(List<GetExadbVmClusterIormConfigCach> iormConfigCaches) {
            if (iormConfigCaches == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "iormConfigCaches");
            }
            this.iormConfigCaches = iormConfigCaches;
            return this;
        }
        public Builder iormConfigCaches(GetExadbVmClusterIormConfigCach... iormConfigCaches) {
            return iormConfigCaches(List.of(iormConfigCaches));
        }
        @CustomType.Setter
        public Builder lastUpdateHistoryEntryId(String lastUpdateHistoryEntryId) {
            if (lastUpdateHistoryEntryId == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "lastUpdateHistoryEntryId");
            }
            this.lastUpdateHistoryEntryId = lastUpdateHistoryEntryId;
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(String licenseModel) {
            if (licenseModel == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "licenseModel");
            }
            this.licenseModel = licenseModel;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder listenerPort(String listenerPort) {
            if (listenerPort == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "listenerPort");
            }
            this.listenerPort = listenerPort;
            return this;
        }
        @CustomType.Setter
        public Builder nodeConfigs(List<GetExadbVmClusterNodeConfig> nodeConfigs) {
            if (nodeConfigs == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "nodeConfigs");
            }
            this.nodeConfigs = nodeConfigs;
            return this;
        }
        public Builder nodeConfigs(GetExadbVmClusterNodeConfig... nodeConfigs) {
            return nodeConfigs(List.of(nodeConfigs));
        }
        @CustomType.Setter
        public Builder nodeResources(List<GetExadbVmClusterNodeResource> nodeResources) {
            if (nodeResources == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "nodeResources");
            }
            this.nodeResources = nodeResources;
            return this;
        }
        public Builder nodeResources(GetExadbVmClusterNodeResource... nodeResources) {
            return nodeResources(List.of(nodeResources));
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            if (nsgIds == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "nsgIds");
            }
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder privateZoneId(String privateZoneId) {
            if (privateZoneId == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "privateZoneId");
            }
            this.privateZoneId = privateZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder scanDnsName(String scanDnsName) {
            if (scanDnsName == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "scanDnsName");
            }
            this.scanDnsName = scanDnsName;
            return this;
        }
        @CustomType.Setter
        public Builder scanDnsRecordId(String scanDnsRecordId) {
            if (scanDnsRecordId == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "scanDnsRecordId");
            }
            this.scanDnsRecordId = scanDnsRecordId;
            return this;
        }
        @CustomType.Setter
        public Builder scanIpIds(List<String> scanIpIds) {
            if (scanIpIds == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "scanIpIds");
            }
            this.scanIpIds = scanIpIds;
            return this;
        }
        public Builder scanIpIds(String... scanIpIds) {
            return scanIpIds(List.of(scanIpIds));
        }
        @CustomType.Setter
        public Builder scanListenerPortTcp(Integer scanListenerPortTcp) {
            if (scanListenerPortTcp == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "scanListenerPortTcp");
            }
            this.scanListenerPortTcp = scanListenerPortTcp;
            return this;
        }
        @CustomType.Setter
        public Builder scanListenerPortTcpSsl(Integer scanListenerPortTcpSsl) {
            if (scanListenerPortTcpSsl == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "scanListenerPortTcpSsl");
            }
            this.scanListenerPortTcpSsl = scanListenerPortTcpSsl;
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            if (shape == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "shape");
            }
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder sshPublicKeys(List<String> sshPublicKeys) {
            if (sshPublicKeys == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "sshPublicKeys");
            }
            this.sshPublicKeys = sshPublicKeys;
            return this;
        }
        public Builder sshPublicKeys(String... sshPublicKeys) {
            return sshPublicKeys(List.of(sshPublicKeys));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder systemVersion(String systemVersion) {
            if (systemVersion == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "systemVersion");
            }
            this.systemVersion = systemVersion;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder vipIds(List<String> vipIds) {
            if (vipIds == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "vipIds");
            }
            this.vipIds = vipIds;
            return this;
        }
        public Builder vipIds(String... vipIds) {
            return vipIds(List.of(vipIds));
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            if (zoneId == null) {
              throw new MissingRequiredPropertyException("GetExadbVmClusterResult", "zoneId");
            }
            this.zoneId = zoneId;
            return this;
        }
        public GetExadbVmClusterResult build() {
            final var _resultValue = new GetExadbVmClusterResult();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.backupNetworkNsgIds = backupNetworkNsgIds;
            _resultValue.backupSubnetId = backupSubnetId;
            _resultValue.clusterName = clusterName;
            _resultValue.compartmentId = compartmentId;
            _resultValue.dataCollectionOptions = dataCollectionOptions;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.domain = domain;
            _resultValue.exadbVmClusterId = exadbVmClusterId;
            _resultValue.exascaleDbStorageVaultId = exascaleDbStorageVaultId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.giVersion = giVersion;
            _resultValue.gridImageId = gridImageId;
            _resultValue.gridImageType = gridImageType;
            _resultValue.hostname = hostname;
            _resultValue.id = id;
            _resultValue.iormConfigCaches = iormConfigCaches;
            _resultValue.lastUpdateHistoryEntryId = lastUpdateHistoryEntryId;
            _resultValue.licenseModel = licenseModel;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.listenerPort = listenerPort;
            _resultValue.nodeConfigs = nodeConfigs;
            _resultValue.nodeResources = nodeResources;
            _resultValue.nsgIds = nsgIds;
            _resultValue.privateZoneId = privateZoneId;
            _resultValue.scanDnsName = scanDnsName;
            _resultValue.scanDnsRecordId = scanDnsRecordId;
            _resultValue.scanIpIds = scanIpIds;
            _resultValue.scanListenerPortTcp = scanListenerPortTcp;
            _resultValue.scanListenerPortTcpSsl = scanListenerPortTcpSsl;
            _resultValue.shape = shape;
            _resultValue.sshPublicKeys = sshPublicKeys;
            _resultValue.state = state;
            _resultValue.subnetId = subnetId;
            _resultValue.systemTags = systemTags;
            _resultValue.systemVersion = systemVersion;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeZone = timeZone;
            _resultValue.vipIds = vipIds;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
