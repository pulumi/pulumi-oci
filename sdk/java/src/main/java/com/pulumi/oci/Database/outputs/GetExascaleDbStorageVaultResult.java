// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetExascaleDbStorageVaultHighCapacityDatabaseStorage;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetExascaleDbStorageVaultResult {
    /**
     * @return The size of additional Flash Cache in percentage of High Capacity database storage.
     * 
     */
    private Integer additionalFlashCacheInPercent;
    /**
     * @return The name of the availability domain in which the Exadata Database Storage Vault is located.
     * 
     */
    private String availabilityDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Exadata Database Storage Vault description.
     * 
     */
    private String description;
    /**
     * @return The user-friendly name for the Exadata Database Storage Vault. The name does not need to be unique.
     * 
     */
    private String displayName;
    private String exascaleDbStorageVaultId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Exadata Database Storage Details
     * 
     */
    private List<GetExascaleDbStorageVaultHighCapacityDatabaseStorage> highCapacityDatabaseStorages;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Database Storage Vault.
     * 
     */
    private String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The current state of the Exadata Database Storage Vault.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time that the Exadata Database Storage Vault was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The time zone that you want to use for the Exadata Database Storage Vault. For details, see [Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    private String timeZone;
    /**
     * @return The number of Exadata VM clusters used the Exadata Database Storage Vault.
     * 
     */
    private Integer vmClusterCount;
    /**
     * @return The List of Exadata VM cluster on Exascale Infrastructure [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) **Note:** If Exadata Database Storage Vault is not used for any Exadata VM cluster on Exascale Infrastructure, this list is empty.
     * 
     */
    private List<String> vmClusterIds;

    private GetExascaleDbStorageVaultResult() {}
    /**
     * @return The size of additional Flash Cache in percentage of High Capacity database storage.
     * 
     */
    public Integer additionalFlashCacheInPercent() {
        return this.additionalFlashCacheInPercent;
    }
    /**
     * @return The name of the availability domain in which the Exadata Database Storage Vault is located.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Exadata Database Storage Vault description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The user-friendly name for the Exadata Database Storage Vault. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public String exascaleDbStorageVaultId() {
        return this.exascaleDbStorageVaultId;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Exadata Database Storage Details
     * 
     */
    public List<GetExascaleDbStorageVaultHighCapacityDatabaseStorage> highCapacityDatabaseStorages() {
        return this.highCapacityDatabaseStorages;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Database Storage Vault.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The current state of the Exadata Database Storage Vault.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time that the Exadata Database Storage Vault was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time zone that you want to use for the Exadata Database Storage Vault. For details, see [Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return The number of Exadata VM clusters used the Exadata Database Storage Vault.
     * 
     */
    public Integer vmClusterCount() {
        return this.vmClusterCount;
    }
    /**
     * @return The List of Exadata VM cluster on Exascale Infrastructure [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) **Note:** If Exadata Database Storage Vault is not used for any Exadata VM cluster on Exascale Infrastructure, this list is empty.
     * 
     */
    public List<String> vmClusterIds() {
        return this.vmClusterIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExascaleDbStorageVaultResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer additionalFlashCacheInPercent;
        private String availabilityDomain;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private String exascaleDbStorageVaultId;
        private Map<String,String> freeformTags;
        private List<GetExascaleDbStorageVaultHighCapacityDatabaseStorage> highCapacityDatabaseStorages;
        private String id;
        private String lifecycleDetails;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeZone;
        private Integer vmClusterCount;
        private List<String> vmClusterIds;
        public Builder() {}
        public Builder(GetExascaleDbStorageVaultResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalFlashCacheInPercent = defaults.additionalFlashCacheInPercent;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.exascaleDbStorageVaultId = defaults.exascaleDbStorageVaultId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.highCapacityDatabaseStorages = defaults.highCapacityDatabaseStorages;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeZone = defaults.timeZone;
    	      this.vmClusterCount = defaults.vmClusterCount;
    	      this.vmClusterIds = defaults.vmClusterIds;
        }

        @CustomType.Setter
        public Builder additionalFlashCacheInPercent(Integer additionalFlashCacheInPercent) {
            if (additionalFlashCacheInPercent == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "additionalFlashCacheInPercent");
            }
            this.additionalFlashCacheInPercent = additionalFlashCacheInPercent;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder exascaleDbStorageVaultId(String exascaleDbStorageVaultId) {
            if (exascaleDbStorageVaultId == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "exascaleDbStorageVaultId");
            }
            this.exascaleDbStorageVaultId = exascaleDbStorageVaultId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder highCapacityDatabaseStorages(List<GetExascaleDbStorageVaultHighCapacityDatabaseStorage> highCapacityDatabaseStorages) {
            if (highCapacityDatabaseStorages == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "highCapacityDatabaseStorages");
            }
            this.highCapacityDatabaseStorages = highCapacityDatabaseStorages;
            return this;
        }
        public Builder highCapacityDatabaseStorages(GetExascaleDbStorageVaultHighCapacityDatabaseStorage... highCapacityDatabaseStorages) {
            return highCapacityDatabaseStorages(List.of(highCapacityDatabaseStorages));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterCount(Integer vmClusterCount) {
            if (vmClusterCount == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "vmClusterCount");
            }
            this.vmClusterCount = vmClusterCount;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterIds(List<String> vmClusterIds) {
            if (vmClusterIds == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultResult", "vmClusterIds");
            }
            this.vmClusterIds = vmClusterIds;
            return this;
        }
        public Builder vmClusterIds(String... vmClusterIds) {
            return vmClusterIds(List.of(vmClusterIds));
        }
        public GetExascaleDbStorageVaultResult build() {
            final var _resultValue = new GetExascaleDbStorageVaultResult();
            _resultValue.additionalFlashCacheInPercent = additionalFlashCacheInPercent;
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.exascaleDbStorageVaultId = exascaleDbStorageVaultId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.highCapacityDatabaseStorages = highCapacityDatabaseStorages;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeZone = timeZone;
            _resultValue.vmClusterCount = vmClusterCount;
            _resultValue.vmClusterIds = vmClusterIds;
            return _resultValue;
        }
    }
}
