// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetExascaleDbStorageVaultsExascaleDbStorageVault;
import com.pulumi.oci.Database.outputs.GetExascaleDbStorageVaultsFilter;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExascaleDbStorageVaultsResult {
    /**
     * @return The shapeAttribute of the Exadata VM cluster(s) associated with the Exadata Database Storage Vault.
     * 
     */
    private @Nullable String attachedShapeAttributes;
    private @Nullable String attachedShapeAttributesNotEqualTo;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Exadata Infrastructure.
     * 
     */
    private @Nullable String clusterPlacementGroupId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The user-friendly name for the Exadata Database Storage Vault. The name does not need to be unique.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    private @Nullable String exadataInfrastructureId;
    /**
     * @return The list of exascale_db_storage_vaults.
     * 
     */
    private List<GetExascaleDbStorageVaultsExascaleDbStorageVault> exascaleDbStorageVaults;
    private @Nullable List<GetExascaleDbStorageVaultsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The current state of the Exadata Database Storage Vault.
     * 
     */
    private @Nullable String state;
    private @Nullable Integer vmClusterCountGreaterThanOrEqualTo;
    private @Nullable Integer vmClusterCountLessThanOrEqualTo;

    private GetExascaleDbStorageVaultsResult() {}
    /**
     * @return The shapeAttribute of the Exadata VM cluster(s) associated with the Exadata Database Storage Vault.
     * 
     */
    public Optional<String> attachedShapeAttributes() {
        return Optional.ofNullable(this.attachedShapeAttributes);
    }
    public Optional<String> attachedShapeAttributesNotEqualTo() {
        return Optional.ofNullable(this.attachedShapeAttributesNotEqualTo);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group of the Exadata Infrastructure.
     * 
     */
    public Optional<String> clusterPlacementGroupId() {
        return Optional.ofNullable(this.clusterPlacementGroupId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The user-friendly name for the Exadata Database Storage Vault. The name does not need to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    public Optional<String> exadataInfrastructureId() {
        return Optional.ofNullable(this.exadataInfrastructureId);
    }
    /**
     * @return The list of exascale_db_storage_vaults.
     * 
     */
    public List<GetExascaleDbStorageVaultsExascaleDbStorageVault> exascaleDbStorageVaults() {
        return this.exascaleDbStorageVaults;
    }
    public List<GetExascaleDbStorageVaultsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of the Exadata Database Storage Vault.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<Integer> vmClusterCountGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.vmClusterCountGreaterThanOrEqualTo);
    }
    public Optional<Integer> vmClusterCountLessThanOrEqualTo() {
        return Optional.ofNullable(this.vmClusterCountLessThanOrEqualTo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExascaleDbStorageVaultsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String attachedShapeAttributes;
        private @Nullable String attachedShapeAttributesNotEqualTo;
        private @Nullable String clusterPlacementGroupId;
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable String exadataInfrastructureId;
        private List<GetExascaleDbStorageVaultsExascaleDbStorageVault> exascaleDbStorageVaults;
        private @Nullable List<GetExascaleDbStorageVaultsFilter> filters;
        private String id;
        private @Nullable String state;
        private @Nullable Integer vmClusterCountGreaterThanOrEqualTo;
        private @Nullable Integer vmClusterCountLessThanOrEqualTo;
        public Builder() {}
        public Builder(GetExascaleDbStorageVaultsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachedShapeAttributes = defaults.attachedShapeAttributes;
    	      this.attachedShapeAttributesNotEqualTo = defaults.attachedShapeAttributesNotEqualTo;
    	      this.clusterPlacementGroupId = defaults.clusterPlacementGroupId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.exadataInfrastructureId = defaults.exadataInfrastructureId;
    	      this.exascaleDbStorageVaults = defaults.exascaleDbStorageVaults;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.vmClusterCountGreaterThanOrEqualTo = defaults.vmClusterCountGreaterThanOrEqualTo;
    	      this.vmClusterCountLessThanOrEqualTo = defaults.vmClusterCountLessThanOrEqualTo;
        }

        @CustomType.Setter
        public Builder attachedShapeAttributes(@Nullable String attachedShapeAttributes) {

            this.attachedShapeAttributes = attachedShapeAttributes;
            return this;
        }
        @CustomType.Setter
        public Builder attachedShapeAttributesNotEqualTo(@Nullable String attachedShapeAttributesNotEqualTo) {

            this.attachedShapeAttributesNotEqualTo = attachedShapeAttributesNotEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder clusterPlacementGroupId(@Nullable String clusterPlacementGroupId) {

            this.clusterPlacementGroupId = clusterPlacementGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder exadataInfrastructureId(@Nullable String exadataInfrastructureId) {

            this.exadataInfrastructureId = exadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder exascaleDbStorageVaults(List<GetExascaleDbStorageVaultsExascaleDbStorageVault> exascaleDbStorageVaults) {
            if (exascaleDbStorageVaults == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultsResult", "exascaleDbStorageVaults");
            }
            this.exascaleDbStorageVaults = exascaleDbStorageVaults;
            return this;
        }
        public Builder exascaleDbStorageVaults(GetExascaleDbStorageVaultsExascaleDbStorageVault... exascaleDbStorageVaults) {
            return exascaleDbStorageVaults(List.of(exascaleDbStorageVaults));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetExascaleDbStorageVaultsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetExascaleDbStorageVaultsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExascaleDbStorageVaultsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterCountGreaterThanOrEqualTo(@Nullable Integer vmClusterCountGreaterThanOrEqualTo) {

            this.vmClusterCountGreaterThanOrEqualTo = vmClusterCountGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterCountLessThanOrEqualTo(@Nullable Integer vmClusterCountLessThanOrEqualTo) {

            this.vmClusterCountLessThanOrEqualTo = vmClusterCountLessThanOrEqualTo;
            return this;
        }
        public GetExascaleDbStorageVaultsResult build() {
            final var _resultValue = new GetExascaleDbStorageVaultsResult();
            _resultValue.attachedShapeAttributes = attachedShapeAttributes;
            _resultValue.attachedShapeAttributesNotEqualTo = attachedShapeAttributesNotEqualTo;
            _resultValue.clusterPlacementGroupId = clusterPlacementGroupId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.exadataInfrastructureId = exadataInfrastructureId;
            _resultValue.exascaleDbStorageVaults = exascaleDbStorageVaults;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.state = state;
            _resultValue.vmClusterCountGreaterThanOrEqualTo = vmClusterCountGreaterThanOrEqualTo;
            _resultValue.vmClusterCountLessThanOrEqualTo = vmClusterCountLessThanOrEqualTo;
            return _resultValue;
        }
    }
}
