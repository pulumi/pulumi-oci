// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetExternalDatabaseConnectorConnectionCredential;
import com.pulumi.oci.Database.outputs.GetExternalDatabaseConnectorConnectionString;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalDatabaseConnectorResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector crendentials.
     * 
     */
    private @Nullable List<GetExternalDatabaseConnectorConnectionCredential> connectionCredentials;
    /**
     * @return The status of connectivity to the external database.
     * 
     */
    private @Nullable String connectionStatus;
    /**
     * @return The Oracle Database connection string.
     * 
     */
    private @Nullable List<GetExternalDatabaseConnectorConnectionString> connectionStrings;
    /**
     * @return The ID of the agent used for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    private @Nullable String connectorAgentId;
    /**
     * @return The type of connector used by the external database resource.
     * 
     */
    private @Nullable String connectorType;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The user-friendly name for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails). The name does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    private String externalDatabaseConnectorId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database resource.
     * 
     */
    private @Nullable String externalDatabaseId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    private @Nullable String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The current lifecycle state of the external database connector resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the `connectionStatus` of this external connector was last updated.
     * 
     */
    private @Nullable String timeConnectionStatusLastUpdated;
    /**
     * @return The date and time the external connector was created.
     * 
     */
    private @Nullable String timeCreated;

    private GetExternalDatabaseConnectorResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector crendentials.
     * 
     */
    public List<GetExternalDatabaseConnectorConnectionCredential> connectionCredentials() {
        return this.connectionCredentials == null ? List.of() : this.connectionCredentials;
    }
    /**
     * @return The status of connectivity to the external database.
     * 
     */
    public Optional<String> connectionStatus() {
        return Optional.ofNullable(this.connectionStatus);
    }
    /**
     * @return The Oracle Database connection string.
     * 
     */
    public List<GetExternalDatabaseConnectorConnectionString> connectionStrings() {
        return this.connectionStrings == null ? List.of() : this.connectionStrings;
    }
    /**
     * @return The ID of the agent used for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    public Optional<String> connectorAgentId() {
        return Optional.ofNullable(this.connectorAgentId);
    }
    /**
     * @return The type of connector used by the external database resource.
     * 
     */
    public Optional<String> connectorType() {
        return Optional.ofNullable(this.connectorType);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The user-friendly name for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails). The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String externalDatabaseConnectorId() {
        return this.externalDatabaseConnectorId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database resource.
     * 
     */
    public Optional<String> externalDatabaseId() {
        return Optional.ofNullable(this.externalDatabaseId);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The current lifecycle state of the external database connector resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the `connectionStatus` of this external connector was last updated.
     * 
     */
    public Optional<String> timeConnectionStatusLastUpdated() {
        return Optional.ofNullable(this.timeConnectionStatusLastUpdated);
    }
    /**
     * @return The date and time the external connector was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalDatabaseConnectorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable List<GetExternalDatabaseConnectorConnectionCredential> connectionCredentials;
        private @Nullable String connectionStatus;
        private @Nullable List<GetExternalDatabaseConnectorConnectionString> connectionStrings;
        private @Nullable String connectorAgentId;
        private @Nullable String connectorType;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private String externalDatabaseConnectorId;
        private @Nullable String externalDatabaseId;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String state;
        private @Nullable String timeConnectionStatusLastUpdated;
        private @Nullable String timeCreated;
        public Builder() {}
        public Builder(GetExternalDatabaseConnectorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionCredentials = defaults.connectionCredentials;
    	      this.connectionStatus = defaults.connectionStatus;
    	      this.connectionStrings = defaults.connectionStrings;
    	      this.connectorAgentId = defaults.connectorAgentId;
    	      this.connectorType = defaults.connectorType;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.externalDatabaseConnectorId = defaults.externalDatabaseConnectorId;
    	      this.externalDatabaseId = defaults.externalDatabaseId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.state = defaults.state;
    	      this.timeConnectionStatusLastUpdated = defaults.timeConnectionStatusLastUpdated;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectionCredentials(@Nullable List<GetExternalDatabaseConnectorConnectionCredential> connectionCredentials) {
            this.connectionCredentials = connectionCredentials;
            return this;
        }
        public Builder connectionCredentials(GetExternalDatabaseConnectorConnectionCredential... connectionCredentials) {
            return connectionCredentials(List.of(connectionCredentials));
        }
        @CustomType.Setter
        public Builder connectionStatus(@Nullable String connectionStatus) {
            this.connectionStatus = connectionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder connectionStrings(@Nullable List<GetExternalDatabaseConnectorConnectionString> connectionStrings) {
            this.connectionStrings = connectionStrings;
            return this;
        }
        public Builder connectionStrings(GetExternalDatabaseConnectorConnectionString... connectionStrings) {
            return connectionStrings(List.of(connectionStrings));
        }
        @CustomType.Setter
        public Builder connectorAgentId(@Nullable String connectorAgentId) {
            this.connectorAgentId = connectorAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectorType(@Nullable String connectorType) {
            this.connectorType = connectorType;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalDatabaseConnectorId(String externalDatabaseConnectorId) {
            this.externalDatabaseConnectorId = Objects.requireNonNull(externalDatabaseConnectorId);
            return this;
        }
        @CustomType.Setter
        public Builder externalDatabaseId(@Nullable String externalDatabaseId) {
            this.externalDatabaseId = externalDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeConnectionStatusLastUpdated(@Nullable String timeConnectionStatusLastUpdated) {
            this.timeConnectionStatusLastUpdated = timeConnectionStatusLastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        public GetExternalDatabaseConnectorResult build() {
            final var o = new GetExternalDatabaseConnectorResult();
            o.compartmentId = compartmentId;
            o.connectionCredentials = connectionCredentials;
            o.connectionStatus = connectionStatus;
            o.connectionStrings = connectionStrings;
            o.connectorAgentId = connectorAgentId;
            o.connectorType = connectorType;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.externalDatabaseConnectorId = externalDatabaseConnectorId;
            o.externalDatabaseId = externalDatabaseId;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.state = state;
            o.timeConnectionStatusLastUpdated = timeConnectionStatusLastUpdated;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
