// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetGiVersionMinorVersionsFilter;
import com.pulumi.oci.Database.outputs.GetGiVersionMinorVersionsGiMinorVersion;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGiVersionMinorVersionsResult {
    private @Nullable String availabilityDomain;
    private @Nullable String compartmentId;
    private @Nullable List<GetGiVersionMinorVersionsFilter> filters;
    /**
     * @return The list of gi_minor_versions.
     * 
     */
    private List<GetGiVersionMinorVersionsGiMinorVersion> giMinorVersions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean isGiVersionForProvisioning;
    private @Nullable String shape;
    private @Nullable String shapeFamily;
    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    private String version;

    private GetGiVersionMinorVersionsResult() {}
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public List<GetGiVersionMinorVersionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The list of gi_minor_versions.
     * 
     */
    public List<GetGiVersionMinorVersionsGiMinorVersion> giMinorVersions() {
        return this.giMinorVersions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> isGiVersionForProvisioning() {
        return Optional.ofNullable(this.isGiVersionForProvisioning);
    }
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }
    public Optional<String> shapeFamily() {
        return Optional.ofNullable(this.shapeFamily);
    }
    /**
     * @return A valid Oracle Grid Infrastructure (GI) software version.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGiVersionMinorVersionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private @Nullable String compartmentId;
        private @Nullable List<GetGiVersionMinorVersionsFilter> filters;
        private List<GetGiVersionMinorVersionsGiMinorVersion> giMinorVersions;
        private String id;
        private @Nullable Boolean isGiVersionForProvisioning;
        private @Nullable String shape;
        private @Nullable String shapeFamily;
        private String version;
        public Builder() {}
        public Builder(GetGiVersionMinorVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.giMinorVersions = defaults.giMinorVersions;
    	      this.id = defaults.id;
    	      this.isGiVersionForProvisioning = defaults.isGiVersionForProvisioning;
    	      this.shape = defaults.shape;
    	      this.shapeFamily = defaults.shapeFamily;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {

            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetGiVersionMinorVersionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetGiVersionMinorVersionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder giMinorVersions(List<GetGiVersionMinorVersionsGiMinorVersion> giMinorVersions) {
            if (giMinorVersions == null) {
              throw new MissingRequiredPropertyException("GetGiVersionMinorVersionsResult", "giMinorVersions");
            }
            this.giMinorVersions = giMinorVersions;
            return this;
        }
        public Builder giMinorVersions(GetGiVersionMinorVersionsGiMinorVersion... giMinorVersions) {
            return giMinorVersions(List.of(giMinorVersions));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGiVersionMinorVersionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isGiVersionForProvisioning(@Nullable Boolean isGiVersionForProvisioning) {

            this.isGiVersionForProvisioning = isGiVersionForProvisioning;
            return this;
        }
        @CustomType.Setter
        public Builder shape(@Nullable String shape) {

            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder shapeFamily(@Nullable String shapeFamily) {

            this.shapeFamily = shapeFamily;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetGiVersionMinorVersionsResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetGiVersionMinorVersionsResult build() {
            final var _resultValue = new GetGiVersionMinorVersionsResult();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.giMinorVersions = giMinorVersions;
            _resultValue.id = id;
            _resultValue.isGiVersionForProvisioning = isGiVersionForProvisioning;
            _resultValue.shape = shape;
            _resultValue.shapeFamily = shapeFamily;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
