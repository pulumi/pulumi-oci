// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetGiVersionsFilter;
import com.pulumi.oci.Database.outputs.GetGiVersionsGiVersion;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGiVersionsResult {
    private @Nullable String availabilityDomain;
    private String compartmentId;
    private @Nullable List<GetGiVersionsFilter> filters;
    /**
     * @return The list of gi_versions.
     * 
     */
    private List<GetGiVersionsGiVersion> giVersions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String resourceId;
    private @Nullable String shape;
    private @Nullable String shapeAttribute;

    private GetGiVersionsResult() {}
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetGiVersionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The list of gi_versions.
     * 
     */
    public List<GetGiVersionsGiVersion> giVersions() {
        return this.giVersions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }
    public Optional<String> shapeAttribute() {
        return Optional.ofNullable(this.shapeAttribute);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGiVersionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private String compartmentId;
        private @Nullable List<GetGiVersionsFilter> filters;
        private List<GetGiVersionsGiVersion> giVersions;
        private String id;
        private @Nullable String resourceId;
        private @Nullable String shape;
        private @Nullable String shapeAttribute;
        public Builder() {}
        public Builder(GetGiVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.giVersions = defaults.giVersions;
    	      this.id = defaults.id;
    	      this.resourceId = defaults.resourceId;
    	      this.shape = defaults.shape;
    	      this.shapeAttribute = defaults.shapeAttribute;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {

            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetGiVersionsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetGiVersionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetGiVersionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder giVersions(List<GetGiVersionsGiVersion> giVersions) {
            if (giVersions == null) {
              throw new MissingRequiredPropertyException("GetGiVersionsResult", "giVersions");
            }
            this.giVersions = giVersions;
            return this;
        }
        public Builder giVersions(GetGiVersionsGiVersion... giVersions) {
            return giVersions(List.of(giVersions));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGiVersionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {

            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder shape(@Nullable String shape) {

            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder shapeAttribute(@Nullable String shapeAttribute) {

            this.shapeAttribute = shapeAttribute;
            return this;
        }
        public GetGiVersionsResult build() {
            final var _resultValue = new GetGiVersionsResult();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.giVersions = giVersions;
            _resultValue.id = id;
            _resultValue.resourceId = resourceId;
            _resultValue.shape = shape;
            _resultValue.shapeAttribute = shapeAttribute;
            return _resultValue;
        }
    }
}
