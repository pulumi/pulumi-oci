// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInfrastructureTargetVersionResult {
    private String compartmentId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The history entry of the target system software version for the database server patching operation.
     * 
     */
    private @Nullable List<String> targetDbVersionHistoryEntries;
    /**
     * @return The OCID of the target Exadata Infrastructure resource that will receive the maintenance update.
     * 
     */
    private @Nullable String targetResourceId;
    /**
     * @return The resource type of the target Exadata infrastructure resource that will receive the system software update.
     * 
     */
    private @Nullable String targetResourceType;
    /**
     * @return The history entry of the target storage cell system software version for the storage cell patching operation.
     * 
     */
    private @Nullable List<String> targetStorageVersionHistoryEntries;

    private GetInfrastructureTargetVersionResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The history entry of the target system software version for the database server patching operation.
     * 
     */
    public List<String> targetDbVersionHistoryEntries() {
        return this.targetDbVersionHistoryEntries == null ? List.of() : this.targetDbVersionHistoryEntries;
    }
    /**
     * @return The OCID of the target Exadata Infrastructure resource that will receive the maintenance update.
     * 
     */
    public Optional<String> targetResourceId() {
        return Optional.ofNullable(this.targetResourceId);
    }
    /**
     * @return The resource type of the target Exadata infrastructure resource that will receive the system software update.
     * 
     */
    public Optional<String> targetResourceType() {
        return Optional.ofNullable(this.targetResourceType);
    }
    /**
     * @return The history entry of the target storage cell system software version for the storage cell patching operation.
     * 
     */
    public List<String> targetStorageVersionHistoryEntries() {
        return this.targetStorageVersionHistoryEntries == null ? List.of() : this.targetStorageVersionHistoryEntries;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInfrastructureTargetVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String id;
        private @Nullable List<String> targetDbVersionHistoryEntries;
        private @Nullable String targetResourceId;
        private @Nullable String targetResourceType;
        private @Nullable List<String> targetStorageVersionHistoryEntries;
        public Builder() {}
        public Builder(GetInfrastructureTargetVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.id = defaults.id;
    	      this.targetDbVersionHistoryEntries = defaults.targetDbVersionHistoryEntries;
    	      this.targetResourceId = defaults.targetResourceId;
    	      this.targetResourceType = defaults.targetResourceType;
    	      this.targetStorageVersionHistoryEntries = defaults.targetStorageVersionHistoryEntries;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder targetDbVersionHistoryEntries(@Nullable List<String> targetDbVersionHistoryEntries) {
            this.targetDbVersionHistoryEntries = targetDbVersionHistoryEntries;
            return this;
        }
        public Builder targetDbVersionHistoryEntries(String... targetDbVersionHistoryEntries) {
            return targetDbVersionHistoryEntries(List.of(targetDbVersionHistoryEntries));
        }
        @CustomType.Setter
        public Builder targetResourceId(@Nullable String targetResourceId) {
            this.targetResourceId = targetResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder targetResourceType(@Nullable String targetResourceType) {
            this.targetResourceType = targetResourceType;
            return this;
        }
        @CustomType.Setter
        public Builder targetStorageVersionHistoryEntries(@Nullable List<String> targetStorageVersionHistoryEntries) {
            this.targetStorageVersionHistoryEntries = targetStorageVersionHistoryEntries;
            return this;
        }
        public Builder targetStorageVersionHistoryEntries(String... targetStorageVersionHistoryEntries) {
            return targetStorageVersionHistoryEntries(List.of(targetStorageVersionHistoryEntries));
        }
        public GetInfrastructureTargetVersionResult build() {
            final var o = new GetInfrastructureTargetVersionResult();
            o.compartmentId = compartmentId;
            o.id = id;
            o.targetDbVersionHistoryEntries = targetDbVersionHistoryEntries;
            o.targetResourceId = targetResourceId;
            o.targetResourceType = targetResourceType;
            o.targetStorageVersionHistoryEntries = targetStorageVersionHistoryEntries;
            return o;
        }
    }
}
