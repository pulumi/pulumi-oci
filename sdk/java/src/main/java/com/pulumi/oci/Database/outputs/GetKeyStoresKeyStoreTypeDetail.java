// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKeyStoresKeyStoreTypeDetail {
    /**
     * @return The administrator username to connect to Oracle Key Vault
     * 
     */
    private @Nullable String adminUsername;
    /**
     * @return The list of Oracle Key Vault connection IP addresses.
     * 
     */
    private @Nullable List<String> connectionIps;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    private @Nullable String secretId;
    /**
     * @return The type of key store.
     * 
     */
    private @Nullable String type;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    private @Nullable String vaultId;

    private GetKeyStoresKeyStoreTypeDetail() {}
    /**
     * @return The administrator username to connect to Oracle Key Vault
     * 
     */
    public Optional<String> adminUsername() {
        return Optional.ofNullable(this.adminUsername);
    }
    /**
     * @return The list of Oracle Key Vault connection IP addresses.
     * 
     */
    public List<String> connectionIps() {
        return this.connectionIps == null ? List.of() : this.connectionIps;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [secret](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public Optional<String> secretId() {
        return Optional.ofNullable(this.secretId);
    }
    /**
     * @return The type of key store.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public Optional<String> vaultId() {
        return Optional.ofNullable(this.vaultId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeyStoresKeyStoreTypeDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String adminUsername;
        private @Nullable List<String> connectionIps;
        private @Nullable String secretId;
        private @Nullable String type;
        private @Nullable String vaultId;
        public Builder() {}
        public Builder(GetKeyStoresKeyStoreTypeDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminUsername = defaults.adminUsername;
    	      this.connectionIps = defaults.connectionIps;
    	      this.secretId = defaults.secretId;
    	      this.type = defaults.type;
    	      this.vaultId = defaults.vaultId;
        }

        @CustomType.Setter
        public Builder adminUsername(@Nullable String adminUsername) {
            this.adminUsername = adminUsername;
            return this;
        }
        @CustomType.Setter
        public Builder connectionIps(@Nullable List<String> connectionIps) {
            this.connectionIps = connectionIps;
            return this;
        }
        public Builder connectionIps(String... connectionIps) {
            return connectionIps(List.of(connectionIps));
        }
        @CustomType.Setter
        public Builder secretId(@Nullable String secretId) {
            this.secretId = secretId;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(@Nullable String vaultId) {
            this.vaultId = vaultId;
            return this;
        }
        public GetKeyStoresKeyStoreTypeDetail build() {
            final var o = new GetKeyStoresKeyStoreTypeDetail();
            o.adminUsername = adminUsername;
            o.connectionIps = connectionIps;
            o.secretId = secretId;
            o.type = type;
            o.vaultId = vaultId;
            return o;
        }
    }
}
