// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetOneoffPatchesOneoffPatch {
    /**
     * @return (Updatable) The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     * 
     */
    private String dbVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private String displayName;
    private Integer downloadOneoffPatchTrigger;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the one-off patch.
     * 
     */
    private String id;
    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    private List<String> oneOffPatches;
    /**
     * @return The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     * 
     */
    private String releaseUpdate;
    /**
     * @return SHA-256 checksum of the one-off patch.
     * 
     */
    private String sha256sum;
    /**
     * @return The size of one-off patch in kilobytes.
     * 
     */
    private Double sizeInKbs;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time one-off patch was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time until which the one-off patch will be available for download.
     * 
     */
    private String timeOfExpiration;
    /**
     * @return The date and time one-off patch was updated.
     * 
     */
    private String timeUpdated;

    private GetOneoffPatchesOneoffPatch() {}
    /**
     * @return (Updatable) The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A valid Oracle Database version. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public Integer downloadOneoffPatchTrigger() {
        return this.downloadOneoffPatchTrigger;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the one-off patch.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    public List<String> oneOffPatches() {
        return this.oneOffPatches;
    }
    /**
     * @return The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     * 
     */
    public String releaseUpdate() {
        return this.releaseUpdate;
    }
    /**
     * @return SHA-256 checksum of the one-off patch.
     * 
     */
    public String sha256sum() {
        return this.sha256sum;
    }
    /**
     * @return The size of one-off patch in kilobytes.
     * 
     */
    public Double sizeInKbs() {
        return this.sizeInKbs;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time one-off patch was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time until which the one-off patch will be available for download.
     * 
     */
    public String timeOfExpiration() {
        return this.timeOfExpiration;
    }
    /**
     * @return The date and time one-off patch was updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOneoffPatchesOneoffPatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String dbVersion;
        private Map<String,String> definedTags;
        private String displayName;
        private Integer downloadOneoffPatchTrigger;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private List<String> oneOffPatches;
        private String releaseUpdate;
        private String sha256sum;
        private Double sizeInKbs;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeOfExpiration;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetOneoffPatchesOneoffPatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbVersion = defaults.dbVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.downloadOneoffPatchTrigger = defaults.downloadOneoffPatchTrigger;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.oneOffPatches = defaults.oneOffPatches;
    	      this.releaseUpdate = defaults.releaseUpdate;
    	      this.sha256sum = defaults.sha256sum;
    	      this.sizeInKbs = defaults.sizeInKbs;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfExpiration = defaults.timeOfExpiration;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            if (dbVersion == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "dbVersion");
            }
            this.dbVersion = dbVersion;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder downloadOneoffPatchTrigger(Integer downloadOneoffPatchTrigger) {
            if (downloadOneoffPatchTrigger == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "downloadOneoffPatchTrigger");
            }
            this.downloadOneoffPatchTrigger = downloadOneoffPatchTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder oneOffPatches(List<String> oneOffPatches) {
            if (oneOffPatches == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "oneOffPatches");
            }
            this.oneOffPatches = oneOffPatches;
            return this;
        }
        public Builder oneOffPatches(String... oneOffPatches) {
            return oneOffPatches(List.of(oneOffPatches));
        }
        @CustomType.Setter
        public Builder releaseUpdate(String releaseUpdate) {
            if (releaseUpdate == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "releaseUpdate");
            }
            this.releaseUpdate = releaseUpdate;
            return this;
        }
        @CustomType.Setter
        public Builder sha256sum(String sha256sum) {
            if (sha256sum == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "sha256sum");
            }
            this.sha256sum = sha256sum;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInKbs(Double sizeInKbs) {
            if (sizeInKbs == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "sizeInKbs");
            }
            this.sizeInKbs = sizeInKbs;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfExpiration(String timeOfExpiration) {
            if (timeOfExpiration == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "timeOfExpiration");
            }
            this.timeOfExpiration = timeOfExpiration;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetOneoffPatchesOneoffPatch", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetOneoffPatchesOneoffPatch build() {
            final var _resultValue = new GetOneoffPatchesOneoffPatch();
            _resultValue.compartmentId = compartmentId;
            _resultValue.dbVersion = dbVersion;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.downloadOneoffPatchTrigger = downloadOneoffPatchTrigger;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.oneOffPatches = oneOffPatches;
            _resultValue.releaseUpdate = releaseUpdate;
            _resultValue.sha256sum = sha256sum;
            _resultValue.sizeInKbs = sizeInKbs;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeOfExpiration = timeOfExpiration;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
