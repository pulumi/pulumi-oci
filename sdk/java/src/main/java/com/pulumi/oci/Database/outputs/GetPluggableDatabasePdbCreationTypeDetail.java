// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetPluggableDatabasePdbCreationTypeDetailRefreshableCloneDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPluggableDatabasePdbCreationTypeDetail {
    private String creationType;
    private String dblinkUserPassword;
    private String dblinkUsername;
    private List<GetPluggableDatabasePdbCreationTypeDetailRefreshableCloneDetail> refreshableCloneDetails;
    private String sourceContainerDatabaseAdminPassword;
    private String sourcePluggableDatabaseId;

    private GetPluggableDatabasePdbCreationTypeDetail() {}
    public String creationType() {
        return this.creationType;
    }
    public String dblinkUserPassword() {
        return this.dblinkUserPassword;
    }
    public String dblinkUsername() {
        return this.dblinkUsername;
    }
    public List<GetPluggableDatabasePdbCreationTypeDetailRefreshableCloneDetail> refreshableCloneDetails() {
        return this.refreshableCloneDetails;
    }
    public String sourceContainerDatabaseAdminPassword() {
        return this.sourceContainerDatabaseAdminPassword;
    }
    public String sourcePluggableDatabaseId() {
        return this.sourcePluggableDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPluggableDatabasePdbCreationTypeDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationType;
        private String dblinkUserPassword;
        private String dblinkUsername;
        private List<GetPluggableDatabasePdbCreationTypeDetailRefreshableCloneDetail> refreshableCloneDetails;
        private String sourceContainerDatabaseAdminPassword;
        private String sourcePluggableDatabaseId;
        public Builder() {}
        public Builder(GetPluggableDatabasePdbCreationTypeDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationType = defaults.creationType;
    	      this.dblinkUserPassword = defaults.dblinkUserPassword;
    	      this.dblinkUsername = defaults.dblinkUsername;
    	      this.refreshableCloneDetails = defaults.refreshableCloneDetails;
    	      this.sourceContainerDatabaseAdminPassword = defaults.sourceContainerDatabaseAdminPassword;
    	      this.sourcePluggableDatabaseId = defaults.sourcePluggableDatabaseId;
        }

        @CustomType.Setter
        public Builder creationType(String creationType) {
            this.creationType = Objects.requireNonNull(creationType);
            return this;
        }
        @CustomType.Setter
        public Builder dblinkUserPassword(String dblinkUserPassword) {
            this.dblinkUserPassword = Objects.requireNonNull(dblinkUserPassword);
            return this;
        }
        @CustomType.Setter
        public Builder dblinkUsername(String dblinkUsername) {
            this.dblinkUsername = Objects.requireNonNull(dblinkUsername);
            return this;
        }
        @CustomType.Setter
        public Builder refreshableCloneDetails(List<GetPluggableDatabasePdbCreationTypeDetailRefreshableCloneDetail> refreshableCloneDetails) {
            this.refreshableCloneDetails = Objects.requireNonNull(refreshableCloneDetails);
            return this;
        }
        public Builder refreshableCloneDetails(GetPluggableDatabasePdbCreationTypeDetailRefreshableCloneDetail... refreshableCloneDetails) {
            return refreshableCloneDetails(List.of(refreshableCloneDetails));
        }
        @CustomType.Setter
        public Builder sourceContainerDatabaseAdminPassword(String sourceContainerDatabaseAdminPassword) {
            this.sourceContainerDatabaseAdminPassword = Objects.requireNonNull(sourceContainerDatabaseAdminPassword);
            return this;
        }
        @CustomType.Setter
        public Builder sourcePluggableDatabaseId(String sourcePluggableDatabaseId) {
            this.sourcePluggableDatabaseId = Objects.requireNonNull(sourcePluggableDatabaseId);
            return this;
        }
        public GetPluggableDatabasePdbCreationTypeDetail build() {
            final var o = new GetPluggableDatabasePdbCreationTypeDetail();
            o.creationType = creationType;
            o.dblinkUserPassword = dblinkUserPassword;
            o.dblinkUsername = dblinkUsername;
            o.refreshableCloneDetails = refreshableCloneDetails;
            o.sourceContainerDatabaseAdminPassword = sourceContainerDatabaseAdminPassword;
            o.sourcePluggableDatabaseId = sourcePluggableDatabaseId;
            return o;
        }
    }
}
