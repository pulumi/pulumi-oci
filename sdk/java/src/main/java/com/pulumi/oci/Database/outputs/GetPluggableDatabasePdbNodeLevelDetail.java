// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPluggableDatabasePdbNodeLevelDetail {
    /**
     * @return The Node name of the Database Instance.
     * 
     */
    private String nodeName;
    /**
     * @return The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
     * 
     */
    private String openMode;

    private GetPluggableDatabasePdbNodeLevelDetail() {}
    /**
     * @return The Node name of the Database Instance.
     * 
     */
    public String nodeName() {
        return this.nodeName;
    }
    /**
     * @return The mode that pluggable database is in. Open mode can only be changed to READ_ONLY or MIGRATE directly from the backend (within the Oracle Database software).
     * 
     */
    public String openMode() {
        return this.openMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPluggableDatabasePdbNodeLevelDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String nodeName;
        private String openMode;
        public Builder() {}
        public Builder(GetPluggableDatabasePdbNodeLevelDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nodeName = defaults.nodeName;
    	      this.openMode = defaults.openMode;
        }

        @CustomType.Setter
        public Builder nodeName(String nodeName) {
            this.nodeName = Objects.requireNonNull(nodeName);
            return this;
        }
        @CustomType.Setter
        public Builder openMode(String openMode) {
            this.openMode = Objects.requireNonNull(openMode);
            return this;
        }
        public GetPluggableDatabasePdbNodeLevelDetail build() {
            final var _resultValue = new GetPluggableDatabasePdbNodeLevelDetail();
            _resultValue.nodeName = nodeName;
            _resultValue.openMode = openMode;
            return _resultValue;
        }
    }
}
