// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPluggableDatabasesPluggableDatabaseConnectionString {
    /**
     * @return All connection strings to use to connect to the pluggable database.
     * 
     */
    private Map<String,Object> allConnectionStrings;
    /**
     * @return A host name-based PDB connection string.
     * 
     */
    private String pdbDefault;
    /**
     * @return An IP-based PDB connection string.
     * 
     */
    private String pdbIpDefault;

    private GetPluggableDatabasesPluggableDatabaseConnectionString() {}
    /**
     * @return All connection strings to use to connect to the pluggable database.
     * 
     */
    public Map<String,Object> allConnectionStrings() {
        return this.allConnectionStrings;
    }
    /**
     * @return A host name-based PDB connection string.
     * 
     */
    public String pdbDefault() {
        return this.pdbDefault;
    }
    /**
     * @return An IP-based PDB connection string.
     * 
     */
    public String pdbIpDefault() {
        return this.pdbIpDefault;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPluggableDatabasesPluggableDatabaseConnectionString defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> allConnectionStrings;
        private String pdbDefault;
        private String pdbIpDefault;
        public Builder() {}
        public Builder(GetPluggableDatabasesPluggableDatabaseConnectionString defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allConnectionStrings = defaults.allConnectionStrings;
    	      this.pdbDefault = defaults.pdbDefault;
    	      this.pdbIpDefault = defaults.pdbIpDefault;
        }

        @CustomType.Setter
        public Builder allConnectionStrings(Map<String,Object> allConnectionStrings) {
            this.allConnectionStrings = Objects.requireNonNull(allConnectionStrings);
            return this;
        }
        @CustomType.Setter
        public Builder pdbDefault(String pdbDefault) {
            this.pdbDefault = Objects.requireNonNull(pdbDefault);
            return this;
        }
        @CustomType.Setter
        public Builder pdbIpDefault(String pdbIpDefault) {
            this.pdbIpDefault = Objects.requireNonNull(pdbIpDefault);
            return this;
        }
        public GetPluggableDatabasesPluggableDatabaseConnectionString build() {
            final var o = new GetPluggableDatabasesPluggableDatabaseConnectionString();
            o.allConnectionStrings = allConnectionStrings;
            o.pdbDefault = pdbDefault;
            o.pdbIpDefault = pdbIpDefault;
            return o;
        }
    }
}
