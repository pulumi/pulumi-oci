// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetScheduledActionActionMember;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetScheduledActionResult {
    /**
     * @return The list of action members in a scheduled action.
     * 
     */
    private List<GetScheduledActionActionMember> actionMembers;
    /**
     * @return The order of the scheduled action.
     * 
     */
    private Integer actionOrder;
    /**
     * @return Map&lt;ParamName, ParamValue&gt; where a key value pair describes the specific action parameter. Example: `{&#34;count&#34;: &#34;3&#34;}`
     * 
     */
    private Map<String,String> actionParams;
    /**
     * @return The type of the scheduled action being performed
     * 
     */
    private String actionType;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The display name of the Scheduled Action.
     * 
     */
    private String displayName;
    /**
     * @return The estimated patching time for the scheduled action.
     * 
     */
    private Integer estimatedTimeInMins;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduled Action.
     * 
     */
    private String id;
    private String scheduledActionId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Plan.
     * 
     */
    private String schedulingPlanId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Window.
     * 
     */
    private String schedulingWindowId;
    /**
     * @return The current state of the Scheduled Action. Valid states are CREATING, NEEDS_ATTENTION, AVAILABLE, UPDATING, FAILED, DELETING and DELETED.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the Scheduled Action Resource was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the Scheduled Action Resource was updated.
     * 
     */
    private String timeUpdated;

    private GetScheduledActionResult() {}
    /**
     * @return The list of action members in a scheduled action.
     * 
     */
    public List<GetScheduledActionActionMember> actionMembers() {
        return this.actionMembers;
    }
    /**
     * @return The order of the scheduled action.
     * 
     */
    public Integer actionOrder() {
        return this.actionOrder;
    }
    /**
     * @return Map&lt;ParamName, ParamValue&gt; where a key value pair describes the specific action parameter. Example: `{&#34;count&#34;: &#34;3&#34;}`
     * 
     */
    public Map<String,String> actionParams() {
        return this.actionParams;
    }
    /**
     * @return The type of the scheduled action being performed
     * 
     */
    public String actionType() {
        return this.actionType;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The display name of the Scheduled Action.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The estimated patching time for the scheduled action.
     * 
     */
    public Integer estimatedTimeInMins() {
        return this.estimatedTimeInMins;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduled Action.
     * 
     */
    public String id() {
        return this.id;
    }
    public String scheduledActionId() {
        return this.scheduledActionId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Plan.
     * 
     */
    public String schedulingPlanId() {
        return this.schedulingPlanId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Window.
     * 
     */
    public String schedulingWindowId() {
        return this.schedulingWindowId;
    }
    /**
     * @return The current state of the Scheduled Action. Valid states are CREATING, NEEDS_ATTENTION, AVAILABLE, UPDATING, FAILED, DELETING and DELETED.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the Scheduled Action Resource was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the Scheduled Action Resource was updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduledActionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetScheduledActionActionMember> actionMembers;
        private Integer actionOrder;
        private Map<String,String> actionParams;
        private String actionType;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private Integer estimatedTimeInMins;
        private Map<String,String> freeformTags;
        private String id;
        private String scheduledActionId;
        private String schedulingPlanId;
        private String schedulingWindowId;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetScheduledActionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionMembers = defaults.actionMembers;
    	      this.actionOrder = defaults.actionOrder;
    	      this.actionParams = defaults.actionParams;
    	      this.actionType = defaults.actionType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.estimatedTimeInMins = defaults.estimatedTimeInMins;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.scheduledActionId = defaults.scheduledActionId;
    	      this.schedulingPlanId = defaults.schedulingPlanId;
    	      this.schedulingWindowId = defaults.schedulingWindowId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder actionMembers(List<GetScheduledActionActionMember> actionMembers) {
            if (actionMembers == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "actionMembers");
            }
            this.actionMembers = actionMembers;
            return this;
        }
        public Builder actionMembers(GetScheduledActionActionMember... actionMembers) {
            return actionMembers(List.of(actionMembers));
        }
        @CustomType.Setter
        public Builder actionOrder(Integer actionOrder) {
            if (actionOrder == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "actionOrder");
            }
            this.actionOrder = actionOrder;
            return this;
        }
        @CustomType.Setter
        public Builder actionParams(Map<String,String> actionParams) {
            if (actionParams == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "actionParams");
            }
            this.actionParams = actionParams;
            return this;
        }
        @CustomType.Setter
        public Builder actionType(String actionType) {
            if (actionType == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "actionType");
            }
            this.actionType = actionType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder estimatedTimeInMins(Integer estimatedTimeInMins) {
            if (estimatedTimeInMins == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "estimatedTimeInMins");
            }
            this.estimatedTimeInMins = estimatedTimeInMins;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledActionId(String scheduledActionId) {
            if (scheduledActionId == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "scheduledActionId");
            }
            this.scheduledActionId = scheduledActionId;
            return this;
        }
        @CustomType.Setter
        public Builder schedulingPlanId(String schedulingPlanId) {
            if (schedulingPlanId == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "schedulingPlanId");
            }
            this.schedulingPlanId = schedulingPlanId;
            return this;
        }
        @CustomType.Setter
        public Builder schedulingWindowId(String schedulingWindowId) {
            if (schedulingWindowId == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "schedulingWindowId");
            }
            this.schedulingWindowId = schedulingWindowId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetScheduledActionResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetScheduledActionResult build() {
            final var _resultValue = new GetScheduledActionResult();
            _resultValue.actionMembers = actionMembers;
            _resultValue.actionOrder = actionOrder;
            _resultValue.actionParams = actionParams;
            _resultValue.actionType = actionType;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.estimatedTimeInMins = estimatedTimeInMins;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.scheduledActionId = scheduledActionId;
            _resultValue.schedulingPlanId = schedulingPlanId;
            _resultValue.schedulingWindowId = schedulingWindowId;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
