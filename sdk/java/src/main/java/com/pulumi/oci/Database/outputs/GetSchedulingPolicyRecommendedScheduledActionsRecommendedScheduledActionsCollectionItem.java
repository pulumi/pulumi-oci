// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItemActionMember;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem {
    /**
     * @return The list of action members in a scheduled action.
     * 
     */
    private List<GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItemActionMember> actionMembers;
    /**
     * @return The order of the scheduled action.
     * 
     */
    private Integer actionOrder;
    /**
     * @return Map&lt;ParamName, ParamValue&gt; where a key value pair describes the specific action parameter. Example: `{&#34;count&#34;: &#34;3&#34;}`
     * 
     */
    private Map<String,String> actionParams;
    /**
     * @return The type of the scheduled action being performed
     * 
     */
    private String actionType;
    /**
     * @return Description of the scheduled action being performed, i.e. apply full update to DB Servers 1,2,3,4.
     * 
     */
    private String displayName;
    /**
     * @return The estimated patching time in minutes for the entire scheduled action.
     * 
     */
    private Integer estimatedTimeInMins;
    /**
     * @return The id of the scheduling window this scheduled action belongs to.
     * 
     */
    private String schedulingWindowId;

    private GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem() {}
    /**
     * @return The list of action members in a scheduled action.
     * 
     */
    public List<GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItemActionMember> actionMembers() {
        return this.actionMembers;
    }
    /**
     * @return The order of the scheduled action.
     * 
     */
    public Integer actionOrder() {
        return this.actionOrder;
    }
    /**
     * @return Map&lt;ParamName, ParamValue&gt; where a key value pair describes the specific action parameter. Example: `{&#34;count&#34;: &#34;3&#34;}`
     * 
     */
    public Map<String,String> actionParams() {
        return this.actionParams;
    }
    /**
     * @return The type of the scheduled action being performed
     * 
     */
    public String actionType() {
        return this.actionType;
    }
    /**
     * @return Description of the scheduled action being performed, i.e. apply full update to DB Servers 1,2,3,4.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The estimated patching time in minutes for the entire scheduled action.
     * 
     */
    public Integer estimatedTimeInMins() {
        return this.estimatedTimeInMins;
    }
    /**
     * @return The id of the scheduling window this scheduled action belongs to.
     * 
     */
    public String schedulingWindowId() {
        return this.schedulingWindowId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItemActionMember> actionMembers;
        private Integer actionOrder;
        private Map<String,String> actionParams;
        private String actionType;
        private String displayName;
        private Integer estimatedTimeInMins;
        private String schedulingWindowId;
        public Builder() {}
        public Builder(GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionMembers = defaults.actionMembers;
    	      this.actionOrder = defaults.actionOrder;
    	      this.actionParams = defaults.actionParams;
    	      this.actionType = defaults.actionType;
    	      this.displayName = defaults.displayName;
    	      this.estimatedTimeInMins = defaults.estimatedTimeInMins;
    	      this.schedulingWindowId = defaults.schedulingWindowId;
        }

        @CustomType.Setter
        public Builder actionMembers(List<GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItemActionMember> actionMembers) {
            if (actionMembers == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem", "actionMembers");
            }
            this.actionMembers = actionMembers;
            return this;
        }
        public Builder actionMembers(GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItemActionMember... actionMembers) {
            return actionMembers(List.of(actionMembers));
        }
        @CustomType.Setter
        public Builder actionOrder(Integer actionOrder) {
            if (actionOrder == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem", "actionOrder");
            }
            this.actionOrder = actionOrder;
            return this;
        }
        @CustomType.Setter
        public Builder actionParams(Map<String,String> actionParams) {
            if (actionParams == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem", "actionParams");
            }
            this.actionParams = actionParams;
            return this;
        }
        @CustomType.Setter
        public Builder actionType(String actionType) {
            if (actionType == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem", "actionType");
            }
            this.actionType = actionType;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder estimatedTimeInMins(Integer estimatedTimeInMins) {
            if (estimatedTimeInMins == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem", "estimatedTimeInMins");
            }
            this.estimatedTimeInMins = estimatedTimeInMins;
            return this;
        }
        @CustomType.Setter
        public Builder schedulingWindowId(String schedulingWindowId) {
            if (schedulingWindowId == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem", "schedulingWindowId");
            }
            this.schedulingWindowId = schedulingWindowId;
            return this;
        }
        public GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem build() {
            final var _resultValue = new GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollectionItem();
            _resultValue.actionMembers = actionMembers;
            _resultValue.actionOrder = actionOrder;
            _resultValue.actionParams = actionParams;
            _resultValue.actionType = actionType;
            _resultValue.displayName = displayName;
            _resultValue.estimatedTimeInMins = estimatedTimeInMins;
            _resultValue.schedulingWindowId = schedulingWindowId;
            return _resultValue;
        }
    }
}
