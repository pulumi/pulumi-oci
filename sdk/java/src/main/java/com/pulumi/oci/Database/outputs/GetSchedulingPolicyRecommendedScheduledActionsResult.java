// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetSchedulingPolicyRecommendedScheduledActionsFilter;
import com.pulumi.oci.Database.outputs.GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSchedulingPolicyRecommendedScheduledActionsResult {
    private @Nullable List<GetSchedulingPolicyRecommendedScheduledActionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String planIntent;
    /**
     * @return The list of recommended_scheduled_actions_collection.
     * 
     */
    private List<GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollection> recommendedScheduledActionsCollections;
    private String schedulingPolicyId;
    private String schedulingPolicyTargetResourceId;

    private GetSchedulingPolicyRecommendedScheduledActionsResult() {}
    public List<GetSchedulingPolicyRecommendedScheduledActionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String planIntent() {
        return this.planIntent;
    }
    /**
     * @return The list of recommended_scheduled_actions_collection.
     * 
     */
    public List<GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollection> recommendedScheduledActionsCollections() {
        return this.recommendedScheduledActionsCollections;
    }
    public String schedulingPolicyId() {
        return this.schedulingPolicyId;
    }
    public String schedulingPolicyTargetResourceId() {
        return this.schedulingPolicyTargetResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulingPolicyRecommendedScheduledActionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetSchedulingPolicyRecommendedScheduledActionsFilter> filters;
        private String id;
        private String planIntent;
        private List<GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollection> recommendedScheduledActionsCollections;
        private String schedulingPolicyId;
        private String schedulingPolicyTargetResourceId;
        public Builder() {}
        public Builder(GetSchedulingPolicyRecommendedScheduledActionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.planIntent = defaults.planIntent;
    	      this.recommendedScheduledActionsCollections = defaults.recommendedScheduledActionsCollections;
    	      this.schedulingPolicyId = defaults.schedulingPolicyId;
    	      this.schedulingPolicyTargetResourceId = defaults.schedulingPolicyTargetResourceId;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetSchedulingPolicyRecommendedScheduledActionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSchedulingPolicyRecommendedScheduledActionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder planIntent(String planIntent) {
            if (planIntent == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsResult", "planIntent");
            }
            this.planIntent = planIntent;
            return this;
        }
        @CustomType.Setter
        public Builder recommendedScheduledActionsCollections(List<GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollection> recommendedScheduledActionsCollections) {
            if (recommendedScheduledActionsCollections == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsResult", "recommendedScheduledActionsCollections");
            }
            this.recommendedScheduledActionsCollections = recommendedScheduledActionsCollections;
            return this;
        }
        public Builder recommendedScheduledActionsCollections(GetSchedulingPolicyRecommendedScheduledActionsRecommendedScheduledActionsCollection... recommendedScheduledActionsCollections) {
            return recommendedScheduledActionsCollections(List.of(recommendedScheduledActionsCollections));
        }
        @CustomType.Setter
        public Builder schedulingPolicyId(String schedulingPolicyId) {
            if (schedulingPolicyId == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsResult", "schedulingPolicyId");
            }
            this.schedulingPolicyId = schedulingPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder schedulingPolicyTargetResourceId(String schedulingPolicyTargetResourceId) {
            if (schedulingPolicyTargetResourceId == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyRecommendedScheduledActionsResult", "schedulingPolicyTargetResourceId");
            }
            this.schedulingPolicyTargetResourceId = schedulingPolicyTargetResourceId;
            return this;
        }
        public GetSchedulingPolicyRecommendedScheduledActionsResult build() {
            final var _resultValue = new GetSchedulingPolicyRecommendedScheduledActionsResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.planIntent = planIntent;
            _resultValue.recommendedScheduledActionsCollections = recommendedScheduledActionsCollections;
            _resultValue.schedulingPolicyId = schedulingPolicyId;
            _resultValue.schedulingPolicyTargetResourceId = schedulingPolicyTargetResourceId;
            return _resultValue;
        }
    }
}
