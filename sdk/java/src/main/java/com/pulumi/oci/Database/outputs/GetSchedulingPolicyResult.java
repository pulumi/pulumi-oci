// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetSchedulingPolicyCadenceStartMonth;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSchedulingPolicyResult {
    /**
     * @return The cadence period.
     * 
     */
    private String cadence;
    /**
     * @return Start of the month to be followed during the cadence period.
     * 
     */
    private List<GetSchedulingPolicyCadenceStartMonth> cadenceStartMonths;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The user-friendly name for the Scheduling Policy. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
     * 
     */
    private String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    private String schedulingPolicyId;
    /**
     * @return The current state of the Scheduling Policy. Valid states are CREATING, NEEDS_ATTENTION, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
     * 
     */
    private String state;
    /**
     * @return The date and time the Scheduling Policy was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time of the next scheduling window associated with the schedulingPolicy is planned to start.
     * 
     */
    private String timeNextWindowStarts;
    /**
     * @return The last date and time that the Scheduling Policy was updated.
     * 
     */
    private String timeUpdated;

    private GetSchedulingPolicyResult() {}
    /**
     * @return The cadence period.
     * 
     */
    public String cadence() {
        return this.cadence;
    }
    /**
     * @return Start of the month to be followed during the cadence period.
     * 
     */
    public List<GetSchedulingPolicyCadenceStartMonth> cadenceStartMonths() {
        return this.cadenceStartMonths;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name for the Scheduling Policy. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public String schedulingPolicyId() {
        return this.schedulingPolicyId;
    }
    /**
     * @return The current state of the Scheduling Policy. Valid states are CREATING, NEEDS_ATTENTION, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the Scheduling Policy was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time of the next scheduling window associated with the schedulingPolicy is planned to start.
     * 
     */
    public String timeNextWindowStarts() {
        return this.timeNextWindowStarts;
    }
    /**
     * @return The last date and time that the Scheduling Policy was updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulingPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cadence;
        private List<GetSchedulingPolicyCadenceStartMonth> cadenceStartMonths;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String schedulingPolicyId;
        private String state;
        private String timeCreated;
        private String timeNextWindowStarts;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetSchedulingPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cadence = defaults.cadence;
    	      this.cadenceStartMonths = defaults.cadenceStartMonths;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.schedulingPolicyId = defaults.schedulingPolicyId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeNextWindowStarts = defaults.timeNextWindowStarts;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder cadence(String cadence) {
            if (cadence == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "cadence");
            }
            this.cadence = cadence;
            return this;
        }
        @CustomType.Setter
        public Builder cadenceStartMonths(List<GetSchedulingPolicyCadenceStartMonth> cadenceStartMonths) {
            if (cadenceStartMonths == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "cadenceStartMonths");
            }
            this.cadenceStartMonths = cadenceStartMonths;
            return this;
        }
        public Builder cadenceStartMonths(GetSchedulingPolicyCadenceStartMonth... cadenceStartMonths) {
            return cadenceStartMonths(List.of(cadenceStartMonths));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder schedulingPolicyId(String schedulingPolicyId) {
            if (schedulingPolicyId == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "schedulingPolicyId");
            }
            this.schedulingPolicyId = schedulingPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeNextWindowStarts(String timeNextWindowStarts) {
            if (timeNextWindowStarts == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "timeNextWindowStarts");
            }
            this.timeNextWindowStarts = timeNextWindowStarts;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicyResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetSchedulingPolicyResult build() {
            final var _resultValue = new GetSchedulingPolicyResult();
            _resultValue.cadence = cadence;
            _resultValue.cadenceStartMonths = cadenceStartMonths;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.schedulingPolicyId = schedulingPolicyId;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeNextWindowStarts = timeNextWindowStarts;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
