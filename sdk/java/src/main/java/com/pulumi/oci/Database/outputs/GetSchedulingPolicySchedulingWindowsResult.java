// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetSchedulingPolicySchedulingWindowsFilter;
import com.pulumi.oci.Database.outputs.GetSchedulingPolicySchedulingWindowsSchedulingWindow;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSchedulingPolicySchedulingWindowsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The user-friendly name for the Scheduling Window. The name does not need to be unique.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetSchedulingPolicySchedulingWindowsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
     * 
     */
    private String schedulingPolicyId;
    /**
     * @return The list of scheduling_windows.
     * 
     */
    private List<GetSchedulingPolicySchedulingWindowsSchedulingWindow> schedulingWindows;
    /**
     * @return The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
     * 
     */
    private @Nullable String state;

    private GetSchedulingPolicySchedulingWindowsResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The user-friendly name for the Scheduling Window. The name does not need to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetSchedulingPolicySchedulingWindowsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Scheduling Policy.
     * 
     */
    public String schedulingPolicyId() {
        return this.schedulingPolicyId;
    }
    /**
     * @return The list of scheduling_windows.
     * 
     */
    public List<GetSchedulingPolicySchedulingWindowsSchedulingWindow> schedulingWindows() {
        return this.schedulingWindows;
    }
    /**
     * @return The current state of the Scheduling Window. Valid states are CREATING, ACTIVE, UPDATING, FAILED, DELETING and DELETED.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulingPolicySchedulingWindowsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetSchedulingPolicySchedulingWindowsFilter> filters;
        private String id;
        private String schedulingPolicyId;
        private List<GetSchedulingPolicySchedulingWindowsSchedulingWindow> schedulingWindows;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetSchedulingPolicySchedulingWindowsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.schedulingPolicyId = defaults.schedulingPolicyId;
    	      this.schedulingWindows = defaults.schedulingWindows;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSchedulingPolicySchedulingWindowsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSchedulingPolicySchedulingWindowsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicySchedulingWindowsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder schedulingPolicyId(String schedulingPolicyId) {
            if (schedulingPolicyId == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicySchedulingWindowsResult", "schedulingPolicyId");
            }
            this.schedulingPolicyId = schedulingPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder schedulingWindows(List<GetSchedulingPolicySchedulingWindowsSchedulingWindow> schedulingWindows) {
            if (schedulingWindows == null) {
              throw new MissingRequiredPropertyException("GetSchedulingPolicySchedulingWindowsResult", "schedulingWindows");
            }
            this.schedulingWindows = schedulingWindows;
            return this;
        }
        public Builder schedulingWindows(GetSchedulingPolicySchedulingWindowsSchedulingWindow... schedulingWindows) {
            return schedulingWindows(List.of(schedulingWindows));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetSchedulingPolicySchedulingWindowsResult build() {
            final var _resultValue = new GetSchedulingPolicySchedulingWindowsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.schedulingPolicyId = schedulingPolicyId;
            _resultValue.schedulingWindows = schedulingWindows;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
