// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetSystemVersionMinorVersionsFilter;
import com.pulumi.oci.Database.outputs.GetSystemVersionMinorVersionsSystemVersionMinorVersionCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSystemVersionMinorVersionsResult {
    private String compartmentId;
    private @Nullable List<GetSystemVersionMinorVersionsFilter> filters;
    private String giVersion;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean isLatest;
    private String majorVersion;
    private @Nullable String resourceId;
    private @Nullable String shape;
    /**
     * @return The list of system_version_minor_version_collection.
     * 
     */
    private List<GetSystemVersionMinorVersionsSystemVersionMinorVersionCollection> systemVersionMinorVersionCollections;

    private GetSystemVersionMinorVersionsResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetSystemVersionMinorVersionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public String giVersion() {
        return this.giVersion;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> isLatest() {
        return Optional.ofNullable(this.isLatest);
    }
    public String majorVersion() {
        return this.majorVersion;
    }
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }
    /**
     * @return The list of system_version_minor_version_collection.
     * 
     */
    public List<GetSystemVersionMinorVersionsSystemVersionMinorVersionCollection> systemVersionMinorVersionCollections() {
        return this.systemVersionMinorVersionCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSystemVersionMinorVersionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetSystemVersionMinorVersionsFilter> filters;
        private String giVersion;
        private String id;
        private @Nullable Boolean isLatest;
        private String majorVersion;
        private @Nullable String resourceId;
        private @Nullable String shape;
        private List<GetSystemVersionMinorVersionsSystemVersionMinorVersionCollection> systemVersionMinorVersionCollections;
        public Builder() {}
        public Builder(GetSystemVersionMinorVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.giVersion = defaults.giVersion;
    	      this.id = defaults.id;
    	      this.isLatest = defaults.isLatest;
    	      this.majorVersion = defaults.majorVersion;
    	      this.resourceId = defaults.resourceId;
    	      this.shape = defaults.shape;
    	      this.systemVersionMinorVersionCollections = defaults.systemVersionMinorVersionCollections;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSystemVersionMinorVersionsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSystemVersionMinorVersionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSystemVersionMinorVersionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder giVersion(String giVersion) {
            if (giVersion == null) {
              throw new MissingRequiredPropertyException("GetSystemVersionMinorVersionsResult", "giVersion");
            }
            this.giVersion = giVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSystemVersionMinorVersionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isLatest(@Nullable Boolean isLatest) {

            this.isLatest = isLatest;
            return this;
        }
        @CustomType.Setter
        public Builder majorVersion(String majorVersion) {
            if (majorVersion == null) {
              throw new MissingRequiredPropertyException("GetSystemVersionMinorVersionsResult", "majorVersion");
            }
            this.majorVersion = majorVersion;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {

            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder shape(@Nullable String shape) {

            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder systemVersionMinorVersionCollections(List<GetSystemVersionMinorVersionsSystemVersionMinorVersionCollection> systemVersionMinorVersionCollections) {
            if (systemVersionMinorVersionCollections == null) {
              throw new MissingRequiredPropertyException("GetSystemVersionMinorVersionsResult", "systemVersionMinorVersionCollections");
            }
            this.systemVersionMinorVersionCollections = systemVersionMinorVersionCollections;
            return this;
        }
        public Builder systemVersionMinorVersionCollections(GetSystemVersionMinorVersionsSystemVersionMinorVersionCollection... systemVersionMinorVersionCollections) {
            return systemVersionMinorVersionCollections(List.of(systemVersionMinorVersionCollections));
        }
        public GetSystemVersionMinorVersionsResult build() {
            final var _resultValue = new GetSystemVersionMinorVersionsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.giVersion = giVersion;
            _resultValue.id = id;
            _resultValue.isLatest = isLatest;
            _resultValue.majorVersion = majorVersion;
            _resultValue.resourceId = resourceId;
            _resultValue.shape = shape;
            _resultValue.systemVersionMinorVersionCollections = systemVersionMinorVersionCollections;
            return _resultValue;
        }
    }
}
