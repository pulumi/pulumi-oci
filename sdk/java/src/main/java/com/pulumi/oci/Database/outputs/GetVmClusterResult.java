// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetVmClusterCloudAutomationUpdateDetail;
import com.pulumi.oci.Database.outputs.GetVmClusterDataCollectionOption;
import com.pulumi.oci.Database.outputs.GetVmClusterFileSystemConfigurationDetail;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVmClusterResult {
    /**
     * @return The name of the availability domain that the VM cluster is located in.
     * 
     */
    private String availabilityDomain;
    /**
     * @return Specifies the properties necessary for cloud automation updates. This includes modifying the apply update time preference, enabling or disabling early adoption, and enabling, modifying, or disabling the update freeze period.
     * 
     */
    private List<GetVmClusterCloudAutomationUpdateDetail> cloudAutomationUpdateDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
     * 
     */
    private String computeModel;
    private Integer cpuCoreCount;
    /**
     * @return The number of enabled CPU cores.
     * 
     */
    private Integer cpusEnabled;
    /**
     * @return Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     */
    private List<GetVmClusterDataCollectionOption> dataCollectionOptions;
    /**
     * @return Size of the DATA disk group in GBs.
     * 
     */
    private Double dataStorageSizeInGb;
    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    private Double dataStorageSizeInTbs;
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    private Integer dbNodeStorageSizeInGbs;
    /**
     * @return The list of Db server.
     * 
     */
    private List<String> dbServers;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The user-friendly name for the Exadata Cloud{@literal @}Customer VM cluster. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    private String exadataInfrastructureId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Database Storage Vault.
     * 
     */
    private String exascaleDbStorageVaultId;
    /**
     * @return Details of the file system configuration of the VM cluster.
     * 
     */
    private List<GetVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The Oracle Grid Infrastructure software version for the VM cluster.
     * 
     */
    private String giVersion;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     * 
     */
    private String id;
    /**
     * @return If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
     * 
     */
    private Boolean isLocalBackupEnabled;
    /**
     * @return If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
     * 
     */
    private Boolean isSparseDiskgroupEnabled;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     * 
     */
    private String lastPatchHistoryEntryId;
    /**
     * @return The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
     * 
     */
    private String licenseModel;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The memory allocated in GBs.
     * 
     */
    private Integer memorySizeInGbs;
    private Double ocpuCount;
    private Double ocpusEnabled;
    /**
     * @return The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     * 
     */
    private String shape;
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the VM cluster.
     * 
     */
    private List<String> sshPublicKeys;
    /**
     * @return The current state of the VM cluster.
     * 
     */
    private String state;
    /**
     * @return Specifies whether the type of storage management for the VM cluster is ASM or Exascale.
     * 
     */
    private String storageManagementType;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Operating system version of the image.
     * 
     */
    private String systemVersion;
    /**
     * @return The date and time that the VM cluster was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    private String timeZone;
    private String vmClusterId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
     * 
     */
    private String vmClusterNetworkId;
    /**
     * @return The vmcluster type for the VM cluster/Cloud VM cluster.
     * 
     */
    private String vmClusterType;

    private GetVmClusterResult() {}
    /**
     * @return The name of the availability domain that the VM cluster is located in.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return Specifies the properties necessary for cloud automation updates. This includes modifying the apply update time preference, enabling or disabling early adoption, and enabling, modifying, or disabling the update freeze period.
     * 
     */
    public List<GetVmClusterCloudAutomationUpdateDetail> cloudAutomationUpdateDetails() {
        return this.cloudAutomationUpdateDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The compute model of the Autonomous Database. This is required if using the `computeCount` parameter. If using `cpuCoreCount` then it is an error to specify `computeModel` to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
     * 
     */
    public String computeModel() {
        return this.computeModel;
    }
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * @return The number of enabled CPU cores.
     * 
     */
    public Integer cpusEnabled() {
        return this.cpusEnabled;
    }
    /**
     * @return Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     */
    public List<GetVmClusterDataCollectionOption> dataCollectionOptions() {
        return this.dataCollectionOptions;
    }
    /**
     * @return Size of the DATA disk group in GBs.
     * 
     */
    public Double dataStorageSizeInGb() {
        return this.dataStorageSizeInGb;
    }
    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    public Double dataStorageSizeInTbs() {
        return this.dataStorageSizeInTbs;
    }
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    /**
     * @return The list of Db server.
     * 
     */
    public List<String> dbServers() {
        return this.dbServers;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name for the Exadata Cloud{@literal @}Customer VM cluster. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    public String exadataInfrastructureId() {
        return this.exadataInfrastructureId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata Database Storage Vault.
     * 
     */
    public String exascaleDbStorageVaultId() {
        return this.exascaleDbStorageVaultId;
    }
    /**
     * @return Details of the file system configuration of the VM cluster.
     * 
     */
    public List<GetVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails() {
        return this.fileSystemConfigurationDetails;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The Oracle Grid Infrastructure software version for the VM cluster.
     * 
     */
    public String giVersion() {
        return this.giVersion;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
     * 
     */
    public Boolean isLocalBackupEnabled() {
        return this.isLocalBackupEnabled;
    }
    /**
     * @return If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
     * 
     */
    public Boolean isSparseDiskgroupEnabled() {
        return this.isSparseDiskgroupEnabled;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     * 
     */
    public String lastPatchHistoryEntryId() {
        return this.lastPatchHistoryEntryId;
    }
    /**
     * @return The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
     * 
     */
    public String licenseModel() {
        return this.licenseModel;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The memory allocated in GBs.
     * 
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    public Double ocpuCount() {
        return this.ocpuCount;
    }
    public Double ocpusEnabled() {
        return this.ocpusEnabled;
    }
    /**
     * @return The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the VM cluster.
     * 
     */
    public List<String> sshPublicKeys() {
        return this.sshPublicKeys;
    }
    /**
     * @return The current state of the VM cluster.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Specifies whether the type of storage management for the VM cluster is ASM or Exascale.
     * 
     */
    public String storageManagementType() {
        return this.storageManagementType;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Operating system version of the image.
     * 
     */
    public String systemVersion() {
        return this.systemVersion;
    }
    /**
     * @return The date and time that the VM cluster was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    public String vmClusterId() {
        return this.vmClusterId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
     * 
     */
    public String vmClusterNetworkId() {
        return this.vmClusterNetworkId;
    }
    /**
     * @return The vmcluster type for the VM cluster/Cloud VM cluster.
     * 
     */
    public String vmClusterType() {
        return this.vmClusterType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVmClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private List<GetVmClusterCloudAutomationUpdateDetail> cloudAutomationUpdateDetails;
        private String compartmentId;
        private String computeModel;
        private Integer cpuCoreCount;
        private Integer cpusEnabled;
        private List<GetVmClusterDataCollectionOption> dataCollectionOptions;
        private Double dataStorageSizeInGb;
        private Double dataStorageSizeInTbs;
        private Integer dbNodeStorageSizeInGbs;
        private List<String> dbServers;
        private Map<String,String> definedTags;
        private String displayName;
        private String exadataInfrastructureId;
        private String exascaleDbStorageVaultId;
        private List<GetVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails;
        private Map<String,String> freeformTags;
        private String giVersion;
        private String id;
        private Boolean isLocalBackupEnabled;
        private Boolean isSparseDiskgroupEnabled;
        private String lastPatchHistoryEntryId;
        private String licenseModel;
        private String lifecycleDetails;
        private Integer memorySizeInGbs;
        private Double ocpuCount;
        private Double ocpusEnabled;
        private String shape;
        private List<String> sshPublicKeys;
        private String state;
        private String storageManagementType;
        private Map<String,String> systemTags;
        private String systemVersion;
        private String timeCreated;
        private String timeZone;
        private String vmClusterId;
        private String vmClusterNetworkId;
        private String vmClusterType;
        public Builder() {}
        public Builder(GetVmClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.cloudAutomationUpdateDetails = defaults.cloudAutomationUpdateDetails;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeModel = defaults.computeModel;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.cpusEnabled = defaults.cpusEnabled;
    	      this.dataCollectionOptions = defaults.dataCollectionOptions;
    	      this.dataStorageSizeInGb = defaults.dataStorageSizeInGb;
    	      this.dataStorageSizeInTbs = defaults.dataStorageSizeInTbs;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.dbServers = defaults.dbServers;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.exadataInfrastructureId = defaults.exadataInfrastructureId;
    	      this.exascaleDbStorageVaultId = defaults.exascaleDbStorageVaultId;
    	      this.fileSystemConfigurationDetails = defaults.fileSystemConfigurationDetails;
    	      this.freeformTags = defaults.freeformTags;
    	      this.giVersion = defaults.giVersion;
    	      this.id = defaults.id;
    	      this.isLocalBackupEnabled = defaults.isLocalBackupEnabled;
    	      this.isSparseDiskgroupEnabled = defaults.isSparseDiskgroupEnabled;
    	      this.lastPatchHistoryEntryId = defaults.lastPatchHistoryEntryId;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.ocpuCount = defaults.ocpuCount;
    	      this.ocpusEnabled = defaults.ocpusEnabled;
    	      this.shape = defaults.shape;
    	      this.sshPublicKeys = defaults.sshPublicKeys;
    	      this.state = defaults.state;
    	      this.storageManagementType = defaults.storageManagementType;
    	      this.systemTags = defaults.systemTags;
    	      this.systemVersion = defaults.systemVersion;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeZone = defaults.timeZone;
    	      this.vmClusterId = defaults.vmClusterId;
    	      this.vmClusterNetworkId = defaults.vmClusterNetworkId;
    	      this.vmClusterType = defaults.vmClusterType;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder cloudAutomationUpdateDetails(List<GetVmClusterCloudAutomationUpdateDetail> cloudAutomationUpdateDetails) {
            if (cloudAutomationUpdateDetails == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "cloudAutomationUpdateDetails");
            }
            this.cloudAutomationUpdateDetails = cloudAutomationUpdateDetails;
            return this;
        }
        public Builder cloudAutomationUpdateDetails(GetVmClusterCloudAutomationUpdateDetail... cloudAutomationUpdateDetails) {
            return cloudAutomationUpdateDetails(List.of(cloudAutomationUpdateDetails));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeModel(String computeModel) {
            if (computeModel == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "computeModel");
            }
            this.computeModel = computeModel;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            if (cpuCoreCount == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "cpuCoreCount");
            }
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder cpusEnabled(Integer cpusEnabled) {
            if (cpusEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "cpusEnabled");
            }
            this.cpusEnabled = cpusEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder dataCollectionOptions(List<GetVmClusterDataCollectionOption> dataCollectionOptions) {
            if (dataCollectionOptions == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "dataCollectionOptions");
            }
            this.dataCollectionOptions = dataCollectionOptions;
            return this;
        }
        public Builder dataCollectionOptions(GetVmClusterDataCollectionOption... dataCollectionOptions) {
            return dataCollectionOptions(List.of(dataCollectionOptions));
        }
        @CustomType.Setter
        public Builder dataStorageSizeInGb(Double dataStorageSizeInGb) {
            if (dataStorageSizeInGb == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "dataStorageSizeInGb");
            }
            this.dataStorageSizeInGb = dataStorageSizeInGb;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            if (dataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "dataStorageSizeInTbs");
            }
            this.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            if (dbNodeStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "dbNodeStorageSizeInGbs");
            }
            this.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbServers(List<String> dbServers) {
            if (dbServers == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "dbServers");
            }
            this.dbServers = dbServers;
            return this;
        }
        public Builder dbServers(String... dbServers) {
            return dbServers(List.of(dbServers));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder exadataInfrastructureId(String exadataInfrastructureId) {
            if (exadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "exadataInfrastructureId");
            }
            this.exadataInfrastructureId = exadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder exascaleDbStorageVaultId(String exascaleDbStorageVaultId) {
            if (exascaleDbStorageVaultId == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "exascaleDbStorageVaultId");
            }
            this.exascaleDbStorageVaultId = exascaleDbStorageVaultId;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemConfigurationDetails(List<GetVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails) {
            if (fileSystemConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "fileSystemConfigurationDetails");
            }
            this.fileSystemConfigurationDetails = fileSystemConfigurationDetails;
            return this;
        }
        public Builder fileSystemConfigurationDetails(GetVmClusterFileSystemConfigurationDetail... fileSystemConfigurationDetails) {
            return fileSystemConfigurationDetails(List.of(fileSystemConfigurationDetails));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder giVersion(String giVersion) {
            if (giVersion == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "giVersion");
            }
            this.giVersion = giVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isLocalBackupEnabled(Boolean isLocalBackupEnabled) {
            if (isLocalBackupEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "isLocalBackupEnabled");
            }
            this.isLocalBackupEnabled = isLocalBackupEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isSparseDiskgroupEnabled(Boolean isSparseDiskgroupEnabled) {
            if (isSparseDiskgroupEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "isSparseDiskgroupEnabled");
            }
            this.isSparseDiskgroupEnabled = isSparseDiskgroupEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lastPatchHistoryEntryId(String lastPatchHistoryEntryId) {
            if (lastPatchHistoryEntryId == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "lastPatchHistoryEntryId");
            }
            this.lastPatchHistoryEntryId = lastPatchHistoryEntryId;
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(String licenseModel) {
            if (licenseModel == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "licenseModel");
            }
            this.licenseModel = licenseModel;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            if (memorySizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "memorySizeInGbs");
            }
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder ocpuCount(Double ocpuCount) {
            if (ocpuCount == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "ocpuCount");
            }
            this.ocpuCount = ocpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder ocpusEnabled(Double ocpusEnabled) {
            if (ocpusEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "ocpusEnabled");
            }
            this.ocpusEnabled = ocpusEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            if (shape == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "shape");
            }
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder sshPublicKeys(List<String> sshPublicKeys) {
            if (sshPublicKeys == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "sshPublicKeys");
            }
            this.sshPublicKeys = sshPublicKeys;
            return this;
        }
        public Builder sshPublicKeys(String... sshPublicKeys) {
            return sshPublicKeys(List.of(sshPublicKeys));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder storageManagementType(String storageManagementType) {
            if (storageManagementType == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "storageManagementType");
            }
            this.storageManagementType = storageManagementType;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder systemVersion(String systemVersion) {
            if (systemVersion == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "systemVersion");
            }
            this.systemVersion = systemVersion;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterId(String vmClusterId) {
            if (vmClusterId == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "vmClusterId");
            }
            this.vmClusterId = vmClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterNetworkId(String vmClusterNetworkId) {
            if (vmClusterNetworkId == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "vmClusterNetworkId");
            }
            this.vmClusterNetworkId = vmClusterNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterType(String vmClusterType) {
            if (vmClusterType == null) {
              throw new MissingRequiredPropertyException("GetVmClusterResult", "vmClusterType");
            }
            this.vmClusterType = vmClusterType;
            return this;
        }
        public GetVmClusterResult build() {
            final var _resultValue = new GetVmClusterResult();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.cloudAutomationUpdateDetails = cloudAutomationUpdateDetails;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeModel = computeModel;
            _resultValue.cpuCoreCount = cpuCoreCount;
            _resultValue.cpusEnabled = cpusEnabled;
            _resultValue.dataCollectionOptions = dataCollectionOptions;
            _resultValue.dataStorageSizeInGb = dataStorageSizeInGb;
            _resultValue.dataStorageSizeInTbs = dataStorageSizeInTbs;
            _resultValue.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            _resultValue.dbServers = dbServers;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.exadataInfrastructureId = exadataInfrastructureId;
            _resultValue.exascaleDbStorageVaultId = exascaleDbStorageVaultId;
            _resultValue.fileSystemConfigurationDetails = fileSystemConfigurationDetails;
            _resultValue.freeformTags = freeformTags;
            _resultValue.giVersion = giVersion;
            _resultValue.id = id;
            _resultValue.isLocalBackupEnabled = isLocalBackupEnabled;
            _resultValue.isSparseDiskgroupEnabled = isSparseDiskgroupEnabled;
            _resultValue.lastPatchHistoryEntryId = lastPatchHistoryEntryId;
            _resultValue.licenseModel = licenseModel;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.memorySizeInGbs = memorySizeInGbs;
            _resultValue.ocpuCount = ocpuCount;
            _resultValue.ocpusEnabled = ocpusEnabled;
            _resultValue.shape = shape;
            _resultValue.sshPublicKeys = sshPublicKeys;
            _resultValue.state = state;
            _resultValue.storageManagementType = storageManagementType;
            _resultValue.systemTags = systemTags;
            _resultValue.systemVersion = systemVersion;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeZone = timeZone;
            _resultValue.vmClusterId = vmClusterId;
            _resultValue.vmClusterNetworkId = vmClusterNetworkId;
            _resultValue.vmClusterType = vmClusterType;
            return _resultValue;
        }
    }
}
