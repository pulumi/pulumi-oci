// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Database.outputs.GetVmClustersVmClusterDataCollectionOption;
import com.pulumi.oci.Database.outputs.GetVmClustersVmClusterFileSystemConfigurationDetail;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVmClustersVmCluster {
    /**
     * @return The name of the availability domain that the VM cluster is located in.
     * 
     */
    private String availabilityDomain;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    private Integer cpuCoreCount;
    /**
     * @return The number of enabled CPU cores.
     * 
     */
    private Integer cpusEnabled;
    /**
     * @return Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     */
    private List<GetVmClustersVmClusterDataCollectionOption> dataCollectionOptions;
    /**
     * @return Size of the DATA disk group in GBs.
     * 
     */
    private Double dataStorageSizeInGb;
    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    private Double dataStorageSizeInTbs;
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    private Integer dbNodeStorageSizeInGbs;
    /**
     * @return The list of Db server.
     * 
     */
    private List<String> dbServers;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private String displayName;
    /**
     * @return If provided, filters the results for the given Exadata Infrastructure.
     * 
     */
    private String exadataInfrastructureId;
    /**
     * @return Details of the file system configuration of the VM cluster.
     * 
     */
    private List<GetVmClustersVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The Oracle Grid Infrastructure software version for the VM cluster.
     * 
     */
    private String giVersion;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     * 
     */
    private String id;
    /**
     * @return If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
     * 
     */
    private Boolean isLocalBackupEnabled;
    /**
     * @return If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
     * 
     */
    private Boolean isSparseDiskgroupEnabled;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     * 
     */
    private String lastPatchHistoryEntryId;
    /**
     * @return The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
     * 
     */
    private String licenseModel;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The memory allocated in GBs.
     * 
     */
    private Integer memorySizeInGbs;
    private Double ocpuCount;
    private Double ocpusEnabled;
    /**
     * @return The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     * 
     */
    private String shape;
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the VM cluster.
     * 
     */
    private List<String> sshPublicKeys;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private String state;
    /**
     * @return Operating system version of the image.
     * 
     */
    private String systemVersion;
    /**
     * @return The date and time that the VM cluster was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    private String timeZone;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
     * 
     */
    private String vmClusterNetworkId;

    private GetVmClustersVmCluster() {}
    /**
     * @return The name of the availability domain that the VM cluster is located in.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * @return The number of enabled CPU cores.
     * 
     */
    public Integer cpusEnabled() {
        return this.cpusEnabled;
    }
    /**
     * @return Indicates user preferences for the various diagnostic collection options for the VM cluster/Cloud VM cluster/VMBM DBCS.
     * 
     */
    public List<GetVmClustersVmClusterDataCollectionOption> dataCollectionOptions() {
        return this.dataCollectionOptions;
    }
    /**
     * @return Size of the DATA disk group in GBs.
     * 
     */
    public Double dataStorageSizeInGb() {
        return this.dataStorageSizeInGb;
    }
    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    public Double dataStorageSizeInTbs() {
        return this.dataStorageSizeInTbs;
    }
    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    /**
     * @return The list of Db server.
     * 
     */
    public List<String> dbServers() {
        return this.dbServers;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return If provided, filters the results for the given Exadata Infrastructure.
     * 
     */
    public String exadataInfrastructureId() {
        return this.exadataInfrastructureId;
    }
    /**
     * @return Details of the file system configuration of the VM cluster.
     * 
     */
    public List<GetVmClustersVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails() {
        return this.fileSystemConfigurationDetails;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The Oracle Grid Infrastructure software version for the VM cluster.
     * 
     */
    public String giVersion() {
        return this.giVersion;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return If true, database backup on local Exadata storage is configured for the VM cluster. If false, database backup on local Exadata storage is not available in the VM cluster.
     * 
     */
    public Boolean isLocalBackupEnabled() {
        return this.isLocalBackupEnabled;
    }
    /**
     * @return If true, sparse disk group is configured for the VM cluster. If false, sparse disk group is not created.
     * 
     */
    public Boolean isSparseDiskgroupEnabled() {
        return this.isSparseDiskgroupEnabled;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     * 
     */
    public String lastPatchHistoryEntryId() {
        return this.lastPatchHistoryEntryId;
    }
    /**
     * @return The Oracle license model that applies to the VM cluster. The default is LICENSE_INCLUDED.
     * 
     */
    public String licenseModel() {
        return this.licenseModel;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The memory allocated in GBs.
     * 
     */
    public Integer memorySizeInGbs() {
        return this.memorySizeInGbs;
    }
    public Double ocpuCount() {
        return this.ocpuCount;
    }
    public Double ocpusEnabled() {
        return this.ocpusEnabled;
    }
    /**
     * @return The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the VM cluster.
     * 
     */
    public List<String> sshPublicKeys() {
        return this.sshPublicKeys;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Operating system version of the image.
     * 
     */
    public String systemVersion() {
        return this.systemVersion;
    }
    /**
     * @return The date and time that the VM cluster was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VM cluster network.
     * 
     */
    public String vmClusterNetworkId() {
        return this.vmClusterNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVmClustersVmCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String compartmentId;
        private Integer cpuCoreCount;
        private Integer cpusEnabled;
        private List<GetVmClustersVmClusterDataCollectionOption> dataCollectionOptions;
        private Double dataStorageSizeInGb;
        private Double dataStorageSizeInTbs;
        private Integer dbNodeStorageSizeInGbs;
        private List<String> dbServers;
        private Map<String,String> definedTags;
        private String displayName;
        private String exadataInfrastructureId;
        private List<GetVmClustersVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails;
        private Map<String,String> freeformTags;
        private String giVersion;
        private String id;
        private Boolean isLocalBackupEnabled;
        private Boolean isSparseDiskgroupEnabled;
        private String lastPatchHistoryEntryId;
        private String licenseModel;
        private String lifecycleDetails;
        private Integer memorySizeInGbs;
        private Double ocpuCount;
        private Double ocpusEnabled;
        private String shape;
        private List<String> sshPublicKeys;
        private String state;
        private String systemVersion;
        private String timeCreated;
        private String timeZone;
        private String vmClusterNetworkId;
        public Builder() {}
        public Builder(GetVmClustersVmCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.cpusEnabled = defaults.cpusEnabled;
    	      this.dataCollectionOptions = defaults.dataCollectionOptions;
    	      this.dataStorageSizeInGb = defaults.dataStorageSizeInGb;
    	      this.dataStorageSizeInTbs = defaults.dataStorageSizeInTbs;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.dbServers = defaults.dbServers;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.exadataInfrastructureId = defaults.exadataInfrastructureId;
    	      this.fileSystemConfigurationDetails = defaults.fileSystemConfigurationDetails;
    	      this.freeformTags = defaults.freeformTags;
    	      this.giVersion = defaults.giVersion;
    	      this.id = defaults.id;
    	      this.isLocalBackupEnabled = defaults.isLocalBackupEnabled;
    	      this.isSparseDiskgroupEnabled = defaults.isSparseDiskgroupEnabled;
    	      this.lastPatchHistoryEntryId = defaults.lastPatchHistoryEntryId;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.ocpuCount = defaults.ocpuCount;
    	      this.ocpusEnabled = defaults.ocpusEnabled;
    	      this.shape = defaults.shape;
    	      this.sshPublicKeys = defaults.sshPublicKeys;
    	      this.state = defaults.state;
    	      this.systemVersion = defaults.systemVersion;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeZone = defaults.timeZone;
    	      this.vmClusterNetworkId = defaults.vmClusterNetworkId;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            if (cpuCoreCount == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "cpuCoreCount");
            }
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder cpusEnabled(Integer cpusEnabled) {
            if (cpusEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "cpusEnabled");
            }
            this.cpusEnabled = cpusEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder dataCollectionOptions(List<GetVmClustersVmClusterDataCollectionOption> dataCollectionOptions) {
            if (dataCollectionOptions == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "dataCollectionOptions");
            }
            this.dataCollectionOptions = dataCollectionOptions;
            return this;
        }
        public Builder dataCollectionOptions(GetVmClustersVmClusterDataCollectionOption... dataCollectionOptions) {
            return dataCollectionOptions(List.of(dataCollectionOptions));
        }
        @CustomType.Setter
        public Builder dataStorageSizeInGb(Double dataStorageSizeInGb) {
            if (dataStorageSizeInGb == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "dataStorageSizeInGb");
            }
            this.dataStorageSizeInGb = dataStorageSizeInGb;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            if (dataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "dataStorageSizeInTbs");
            }
            this.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            if (dbNodeStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "dbNodeStorageSizeInGbs");
            }
            this.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbServers(List<String> dbServers) {
            if (dbServers == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "dbServers");
            }
            this.dbServers = dbServers;
            return this;
        }
        public Builder dbServers(String... dbServers) {
            return dbServers(List.of(dbServers));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder exadataInfrastructureId(String exadataInfrastructureId) {
            if (exadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "exadataInfrastructureId");
            }
            this.exadataInfrastructureId = exadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemConfigurationDetails(List<GetVmClustersVmClusterFileSystemConfigurationDetail> fileSystemConfigurationDetails) {
            if (fileSystemConfigurationDetails == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "fileSystemConfigurationDetails");
            }
            this.fileSystemConfigurationDetails = fileSystemConfigurationDetails;
            return this;
        }
        public Builder fileSystemConfigurationDetails(GetVmClustersVmClusterFileSystemConfigurationDetail... fileSystemConfigurationDetails) {
            return fileSystemConfigurationDetails(List.of(fileSystemConfigurationDetails));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder giVersion(String giVersion) {
            if (giVersion == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "giVersion");
            }
            this.giVersion = giVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isLocalBackupEnabled(Boolean isLocalBackupEnabled) {
            if (isLocalBackupEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "isLocalBackupEnabled");
            }
            this.isLocalBackupEnabled = isLocalBackupEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isSparseDiskgroupEnabled(Boolean isSparseDiskgroupEnabled) {
            if (isSparseDiskgroupEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "isSparseDiskgroupEnabled");
            }
            this.isSparseDiskgroupEnabled = isSparseDiskgroupEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lastPatchHistoryEntryId(String lastPatchHistoryEntryId) {
            if (lastPatchHistoryEntryId == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "lastPatchHistoryEntryId");
            }
            this.lastPatchHistoryEntryId = lastPatchHistoryEntryId;
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(String licenseModel) {
            if (licenseModel == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "licenseModel");
            }
            this.licenseModel = licenseModel;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            if (memorySizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "memorySizeInGbs");
            }
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder ocpuCount(Double ocpuCount) {
            if (ocpuCount == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "ocpuCount");
            }
            this.ocpuCount = ocpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder ocpusEnabled(Double ocpusEnabled) {
            if (ocpusEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "ocpusEnabled");
            }
            this.ocpusEnabled = ocpusEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            if (shape == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "shape");
            }
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder sshPublicKeys(List<String> sshPublicKeys) {
            if (sshPublicKeys == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "sshPublicKeys");
            }
            this.sshPublicKeys = sshPublicKeys;
            return this;
        }
        public Builder sshPublicKeys(String... sshPublicKeys) {
            return sshPublicKeys(List.of(sshPublicKeys));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemVersion(String systemVersion) {
            if (systemVersion == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "systemVersion");
            }
            this.systemVersion = systemVersion;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        @CustomType.Setter
        public Builder vmClusterNetworkId(String vmClusterNetworkId) {
            if (vmClusterNetworkId == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmCluster", "vmClusterNetworkId");
            }
            this.vmClusterNetworkId = vmClusterNetworkId;
            return this;
        }
        public GetVmClustersVmCluster build() {
            final var _resultValue = new GetVmClustersVmCluster();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.cpuCoreCount = cpuCoreCount;
            _resultValue.cpusEnabled = cpusEnabled;
            _resultValue.dataCollectionOptions = dataCollectionOptions;
            _resultValue.dataStorageSizeInGb = dataStorageSizeInGb;
            _resultValue.dataStorageSizeInTbs = dataStorageSizeInTbs;
            _resultValue.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            _resultValue.dbServers = dbServers;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.exadataInfrastructureId = exadataInfrastructureId;
            _resultValue.fileSystemConfigurationDetails = fileSystemConfigurationDetails;
            _resultValue.freeformTags = freeformTags;
            _resultValue.giVersion = giVersion;
            _resultValue.id = id;
            _resultValue.isLocalBackupEnabled = isLocalBackupEnabled;
            _resultValue.isSparseDiskgroupEnabled = isSparseDiskgroupEnabled;
            _resultValue.lastPatchHistoryEntryId = lastPatchHistoryEntryId;
            _resultValue.licenseModel = licenseModel;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.memorySizeInGbs = memorySizeInGbs;
            _resultValue.ocpuCount = ocpuCount;
            _resultValue.ocpusEnabled = ocpusEnabled;
            _resultValue.shape = shape;
            _resultValue.sshPublicKeys = sshPublicKeys;
            _resultValue.state = state;
            _resultValue.systemVersion = systemVersion;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeZone = timeZone;
            _resultValue.vmClusterNetworkId = vmClusterNetworkId;
            return _resultValue;
        }
    }
}
