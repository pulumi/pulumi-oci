// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetVmClustersVmClusterDataCollectionOption {
    /**
     * @return Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster/Cloud VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
     * 
     */
    private Boolean isDiagnosticsEventsEnabled;
    /**
     * @return Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
     * 
     */
    private Boolean isHealthMonitoringEnabled;
    /**
     * @return Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
     * 
     */
    private Boolean isIncidentLogsEnabled;

    private GetVmClustersVmClusterDataCollectionOption() {}
    /**
     * @return Indicates whether diagnostic collection is enabled for the VM cluster/Cloud VM cluster/VMBM DBCS. Enabling diagnostic collection allows you to receive Events service notifications for guest VM issues. Diagnostic collection also allows Oracle to provide enhanced service and proactive support for your Exadata system. You can enable diagnostic collection during VM cluster/Cloud VM cluster provisioning. You can also disable or enable it at any time using the `UpdateVmCluster` or `updateCloudVmCluster` API.
     * 
     */
    public Boolean isDiagnosticsEventsEnabled() {
        return this.isDiagnosticsEventsEnabled;
    }
    /**
     * @return Indicates whether health monitoring is enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. Enabling health monitoring allows Oracle to collect diagnostic data and share it with its operations and support personnel. You may also receive notifications for some events. Collecting health diagnostics enables Oracle to provide proactive support and enhanced service for your system. Optionally enable health monitoring while provisioning a system. You can also disable or enable health monitoring anytime using the `UpdateVmCluster`, `UpdateCloudVmCluster` or `updateDbsystem` API.
     * 
     */
    public Boolean isHealthMonitoringEnabled() {
        return this.isHealthMonitoringEnabled;
    }
    /**
     * @return Indicates whether incident logs and trace collection are enabled for the VM cluster / Cloud VM cluster / VMBM DBCS. Enabling incident logs collection allows Oracle to receive Events service notifications for guest VM issues, collect incident logs and traces, and use them to diagnose issues and resolve them. Optionally enable incident logs collection while provisioning a system. You can also disable or enable incident logs collection anytime using the `UpdateVmCluster`, `updateCloudVmCluster` or `updateDbsystem` API.
     * 
     */
    public Boolean isIncidentLogsEnabled() {
        return this.isIncidentLogsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVmClustersVmClusterDataCollectionOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isDiagnosticsEventsEnabled;
        private Boolean isHealthMonitoringEnabled;
        private Boolean isIncidentLogsEnabled;
        public Builder() {}
        public Builder(GetVmClustersVmClusterDataCollectionOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isDiagnosticsEventsEnabled = defaults.isDiagnosticsEventsEnabled;
    	      this.isHealthMonitoringEnabled = defaults.isHealthMonitoringEnabled;
    	      this.isIncidentLogsEnabled = defaults.isIncidentLogsEnabled;
        }

        @CustomType.Setter
        public Builder isDiagnosticsEventsEnabled(Boolean isDiagnosticsEventsEnabled) {
            if (isDiagnosticsEventsEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmClusterDataCollectionOption", "isDiagnosticsEventsEnabled");
            }
            this.isDiagnosticsEventsEnabled = isDiagnosticsEventsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isHealthMonitoringEnabled(Boolean isHealthMonitoringEnabled) {
            if (isHealthMonitoringEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmClusterDataCollectionOption", "isHealthMonitoringEnabled");
            }
            this.isHealthMonitoringEnabled = isHealthMonitoringEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isIncidentLogsEnabled(Boolean isIncidentLogsEnabled) {
            if (isIncidentLogsEnabled == null) {
              throw new MissingRequiredPropertyException("GetVmClustersVmClusterDataCollectionOption", "isIncidentLogsEnabled");
            }
            this.isIncidentLogsEnabled = isIncidentLogsEnabled;
            return this;
        }
        public GetVmClustersVmClusterDataCollectionOption build() {
            final var _resultValue = new GetVmClustersVmClusterDataCollectionOption();
            _resultValue.isDiagnosticsEventsEnabled = isDiagnosticsEventsEnabled;
            _resultValue.isHealthMonitoringEnabled = isHealthMonitoringEnabled;
            _resultValue.isIncidentLogsEnabled = isIncidentLogsEnabled;
            return _resultValue;
        }
    }
}
