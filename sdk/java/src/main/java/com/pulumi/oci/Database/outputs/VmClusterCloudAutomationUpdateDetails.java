// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.VmClusterCloudAutomationUpdateDetailsApplyUpdateTimePreference;
import com.pulumi.oci.Database.outputs.VmClusterCloudAutomationUpdateDetailsFreezePeriod;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VmClusterCloudAutomationUpdateDetails {
    /**
     * @return (Updatable) Configure the time slot for applying VM cloud automation software updates to the cluster. When nothing is selected, the default time slot is 12 AM to 2 AM UTC. Any 2-hour slot is available starting at 12 AM.
     * 
     */
    private @Nullable VmClusterCloudAutomationUpdateDetailsApplyUpdateTimePreference applyUpdateTimePreference;
    /**
     * @return (Updatable) Enables a freeze period for the VM cluster prohibiting the VMs from getting cloud automation software updates during critical business cycles. Freeze period start date. Starts at 12:00 AM UTC on the selected date and ends at 11:59:59 PM UTC on the selected date. Validates to ensure the freeze period does not exceed 45 days.
     * 
     */
    private @Nullable VmClusterCloudAutomationUpdateDetailsFreezePeriod freezePeriod;
    /**
     * @return (Updatable) Annotates whether the cluster should be part of early access to apply VM cloud automation software updates. Those clusters annotated as early access will download the software bits for cloud automation in the first week after the update is available, while other clusters will have to wait until the following week.
     * 
     */
    private @Nullable Boolean isEarlyAdoptionEnabled;
    /**
     * @return (Updatable) Specifies if the freeze period is enabled for the VM cluster to prevent the VMs from receiving cloud automation software updates during critical business cycles. Freeze period starts at 12:00 AM UTC and ends at 11:59:59 PM UTC on the selected date. Ensure that the freezing period does not exceed 45 days.
     * 
     */
    private @Nullable Boolean isFreezePeriodEnabled;

    private VmClusterCloudAutomationUpdateDetails() {}
    /**
     * @return (Updatable) Configure the time slot for applying VM cloud automation software updates to the cluster. When nothing is selected, the default time slot is 12 AM to 2 AM UTC. Any 2-hour slot is available starting at 12 AM.
     * 
     */
    public Optional<VmClusterCloudAutomationUpdateDetailsApplyUpdateTimePreference> applyUpdateTimePreference() {
        return Optional.ofNullable(this.applyUpdateTimePreference);
    }
    /**
     * @return (Updatable) Enables a freeze period for the VM cluster prohibiting the VMs from getting cloud automation software updates during critical business cycles. Freeze period start date. Starts at 12:00 AM UTC on the selected date and ends at 11:59:59 PM UTC on the selected date. Validates to ensure the freeze period does not exceed 45 days.
     * 
     */
    public Optional<VmClusterCloudAutomationUpdateDetailsFreezePeriod> freezePeriod() {
        return Optional.ofNullable(this.freezePeriod);
    }
    /**
     * @return (Updatable) Annotates whether the cluster should be part of early access to apply VM cloud automation software updates. Those clusters annotated as early access will download the software bits for cloud automation in the first week after the update is available, while other clusters will have to wait until the following week.
     * 
     */
    public Optional<Boolean> isEarlyAdoptionEnabled() {
        return Optional.ofNullable(this.isEarlyAdoptionEnabled);
    }
    /**
     * @return (Updatable) Specifies if the freeze period is enabled for the VM cluster to prevent the VMs from receiving cloud automation software updates during critical business cycles. Freeze period starts at 12:00 AM UTC and ends at 11:59:59 PM UTC on the selected date. Ensure that the freezing period does not exceed 45 days.
     * 
     */
    public Optional<Boolean> isFreezePeriodEnabled() {
        return Optional.ofNullable(this.isFreezePeriodEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VmClusterCloudAutomationUpdateDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VmClusterCloudAutomationUpdateDetailsApplyUpdateTimePreference applyUpdateTimePreference;
        private @Nullable VmClusterCloudAutomationUpdateDetailsFreezePeriod freezePeriod;
        private @Nullable Boolean isEarlyAdoptionEnabled;
        private @Nullable Boolean isFreezePeriodEnabled;
        public Builder() {}
        public Builder(VmClusterCloudAutomationUpdateDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applyUpdateTimePreference = defaults.applyUpdateTimePreference;
    	      this.freezePeriod = defaults.freezePeriod;
    	      this.isEarlyAdoptionEnabled = defaults.isEarlyAdoptionEnabled;
    	      this.isFreezePeriodEnabled = defaults.isFreezePeriodEnabled;
        }

        @CustomType.Setter
        public Builder applyUpdateTimePreference(@Nullable VmClusterCloudAutomationUpdateDetailsApplyUpdateTimePreference applyUpdateTimePreference) {

            this.applyUpdateTimePreference = applyUpdateTimePreference;
            return this;
        }
        @CustomType.Setter
        public Builder freezePeriod(@Nullable VmClusterCloudAutomationUpdateDetailsFreezePeriod freezePeriod) {

            this.freezePeriod = freezePeriod;
            return this;
        }
        @CustomType.Setter
        public Builder isEarlyAdoptionEnabled(@Nullable Boolean isEarlyAdoptionEnabled) {

            this.isEarlyAdoptionEnabled = isEarlyAdoptionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isFreezePeriodEnabled(@Nullable Boolean isFreezePeriodEnabled) {

            this.isFreezePeriodEnabled = isFreezePeriodEnabled;
            return this;
        }
        public VmClusterCloudAutomationUpdateDetails build() {
            final var _resultValue = new VmClusterCloudAutomationUpdateDetails();
            _resultValue.applyUpdateTimePreference = applyUpdateTimePreference;
            _resultValue.freezePeriod = freezePeriod;
            _resultValue.isEarlyAdoptionEnabled = isEarlyAdoptionEnabled;
            _resultValue.isFreezePeriodEnabled = isFreezePeriodEnabled;
            return _resultValue;
        }
    }
}
