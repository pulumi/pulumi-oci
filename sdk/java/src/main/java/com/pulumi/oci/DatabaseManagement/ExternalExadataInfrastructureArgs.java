// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExternalExadataInfrastructureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExternalExadataInfrastructureArgs Empty = new ExternalExadataInfrastructureArgs();

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) The list of DB systems in the Exadata infrastructure.
     * 
     */
    @Import(name="dbSystemIds", required=true)
    private Output<List<String>> dbSystemIds;

    /**
     * @return (Updatable) The list of DB systems in the Exadata infrastructure.
     * 
     */
    public Output<List<String>> dbSystemIds() {
        return this.dbSystemIds;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The unique key of the discovery request.
     * 
     */
    @Import(name="discoveryKey")
    private @Nullable Output<String> discoveryKey;

    /**
     * @return (Updatable) The unique key of the discovery request.
     * 
     */
    public Optional<Output<String>> discoveryKey() {
        return Optional.ofNullable(this.discoveryKey);
    }

    /**
     * (Updatable) The name of the Exadata infrastructure.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) The name of the Exadata infrastructure.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The Oracle license model that applies to the database management resources.
     * 
     */
    @Import(name="licenseModel")
    private @Nullable Output<String> licenseModel;

    /**
     * @return (Updatable) The Oracle license model that applies to the database management resources.
     * 
     */
    public Optional<Output<String>> licenseModel() {
        return Optional.ofNullable(this.licenseModel);
    }

    /**
     * (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="storageServerNames")
    private @Nullable Output<List<String>> storageServerNames;

    /**
     * @return (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<List<String>>> storageServerNames() {
        return Optional.ofNullable(this.storageServerNames);
    }

    private ExternalExadataInfrastructureArgs() {}

    private ExternalExadataInfrastructureArgs(ExternalExadataInfrastructureArgs $) {
        this.compartmentId = $.compartmentId;
        this.dbSystemIds = $.dbSystemIds;
        this.definedTags = $.definedTags;
        this.discoveryKey = $.discoveryKey;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.licenseModel = $.licenseModel;
        this.storageServerNames = $.storageServerNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalExadataInfrastructureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalExadataInfrastructureArgs $;

        public Builder() {
            $ = new ExternalExadataInfrastructureArgs();
        }

        public Builder(ExternalExadataInfrastructureArgs defaults) {
            $ = new ExternalExadataInfrastructureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param dbSystemIds (Updatable) The list of DB systems in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder dbSystemIds(Output<List<String>> dbSystemIds) {
            $.dbSystemIds = dbSystemIds;
            return this;
        }

        /**
         * @param dbSystemIds (Updatable) The list of DB systems in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder dbSystemIds(List<String> dbSystemIds) {
            return dbSystemIds(Output.of(dbSystemIds));
        }

        /**
         * @param dbSystemIds (Updatable) The list of DB systems in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder dbSystemIds(String... dbSystemIds) {
            return dbSystemIds(List.of(dbSystemIds));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param discoveryKey (Updatable) The unique key of the discovery request.
         * 
         * @return builder
         * 
         */
        public Builder discoveryKey(@Nullable Output<String> discoveryKey) {
            $.discoveryKey = discoveryKey;
            return this;
        }

        /**
         * @param discoveryKey (Updatable) The unique key of the discovery request.
         * 
         * @return builder
         * 
         */
        public Builder discoveryKey(String discoveryKey) {
            return discoveryKey(Output.of(discoveryKey));
        }

        /**
         * @param displayName (Updatable) The name of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The name of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param licenseModel (Updatable) The Oracle license model that applies to the database management resources.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(@Nullable Output<String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        /**
         * @param licenseModel (Updatable) The Oracle license model that applies to the database management resources.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param storageServerNames (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder storageServerNames(@Nullable Output<List<String>> storageServerNames) {
            $.storageServerNames = storageServerNames;
            return this;
        }

        /**
         * @param storageServerNames (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder storageServerNames(List<String> storageServerNames) {
            return storageServerNames(Output.of(storageServerNames));
        }

        /**
         * @param storageServerNames (Updatable) The list of all the Exadata storage server names to be included for monitoring purposes. If not specified, all the Exadata storage servers associated with the DB systems are included.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder storageServerNames(String... storageServerNames) {
            return storageServerNames(List.of(storageServerNames));
        }

        public ExternalExadataInfrastructureArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("ExternalExadataInfrastructureArgs", "compartmentId");
            }
            if ($.dbSystemIds == null) {
                throw new MissingRequiredPropertyException("ExternalExadataInfrastructureArgs", "dbSystemIds");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("ExternalExadataInfrastructureArgs", "displayName");
            }
            return $;
        }
    }

}
