// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ExternalMySqlDatabaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExternalMySqlDatabaseArgs Empty = new ExternalMySqlDatabaseArgs();

    /**
     * OCID of compartment for the External MySQL Database.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return OCID of compartment for the External MySQL Database.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Name of the External MySQL Database.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="dbName", required=true)
    private Output<String> dbName;

    /**
     * @return (Updatable) Name of the External MySQL Database.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> dbName() {
        return this.dbName;
    }

    private ExternalMySqlDatabaseArgs() {}

    private ExternalMySqlDatabaseArgs(ExternalMySqlDatabaseArgs $) {
        this.compartmentId = $.compartmentId;
        this.dbName = $.dbName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalMySqlDatabaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalMySqlDatabaseArgs $;

        public Builder() {
            $ = new ExternalMySqlDatabaseArgs();
        }

        public Builder(ExternalMySqlDatabaseArgs defaults) {
            $ = new ExternalMySqlDatabaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId OCID of compartment for the External MySQL Database.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId OCID of compartment for the External MySQL Database.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param dbName (Updatable) Name of the External MySQL Database.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder dbName(Output<String> dbName) {
            $.dbName = dbName;
            return this;
        }

        /**
         * @param dbName (Updatable) Name of the External MySQL Database.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder dbName(String dbName) {
            return dbName(Output.of(dbName));
        }

        public ExternalMySqlDatabaseArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("ExternalMySqlDatabaseArgs", "compartmentId");
            }
            if ($.dbName == null) {
                throw new MissingRequiredPropertyException("ExternalMySqlDatabaseArgs", "dbName");
            }
            return $;
        }
    }

}
