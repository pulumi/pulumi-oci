// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudDbSystemConnectorConnectionInfoConnectionStringArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudDbSystemConnectorConnectionInfoConnectionStringArgs Empty = new CloudDbSystemConnectorConnectionInfoConnectionStringArgs();

    /**
     * The host name of the database or the SCAN name in case of a RAC database.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return The host name of the database or the SCAN name in case of a RAC database.
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * The list of host names of the ASM instances.
     * 
     */
    @Import(name="hosts")
    private @Nullable Output<List<String>> hosts;

    /**
     * @return The list of host names of the ASM instances.
     * 
     */
    public Optional<Output<List<String>>> hosts() {
        return Optional.ofNullable(this.hosts);
    }

    /**
     * The port used to connect to the ASM instance.
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The port used to connect to the ASM instance.
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The protocol used to connect to the ASM instance.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return The protocol used to connect to the ASM instance.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * The service name of the ASM instance.
     * 
     */
    @Import(name="service")
    private @Nullable Output<String> service;

    /**
     * @return The service name of the ASM instance.
     * 
     */
    public Optional<Output<String>> service() {
        return Optional.ofNullable(this.service);
    }

    private CloudDbSystemConnectorConnectionInfoConnectionStringArgs() {}

    private CloudDbSystemConnectorConnectionInfoConnectionStringArgs(CloudDbSystemConnectorConnectionInfoConnectionStringArgs $) {
        this.hostName = $.hostName;
        this.hosts = $.hosts;
        this.port = $.port;
        this.protocol = $.protocol;
        this.service = $.service;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudDbSystemConnectorConnectionInfoConnectionStringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudDbSystemConnectorConnectionInfoConnectionStringArgs $;

        public Builder() {
            $ = new CloudDbSystemConnectorConnectionInfoConnectionStringArgs();
        }

        public Builder(CloudDbSystemConnectorConnectionInfoConnectionStringArgs defaults) {
            $ = new CloudDbSystemConnectorConnectionInfoConnectionStringArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostName The host name of the database or the SCAN name in case of a RAC database.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName The host name of the database or the SCAN name in case of a RAC database.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param hosts The list of host names of the ASM instances.
         * 
         * @return builder
         * 
         */
        public Builder hosts(@Nullable Output<List<String>> hosts) {
            $.hosts = hosts;
            return this;
        }

        /**
         * @param hosts The list of host names of the ASM instances.
         * 
         * @return builder
         * 
         */
        public Builder hosts(List<String> hosts) {
            return hosts(Output.of(hosts));
        }

        /**
         * @param hosts The list of host names of the ASM instances.
         * 
         * @return builder
         * 
         */
        public Builder hosts(String... hosts) {
            return hosts(List.of(hosts));
        }

        /**
         * @param port The port used to connect to the ASM instance.
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port used to connect to the ASM instance.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param protocol The protocol used to connect to the ASM instance.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The protocol used to connect to the ASM instance.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param service The service name of the ASM instance.
         * 
         * @return builder
         * 
         */
        public Builder service(@Nullable Output<String> service) {
            $.service = service;
            return this;
        }

        /**
         * @param service The service name of the ASM instance.
         * 
         * @return builder
         * 
         */
        public Builder service(String service) {
            return service(Output.of(service));
        }

        public CloudDbSystemConnectorConnectionInfoConnectionStringArgs build() {
            return $;
        }
    }

}
