// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs Empty = new CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs();

    /**
     * The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
     * 
     */
    @Import(name="adrHomeDirectory")
    private @Nullable Output<String> adrHomeDirectory;

    /**
     * @return The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
     * 
     */
    public Optional<Output<String>> adrHomeDirectory() {
        return Optional.ofNullable(this.adrHomeDirectory);
    }

    /**
     * The unique identifier of the Oracle cluster.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The unique identifier of the Oracle cluster.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * The connector details used to connect to the cloud DB system component.
     * 
     */
    @Import(name="connectors")
    private @Nullable Output<List<CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorArgs>> connectors;

    /**
     * @return The connector details used to connect to the cloud DB system component.
     * 
     */
    public Optional<Output<List<CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorArgs>>> connectors() {
        return Optional.ofNullable(this.connectors);
    }

    /**
     * The Oracle base location of Cluster Ready Services (CRS).
     * 
     */
    @Import(name="crsBaseDirectory")
    private @Nullable Output<String> crsBaseDirectory;

    /**
     * @return The Oracle base location of Cluster Ready Services (CRS).
     * 
     */
    public Optional<Output<String>> crsBaseDirectory() {
        return Optional.ofNullable(this.crsBaseDirectory);
    }

    /**
     * The host name of the database or the SCAN name in case of a RAC database.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return The host name of the database or the SCAN name in case of a RAC database.
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * The role of the cluster node.
     * 
     */
    @Import(name="nodeRole")
    private @Nullable Output<String> nodeRole;

    /**
     * @return The role of the cluster node.
     * 
     */
    public Optional<Output<String>> nodeRole() {
        return Optional.ofNullable(this.nodeRole);
    }

    private CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs() {}

    private CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs(CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs $) {
        this.adrHomeDirectory = $.adrHomeDirectory;
        this.clusterId = $.clusterId;
        this.connectors = $.connectors;
        this.crsBaseDirectory = $.crsBaseDirectory;
        this.hostName = $.hostName;
        this.nodeRole = $.nodeRole;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs $;

        public Builder() {
            $ = new CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs();
        }

        public Builder(CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs defaults) {
            $ = new CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adrHomeDirectory The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
         * 
         * @return builder
         * 
         */
        public Builder adrHomeDirectory(@Nullable Output<String> adrHomeDirectory) {
            $.adrHomeDirectory = adrHomeDirectory;
            return this;
        }

        /**
         * @param adrHomeDirectory The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
         * 
         * @return builder
         * 
         */
        public Builder adrHomeDirectory(String adrHomeDirectory) {
            return adrHomeDirectory(Output.of(adrHomeDirectory));
        }

        /**
         * @param clusterId The unique identifier of the Oracle cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The unique identifier of the Oracle cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param connectors The connector details used to connect to the cloud DB system component.
         * 
         * @return builder
         * 
         */
        public Builder connectors(@Nullable Output<List<CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorArgs>> connectors) {
            $.connectors = connectors;
            return this;
        }

        /**
         * @param connectors The connector details used to connect to the cloud DB system component.
         * 
         * @return builder
         * 
         */
        public Builder connectors(List<CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorArgs> connectors) {
            return connectors(Output.of(connectors));
        }

        /**
         * @param connectors The connector details used to connect to the cloud DB system component.
         * 
         * @return builder
         * 
         */
        public Builder connectors(CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceConnectorArgs... connectors) {
            return connectors(List.of(connectors));
        }

        /**
         * @param crsBaseDirectory The Oracle base location of Cluster Ready Services (CRS).
         * 
         * @return builder
         * 
         */
        public Builder crsBaseDirectory(@Nullable Output<String> crsBaseDirectory) {
            $.crsBaseDirectory = crsBaseDirectory;
            return this;
        }

        /**
         * @param crsBaseDirectory The Oracle base location of Cluster Ready Services (CRS).
         * 
         * @return builder
         * 
         */
        public Builder crsBaseDirectory(String crsBaseDirectory) {
            return crsBaseDirectory(Output.of(crsBaseDirectory));
        }

        /**
         * @param hostName The host name of the database or the SCAN name in case of a RAC database.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName The host name of the database or the SCAN name in case of a RAC database.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param nodeRole The role of the cluster node.
         * 
         * @return builder
         * 
         */
        public Builder nodeRole(@Nullable Output<String> nodeRole) {
            $.nodeRole = nodeRole;
            return this;
        }

        /**
         * @param nodeRole The role of the cluster node.
         * 
         * @return builder
         * 
         */
        public Builder nodeRole(String nodeRole) {
            return nodeRole(Output.of(nodeRole));
        }

        public CloudDbSystemDiscoveryDiscoveredComponentClusterInstanceArgs build() {
            return $;
        }
    }

}
