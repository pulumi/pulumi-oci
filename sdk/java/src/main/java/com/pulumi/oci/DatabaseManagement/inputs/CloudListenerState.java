// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.CloudListenerEndpointArgs;
import com.pulumi.oci.DatabaseManagement.inputs.CloudListenerServicedAsmArgs;
import com.pulumi.oci.DatabaseManagement.inputs.CloudListenerServicedDatabaseArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudListenerState extends com.pulumi.resources.ResourceArgs {

    public static final CloudListenerState Empty = new CloudListenerState();

    /**
     * The additional details of the cloud listener defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="additionalDetails")
    private @Nullable Output<Map<String,String>> additionalDetails;

    /**
     * @return The additional details of the cloud listener defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> additionalDetails() {
        return Optional.ofNullable(this.additionalDetails);
    }

    /**
     * The directory that stores tracing and logging incidents when Automatic Diagnostic Repository (ADR) is enabled.
     * 
     */
    @Import(name="adrHomeDirectory")
    private @Nullable Output<String> adrHomeDirectory;

    /**
     * @return The directory that stores tracing and logging incidents when Automatic Diagnostic Repository (ADR) is enabled.
     * 
     */
    public Optional<Output<String>> adrHomeDirectory() {
        return Optional.ofNullable(this.adrHomeDirectory);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud connector.
     * 
     */
    @Import(name="cloudConnectorId")
    private @Nullable Output<String> cloudConnectorId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud connector.
     * 
     */
    public Optional<Output<String>> cloudConnectorId() {
        return Optional.ofNullable(this.cloudConnectorId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB home.
     * 
     */
    @Import(name="cloudDbHomeId")
    private @Nullable Output<String> cloudDbHomeId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB home.
     * 
     */
    public Optional<Output<String>> cloudDbHomeId() {
        return Optional.ofNullable(this.cloudDbHomeId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB node.
     * 
     */
    @Import(name="cloudDbNodeId")
    private @Nullable Output<String> cloudDbNodeId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB node.
     * 
     */
    public Optional<Output<String>> cloudDbNodeId() {
        return Optional.ofNullable(this.cloudDbNodeId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB system that the listener is a part of.
     * 
     */
    @Import(name="cloudDbSystemId")
    private @Nullable Output<String> cloudDbSystemId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB system that the listener is a part of.
     * 
     */
    public Optional<Output<String>> cloudDbSystemId() {
        return Optional.ofNullable(this.cloudDbSystemId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud listener.
     * 
     */
    @Import(name="cloudListenerId")
    private @Nullable Output<String> cloudListenerId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud listener.
     * 
     */
    public Optional<Output<String>> cloudListenerId() {
        return Optional.ofNullable(this.cloudListenerId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the cloud database resides.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the cloud database resides.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The name of the cloud listener.
     * 
     */
    @Import(name="componentName")
    private @Nullable Output<String> componentName;

    /**
     * @return The name of the cloud listener.
     * 
     */
    public Optional<Output<String>> componentName() {
        return Optional.ofNullable(this.componentName);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the existing Dbaas Oracle Cloud Infrastructure resource matching the discovered DB system component.
     * 
     */
    @Import(name="dbaasId")
    private @Nullable Output<String> dbaasId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the existing Dbaas Oracle Cloud Infrastructure resource matching the discovered DB system component.
     * 
     */
    public Optional<Output<String>> dbaasId() {
        return Optional.ofNullable(this.dbaasId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The user-friendly name for the database. The name does not have to be unique.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The user-friendly name for the database. The name does not have to be unique.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The list of protocol addresses the listener is configured to listen on.
     * 
     */
    @Import(name="endpoints")
    private @Nullable Output<List<CloudListenerEndpointArgs>> endpoints;

    /**
     * @return The list of protocol addresses the listener is configured to listen on.
     * 
     */
    public Optional<Output<List<CloudListenerEndpointArgs>>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The name of the host on which the cloud listener is running.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return The name of the host on which the cloud listener is running.
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * Additional information about the current lifecycle state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The listener alias.
     * 
     */
    @Import(name="listenerAlias")
    private @Nullable Output<String> listenerAlias;

    /**
     * @return The listener alias.
     * 
     */
    public Optional<Output<String>> listenerAlias() {
        return Optional.ofNullable(this.listenerAlias);
    }

    /**
     * The location of the listener configuration file listener.ora.
     * 
     */
    @Import(name="listenerOraLocation")
    private @Nullable Output<String> listenerOraLocation;

    /**
     * @return The location of the listener configuration file listener.ora.
     * 
     */
    public Optional<Output<String>> listenerOraLocation() {
        return Optional.ofNullable(this.listenerOraLocation);
    }

    /**
     * The type of listener.
     * 
     */
    @Import(name="listenerType")
    private @Nullable Output<String> listenerType;

    /**
     * @return The type of listener.
     * 
     */
    public Optional<Output<String>> listenerType() {
        return Optional.ofNullable(this.listenerType);
    }

    /**
     * The destination directory of the listener log file.
     * 
     */
    @Import(name="logDirectory")
    private @Nullable Output<String> logDirectory;

    /**
     * @return The destination directory of the listener log file.
     * 
     */
    public Optional<Output<String>> logDirectory() {
        return Optional.ofNullable(this.logDirectory);
    }

    /**
     * The Oracle home location of the listener.
     * 
     */
    @Import(name="oracleHome")
    private @Nullable Output<String> oracleHome;

    /**
     * @return The Oracle home location of the listener.
     * 
     */
    public Optional<Output<String>> oracleHome() {
        return Optional.ofNullable(this.oracleHome);
    }

    /**
     * The list of ASMs that are serviced by the listener.
     * 
     */
    @Import(name="servicedAsms")
    private @Nullable Output<List<CloudListenerServicedAsmArgs>> servicedAsms;

    /**
     * @return The list of ASMs that are serviced by the listener.
     * 
     */
    public Optional<Output<List<CloudListenerServicedAsmArgs>>> servicedAsms() {
        return Optional.ofNullable(this.servicedAsms);
    }

    /**
     * The list of databases that are serviced by the listener.
     * 
     */
    @Import(name="servicedDatabases")
    private @Nullable Output<List<CloudListenerServicedDatabaseArgs>> servicedDatabases;

    /**
     * @return The list of databases that are serviced by the listener.
     * 
     */
    public Optional<Output<List<CloudListenerServicedDatabaseArgs>>> servicedDatabases() {
        return Optional.ofNullable(this.servicedDatabases);
    }

    /**
     * The current lifecycle state of the cloud listener.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current lifecycle state of the cloud listener.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The date and time the cloud listener was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the cloud listener was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the cloud listener was last updated.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the cloud listener was last updated.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The destination directory of the listener trace file.
     * 
     */
    @Import(name="traceDirectory")
    private @Nullable Output<String> traceDirectory;

    /**
     * @return The destination directory of the listener trace file.
     * 
     */
    public Optional<Output<String>> traceDirectory() {
        return Optional.ofNullable(this.traceDirectory);
    }

    /**
     * The listener version.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The listener version.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private CloudListenerState() {}

    private CloudListenerState(CloudListenerState $) {
        this.additionalDetails = $.additionalDetails;
        this.adrHomeDirectory = $.adrHomeDirectory;
        this.cloudConnectorId = $.cloudConnectorId;
        this.cloudDbHomeId = $.cloudDbHomeId;
        this.cloudDbNodeId = $.cloudDbNodeId;
        this.cloudDbSystemId = $.cloudDbSystemId;
        this.cloudListenerId = $.cloudListenerId;
        this.compartmentId = $.compartmentId;
        this.componentName = $.componentName;
        this.dbaasId = $.dbaasId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.endpoints = $.endpoints;
        this.freeformTags = $.freeformTags;
        this.hostName = $.hostName;
        this.lifecycleDetails = $.lifecycleDetails;
        this.listenerAlias = $.listenerAlias;
        this.listenerOraLocation = $.listenerOraLocation;
        this.listenerType = $.listenerType;
        this.logDirectory = $.logDirectory;
        this.oracleHome = $.oracleHome;
        this.servicedAsms = $.servicedAsms;
        this.servicedDatabases = $.servicedDatabases;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.traceDirectory = $.traceDirectory;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudListenerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudListenerState $;

        public Builder() {
            $ = new CloudListenerState();
        }

        public Builder(CloudListenerState defaults) {
            $ = new CloudListenerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalDetails The additional details of the cloud listener defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder additionalDetails(@Nullable Output<Map<String,String>> additionalDetails) {
            $.additionalDetails = additionalDetails;
            return this;
        }

        /**
         * @param additionalDetails The additional details of the cloud listener defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder additionalDetails(Map<String,String> additionalDetails) {
            return additionalDetails(Output.of(additionalDetails));
        }

        /**
         * @param adrHomeDirectory The directory that stores tracing and logging incidents when Automatic Diagnostic Repository (ADR) is enabled.
         * 
         * @return builder
         * 
         */
        public Builder adrHomeDirectory(@Nullable Output<String> adrHomeDirectory) {
            $.adrHomeDirectory = adrHomeDirectory;
            return this;
        }

        /**
         * @param adrHomeDirectory The directory that stores tracing and logging incidents when Automatic Diagnostic Repository (ADR) is enabled.
         * 
         * @return builder
         * 
         */
        public Builder adrHomeDirectory(String adrHomeDirectory) {
            return adrHomeDirectory(Output.of(adrHomeDirectory));
        }

        /**
         * @param cloudConnectorId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud connector.
         * 
         * @return builder
         * 
         */
        public Builder cloudConnectorId(@Nullable Output<String> cloudConnectorId) {
            $.cloudConnectorId = cloudConnectorId;
            return this;
        }

        /**
         * @param cloudConnectorId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud connector.
         * 
         * @return builder
         * 
         */
        public Builder cloudConnectorId(String cloudConnectorId) {
            return cloudConnectorId(Output.of(cloudConnectorId));
        }

        /**
         * @param cloudDbHomeId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB home.
         * 
         * @return builder
         * 
         */
        public Builder cloudDbHomeId(@Nullable Output<String> cloudDbHomeId) {
            $.cloudDbHomeId = cloudDbHomeId;
            return this;
        }

        /**
         * @param cloudDbHomeId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB home.
         * 
         * @return builder
         * 
         */
        public Builder cloudDbHomeId(String cloudDbHomeId) {
            return cloudDbHomeId(Output.of(cloudDbHomeId));
        }

        /**
         * @param cloudDbNodeId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB node.
         * 
         * @return builder
         * 
         */
        public Builder cloudDbNodeId(@Nullable Output<String> cloudDbNodeId) {
            $.cloudDbNodeId = cloudDbNodeId;
            return this;
        }

        /**
         * @param cloudDbNodeId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB node.
         * 
         * @return builder
         * 
         */
        public Builder cloudDbNodeId(String cloudDbNodeId) {
            return cloudDbNodeId(Output.of(cloudDbNodeId));
        }

        /**
         * @param cloudDbSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB system that the listener is a part of.
         * 
         * @return builder
         * 
         */
        public Builder cloudDbSystemId(@Nullable Output<String> cloudDbSystemId) {
            $.cloudDbSystemId = cloudDbSystemId;
            return this;
        }

        /**
         * @param cloudDbSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB system that the listener is a part of.
         * 
         * @return builder
         * 
         */
        public Builder cloudDbSystemId(String cloudDbSystemId) {
            return cloudDbSystemId(Output.of(cloudDbSystemId));
        }

        /**
         * @param cloudListenerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud listener.
         * 
         * @return builder
         * 
         */
        public Builder cloudListenerId(@Nullable Output<String> cloudListenerId) {
            $.cloudListenerId = cloudListenerId;
            return this;
        }

        /**
         * @param cloudListenerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud listener.
         * 
         * @return builder
         * 
         */
        public Builder cloudListenerId(String cloudListenerId) {
            return cloudListenerId(Output.of(cloudListenerId));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the cloud database resides.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the cloud database resides.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param componentName The name of the cloud listener.
         * 
         * @return builder
         * 
         */
        public Builder componentName(@Nullable Output<String> componentName) {
            $.componentName = componentName;
            return this;
        }

        /**
         * @param componentName The name of the cloud listener.
         * 
         * @return builder
         * 
         */
        public Builder componentName(String componentName) {
            return componentName(Output.of(componentName));
        }

        /**
         * @param dbaasId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the existing Dbaas Oracle Cloud Infrastructure resource matching the discovered DB system component.
         * 
         * @return builder
         * 
         */
        public Builder dbaasId(@Nullable Output<String> dbaasId) {
            $.dbaasId = dbaasId;
            return this;
        }

        /**
         * @param dbaasId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the existing Dbaas Oracle Cloud Infrastructure resource matching the discovered DB system component.
         * 
         * @return builder
         * 
         */
        public Builder dbaasId(String dbaasId) {
            return dbaasId(Output.of(dbaasId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName The user-friendly name for the database. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The user-friendly name for the database. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param endpoints The list of protocol addresses the listener is configured to listen on.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(@Nullable Output<List<CloudListenerEndpointArgs>> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        /**
         * @param endpoints The list of protocol addresses the listener is configured to listen on.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(List<CloudListenerEndpointArgs> endpoints) {
            return endpoints(Output.of(endpoints));
        }

        /**
         * @param endpoints The list of protocol addresses the listener is configured to listen on.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(CloudListenerEndpointArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param hostName The name of the host on which the cloud listener is running.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName The name of the host on which the cloud listener is running.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param listenerAlias The listener alias.
         * 
         * @return builder
         * 
         */
        public Builder listenerAlias(@Nullable Output<String> listenerAlias) {
            $.listenerAlias = listenerAlias;
            return this;
        }

        /**
         * @param listenerAlias The listener alias.
         * 
         * @return builder
         * 
         */
        public Builder listenerAlias(String listenerAlias) {
            return listenerAlias(Output.of(listenerAlias));
        }

        /**
         * @param listenerOraLocation The location of the listener configuration file listener.ora.
         * 
         * @return builder
         * 
         */
        public Builder listenerOraLocation(@Nullable Output<String> listenerOraLocation) {
            $.listenerOraLocation = listenerOraLocation;
            return this;
        }

        /**
         * @param listenerOraLocation The location of the listener configuration file listener.ora.
         * 
         * @return builder
         * 
         */
        public Builder listenerOraLocation(String listenerOraLocation) {
            return listenerOraLocation(Output.of(listenerOraLocation));
        }

        /**
         * @param listenerType The type of listener.
         * 
         * @return builder
         * 
         */
        public Builder listenerType(@Nullable Output<String> listenerType) {
            $.listenerType = listenerType;
            return this;
        }

        /**
         * @param listenerType The type of listener.
         * 
         * @return builder
         * 
         */
        public Builder listenerType(String listenerType) {
            return listenerType(Output.of(listenerType));
        }

        /**
         * @param logDirectory The destination directory of the listener log file.
         * 
         * @return builder
         * 
         */
        public Builder logDirectory(@Nullable Output<String> logDirectory) {
            $.logDirectory = logDirectory;
            return this;
        }

        /**
         * @param logDirectory The destination directory of the listener log file.
         * 
         * @return builder
         * 
         */
        public Builder logDirectory(String logDirectory) {
            return logDirectory(Output.of(logDirectory));
        }

        /**
         * @param oracleHome The Oracle home location of the listener.
         * 
         * @return builder
         * 
         */
        public Builder oracleHome(@Nullable Output<String> oracleHome) {
            $.oracleHome = oracleHome;
            return this;
        }

        /**
         * @param oracleHome The Oracle home location of the listener.
         * 
         * @return builder
         * 
         */
        public Builder oracleHome(String oracleHome) {
            return oracleHome(Output.of(oracleHome));
        }

        /**
         * @param servicedAsms The list of ASMs that are serviced by the listener.
         * 
         * @return builder
         * 
         */
        public Builder servicedAsms(@Nullable Output<List<CloudListenerServicedAsmArgs>> servicedAsms) {
            $.servicedAsms = servicedAsms;
            return this;
        }

        /**
         * @param servicedAsms The list of ASMs that are serviced by the listener.
         * 
         * @return builder
         * 
         */
        public Builder servicedAsms(List<CloudListenerServicedAsmArgs> servicedAsms) {
            return servicedAsms(Output.of(servicedAsms));
        }

        /**
         * @param servicedAsms The list of ASMs that are serviced by the listener.
         * 
         * @return builder
         * 
         */
        public Builder servicedAsms(CloudListenerServicedAsmArgs... servicedAsms) {
            return servicedAsms(List.of(servicedAsms));
        }

        /**
         * @param servicedDatabases The list of databases that are serviced by the listener.
         * 
         * @return builder
         * 
         */
        public Builder servicedDatabases(@Nullable Output<List<CloudListenerServicedDatabaseArgs>> servicedDatabases) {
            $.servicedDatabases = servicedDatabases;
            return this;
        }

        /**
         * @param servicedDatabases The list of databases that are serviced by the listener.
         * 
         * @return builder
         * 
         */
        public Builder servicedDatabases(List<CloudListenerServicedDatabaseArgs> servicedDatabases) {
            return servicedDatabases(Output.of(servicedDatabases));
        }

        /**
         * @param servicedDatabases The list of databases that are serviced by the listener.
         * 
         * @return builder
         * 
         */
        public Builder servicedDatabases(CloudListenerServicedDatabaseArgs... servicedDatabases) {
            return servicedDatabases(List.of(servicedDatabases));
        }

        /**
         * @param state The current lifecycle state of the cloud listener.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current lifecycle state of the cloud listener.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The date and time the cloud listener was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the cloud listener was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The date and time the cloud listener was last updated.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the cloud listener was last updated.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param traceDirectory The destination directory of the listener trace file.
         * 
         * @return builder
         * 
         */
        public Builder traceDirectory(@Nullable Output<String> traceDirectory) {
            $.traceDirectory = traceDirectory;
            return this;
        }

        /**
         * @param traceDirectory The destination directory of the listener trace file.
         * 
         * @return builder
         * 
         */
        public Builder traceDirectory(String traceDirectory) {
            return traceDirectory(Output.of(traceDirectory));
        }

        /**
         * @param version The listener version.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The listener version.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public CloudListenerState build() {
            return $;
        }
    }

}
