// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.DatabaseDbmFeaturesManagementFeatureDetailsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseDbmFeaturesManagementState extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseDbmFeaturesManagementState Empty = new DatabaseDbmFeaturesManagementState();

    @Import(name="canDisableAllPdbs")
    private @Nullable Output<Boolean> canDisableAllPdbs;

    public Optional<Output<Boolean>> canDisableAllPdbs() {
        return Optional.ofNullable(this.canDisableAllPdbs);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database.
     * 
     */
    @Import(name="databaseId")
    private @Nullable Output<String> databaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database.
     * 
     */
    public Optional<Output<String>> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }

    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="enableDatabaseDbmFeature")
    private @Nullable Output<Boolean> enableDatabaseDbmFeature;

    /**
     * @return (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Boolean>> enableDatabaseDbmFeature() {
        return Optional.ofNullable(this.enableDatabaseDbmFeature);
    }

    @Import(name="feature")
    private @Nullable Output<String> feature;

    public Optional<Output<String>> feature() {
        return Optional.ofNullable(this.feature);
    }

    /**
     * The details required to enable the specified Database Management feature.
     * 
     */
    @Import(name="featureDetails")
    private @Nullable Output<DatabaseDbmFeaturesManagementFeatureDetailsArgs> featureDetails;

    /**
     * @return The details required to enable the specified Database Management feature.
     * 
     */
    public Optional<Output<DatabaseDbmFeaturesManagementFeatureDetailsArgs>> featureDetails() {
        return Optional.ofNullable(this.featureDetails);
    }

    @Import(name="modifyDatabaseDbmFeature")
    private @Nullable Output<Boolean> modifyDatabaseDbmFeature;

    public Optional<Output<Boolean>> modifyDatabaseDbmFeature() {
        return Optional.ofNullable(this.modifyDatabaseDbmFeature);
    }

    private DatabaseDbmFeaturesManagementState() {}

    private DatabaseDbmFeaturesManagementState(DatabaseDbmFeaturesManagementState $) {
        this.canDisableAllPdbs = $.canDisableAllPdbs;
        this.databaseId = $.databaseId;
        this.enableDatabaseDbmFeature = $.enableDatabaseDbmFeature;
        this.feature = $.feature;
        this.featureDetails = $.featureDetails;
        this.modifyDatabaseDbmFeature = $.modifyDatabaseDbmFeature;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseDbmFeaturesManagementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseDbmFeaturesManagementState $;

        public Builder() {
            $ = new DatabaseDbmFeaturesManagementState();
        }

        public Builder(DatabaseDbmFeaturesManagementState defaults) {
            $ = new DatabaseDbmFeaturesManagementState(Objects.requireNonNull(defaults));
        }

        public Builder canDisableAllPdbs(@Nullable Output<Boolean> canDisableAllPdbs) {
            $.canDisableAllPdbs = canDisableAllPdbs;
            return this;
        }

        public Builder canDisableAllPdbs(Boolean canDisableAllPdbs) {
            return canDisableAllPdbs(Output.of(canDisableAllPdbs));
        }

        /**
         * @param databaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(@Nullable Output<String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        /**
         * @param enableDatabaseDbmFeature (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enableDatabaseDbmFeature(@Nullable Output<Boolean> enableDatabaseDbmFeature) {
            $.enableDatabaseDbmFeature = enableDatabaseDbmFeature;
            return this;
        }

        /**
         * @param enableDatabaseDbmFeature (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enableDatabaseDbmFeature(Boolean enableDatabaseDbmFeature) {
            return enableDatabaseDbmFeature(Output.of(enableDatabaseDbmFeature));
        }

        public Builder feature(@Nullable Output<String> feature) {
            $.feature = feature;
            return this;
        }

        public Builder feature(String feature) {
            return feature(Output.of(feature));
        }

        /**
         * @param featureDetails The details required to enable the specified Database Management feature.
         * 
         * @return builder
         * 
         */
        public Builder featureDetails(@Nullable Output<DatabaseDbmFeaturesManagementFeatureDetailsArgs> featureDetails) {
            $.featureDetails = featureDetails;
            return this;
        }

        /**
         * @param featureDetails The details required to enable the specified Database Management feature.
         * 
         * @return builder
         * 
         */
        public Builder featureDetails(DatabaseDbmFeaturesManagementFeatureDetailsArgs featureDetails) {
            return featureDetails(Output.of(featureDetails));
        }

        public Builder modifyDatabaseDbmFeature(@Nullable Output<Boolean> modifyDatabaseDbmFeature) {
            $.modifyDatabaseDbmFeature = modifyDatabaseDbmFeature;
            return this;
        }

        public Builder modifyDatabaseDbmFeature(Boolean modifyDatabaseDbmFeature) {
            return modifyDatabaseDbmFeature(Output.of(modifyDatabaseDbmFeature));
        }

        public DatabaseDbmFeaturesManagementState build() {
            return $;
        }
    }

}
