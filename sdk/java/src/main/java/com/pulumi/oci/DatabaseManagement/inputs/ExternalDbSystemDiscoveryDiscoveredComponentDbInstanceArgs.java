// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs Empty = new ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs();

    /**
     * The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
     * 
     */
    @Import(name="adrHomeDirectory")
    private @Nullable Output<String> adrHomeDirectory;

    /**
     * @return The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
     * 
     */
    public Optional<Output<String>> adrHomeDirectory() {
        return Optional.ofNullable(this.adrHomeDirectory);
    }

    /**
     * The host name of the database or the SCAN name in case of a RAC database.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return The host name of the database or the SCAN name in case of a RAC database.
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * The name of the ASM instance.
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return The name of the ASM instance.
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * The name of the node with the VIP.
     * 
     */
    @Import(name="nodeName")
    private @Nullable Output<String> nodeName;

    /**
     * @return The name of the node with the VIP.
     * 
     */
    public Optional<Output<String>> nodeName() {
        return Optional.ofNullable(this.nodeName);
    }

    /**
     * The Oracle home location of the DB instance.
     * 
     */
    @Import(name="oracleHome")
    private @Nullable Output<String> oracleHome;

    /**
     * @return The Oracle home location of the DB instance.
     * 
     */
    public Optional<Output<String>> oracleHome() {
        return Optional.ofNullable(this.oracleHome);
    }

    private ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs() {}

    private ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs(ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs $) {
        this.adrHomeDirectory = $.adrHomeDirectory;
        this.hostName = $.hostName;
        this.instanceName = $.instanceName;
        this.nodeName = $.nodeName;
        this.oracleHome = $.oracleHome;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs $;

        public Builder() {
            $ = new ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs();
        }

        public Builder(ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs defaults) {
            $ = new ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adrHomeDirectory The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
         * 
         * @return builder
         * 
         */
        public Builder adrHomeDirectory(@Nullable Output<String> adrHomeDirectory) {
            $.adrHomeDirectory = adrHomeDirectory;
            return this;
        }

        /**
         * @param adrHomeDirectory The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
         * 
         * @return builder
         * 
         */
        public Builder adrHomeDirectory(String adrHomeDirectory) {
            return adrHomeDirectory(Output.of(adrHomeDirectory));
        }

        /**
         * @param hostName The host name of the database or the SCAN name in case of a RAC database.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName The host name of the database or the SCAN name in case of a RAC database.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param instanceName The name of the ASM instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName The name of the ASM instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param nodeName The name of the node with the VIP.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(@Nullable Output<String> nodeName) {
            $.nodeName = nodeName;
            return this;
        }

        /**
         * @param nodeName The name of the node with the VIP.
         * 
         * @return builder
         * 
         */
        public Builder nodeName(String nodeName) {
            return nodeName(Output.of(nodeName));
        }

        /**
         * @param oracleHome The Oracle home location of the DB instance.
         * 
         * @return builder
         * 
         */
        public Builder oracleHome(@Nullable Output<String> oracleHome) {
            $.oracleHome = oracleHome;
            return this;
        }

        /**
         * @param oracleHome The Oracle home location of the DB instance.
         * 
         * @return builder
         * 
         */
        public Builder oracleHome(String oracleHome) {
            return oracleHome(Output.of(oracleHome));
        }

        public ExternalDbSystemDiscoveryDiscoveredComponentDbInstanceArgs build() {
            return $;
        }
    }

}
