// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.ExternalExadataStorageServerConnectorArgs;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExternalExadataStorageServerState extends com.pulumi.resources.ResourceArgs {

    public static final ExternalExadataStorageServerState Empty = new ExternalExadataStorageServerState();

    /**
     * The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="additionalDetails")
    private @Nullable Output<Map<String,String>> additionalDetails;

    /**
     * @return The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> additionalDetails() {
        return Optional.ofNullable(this.additionalDetails);
    }

    /**
     * The connector of the Exadata storage server.
     * 
     */
    @Import(name="connectors")
    private @Nullable Output<List<ExternalExadataStorageServerConnectorArgs>> connectors;

    /**
     * @return The connector of the Exadata storage server.
     * 
     */
    public Optional<Output<List<ExternalExadataStorageServerConnectorArgs>>> connectors() {
        return Optional.ofNullable(this.connectors);
    }

    /**
     * The CPU count of the Exadata storage server.
     * 
     */
    @Import(name="cpuCount")
    private @Nullable Output<Double> cpuCount;

    /**
     * @return The CPU count of the Exadata storage server.
     * 
     */
    public Optional<Output<Double>> cpuCount() {
        return Optional.ofNullable(this.cpuCount);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The name of the Exadata resource. English letters, numbers, &#34;-&#34;, &#34;_&#34; and &#34;.&#34; only.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The name of the Exadata resource. English letters, numbers, &#34;-&#34;, &#34;_&#34; and &#34;.&#34; only.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    @Import(name="exadataInfrastructureId")
    private @Nullable Output<String> exadataInfrastructureId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> exadataInfrastructureId() {
        return Optional.ofNullable(this.exadataInfrastructureId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
     * 
     */
    @Import(name="externalExadataStorageServerId")
    private @Nullable Output<String> externalExadataStorageServerId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
     * 
     */
    public Optional<Output<String>> externalExadataStorageServerId() {
        return Optional.ofNullable(this.externalExadataStorageServerId);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The internal ID of the Exadata resource.
     * 
     */
    @Import(name="internalId")
    private @Nullable Output<String> internalId;

    /**
     * @return The internal ID of the Exadata resource.
     * 
     */
    public Optional<Output<String>> internalId() {
        return Optional.ofNullable(this.internalId);
    }

    /**
     * The IP address of the Exadata storage server.
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return The IP address of the Exadata storage server.
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * The details of the lifecycle state of the Exadata resource.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return The details of the lifecycle state of the Exadata resource.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The make model of the Exadata storage server.
     * 
     */
    @Import(name="makeModel")
    private @Nullable Output<String> makeModel;

    /**
     * @return The make model of the Exadata storage server.
     * 
     */
    public Optional<Output<String>> makeModel() {
        return Optional.ofNullable(this.makeModel);
    }

    /**
     * The maximum flash disk IO operations per second of the Exadata storage server.
     * 
     */
    @Import(name="maxFlashDiskIops")
    private @Nullable Output<Integer> maxFlashDiskIops;

    /**
     * @return The maximum flash disk IO operations per second of the Exadata storage server.
     * 
     */
    public Optional<Output<Integer>> maxFlashDiskIops() {
        return Optional.ofNullable(this.maxFlashDiskIops);
    }

    /**
     * The maximum flash disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    @Import(name="maxFlashDiskThroughput")
    private @Nullable Output<Integer> maxFlashDiskThroughput;

    /**
     * @return The maximum flash disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    public Optional<Output<Integer>> maxFlashDiskThroughput() {
        return Optional.ofNullable(this.maxFlashDiskThroughput);
    }

    /**
     * The maximum hard disk IO operations per second of the Exadata storage server.
     * 
     */
    @Import(name="maxHardDiskIops")
    private @Nullable Output<Integer> maxHardDiskIops;

    /**
     * @return The maximum hard disk IO operations per second of the Exadata storage server.
     * 
     */
    public Optional<Output<Integer>> maxHardDiskIops() {
        return Optional.ofNullable(this.maxHardDiskIops);
    }

    /**
     * The maximum hard disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    @Import(name="maxHardDiskThroughput")
    private @Nullable Output<Integer> maxHardDiskThroughput;

    /**
     * @return The maximum hard disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    public Optional<Output<Integer>> maxHardDiskThroughput() {
        return Optional.ofNullable(this.maxHardDiskThroughput);
    }

    /**
     * The Exadata storage server memory size in GB.
     * 
     */
    @Import(name="memoryGb")
    private @Nullable Output<Double> memoryGb;

    /**
     * @return The Exadata storage server memory size in GB.
     * 
     */
    public Optional<Output<Double>> memoryGb() {
        return Optional.ofNullable(this.memoryGb);
    }

    /**
     * The type of Exadata resource.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The type of Exadata resource.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * The current lifecycle state of the database resource.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current lifecycle state of the database resource.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The status of the Exadata resource.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The status of the Exadata resource.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server grid.
     * 
     */
    @Import(name="storageGridId")
    private @Nullable Output<String> storageGridId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server grid.
     * 
     */
    public Optional<Output<String>> storageGridId() {
        return Optional.ofNullable(this.storageGridId);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The timestamp of the creation of the Exadata resource.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The timestamp of the creation of the Exadata resource.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The timestamp of the last update of the Exadata resource.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The timestamp of the last update of the Exadata resource.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The version of the Exadata resource.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The version of the Exadata resource.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ExternalExadataStorageServerState() {}

    private ExternalExadataStorageServerState(ExternalExadataStorageServerState $) {
        this.additionalDetails = $.additionalDetails;
        this.connectors = $.connectors;
        this.cpuCount = $.cpuCount;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.exadataInfrastructureId = $.exadataInfrastructureId;
        this.externalExadataStorageServerId = $.externalExadataStorageServerId;
        this.freeformTags = $.freeformTags;
        this.internalId = $.internalId;
        this.ipAddress = $.ipAddress;
        this.lifecycleDetails = $.lifecycleDetails;
        this.makeModel = $.makeModel;
        this.maxFlashDiskIops = $.maxFlashDiskIops;
        this.maxFlashDiskThroughput = $.maxFlashDiskThroughput;
        this.maxHardDiskIops = $.maxHardDiskIops;
        this.maxHardDiskThroughput = $.maxHardDiskThroughput;
        this.memoryGb = $.memoryGb;
        this.resourceType = $.resourceType;
        this.state = $.state;
        this.status = $.status;
        this.storageGridId = $.storageGridId;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalExadataStorageServerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalExadataStorageServerState $;

        public Builder() {
            $ = new ExternalExadataStorageServerState();
        }

        public Builder(ExternalExadataStorageServerState defaults) {
            $ = new ExternalExadataStorageServerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalDetails The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder additionalDetails(@Nullable Output<Map<String,String>> additionalDetails) {
            $.additionalDetails = additionalDetails;
            return this;
        }

        /**
         * @param additionalDetails The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder additionalDetails(Map<String,String> additionalDetails) {
            return additionalDetails(Output.of(additionalDetails));
        }

        /**
         * @param connectors The connector of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder connectors(@Nullable Output<List<ExternalExadataStorageServerConnectorArgs>> connectors) {
            $.connectors = connectors;
            return this;
        }

        /**
         * @param connectors The connector of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder connectors(List<ExternalExadataStorageServerConnectorArgs> connectors) {
            return connectors(Output.of(connectors));
        }

        /**
         * @param connectors The connector of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder connectors(ExternalExadataStorageServerConnectorArgs... connectors) {
            return connectors(List.of(connectors));
        }

        /**
         * @param cpuCount The CPU count of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder cpuCount(@Nullable Output<Double> cpuCount) {
            $.cpuCount = cpuCount;
            return this;
        }

        /**
         * @param cpuCount The CPU count of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder cpuCount(Double cpuCount) {
            return cpuCount(Output.of(cpuCount));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName The name of the Exadata resource. English letters, numbers, &#34;-&#34;, &#34;_&#34; and &#34;.&#34; only.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The name of the Exadata resource. English letters, numbers, &#34;-&#34;, &#34;_&#34; and &#34;.&#34; only.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param exadataInfrastructureId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder exadataInfrastructureId(@Nullable Output<String> exadataInfrastructureId) {
            $.exadataInfrastructureId = exadataInfrastructureId;
            return this;
        }

        /**
         * @param exadataInfrastructureId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder exadataInfrastructureId(String exadataInfrastructureId) {
            return exadataInfrastructureId(Output.of(exadataInfrastructureId));
        }

        /**
         * @param externalExadataStorageServerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder externalExadataStorageServerId(@Nullable Output<String> externalExadataStorageServerId) {
            $.externalExadataStorageServerId = externalExadataStorageServerId;
            return this;
        }

        /**
         * @param externalExadataStorageServerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder externalExadataStorageServerId(String externalExadataStorageServerId) {
            return externalExadataStorageServerId(Output.of(externalExadataStorageServerId));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param internalId The internal ID of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder internalId(@Nullable Output<String> internalId) {
            $.internalId = internalId;
            return this;
        }

        /**
         * @param internalId The internal ID of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder internalId(String internalId) {
            return internalId(Output.of(internalId));
        }

        /**
         * @param ipAddress The IP address of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress The IP address of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param lifecycleDetails The details of the lifecycle state of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails The details of the lifecycle state of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param makeModel The make model of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder makeModel(@Nullable Output<String> makeModel) {
            $.makeModel = makeModel;
            return this;
        }

        /**
         * @param makeModel The make model of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder makeModel(String makeModel) {
            return makeModel(Output.of(makeModel));
        }

        /**
         * @param maxFlashDiskIops The maximum flash disk IO operations per second of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder maxFlashDiskIops(@Nullable Output<Integer> maxFlashDiskIops) {
            $.maxFlashDiskIops = maxFlashDiskIops;
            return this;
        }

        /**
         * @param maxFlashDiskIops The maximum flash disk IO operations per second of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder maxFlashDiskIops(Integer maxFlashDiskIops) {
            return maxFlashDiskIops(Output.of(maxFlashDiskIops));
        }

        /**
         * @param maxFlashDiskThroughput The maximum flash disk IO throughput in MB/s of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder maxFlashDiskThroughput(@Nullable Output<Integer> maxFlashDiskThroughput) {
            $.maxFlashDiskThroughput = maxFlashDiskThroughput;
            return this;
        }

        /**
         * @param maxFlashDiskThroughput The maximum flash disk IO throughput in MB/s of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder maxFlashDiskThroughput(Integer maxFlashDiskThroughput) {
            return maxFlashDiskThroughput(Output.of(maxFlashDiskThroughput));
        }

        /**
         * @param maxHardDiskIops The maximum hard disk IO operations per second of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder maxHardDiskIops(@Nullable Output<Integer> maxHardDiskIops) {
            $.maxHardDiskIops = maxHardDiskIops;
            return this;
        }

        /**
         * @param maxHardDiskIops The maximum hard disk IO operations per second of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder maxHardDiskIops(Integer maxHardDiskIops) {
            return maxHardDiskIops(Output.of(maxHardDiskIops));
        }

        /**
         * @param maxHardDiskThroughput The maximum hard disk IO throughput in MB/s of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder maxHardDiskThroughput(@Nullable Output<Integer> maxHardDiskThroughput) {
            $.maxHardDiskThroughput = maxHardDiskThroughput;
            return this;
        }

        /**
         * @param maxHardDiskThroughput The maximum hard disk IO throughput in MB/s of the Exadata storage server.
         * 
         * @return builder
         * 
         */
        public Builder maxHardDiskThroughput(Integer maxHardDiskThroughput) {
            return maxHardDiskThroughput(Output.of(maxHardDiskThroughput));
        }

        /**
         * @param memoryGb The Exadata storage server memory size in GB.
         * 
         * @return builder
         * 
         */
        public Builder memoryGb(@Nullable Output<Double> memoryGb) {
            $.memoryGb = memoryGb;
            return this;
        }

        /**
         * @param memoryGb The Exadata storage server memory size in GB.
         * 
         * @return builder
         * 
         */
        public Builder memoryGb(Double memoryGb) {
            return memoryGb(Output.of(memoryGb));
        }

        /**
         * @param resourceType The type of Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The type of Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param state The current lifecycle state of the database resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current lifecycle state of the database resource.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param status The status of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param storageGridId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server grid.
         * 
         * @return builder
         * 
         */
        public Builder storageGridId(@Nullable Output<String> storageGridId) {
            $.storageGridId = storageGridId;
            return this;
        }

        /**
         * @param storageGridId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server grid.
         * 
         * @return builder
         * 
         */
        public Builder storageGridId(String storageGridId) {
            return storageGridId(Output.of(storageGridId));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The timestamp of the creation of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The timestamp of the creation of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The timestamp of the last update of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The timestamp of the last update of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param version The version of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the Exadata resource.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ExternalExadataStorageServerState build() {
            return $;
        }
    }

}
