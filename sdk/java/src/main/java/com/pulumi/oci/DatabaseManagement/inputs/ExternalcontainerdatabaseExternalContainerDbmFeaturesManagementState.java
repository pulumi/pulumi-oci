// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementFeatureDetailsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState extends com.pulumi.resources.ResourceArgs {

    public static final ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState Empty = new ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState();

    @Import(name="canDisableAllPdbs")
    private @Nullable Output<Boolean> canDisableAllPdbs;

    public Optional<Output<Boolean>> canDisableAllPdbs() {
        return Optional.ofNullable(this.canDisableAllPdbs);
    }

    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="enableExternalContainerDbmFeature")
    private @Nullable Output<Boolean> enableExternalContainerDbmFeature;

    /**
     * @return (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Boolean>> enableExternalContainerDbmFeature() {
        return Optional.ofNullable(this.enableExternalContainerDbmFeature);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external container database.
     * 
     */
    @Import(name="externalContainerDatabaseId")
    private @Nullable Output<String> externalContainerDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external container database.
     * 
     */
    public Optional<Output<String>> externalContainerDatabaseId() {
        return Optional.ofNullable(this.externalContainerDatabaseId);
    }

    @Import(name="feature")
    private @Nullable Output<String> feature;

    public Optional<Output<String>> feature() {
        return Optional.ofNullable(this.feature);
    }

    /**
     * The details required to enable the specified Database Management feature.
     * 
     */
    @Import(name="featureDetails")
    private @Nullable Output<ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementFeatureDetailsArgs> featureDetails;

    /**
     * @return The details required to enable the specified Database Management feature.
     * 
     */
    public Optional<Output<ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementFeatureDetailsArgs>> featureDetails() {
        return Optional.ofNullable(this.featureDetails);
    }

    private ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState() {}

    private ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState(ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState $) {
        this.canDisableAllPdbs = $.canDisableAllPdbs;
        this.enableExternalContainerDbmFeature = $.enableExternalContainerDbmFeature;
        this.externalContainerDatabaseId = $.externalContainerDatabaseId;
        this.feature = $.feature;
        this.featureDetails = $.featureDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState $;

        public Builder() {
            $ = new ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState();
        }

        public Builder(ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState defaults) {
            $ = new ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState(Objects.requireNonNull(defaults));
        }

        public Builder canDisableAllPdbs(@Nullable Output<Boolean> canDisableAllPdbs) {
            $.canDisableAllPdbs = canDisableAllPdbs;
            return this;
        }

        public Builder canDisableAllPdbs(Boolean canDisableAllPdbs) {
            return canDisableAllPdbs(Output.of(canDisableAllPdbs));
        }

        /**
         * @param enableExternalContainerDbmFeature (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enableExternalContainerDbmFeature(@Nullable Output<Boolean> enableExternalContainerDbmFeature) {
            $.enableExternalContainerDbmFeature = enableExternalContainerDbmFeature;
            return this;
        }

        /**
         * @param enableExternalContainerDbmFeature (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enableExternalContainerDbmFeature(Boolean enableExternalContainerDbmFeature) {
            return enableExternalContainerDbmFeature(Output.of(enableExternalContainerDbmFeature));
        }

        /**
         * @param externalContainerDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external container database.
         * 
         * @return builder
         * 
         */
        public Builder externalContainerDatabaseId(@Nullable Output<String> externalContainerDatabaseId) {
            $.externalContainerDatabaseId = externalContainerDatabaseId;
            return this;
        }

        /**
         * @param externalContainerDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external container database.
         * 
         * @return builder
         * 
         */
        public Builder externalContainerDatabaseId(String externalContainerDatabaseId) {
            return externalContainerDatabaseId(Output.of(externalContainerDatabaseId));
        }

        public Builder feature(@Nullable Output<String> feature) {
            $.feature = feature;
            return this;
        }

        public Builder feature(String feature) {
            return feature(Output.of(feature));
        }

        /**
         * @param featureDetails The details required to enable the specified Database Management feature.
         * 
         * @return builder
         * 
         */
        public Builder featureDetails(@Nullable Output<ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementFeatureDetailsArgs> featureDetails) {
            $.featureDetails = featureDetails;
            return this;
        }

        /**
         * @param featureDetails The details required to enable the specified Database Management feature.
         * 
         * @return builder
         * 
         */
        public Builder featureDetails(ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementFeatureDetailsArgs featureDetails) {
            return featureDetails(Output.of(featureDetails));
        }

        public ExternalcontainerdatabaseExternalContainerDbmFeaturesManagementState build() {
            return $;
        }
    }

}
