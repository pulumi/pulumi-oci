// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.inputs.ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsConnectorDetailsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs Empty = new ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs();

    /**
     * The connector details required to connect to an Oracle cloud database.
     * 
     */
    @Import(name="connectorDetails")
    private @Nullable Output<ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsConnectorDetailsArgs> connectorDetails;

    /**
     * @return The connector details required to connect to an Oracle cloud database.
     * 
     */
    public Optional<Output<ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsConnectorDetailsArgs>> connectorDetails() {
        return Optional.ofNullable(this.connectorDetails);
    }

    /**
     * The name of the Database Management feature.
     * 
     */
    @Import(name="feature", required=true)
    private Output<String> feature;

    /**
     * @return The name of the Database Management feature.
     * 
     */
    public Output<String> feature() {
        return this.feature;
    }

    private ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs() {}

    private ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs $) {
        this.connectorDetails = $.connectorDetails;
        this.feature = $.feature;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs $;

        public Builder() {
            $ = new ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs();
        }

        public Builder(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs defaults) {
            $ = new ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectorDetails The connector details required to connect to an Oracle cloud database.
         * 
         * @return builder
         * 
         */
        public Builder connectorDetails(@Nullable Output<ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsConnectorDetailsArgs> connectorDetails) {
            $.connectorDetails = connectorDetails;
            return this;
        }

        /**
         * @param connectorDetails The connector details required to connect to an Oracle cloud database.
         * 
         * @return builder
         * 
         */
        public Builder connectorDetails(ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsConnectorDetailsArgs connectorDetails) {
            return connectorDetails(Output.of(connectorDetails));
        }

        /**
         * @param feature The name of the Database Management feature.
         * 
         * @return builder
         * 
         */
        public Builder feature(Output<String> feature) {
            $.feature = feature;
            return this;
        }

        /**
         * @param feature The name of the Database Management feature.
         * 
         * @return builder
         * 
         */
        public Builder feature(String feature) {
            return feature(Output.of(feature));
        }

        public ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs build() {
            if ($.feature == null) {
                throw new MissingRequiredPropertyException("ExternalpluggabledatabaseExternalPluggableDbmFeaturesManagementFeatureDetailsArgs", "feature");
            }
            return $;
        }
    }

}
