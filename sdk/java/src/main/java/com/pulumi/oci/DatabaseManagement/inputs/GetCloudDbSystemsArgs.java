// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.inputs.GetCloudDbSystemsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudDbSystemsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudDbSystemsArgs Empty = new GetCloudDbSystemsArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dbaas parent infrastructure of the cloud DB system.
     * 
     */
    @Import(name="dbaasParentInfrastructureId")
    private @Nullable Output<String> dbaasParentInfrastructureId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dbaas parent infrastructure of the cloud DB system.
     * 
     */
    public Optional<Output<String>> dbaasParentInfrastructureId() {
        return Optional.ofNullable(this.dbaasParentInfrastructureId);
    }

    /**
     * A filter to return cloud DB systems of the specified deployment type.
     * 
     */
    @Import(name="deploymentType")
    private @Nullable Output<String> deploymentType;

    /**
     * @return A filter to return cloud DB systems of the specified deployment type.
     * 
     */
    public Optional<Output<String>> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }

    /**
     * A filter to only return the resources that match the entire display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetCloudDbSystemsFilterArgs>> filters;

    public Optional<Output<List<GetCloudDbSystemsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The lifecycle state of a resource.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The lifecycle state of a resource.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetCloudDbSystemsArgs() {}

    private GetCloudDbSystemsArgs(GetCloudDbSystemsArgs $) {
        this.compartmentId = $.compartmentId;
        this.dbaasParentInfrastructureId = $.dbaasParentInfrastructureId;
        this.deploymentType = $.deploymentType;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudDbSystemsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudDbSystemsArgs $;

        public Builder() {
            $ = new GetCloudDbSystemsArgs();
        }

        public Builder(GetCloudDbSystemsArgs defaults) {
            $ = new GetCloudDbSystemsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param dbaasParentInfrastructureId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dbaas parent infrastructure of the cloud DB system.
         * 
         * @return builder
         * 
         */
        public Builder dbaasParentInfrastructureId(@Nullable Output<String> dbaasParentInfrastructureId) {
            $.dbaasParentInfrastructureId = dbaasParentInfrastructureId;
            return this;
        }

        /**
         * @param dbaasParentInfrastructureId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the dbaas parent infrastructure of the cloud DB system.
         * 
         * @return builder
         * 
         */
        public Builder dbaasParentInfrastructureId(String dbaasParentInfrastructureId) {
            return dbaasParentInfrastructureId(Output.of(dbaasParentInfrastructureId));
        }

        /**
         * @param deploymentType A filter to return cloud DB systems of the specified deployment type.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(@Nullable Output<String> deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        /**
         * @param deploymentType A filter to return cloud DB systems of the specified deployment type.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(String deploymentType) {
            return deploymentType(Output.of(deploymentType));
        }

        /**
         * @param displayName A filter to only return the resources that match the entire display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to only return the resources that match the entire display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetCloudDbSystemsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetCloudDbSystemsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetCloudDbSystemsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state The lifecycle state of a resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The lifecycle state of a resource.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetCloudDbSystemsArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetCloudDbSystemsArgs", "compartmentId");
            }
            return $;
        }
    }

}
