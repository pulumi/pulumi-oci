// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.inputs.GetCloudListenerServicesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCloudListenerServicesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCloudListenerServicesArgs Empty = new GetCloudListenerServicesArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud listener.
     * 
     */
    @Import(name="cloudListenerId", required=true)
    private Output<String> cloudListenerId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud listener.
     * 
     */
    public Output<String> cloudListenerId() {
        return this.cloudListenerId;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetCloudListenerServicesFilterArgs>> filters;

    public Optional<Output<List<GetCloudListenerServicesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private Output<String> managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public Output<String> managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * The OCID of the Named Credential.
     * 
     */
    @Import(name="opcNamedCredentialId")
    private @Nullable Output<String> opcNamedCredentialId;

    /**
     * @return The OCID of the Named Credential.
     * 
     */
    public Optional<Output<String>> opcNamedCredentialId() {
        return Optional.ofNullable(this.opcNamedCredentialId);
    }

    private GetCloudListenerServicesArgs() {}

    private GetCloudListenerServicesArgs(GetCloudListenerServicesArgs $) {
        this.cloudListenerId = $.cloudListenerId;
        this.filters = $.filters;
        this.managedDatabaseId = $.managedDatabaseId;
        this.opcNamedCredentialId = $.opcNamedCredentialId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCloudListenerServicesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCloudListenerServicesArgs $;

        public Builder() {
            $ = new GetCloudListenerServicesArgs();
        }

        public Builder(GetCloudListenerServicesArgs defaults) {
            $ = new GetCloudListenerServicesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cloudListenerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud listener.
         * 
         * @return builder
         * 
         */
        public Builder cloudListenerId(Output<String> cloudListenerId) {
            $.cloudListenerId = cloudListenerId;
            return this;
        }

        /**
         * @param cloudListenerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud listener.
         * 
         * @return builder
         * 
         */
        public Builder cloudListenerId(String cloudListenerId) {
            return cloudListenerId(Output.of(cloudListenerId));
        }

        public Builder filters(@Nullable Output<List<GetCloudListenerServicesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetCloudListenerServicesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetCloudListenerServicesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(Output<String> managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            return managedDatabaseId(Output.of(managedDatabaseId));
        }

        /**
         * @param opcNamedCredentialId The OCID of the Named Credential.
         * 
         * @return builder
         * 
         */
        public Builder opcNamedCredentialId(@Nullable Output<String> opcNamedCredentialId) {
            $.opcNamedCredentialId = opcNamedCredentialId;
            return this;
        }

        /**
         * @param opcNamedCredentialId The OCID of the Named Credential.
         * 
         * @return builder
         * 
         */
        public Builder opcNamedCredentialId(String opcNamedCredentialId) {
            return opcNamedCredentialId(Output.of(opcNamedCredentialId));
        }

        public GetCloudListenerServicesArgs build() {
            if ($.cloudListenerId == null) {
                throw new MissingRequiredPropertyException("GetCloudListenerServicesArgs", "cloudListenerId");
            }
            if ($.managedDatabaseId == null) {
                throw new MissingRequiredPropertyException("GetCloudListenerServicesArgs", "managedDatabaseId");
            }
            return $;
        }
    }

}
