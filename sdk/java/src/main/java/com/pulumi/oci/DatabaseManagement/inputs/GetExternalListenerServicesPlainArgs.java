// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.inputs.GetExternalListenerServicesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetExternalListenerServicesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetExternalListenerServicesPlainArgs Empty = new GetExternalListenerServicesPlainArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external listener.
     * 
     */
    @Import(name="externalListenerId", required=true)
    private String externalListenerId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external listener.
     * 
     */
    public String externalListenerId() {
        return this.externalListenerId;
    }

    @Import(name="filters")
    private @Nullable List<GetExternalListenerServicesFilter> filters;

    public Optional<List<GetExternalListenerServicesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private String managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * The OCID of the Named Credential.
     * 
     */
    @Import(name="opcNamedCredentialId")
    private @Nullable String opcNamedCredentialId;

    /**
     * @return The OCID of the Named Credential.
     * 
     */
    public Optional<String> opcNamedCredentialId() {
        return Optional.ofNullable(this.opcNamedCredentialId);
    }

    private GetExternalListenerServicesPlainArgs() {}

    private GetExternalListenerServicesPlainArgs(GetExternalListenerServicesPlainArgs $) {
        this.externalListenerId = $.externalListenerId;
        this.filters = $.filters;
        this.managedDatabaseId = $.managedDatabaseId;
        this.opcNamedCredentialId = $.opcNamedCredentialId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetExternalListenerServicesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetExternalListenerServicesPlainArgs $;

        public Builder() {
            $ = new GetExternalListenerServicesPlainArgs();
        }

        public Builder(GetExternalListenerServicesPlainArgs defaults) {
            $ = new GetExternalListenerServicesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalListenerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external listener.
         * 
         * @return builder
         * 
         */
        public Builder externalListenerId(String externalListenerId) {
            $.externalListenerId = externalListenerId;
            return this;
        }

        public Builder filters(@Nullable List<GetExternalListenerServicesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetExternalListenerServicesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param opcNamedCredentialId The OCID of the Named Credential.
         * 
         * @return builder
         * 
         */
        public Builder opcNamedCredentialId(@Nullable String opcNamedCredentialId) {
            $.opcNamedCredentialId = opcNamedCredentialId;
            return this;
        }

        public GetExternalListenerServicesPlainArgs build() {
            if ($.externalListenerId == null) {
                throw new MissingRequiredPropertyException("GetExternalListenerServicesPlainArgs", "externalListenerId");
            }
            if ($.managedDatabaseId == null) {
                throw new MissingRequiredPropertyException("GetExternalListenerServicesPlainArgs", "managedDatabaseId");
            }
            return $;
        }
    }

}
