// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.inputs.GetExternalMySqlDatabasesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetExternalMySqlDatabasesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetExternalMySqlDatabasesPlainArgs Empty = new GetExternalMySqlDatabasesPlainArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetExternalMySqlDatabasesFilter> filters;

    public Optional<List<GetExternalMySqlDatabasesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The parameter to filter by MySQL Database System type.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The parameter to filter by MySQL Database System type.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetExternalMySqlDatabasesPlainArgs() {}

    private GetExternalMySqlDatabasesPlainArgs(GetExternalMySqlDatabasesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetExternalMySqlDatabasesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetExternalMySqlDatabasesPlainArgs $;

        public Builder() {
            $ = new GetExternalMySqlDatabasesPlainArgs();
        }

        public Builder(GetExternalMySqlDatabasesPlainArgs defaults) {
            $ = new GetExternalMySqlDatabasesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetExternalMySqlDatabasesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetExternalMySqlDatabasesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name The parameter to filter by MySQL Database System type.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetExternalMySqlDatabasesPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetExternalMySqlDatabasesPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
