// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedDatabaseAttentionLogCountPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedDatabaseAttentionLogCountPlainArgs Empty = new GetManagedDatabaseAttentionLogCountPlainArgs();

    /**
     * The optional parameter used to group different attention logs.
     * 
     */
    @Import(name="groupBy")
    private @Nullable String groupBy;

    /**
     * @return The optional parameter used to group different attention logs.
     * 
     */
    public Optional<String> groupBy() {
        return Optional.ofNullable(this.groupBy);
    }

    /**
     * The flag to indicate whether the search text is regular expression or not.
     * 
     */
    @Import(name="isRegularExpression")
    private @Nullable Boolean isRegularExpression;

    /**
     * @return The flag to indicate whether the search text is regular expression or not.
     * 
     */
    public Optional<Boolean> isRegularExpression() {
        return Optional.ofNullable(this.isRegularExpression);
    }

    /**
     * The optional query parameter to filter the attention or alert logs by search text.
     * 
     */
    @Import(name="logSearchText")
    private @Nullable String logSearchText;

    /**
     * @return The optional query parameter to filter the attention or alert logs by search text.
     * 
     */
    public Optional<String> logSearchText() {
        return Optional.ofNullable(this.logSearchText);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private String managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * The optional greater than or equal to timestamp to filter the logs.
     * 
     */
    @Import(name="timeGreaterThanOrEqualTo")
    private @Nullable String timeGreaterThanOrEqualTo;

    /**
     * @return The optional greater than or equal to timestamp to filter the logs.
     * 
     */
    public Optional<String> timeGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeGreaterThanOrEqualTo);
    }

    /**
     * The optional less than or equal to timestamp to filter the logs.
     * 
     */
    @Import(name="timeLessThanOrEqualTo")
    private @Nullable String timeLessThanOrEqualTo;

    /**
     * @return The optional less than or equal to timestamp to filter the logs.
     * 
     */
    public Optional<String> timeLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeLessThanOrEqualTo);
    }

    /**
     * The optional parameter to filter the attention or alert logs by type.
     * 
     */
    @Import(name="typeFilter")
    private @Nullable String typeFilter;

    /**
     * @return The optional parameter to filter the attention or alert logs by type.
     * 
     */
    public Optional<String> typeFilter() {
        return Optional.ofNullable(this.typeFilter);
    }

    /**
     * The optional parameter to filter the attention logs by urgency.
     * 
     */
    @Import(name="urgencyFilter")
    private @Nullable String urgencyFilter;

    /**
     * @return The optional parameter to filter the attention logs by urgency.
     * 
     */
    public Optional<String> urgencyFilter() {
        return Optional.ofNullable(this.urgencyFilter);
    }

    private GetManagedDatabaseAttentionLogCountPlainArgs() {}

    private GetManagedDatabaseAttentionLogCountPlainArgs(GetManagedDatabaseAttentionLogCountPlainArgs $) {
        this.groupBy = $.groupBy;
        this.isRegularExpression = $.isRegularExpression;
        this.logSearchText = $.logSearchText;
        this.managedDatabaseId = $.managedDatabaseId;
        this.timeGreaterThanOrEqualTo = $.timeGreaterThanOrEqualTo;
        this.timeLessThanOrEqualTo = $.timeLessThanOrEqualTo;
        this.typeFilter = $.typeFilter;
        this.urgencyFilter = $.urgencyFilter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedDatabaseAttentionLogCountPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedDatabaseAttentionLogCountPlainArgs $;

        public Builder() {
            $ = new GetManagedDatabaseAttentionLogCountPlainArgs();
        }

        public Builder(GetManagedDatabaseAttentionLogCountPlainArgs defaults) {
            $ = new GetManagedDatabaseAttentionLogCountPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupBy The optional parameter used to group different attention logs.
         * 
         * @return builder
         * 
         */
        public Builder groupBy(@Nullable String groupBy) {
            $.groupBy = groupBy;
            return this;
        }

        /**
         * @param isRegularExpression The flag to indicate whether the search text is regular expression or not.
         * 
         * @return builder
         * 
         */
        public Builder isRegularExpression(@Nullable Boolean isRegularExpression) {
            $.isRegularExpression = isRegularExpression;
            return this;
        }

        /**
         * @param logSearchText The optional query parameter to filter the attention or alert logs by search text.
         * 
         * @return builder
         * 
         */
        public Builder logSearchText(@Nullable String logSearchText) {
            $.logSearchText = logSearchText;
            return this;
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param timeGreaterThanOrEqualTo The optional greater than or equal to timestamp to filter the logs.
         * 
         * @return builder
         * 
         */
        public Builder timeGreaterThanOrEqualTo(@Nullable String timeGreaterThanOrEqualTo) {
            $.timeGreaterThanOrEqualTo = timeGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeLessThanOrEqualTo The optional less than or equal to timestamp to filter the logs.
         * 
         * @return builder
         * 
         */
        public Builder timeLessThanOrEqualTo(@Nullable String timeLessThanOrEqualTo) {
            $.timeLessThanOrEqualTo = timeLessThanOrEqualTo;
            return this;
        }

        /**
         * @param typeFilter The optional parameter to filter the attention or alert logs by type.
         * 
         * @return builder
         * 
         */
        public Builder typeFilter(@Nullable String typeFilter) {
            $.typeFilter = typeFilter;
            return this;
        }

        /**
         * @param urgencyFilter The optional parameter to filter the attention logs by urgency.
         * 
         * @return builder
         * 
         */
        public Builder urgencyFilter(@Nullable String urgencyFilter) {
            $.urgencyFilter = urgencyFilter;
            return this;
        }

        public GetManagedDatabaseAttentionLogCountPlainArgs build() {
            $.managedDatabaseId = Objects.requireNonNull($.managedDatabaseId, "expected parameter 'managedDatabaseId' to be non-null");
            return $;
        }
    }

}
