// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.inputs.GetManagedDatabaseCursorCacheStatementsFilterArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedDatabaseCursorCacheStatementsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedDatabaseCursorCacheStatementsArgs Empty = new GetManagedDatabaseCursorCacheStatementsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetManagedDatabaseCursorCacheStatementsFilterArgs>> filters;

    public Optional<Output<List<GetManagedDatabaseCursorCacheStatementsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="limit")
    private @Nullable Output<Integer> limit;

    public Optional<Output<Integer>> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private Output<String> managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public Output<String> managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * The OCID of the Named Credential.
     * 
     */
    @Import(name="opcNamedCredentialId")
    private @Nullable Output<String> opcNamedCredentialId;

    /**
     * @return The OCID of the Named Credential.
     * 
     */
    public Optional<Output<String>> opcNamedCredentialId() {
        return Optional.ofNullable(this.opcNamedCredentialId);
    }

    /**
     * A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the &#39;%!&#39;(MISSING) symbol as a wildcard.
     * 
     */
    @Import(name="sqlText")
    private @Nullable Output<String> sqlText;

    /**
     * @return A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the &#39;%!&#39;(MISSING) symbol as a wildcard.
     * 
     */
    public Optional<Output<String>> sqlText() {
        return Optional.ofNullable(this.sqlText);
    }

    private GetManagedDatabaseCursorCacheStatementsArgs() {}

    private GetManagedDatabaseCursorCacheStatementsArgs(GetManagedDatabaseCursorCacheStatementsArgs $) {
        this.filters = $.filters;
        this.limit = $.limit;
        this.managedDatabaseId = $.managedDatabaseId;
        this.opcNamedCredentialId = $.opcNamedCredentialId;
        this.sqlText = $.sqlText;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedDatabaseCursorCacheStatementsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedDatabaseCursorCacheStatementsArgs $;

        public Builder() {
            $ = new GetManagedDatabaseCursorCacheStatementsArgs();
        }

        public Builder(GetManagedDatabaseCursorCacheStatementsArgs defaults) {
            $ = new GetManagedDatabaseCursorCacheStatementsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetManagedDatabaseCursorCacheStatementsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetManagedDatabaseCursorCacheStatementsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetManagedDatabaseCursorCacheStatementsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder limit(@Nullable Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(Output<String> managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            return managedDatabaseId(Output.of(managedDatabaseId));
        }

        /**
         * @param opcNamedCredentialId The OCID of the Named Credential.
         * 
         * @return builder
         * 
         */
        public Builder opcNamedCredentialId(@Nullable Output<String> opcNamedCredentialId) {
            $.opcNamedCredentialId = opcNamedCredentialId;
            return this;
        }

        /**
         * @param opcNamedCredentialId The OCID of the Named Credential.
         * 
         * @return builder
         * 
         */
        public Builder opcNamedCredentialId(String opcNamedCredentialId) {
            return opcNamedCredentialId(Output.of(opcNamedCredentialId));
        }

        /**
         * @param sqlText A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the &#39;%!&#39;(MISSING) symbol as a wildcard.
         * 
         * @return builder
         * 
         */
        public Builder sqlText(@Nullable Output<String> sqlText) {
            $.sqlText = sqlText;
            return this;
        }

        /**
         * @param sqlText A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the &#39;%!&#39;(MISSING) symbol as a wildcard.
         * 
         * @return builder
         * 
         */
        public Builder sqlText(String sqlText) {
            return sqlText(Output.of(sqlText));
        }

        public GetManagedDatabaseCursorCacheStatementsArgs build() {
            if ($.managedDatabaseId == null) {
                throw new MissingRequiredPropertyException("GetManagedDatabaseCursorCacheStatementsArgs", "managedDatabaseId");
            }
            return $;
        }
    }

}
