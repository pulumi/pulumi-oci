// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.GetManagedDatabaseOptimizerStatisticsCollectionOperationsFilterArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs Empty = new GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs();

    /**
     * The end time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
     * 
     */
    @Import(name="endTimeLessThanOrEqualTo")
    private @Nullable Output<String> endTimeLessThanOrEqualTo;

    /**
     * @return The end time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
     * 
     */
    public Optional<Output<String>> endTimeLessThanOrEqualTo() {
        return Optional.ofNullable(this.endTimeLessThanOrEqualTo);
    }

    /**
     * The parameter used to filter the optimizer statistics operations. Any property of the OptimizerStatisticsCollectionOperationSummary can be used to define the filter condition. The allowed conditional operators are AND or OR, and the allowed binary operators are are &gt;, &lt; and =. Any other operator is regarded invalid. Example: jobName=&lt;replace with job name&gt; AND status=&lt;replace with status&gt;
     * 
     */
    @Import(name="filterBy")
    private @Nullable Output<String> filterBy;

    /**
     * @return The parameter used to filter the optimizer statistics operations. Any property of the OptimizerStatisticsCollectionOperationSummary can be used to define the filter condition. The allowed conditional operators are AND or OR, and the allowed binary operators are are &gt;, &lt; and =. Any other operator is regarded invalid. Example: jobName=&lt;replace with job name&gt; AND status=&lt;replace with status&gt;
     * 
     */
    public Optional<Output<String>> filterBy() {
        return Optional.ofNullable(this.filterBy);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetManagedDatabaseOptimizerStatisticsCollectionOperationsFilterArgs>> filters;

    public Optional<Output<List<GetManagedDatabaseOptimizerStatisticsCollectionOperationsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="limit")
    private @Nullable Output<Integer> limit;

    public Optional<Output<Integer>> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private Output<String> managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public Output<String> managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * The start time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
     * 
     */
    @Import(name="startTimeGreaterThanOrEqualTo")
    private @Nullable Output<String> startTimeGreaterThanOrEqualTo;

    /**
     * @return The start time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
     * 
     */
    public Optional<Output<String>> startTimeGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.startTimeGreaterThanOrEqualTo);
    }

    /**
     * The filter types of the optimizer statistics tasks.
     * 
     */
    @Import(name="taskType")
    private @Nullable Output<String> taskType;

    /**
     * @return The filter types of the optimizer statistics tasks.
     * 
     */
    public Optional<Output<String>> taskType() {
        return Optional.ofNullable(this.taskType);
    }

    private GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs() {}

    private GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs(GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs $) {
        this.endTimeLessThanOrEqualTo = $.endTimeLessThanOrEqualTo;
        this.filterBy = $.filterBy;
        this.filters = $.filters;
        this.limit = $.limit;
        this.managedDatabaseId = $.managedDatabaseId;
        this.startTimeGreaterThanOrEqualTo = $.startTimeGreaterThanOrEqualTo;
        this.taskType = $.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs $;

        public Builder() {
            $ = new GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs();
        }

        public Builder(GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs defaults) {
            $ = new GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endTimeLessThanOrEqualTo The end time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
         * 
         * @return builder
         * 
         */
        public Builder endTimeLessThanOrEqualTo(@Nullable Output<String> endTimeLessThanOrEqualTo) {
            $.endTimeLessThanOrEqualTo = endTimeLessThanOrEqualTo;
            return this;
        }

        /**
         * @param endTimeLessThanOrEqualTo The end time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
         * 
         * @return builder
         * 
         */
        public Builder endTimeLessThanOrEqualTo(String endTimeLessThanOrEqualTo) {
            return endTimeLessThanOrEqualTo(Output.of(endTimeLessThanOrEqualTo));
        }

        /**
         * @param filterBy The parameter used to filter the optimizer statistics operations. Any property of the OptimizerStatisticsCollectionOperationSummary can be used to define the filter condition. The allowed conditional operators are AND or OR, and the allowed binary operators are are &gt;, &lt; and =. Any other operator is regarded invalid. Example: jobName=&lt;replace with job name&gt; AND status=&lt;replace with status&gt;
         * 
         * @return builder
         * 
         */
        public Builder filterBy(@Nullable Output<String> filterBy) {
            $.filterBy = filterBy;
            return this;
        }

        /**
         * @param filterBy The parameter used to filter the optimizer statistics operations. Any property of the OptimizerStatisticsCollectionOperationSummary can be used to define the filter condition. The allowed conditional operators are AND or OR, and the allowed binary operators are are &gt;, &lt; and =. Any other operator is regarded invalid. Example: jobName=&lt;replace with job name&gt; AND status=&lt;replace with status&gt;
         * 
         * @return builder
         * 
         */
        public Builder filterBy(String filterBy) {
            return filterBy(Output.of(filterBy));
        }

        public Builder filters(@Nullable Output<List<GetManagedDatabaseOptimizerStatisticsCollectionOperationsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetManagedDatabaseOptimizerStatisticsCollectionOperationsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetManagedDatabaseOptimizerStatisticsCollectionOperationsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder limit(@Nullable Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(Output<String> managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            return managedDatabaseId(Output.of(managedDatabaseId));
        }

        /**
         * @param startTimeGreaterThanOrEqualTo The start time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
         * 
         * @return builder
         * 
         */
        public Builder startTimeGreaterThanOrEqualTo(@Nullable Output<String> startTimeGreaterThanOrEqualTo) {
            $.startTimeGreaterThanOrEqualTo = startTimeGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param startTimeGreaterThanOrEqualTo The start time of the time range to retrieve the optimizer statistics of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
         * 
         * @return builder
         * 
         */
        public Builder startTimeGreaterThanOrEqualTo(String startTimeGreaterThanOrEqualTo) {
            return startTimeGreaterThanOrEqualTo(Output.of(startTimeGreaterThanOrEqualTo));
        }

        /**
         * @param taskType The filter types of the optimizer statistics tasks.
         * 
         * @return builder
         * 
         */
        public Builder taskType(@Nullable Output<String> taskType) {
            $.taskType = taskType;
            return this;
        }

        /**
         * @param taskType The filter types of the optimizer statistics tasks.
         * 
         * @return builder
         * 
         */
        public Builder taskType(String taskType) {
            return taskType(Output.of(taskType));
        }

        public GetManagedDatabaseOptimizerStatisticsCollectionOperationsArgs build() {
            $.managedDatabaseId = Objects.requireNonNull($.managedDatabaseId, "expected parameter 'managedDatabaseId' to be non-null");
            return $;
        }
    }

}
