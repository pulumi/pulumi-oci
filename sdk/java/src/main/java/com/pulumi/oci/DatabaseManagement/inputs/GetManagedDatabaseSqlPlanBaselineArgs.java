// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedDatabaseSqlPlanBaselineArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedDatabaseSqlPlanBaselineArgs Empty = new GetManagedDatabaseSqlPlanBaselineArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private Output<String> managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public Output<String> managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * The OCID of the Named Credential.
     * 
     */
    @Import(name="opcNamedCredentialId")
    private @Nullable Output<String> opcNamedCredentialId;

    /**
     * @return The OCID of the Named Credential.
     * 
     */
    public Optional<Output<String>> opcNamedCredentialId() {
        return Optional.ofNullable(this.opcNamedCredentialId);
    }

    /**
     * The plan name of the SQL plan baseline.
     * 
     */
    @Import(name="planName", required=true)
    private Output<String> planName;

    /**
     * @return The plan name of the SQL plan baseline.
     * 
     */
    public Output<String> planName() {
        return this.planName;
    }

    private GetManagedDatabaseSqlPlanBaselineArgs() {}

    private GetManagedDatabaseSqlPlanBaselineArgs(GetManagedDatabaseSqlPlanBaselineArgs $) {
        this.managedDatabaseId = $.managedDatabaseId;
        this.opcNamedCredentialId = $.opcNamedCredentialId;
        this.planName = $.planName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedDatabaseSqlPlanBaselineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedDatabaseSqlPlanBaselineArgs $;

        public Builder() {
            $ = new GetManagedDatabaseSqlPlanBaselineArgs();
        }

        public Builder(GetManagedDatabaseSqlPlanBaselineArgs defaults) {
            $ = new GetManagedDatabaseSqlPlanBaselineArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(Output<String> managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            return managedDatabaseId(Output.of(managedDatabaseId));
        }

        /**
         * @param opcNamedCredentialId The OCID of the Named Credential.
         * 
         * @return builder
         * 
         */
        public Builder opcNamedCredentialId(@Nullable Output<String> opcNamedCredentialId) {
            $.opcNamedCredentialId = opcNamedCredentialId;
            return this;
        }

        /**
         * @param opcNamedCredentialId The OCID of the Named Credential.
         * 
         * @return builder
         * 
         */
        public Builder opcNamedCredentialId(String opcNamedCredentialId) {
            return opcNamedCredentialId(Output.of(opcNamedCredentialId));
        }

        /**
         * @param planName The plan name of the SQL plan baseline.
         * 
         * @return builder
         * 
         */
        public Builder planName(Output<String> planName) {
            $.planName = planName;
            return this;
        }

        /**
         * @param planName The plan name of the SQL plan baseline.
         * 
         * @return builder
         * 
         */
        public Builder planName(String planName) {
            return planName(Output.of(planName));
        }

        public GetManagedDatabaseSqlPlanBaselineArgs build() {
            if ($.managedDatabaseId == null) {
                throw new MissingRequiredPropertyException("GetManagedDatabaseSqlPlanBaselineArgs", "managedDatabaseId");
            }
            if ($.planName == null) {
                throw new MissingRequiredPropertyException("GetManagedDatabaseSqlPlanBaselineArgs", "planName");
            }
            return $;
        }
    }

}
