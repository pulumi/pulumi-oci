// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedDatabaseSqlPlanBaselinePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedDatabaseSqlPlanBaselinePlainArgs Empty = new GetManagedDatabaseSqlPlanBaselinePlainArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private String managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * The OCID of the Named Credential.
     * 
     */
    @Import(name="opcNamedCredentialId")
    private @Nullable String opcNamedCredentialId;

    /**
     * @return The OCID of the Named Credential.
     * 
     */
    public Optional<String> opcNamedCredentialId() {
        return Optional.ofNullable(this.opcNamedCredentialId);
    }

    /**
     * The plan name of the SQL plan baseline.
     * 
     */
    @Import(name="planName", required=true)
    private String planName;

    /**
     * @return The plan name of the SQL plan baseline.
     * 
     */
    public String planName() {
        return this.planName;
    }

    private GetManagedDatabaseSqlPlanBaselinePlainArgs() {}

    private GetManagedDatabaseSqlPlanBaselinePlainArgs(GetManagedDatabaseSqlPlanBaselinePlainArgs $) {
        this.managedDatabaseId = $.managedDatabaseId;
        this.opcNamedCredentialId = $.opcNamedCredentialId;
        this.planName = $.planName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedDatabaseSqlPlanBaselinePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedDatabaseSqlPlanBaselinePlainArgs $;

        public Builder() {
            $ = new GetManagedDatabaseSqlPlanBaselinePlainArgs();
        }

        public Builder(GetManagedDatabaseSqlPlanBaselinePlainArgs defaults) {
            $ = new GetManagedDatabaseSqlPlanBaselinePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param opcNamedCredentialId The OCID of the Named Credential.
         * 
         * @return builder
         * 
         */
        public Builder opcNamedCredentialId(@Nullable String opcNamedCredentialId) {
            $.opcNamedCredentialId = opcNamedCredentialId;
            return this;
        }

        /**
         * @param planName The plan name of the SQL plan baseline.
         * 
         * @return builder
         * 
         */
        public Builder planName(String planName) {
            $.planName = planName;
            return this;
        }

        public GetManagedDatabaseSqlPlanBaselinePlainArgs build() {
            if ($.managedDatabaseId == null) {
                throw new MissingRequiredPropertyException("GetManagedDatabaseSqlPlanBaselinePlainArgs", "managedDatabaseId");
            }
            if ($.planName == null) {
                throw new MissingRequiredPropertyException("GetManagedDatabaseSqlPlanBaselinePlainArgs", "planName");
            }
            return $;
        }
    }

}
