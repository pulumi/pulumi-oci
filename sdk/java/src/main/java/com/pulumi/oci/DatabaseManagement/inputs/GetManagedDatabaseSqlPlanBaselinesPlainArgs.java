// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.GetManagedDatabaseSqlPlanBaselinesFilter;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedDatabaseSqlPlanBaselinesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedDatabaseSqlPlanBaselinesPlainArgs Empty = new GetManagedDatabaseSqlPlanBaselinesPlainArgs();

    @Import(name="filters")
    private @Nullable List<GetManagedDatabaseSqlPlanBaselinesFilter> filters;

    public Optional<List<GetManagedDatabaseSqlPlanBaselinesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only SQL plan baselines that are either accepted or not accepted. By default, all SQL plan baselines are returned.
     * 
     */
    @Import(name="isAccepted")
    private @Nullable Boolean isAccepted;

    /**
     * @return A filter to return only SQL plan baselines that are either accepted or not accepted. By default, all SQL plan baselines are returned.
     * 
     */
    public Optional<Boolean> isAccepted() {
        return Optional.ofNullable(this.isAccepted);
    }

    /**
     * A filter to return only SQL plan baselines that are either adaptive or not adaptive. By default, all SQL plan baselines are returned.
     * 
     */
    @Import(name="isAdaptive")
    private @Nullable Boolean isAdaptive;

    /**
     * @return A filter to return only SQL plan baselines that are either adaptive or not adaptive. By default, all SQL plan baselines are returned.
     * 
     */
    public Optional<Boolean> isAdaptive() {
        return Optional.ofNullable(this.isAdaptive);
    }

    /**
     * A filter to return only SQL plan baselines that are either enabled or not enabled. By default, all SQL plan baselines are returned.
     * 
     */
    @Import(name="isEnabled")
    private @Nullable Boolean isEnabled;

    /**
     * @return A filter to return only SQL plan baselines that are either enabled or not enabled. By default, all SQL plan baselines are returned.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }

    /**
     * A filter to return only SQL plan baselines that are either fixed or not fixed. By default, all SQL plan baselines are returned.
     * 
     */
    @Import(name="isFixed")
    private @Nullable Boolean isFixed;

    /**
     * @return A filter to return only SQL plan baselines that are either fixed or not fixed. By default, all SQL plan baselines are returned.
     * 
     */
    public Optional<Boolean> isFixed() {
        return Optional.ofNullable(this.isFixed);
    }

    /**
     * A filter to return only SQL plan baselines that were either reproduced or not reproduced by the optimizer. By default, all SQL plan baselines are returned.
     * 
     */
    @Import(name="isReproduced")
    private @Nullable Boolean isReproduced;

    /**
     * @return A filter to return only SQL plan baselines that were either reproduced or not reproduced by the optimizer. By default, all SQL plan baselines are returned.
     * 
     */
    public Optional<Boolean> isReproduced() {
        return Optional.ofNullable(this.isReproduced);
    }

    @Import(name="limit")
    private @Nullable Integer limit;

    public Optional<Integer> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private String managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * A filter to return all the SQL plan baselines that match the origin.
     * 
     */
    @Import(name="origin")
    private @Nullable String origin;

    /**
     * @return A filter to return all the SQL plan baselines that match the origin.
     * 
     */
    public Optional<String> origin() {
        return Optional.ofNullable(this.origin);
    }

    /**
     * A filter to return only SQL plan baselines that match the plan name.
     * 
     */
    @Import(name="planName")
    private @Nullable String planName;

    /**
     * @return A filter to return only SQL plan baselines that match the plan name.
     * 
     */
    public Optional<String> planName() {
        return Optional.ofNullable(this.planName);
    }

    /**
     * A filter to return all the SQL plan baselines for the specified SQL handle.
     * 
     */
    @Import(name="sqlHandle")
    private @Nullable String sqlHandle;

    /**
     * @return A filter to return all the SQL plan baselines for the specified SQL handle.
     * 
     */
    public Optional<String> sqlHandle() {
        return Optional.ofNullable(this.sqlHandle);
    }

    /**
     * A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the &#39;%&#39; symbol as a wildcard.
     * 
     */
    @Import(name="sqlText")
    private @Nullable String sqlText;

    /**
     * @return A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the &#39;%&#39; symbol as a wildcard.
     * 
     */
    public Optional<String> sqlText() {
        return Optional.ofNullable(this.sqlText);
    }

    private GetManagedDatabaseSqlPlanBaselinesPlainArgs() {}

    private GetManagedDatabaseSqlPlanBaselinesPlainArgs(GetManagedDatabaseSqlPlanBaselinesPlainArgs $) {
        this.filters = $.filters;
        this.isAccepted = $.isAccepted;
        this.isAdaptive = $.isAdaptive;
        this.isEnabled = $.isEnabled;
        this.isFixed = $.isFixed;
        this.isReproduced = $.isReproduced;
        this.limit = $.limit;
        this.managedDatabaseId = $.managedDatabaseId;
        this.origin = $.origin;
        this.planName = $.planName;
        this.sqlHandle = $.sqlHandle;
        this.sqlText = $.sqlText;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedDatabaseSqlPlanBaselinesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedDatabaseSqlPlanBaselinesPlainArgs $;

        public Builder() {
            $ = new GetManagedDatabaseSqlPlanBaselinesPlainArgs();
        }

        public Builder(GetManagedDatabaseSqlPlanBaselinesPlainArgs defaults) {
            $ = new GetManagedDatabaseSqlPlanBaselinesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetManagedDatabaseSqlPlanBaselinesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetManagedDatabaseSqlPlanBaselinesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isAccepted A filter to return only SQL plan baselines that are either accepted or not accepted. By default, all SQL plan baselines are returned.
         * 
         * @return builder
         * 
         */
        public Builder isAccepted(@Nullable Boolean isAccepted) {
            $.isAccepted = isAccepted;
            return this;
        }

        /**
         * @param isAdaptive A filter to return only SQL plan baselines that are either adaptive or not adaptive. By default, all SQL plan baselines are returned.
         * 
         * @return builder
         * 
         */
        public Builder isAdaptive(@Nullable Boolean isAdaptive) {
            $.isAdaptive = isAdaptive;
            return this;
        }

        /**
         * @param isEnabled A filter to return only SQL plan baselines that are either enabled or not enabled. By default, all SQL plan baselines are returned.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(@Nullable Boolean isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isFixed A filter to return only SQL plan baselines that are either fixed or not fixed. By default, all SQL plan baselines are returned.
         * 
         * @return builder
         * 
         */
        public Builder isFixed(@Nullable Boolean isFixed) {
            $.isFixed = isFixed;
            return this;
        }

        /**
         * @param isReproduced A filter to return only SQL plan baselines that were either reproduced or not reproduced by the optimizer. By default, all SQL plan baselines are returned.
         * 
         * @return builder
         * 
         */
        public Builder isReproduced(@Nullable Boolean isReproduced) {
            $.isReproduced = isReproduced;
            return this;
        }

        public Builder limit(@Nullable Integer limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param origin A filter to return all the SQL plan baselines that match the origin.
         * 
         * @return builder
         * 
         */
        public Builder origin(@Nullable String origin) {
            $.origin = origin;
            return this;
        }

        /**
         * @param planName A filter to return only SQL plan baselines that match the plan name.
         * 
         * @return builder
         * 
         */
        public Builder planName(@Nullable String planName) {
            $.planName = planName;
            return this;
        }

        /**
         * @param sqlHandle A filter to return all the SQL plan baselines for the specified SQL handle.
         * 
         * @return builder
         * 
         */
        public Builder sqlHandle(@Nullable String sqlHandle) {
            $.sqlHandle = sqlHandle;
            return this;
        }

        /**
         * @param sqlText A filter to return all the SQL plan baselines that match the SQL text. By default, the search is case insensitive. To run an exact or case-sensitive search, double-quote the search string. You may also use the &#39;%&#39; symbol as a wildcard.
         * 
         * @return builder
         * 
         */
        public Builder sqlText(@Nullable String sqlText) {
            $.sqlText = sqlText;
            return this;
        }

        public GetManagedDatabaseSqlPlanBaselinesPlainArgs build() {
            $.managedDatabaseId = Objects.requireNonNull($.managedDatabaseId, "expected parameter 'managedDatabaseId' to be non-null");
            return $;
        }
    }

}
