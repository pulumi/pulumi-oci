// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.inputs.GetManagedDatabaseSqlTuningSetsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedDatabaseSqlTuningSetsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedDatabaseSqlTuningSetsPlainArgs Empty = new GetManagedDatabaseSqlTuningSetsPlainArgs();

    @Import(name="filters")
    private @Nullable List<GetManagedDatabaseSqlTuningSetsFilter> filters;

    public Optional<List<GetManagedDatabaseSqlTuningSetsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private String managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * Allow searching the name of the SQL tuning set by partial matching. The search is case insensitive.
     * 
     */
    @Import(name="nameContains")
    private @Nullable String nameContains;

    /**
     * @return Allow searching the name of the SQL tuning set by partial matching. The search is case insensitive.
     * 
     */
    public Optional<String> nameContains() {
        return Optional.ofNullable(this.nameContains);
    }

    /**
     * The owner of the SQL tuning set.
     * 
     */
    @Import(name="owner")
    private @Nullable String owner;

    /**
     * @return The owner of the SQL tuning set.
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }

    private GetManagedDatabaseSqlTuningSetsPlainArgs() {}

    private GetManagedDatabaseSqlTuningSetsPlainArgs(GetManagedDatabaseSqlTuningSetsPlainArgs $) {
        this.filters = $.filters;
        this.managedDatabaseId = $.managedDatabaseId;
        this.nameContains = $.nameContains;
        this.owner = $.owner;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedDatabaseSqlTuningSetsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedDatabaseSqlTuningSetsPlainArgs $;

        public Builder() {
            $ = new GetManagedDatabaseSqlTuningSetsPlainArgs();
        }

        public Builder(GetManagedDatabaseSqlTuningSetsPlainArgs defaults) {
            $ = new GetManagedDatabaseSqlTuningSetsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetManagedDatabaseSqlTuningSetsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetManagedDatabaseSqlTuningSetsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param nameContains Allow searching the name of the SQL tuning set by partial matching. The search is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder nameContains(@Nullable String nameContains) {
            $.nameContains = nameContains;
            return this;
        }

        /**
         * @param owner The owner of the SQL tuning set.
         * 
         * @return builder
         * 
         */
        public Builder owner(@Nullable String owner) {
            $.owner = owner;
            return this;
        }

        public GetManagedDatabaseSqlTuningSetsPlainArgs build() {
            if ($.managedDatabaseId == null) {
                throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningSetsPlainArgs", "managedDatabaseId");
            }
            return $;
        }
    }

}
