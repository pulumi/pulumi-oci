// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.inputs.GetManagedMySqlDatabaseOutboundReplicationsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedMySqlDatabaseOutboundReplicationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedMySqlDatabaseOutboundReplicationsPlainArgs Empty = new GetManagedMySqlDatabaseOutboundReplicationsPlainArgs();

    @Import(name="filters")
    private @Nullable List<GetManagedMySqlDatabaseOutboundReplicationsFilter> filters;

    public Optional<List<GetManagedMySqlDatabaseOutboundReplicationsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the Managed MySQL Database.
     * 
     */
    @Import(name="managedMySqlDatabaseId", required=true)
    private String managedMySqlDatabaseId;

    /**
     * @return The OCID of the Managed MySQL Database.
     * 
     */
    public String managedMySqlDatabaseId() {
        return this.managedMySqlDatabaseId;
    }

    private GetManagedMySqlDatabaseOutboundReplicationsPlainArgs() {}

    private GetManagedMySqlDatabaseOutboundReplicationsPlainArgs(GetManagedMySqlDatabaseOutboundReplicationsPlainArgs $) {
        this.filters = $.filters;
        this.managedMySqlDatabaseId = $.managedMySqlDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedMySqlDatabaseOutboundReplicationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedMySqlDatabaseOutboundReplicationsPlainArgs $;

        public Builder() {
            $ = new GetManagedMySqlDatabaseOutboundReplicationsPlainArgs();
        }

        public Builder(GetManagedMySqlDatabaseOutboundReplicationsPlainArgs defaults) {
            $ = new GetManagedMySqlDatabaseOutboundReplicationsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetManagedMySqlDatabaseOutboundReplicationsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetManagedMySqlDatabaseOutboundReplicationsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managedMySqlDatabaseId The OCID of the Managed MySQL Database.
         * 
         * @return builder
         * 
         */
        public Builder managedMySqlDatabaseId(String managedMySqlDatabaseId) {
            $.managedMySqlDatabaseId = managedMySqlDatabaseId;
            return this;
        }

        public GetManagedMySqlDatabaseOutboundReplicationsPlainArgs build() {
            if ($.managedMySqlDatabaseId == null) {
                throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseOutboundReplicationsPlainArgs", "managedMySqlDatabaseId");
            }
            return $;
        }
    }

}
