// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.ManagedDatabaseDbmgmtFeatureConfigArgs;
import com.pulumi.oci.DatabaseManagement.inputs.ManagedDatabaseManagedDatabaseGroupArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedDatabaseState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedDatabaseState Empty = new ManagedDatabaseState();

    /**
     * The additional details specific to a type of database defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="additionalDetails")
    private @Nullable Output<Map<String,String>> additionalDetails;

    /**
     * @return The additional details specific to a type of database defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> additionalDetails() {
        return Optional.ofNullable(this.additionalDetails);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The operating system of database.
     * 
     */
    @Import(name="databasePlatformName")
    private @Nullable Output<String> databasePlatformName;

    /**
     * @return The operating system of database.
     * 
     */
    public Optional<Output<String>> databasePlatformName() {
        return Optional.ofNullable(this.databasePlatformName);
    }

    /**
     * The status of the Oracle Database. Indicates whether the status of the database is UP, DOWN, or UNKNOWN at the current time.
     * 
     */
    @Import(name="databaseStatus")
    private @Nullable Output<String> databaseStatus;

    /**
     * @return The status of the Oracle Database. Indicates whether the status of the database is UP, DOWN, or UNKNOWN at the current time.
     * 
     */
    public Optional<Output<String>> databaseStatus() {
        return Optional.ofNullable(this.databaseStatus);
    }

    /**
     * The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
     * 
     */
    @Import(name="databaseSubType")
    private @Nullable Output<String> databaseSubType;

    /**
     * @return The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
     * 
     */
    public Optional<Output<String>> databaseSubType() {
        return Optional.ofNullable(this.databaseSubType);
    }

    /**
     * The type of Oracle Database installation.
     * 
     */
    @Import(name="databaseType")
    private @Nullable Output<String> databaseType;

    /**
     * @return The type of Oracle Database installation.
     * 
     */
    public Optional<Output<String>> databaseType() {
        return Optional.ofNullable(this.databaseType);
    }

    /**
     * The Oracle Database version.
     * 
     */
    @Import(name="databaseVersion")
    private @Nullable Output<String> databaseVersion;

    /**
     * @return The Oracle Database version.
     * 
     */
    public Optional<Output<String>> databaseVersion() {
        return Optional.ofNullable(this.databaseVersion);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that this Managed Database is part of.
     * 
     */
    @Import(name="dbSystemId")
    private @Nullable Output<String> dbSystemId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that this Managed Database is part of.
     * 
     */
    public Optional<Output<String>> dbSystemId() {
        return Optional.ofNullable(this.dbSystemId);
    }

    /**
     * The list of feature configurations
     * 
     */
    @Import(name="dbmgmtFeatureConfigs")
    private @Nullable Output<List<ManagedDatabaseDbmgmtFeatureConfigArgs>> dbmgmtFeatureConfigs;

    /**
     * @return The list of feature configurations
     * 
     */
    public Optional<Output<List<ManagedDatabaseDbmgmtFeatureConfigArgs>>> dbmgmtFeatureConfigs() {
        return Optional.ofNullable(this.dbmgmtFeatureConfigs);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The infrastructure used to deploy the Oracle Database.
     * 
     */
    @Import(name="deploymentType")
    private @Nullable Output<String> deploymentType;

    /**
     * @return The infrastructure used to deploy the Oracle Database.
     * 
     */
    public Optional<Output<String>> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Indicates whether the Oracle Database is part of a cluster.
     * 
     */
    @Import(name="isCluster")
    private @Nullable Output<Boolean> isCluster;

    /**
     * @return Indicates whether the Oracle Database is part of a cluster.
     * 
     */
    public Optional<Output<Boolean>> isCluster() {
        return Optional.ofNullable(this.isCluster);
    }

    /**
     * A list of Managed Database Groups that the Managed Database belongs to.
     * 
     */
    @Import(name="managedDatabaseGroups")
    private @Nullable Output<List<ManagedDatabaseManagedDatabaseGroupArgs>> managedDatabaseGroups;

    /**
     * @return A list of Managed Database Groups that the Managed Database belongs to.
     * 
     */
    public Optional<Output<List<ManagedDatabaseManagedDatabaseGroupArgs>>> managedDatabaseGroups() {
        return Optional.ofNullable(this.managedDatabaseGroups);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="managedDatabaseId")
    private @Nullable Output<String> managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> managedDatabaseId() {
        return Optional.ofNullable(this.managedDatabaseId);
    }

    /**
     * The management option used when enabling Database Management.
     * 
     */
    @Import(name="managementOption")
    private @Nullable Output<String> managementOption;

    /**
     * @return The management option used when enabling Database Management.
     * 
     */
    public Optional<Output<String>> managementOption() {
        return Optional.ofNullable(this.managementOption);
    }

    /**
     * The name of the Managed Database.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Managed Database.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent Container Database if Managed Database is a Pluggable Database.
     * 
     */
    @Import(name="parentContainerId")
    private @Nullable Output<String> parentContainerId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent Container Database if Managed Database is a Pluggable Database.
     * 
     */
    public Optional<Output<String>> parentContainerId() {
        return Optional.ofNullable(this.parentContainerId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the storage DB system.
     * 
     */
    @Import(name="storageSystemId")
    private @Nullable Output<String> storageSystemId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the storage DB system.
     * 
     */
    public Optional<Output<String>> storageSystemId() {
        return Optional.ofNullable(this.storageSystemId);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The date and time the Managed Database was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the Managed Database was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The workload type of the Autonomous Database.
     * 
     */
    @Import(name="workloadType")
    private @Nullable Output<String> workloadType;

    /**
     * @return The workload type of the Autonomous Database.
     * 
     */
    public Optional<Output<String>> workloadType() {
        return Optional.ofNullable(this.workloadType);
    }

    private ManagedDatabaseState() {}

    private ManagedDatabaseState(ManagedDatabaseState $) {
        this.additionalDetails = $.additionalDetails;
        this.compartmentId = $.compartmentId;
        this.databasePlatformName = $.databasePlatformName;
        this.databaseStatus = $.databaseStatus;
        this.databaseSubType = $.databaseSubType;
        this.databaseType = $.databaseType;
        this.databaseVersion = $.databaseVersion;
        this.dbSystemId = $.dbSystemId;
        this.dbmgmtFeatureConfigs = $.dbmgmtFeatureConfigs;
        this.definedTags = $.definedTags;
        this.deploymentType = $.deploymentType;
        this.freeformTags = $.freeformTags;
        this.isCluster = $.isCluster;
        this.managedDatabaseGroups = $.managedDatabaseGroups;
        this.managedDatabaseId = $.managedDatabaseId;
        this.managementOption = $.managementOption;
        this.name = $.name;
        this.parentContainerId = $.parentContainerId;
        this.storageSystemId = $.storageSystemId;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.workloadType = $.workloadType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedDatabaseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedDatabaseState $;

        public Builder() {
            $ = new ManagedDatabaseState();
        }

        public Builder(ManagedDatabaseState defaults) {
            $ = new ManagedDatabaseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalDetails The additional details specific to a type of database defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder additionalDetails(@Nullable Output<Map<String,String>> additionalDetails) {
            $.additionalDetails = additionalDetails;
            return this;
        }

        /**
         * @param additionalDetails The additional details specific to a type of database defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder additionalDetails(Map<String,String> additionalDetails) {
            return additionalDetails(Output.of(additionalDetails));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database Group resides.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param databasePlatformName The operating system of database.
         * 
         * @return builder
         * 
         */
        public Builder databasePlatformName(@Nullable Output<String> databasePlatformName) {
            $.databasePlatformName = databasePlatformName;
            return this;
        }

        /**
         * @param databasePlatformName The operating system of database.
         * 
         * @return builder
         * 
         */
        public Builder databasePlatformName(String databasePlatformName) {
            return databasePlatformName(Output.of(databasePlatformName));
        }

        /**
         * @param databaseStatus The status of the Oracle Database. Indicates whether the status of the database is UP, DOWN, or UNKNOWN at the current time.
         * 
         * @return builder
         * 
         */
        public Builder databaseStatus(@Nullable Output<String> databaseStatus) {
            $.databaseStatus = databaseStatus;
            return this;
        }

        /**
         * @param databaseStatus The status of the Oracle Database. Indicates whether the status of the database is UP, DOWN, or UNKNOWN at the current time.
         * 
         * @return builder
         * 
         */
        public Builder databaseStatus(String databaseStatus) {
            return databaseStatus(Output.of(databaseStatus));
        }

        /**
         * @param databaseSubType The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
         * 
         * @return builder
         * 
         */
        public Builder databaseSubType(@Nullable Output<String> databaseSubType) {
            $.databaseSubType = databaseSubType;
            return this;
        }

        /**
         * @param databaseSubType The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
         * 
         * @return builder
         * 
         */
        public Builder databaseSubType(String databaseSubType) {
            return databaseSubType(Output.of(databaseSubType));
        }

        /**
         * @param databaseType The type of Oracle Database installation.
         * 
         * @return builder
         * 
         */
        public Builder databaseType(@Nullable Output<String> databaseType) {
            $.databaseType = databaseType;
            return this;
        }

        /**
         * @param databaseType The type of Oracle Database installation.
         * 
         * @return builder
         * 
         */
        public Builder databaseType(String databaseType) {
            return databaseType(Output.of(databaseType));
        }

        /**
         * @param databaseVersion The Oracle Database version.
         * 
         * @return builder
         * 
         */
        public Builder databaseVersion(@Nullable Output<String> databaseVersion) {
            $.databaseVersion = databaseVersion;
            return this;
        }

        /**
         * @param databaseVersion The Oracle Database version.
         * 
         * @return builder
         * 
         */
        public Builder databaseVersion(String databaseVersion) {
            return databaseVersion(Output.of(databaseVersion));
        }

        /**
         * @param dbSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that this Managed Database is part of.
         * 
         * @return builder
         * 
         */
        public Builder dbSystemId(@Nullable Output<String> dbSystemId) {
            $.dbSystemId = dbSystemId;
            return this;
        }

        /**
         * @param dbSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that this Managed Database is part of.
         * 
         * @return builder
         * 
         */
        public Builder dbSystemId(String dbSystemId) {
            return dbSystemId(Output.of(dbSystemId));
        }

        /**
         * @param dbmgmtFeatureConfigs The list of feature configurations
         * 
         * @return builder
         * 
         */
        public Builder dbmgmtFeatureConfigs(@Nullable Output<List<ManagedDatabaseDbmgmtFeatureConfigArgs>> dbmgmtFeatureConfigs) {
            $.dbmgmtFeatureConfigs = dbmgmtFeatureConfigs;
            return this;
        }

        /**
         * @param dbmgmtFeatureConfigs The list of feature configurations
         * 
         * @return builder
         * 
         */
        public Builder dbmgmtFeatureConfigs(List<ManagedDatabaseDbmgmtFeatureConfigArgs> dbmgmtFeatureConfigs) {
            return dbmgmtFeatureConfigs(Output.of(dbmgmtFeatureConfigs));
        }

        /**
         * @param dbmgmtFeatureConfigs The list of feature configurations
         * 
         * @return builder
         * 
         */
        public Builder dbmgmtFeatureConfigs(ManagedDatabaseDbmgmtFeatureConfigArgs... dbmgmtFeatureConfigs) {
            return dbmgmtFeatureConfigs(List.of(dbmgmtFeatureConfigs));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param deploymentType The infrastructure used to deploy the Oracle Database.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(@Nullable Output<String> deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        /**
         * @param deploymentType The infrastructure used to deploy the Oracle Database.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(String deploymentType) {
            return deploymentType(Output.of(deploymentType));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isCluster Indicates whether the Oracle Database is part of a cluster.
         * 
         * @return builder
         * 
         */
        public Builder isCluster(@Nullable Output<Boolean> isCluster) {
            $.isCluster = isCluster;
            return this;
        }

        /**
         * @param isCluster Indicates whether the Oracle Database is part of a cluster.
         * 
         * @return builder
         * 
         */
        public Builder isCluster(Boolean isCluster) {
            return isCluster(Output.of(isCluster));
        }

        /**
         * @param managedDatabaseGroups A list of Managed Database Groups that the Managed Database belongs to.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseGroups(@Nullable Output<List<ManagedDatabaseManagedDatabaseGroupArgs>> managedDatabaseGroups) {
            $.managedDatabaseGroups = managedDatabaseGroups;
            return this;
        }

        /**
         * @param managedDatabaseGroups A list of Managed Database Groups that the Managed Database belongs to.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseGroups(List<ManagedDatabaseManagedDatabaseGroupArgs> managedDatabaseGroups) {
            return managedDatabaseGroups(Output.of(managedDatabaseGroups));
        }

        /**
         * @param managedDatabaseGroups A list of Managed Database Groups that the Managed Database belongs to.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseGroups(ManagedDatabaseManagedDatabaseGroupArgs... managedDatabaseGroups) {
            return managedDatabaseGroups(List.of(managedDatabaseGroups));
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(@Nullable Output<String> managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            return managedDatabaseId(Output.of(managedDatabaseId));
        }

        /**
         * @param managementOption The management option used when enabling Database Management.
         * 
         * @return builder
         * 
         */
        public Builder managementOption(@Nullable Output<String> managementOption) {
            $.managementOption = managementOption;
            return this;
        }

        /**
         * @param managementOption The management option used when enabling Database Management.
         * 
         * @return builder
         * 
         */
        public Builder managementOption(String managementOption) {
            return managementOption(Output.of(managementOption));
        }

        /**
         * @param name The name of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parentContainerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent Container Database if Managed Database is a Pluggable Database.
         * 
         * @return builder
         * 
         */
        public Builder parentContainerId(@Nullable Output<String> parentContainerId) {
            $.parentContainerId = parentContainerId;
            return this;
        }

        /**
         * @param parentContainerId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent Container Database if Managed Database is a Pluggable Database.
         * 
         * @return builder
         * 
         */
        public Builder parentContainerId(String parentContainerId) {
            return parentContainerId(Output.of(parentContainerId));
        }

        /**
         * @param storageSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the storage DB system.
         * 
         * @return builder
         * 
         */
        public Builder storageSystemId(@Nullable Output<String> storageSystemId) {
            $.storageSystemId = storageSystemId;
            return this;
        }

        /**
         * @param storageSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the storage DB system.
         * 
         * @return builder
         * 
         */
        public Builder storageSystemId(String storageSystemId) {
            return storageSystemId(Output.of(storageSystemId));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The date and time the Managed Database was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the Managed Database was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param workloadType The workload type of the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder workloadType(@Nullable Output<String> workloadType) {
            $.workloadType = workloadType;
            return this;
        }

        /**
         * @param workloadType The workload type of the Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder workloadType(String workloadType) {
            return workloadType(Output.of(workloadType));
        }

        public ManagedDatabaseState build() {
            return $;
        }
    }

}
