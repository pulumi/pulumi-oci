// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PluggabledatabasePluggableDatabaseDbmFeaturesManagementState extends com.pulumi.resources.ResourceArgs {

    public static final PluggabledatabasePluggableDatabaseDbmFeaturesManagementState Empty = new PluggabledatabasePluggableDatabaseDbmFeaturesManagementState();

    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="enablePluggableDatabaseDbmFeature")
    private @Nullable Output<Boolean> enablePluggableDatabaseDbmFeature;

    /**
     * @return (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Boolean>> enablePluggableDatabaseDbmFeature() {
        return Optional.ofNullable(this.enablePluggableDatabaseDbmFeature);
    }

    @Import(name="feature")
    private @Nullable Output<String> feature;

    public Optional<Output<String>> feature() {
        return Optional.ofNullable(this.feature);
    }

    /**
     * The details required to enable the specified Database Management feature.
     * 
     */
    @Import(name="featureDetails")
    private @Nullable Output<PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsArgs> featureDetails;

    /**
     * @return The details required to enable the specified Database Management feature.
     * 
     */
    public Optional<Output<PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsArgs>> featureDetails() {
        return Optional.ofNullable(this.featureDetails);
    }

    @Import(name="modifyPluggableDatabaseDbmFeature")
    private @Nullable Output<Boolean> modifyPluggableDatabaseDbmFeature;

    public Optional<Output<Boolean>> modifyPluggableDatabaseDbmFeature() {
        return Optional.ofNullable(this.modifyPluggableDatabaseDbmFeature);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
     * 
     */
    @Import(name="pluggableDatabaseId")
    private @Nullable Output<String> pluggableDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
     * 
     */
    public Optional<Output<String>> pluggableDatabaseId() {
        return Optional.ofNullable(this.pluggableDatabaseId);
    }

    private PluggabledatabasePluggableDatabaseDbmFeaturesManagementState() {}

    private PluggabledatabasePluggableDatabaseDbmFeaturesManagementState(PluggabledatabasePluggableDatabaseDbmFeaturesManagementState $) {
        this.enablePluggableDatabaseDbmFeature = $.enablePluggableDatabaseDbmFeature;
        this.feature = $.feature;
        this.featureDetails = $.featureDetails;
        this.modifyPluggableDatabaseDbmFeature = $.modifyPluggableDatabaseDbmFeature;
        this.pluggableDatabaseId = $.pluggableDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluggabledatabasePluggableDatabaseDbmFeaturesManagementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluggabledatabasePluggableDatabaseDbmFeaturesManagementState $;

        public Builder() {
            $ = new PluggabledatabasePluggableDatabaseDbmFeaturesManagementState();
        }

        public Builder(PluggabledatabasePluggableDatabaseDbmFeaturesManagementState defaults) {
            $ = new PluggabledatabasePluggableDatabaseDbmFeaturesManagementState(Objects.requireNonNull(defaults));
        }

        /**
         * @param enablePluggableDatabaseDbmFeature (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enablePluggableDatabaseDbmFeature(@Nullable Output<Boolean> enablePluggableDatabaseDbmFeature) {
            $.enablePluggableDatabaseDbmFeature = enablePluggableDatabaseDbmFeature;
            return this;
        }

        /**
         * @param enablePluggableDatabaseDbmFeature (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enablePluggableDatabaseDbmFeature(Boolean enablePluggableDatabaseDbmFeature) {
            return enablePluggableDatabaseDbmFeature(Output.of(enablePluggableDatabaseDbmFeature));
        }

        public Builder feature(@Nullable Output<String> feature) {
            $.feature = feature;
            return this;
        }

        public Builder feature(String feature) {
            return feature(Output.of(feature));
        }

        /**
         * @param featureDetails The details required to enable the specified Database Management feature.
         * 
         * @return builder
         * 
         */
        public Builder featureDetails(@Nullable Output<PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsArgs> featureDetails) {
            $.featureDetails = featureDetails;
            return this;
        }

        /**
         * @param featureDetails The details required to enable the specified Database Management feature.
         * 
         * @return builder
         * 
         */
        public Builder featureDetails(PluggabledatabasePluggableDatabaseDbmFeaturesManagementFeatureDetailsArgs featureDetails) {
            return featureDetails(Output.of(featureDetails));
        }

        public Builder modifyPluggableDatabaseDbmFeature(@Nullable Output<Boolean> modifyPluggableDatabaseDbmFeature) {
            $.modifyPluggableDatabaseDbmFeature = modifyPluggableDatabaseDbmFeature;
            return this;
        }

        public Builder modifyPluggableDatabaseDbmFeature(Boolean modifyPluggableDatabaseDbmFeature) {
            return modifyPluggableDatabaseDbmFeature(Output.of(modifyPluggableDatabaseDbmFeature));
        }

        /**
         * @param pluggableDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
         * 
         * @return builder
         * 
         */
        public Builder pluggableDatabaseId(@Nullable Output<String> pluggableDatabaseId) {
            $.pluggableDatabaseId = pluggableDatabaseId;
            return this;
        }

        /**
         * @param pluggableDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle cloud pluggable database.
         * 
         * @return builder
         * 
         */
        public Builder pluggableDatabaseId(String pluggableDatabaseId) {
            return pluggableDatabaseId(Output.of(pluggableDatabaseId));
        }

        public PluggabledatabasePluggableDatabaseDbmFeaturesManagementState build() {
            return $;
        }
    }

}
