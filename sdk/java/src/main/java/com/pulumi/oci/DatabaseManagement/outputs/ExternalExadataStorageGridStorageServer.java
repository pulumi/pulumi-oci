// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExternalExadataStorageGridStorageServer {
    /**
     * @return The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> additionalDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connector.
     * 
     */
    private @Nullable String connectorId;
    /**
     * @return The CPU count of the Exadata storage server.
     * 
     */
    private @Nullable Double cpuCount;
    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The name of the Exadata resource. English letters, numbers, &#34;-&#34;, &#34;_&#34; and &#34;.&#34; only.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The internal ID of the Exadata resource.
     * 
     */
    private @Nullable String internalId;
    /**
     * @return The IP address of the Exadata storage server.
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return The details of the lifecycle state of the Exadata resource.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The make model of the Exadata storage server.
     * 
     */
    private @Nullable String makeModel;
    /**
     * @return The maximum flash disk IO operations per second of the Exadata storage server.
     * 
     */
    private @Nullable Integer maxFlashDiskIops;
    /**
     * @return The maximum flash disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    private @Nullable Integer maxFlashDiskThroughput;
    /**
     * @return The maximum hard disk IO operations per second of the Exadata storage server.
     * 
     */
    private @Nullable Integer maxHardDiskIops;
    /**
     * @return The maximum hard disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    private @Nullable Integer maxHardDiskThroughput;
    /**
     * @return The Exadata storage server memory size in GB.
     * 
     */
    private @Nullable Double memoryGb;
    /**
     * @return The type of Exadata resource.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The current lifecycle state of the database resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return The status of the Exadata resource.
     * 
     */
    private @Nullable String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The timestamp of the creation of the Exadata resource.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The timestamp of the last update of the Exadata resource.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The version of the Exadata resource.
     * 
     */
    private @Nullable String version;

    private ExternalExadataStorageGridStorageServer() {}
    /**
     * @return The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> additionalDetails() {
        return this.additionalDetails == null ? Map.of() : this.additionalDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connector.
     * 
     */
    public Optional<String> connectorId() {
        return Optional.ofNullable(this.connectorId);
    }
    /**
     * @return The CPU count of the Exadata storage server.
     * 
     */
    public Optional<Double> cpuCount() {
        return Optional.ofNullable(this.cpuCount);
    }
    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The name of the Exadata resource. English letters, numbers, &#34;-&#34;, &#34;_&#34; and &#34;.&#34; only.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The internal ID of the Exadata resource.
     * 
     */
    public Optional<String> internalId() {
        return Optional.ofNullable(this.internalId);
    }
    /**
     * @return The IP address of the Exadata storage server.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return The details of the lifecycle state of the Exadata resource.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The make model of the Exadata storage server.
     * 
     */
    public Optional<String> makeModel() {
        return Optional.ofNullable(this.makeModel);
    }
    /**
     * @return The maximum flash disk IO operations per second of the Exadata storage server.
     * 
     */
    public Optional<Integer> maxFlashDiskIops() {
        return Optional.ofNullable(this.maxFlashDiskIops);
    }
    /**
     * @return The maximum flash disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    public Optional<Integer> maxFlashDiskThroughput() {
        return Optional.ofNullable(this.maxFlashDiskThroughput);
    }
    /**
     * @return The maximum hard disk IO operations per second of the Exadata storage server.
     * 
     */
    public Optional<Integer> maxHardDiskIops() {
        return Optional.ofNullable(this.maxHardDiskIops);
    }
    /**
     * @return The maximum hard disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    public Optional<Integer> maxHardDiskThroughput() {
        return Optional.ofNullable(this.maxHardDiskThroughput);
    }
    /**
     * @return The Exadata storage server memory size in GB.
     * 
     */
    public Optional<Double> memoryGb() {
        return Optional.ofNullable(this.memoryGb);
    }
    /**
     * @return The type of Exadata resource.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The current lifecycle state of the database resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The status of the Exadata resource.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The timestamp of the creation of the Exadata resource.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The timestamp of the last update of the Exadata resource.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The version of the Exadata resource.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExternalExadataStorageGridStorageServer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> additionalDetails;
        private @Nullable String connectorId;
        private @Nullable Double cpuCount;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String internalId;
        private @Nullable String ipAddress;
        private @Nullable String lifecycleDetails;
        private @Nullable String makeModel;
        private @Nullable Integer maxFlashDiskIops;
        private @Nullable Integer maxFlashDiskThroughput;
        private @Nullable Integer maxHardDiskIops;
        private @Nullable Integer maxHardDiskThroughput;
        private @Nullable Double memoryGb;
        private @Nullable String resourceType;
        private @Nullable String state;
        private @Nullable String status;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String version;
        public Builder() {}
        public Builder(ExternalExadataStorageGridStorageServer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetails = defaults.additionalDetails;
    	      this.connectorId = defaults.connectorId;
    	      this.cpuCount = defaults.cpuCount;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.internalId = defaults.internalId;
    	      this.ipAddress = defaults.ipAddress;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.makeModel = defaults.makeModel;
    	      this.maxFlashDiskIops = defaults.maxFlashDiskIops;
    	      this.maxFlashDiskThroughput = defaults.maxFlashDiskThroughput;
    	      this.maxHardDiskIops = defaults.maxHardDiskIops;
    	      this.maxHardDiskThroughput = defaults.maxHardDiskThroughput;
    	      this.memoryGb = defaults.memoryGb;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder additionalDetails(@Nullable Map<String,Object> additionalDetails) {

            this.additionalDetails = additionalDetails;
            return this;
        }
        @CustomType.Setter
        public Builder connectorId(@Nullable String connectorId) {

            this.connectorId = connectorId;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCount(@Nullable Double cpuCount) {

            this.cpuCount = cpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {

            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {

            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder internalId(@Nullable String internalId) {

            this.internalId = internalId;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {

            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {

            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder makeModel(@Nullable String makeModel) {

            this.makeModel = makeModel;
            return this;
        }
        @CustomType.Setter
        public Builder maxFlashDiskIops(@Nullable Integer maxFlashDiskIops) {

            this.maxFlashDiskIops = maxFlashDiskIops;
            return this;
        }
        @CustomType.Setter
        public Builder maxFlashDiskThroughput(@Nullable Integer maxFlashDiskThroughput) {

            this.maxFlashDiskThroughput = maxFlashDiskThroughput;
            return this;
        }
        @CustomType.Setter
        public Builder maxHardDiskIops(@Nullable Integer maxHardDiskIops) {

            this.maxHardDiskIops = maxHardDiskIops;
            return this;
        }
        @CustomType.Setter
        public Builder maxHardDiskThroughput(@Nullable Integer maxHardDiskThroughput) {

            this.maxHardDiskThroughput = maxHardDiskThroughput;
            return this;
        }
        @CustomType.Setter
        public Builder memoryGb(@Nullable Double memoryGb) {

            this.memoryGb = memoryGb;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {

            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {

            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {

            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public ExternalExadataStorageGridStorageServer build() {
            final var _resultValue = new ExternalExadataStorageGridStorageServer();
            _resultValue.additionalDetails = additionalDetails;
            _resultValue.connectorId = connectorId;
            _resultValue.cpuCount = cpuCount;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.internalId = internalId;
            _resultValue.ipAddress = ipAddress;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.makeModel = makeModel;
            _resultValue.maxFlashDiskIops = maxFlashDiskIops;
            _resultValue.maxFlashDiskThroughput = maxFlashDiskThroughput;
            _resultValue.maxHardDiskIops = maxHardDiskIops;
            _resultValue.maxHardDiskThroughput = maxHardDiskThroughput;
            _resultValue.memoryGb = memoryGb;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
