// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExternalListenerEndpoint {
    /**
     * @return The host name or IP address.
     * 
     */
    private @Nullable String host;
    /**
     * @return The unique name of the service.
     * 
     */
    private @Nullable String key;
    /**
     * @return The port number.
     * 
     */
    private @Nullable Integer port;
    /**
     * @return The listener protocol.
     * 
     */
    private @Nullable String protocol;
    /**
     * @return The list of services registered with the listener.
     * 
     */
    private @Nullable List<String> services;

    private ExternalListenerEndpoint() {}
    /**
     * @return The host name or IP address.
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return The unique name of the service.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return The port number.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return The listener protocol.
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }
    /**
     * @return The list of services registered with the listener.
     * 
     */
    public List<String> services() {
        return this.services == null ? List.of() : this.services;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExternalListenerEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String host;
        private @Nullable String key;
        private @Nullable Integer port;
        private @Nullable String protocol;
        private @Nullable List<String> services;
        public Builder() {}
        public Builder(ExternalListenerEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.key = defaults.key;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.services = defaults.services;
        }

        @CustomType.Setter
        public Builder host(@Nullable String host) {

            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {

            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {

            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {

            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder services(@Nullable List<String> services) {

            this.services = services;
            return this;
        }
        public Builder services(String... services) {
            return services(List.of(services));
        }
        public ExternalListenerEndpoint build() {
            final var _resultValue = new ExternalListenerEndpoint();
            _resultValue.host = host;
            _resultValue.key = key;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            _resultValue.services = services;
            return _resultValue;
        }
    }
}
