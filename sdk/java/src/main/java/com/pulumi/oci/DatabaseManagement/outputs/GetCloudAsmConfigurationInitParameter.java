// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudAsmConfigurationInitParameter {
    /**
     * @return The user-friendly name for the ASM instance. The name does not have to be unique.
     * 
     */
    private String asmInstanceDisplayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud ASM instance.
     * 
     */
    private String asmInstanceId;
    /**
     * @return The list of disk group names that an ASM instance mounts at startup or when the `ALTER DISKGROUP ALL MOUNT` statement is issued.
     * 
     */
    private List<String> autoMountDiskGroups;
    /**
     * @return An operating system-dependent value used to limit the set of disks considered for discovery.
     * 
     */
    private String diskDiscoveryPath;
    /**
     * @return The list of failure groups that contain preferred read disks.
     * 
     */
    private List<String> preferredReadFailureGroups;
    /**
     * @return The maximum power on an ASM instance for disk rebalancing.
     * 
     */
    private Integer rebalancePower;

    private GetCloudAsmConfigurationInitParameter() {}
    /**
     * @return The user-friendly name for the ASM instance. The name does not have to be unique.
     * 
     */
    public String asmInstanceDisplayName() {
        return this.asmInstanceDisplayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud ASM instance.
     * 
     */
    public String asmInstanceId() {
        return this.asmInstanceId;
    }
    /**
     * @return The list of disk group names that an ASM instance mounts at startup or when the `ALTER DISKGROUP ALL MOUNT` statement is issued.
     * 
     */
    public List<String> autoMountDiskGroups() {
        return this.autoMountDiskGroups;
    }
    /**
     * @return An operating system-dependent value used to limit the set of disks considered for discovery.
     * 
     */
    public String diskDiscoveryPath() {
        return this.diskDiscoveryPath;
    }
    /**
     * @return The list of failure groups that contain preferred read disks.
     * 
     */
    public List<String> preferredReadFailureGroups() {
        return this.preferredReadFailureGroups;
    }
    /**
     * @return The maximum power on an ASM instance for disk rebalancing.
     * 
     */
    public Integer rebalancePower() {
        return this.rebalancePower;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudAsmConfigurationInitParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String asmInstanceDisplayName;
        private String asmInstanceId;
        private List<String> autoMountDiskGroups;
        private String diskDiscoveryPath;
        private List<String> preferredReadFailureGroups;
        private Integer rebalancePower;
        public Builder() {}
        public Builder(GetCloudAsmConfigurationInitParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asmInstanceDisplayName = defaults.asmInstanceDisplayName;
    	      this.asmInstanceId = defaults.asmInstanceId;
    	      this.autoMountDiskGroups = defaults.autoMountDiskGroups;
    	      this.diskDiscoveryPath = defaults.diskDiscoveryPath;
    	      this.preferredReadFailureGroups = defaults.preferredReadFailureGroups;
    	      this.rebalancePower = defaults.rebalancePower;
        }

        @CustomType.Setter
        public Builder asmInstanceDisplayName(String asmInstanceDisplayName) {
            if (asmInstanceDisplayName == null) {
              throw new MissingRequiredPropertyException("GetCloudAsmConfigurationInitParameter", "asmInstanceDisplayName");
            }
            this.asmInstanceDisplayName = asmInstanceDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder asmInstanceId(String asmInstanceId) {
            if (asmInstanceId == null) {
              throw new MissingRequiredPropertyException("GetCloudAsmConfigurationInitParameter", "asmInstanceId");
            }
            this.asmInstanceId = asmInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder autoMountDiskGroups(List<String> autoMountDiskGroups) {
            if (autoMountDiskGroups == null) {
              throw new MissingRequiredPropertyException("GetCloudAsmConfigurationInitParameter", "autoMountDiskGroups");
            }
            this.autoMountDiskGroups = autoMountDiskGroups;
            return this;
        }
        public Builder autoMountDiskGroups(String... autoMountDiskGroups) {
            return autoMountDiskGroups(List.of(autoMountDiskGroups));
        }
        @CustomType.Setter
        public Builder diskDiscoveryPath(String diskDiscoveryPath) {
            if (diskDiscoveryPath == null) {
              throw new MissingRequiredPropertyException("GetCloudAsmConfigurationInitParameter", "diskDiscoveryPath");
            }
            this.diskDiscoveryPath = diskDiscoveryPath;
            return this;
        }
        @CustomType.Setter
        public Builder preferredReadFailureGroups(List<String> preferredReadFailureGroups) {
            if (preferredReadFailureGroups == null) {
              throw new MissingRequiredPropertyException("GetCloudAsmConfigurationInitParameter", "preferredReadFailureGroups");
            }
            this.preferredReadFailureGroups = preferredReadFailureGroups;
            return this;
        }
        public Builder preferredReadFailureGroups(String... preferredReadFailureGroups) {
            return preferredReadFailureGroups(List.of(preferredReadFailureGroups));
        }
        @CustomType.Setter
        public Builder rebalancePower(Integer rebalancePower) {
            if (rebalancePower == null) {
              throw new MissingRequiredPropertyException("GetCloudAsmConfigurationInitParameter", "rebalancePower");
            }
            this.rebalancePower = rebalancePower;
            return this;
        }
        public GetCloudAsmConfigurationInitParameter build() {
            final var _resultValue = new GetCloudAsmConfigurationInitParameter();
            _resultValue.asmInstanceDisplayName = asmInstanceDisplayName;
            _resultValue.asmInstanceId = asmInstanceId;
            _resultValue.autoMountDiskGroups = autoMountDiskGroups;
            _resultValue.diskDiscoveryPath = diskDiscoveryPath;
            _resultValue.preferredReadFailureGroups = preferredReadFailureGroups;
            _resultValue.rebalancePower = rebalancePower;
            return _resultValue;
        }
    }
}
