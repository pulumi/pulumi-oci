// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstanceConnector;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance {
    /**
     * @return The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
     * 
     */
    private String adrHomeDirectory;
    /**
     * @return The unique identifier of the Oracle cluster.
     * 
     */
    private String clusterId;
    /**
     * @return The connector details used to connect to the cloud DB system component.
     * 
     */
    private List<GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstanceConnector> connectors;
    /**
     * @return The Oracle base location of Cluster Ready Services (CRS).
     * 
     */
    private String crsBaseDirectory;
    /**
     * @return The host name of the database or the SCAN name in case of a RAC database.
     * 
     */
    private String hostName;
    /**
     * @return The role of the cluster node.
     * 
     */
    private String nodeRole;

    private GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance() {}
    /**
     * @return The Automatic Diagnostic Repository (ADR) home directory for the DB instance.
     * 
     */
    public String adrHomeDirectory() {
        return this.adrHomeDirectory;
    }
    /**
     * @return The unique identifier of the Oracle cluster.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The connector details used to connect to the cloud DB system component.
     * 
     */
    public List<GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstanceConnector> connectors() {
        return this.connectors;
    }
    /**
     * @return The Oracle base location of Cluster Ready Services (CRS).
     * 
     */
    public String crsBaseDirectory() {
        return this.crsBaseDirectory;
    }
    /**
     * @return The host name of the database or the SCAN name in case of a RAC database.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The role of the cluster node.
     * 
     */
    public String nodeRole() {
        return this.nodeRole;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adrHomeDirectory;
        private String clusterId;
        private List<GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstanceConnector> connectors;
        private String crsBaseDirectory;
        private String hostName;
        private String nodeRole;
        public Builder() {}
        public Builder(GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adrHomeDirectory = defaults.adrHomeDirectory;
    	      this.clusterId = defaults.clusterId;
    	      this.connectors = defaults.connectors;
    	      this.crsBaseDirectory = defaults.crsBaseDirectory;
    	      this.hostName = defaults.hostName;
    	      this.nodeRole = defaults.nodeRole;
        }

        @CustomType.Setter
        public Builder adrHomeDirectory(String adrHomeDirectory) {
            if (adrHomeDirectory == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance", "adrHomeDirectory");
            }
            this.adrHomeDirectory = adrHomeDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder connectors(List<GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstanceConnector> connectors) {
            if (connectors == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance", "connectors");
            }
            this.connectors = connectors;
            return this;
        }
        public Builder connectors(GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstanceConnector... connectors) {
            return connectors(List.of(connectors));
        }
        @CustomType.Setter
        public Builder crsBaseDirectory(String crsBaseDirectory) {
            if (crsBaseDirectory == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance", "crsBaseDirectory");
            }
            this.crsBaseDirectory = crsBaseDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder nodeRole(String nodeRole) {
            if (nodeRole == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance", "nodeRole");
            }
            this.nodeRole = nodeRole;
            return this;
        }
        public GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance build() {
            final var _resultValue = new GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemDiscoveredComponentClusterInstance();
            _resultValue.adrHomeDirectory = adrHomeDirectory;
            _resultValue.clusterId = clusterId;
            _resultValue.connectors = connectors;
            _resultValue.crsBaseDirectory = crsBaseDirectory;
            _resultValue.hostName = hostName;
            _resultValue.nodeRole = nodeRole;
            return _resultValue;
        }
    }
}
