// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValueConnector;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValue {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The connector details used to connect to the cloud DB system component.
     * 
     */
    private List<GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValueConnector> connectors;
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    private String displayName;
    /**
     * @return Indicates whether the DB system component should be provisioned as an Oracle Cloud Infrastructure resource or not.
     * 
     */
    private Boolean isSelectedForMonitoring;

    private GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValue() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The connector details used to connect to the cloud DB system component.
     * 
     */
    public List<GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValueConnector> connectors() {
        return this.connectors;
    }
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Indicates whether the DB system component should be provisioned as an Oracle Cloud Infrastructure resource or not.
     * 
     */
    public Boolean isSelectedForMonitoring() {
        return this.isSelectedForMonitoring;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValue defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValueConnector> connectors;
        private String displayName;
        private Boolean isSelectedForMonitoring;
        public Builder() {}
        public Builder(GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectors = defaults.connectors;
    	      this.displayName = defaults.displayName;
    	      this.isSelectedForMonitoring = defaults.isSelectedForMonitoring;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValue", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectors(List<GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValueConnector> connectors) {
            if (connectors == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValue", "connectors");
            }
            this.connectors = connectors;
            return this;
        }
        public Builder connectors(GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValueConnector... connectors) {
            return connectors(List.of(connectors));
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValue", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder isSelectedForMonitoring(Boolean isSelectedForMonitoring) {
            if (isSelectedForMonitoring == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValue", "isSelectedForMonitoring");
            }
            this.isSelectedForMonitoring = isSelectedForMonitoring;
            return this;
        }
        public GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValue build() {
            final var _resultValue = new GetCloudDbSystemDiscoveriesCloudDbSystemDiscoveryCollectionItemPatchOperationValue();
            _resultValue.compartmentId = compartmentId;
            _resultValue.connectors = connectors;
            _resultValue.displayName = displayName;
            _resultValue.isSelectedForMonitoring = isSelectedForMonitoring;
            return _resultValue;
        }
    }
}
