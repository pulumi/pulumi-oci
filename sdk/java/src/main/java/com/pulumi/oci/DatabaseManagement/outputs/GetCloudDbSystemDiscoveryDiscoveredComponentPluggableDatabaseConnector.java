// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfo;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used for the cloud DB system connector.
     * 
     */
    private String agentId;
    /**
     * @return The error message indicating the reason for connection failure or `null` if the connection was successful.
     * 
     */
    private String connectionFailureMessage;
    /**
     * @return The connection details required to connect to a cloud DB system component.
     * 
     */
    private List<GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfo> connectionInfos;
    /**
     * @return The status of connectivity to the cloud DB system component.
     * 
     */
    private String connectionStatus;
    /**
     * @return The type of connector.
     * 
     */
    private String connectorType;
    /**
     * @return The user-friendly name for the DB system. The name does not have to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The date and time the connectionStatus of the cloud DB system connector was last updated.
     * 
     */
    private String timeConnectionStatusLastUpdated;

    private GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used for the cloud DB system connector.
     * 
     */
    public String agentId() {
        return this.agentId;
    }
    /**
     * @return The error message indicating the reason for connection failure or `null` if the connection was successful.
     * 
     */
    public String connectionFailureMessage() {
        return this.connectionFailureMessage;
    }
    /**
     * @return The connection details required to connect to a cloud DB system component.
     * 
     */
    public List<GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfo> connectionInfos() {
        return this.connectionInfos;
    }
    /**
     * @return The status of connectivity to the cloud DB system component.
     * 
     */
    public String connectionStatus() {
        return this.connectionStatus;
    }
    /**
     * @return The type of connector.
     * 
     */
    public String connectorType() {
        return this.connectorType;
    }
    /**
     * @return The user-friendly name for the DB system. The name does not have to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The date and time the connectionStatus of the cloud DB system connector was last updated.
     * 
     */
    public String timeConnectionStatusLastUpdated() {
        return this.timeConnectionStatusLastUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String agentId;
        private String connectionFailureMessage;
        private List<GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfo> connectionInfos;
        private String connectionStatus;
        private String connectorType;
        private String displayName;
        private String timeConnectionStatusLastUpdated;
        public Builder() {}
        public Builder(GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentId = defaults.agentId;
    	      this.connectionFailureMessage = defaults.connectionFailureMessage;
    	      this.connectionInfos = defaults.connectionInfos;
    	      this.connectionStatus = defaults.connectionStatus;
    	      this.connectorType = defaults.connectorType;
    	      this.displayName = defaults.displayName;
    	      this.timeConnectionStatusLastUpdated = defaults.timeConnectionStatusLastUpdated;
        }

        @CustomType.Setter
        public Builder agentId(String agentId) {
            if (agentId == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector", "agentId");
            }
            this.agentId = agentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectionFailureMessage(String connectionFailureMessage) {
            if (connectionFailureMessage == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector", "connectionFailureMessage");
            }
            this.connectionFailureMessage = connectionFailureMessage;
            return this;
        }
        @CustomType.Setter
        public Builder connectionInfos(List<GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfo> connectionInfos) {
            if (connectionInfos == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector", "connectionInfos");
            }
            this.connectionInfos = connectionInfos;
            return this;
        }
        public Builder connectionInfos(GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnectorConnectionInfo... connectionInfos) {
            return connectionInfos(List.of(connectionInfos));
        }
        @CustomType.Setter
        public Builder connectionStatus(String connectionStatus) {
            if (connectionStatus == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector", "connectionStatus");
            }
            this.connectionStatus = connectionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder connectorType(String connectorType) {
            if (connectorType == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector", "connectorType");
            }
            this.connectorType = connectorType;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder timeConnectionStatusLastUpdated(String timeConnectionStatusLastUpdated) {
            if (timeConnectionStatusLastUpdated == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector", "timeConnectionStatusLastUpdated");
            }
            this.timeConnectionStatusLastUpdated = timeConnectionStatusLastUpdated;
            return this;
        }
        public GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector build() {
            final var _resultValue = new GetCloudDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector();
            _resultValue.agentId = agentId;
            _resultValue.connectionFailureMessage = connectionFailureMessage;
            _resultValue.connectionInfos = connectionInfos;
            _resultValue.connectionStatus = connectionStatus;
            _resultValue.connectorType = connectorType;
            _resultValue.displayName = displayName;
            _resultValue.timeConnectionStatusLastUpdated = timeConnectionStatusLastUpdated;
            return _resultValue;
        }
    }
}
