// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetCloudDbSystemsCloudDbSystemCollection;
import com.pulumi.oci.DatabaseManagement.outputs.GetCloudDbSystemsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudDbSystemsResult {
    /**
     * @return The list of cloud_db_system_collection.
     * 
     */
    private List<GetCloudDbSystemsCloudDbSystemCollection> cloudDbSystemCollections;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent cloud DB Infrastructure. For VM Dbsystems , it will be the DBSystem Id. For ExaCS and ExaCC,  it will be the cloudVmClusterId and vmClusterId respectively.
     * 
     */
    private @Nullable String dbaasParentInfrastructureId;
    /**
     * @return The deployment type of cloud dbsystem.
     * 
     */
    private @Nullable String deploymentType;
    /**
     * @return The user-friendly name for the DB system. The name does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetCloudDbSystemsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The current lifecycle state of the cloud DB system resource.
     * 
     */
    private @Nullable String state;

    private GetCloudDbSystemsResult() {}
    /**
     * @return The list of cloud_db_system_collection.
     * 
     */
    public List<GetCloudDbSystemsCloudDbSystemCollection> cloudDbSystemCollections() {
        return this.cloudDbSystemCollections;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the parent cloud DB Infrastructure. For VM Dbsystems , it will be the DBSystem Id. For ExaCS and ExaCC,  it will be the cloudVmClusterId and vmClusterId respectively.
     * 
     */
    public Optional<String> dbaasParentInfrastructureId() {
        return Optional.ofNullable(this.dbaasParentInfrastructureId);
    }
    /**
     * @return The deployment type of cloud dbsystem.
     * 
     */
    public Optional<String> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }
    /**
     * @return The user-friendly name for the DB system. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetCloudDbSystemsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current lifecycle state of the cloud DB system resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudDbSystemsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCloudDbSystemsCloudDbSystemCollection> cloudDbSystemCollections;
        private String compartmentId;
        private @Nullable String dbaasParentInfrastructureId;
        private @Nullable String deploymentType;
        private @Nullable String displayName;
        private @Nullable List<GetCloudDbSystemsFilter> filters;
        private String id;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetCloudDbSystemsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudDbSystemCollections = defaults.cloudDbSystemCollections;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbaasParentInfrastructureId = defaults.dbaasParentInfrastructureId;
    	      this.deploymentType = defaults.deploymentType;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder cloudDbSystemCollections(List<GetCloudDbSystemsCloudDbSystemCollection> cloudDbSystemCollections) {
            if (cloudDbSystemCollections == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemsResult", "cloudDbSystemCollections");
            }
            this.cloudDbSystemCollections = cloudDbSystemCollections;
            return this;
        }
        public Builder cloudDbSystemCollections(GetCloudDbSystemsCloudDbSystemCollection... cloudDbSystemCollections) {
            return cloudDbSystemCollections(List.of(cloudDbSystemCollections));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dbaasParentInfrastructureId(@Nullable String dbaasParentInfrastructureId) {

            this.dbaasParentInfrastructureId = dbaasParentInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(@Nullable String deploymentType) {

            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetCloudDbSystemsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetCloudDbSystemsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudDbSystemsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetCloudDbSystemsResult build() {
            final var _resultValue = new GetCloudDbSystemsResult();
            _resultValue.cloudDbSystemCollections = cloudDbSystemCollections;
            _resultValue.compartmentId = compartmentId;
            _resultValue.dbaasParentInfrastructureId = dbaasParentInfrastructureId;
            _resultValue.deploymentType = deploymentType;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
