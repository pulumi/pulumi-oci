// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetCloudListenerEndpoint;
import com.pulumi.oci.DatabaseManagement.outputs.GetCloudListenerServicedAsm;
import com.pulumi.oci.DatabaseManagement.outputs.GetCloudListenerServicedDatabase;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCloudListenerResult {
    /**
     * @return The additional details of the cloud listener defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> additionalDetails;
    /**
     * @return The directory that stores tracing and logging incidents when Automatic Diagnostic Repository (ADR) is enabled.
     * 
     */
    private String adrHomeDirectory;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud connector.
     * 
     */
    private String cloudConnectorId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB home.
     * 
     */
    private String cloudDbHomeId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB node.
     * 
     */
    private String cloudDbNodeId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB system that the listener is a part of.
     * 
     */
    private String cloudDbSystemId;
    private String cloudListenerId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the cloud database resides.
     * 
     */
    private String compartmentId;
    /**
     * @return The name of the cloud listener.
     * 
     */
    private String componentName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the existing Dbaas Oracle Cloud Infrastructure resource matching the discovered DB system component.
     * 
     */
    private String dbaasId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The user-friendly name for the database. The name does not have to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The list of protocol addresses the listener is configured to listen on.
     * 
     */
    private List<GetCloudListenerEndpoint> endpoints;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The name of the host on which the cloud listener is running.
     * 
     */
    private String hostName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud database.
     * 
     */
    private String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The listener alias.
     * 
     */
    private String listenerAlias;
    /**
     * @return The location of the listener configuration file listener.ora.
     * 
     */
    private String listenerOraLocation;
    /**
     * @return The type of listener.
     * 
     */
    private String listenerType;
    /**
     * @return The destination directory of the listener log file.
     * 
     */
    private String logDirectory;
    /**
     * @return The Oracle home location of the listener.
     * 
     */
    private String oracleHome;
    /**
     * @return The list of ASMs that are serviced by the listener.
     * 
     */
    private List<GetCloudListenerServicedAsm> servicedAsms;
    /**
     * @return The list of databases that are serviced by the listener.
     * 
     */
    private List<GetCloudListenerServicedDatabase> servicedDatabases;
    /**
     * @return The current lifecycle state of the cloud listener.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the cloud listener was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the cloud listener was last updated.
     * 
     */
    private String timeUpdated;
    /**
     * @return The destination directory of the listener trace file.
     * 
     */
    private String traceDirectory;
    /**
     * @return The listener version.
     * 
     */
    private String version;

    private GetCloudListenerResult() {}
    /**
     * @return The additional details of the cloud listener defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> additionalDetails() {
        return this.additionalDetails;
    }
    /**
     * @return The directory that stores tracing and logging incidents when Automatic Diagnostic Repository (ADR) is enabled.
     * 
     */
    public String adrHomeDirectory() {
        return this.adrHomeDirectory;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud connector.
     * 
     */
    public String cloudConnectorId() {
        return this.cloudConnectorId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB home.
     * 
     */
    public String cloudDbHomeId() {
        return this.cloudDbHomeId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB node.
     * 
     */
    public String cloudDbNodeId() {
        return this.cloudDbNodeId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud DB system that the listener is a part of.
     * 
     */
    public String cloudDbSystemId() {
        return this.cloudDbSystemId;
    }
    public String cloudListenerId() {
        return this.cloudListenerId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the cloud database resides.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The name of the cloud listener.
     * 
     */
    public String componentName() {
        return this.componentName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the existing Dbaas Oracle Cloud Infrastructure resource matching the discovered DB system component.
     * 
     */
    public String dbaasId() {
        return this.dbaasId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name for the database. The name does not have to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The list of protocol addresses the listener is configured to listen on.
     * 
     */
    public List<GetCloudListenerEndpoint> endpoints() {
        return this.endpoints;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The name of the host on which the cloud listener is running.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cloud database.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The listener alias.
     * 
     */
    public String listenerAlias() {
        return this.listenerAlias;
    }
    /**
     * @return The location of the listener configuration file listener.ora.
     * 
     */
    public String listenerOraLocation() {
        return this.listenerOraLocation;
    }
    /**
     * @return The type of listener.
     * 
     */
    public String listenerType() {
        return this.listenerType;
    }
    /**
     * @return The destination directory of the listener log file.
     * 
     */
    public String logDirectory() {
        return this.logDirectory;
    }
    /**
     * @return The Oracle home location of the listener.
     * 
     */
    public String oracleHome() {
        return this.oracleHome;
    }
    /**
     * @return The list of ASMs that are serviced by the listener.
     * 
     */
    public List<GetCloudListenerServicedAsm> servicedAsms() {
        return this.servicedAsms;
    }
    /**
     * @return The list of databases that are serviced by the listener.
     * 
     */
    public List<GetCloudListenerServicedDatabase> servicedDatabases() {
        return this.servicedDatabases;
    }
    /**
     * @return The current lifecycle state of the cloud listener.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the cloud listener was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the cloud listener was last updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The destination directory of the listener trace file.
     * 
     */
    public String traceDirectory() {
        return this.traceDirectory;
    }
    /**
     * @return The listener version.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudListenerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> additionalDetails;
        private String adrHomeDirectory;
        private String cloudConnectorId;
        private String cloudDbHomeId;
        private String cloudDbNodeId;
        private String cloudDbSystemId;
        private String cloudListenerId;
        private String compartmentId;
        private String componentName;
        private String dbaasId;
        private Map<String,String> definedTags;
        private String displayName;
        private List<GetCloudListenerEndpoint> endpoints;
        private Map<String,String> freeformTags;
        private String hostName;
        private String id;
        private String lifecycleDetails;
        private String listenerAlias;
        private String listenerOraLocation;
        private String listenerType;
        private String logDirectory;
        private String oracleHome;
        private List<GetCloudListenerServicedAsm> servicedAsms;
        private List<GetCloudListenerServicedDatabase> servicedDatabases;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String traceDirectory;
        private String version;
        public Builder() {}
        public Builder(GetCloudListenerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetails = defaults.additionalDetails;
    	      this.adrHomeDirectory = defaults.adrHomeDirectory;
    	      this.cloudConnectorId = defaults.cloudConnectorId;
    	      this.cloudDbHomeId = defaults.cloudDbHomeId;
    	      this.cloudDbNodeId = defaults.cloudDbNodeId;
    	      this.cloudDbSystemId = defaults.cloudDbSystemId;
    	      this.cloudListenerId = defaults.cloudListenerId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.componentName = defaults.componentName;
    	      this.dbaasId = defaults.dbaasId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.endpoints = defaults.endpoints;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.listenerAlias = defaults.listenerAlias;
    	      this.listenerOraLocation = defaults.listenerOraLocation;
    	      this.listenerType = defaults.listenerType;
    	      this.logDirectory = defaults.logDirectory;
    	      this.oracleHome = defaults.oracleHome;
    	      this.servicedAsms = defaults.servicedAsms;
    	      this.servicedDatabases = defaults.servicedDatabases;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.traceDirectory = defaults.traceDirectory;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder additionalDetails(Map<String,String> additionalDetails) {
            if (additionalDetails == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "additionalDetails");
            }
            this.additionalDetails = additionalDetails;
            return this;
        }
        @CustomType.Setter
        public Builder adrHomeDirectory(String adrHomeDirectory) {
            if (adrHomeDirectory == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "adrHomeDirectory");
            }
            this.adrHomeDirectory = adrHomeDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder cloudConnectorId(String cloudConnectorId) {
            if (cloudConnectorId == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "cloudConnectorId");
            }
            this.cloudConnectorId = cloudConnectorId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudDbHomeId(String cloudDbHomeId) {
            if (cloudDbHomeId == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "cloudDbHomeId");
            }
            this.cloudDbHomeId = cloudDbHomeId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudDbNodeId(String cloudDbNodeId) {
            if (cloudDbNodeId == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "cloudDbNodeId");
            }
            this.cloudDbNodeId = cloudDbNodeId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudDbSystemId(String cloudDbSystemId) {
            if (cloudDbSystemId == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "cloudDbSystemId");
            }
            this.cloudDbSystemId = cloudDbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudListenerId(String cloudListenerId) {
            if (cloudListenerId == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "cloudListenerId");
            }
            this.cloudListenerId = cloudListenerId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder componentName(String componentName) {
            if (componentName == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "componentName");
            }
            this.componentName = componentName;
            return this;
        }
        @CustomType.Setter
        public Builder dbaasId(String dbaasId) {
            if (dbaasId == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "dbaasId");
            }
            this.dbaasId = dbaasId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder endpoints(List<GetCloudListenerEndpoint> endpoints) {
            if (endpoints == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "endpoints");
            }
            this.endpoints = endpoints;
            return this;
        }
        public Builder endpoints(GetCloudListenerEndpoint... endpoints) {
            return endpoints(List.of(endpoints));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder listenerAlias(String listenerAlias) {
            if (listenerAlias == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "listenerAlias");
            }
            this.listenerAlias = listenerAlias;
            return this;
        }
        @CustomType.Setter
        public Builder listenerOraLocation(String listenerOraLocation) {
            if (listenerOraLocation == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "listenerOraLocation");
            }
            this.listenerOraLocation = listenerOraLocation;
            return this;
        }
        @CustomType.Setter
        public Builder listenerType(String listenerType) {
            if (listenerType == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "listenerType");
            }
            this.listenerType = listenerType;
            return this;
        }
        @CustomType.Setter
        public Builder logDirectory(String logDirectory) {
            if (logDirectory == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "logDirectory");
            }
            this.logDirectory = logDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder oracleHome(String oracleHome) {
            if (oracleHome == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "oracleHome");
            }
            this.oracleHome = oracleHome;
            return this;
        }
        @CustomType.Setter
        public Builder servicedAsms(List<GetCloudListenerServicedAsm> servicedAsms) {
            if (servicedAsms == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "servicedAsms");
            }
            this.servicedAsms = servicedAsms;
            return this;
        }
        public Builder servicedAsms(GetCloudListenerServicedAsm... servicedAsms) {
            return servicedAsms(List.of(servicedAsms));
        }
        @CustomType.Setter
        public Builder servicedDatabases(List<GetCloudListenerServicedDatabase> servicedDatabases) {
            if (servicedDatabases == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "servicedDatabases");
            }
            this.servicedDatabases = servicedDatabases;
            return this;
        }
        public Builder servicedDatabases(GetCloudListenerServicedDatabase... servicedDatabases) {
            return servicedDatabases(List.of(servicedDatabases));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder traceDirectory(String traceDirectory) {
            if (traceDirectory == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "traceDirectory");
            }
            this.traceDirectory = traceDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetCloudListenerResult build() {
            final var _resultValue = new GetCloudListenerResult();
            _resultValue.additionalDetails = additionalDetails;
            _resultValue.adrHomeDirectory = adrHomeDirectory;
            _resultValue.cloudConnectorId = cloudConnectorId;
            _resultValue.cloudDbHomeId = cloudDbHomeId;
            _resultValue.cloudDbNodeId = cloudDbNodeId;
            _resultValue.cloudDbSystemId = cloudDbSystemId;
            _resultValue.cloudListenerId = cloudListenerId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.componentName = componentName;
            _resultValue.dbaasId = dbaasId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.endpoints = endpoints;
            _resultValue.freeformTags = freeformTags;
            _resultValue.hostName = hostName;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.listenerAlias = listenerAlias;
            _resultValue.listenerOraLocation = listenerOraLocation;
            _resultValue.listenerType = listenerType;
            _resultValue.logDirectory = logDirectory;
            _resultValue.oracleHome = oracleHome;
            _resultValue.servicedAsms = servicedAsms;
            _resultValue.servicedDatabases = servicedDatabases;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.traceDirectory = traceDirectory;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
