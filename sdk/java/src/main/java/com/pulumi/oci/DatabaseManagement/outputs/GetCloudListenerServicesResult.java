// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetCloudListenerServicesCloudListenerServiceCollection;
import com.pulumi.oci.DatabaseManagement.outputs.GetCloudListenerServicesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCloudListenerServicesResult {
    private String cloudListenerId;
    /**
     * @return The list of cloud_listener_service_collection.
     * 
     */
    private List<GetCloudListenerServicesCloudListenerServiceCollection> cloudListenerServiceCollections;
    private @Nullable List<GetCloudListenerServicesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    private String managedDatabaseId;
    private @Nullable String opcNamedCredentialId;

    private GetCloudListenerServicesResult() {}
    public String cloudListenerId() {
        return this.cloudListenerId;
    }
    /**
     * @return The list of cloud_listener_service_collection.
     * 
     */
    public List<GetCloudListenerServicesCloudListenerServiceCollection> cloudListenerServiceCollections() {
        return this.cloudListenerServiceCollections;
    }
    public List<GetCloudListenerServicesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }
    public Optional<String> opcNamedCredentialId() {
        return Optional.ofNullable(this.opcNamedCredentialId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudListenerServicesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudListenerId;
        private List<GetCloudListenerServicesCloudListenerServiceCollection> cloudListenerServiceCollections;
        private @Nullable List<GetCloudListenerServicesFilter> filters;
        private String id;
        private String managedDatabaseId;
        private @Nullable String opcNamedCredentialId;
        public Builder() {}
        public Builder(GetCloudListenerServicesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudListenerId = defaults.cloudListenerId;
    	      this.cloudListenerServiceCollections = defaults.cloudListenerServiceCollections;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.opcNamedCredentialId = defaults.opcNamedCredentialId;
        }

        @CustomType.Setter
        public Builder cloudListenerId(String cloudListenerId) {
            if (cloudListenerId == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerServicesResult", "cloudListenerId");
            }
            this.cloudListenerId = cloudListenerId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudListenerServiceCollections(List<GetCloudListenerServicesCloudListenerServiceCollection> cloudListenerServiceCollections) {
            if (cloudListenerServiceCollections == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerServicesResult", "cloudListenerServiceCollections");
            }
            this.cloudListenerServiceCollections = cloudListenerServiceCollections;
            return this;
        }
        public Builder cloudListenerServiceCollections(GetCloudListenerServicesCloudListenerServiceCollection... cloudListenerServiceCollections) {
            return cloudListenerServiceCollections(List.of(cloudListenerServiceCollections));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetCloudListenerServicesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetCloudListenerServicesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerServicesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedDatabaseId(String managedDatabaseId) {
            if (managedDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetCloudListenerServicesResult", "managedDatabaseId");
            }
            this.managedDatabaseId = managedDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder opcNamedCredentialId(@Nullable String opcNamedCredentialId) {

            this.opcNamedCredentialId = opcNamedCredentialId;
            return this;
        }
        public GetCloudListenerServicesResult build() {
            final var _resultValue = new GetCloudListenerServicesResult();
            _resultValue.cloudListenerId = cloudListenerId;
            _resultValue.cloudListenerServiceCollections = cloudListenerServiceCollections;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.managedDatabaseId = managedDatabaseId;
            _resultValue.opcNamedCredentialId = opcNamedCredentialId;
            return _resultValue;
        }
    }
}
