// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetDbManagementPrivateEndpointAssociatedDatabasesAssociatedDatabaseCollection;
import com.pulumi.oci.DatabaseManagement.outputs.GetDbManagementPrivateEndpointAssociatedDatabasesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDbManagementPrivateEndpointAssociatedDatabasesResult {
    /**
     * @return The list of associated_database_collection.
     * 
     */
    private List<GetDbManagementPrivateEndpointAssociatedDatabasesAssociatedDatabaseCollection> associatedDatabaseCollections;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    private String compartmentId;
    private String dbManagementPrivateEndpointId;
    private @Nullable List<GetDbManagementPrivateEndpointAssociatedDatabasesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetDbManagementPrivateEndpointAssociatedDatabasesResult() {}
    /**
     * @return The list of associated_database_collection.
     * 
     */
    public List<GetDbManagementPrivateEndpointAssociatedDatabasesAssociatedDatabaseCollection> associatedDatabaseCollections() {
        return this.associatedDatabaseCollections;
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String dbManagementPrivateEndpointId() {
        return this.dbManagementPrivateEndpointId;
    }
    public List<GetDbManagementPrivateEndpointAssociatedDatabasesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbManagementPrivateEndpointAssociatedDatabasesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDbManagementPrivateEndpointAssociatedDatabasesAssociatedDatabaseCollection> associatedDatabaseCollections;
        private String compartmentId;
        private String dbManagementPrivateEndpointId;
        private @Nullable List<GetDbManagementPrivateEndpointAssociatedDatabasesFilter> filters;
        private String id;
        public Builder() {}
        public Builder(GetDbManagementPrivateEndpointAssociatedDatabasesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedDatabaseCollections = defaults.associatedDatabaseCollections;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbManagementPrivateEndpointId = defaults.dbManagementPrivateEndpointId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder associatedDatabaseCollections(List<GetDbManagementPrivateEndpointAssociatedDatabasesAssociatedDatabaseCollection> associatedDatabaseCollections) {
            if (associatedDatabaseCollections == null) {
              throw new MissingRequiredPropertyException("GetDbManagementPrivateEndpointAssociatedDatabasesResult", "associatedDatabaseCollections");
            }
            this.associatedDatabaseCollections = associatedDatabaseCollections;
            return this;
        }
        public Builder associatedDatabaseCollections(GetDbManagementPrivateEndpointAssociatedDatabasesAssociatedDatabaseCollection... associatedDatabaseCollections) {
            return associatedDatabaseCollections(List.of(associatedDatabaseCollections));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDbManagementPrivateEndpointAssociatedDatabasesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dbManagementPrivateEndpointId(String dbManagementPrivateEndpointId) {
            if (dbManagementPrivateEndpointId == null) {
              throw new MissingRequiredPropertyException("GetDbManagementPrivateEndpointAssociatedDatabasesResult", "dbManagementPrivateEndpointId");
            }
            this.dbManagementPrivateEndpointId = dbManagementPrivateEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDbManagementPrivateEndpointAssociatedDatabasesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetDbManagementPrivateEndpointAssociatedDatabasesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDbManagementPrivateEndpointAssociatedDatabasesResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetDbManagementPrivateEndpointAssociatedDatabasesResult build() {
            final var _resultValue = new GetDbManagementPrivateEndpointAssociatedDatabasesResult();
            _resultValue.associatedDatabaseCollections = associatedDatabaseCollections;
            _resultValue.compartmentId = compartmentId;
            _resultValue.dbManagementPrivateEndpointId = dbManagementPrivateEndpointId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
