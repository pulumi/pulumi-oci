// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetDbManagementPrivateEndpointsDbManagementPrivateEndpointCollection;
import com.pulumi.oci.DatabaseManagement.outputs.GetDbManagementPrivateEndpointsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDbManagementPrivateEndpointsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The list of db_management_private_endpoint_collection.
     * 
     */
    private List<GetDbManagementPrivateEndpointsDbManagementPrivateEndpointCollection> dbManagementPrivateEndpointCollections;
    private @Nullable List<GetDbManagementPrivateEndpointsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Specifies whether the Database Management private endpoint can be used for Oracle Databases in a cluster.
     * 
     */
    private @Nullable Boolean isCluster;
    /**
     * @return Specifies whether the Database Management private endpoint has DNS proxy server enabled to resolve private host name.
     * 
     */
    private @Nullable Boolean isDnsResolutionEnabled;
    /**
     * @return The display name of the Database Management private endpoint.
     * 
     */
    private @Nullable String name;
    /**
     * @return The current lifecycle state of the Database Management private endpoint.
     * 
     */
    private @Nullable String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     * 
     */
    private @Nullable String vcnId;

    private GetDbManagementPrivateEndpointsResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of db_management_private_endpoint_collection.
     * 
     */
    public List<GetDbManagementPrivateEndpointsDbManagementPrivateEndpointCollection> dbManagementPrivateEndpointCollections() {
        return this.dbManagementPrivateEndpointCollections;
    }
    public List<GetDbManagementPrivateEndpointsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Specifies whether the Database Management private endpoint can be used for Oracle Databases in a cluster.
     * 
     */
    public Optional<Boolean> isCluster() {
        return Optional.ofNullable(this.isCluster);
    }
    /**
     * @return Specifies whether the Database Management private endpoint has DNS proxy server enabled to resolve private host name.
     * 
     */
    public Optional<Boolean> isDnsResolutionEnabled() {
        return Optional.ofNullable(this.isDnsResolutionEnabled);
    }
    /**
     * @return The display name of the Database Management private endpoint.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The current lifecycle state of the Database Management private endpoint.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     * 
     */
    public Optional<String> vcnId() {
        return Optional.ofNullable(this.vcnId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbManagementPrivateEndpointsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetDbManagementPrivateEndpointsDbManagementPrivateEndpointCollection> dbManagementPrivateEndpointCollections;
        private @Nullable List<GetDbManagementPrivateEndpointsFilter> filters;
        private String id;
        private @Nullable Boolean isCluster;
        private @Nullable Boolean isDnsResolutionEnabled;
        private @Nullable String name;
        private @Nullable String state;
        private @Nullable String vcnId;
        public Builder() {}
        public Builder(GetDbManagementPrivateEndpointsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbManagementPrivateEndpointCollections = defaults.dbManagementPrivateEndpointCollections;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isCluster = defaults.isCluster;
    	      this.isDnsResolutionEnabled = defaults.isDnsResolutionEnabled;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDbManagementPrivateEndpointsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder dbManagementPrivateEndpointCollections(List<GetDbManagementPrivateEndpointsDbManagementPrivateEndpointCollection> dbManagementPrivateEndpointCollections) {
            if (dbManagementPrivateEndpointCollections == null) {
              throw new MissingRequiredPropertyException("GetDbManagementPrivateEndpointsResult", "dbManagementPrivateEndpointCollections");
            }
            this.dbManagementPrivateEndpointCollections = dbManagementPrivateEndpointCollections;
            return this;
        }
        public Builder dbManagementPrivateEndpointCollections(GetDbManagementPrivateEndpointsDbManagementPrivateEndpointCollection... dbManagementPrivateEndpointCollections) {
            return dbManagementPrivateEndpointCollections(List.of(dbManagementPrivateEndpointCollections));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDbManagementPrivateEndpointsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetDbManagementPrivateEndpointsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDbManagementPrivateEndpointsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCluster(@Nullable Boolean isCluster) {

            this.isCluster = isCluster;
            return this;
        }
        @CustomType.Setter
        public Builder isDnsResolutionEnabled(@Nullable Boolean isDnsResolutionEnabled) {

            this.isDnsResolutionEnabled = isDnsResolutionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vcnId(@Nullable String vcnId) {

            this.vcnId = vcnId;
            return this;
        }
        public GetDbManagementPrivateEndpointsResult build() {
            final var _resultValue = new GetDbManagementPrivateEndpointsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.dbManagementPrivateEndpointCollections = dbManagementPrivateEndpointCollections;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isCluster = isCluster;
            _resultValue.isDnsResolutionEnabled = isDnsResolutionEnabled;
            _resultValue.name = name;
            _resultValue.state = state;
            _resultValue.vcnId = vcnId;
            return _resultValue;
        }
    }
}
