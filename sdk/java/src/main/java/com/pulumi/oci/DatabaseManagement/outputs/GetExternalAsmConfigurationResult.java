// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalAsmConfigurationInitParameter;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetExternalAsmConfigurationResult {
    private String externalAsmId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return An array of initialization parameters for the external ASM instances.
     * 
     */
    private List<GetExternalAsmConfigurationInitParameter> initParameters;

    private GetExternalAsmConfigurationResult() {}
    public String externalAsmId() {
        return this.externalAsmId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An array of initialization parameters for the external ASM instances.
     * 
     */
    public List<GetExternalAsmConfigurationInitParameter> initParameters() {
        return this.initParameters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalAsmConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String externalAsmId;
        private String id;
        private List<GetExternalAsmConfigurationInitParameter> initParameters;
        public Builder() {}
        public Builder(GetExternalAsmConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalAsmId = defaults.externalAsmId;
    	      this.id = defaults.id;
    	      this.initParameters = defaults.initParameters;
        }

        @CustomType.Setter
        public Builder externalAsmId(String externalAsmId) {
            if (externalAsmId == null) {
              throw new MissingRequiredPropertyException("GetExternalAsmConfigurationResult", "externalAsmId");
            }
            this.externalAsmId = externalAsmId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExternalAsmConfigurationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder initParameters(List<GetExternalAsmConfigurationInitParameter> initParameters) {
            if (initParameters == null) {
              throw new MissingRequiredPropertyException("GetExternalAsmConfigurationResult", "initParameters");
            }
            this.initParameters = initParameters;
            return this;
        }
        public Builder initParameters(GetExternalAsmConfigurationInitParameter... initParameters) {
            return initParameters(List.of(initParameters));
        }
        public GetExternalAsmConfigurationResult build() {
            final var _resultValue = new GetExternalAsmConfigurationResult();
            _resultValue.externalAsmId = externalAsmId;
            _resultValue.id = id;
            _resultValue.initParameters = initParameters;
            return _resultValue;
        }
    }
}
