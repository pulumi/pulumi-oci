// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalAsmDiskGroupsExternalAsmDiskGroupCollection;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalAsmDiskGroupsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalAsmDiskGroupsResult {
    /**
     * @return The list of external_asm_disk_group_collection.
     * 
     */
    private List<GetExternalAsmDiskGroupsExternalAsmDiskGroupCollection> externalAsmDiskGroupCollections;
    private String externalAsmId;
    private @Nullable List<GetExternalAsmDiskGroupsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String opcNamedCredentialId;

    private GetExternalAsmDiskGroupsResult() {}
    /**
     * @return The list of external_asm_disk_group_collection.
     * 
     */
    public List<GetExternalAsmDiskGroupsExternalAsmDiskGroupCollection> externalAsmDiskGroupCollections() {
        return this.externalAsmDiskGroupCollections;
    }
    public String externalAsmId() {
        return this.externalAsmId;
    }
    public List<GetExternalAsmDiskGroupsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> opcNamedCredentialId() {
        return Optional.ofNullable(this.opcNamedCredentialId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalAsmDiskGroupsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetExternalAsmDiskGroupsExternalAsmDiskGroupCollection> externalAsmDiskGroupCollections;
        private String externalAsmId;
        private @Nullable List<GetExternalAsmDiskGroupsFilter> filters;
        private String id;
        private @Nullable String opcNamedCredentialId;
        public Builder() {}
        public Builder(GetExternalAsmDiskGroupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalAsmDiskGroupCollections = defaults.externalAsmDiskGroupCollections;
    	      this.externalAsmId = defaults.externalAsmId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.opcNamedCredentialId = defaults.opcNamedCredentialId;
        }

        @CustomType.Setter
        public Builder externalAsmDiskGroupCollections(List<GetExternalAsmDiskGroupsExternalAsmDiskGroupCollection> externalAsmDiskGroupCollections) {
            if (externalAsmDiskGroupCollections == null) {
              throw new MissingRequiredPropertyException("GetExternalAsmDiskGroupsResult", "externalAsmDiskGroupCollections");
            }
            this.externalAsmDiskGroupCollections = externalAsmDiskGroupCollections;
            return this;
        }
        public Builder externalAsmDiskGroupCollections(GetExternalAsmDiskGroupsExternalAsmDiskGroupCollection... externalAsmDiskGroupCollections) {
            return externalAsmDiskGroupCollections(List.of(externalAsmDiskGroupCollections));
        }
        @CustomType.Setter
        public Builder externalAsmId(String externalAsmId) {
            if (externalAsmId == null) {
              throw new MissingRequiredPropertyException("GetExternalAsmDiskGroupsResult", "externalAsmId");
            }
            this.externalAsmId = externalAsmId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetExternalAsmDiskGroupsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetExternalAsmDiskGroupsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExternalAsmDiskGroupsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder opcNamedCredentialId(@Nullable String opcNamedCredentialId) {

            this.opcNamedCredentialId = opcNamedCredentialId;
            return this;
        }
        public GetExternalAsmDiskGroupsResult build() {
            final var _resultValue = new GetExternalAsmDiskGroupsResult();
            _resultValue.externalAsmDiskGroupCollections = externalAsmDiskGroupCollections;
            _resultValue.externalAsmId = externalAsmId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.opcNamedCredentialId = opcNamedCredentialId;
            return _resultValue;
        }
    }
}
