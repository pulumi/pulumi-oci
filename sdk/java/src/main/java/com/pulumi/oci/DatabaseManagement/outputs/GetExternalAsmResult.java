// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalAsmServicedDatabase;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalAsmResult {
    /**
     * @return The additional details of the external ASM defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> additionalDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the external database resides.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The name of the external ASM.
     * 
     */
    private @Nullable String componentName;
    /**
     * @return The user-friendly name for the database. The name does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    private String externalAsmId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    private @Nullable String externalConnectorId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the ASM is a part of.
     * 
     */
    private @Nullable String externalDbSystemId;
    /**
     * @return The directory in which ASM is installed. This is the same directory in which Oracle Grid Infrastructure is installed.
     * 
     */
    private @Nullable String gridHome;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates whether the ASM is a cluster ASM or not.
     * 
     */
    private @Nullable Boolean isCluster;
    /**
     * @return Indicates whether Oracle Flex ASM is enabled or not.
     * 
     */
    private @Nullable Boolean isFlexEnabled;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The list of databases that are serviced by the ASM.
     * 
     */
    private @Nullable List<GetExternalAsmServicedDatabase> servicedDatabases;
    /**
     * @return The current lifecycle state of the external ASM.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the external ASM was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the external ASM was last updated.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The ASM version.
     * 
     */
    private @Nullable String version;

    private GetExternalAsmResult() {}
    /**
     * @return The additional details of the external ASM defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> additionalDetails() {
        return this.additionalDetails == null ? Map.of() : this.additionalDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the external database resides.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The name of the external ASM.
     * 
     */
    public Optional<String> componentName() {
        return Optional.ofNullable(this.componentName);
    }
    /**
     * @return The user-friendly name for the database. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String externalAsmId() {
        return this.externalAsmId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    public Optional<String> externalConnectorId() {
        return Optional.ofNullable(this.externalConnectorId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the ASM is a part of.
     * 
     */
    public Optional<String> externalDbSystemId() {
        return Optional.ofNullable(this.externalDbSystemId);
    }
    /**
     * @return The directory in which ASM is installed. This is the same directory in which Oracle Grid Infrastructure is installed.
     * 
     */
    public Optional<String> gridHome() {
        return Optional.ofNullable(this.gridHome);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates whether the ASM is a cluster ASM or not.
     * 
     */
    public Optional<Boolean> isCluster() {
        return Optional.ofNullable(this.isCluster);
    }
    /**
     * @return Indicates whether Oracle Flex ASM is enabled or not.
     * 
     */
    public Optional<Boolean> isFlexEnabled() {
        return Optional.ofNullable(this.isFlexEnabled);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The list of databases that are serviced by the ASM.
     * 
     */
    public List<GetExternalAsmServicedDatabase> servicedDatabases() {
        return this.servicedDatabases == null ? List.of() : this.servicedDatabases;
    }
    /**
     * @return The current lifecycle state of the external ASM.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the external ASM was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the external ASM was last updated.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The ASM version.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalAsmResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> additionalDetails;
        private @Nullable String compartmentId;
        private @Nullable String componentName;
        private @Nullable String displayName;
        private String externalAsmId;
        private @Nullable String externalConnectorId;
        private @Nullable String externalDbSystemId;
        private @Nullable String gridHome;
        private @Nullable String id;
        private @Nullable Boolean isCluster;
        private @Nullable Boolean isFlexEnabled;
        private @Nullable String lifecycleDetails;
        private @Nullable List<GetExternalAsmServicedDatabase> servicedDatabases;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetExternalAsmResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetails = defaults.additionalDetails;
    	      this.compartmentId = defaults.compartmentId;
    	      this.componentName = defaults.componentName;
    	      this.displayName = defaults.displayName;
    	      this.externalAsmId = defaults.externalAsmId;
    	      this.externalConnectorId = defaults.externalConnectorId;
    	      this.externalDbSystemId = defaults.externalDbSystemId;
    	      this.gridHome = defaults.gridHome;
    	      this.id = defaults.id;
    	      this.isCluster = defaults.isCluster;
    	      this.isFlexEnabled = defaults.isFlexEnabled;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.servicedDatabases = defaults.servicedDatabases;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder additionalDetails(@Nullable Map<String,Object> additionalDetails) {
            this.additionalDetails = additionalDetails;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder componentName(@Nullable String componentName) {
            this.componentName = componentName;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalAsmId(String externalAsmId) {
            this.externalAsmId = Objects.requireNonNull(externalAsmId);
            return this;
        }
        @CustomType.Setter
        public Builder externalConnectorId(@Nullable String externalConnectorId) {
            this.externalConnectorId = externalConnectorId;
            return this;
        }
        @CustomType.Setter
        public Builder externalDbSystemId(@Nullable String externalDbSystemId) {
            this.externalDbSystemId = externalDbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder gridHome(@Nullable String gridHome) {
            this.gridHome = gridHome;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCluster(@Nullable Boolean isCluster) {
            this.isCluster = isCluster;
            return this;
        }
        @CustomType.Setter
        public Builder isFlexEnabled(@Nullable Boolean isFlexEnabled) {
            this.isFlexEnabled = isFlexEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder servicedDatabases(@Nullable List<GetExternalAsmServicedDatabase> servicedDatabases) {
            this.servicedDatabases = servicedDatabases;
            return this;
        }
        public Builder servicedDatabases(GetExternalAsmServicedDatabase... servicedDatabases) {
            return servicedDatabases(List.of(servicedDatabases));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetExternalAsmResult build() {
            final var o = new GetExternalAsmResult();
            o.additionalDetails = additionalDetails;
            o.compartmentId = compartmentId;
            o.componentName = componentName;
            o.displayName = displayName;
            o.externalAsmId = externalAsmId;
            o.externalConnectorId = externalConnectorId;
            o.externalDbSystemId = externalDbSystemId;
            o.gridHome = gridHome;
            o.id = id;
            o.isCluster = isCluster;
            o.isFlexEnabled = isFlexEnabled;
            o.lifecycleDetails = lifecycleDetails;
            o.servicedDatabases = servicedDatabases;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.version = version;
            return o;
        }
    }
}
