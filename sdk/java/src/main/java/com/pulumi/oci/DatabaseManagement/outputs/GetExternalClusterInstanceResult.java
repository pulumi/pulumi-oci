// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetExternalClusterInstanceResult {
    /**
     * @return The Automatic Diagnostic Repository (ADR) home directory for the cluster instance.
     * 
     */
    private String adrHomeDirectory;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The name of the external cluster instance.
     * 
     */
    private String componentName;
    /**
     * @return The Oracle base location of Cluster Ready Services (CRS).
     * 
     */
    private String crsBaseDirectory;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The user-friendly name for the cluster instance. The name does not have to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster that the cluster instance belongs to.
     * 
     */
    private String externalClusterId;
    private String externalClusterInstanceId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    private String externalConnectorId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB node.
     * 
     */
    private String externalDbNodeId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the cluster instance is a part of.
     * 
     */
    private String externalDbSystemId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The name of the host on which the cluster instance is running.
     * 
     */
    private String hostName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster instance.
     * 
     */
    private String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The role of the cluster node.
     * 
     */
    private String nodeRole;
    /**
     * @return The current lifecycle state of the external cluster instance.
     * 
     */
    private String state;
    /**
     * @return The date and time the external cluster instance was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the external cluster instance was last updated.
     * 
     */
    private String timeUpdated;

    private GetExternalClusterInstanceResult() {}
    /**
     * @return The Automatic Diagnostic Repository (ADR) home directory for the cluster instance.
     * 
     */
    public String adrHomeDirectory() {
        return this.adrHomeDirectory;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The name of the external cluster instance.
     * 
     */
    public String componentName() {
        return this.componentName;
    }
    /**
     * @return The Oracle base location of Cluster Ready Services (CRS).
     * 
     */
    public String crsBaseDirectory() {
        return this.crsBaseDirectory;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name for the cluster instance. The name does not have to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster that the cluster instance belongs to.
     * 
     */
    public String externalClusterId() {
        return this.externalClusterId;
    }
    public String externalClusterInstanceId() {
        return this.externalClusterInstanceId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    public String externalConnectorId() {
        return this.externalConnectorId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB node.
     * 
     */
    public String externalDbNodeId() {
        return this.externalDbNodeId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the cluster instance is a part of.
     * 
     */
    public String externalDbSystemId() {
        return this.externalDbSystemId;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The name of the host on which the cluster instance is running.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster instance.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The role of the cluster node.
     * 
     */
    public String nodeRole() {
        return this.nodeRole;
    }
    /**
     * @return The current lifecycle state of the external cluster instance.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the external cluster instance was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the external cluster instance was last updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalClusterInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adrHomeDirectory;
        private String compartmentId;
        private String componentName;
        private String crsBaseDirectory;
        private Map<String,Object> definedTags;
        private String displayName;
        private String externalClusterId;
        private String externalClusterInstanceId;
        private String externalConnectorId;
        private String externalDbNodeId;
        private String externalDbSystemId;
        private Map<String,Object> freeformTags;
        private String hostName;
        private String id;
        private String lifecycleDetails;
        private String nodeRole;
        private String state;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetExternalClusterInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adrHomeDirectory = defaults.adrHomeDirectory;
    	      this.compartmentId = defaults.compartmentId;
    	      this.componentName = defaults.componentName;
    	      this.crsBaseDirectory = defaults.crsBaseDirectory;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.externalClusterId = defaults.externalClusterId;
    	      this.externalClusterInstanceId = defaults.externalClusterInstanceId;
    	      this.externalConnectorId = defaults.externalConnectorId;
    	      this.externalDbNodeId = defaults.externalDbNodeId;
    	      this.externalDbSystemId = defaults.externalDbSystemId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.nodeRole = defaults.nodeRole;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder adrHomeDirectory(String adrHomeDirectory) {
            if (adrHomeDirectory == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "adrHomeDirectory");
            }
            this.adrHomeDirectory = adrHomeDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder componentName(String componentName) {
            if (componentName == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "componentName");
            }
            this.componentName = componentName;
            return this;
        }
        @CustomType.Setter
        public Builder crsBaseDirectory(String crsBaseDirectory) {
            if (crsBaseDirectory == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "crsBaseDirectory");
            }
            this.crsBaseDirectory = crsBaseDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalClusterId(String externalClusterId) {
            if (externalClusterId == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "externalClusterId");
            }
            this.externalClusterId = externalClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder externalClusterInstanceId(String externalClusterInstanceId) {
            if (externalClusterInstanceId == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "externalClusterInstanceId");
            }
            this.externalClusterInstanceId = externalClusterInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder externalConnectorId(String externalConnectorId) {
            if (externalConnectorId == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "externalConnectorId");
            }
            this.externalConnectorId = externalConnectorId;
            return this;
        }
        @CustomType.Setter
        public Builder externalDbNodeId(String externalDbNodeId) {
            if (externalDbNodeId == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "externalDbNodeId");
            }
            this.externalDbNodeId = externalDbNodeId;
            return this;
        }
        @CustomType.Setter
        public Builder externalDbSystemId(String externalDbSystemId) {
            if (externalDbSystemId == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "externalDbSystemId");
            }
            this.externalDbSystemId = externalDbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder nodeRole(String nodeRole) {
            if (nodeRole == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "nodeRole");
            }
            this.nodeRole = nodeRole;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetExternalClusterInstanceResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetExternalClusterInstanceResult build() {
            final var _resultValue = new GetExternalClusterInstanceResult();
            _resultValue.adrHomeDirectory = adrHomeDirectory;
            _resultValue.compartmentId = compartmentId;
            _resultValue.componentName = componentName;
            _resultValue.crsBaseDirectory = crsBaseDirectory;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.externalClusterId = externalClusterId;
            _resultValue.externalClusterInstanceId = externalClusterInstanceId;
            _resultValue.externalConnectorId = externalConnectorId;
            _resultValue.externalDbNodeId = externalDbNodeId;
            _resultValue.externalDbSystemId = externalDbSystemId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.hostName = hostName;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.nodeRole = nodeRole;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
