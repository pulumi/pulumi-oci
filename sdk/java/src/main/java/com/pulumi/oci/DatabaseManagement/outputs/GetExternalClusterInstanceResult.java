// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetExternalClusterInstanceResult {
    /**
     * @return The Automatic Diagnostic Repository (ADR) home directory for the cluster instance.
     * 
     */
    private String adrHomeDirectory;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The name of the external cluster instance.
     * 
     */
    private String componentName;
    /**
     * @return The Oracle base location of Cluster Ready Services (CRS).
     * 
     */
    private String crsBaseDirectory;
    /**
     * @return The user-friendly name for the cluster instance. The name does not have to be unique.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster that the cluster instance belongs to.
     * 
     */
    private String externalClusterId;
    private String externalClusterInstanceId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    private String externalConnectorId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB node.
     * 
     */
    private String externalDbNodeId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the cluster instance is a part of.
     * 
     */
    private String externalDbSystemId;
    /**
     * @return The name of the host on which the cluster instance is running.
     * 
     */
    private String hostName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster instance.
     * 
     */
    private String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The role of the cluster node.
     * 
     */
    private String nodeRole;
    /**
     * @return The current lifecycle state of the external cluster instance.
     * 
     */
    private String state;
    /**
     * @return The date and time the external cluster instance was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the external cluster instance was last updated.
     * 
     */
    private String timeUpdated;

    private GetExternalClusterInstanceResult() {}
    /**
     * @return The Automatic Diagnostic Repository (ADR) home directory for the cluster instance.
     * 
     */
    public String adrHomeDirectory() {
        return this.adrHomeDirectory;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The name of the external cluster instance.
     * 
     */
    public String componentName() {
        return this.componentName;
    }
    /**
     * @return The Oracle base location of Cluster Ready Services (CRS).
     * 
     */
    public String crsBaseDirectory() {
        return this.crsBaseDirectory;
    }
    /**
     * @return The user-friendly name for the cluster instance. The name does not have to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster that the cluster instance belongs to.
     * 
     */
    public String externalClusterId() {
        return this.externalClusterId;
    }
    public String externalClusterInstanceId() {
        return this.externalClusterInstanceId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    public String externalConnectorId() {
        return this.externalConnectorId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB node.
     * 
     */
    public String externalDbNodeId() {
        return this.externalDbNodeId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the cluster instance is a part of.
     * 
     */
    public String externalDbSystemId() {
        return this.externalDbSystemId;
    }
    /**
     * @return The name of the host on which the cluster instance is running.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster instance.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The role of the cluster node.
     * 
     */
    public String nodeRole() {
        return this.nodeRole;
    }
    /**
     * @return The current lifecycle state of the external cluster instance.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the external cluster instance was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the external cluster instance was last updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalClusterInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adrHomeDirectory;
        private String compartmentId;
        private String componentName;
        private String crsBaseDirectory;
        private String displayName;
        private String externalClusterId;
        private String externalClusterInstanceId;
        private String externalConnectorId;
        private String externalDbNodeId;
        private String externalDbSystemId;
        private String hostName;
        private String id;
        private String lifecycleDetails;
        private String nodeRole;
        private String state;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetExternalClusterInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adrHomeDirectory = defaults.adrHomeDirectory;
    	      this.compartmentId = defaults.compartmentId;
    	      this.componentName = defaults.componentName;
    	      this.crsBaseDirectory = defaults.crsBaseDirectory;
    	      this.displayName = defaults.displayName;
    	      this.externalClusterId = defaults.externalClusterId;
    	      this.externalClusterInstanceId = defaults.externalClusterInstanceId;
    	      this.externalConnectorId = defaults.externalConnectorId;
    	      this.externalDbNodeId = defaults.externalDbNodeId;
    	      this.externalDbSystemId = defaults.externalDbSystemId;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.nodeRole = defaults.nodeRole;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder adrHomeDirectory(String adrHomeDirectory) {
            this.adrHomeDirectory = Objects.requireNonNull(adrHomeDirectory);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder componentName(String componentName) {
            this.componentName = Objects.requireNonNull(componentName);
            return this;
        }
        @CustomType.Setter
        public Builder crsBaseDirectory(String crsBaseDirectory) {
            this.crsBaseDirectory = Objects.requireNonNull(crsBaseDirectory);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder externalClusterId(String externalClusterId) {
            this.externalClusterId = Objects.requireNonNull(externalClusterId);
            return this;
        }
        @CustomType.Setter
        public Builder externalClusterInstanceId(String externalClusterInstanceId) {
            this.externalClusterInstanceId = Objects.requireNonNull(externalClusterInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder externalConnectorId(String externalConnectorId) {
            this.externalConnectorId = Objects.requireNonNull(externalConnectorId);
            return this;
        }
        @CustomType.Setter
        public Builder externalDbNodeId(String externalDbNodeId) {
            this.externalDbNodeId = Objects.requireNonNull(externalDbNodeId);
            return this;
        }
        @CustomType.Setter
        public Builder externalDbSystemId(String externalDbSystemId) {
            this.externalDbSystemId = Objects.requireNonNull(externalDbSystemId);
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder nodeRole(String nodeRole) {
            this.nodeRole = Objects.requireNonNull(nodeRole);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public GetExternalClusterInstanceResult build() {
            final var o = new GetExternalClusterInstanceResult();
            o.adrHomeDirectory = adrHomeDirectory;
            o.compartmentId = compartmentId;
            o.componentName = componentName;
            o.crsBaseDirectory = crsBaseDirectory;
            o.displayName = displayName;
            o.externalClusterId = externalClusterId;
            o.externalClusterInstanceId = externalClusterInstanceId;
            o.externalConnectorId = externalConnectorId;
            o.externalDbNodeId = externalDbNodeId;
            o.externalDbSystemId = externalDbSystemId;
            o.hostName = hostName;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.nodeRole = nodeRole;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
