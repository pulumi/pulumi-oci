// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalClusterInstancesExternalClusterInstanceCollectionItem {
    /**
     * @return The Automatic Diagnostic Repository (ADR) home directory for the cluster instance.
     * 
     */
    private @Nullable String adrHomeDirectory;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The name of the external cluster instance.
     * 
     */
    private @Nullable String componentName;
    /**
     * @return The Oracle base location of Cluster Ready Services (CRS).
     * 
     */
    private @Nullable String crsBaseDirectory;
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster.
     * 
     */
    private @Nullable String externalClusterId;
    private @Nullable String externalClusterInstanceId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    private @Nullable String externalConnectorId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB node.
     * 
     */
    private @Nullable String externalDbNodeId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the cluster instance is a part of.
     * 
     */
    private @Nullable String externalDbSystemId;
    /**
     * @return The name of the host on which the cluster instance is running.
     * 
     */
    private @Nullable String hostName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster instance.
     * 
     */
    private @Nullable String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The role of the cluster node.
     * 
     */
    private @Nullable String nodeRole;
    /**
     * @return The current lifecycle state of the external cluster instance.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the external cluster instance was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the external cluster instance was last updated.
     * 
     */
    private @Nullable String timeUpdated;

    private GetExternalClusterInstancesExternalClusterInstanceCollectionItem() {}
    /**
     * @return The Automatic Diagnostic Repository (ADR) home directory for the cluster instance.
     * 
     */
    public Optional<String> adrHomeDirectory() {
        return Optional.ofNullable(this.adrHomeDirectory);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The name of the external cluster instance.
     * 
     */
    public Optional<String> componentName() {
        return Optional.ofNullable(this.componentName);
    }
    /**
     * @return The Oracle base location of Cluster Ready Services (CRS).
     * 
     */
    public Optional<String> crsBaseDirectory() {
        return Optional.ofNullable(this.crsBaseDirectory);
    }
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster.
     * 
     */
    public Optional<String> externalClusterId() {
        return Optional.ofNullable(this.externalClusterId);
    }
    public Optional<String> externalClusterInstanceId() {
        return Optional.ofNullable(this.externalClusterInstanceId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    public Optional<String> externalConnectorId() {
        return Optional.ofNullable(this.externalConnectorId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB node.
     * 
     */
    public Optional<String> externalDbNodeId() {
        return Optional.ofNullable(this.externalDbNodeId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the cluster instance is a part of.
     * 
     */
    public Optional<String> externalDbSystemId() {
        return Optional.ofNullable(this.externalDbSystemId);
    }
    /**
     * @return The name of the host on which the cluster instance is running.
     * 
     */
    public Optional<String> hostName() {
        return Optional.ofNullable(this.hostName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster instance.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The role of the cluster node.
     * 
     */
    public Optional<String> nodeRole() {
        return Optional.ofNullable(this.nodeRole);
    }
    /**
     * @return The current lifecycle state of the external cluster instance.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the external cluster instance was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the external cluster instance was last updated.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalClusterInstancesExternalClusterInstanceCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String adrHomeDirectory;
        private @Nullable String compartmentId;
        private @Nullable String componentName;
        private @Nullable String crsBaseDirectory;
        private @Nullable String displayName;
        private @Nullable String externalClusterId;
        private @Nullable String externalClusterInstanceId;
        private @Nullable String externalConnectorId;
        private @Nullable String externalDbNodeId;
        private @Nullable String externalDbSystemId;
        private @Nullable String hostName;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String nodeRole;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetExternalClusterInstancesExternalClusterInstanceCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adrHomeDirectory = defaults.adrHomeDirectory;
    	      this.compartmentId = defaults.compartmentId;
    	      this.componentName = defaults.componentName;
    	      this.crsBaseDirectory = defaults.crsBaseDirectory;
    	      this.displayName = defaults.displayName;
    	      this.externalClusterId = defaults.externalClusterId;
    	      this.externalClusterInstanceId = defaults.externalClusterInstanceId;
    	      this.externalConnectorId = defaults.externalConnectorId;
    	      this.externalDbNodeId = defaults.externalDbNodeId;
    	      this.externalDbSystemId = defaults.externalDbSystemId;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.nodeRole = defaults.nodeRole;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder adrHomeDirectory(@Nullable String adrHomeDirectory) {
            this.adrHomeDirectory = adrHomeDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder componentName(@Nullable String componentName) {
            this.componentName = componentName;
            return this;
        }
        @CustomType.Setter
        public Builder crsBaseDirectory(@Nullable String crsBaseDirectory) {
            this.crsBaseDirectory = crsBaseDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalClusterId(@Nullable String externalClusterId) {
            this.externalClusterId = externalClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder externalClusterInstanceId(@Nullable String externalClusterInstanceId) {
            this.externalClusterInstanceId = externalClusterInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder externalConnectorId(@Nullable String externalConnectorId) {
            this.externalConnectorId = externalConnectorId;
            return this;
        }
        @CustomType.Setter
        public Builder externalDbNodeId(@Nullable String externalDbNodeId) {
            this.externalDbNodeId = externalDbNodeId;
            return this;
        }
        @CustomType.Setter
        public Builder externalDbSystemId(@Nullable String externalDbSystemId) {
            this.externalDbSystemId = externalDbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(@Nullable String hostName) {
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder nodeRole(@Nullable String nodeRole) {
            this.nodeRole = nodeRole;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetExternalClusterInstancesExternalClusterInstanceCollectionItem build() {
            final var o = new GetExternalClusterInstancesExternalClusterInstanceCollectionItem();
            o.adrHomeDirectory = adrHomeDirectory;
            o.compartmentId = compartmentId;
            o.componentName = componentName;
            o.crsBaseDirectory = crsBaseDirectory;
            o.displayName = displayName;
            o.externalClusterId = externalClusterId;
            o.externalClusterInstanceId = externalClusterInstanceId;
            o.externalConnectorId = externalConnectorId;
            o.externalDbNodeId = externalDbNodeId;
            o.externalDbSystemId = externalDbSystemId;
            o.hostName = hostName;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.nodeRole = nodeRole;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
