// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalClusterNetworkConfiguration;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalClusterScanConfiguration;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalClusterVipConfiguration;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalClusterResult {
    /**
     * @return The additional details of the external cluster defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> additionalDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The name of the external cluster.
     * 
     */
    private @Nullable String componentName;
    /**
     * @return The user-friendly name for the external cluster. The name does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    private String externalClusterId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    private @Nullable String externalConnectorId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the cluster is a part of.
     * 
     */
    private @Nullable String externalDbSystemId;
    /**
     * @return The directory in which Oracle Grid Infrastructure is installed.
     * 
     */
    private @Nullable String gridHome;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates whether the cluster is Oracle Flex Cluster or not.
     * 
     */
    private @Nullable Boolean isFlexCluster;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The list of network address configurations of the external cluster.
     * 
     */
    private @Nullable List<GetExternalClusterNetworkConfiguration> networkConfigurations;
    /**
     * @return The location of the Oracle Cluster Registry (OCR).
     * 
     */
    private @Nullable String ocrFileLocation;
    /**
     * @return The list of Single Client Access Name (SCAN) configurations of the external cluster.
     * 
     */
    private @Nullable List<GetExternalClusterScanConfiguration> scanConfigurations;
    /**
     * @return The current lifecycle state of the external cluster.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the external cluster was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the external cluster was last updated.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The cluster version.
     * 
     */
    private @Nullable String version;
    /**
     * @return The list of Virtual IP (VIP) configurations of the external cluster.
     * 
     */
    private @Nullable List<GetExternalClusterVipConfiguration> vipConfigurations;

    private GetExternalClusterResult() {}
    /**
     * @return The additional details of the external cluster defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> additionalDetails() {
        return this.additionalDetails == null ? Map.of() : this.additionalDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The name of the external cluster.
     * 
     */
    public Optional<String> componentName() {
        return Optional.ofNullable(this.componentName);
    }
    /**
     * @return The user-friendly name for the external cluster. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String externalClusterId() {
        return this.externalClusterId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    public Optional<String> externalConnectorId() {
        return Optional.ofNullable(this.externalConnectorId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the cluster is a part of.
     * 
     */
    public Optional<String> externalDbSystemId() {
        return Optional.ofNullable(this.externalDbSystemId);
    }
    /**
     * @return The directory in which Oracle Grid Infrastructure is installed.
     * 
     */
    public Optional<String> gridHome() {
        return Optional.ofNullable(this.gridHome);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external cluster.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates whether the cluster is Oracle Flex Cluster or not.
     * 
     */
    public Optional<Boolean> isFlexCluster() {
        return Optional.ofNullable(this.isFlexCluster);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The list of network address configurations of the external cluster.
     * 
     */
    public List<GetExternalClusterNetworkConfiguration> networkConfigurations() {
        return this.networkConfigurations == null ? List.of() : this.networkConfigurations;
    }
    /**
     * @return The location of the Oracle Cluster Registry (OCR).
     * 
     */
    public Optional<String> ocrFileLocation() {
        return Optional.ofNullable(this.ocrFileLocation);
    }
    /**
     * @return The list of Single Client Access Name (SCAN) configurations of the external cluster.
     * 
     */
    public List<GetExternalClusterScanConfiguration> scanConfigurations() {
        return this.scanConfigurations == null ? List.of() : this.scanConfigurations;
    }
    /**
     * @return The current lifecycle state of the external cluster.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the external cluster was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the external cluster was last updated.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The cluster version.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }
    /**
     * @return The list of Virtual IP (VIP) configurations of the external cluster.
     * 
     */
    public List<GetExternalClusterVipConfiguration> vipConfigurations() {
        return this.vipConfigurations == null ? List.of() : this.vipConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalClusterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> additionalDetails;
        private @Nullable String compartmentId;
        private @Nullable String componentName;
        private @Nullable String displayName;
        private String externalClusterId;
        private @Nullable String externalConnectorId;
        private @Nullable String externalDbSystemId;
        private @Nullable String gridHome;
        private @Nullable String id;
        private @Nullable Boolean isFlexCluster;
        private @Nullable String lifecycleDetails;
        private @Nullable List<GetExternalClusterNetworkConfiguration> networkConfigurations;
        private @Nullable String ocrFileLocation;
        private @Nullable List<GetExternalClusterScanConfiguration> scanConfigurations;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String version;
        private @Nullable List<GetExternalClusterVipConfiguration> vipConfigurations;
        public Builder() {}
        public Builder(GetExternalClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetails = defaults.additionalDetails;
    	      this.compartmentId = defaults.compartmentId;
    	      this.componentName = defaults.componentName;
    	      this.displayName = defaults.displayName;
    	      this.externalClusterId = defaults.externalClusterId;
    	      this.externalConnectorId = defaults.externalConnectorId;
    	      this.externalDbSystemId = defaults.externalDbSystemId;
    	      this.gridHome = defaults.gridHome;
    	      this.id = defaults.id;
    	      this.isFlexCluster = defaults.isFlexCluster;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.networkConfigurations = defaults.networkConfigurations;
    	      this.ocrFileLocation = defaults.ocrFileLocation;
    	      this.scanConfigurations = defaults.scanConfigurations;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.version = defaults.version;
    	      this.vipConfigurations = defaults.vipConfigurations;
        }

        @CustomType.Setter
        public Builder additionalDetails(@Nullable Map<String,Object> additionalDetails) {
            this.additionalDetails = additionalDetails;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder componentName(@Nullable String componentName) {
            this.componentName = componentName;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalClusterId(String externalClusterId) {
            this.externalClusterId = Objects.requireNonNull(externalClusterId);
            return this;
        }
        @CustomType.Setter
        public Builder externalConnectorId(@Nullable String externalConnectorId) {
            this.externalConnectorId = externalConnectorId;
            return this;
        }
        @CustomType.Setter
        public Builder externalDbSystemId(@Nullable String externalDbSystemId) {
            this.externalDbSystemId = externalDbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder gridHome(@Nullable String gridHome) {
            this.gridHome = gridHome;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isFlexCluster(@Nullable Boolean isFlexCluster) {
            this.isFlexCluster = isFlexCluster;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder networkConfigurations(@Nullable List<GetExternalClusterNetworkConfiguration> networkConfigurations) {
            this.networkConfigurations = networkConfigurations;
            return this;
        }
        public Builder networkConfigurations(GetExternalClusterNetworkConfiguration... networkConfigurations) {
            return networkConfigurations(List.of(networkConfigurations));
        }
        @CustomType.Setter
        public Builder ocrFileLocation(@Nullable String ocrFileLocation) {
            this.ocrFileLocation = ocrFileLocation;
            return this;
        }
        @CustomType.Setter
        public Builder scanConfigurations(@Nullable List<GetExternalClusterScanConfiguration> scanConfigurations) {
            this.scanConfigurations = scanConfigurations;
            return this;
        }
        public Builder scanConfigurations(GetExternalClusterScanConfiguration... scanConfigurations) {
            return scanConfigurations(List.of(scanConfigurations));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder vipConfigurations(@Nullable List<GetExternalClusterVipConfiguration> vipConfigurations) {
            this.vipConfigurations = vipConfigurations;
            return this;
        }
        public Builder vipConfigurations(GetExternalClusterVipConfiguration... vipConfigurations) {
            return vipConfigurations(List.of(vipConfigurations));
        }
        public GetExternalClusterResult build() {
            final var o = new GetExternalClusterResult();
            o.additionalDetails = additionalDetails;
            o.compartmentId = compartmentId;
            o.componentName = componentName;
            o.displayName = displayName;
            o.externalClusterId = externalClusterId;
            o.externalConnectorId = externalConnectorId;
            o.externalDbSystemId = externalDbSystemId;
            o.gridHome = gridHome;
            o.id = id;
            o.isFlexCluster = isFlexCluster;
            o.lifecycleDetails = lifecycleDetails;
            o.networkConfigurations = networkConfigurations;
            o.ocrFileLocation = ocrFileLocation;
            o.scanConfigurations = scanConfigurations;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.version = version;
            o.vipConfigurations = vipConfigurations;
            return o;
        }
    }
}
