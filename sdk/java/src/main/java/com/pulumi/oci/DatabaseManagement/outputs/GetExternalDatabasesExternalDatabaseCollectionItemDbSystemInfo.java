// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfoExadataInfraInfo;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfo {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    private String displayName;
    /**
     * @return The basic information about an external Exadata Infrastructure.
     * 
     */
    private List<GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfoExadataInfraInfo> exadataInfraInfos;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system.
     * 
     */
    private String id;

    private GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfo() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The basic information about an external Exadata Infrastructure.
     * 
     */
    public List<GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfoExadataInfraInfo> exadataInfraInfos() {
        return this.exadataInfraInfos;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String displayName;
        private List<GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfoExadataInfraInfo> exadataInfraInfos;
        private String id;
        public Builder() {}
        public Builder(GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.exadataInfraInfos = defaults.exadataInfraInfos;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfo", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfo", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder exadataInfraInfos(List<GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfoExadataInfraInfo> exadataInfraInfos) {
            if (exadataInfraInfos == null) {
              throw new MissingRequiredPropertyException("GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfo", "exadataInfraInfos");
            }
            this.exadataInfraInfos = exadataInfraInfos;
            return this;
        }
        public Builder exadataInfraInfos(GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfoExadataInfraInfo... exadataInfraInfos) {
            return exadataInfraInfos(List.of(exadataInfraInfos));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfo", "id");
            }
            this.id = id;
            return this;
        }
        public GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfo build() {
            final var _resultValue = new GetExternalDatabasesExternalDatabaseCollectionItemDbSystemInfo();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.exadataInfraInfos = exadataInfraInfos;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
