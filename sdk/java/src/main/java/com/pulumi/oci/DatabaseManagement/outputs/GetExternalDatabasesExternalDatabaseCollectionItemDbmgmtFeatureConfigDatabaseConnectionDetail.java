// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionCredential;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionString;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetail {
    /**
     * @return The credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector credentials.
     * 
     */
    private List<GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionCredential> connectionCredentials;
    /**
     * @return The details of the Oracle Database connection string.
     * 
     */
    private List<GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionString> connectionStrings;

    private GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetail() {}
    /**
     * @return The credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector credentials.
     * 
     */
    public List<GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionCredential> connectionCredentials() {
        return this.connectionCredentials;
    }
    /**
     * @return The details of the Oracle Database connection string.
     * 
     */
    public List<GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionString> connectionStrings() {
        return this.connectionStrings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionCredential> connectionCredentials;
        private List<GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionString> connectionStrings;
        public Builder() {}
        public Builder(GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionCredentials = defaults.connectionCredentials;
    	      this.connectionStrings = defaults.connectionStrings;
        }

        @CustomType.Setter
        public Builder connectionCredentials(List<GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionCredential> connectionCredentials) {
            if (connectionCredentials == null) {
              throw new MissingRequiredPropertyException("GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetail", "connectionCredentials");
            }
            this.connectionCredentials = connectionCredentials;
            return this;
        }
        public Builder connectionCredentials(GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionCredential... connectionCredentials) {
            return connectionCredentials(List.of(connectionCredentials));
        }
        @CustomType.Setter
        public Builder connectionStrings(List<GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionString> connectionStrings) {
            if (connectionStrings == null) {
              throw new MissingRequiredPropertyException("GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetail", "connectionStrings");
            }
            this.connectionStrings = connectionStrings;
            return this;
        }
        public Builder connectionStrings(GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetailConnectionString... connectionStrings) {
            return connectionStrings(List.of(connectionStrings));
        }
        public GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetail build() {
            final var _resultValue = new GetExternalDatabasesExternalDatabaseCollectionItemDbmgmtFeatureConfigDatabaseConnectionDetail();
            _resultValue.connectionCredentials = connectionCredentials;
            _resultValue.connectionStrings = connectionStrings;
            return _resultValue;
        }
    }
}
