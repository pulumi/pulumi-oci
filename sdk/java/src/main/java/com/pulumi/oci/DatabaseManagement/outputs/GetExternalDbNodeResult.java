// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalDbNodeResult {
    /**
     * @return The additional details of the external DB node defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> additionalDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The name of the external DB node.
     * 
     */
    private @Nullable String componentName;
    /**
     * @return The number of CPU cores available on the DB node.
     * 
     */
    private @Nullable Double cpuCoreCount;
    /**
     * @return The user-friendly name for the external DB node. The name does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Name of the domain.
     * 
     */
    private @Nullable String domainName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    private @Nullable String externalConnectorId;
    private String externalDbNodeId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the DB node is a part of.
     * 
     */
    private @Nullable String externalDbSystemId;
    /**
     * @return The host name for the DB node.
     * 
     */
    private @Nullable String hostName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB node.
     * 
     */
    private @Nullable String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The total memory in gigabytes (GB) on the DB node.
     * 
     */
    private @Nullable Double memorySizeInGbs;
    /**
     * @return The current lifecycle state of the external DB node.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the external DB node was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the external DB node was last updated.
     * 
     */
    private @Nullable String timeUpdated;

    private GetExternalDbNodeResult() {}
    /**
     * @return The additional details of the external DB node defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> additionalDetails() {
        return this.additionalDetails == null ? Map.of() : this.additionalDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The name of the external DB node.
     * 
     */
    public Optional<String> componentName() {
        return Optional.ofNullable(this.componentName);
    }
    /**
     * @return The number of CPU cores available on the DB node.
     * 
     */
    public Optional<Double> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }
    /**
     * @return The user-friendly name for the external DB node. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Name of the domain.
     * 
     */
    public Optional<String> domainName() {
        return Optional.ofNullable(this.domainName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external connector.
     * 
     */
    public Optional<String> externalConnectorId() {
        return Optional.ofNullable(this.externalConnectorId);
    }
    public String externalDbNodeId() {
        return this.externalDbNodeId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system that the DB node is a part of.
     * 
     */
    public Optional<String> externalDbSystemId() {
        return Optional.ofNullable(this.externalDbSystemId);
    }
    /**
     * @return The host name for the DB node.
     * 
     */
    public Optional<String> hostName() {
        return Optional.ofNullable(this.hostName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB node.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The total memory in gigabytes (GB) on the DB node.
     * 
     */
    public Optional<Double> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }
    /**
     * @return The current lifecycle state of the external DB node.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the external DB node was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the external DB node was last updated.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalDbNodeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> additionalDetails;
        private @Nullable String compartmentId;
        private @Nullable String componentName;
        private @Nullable Double cpuCoreCount;
        private @Nullable String displayName;
        private @Nullable String domainName;
        private @Nullable String externalConnectorId;
        private String externalDbNodeId;
        private @Nullable String externalDbSystemId;
        private @Nullable String hostName;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable Double memorySizeInGbs;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetExternalDbNodeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetails = defaults.additionalDetails;
    	      this.compartmentId = defaults.compartmentId;
    	      this.componentName = defaults.componentName;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.displayName = defaults.displayName;
    	      this.domainName = defaults.domainName;
    	      this.externalConnectorId = defaults.externalConnectorId;
    	      this.externalDbNodeId = defaults.externalDbNodeId;
    	      this.externalDbSystemId = defaults.externalDbSystemId;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.memorySizeInGbs = defaults.memorySizeInGbs;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder additionalDetails(@Nullable Map<String,Object> additionalDetails) {
            this.additionalDetails = additionalDetails;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder componentName(@Nullable String componentName) {
            this.componentName = componentName;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(@Nullable Double cpuCoreCount) {
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder domainName(@Nullable String domainName) {
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder externalConnectorId(@Nullable String externalConnectorId) {
            this.externalConnectorId = externalConnectorId;
            return this;
        }
        @CustomType.Setter
        public Builder externalDbNodeId(String externalDbNodeId) {
            this.externalDbNodeId = Objects.requireNonNull(externalDbNodeId);
            return this;
        }
        @CustomType.Setter
        public Builder externalDbSystemId(@Nullable String externalDbSystemId) {
            this.externalDbSystemId = externalDbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(@Nullable String hostName) {
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder memorySizeInGbs(@Nullable Double memorySizeInGbs) {
            this.memorySizeInGbs = memorySizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetExternalDbNodeResult build() {
            final var o = new GetExternalDbNodeResult();
            o.additionalDetails = additionalDetails;
            o.compartmentId = compartmentId;
            o.componentName = componentName;
            o.cpuCoreCount = cpuCoreCount;
            o.displayName = displayName;
            o.domainName = domainName;
            o.externalConnectorId = externalConnectorId;
            o.externalDbNodeId = externalDbNodeId;
            o.externalDbSystemId = externalDbSystemId;
            o.hostName = hostName;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.memorySizeInGbs = memorySizeInGbs;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
