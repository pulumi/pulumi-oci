// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItemConnectionInfo;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItem {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used for the external DB system connector.
     * 
     */
    private @Nullable String agentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The error message indicating the reason for connection failure or `null` if the connection was successful.
     * 
     */
    private @Nullable String connectionFailureMessage;
    /**
     * @return The connection details required to connect to an external DB system component.
     * 
     */
    private @Nullable List<GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItemConnectionInfo> connectionInfos;
    /**
     * @return The status of connectivity to the external DB system component.
     * 
     */
    private @Nullable String connectionStatus;
    /**
     * @return The type of connector.
     * 
     */
    private @Nullable String connectorType;
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system.
     * 
     */
    private @Nullable String externalDbSystemId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system connector.
     * 
     */
    private @Nullable String id;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The current lifecycle state of the external DB system connector.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the connectionStatus of the external DB system connector was last updated.
     * 
     */
    private @Nullable String timeConnectionStatusLastUpdated;
    /**
     * @return The date and time the external DB system connector was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the external DB system connector was last updated.
     * 
     */
    private @Nullable String timeUpdated;

    private GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItem() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used for the external DB system connector.
     * 
     */
    public Optional<String> agentId() {
        return Optional.ofNullable(this.agentId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The error message indicating the reason for connection failure or `null` if the connection was successful.
     * 
     */
    public Optional<String> connectionFailureMessage() {
        return Optional.ofNullable(this.connectionFailureMessage);
    }
    /**
     * @return The connection details required to connect to an external DB system component.
     * 
     */
    public List<GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItemConnectionInfo> connectionInfos() {
        return this.connectionInfos == null ? List.of() : this.connectionInfos;
    }
    /**
     * @return The status of connectivity to the external DB system component.
     * 
     */
    public Optional<String> connectionStatus() {
        return Optional.ofNullable(this.connectionStatus);
    }
    /**
     * @return The type of connector.
     * 
     */
    public Optional<String> connectorType() {
        return Optional.ofNullable(this.connectorType);
    }
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system.
     * 
     */
    public Optional<String> externalDbSystemId() {
        return Optional.ofNullable(this.externalDbSystemId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system connector.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The current lifecycle state of the external DB system connector.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the connectionStatus of the external DB system connector was last updated.
     * 
     */
    public Optional<String> timeConnectionStatusLastUpdated() {
        return Optional.ofNullable(this.timeConnectionStatusLastUpdated);
    }
    /**
     * @return The date and time the external DB system connector was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the external DB system connector was last updated.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String agentId;
        private @Nullable String compartmentId;
        private @Nullable String connectionFailureMessage;
        private @Nullable List<GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItemConnectionInfo> connectionInfos;
        private @Nullable String connectionStatus;
        private @Nullable String connectorType;
        private @Nullable String displayName;
        private @Nullable String externalDbSystemId;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String state;
        private @Nullable String timeConnectionStatusLastUpdated;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentId = defaults.agentId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionFailureMessage = defaults.connectionFailureMessage;
    	      this.connectionInfos = defaults.connectionInfos;
    	      this.connectionStatus = defaults.connectionStatus;
    	      this.connectorType = defaults.connectorType;
    	      this.displayName = defaults.displayName;
    	      this.externalDbSystemId = defaults.externalDbSystemId;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.state = defaults.state;
    	      this.timeConnectionStatusLastUpdated = defaults.timeConnectionStatusLastUpdated;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder agentId(@Nullable String agentId) {
            this.agentId = agentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectionFailureMessage(@Nullable String connectionFailureMessage) {
            this.connectionFailureMessage = connectionFailureMessage;
            return this;
        }
        @CustomType.Setter
        public Builder connectionInfos(@Nullable List<GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItemConnectionInfo> connectionInfos) {
            this.connectionInfos = connectionInfos;
            return this;
        }
        public Builder connectionInfos(GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItemConnectionInfo... connectionInfos) {
            return connectionInfos(List.of(connectionInfos));
        }
        @CustomType.Setter
        public Builder connectionStatus(@Nullable String connectionStatus) {
            this.connectionStatus = connectionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder connectorType(@Nullable String connectorType) {
            this.connectorType = connectorType;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalDbSystemId(@Nullable String externalDbSystemId) {
            this.externalDbSystemId = externalDbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeConnectionStatusLastUpdated(@Nullable String timeConnectionStatusLastUpdated) {
            this.timeConnectionStatusLastUpdated = timeConnectionStatusLastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItem build() {
            final var o = new GetExternalDbSystemConnectorsExternalDbSystemConnectorCollectionItem();
            o.agentId = agentId;
            o.compartmentId = compartmentId;
            o.connectionFailureMessage = connectionFailureMessage;
            o.connectionInfos = connectionInfos;
            o.connectionStatus = connectionStatus;
            o.connectorType = connectorType;
            o.displayName = displayName;
            o.externalDbSystemId = externalDbSystemId;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.state = state;
            o.timeConnectionStatusLastUpdated = timeConnectionStatusLastUpdated;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
