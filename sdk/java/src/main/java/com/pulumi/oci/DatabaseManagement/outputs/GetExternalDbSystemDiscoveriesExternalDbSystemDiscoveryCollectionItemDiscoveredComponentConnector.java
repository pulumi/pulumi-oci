// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnectorConnectionInfo;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnector {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used for the external DB system connector.
     * 
     */
    private String agentId;
    /**
     * @return The error message indicating the reason for connection failure or `null` if the connection was successful.
     * 
     */
    private String connectionFailureMessage;
    /**
     * @return The connection details required to connect to an external DB system component.
     * 
     */
    private List<GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnectorConnectionInfo> connectionInfos;
    /**
     * @return The status of connectivity to the external DB system component.
     * 
     */
    private String connectionStatus;
    /**
     * @return The type of connector.
     * 
     */
    private String connectorType;
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    private String displayName;
    /**
     * @return The date and time the connectionStatus of the external DB system connector was last updated.
     * 
     */
    private String timeConnectionStatusLastUpdated;

    private GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnector() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used for the external DB system connector.
     * 
     */
    public String agentId() {
        return this.agentId;
    }
    /**
     * @return The error message indicating the reason for connection failure or `null` if the connection was successful.
     * 
     */
    public String connectionFailureMessage() {
        return this.connectionFailureMessage;
    }
    /**
     * @return The connection details required to connect to an external DB system component.
     * 
     */
    public List<GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnectorConnectionInfo> connectionInfos() {
        return this.connectionInfos;
    }
    /**
     * @return The status of connectivity to the external DB system component.
     * 
     */
    public String connectionStatus() {
        return this.connectionStatus;
    }
    /**
     * @return The type of connector.
     * 
     */
    public String connectorType() {
        return this.connectorType;
    }
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The date and time the connectionStatus of the external DB system connector was last updated.
     * 
     */
    public String timeConnectionStatusLastUpdated() {
        return this.timeConnectionStatusLastUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String agentId;
        private String connectionFailureMessage;
        private List<GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnectorConnectionInfo> connectionInfos;
        private String connectionStatus;
        private String connectorType;
        private String displayName;
        private String timeConnectionStatusLastUpdated;
        public Builder() {}
        public Builder(GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentId = defaults.agentId;
    	      this.connectionFailureMessage = defaults.connectionFailureMessage;
    	      this.connectionInfos = defaults.connectionInfos;
    	      this.connectionStatus = defaults.connectionStatus;
    	      this.connectorType = defaults.connectorType;
    	      this.displayName = defaults.displayName;
    	      this.timeConnectionStatusLastUpdated = defaults.timeConnectionStatusLastUpdated;
        }

        @CustomType.Setter
        public Builder agentId(String agentId) {
            this.agentId = Objects.requireNonNull(agentId);
            return this;
        }
        @CustomType.Setter
        public Builder connectionFailureMessage(String connectionFailureMessage) {
            this.connectionFailureMessage = Objects.requireNonNull(connectionFailureMessage);
            return this;
        }
        @CustomType.Setter
        public Builder connectionInfos(List<GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnectorConnectionInfo> connectionInfos) {
            this.connectionInfos = Objects.requireNonNull(connectionInfos);
            return this;
        }
        public Builder connectionInfos(GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnectorConnectionInfo... connectionInfos) {
            return connectionInfos(List.of(connectionInfos));
        }
        @CustomType.Setter
        public Builder connectionStatus(String connectionStatus) {
            this.connectionStatus = Objects.requireNonNull(connectionStatus);
            return this;
        }
        @CustomType.Setter
        public Builder connectorType(String connectorType) {
            this.connectorType = Objects.requireNonNull(connectorType);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder timeConnectionStatusLastUpdated(String timeConnectionStatusLastUpdated) {
            this.timeConnectionStatusLastUpdated = Objects.requireNonNull(timeConnectionStatusLastUpdated);
            return this;
        }
        public GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnector build() {
            final var o = new GetExternalDbSystemDiscoveriesExternalDbSystemDiscoveryCollectionItemDiscoveredComponentConnector();
            o.agentId = agentId;
            o.connectionFailureMessage = connectionFailureMessage;
            o.connectionInfos = connectionInfos;
            o.connectionStatus = connectionStatus;
            o.connectorType = connectorType;
            o.displayName = displayName;
            o.timeConnectionStatusLastUpdated = timeConnectionStatusLastUpdated;
            return o;
        }
    }
}
