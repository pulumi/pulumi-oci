// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabase {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The connector details used to connect to the external DB system component.
     * 
     */
    private List<GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector> connectors;
    /**
     * @return The unique identifier of the parent Container Database (CDB).
     * 
     */
    private String containerDatabaseId;
    /**
     * @return The unique identifier of the PDB.
     * 
     */
    private String guid;

    private GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabase() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The connector details used to connect to the external DB system component.
     * 
     */
    public List<GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector> connectors() {
        return this.connectors;
    }
    /**
     * @return The unique identifier of the parent Container Database (CDB).
     * 
     */
    public String containerDatabaseId() {
        return this.containerDatabaseId;
    }
    /**
     * @return The unique identifier of the PDB.
     * 
     */
    public String guid() {
        return this.guid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabase defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector> connectors;
        private String containerDatabaseId;
        private String guid;
        public Builder() {}
        public Builder(GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectors = defaults.connectors;
    	      this.containerDatabaseId = defaults.containerDatabaseId;
    	      this.guid = defaults.guid;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder connectors(List<GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector> connectors) {
            this.connectors = Objects.requireNonNull(connectors);
            return this;
        }
        public Builder connectors(GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabaseConnector... connectors) {
            return connectors(List.of(connectors));
        }
        @CustomType.Setter
        public Builder containerDatabaseId(String containerDatabaseId) {
            this.containerDatabaseId = Objects.requireNonNull(containerDatabaseId);
            return this;
        }
        @CustomType.Setter
        public Builder guid(String guid) {
            this.guid = Objects.requireNonNull(guid);
            return this;
        }
        public GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabase build() {
            final var o = new GetExternalDbSystemDiscoveryDiscoveredComponentPluggableDatabase();
            o.compartmentId = compartmentId;
            o.connectors = connectors;
            o.containerDatabaseId = containerDatabaseId;
            o.guid = guid;
            return o;
        }
    }
}
