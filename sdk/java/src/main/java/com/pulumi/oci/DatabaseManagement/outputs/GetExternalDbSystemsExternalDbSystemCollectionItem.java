// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalDbSystemsExternalDbSystemCollectionItemDatabaseManagementConfig;
import com.pulumi.oci.DatabaseManagement.outputs.GetExternalDbSystemsExternalDbSystemCollectionItemStackMonitoringConfig;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalDbSystemsExternalDbSystemCollectionItem {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The details required to enable Database Management for an external DB system.
     * 
     */
    private @Nullable List<GetExternalDbSystemsExternalDbSystemCollectionItemDatabaseManagementConfig> databaseManagementConfigs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system discovery.
     * 
     */
    private @Nullable String dbSystemDiscoveryId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used during the discovery of the DB system.
     * 
     */
    private @Nullable String discoveryAgentId;
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The Oracle Grid home directory in case of cluster-based DB system and Oracle home directory in case of single instance-based DB system.
     * 
     */
    private @Nullable String homeDirectory;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates whether the DB system is a cluster DB system or not.
     * 
     */
    private @Nullable Boolean isCluster;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The configuration details of Stack Monitoring for an external DB system.
     * 
     */
    private @Nullable List<GetExternalDbSystemsExternalDbSystemCollectionItemStackMonitoringConfig> stackMonitoringConfigs;
    /**
     * @return The current lifecycle state of the external DB system resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the external DB system was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the external DB system was last updated.
     * 
     */
    private @Nullable String timeUpdated;

    private GetExternalDbSystemsExternalDbSystemCollectionItem() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The details required to enable Database Management for an external DB system.
     * 
     */
    public List<GetExternalDbSystemsExternalDbSystemCollectionItemDatabaseManagementConfig> databaseManagementConfigs() {
        return this.databaseManagementConfigs == null ? List.of() : this.databaseManagementConfigs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system discovery.
     * 
     */
    public Optional<String> dbSystemDiscoveryId() {
        return Optional.ofNullable(this.dbSystemDiscoveryId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent used during the discovery of the DB system.
     * 
     */
    public Optional<String> discoveryAgentId() {
        return Optional.ofNullable(this.discoveryAgentId);
    }
    /**
     * @return A filter to only return the resources that match the entire display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The Oracle Grid home directory in case of cluster-based DB system and Oracle home directory in case of single instance-based DB system.
     * 
     */
    public Optional<String> homeDirectory() {
        return Optional.ofNullable(this.homeDirectory);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external DB system.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates whether the DB system is a cluster DB system or not.
     * 
     */
    public Optional<Boolean> isCluster() {
        return Optional.ofNullable(this.isCluster);
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The configuration details of Stack Monitoring for an external DB system.
     * 
     */
    public List<GetExternalDbSystemsExternalDbSystemCollectionItemStackMonitoringConfig> stackMonitoringConfigs() {
        return this.stackMonitoringConfigs == null ? List.of() : this.stackMonitoringConfigs;
    }
    /**
     * @return The current lifecycle state of the external DB system resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the external DB system was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the external DB system was last updated.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalDbSystemsExternalDbSystemCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable List<GetExternalDbSystemsExternalDbSystemCollectionItemDatabaseManagementConfig> databaseManagementConfigs;
        private @Nullable String dbSystemDiscoveryId;
        private @Nullable String discoveryAgentId;
        private @Nullable String displayName;
        private @Nullable String homeDirectory;
        private @Nullable String id;
        private @Nullable Boolean isCluster;
        private @Nullable String lifecycleDetails;
        private @Nullable List<GetExternalDbSystemsExternalDbSystemCollectionItemStackMonitoringConfig> stackMonitoringConfigs;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetExternalDbSystemsExternalDbSystemCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseManagementConfigs = defaults.databaseManagementConfigs;
    	      this.dbSystemDiscoveryId = defaults.dbSystemDiscoveryId;
    	      this.discoveryAgentId = defaults.discoveryAgentId;
    	      this.displayName = defaults.displayName;
    	      this.homeDirectory = defaults.homeDirectory;
    	      this.id = defaults.id;
    	      this.isCluster = defaults.isCluster;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.stackMonitoringConfigs = defaults.stackMonitoringConfigs;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseManagementConfigs(@Nullable List<GetExternalDbSystemsExternalDbSystemCollectionItemDatabaseManagementConfig> databaseManagementConfigs) {
            this.databaseManagementConfigs = databaseManagementConfigs;
            return this;
        }
        public Builder databaseManagementConfigs(GetExternalDbSystemsExternalDbSystemCollectionItemDatabaseManagementConfig... databaseManagementConfigs) {
            return databaseManagementConfigs(List.of(databaseManagementConfigs));
        }
        @CustomType.Setter
        public Builder dbSystemDiscoveryId(@Nullable String dbSystemDiscoveryId) {
            this.dbSystemDiscoveryId = dbSystemDiscoveryId;
            return this;
        }
        @CustomType.Setter
        public Builder discoveryAgentId(@Nullable String discoveryAgentId) {
            this.discoveryAgentId = discoveryAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder homeDirectory(@Nullable String homeDirectory) {
            this.homeDirectory = homeDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCluster(@Nullable Boolean isCluster) {
            this.isCluster = isCluster;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder stackMonitoringConfigs(@Nullable List<GetExternalDbSystemsExternalDbSystemCollectionItemStackMonitoringConfig> stackMonitoringConfigs) {
            this.stackMonitoringConfigs = stackMonitoringConfigs;
            return this;
        }
        public Builder stackMonitoringConfigs(GetExternalDbSystemsExternalDbSystemCollectionItemStackMonitoringConfig... stackMonitoringConfigs) {
            return stackMonitoringConfigs(List.of(stackMonitoringConfigs));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetExternalDbSystemsExternalDbSystemCollectionItem build() {
            final var o = new GetExternalDbSystemsExternalDbSystemCollectionItem();
            o.compartmentId = compartmentId;
            o.databaseManagementConfigs = databaseManagementConfigs;
            o.dbSystemDiscoveryId = dbSystemDiscoveryId;
            o.discoveryAgentId = discoveryAgentId;
            o.displayName = displayName;
            o.homeDirectory = homeDirectory;
            o.id = id;
            o.isCluster = isCluster;
            o.lifecycleDetails = lifecycleDetails;
            o.stackMonitoringConfigs = stackMonitoringConfigs;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
