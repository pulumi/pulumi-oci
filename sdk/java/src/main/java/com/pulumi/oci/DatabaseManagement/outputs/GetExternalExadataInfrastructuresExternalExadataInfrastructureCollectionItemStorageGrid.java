// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemStorageGrid {
    /**
     * @return The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> additionalDetails;
    /**
     * @return The optional single value query filter parameter on the entity display name.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
     * 
     */
    private String id;
    /**
     * @return The internal ID of the Exadata resource.
     * 
     */
    private String internalId;
    /**
     * @return The details of the lifecycle state of the Exadata resource.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The number of Exadata storage servers in the Exadata infrastructure.
     * 
     */
    private Double serverCount;
    /**
     * @return The current lifecycle state of the database resource.
     * 
     */
    private String state;
    /**
     * @return The status of the Exadata resource.
     * 
     */
    private String status;
    /**
     * @return The timestamp of the creation of the Exadata resource.
     * 
     */
    private String timeCreated;
    /**
     * @return The timestamp of the last update of the Exadata resource.
     * 
     */
    private String timeUpdated;
    /**
     * @return The version of the Exadata resource.
     * 
     */
    private String version;

    private GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemStorageGrid() {}
    /**
     * @return The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> additionalDetails() {
        return this.additionalDetails;
    }
    /**
     * @return The optional single value query filter parameter on the entity display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The internal ID of the Exadata resource.
     * 
     */
    public String internalId() {
        return this.internalId;
    }
    /**
     * @return The details of the lifecycle state of the Exadata resource.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The number of Exadata storage servers in the Exadata infrastructure.
     * 
     */
    public Double serverCount() {
        return this.serverCount;
    }
    /**
     * @return The current lifecycle state of the database resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The status of the Exadata resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The timestamp of the creation of the Exadata resource.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The timestamp of the last update of the Exadata resource.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The version of the Exadata resource.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemStorageGrid defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> additionalDetails;
        private String displayName;
        private String id;
        private String internalId;
        private String lifecycleDetails;
        private Double serverCount;
        private String state;
        private String status;
        private String timeCreated;
        private String timeUpdated;
        private String version;
        public Builder() {}
        public Builder(GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemStorageGrid defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetails = defaults.additionalDetails;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.internalId = defaults.internalId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.serverCount = defaults.serverCount;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder additionalDetails(Map<String,Object> additionalDetails) {
            this.additionalDetails = Objects.requireNonNull(additionalDetails);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder internalId(String internalId) {
            this.internalId = Objects.requireNonNull(internalId);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder serverCount(Double serverCount) {
            this.serverCount = Objects.requireNonNull(serverCount);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemStorageGrid build() {
            final var _resultValue = new GetExternalExadataInfrastructuresExternalExadataInfrastructureCollectionItemStorageGrid();
            _resultValue.additionalDetails = additionalDetails;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.internalId = internalId;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.serverCount = serverCount;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
