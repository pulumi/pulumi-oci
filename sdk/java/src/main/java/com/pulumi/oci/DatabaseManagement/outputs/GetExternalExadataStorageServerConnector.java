// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalExadataStorageServerConnector {
    /**
     * @return The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> additionalDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
     * 
     */
    private @Nullable String agentId;
    /**
     * @return The unique string of the connection. For example, &#34;https://&lt;storage-server-name&gt;/MS/RESTService/&#34;.
     * 
     */
    private @Nullable String connectionUri;
    /**
     * @return The name of the Exadata resource. English letters, numbers, &#34;-&#34;, &#34;_&#34; and &#34;.&#34; only.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The internal ID of the Exadata resource.
     * 
     */
    private @Nullable String internalId;
    /**
     * @return The details of the lifecycle state of the Exadata resource.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The type of Exadata resource.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return The current lifecycle state of the database resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return The status of the Exadata resource.
     * 
     */
    private @Nullable String status;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
     * 
     */
    private @Nullable String storageServerId;
    /**
     * @return The timestamp of the creation of the Exadata resource.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The timestamp of the last update of the Exadata resource.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The version of the Exadata resource.
     * 
     */
    private @Nullable String version;

    private GetExternalExadataStorageServerConnector() {}
    /**
     * @return The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> additionalDetails() {
        return this.additionalDetails == null ? Map.of() : this.additionalDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the agent for the Exadata storage server.
     * 
     */
    public Optional<String> agentId() {
        return Optional.ofNullable(this.agentId);
    }
    /**
     * @return The unique string of the connection. For example, &#34;https://&lt;storage-server-name&gt;/MS/RESTService/&#34;.
     * 
     */
    public Optional<String> connectionUri() {
        return Optional.ofNullable(this.connectionUri);
    }
    /**
     * @return The name of the Exadata resource. English letters, numbers, &#34;-&#34;, &#34;_&#34; and &#34;.&#34; only.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The internal ID of the Exadata resource.
     * 
     */
    public Optional<String> internalId() {
        return Optional.ofNullable(this.internalId);
    }
    /**
     * @return The details of the lifecycle state of the Exadata resource.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The type of Exadata resource.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return The current lifecycle state of the database resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The status of the Exadata resource.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server.
     * 
     */
    public Optional<String> storageServerId() {
        return Optional.ofNullable(this.storageServerId);
    }
    /**
     * @return The timestamp of the creation of the Exadata resource.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The timestamp of the last update of the Exadata resource.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The version of the Exadata resource.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalExadataStorageServerConnector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> additionalDetails;
        private @Nullable String agentId;
        private @Nullable String connectionUri;
        private @Nullable String displayName;
        private @Nullable String id;
        private @Nullable String internalId;
        private @Nullable String lifecycleDetails;
        private @Nullable String resourceType;
        private @Nullable String state;
        private @Nullable String status;
        private @Nullable String storageServerId;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetExternalExadataStorageServerConnector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetails = defaults.additionalDetails;
    	      this.agentId = defaults.agentId;
    	      this.connectionUri = defaults.connectionUri;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.internalId = defaults.internalId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.storageServerId = defaults.storageServerId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder additionalDetails(@Nullable Map<String,Object> additionalDetails) {
            this.additionalDetails = additionalDetails;
            return this;
        }
        @CustomType.Setter
        public Builder agentId(@Nullable String agentId) {
            this.agentId = agentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectionUri(@Nullable String connectionUri) {
            this.connectionUri = connectionUri;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder internalId(@Nullable String internalId) {
            this.internalId = internalId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder storageServerId(@Nullable String storageServerId) {
            this.storageServerId = storageServerId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetExternalExadataStorageServerConnector build() {
            final var o = new GetExternalExadataStorageServerConnector();
            o.additionalDetails = additionalDetails;
            o.agentId = agentId;
            o.connectionUri = connectionUri;
            o.displayName = displayName;
            o.id = id;
            o.internalId = internalId;
            o.lifecycleDetails = lifecycleDetails;
            o.resourceType = resourceType;
            o.state = state;
            o.status = status;
            o.storageServerId = storageServerId;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.version = version;
            return o;
        }
    }
}
