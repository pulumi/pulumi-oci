// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem {
    /**
     * @return The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> additionalDetails;
    private String connectorId;
    /**
     * @return The CPU count of the Exadata storage server.
     * 
     */
    private Double cpuCount;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The optional single value query filter parameter on the entity display name.
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    private String exadataInfrastructureId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
     * 
     */
    private String id;
    /**
     * @return The internal ID of the Exadata resource.
     * 
     */
    private String internalId;
    /**
     * @return The IP address of the Exadata storage server.
     * 
     */
    private String ipAddress;
    /**
     * @return The details of the lifecycle state of the Exadata resource.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The make model of the Exadata storage server.
     * 
     */
    private String makeModel;
    /**
     * @return The maximum flash disk IO operations per second of the Exadata storage server.
     * 
     */
    private Integer maxFlashDiskIops;
    /**
     * @return The maximum flash disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    private Integer maxFlashDiskThroughput;
    /**
     * @return The maximum hard disk IO operations per second of the Exadata storage server.
     * 
     */
    private Integer maxHardDiskIops;
    /**
     * @return The maximum hard disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    private Integer maxHardDiskThroughput;
    /**
     * @return The Exadata storage server memory size in GB.
     * 
     */
    private Double memoryGb;
    /**
     * @return The type of Exadata resource.
     * 
     */
    private String resourceType;
    /**
     * @return The current lifecycle state of the database resource.
     * 
     */
    private String state;
    /**
     * @return The status of the Exadata resource.
     * 
     */
    private String status;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server grid.
     * 
     */
    private String storageGridId;
    /**
     * @return The timestamp of the creation of the Exadata resource.
     * 
     */
    private String timeCreated;
    /**
     * @return The timestamp of the last update of the Exadata resource.
     * 
     */
    private String timeUpdated;
    /**
     * @return The version of the Exadata resource.
     * 
     */
    private String version;

    private GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem() {}
    /**
     * @return The additional details of the resource defined in `{&#34;key&#34;: &#34;value&#34;}` format. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> additionalDetails() {
        return this.additionalDetails;
    }
    public String connectorId() {
        return this.connectorId;
    }
    /**
     * @return The CPU count of the Exadata storage server.
     * 
     */
    public Double cpuCount() {
        return this.cpuCount;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The optional single value query filter parameter on the entity display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata infrastructure.
     * 
     */
    public String exadataInfrastructureId() {
        return this.exadataInfrastructureId;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The internal ID of the Exadata resource.
     * 
     */
    public String internalId() {
        return this.internalId;
    }
    /**
     * @return The IP address of the Exadata storage server.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The details of the lifecycle state of the Exadata resource.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The make model of the Exadata storage server.
     * 
     */
    public String makeModel() {
        return this.makeModel;
    }
    /**
     * @return The maximum flash disk IO operations per second of the Exadata storage server.
     * 
     */
    public Integer maxFlashDiskIops() {
        return this.maxFlashDiskIops;
    }
    /**
     * @return The maximum flash disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    public Integer maxFlashDiskThroughput() {
        return this.maxFlashDiskThroughput;
    }
    /**
     * @return The maximum hard disk IO operations per second of the Exadata storage server.
     * 
     */
    public Integer maxHardDiskIops() {
        return this.maxHardDiskIops;
    }
    /**
     * @return The maximum hard disk IO throughput in MB/s of the Exadata storage server.
     * 
     */
    public Integer maxHardDiskThroughput() {
        return this.maxHardDiskThroughput;
    }
    /**
     * @return The Exadata storage server memory size in GB.
     * 
     */
    public Double memoryGb() {
        return this.memoryGb;
    }
    /**
     * @return The type of Exadata resource.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The current lifecycle state of the database resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The status of the Exadata resource.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata storage server grid.
     * 
     */
    public String storageGridId() {
        return this.storageGridId;
    }
    /**
     * @return The timestamp of the creation of the Exadata resource.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The timestamp of the last update of the Exadata resource.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The version of the Exadata resource.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,Object> additionalDetails;
        private String connectorId;
        private Double cpuCount;
        private Map<String,Object> definedTags;
        private String displayName;
        private String exadataInfrastructureId;
        private Map<String,Object> freeformTags;
        private String id;
        private String internalId;
        private String ipAddress;
        private String lifecycleDetails;
        private String makeModel;
        private Integer maxFlashDiskIops;
        private Integer maxFlashDiskThroughput;
        private Integer maxHardDiskIops;
        private Integer maxHardDiskThroughput;
        private Double memoryGb;
        private String resourceType;
        private String state;
        private String status;
        private String storageGridId;
        private String timeCreated;
        private String timeUpdated;
        private String version;
        public Builder() {}
        public Builder(GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalDetails = defaults.additionalDetails;
    	      this.connectorId = defaults.connectorId;
    	      this.cpuCount = defaults.cpuCount;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.exadataInfrastructureId = defaults.exadataInfrastructureId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.internalId = defaults.internalId;
    	      this.ipAddress = defaults.ipAddress;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.makeModel = defaults.makeModel;
    	      this.maxFlashDiskIops = defaults.maxFlashDiskIops;
    	      this.maxFlashDiskThroughput = defaults.maxFlashDiskThroughput;
    	      this.maxHardDiskIops = defaults.maxHardDiskIops;
    	      this.maxHardDiskThroughput = defaults.maxHardDiskThroughput;
    	      this.memoryGb = defaults.memoryGb;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.storageGridId = defaults.storageGridId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder additionalDetails(Map<String,Object> additionalDetails) {
            if (additionalDetails == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "additionalDetails");
            }
            this.additionalDetails = additionalDetails;
            return this;
        }
        @CustomType.Setter
        public Builder connectorId(String connectorId) {
            if (connectorId == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "connectorId");
            }
            this.connectorId = connectorId;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCount(Double cpuCount) {
            if (cpuCount == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "cpuCount");
            }
            this.cpuCount = cpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder exadataInfrastructureId(String exadataInfrastructureId) {
            if (exadataInfrastructureId == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "exadataInfrastructureId");
            }
            this.exadataInfrastructureId = exadataInfrastructureId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder internalId(String internalId) {
            if (internalId == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "internalId");
            }
            this.internalId = internalId;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder makeModel(String makeModel) {
            if (makeModel == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "makeModel");
            }
            this.makeModel = makeModel;
            return this;
        }
        @CustomType.Setter
        public Builder maxFlashDiskIops(Integer maxFlashDiskIops) {
            if (maxFlashDiskIops == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "maxFlashDiskIops");
            }
            this.maxFlashDiskIops = maxFlashDiskIops;
            return this;
        }
        @CustomType.Setter
        public Builder maxFlashDiskThroughput(Integer maxFlashDiskThroughput) {
            if (maxFlashDiskThroughput == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "maxFlashDiskThroughput");
            }
            this.maxFlashDiskThroughput = maxFlashDiskThroughput;
            return this;
        }
        @CustomType.Setter
        public Builder maxHardDiskIops(Integer maxHardDiskIops) {
            if (maxHardDiskIops == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "maxHardDiskIops");
            }
            this.maxHardDiskIops = maxHardDiskIops;
            return this;
        }
        @CustomType.Setter
        public Builder maxHardDiskThroughput(Integer maxHardDiskThroughput) {
            if (maxHardDiskThroughput == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "maxHardDiskThroughput");
            }
            this.maxHardDiskThroughput = maxHardDiskThroughput;
            return this;
        }
        @CustomType.Setter
        public Builder memoryGb(Double memoryGb) {
            if (memoryGb == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "memoryGb");
            }
            this.memoryGb = memoryGb;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder storageGridId(String storageGridId) {
            if (storageGridId == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "storageGridId");
            }
            this.storageGridId = storageGridId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem", "version");
            }
            this.version = version;
            return this;
        }
        public GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem build() {
            final var _resultValue = new GetExternalExadataStorageServersExternalExadataStorageServerCollectionItem();
            _resultValue.additionalDetails = additionalDetails;
            _resultValue.connectorId = connectorId;
            _resultValue.cpuCount = cpuCount;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.exadataInfrastructureId = exadataInfrastructureId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.internalId = internalId;
            _resultValue.ipAddress = ipAddress;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.makeModel = makeModel;
            _resultValue.maxFlashDiskIops = maxFlashDiskIops;
            _resultValue.maxFlashDiskThroughput = maxFlashDiskThroughput;
            _resultValue.maxHardDiskIops = maxHardDiskIops;
            _resultValue.maxHardDiskThroughput = maxHardDiskThroughput;
            _resultValue.memoryGb = memoryGb;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            _resultValue.status = status;
            _resultValue.storageGridId = storageGridId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
