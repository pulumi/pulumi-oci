// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetExternalListenerServicesExternalListenerServiceCollectionItem {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external listener.
     * 
     */
    private String listenerId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    private String managedDatabaseId;
    /**
     * @return The name of the service.
     * 
     */
    private String name;

    private GetExternalListenerServicesExternalListenerServiceCollectionItem() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external listener.
     * 
     */
    public String listenerId() {
        return this.listenerId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }
    /**
     * @return The name of the service.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalListenerServicesExternalListenerServiceCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String listenerId;
        private String managedDatabaseId;
        private String name;
        public Builder() {}
        public Builder(GetExternalListenerServicesExternalListenerServiceCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.listenerId = defaults.listenerId;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder listenerId(String listenerId) {
            if (listenerId == null) {
              throw new MissingRequiredPropertyException("GetExternalListenerServicesExternalListenerServiceCollectionItem", "listenerId");
            }
            this.listenerId = listenerId;
            return this;
        }
        @CustomType.Setter
        public Builder managedDatabaseId(String managedDatabaseId) {
            if (managedDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetExternalListenerServicesExternalListenerServiceCollectionItem", "managedDatabaseId");
            }
            this.managedDatabaseId = managedDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetExternalListenerServicesExternalListenerServiceCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        public GetExternalListenerServicesExternalListenerServiceCollectionItem build() {
            final var _resultValue = new GetExternalListenerServicesExternalListenerServiceCollectionItem();
            _resultValue.listenerId = listenerId;
            _resultValue.managedDatabaseId = managedDatabaseId;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
