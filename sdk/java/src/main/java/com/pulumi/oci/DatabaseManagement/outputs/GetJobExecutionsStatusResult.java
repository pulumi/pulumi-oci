// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetJobExecutionsStatusItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetJobExecutionsStatusResult {
    private String compartmentId;
    private String endTime;
    private @Nullable String id;
    /**
     * @return A list of JobExecutionsSummary objects.
     * 
     */
    private @Nullable List<GetJobExecutionsStatusItem> items;
    private @Nullable String managedDatabaseGroupId;
    private @Nullable String managedDatabaseId;
    private @Nullable String name;
    private String startTime;

    private GetJobExecutionsStatusResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public String endTime() {
        return this.endTime;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A list of JobExecutionsSummary objects.
     * 
     */
    public List<GetJobExecutionsStatusItem> items() {
        return this.items == null ? List.of() : this.items;
    }
    public Optional<String> managedDatabaseGroupId() {
        return Optional.ofNullable(this.managedDatabaseGroupId);
    }
    public Optional<String> managedDatabaseId() {
        return Optional.ofNullable(this.managedDatabaseId);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String startTime() {
        return this.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobExecutionsStatusResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String endTime;
        private @Nullable String id;
        private @Nullable List<GetJobExecutionsStatusItem> items;
        private @Nullable String managedDatabaseGroupId;
        private @Nullable String managedDatabaseId;
        private @Nullable String name;
        private String startTime;
        public Builder() {}
        public Builder(GetJobExecutionsStatusResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.endTime = defaults.endTime;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.managedDatabaseGroupId = defaults.managedDatabaseGroupId;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.name = defaults.name;
    	      this.startTime = defaults.startTime;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(@Nullable List<GetJobExecutionsStatusItem> items) {
            this.items = items;
            return this;
        }
        public Builder items(GetJobExecutionsStatusItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder managedDatabaseGroupId(@Nullable String managedDatabaseGroupId) {
            this.managedDatabaseGroupId = managedDatabaseGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder managedDatabaseId(@Nullable String managedDatabaseId) {
            this.managedDatabaseId = managedDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public GetJobExecutionsStatusResult build() {
            final var o = new GetJobExecutionsStatusResult();
            o.compartmentId = compartmentId;
            o.endTime = endTime;
            o.id = id;
            o.items = items;
            o.managedDatabaseGroupId = managedDatabaseGroupId;
            o.managedDatabaseId = managedDatabaseId;
            o.name = name;
            o.startTime = startTime;
            return o;
        }
    }
}
