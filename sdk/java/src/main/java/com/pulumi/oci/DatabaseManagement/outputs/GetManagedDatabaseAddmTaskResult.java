// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseAddmTaskItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseAddmTaskResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of ADDM task metadata.
     * 
     */
    private List<GetManagedDatabaseAddmTaskItem> items;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    private String managedDatabaseId;
    private String timeEnd;
    private String timeStart;

    private GetManagedDatabaseAddmTaskResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of ADDM task metadata.
     * 
     */
    public List<GetManagedDatabaseAddmTaskItem> items() {
        return this.items;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }
    public String timeEnd() {
        return this.timeEnd;
    }
    public String timeStart() {
        return this.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseAddmTaskResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetManagedDatabaseAddmTaskItem> items;
        private String managedDatabaseId;
        private String timeEnd;
        private String timeStart;
        public Builder() {}
        public Builder(GetManagedDatabaseAddmTaskResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseAddmTaskResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetManagedDatabaseAddmTaskItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseAddmTaskResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetManagedDatabaseAddmTaskItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder managedDatabaseId(String managedDatabaseId) {
            if (managedDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseAddmTaskResult", "managedDatabaseId");
            }
            this.managedDatabaseId = managedDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(String timeEnd) {
            if (timeEnd == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseAddmTaskResult", "timeEnd");
            }
            this.timeEnd = timeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(String timeStart) {
            if (timeStart == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseAddmTaskResult", "timeStart");
            }
            this.timeStart = timeStart;
            return this;
        }
        public GetManagedDatabaseAddmTaskResult build() {
            final var _resultValue = new GetManagedDatabaseAddmTaskResult();
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.managedDatabaseId = managedDatabaseId;
            _resultValue.timeEnd = timeEnd;
            _resultValue.timeStart = timeStart;
            return _resultValue;
        }
    }
}
