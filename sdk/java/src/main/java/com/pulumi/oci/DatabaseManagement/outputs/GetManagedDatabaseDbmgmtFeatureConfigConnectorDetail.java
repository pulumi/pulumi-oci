// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseDbmgmtFeatureConfigConnectorDetail {
    /**
     * @return The list of supported connection types:
     * * PE: Private endpoint
     * * MACS: Management agent
     * * EXTERNAL: External database connector
     * 
     */
    private String connectorType;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database connector.
     * 
     */
    private String databaseConnectorId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent.
     * 
     */
    private String managementAgentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
     * 
     */
    private String privateEndPointId;

    private GetManagedDatabaseDbmgmtFeatureConfigConnectorDetail() {}
    /**
     * @return The list of supported connection types:
     * * PE: Private endpoint
     * * MACS: Management agent
     * * EXTERNAL: External database connector
     * 
     */
    public String connectorType() {
        return this.connectorType;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database connector.
     * 
     */
    public String databaseConnectorId() {
        return this.databaseConnectorId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management agent.
     * 
     */
    public String managementAgentId() {
        return this.managementAgentId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint.
     * 
     */
    public String privateEndPointId() {
        return this.privateEndPointId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseDbmgmtFeatureConfigConnectorDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectorType;
        private String databaseConnectorId;
        private String managementAgentId;
        private String privateEndPointId;
        public Builder() {}
        public Builder(GetManagedDatabaseDbmgmtFeatureConfigConnectorDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectorType = defaults.connectorType;
    	      this.databaseConnectorId = defaults.databaseConnectorId;
    	      this.managementAgentId = defaults.managementAgentId;
    	      this.privateEndPointId = defaults.privateEndPointId;
        }

        @CustomType.Setter
        public Builder connectorType(String connectorType) {
            if (connectorType == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseDbmgmtFeatureConfigConnectorDetail", "connectorType");
            }
            this.connectorType = connectorType;
            return this;
        }
        @CustomType.Setter
        public Builder databaseConnectorId(String databaseConnectorId) {
            if (databaseConnectorId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseDbmgmtFeatureConfigConnectorDetail", "databaseConnectorId");
            }
            this.databaseConnectorId = databaseConnectorId;
            return this;
        }
        @CustomType.Setter
        public Builder managementAgentId(String managementAgentId) {
            if (managementAgentId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseDbmgmtFeatureConfigConnectorDetail", "managementAgentId");
            }
            this.managementAgentId = managementAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndPointId(String privateEndPointId) {
            if (privateEndPointId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseDbmgmtFeatureConfigConnectorDetail", "privateEndPointId");
            }
            this.privateEndPointId = privateEndPointId;
            return this;
        }
        public GetManagedDatabaseDbmgmtFeatureConfigConnectorDetail build() {
            final var _resultValue = new GetManagedDatabaseDbmgmtFeatureConfigConnectorDetail();
            _resultValue.connectorType = connectorType;
            _resultValue.databaseConnectorId = databaseConnectorId;
            _resultValue.managementAgentId = managementAgentId;
            _resultValue.privateEndPointId = privateEndPointId;
            return _resultValue;
        }
    }
}
