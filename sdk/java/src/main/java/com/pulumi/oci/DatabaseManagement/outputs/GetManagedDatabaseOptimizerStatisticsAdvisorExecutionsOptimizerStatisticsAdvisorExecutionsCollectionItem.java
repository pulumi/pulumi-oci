// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReport;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItem {
    /**
     * @return The summary of the Managed Database resource.
     * 
     */
    private @Nullable List<GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase> databases;
    /**
     * @return The errors in the Optimizer Statistics Advisor execution, if any.
     * 
     */
    private @Nullable String errorMessage;
    /**
     * @return The name of the Optimizer Statistics Advisor execution.
     * 
     */
    private @Nullable String executionName;
    /**
     * @return The list of findings for the rule.
     * 
     */
    private @Nullable Integer findings;
    /**
     * @return A report that includes the rules, findings, recommendations, and actions discovered during the execution of the Optimizer Statistics Advisor.
     * 
     */
    private @Nullable List<GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReport> reports;
    /**
     * @return The status of the Optimizer Statistics Advisor execution.
     * 
     */
    private @Nullable String status;
    /**
     * @return The Optimizer Statistics Advisor execution status message, if any.
     * 
     */
    private @Nullable String statusMessage;
    /**
     * @return The name of the Optimizer Statistics Advisor task.
     * 
     */
    private @Nullable String taskName;
    /**
     * @return The end time of the time range to retrieve the Optimizer Statistics Advisor execution of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
     * 
     */
    private @Nullable String timeEnd;
    /**
     * @return The start time of the time range to retrieve the Optimizer Statistics Advisor execution of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
     * 
     */
    private @Nullable String timeStart;

    private GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItem() {}
    /**
     * @return The summary of the Managed Database resource.
     * 
     */
    public List<GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase> databases() {
        return this.databases == null ? List.of() : this.databases;
    }
    /**
     * @return The errors in the Optimizer Statistics Advisor execution, if any.
     * 
     */
    public Optional<String> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }
    /**
     * @return The name of the Optimizer Statistics Advisor execution.
     * 
     */
    public Optional<String> executionName() {
        return Optional.ofNullable(this.executionName);
    }
    /**
     * @return The list of findings for the rule.
     * 
     */
    public Optional<Integer> findings() {
        return Optional.ofNullable(this.findings);
    }
    /**
     * @return A report that includes the rules, findings, recommendations, and actions discovered during the execution of the Optimizer Statistics Advisor.
     * 
     */
    public List<GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReport> reports() {
        return this.reports == null ? List.of() : this.reports;
    }
    /**
     * @return The status of the Optimizer Statistics Advisor execution.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The Optimizer Statistics Advisor execution status message, if any.
     * 
     */
    public Optional<String> statusMessage() {
        return Optional.ofNullable(this.statusMessage);
    }
    /**
     * @return The name of the Optimizer Statistics Advisor task.
     * 
     */
    public Optional<String> taskName() {
        return Optional.ofNullable(this.taskName);
    }
    /**
     * @return The end time of the time range to retrieve the Optimizer Statistics Advisor execution of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
     * 
     */
    public Optional<String> timeEnd() {
        return Optional.ofNullable(this.timeEnd);
    }
    /**
     * @return The start time of the time range to retrieve the Optimizer Statistics Advisor execution of a Managed Database in UTC in ISO-8601 format, which is &#34;yyyy-MM-dd&#39;T&#39;hh:mm:ss.sss&#39;Z&#39;&#34;.
     * 
     */
    public Optional<String> timeStart() {
        return Optional.ofNullable(this.timeStart);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase> databases;
        private @Nullable String errorMessage;
        private @Nullable String executionName;
        private @Nullable Integer findings;
        private @Nullable List<GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReport> reports;
        private @Nullable String status;
        private @Nullable String statusMessage;
        private @Nullable String taskName;
        private @Nullable String timeEnd;
        private @Nullable String timeStart;
        public Builder() {}
        public Builder(GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databases = defaults.databases;
    	      this.errorMessage = defaults.errorMessage;
    	      this.executionName = defaults.executionName;
    	      this.findings = defaults.findings;
    	      this.reports = defaults.reports;
    	      this.status = defaults.status;
    	      this.statusMessage = defaults.statusMessage;
    	      this.taskName = defaults.taskName;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder databases(@Nullable List<GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase> databases) {
            this.databases = databases;
            return this;
        }
        public Builder databases(GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase... databases) {
            return databases(List.of(databases));
        }
        @CustomType.Setter
        public Builder errorMessage(@Nullable String errorMessage) {
            this.errorMessage = errorMessage;
            return this;
        }
        @CustomType.Setter
        public Builder executionName(@Nullable String executionName) {
            this.executionName = executionName;
            return this;
        }
        @CustomType.Setter
        public Builder findings(@Nullable Integer findings) {
            this.findings = findings;
            return this;
        }
        @CustomType.Setter
        public Builder reports(@Nullable List<GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReport> reports) {
            this.reports = reports;
            return this;
        }
        public Builder reports(GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemReport... reports) {
            return reports(List.of(reports));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusMessage(@Nullable String statusMessage) {
            this.statusMessage = statusMessage;
            return this;
        }
        @CustomType.Setter
        public Builder taskName(@Nullable String taskName) {
            this.taskName = taskName;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(@Nullable String timeEnd) {
            this.timeEnd = timeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(@Nullable String timeStart) {
            this.timeStart = timeStart;
            return this;
        }
        public GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItem build() {
            final var o = new GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItem();
            o.databases = databases;
            o.errorMessage = errorMessage;
            o.executionName = executionName;
            o.findings = findings;
            o.reports = reports;
            o.status = status;
            o.statusMessage = statusMessage;
            o.taskName = taskName;
            o.timeEnd = timeEnd;
            o.timeStart = timeStart;
            return o;
        }
    }
}
