// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database resides.
     * 
     */
    private String compartmentId;
    /**
     * @return The infrastructure used to deploy the Oracle Database.
     * 
     */
    private String dbDeploymentType;
    /**
     * @return The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
     * 
     */
    private String dbSubType;
    /**
     * @return The type of Oracle Database installation.
     * 
     */
    private String dbType;
    /**
     * @return The version of the Oracle Database.
     * 
     */
    private String dbVersion;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    private String id;
    /**
     * @return The name of the rule.
     * 
     */
    private String name;

    private GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which the Managed Database resides.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The infrastructure used to deploy the Oracle Database.
     * 
     */
    public String dbDeploymentType() {
        return this.dbDeploymentType;
    }
    /**
     * @return The subtype of the Oracle Database. Indicates whether the database is a Container Database, Pluggable Database, Non-container Database, Autonomous Database, or Autonomous Container Database.
     * 
     */
    public String dbSubType() {
        return this.dbSubType;
    }
    /**
     * @return The type of Oracle Database installation.
     * 
     */
    public String dbType() {
        return this.dbType;
    }
    /**
     * @return The version of the Oracle Database.
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the rule.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String dbDeploymentType;
        private String dbSubType;
        private String dbType;
        private String dbVersion;
        private String id;
        private String name;
        public Builder() {}
        public Builder(GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbDeploymentType = defaults.dbDeploymentType;
    	      this.dbSubType = defaults.dbSubType;
    	      this.dbType = defaults.dbType;
    	      this.dbVersion = defaults.dbVersion;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder dbDeploymentType(String dbDeploymentType) {
            this.dbDeploymentType = Objects.requireNonNull(dbDeploymentType);
            return this;
        }
        @CustomType.Setter
        public Builder dbSubType(String dbSubType) {
            this.dbSubType = Objects.requireNonNull(dbSubType);
            return this;
        }
        @CustomType.Setter
        public Builder dbType(String dbType) {
            this.dbType = Objects.requireNonNull(dbType);
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            this.dbVersion = Objects.requireNonNull(dbVersion);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase build() {
            final var o = new GetManagedDatabaseOptimizerStatisticsAdvisorExecutionsOptimizerStatisticsAdvisorExecutionsCollectionItemDatabase();
            o.compartmentId = compartmentId;
            o.dbDeploymentType = dbDeploymentType;
            o.dbSubType = dbSubType;
            o.dbType = dbType;
            o.dbVersion = dbVersion;
            o.id = id;
            o.name = name;
            return o;
        }
    }
}
