// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseOptimizerStatisticsCollectionOperationTask {
    /**
     * @return The status of the Optimizer Statistics Collection task.
     * 
     */
    private final String status;
    /**
     * @return The name of the target object for which statistics are gathered.
     * 
     */
    private final String target;
    /**
     * @return The type of target object.
     * 
     */
    private final String targetType;
    /**
     * @return The end time of the Optimizer Statistics Collection task.
     * 
     */
    private final String timeEnd;
    /**
     * @return The start time of the Optimizer Statistics Collection task.
     * 
     */
    private final String timeStart;

    @CustomType.Constructor
    private GetManagedDatabaseOptimizerStatisticsCollectionOperationTask(
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("target") String target,
        @CustomType.Parameter("targetType") String targetType,
        @CustomType.Parameter("timeEnd") String timeEnd,
        @CustomType.Parameter("timeStart") String timeStart) {
        this.status = status;
        this.target = target;
        this.targetType = targetType;
        this.timeEnd = timeEnd;
        this.timeStart = timeStart;
    }

    /**
     * @return The status of the Optimizer Statistics Collection task.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The name of the target object for which statistics are gathered.
     * 
     */
    public String target() {
        return this.target;
    }
    /**
     * @return The type of target object.
     * 
     */
    public String targetType() {
        return this.targetType;
    }
    /**
     * @return The end time of the Optimizer Statistics Collection task.
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return The start time of the Optimizer Statistics Collection task.
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseOptimizerStatisticsCollectionOperationTask defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String status;
        private String target;
        private String targetType;
        private String timeEnd;
        private String timeStart;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedDatabaseOptimizerStatisticsCollectionOperationTask defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.status = defaults.status;
    	      this.target = defaults.target;
    	      this.targetType = defaults.targetType;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder target(String target) {
            this.target = Objects.requireNonNull(target);
            return this;
        }
        public Builder targetType(String targetType) {
            this.targetType = Objects.requireNonNull(targetType);
            return this;
        }
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }        public GetManagedDatabaseOptimizerStatisticsCollectionOperationTask build() {
            return new GetManagedDatabaseOptimizerStatisticsCollectionOperationTask(status, target, targetType, timeEnd, timeStart);
        }
    }
}
