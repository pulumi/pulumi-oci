// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedDatabaseSqlPlanBaselineConfigurationAutoSpmEvolveTaskParameter {
    /**
     * @return The global time limit in seconds. This is the total time allowed for the task.
     * 
     */
    private @Nullable Integer allowedTimeLimit;
    /**
     * @return Determines which alternative plans should be loaded.
     * 
     */
    private @Nullable List<String> alternatePlanBaselines;
    /**
     * @return Specifies the maximum number of plans to load in total (that is, not the limit for each SQL statement). A value of zero indicates `UNLIMITED` number of plans.
     * 
     */
    private @Nullable Integer alternatePlanLimit;
    /**
     * @return Determines which sources to search for additional plans.
     * 
     */
    private @Nullable List<String> alternatePlanSources;
    /**
     * @return Specifies whether to accept recommended plans automatically.
     * 
     */
    private @Nullable Boolean arePlansAutoAccepted;

    private GetManagedDatabaseSqlPlanBaselineConfigurationAutoSpmEvolveTaskParameter() {}
    /**
     * @return The global time limit in seconds. This is the total time allowed for the task.
     * 
     */
    public Optional<Integer> allowedTimeLimit() {
        return Optional.ofNullable(this.allowedTimeLimit);
    }
    /**
     * @return Determines which alternative plans should be loaded.
     * 
     */
    public List<String> alternatePlanBaselines() {
        return this.alternatePlanBaselines == null ? List.of() : this.alternatePlanBaselines;
    }
    /**
     * @return Specifies the maximum number of plans to load in total (that is, not the limit for each SQL statement). A value of zero indicates `UNLIMITED` number of plans.
     * 
     */
    public Optional<Integer> alternatePlanLimit() {
        return Optional.ofNullable(this.alternatePlanLimit);
    }
    /**
     * @return Determines which sources to search for additional plans.
     * 
     */
    public List<String> alternatePlanSources() {
        return this.alternatePlanSources == null ? List.of() : this.alternatePlanSources;
    }
    /**
     * @return Specifies whether to accept recommended plans automatically.
     * 
     */
    public Optional<Boolean> arePlansAutoAccepted() {
        return Optional.ofNullable(this.arePlansAutoAccepted);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlPlanBaselineConfigurationAutoSpmEvolveTaskParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer allowedTimeLimit;
        private @Nullable List<String> alternatePlanBaselines;
        private @Nullable Integer alternatePlanLimit;
        private @Nullable List<String> alternatePlanSources;
        private @Nullable Boolean arePlansAutoAccepted;
        public Builder() {}
        public Builder(GetManagedDatabaseSqlPlanBaselineConfigurationAutoSpmEvolveTaskParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedTimeLimit = defaults.allowedTimeLimit;
    	      this.alternatePlanBaselines = defaults.alternatePlanBaselines;
    	      this.alternatePlanLimit = defaults.alternatePlanLimit;
    	      this.alternatePlanSources = defaults.alternatePlanSources;
    	      this.arePlansAutoAccepted = defaults.arePlansAutoAccepted;
        }

        @CustomType.Setter
        public Builder allowedTimeLimit(@Nullable Integer allowedTimeLimit) {
            this.allowedTimeLimit = allowedTimeLimit;
            return this;
        }
        @CustomType.Setter
        public Builder alternatePlanBaselines(@Nullable List<String> alternatePlanBaselines) {
            this.alternatePlanBaselines = alternatePlanBaselines;
            return this;
        }
        public Builder alternatePlanBaselines(String... alternatePlanBaselines) {
            return alternatePlanBaselines(List.of(alternatePlanBaselines));
        }
        @CustomType.Setter
        public Builder alternatePlanLimit(@Nullable Integer alternatePlanLimit) {
            this.alternatePlanLimit = alternatePlanLimit;
            return this;
        }
        @CustomType.Setter
        public Builder alternatePlanSources(@Nullable List<String> alternatePlanSources) {
            this.alternatePlanSources = alternatePlanSources;
            return this;
        }
        public Builder alternatePlanSources(String... alternatePlanSources) {
            return alternatePlanSources(List.of(alternatePlanSources));
        }
        @CustomType.Setter
        public Builder arePlansAutoAccepted(@Nullable Boolean arePlansAutoAccepted) {
            this.arePlansAutoAccepted = arePlansAutoAccepted;
            return this;
        }
        public GetManagedDatabaseSqlPlanBaselineConfigurationAutoSpmEvolveTaskParameter build() {
            final var o = new GetManagedDatabaseSqlPlanBaselineConfigurationAutoSpmEvolveTaskParameter();
            o.allowedTimeLimit = allowedTimeLimit;
            o.alternatePlanBaselines = alternatePlanBaselines;
            o.alternatePlanLimit = alternatePlanLimit;
            o.alternatePlanSources = alternatePlanSources;
            o.arePlansAutoAccepted = arePlansAutoAccepted;
            return o;
        }
    }
}
