// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlPlanBaselineJobsFilter;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlPlanBaselineJobsSqlPlanBaselineJobCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedDatabaseSqlPlanBaselineJobsResult {
    private @Nullable List<GetManagedDatabaseSqlPlanBaselineJobsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String managedDatabaseId;
    /**
     * @return The name of the job.
     * 
     */
    private @Nullable String name;
    /**
     * @return The list of sql_plan_baseline_job_collection.
     * 
     */
    private @Nullable List<GetManagedDatabaseSqlPlanBaselineJobsSqlPlanBaselineJobCollection> sqlPlanBaselineJobCollections;

    private GetManagedDatabaseSqlPlanBaselineJobsResult() {}
    public List<GetManagedDatabaseSqlPlanBaselineJobsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }
    /**
     * @return The name of the job.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of sql_plan_baseline_job_collection.
     * 
     */
    public List<GetManagedDatabaseSqlPlanBaselineJobsSqlPlanBaselineJobCollection> sqlPlanBaselineJobCollections() {
        return this.sqlPlanBaselineJobCollections == null ? List.of() : this.sqlPlanBaselineJobCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlPlanBaselineJobsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetManagedDatabaseSqlPlanBaselineJobsFilter> filters;
        private @Nullable String id;
        private String managedDatabaseId;
        private @Nullable String name;
        private @Nullable List<GetManagedDatabaseSqlPlanBaselineJobsSqlPlanBaselineJobCollection> sqlPlanBaselineJobCollections;
        public Builder() {}
        public Builder(GetManagedDatabaseSqlPlanBaselineJobsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.name = defaults.name;
    	      this.sqlPlanBaselineJobCollections = defaults.sqlPlanBaselineJobCollections;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetManagedDatabaseSqlPlanBaselineJobsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedDatabaseSqlPlanBaselineJobsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedDatabaseId(String managedDatabaseId) {
            this.managedDatabaseId = Objects.requireNonNull(managedDatabaseId);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder sqlPlanBaselineJobCollections(@Nullable List<GetManagedDatabaseSqlPlanBaselineJobsSqlPlanBaselineJobCollection> sqlPlanBaselineJobCollections) {
            this.sqlPlanBaselineJobCollections = sqlPlanBaselineJobCollections;
            return this;
        }
        public Builder sqlPlanBaselineJobCollections(GetManagedDatabaseSqlPlanBaselineJobsSqlPlanBaselineJobCollection... sqlPlanBaselineJobCollections) {
            return sqlPlanBaselineJobCollections(List.of(sqlPlanBaselineJobCollections));
        }
        public GetManagedDatabaseSqlPlanBaselineJobsResult build() {
            final var o = new GetManagedDatabaseSqlPlanBaselineJobsResult();
            o.filters = filters;
            o.id = id;
            o.managedDatabaseId = managedDatabaseId;
            o.name = name;
            o.sqlPlanBaselineJobCollections = sqlPlanBaselineJobCollections;
            return o;
        }
    }
}
