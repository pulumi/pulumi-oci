// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningAdvisorTasksFindingsSqlTuningAdvisorTaskFindingCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult {
    private @Nullable String beginExecId;
    private @Nullable String endExecId;
    private @Nullable List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter> filters;
    private @Nullable String findingFilter;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String indexHashFilter;
    private String managedDatabaseId;
    private @Nullable String opcNamedCredentialId;
    private @Nullable String searchPeriod;
    /**
     * @return The list of sql_tuning_advisor_task_finding_collection.
     * 
     */
    private List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsSqlTuningAdvisorTaskFindingCollection> sqlTuningAdvisorTaskFindingCollections;
    /**
     * @return The unique identifier of the SQL Tuning Advisor task. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String sqlTuningAdvisorTaskId;
    private @Nullable String statsHashFilter;

    private GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult() {}
    public Optional<String> beginExecId() {
        return Optional.ofNullable(this.beginExecId);
    }
    public Optional<String> endExecId() {
        return Optional.ofNullable(this.endExecId);
    }
    public List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> findingFilter() {
        return Optional.ofNullable(this.findingFilter);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> indexHashFilter() {
        return Optional.ofNullable(this.indexHashFilter);
    }
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }
    public Optional<String> opcNamedCredentialId() {
        return Optional.ofNullable(this.opcNamedCredentialId);
    }
    public Optional<String> searchPeriod() {
        return Optional.ofNullable(this.searchPeriod);
    }
    /**
     * @return The list of sql_tuning_advisor_task_finding_collection.
     * 
     */
    public List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsSqlTuningAdvisorTaskFindingCollection> sqlTuningAdvisorTaskFindingCollections() {
        return this.sqlTuningAdvisorTaskFindingCollections;
    }
    /**
     * @return The unique identifier of the SQL Tuning Advisor task. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String sqlTuningAdvisorTaskId() {
        return this.sqlTuningAdvisorTaskId;
    }
    public Optional<String> statsHashFilter() {
        return Optional.ofNullable(this.statsHashFilter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String beginExecId;
        private @Nullable String endExecId;
        private @Nullable List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter> filters;
        private @Nullable String findingFilter;
        private String id;
        private @Nullable String indexHashFilter;
        private String managedDatabaseId;
        private @Nullable String opcNamedCredentialId;
        private @Nullable String searchPeriod;
        private List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsSqlTuningAdvisorTaskFindingCollection> sqlTuningAdvisorTaskFindingCollections;
        private String sqlTuningAdvisorTaskId;
        private @Nullable String statsHashFilter;
        public Builder() {}
        public Builder(GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.beginExecId = defaults.beginExecId;
    	      this.endExecId = defaults.endExecId;
    	      this.filters = defaults.filters;
    	      this.findingFilter = defaults.findingFilter;
    	      this.id = defaults.id;
    	      this.indexHashFilter = defaults.indexHashFilter;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.opcNamedCredentialId = defaults.opcNamedCredentialId;
    	      this.searchPeriod = defaults.searchPeriod;
    	      this.sqlTuningAdvisorTaskFindingCollections = defaults.sqlTuningAdvisorTaskFindingCollections;
    	      this.sqlTuningAdvisorTaskId = defaults.sqlTuningAdvisorTaskId;
    	      this.statsHashFilter = defaults.statsHashFilter;
        }

        @CustomType.Setter
        public Builder beginExecId(@Nullable String beginExecId) {

            this.beginExecId = beginExecId;
            return this;
        }
        @CustomType.Setter
        public Builder endExecId(@Nullable String endExecId) {

            this.endExecId = endExecId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder findingFilter(@Nullable String findingFilter) {

            this.findingFilter = findingFilter;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder indexHashFilter(@Nullable String indexHashFilter) {

            this.indexHashFilter = indexHashFilter;
            return this;
        }
        @CustomType.Setter
        public Builder managedDatabaseId(String managedDatabaseId) {
            if (managedDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult", "managedDatabaseId");
            }
            this.managedDatabaseId = managedDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder opcNamedCredentialId(@Nullable String opcNamedCredentialId) {

            this.opcNamedCredentialId = opcNamedCredentialId;
            return this;
        }
        @CustomType.Setter
        public Builder searchPeriod(@Nullable String searchPeriod) {

            this.searchPeriod = searchPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder sqlTuningAdvisorTaskFindingCollections(List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsSqlTuningAdvisorTaskFindingCollection> sqlTuningAdvisorTaskFindingCollections) {
            if (sqlTuningAdvisorTaskFindingCollections == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult", "sqlTuningAdvisorTaskFindingCollections");
            }
            this.sqlTuningAdvisorTaskFindingCollections = sqlTuningAdvisorTaskFindingCollections;
            return this;
        }
        public Builder sqlTuningAdvisorTaskFindingCollections(GetManagedDatabaseSqlTuningAdvisorTasksFindingsSqlTuningAdvisorTaskFindingCollection... sqlTuningAdvisorTaskFindingCollections) {
            return sqlTuningAdvisorTaskFindingCollections(List.of(sqlTuningAdvisorTaskFindingCollections));
        }
        @CustomType.Setter
        public Builder sqlTuningAdvisorTaskId(String sqlTuningAdvisorTaskId) {
            if (sqlTuningAdvisorTaskId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult", "sqlTuningAdvisorTaskId");
            }
            this.sqlTuningAdvisorTaskId = sqlTuningAdvisorTaskId;
            return this;
        }
        @CustomType.Setter
        public Builder statsHashFilter(@Nullable String statsHashFilter) {

            this.statsHashFilter = statsHashFilter;
            return this;
        }
        public GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult build() {
            final var _resultValue = new GetManagedDatabaseSqlTuningAdvisorTasksFindingsResult();
            _resultValue.beginExecId = beginExecId;
            _resultValue.endExecId = endExecId;
            _resultValue.filters = filters;
            _resultValue.findingFilter = findingFilter;
            _resultValue.id = id;
            _resultValue.indexHashFilter = indexHashFilter;
            _resultValue.managedDatabaseId = managedDatabaseId;
            _resultValue.opcNamedCredentialId = opcNamedCredentialId;
            _resultValue.searchPeriod = searchPeriod;
            _resultValue.sqlTuningAdvisorTaskFindingCollections = sqlTuningAdvisorTaskFindingCollections;
            _resultValue.sqlTuningAdvisorTaskId = sqlTuningAdvisorTaskId;
            _resultValue.statsHashFilter = statsHashFilter;
            return _resultValue;
        }
    }
}
