// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningAdvisorTasksRecommendationItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult {
    private String executionId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of SQL Tuning Advisor recommendations.
     * 
     */
    private List<GetManagedDatabaseSqlTuningAdvisorTasksRecommendationItem> items;
    private String managedDatabaseId;
    private String sqlObjectId;
    /**
     * @return The unique identifier of the task. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String sqlTuningAdvisorTaskId;

    private GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult() {}
    public String executionId() {
        return this.executionId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of SQL Tuning Advisor recommendations.
     * 
     */
    public List<GetManagedDatabaseSqlTuningAdvisorTasksRecommendationItem> items() {
        return this.items;
    }
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }
    public String sqlObjectId() {
        return this.sqlObjectId;
    }
    /**
     * @return The unique identifier of the task. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String sqlTuningAdvisorTaskId() {
        return this.sqlTuningAdvisorTaskId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String executionId;
        private String id;
        private List<GetManagedDatabaseSqlTuningAdvisorTasksRecommendationItem> items;
        private String managedDatabaseId;
        private String sqlObjectId;
        private String sqlTuningAdvisorTaskId;
        public Builder() {}
        public Builder(GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.executionId = defaults.executionId;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.sqlObjectId = defaults.sqlObjectId;
    	      this.sqlTuningAdvisorTaskId = defaults.sqlTuningAdvisorTaskId;
        }

        @CustomType.Setter
        public Builder executionId(String executionId) {
            if (executionId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult", "executionId");
            }
            this.executionId = executionId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetManagedDatabaseSqlTuningAdvisorTasksRecommendationItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetManagedDatabaseSqlTuningAdvisorTasksRecommendationItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder managedDatabaseId(String managedDatabaseId) {
            if (managedDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult", "managedDatabaseId");
            }
            this.managedDatabaseId = managedDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder sqlObjectId(String sqlObjectId) {
            if (sqlObjectId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult", "sqlObjectId");
            }
            this.sqlObjectId = sqlObjectId;
            return this;
        }
        @CustomType.Setter
        public Builder sqlTuningAdvisorTaskId(String sqlTuningAdvisorTaskId) {
            if (sqlTuningAdvisorTaskId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult", "sqlTuningAdvisorTaskId");
            }
            this.sqlTuningAdvisorTaskId = sqlTuningAdvisorTaskId;
            return this;
        }
        public GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult build() {
            final var _resultValue = new GetManagedDatabaseSqlTuningAdvisorTasksRecommendationResult();
            _resultValue.executionId = executionId;
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.managedDatabaseId = managedDatabaseId;
            _resultValue.sqlObjectId = sqlObjectId;
            _resultValue.sqlTuningAdvisorTaskId = sqlTuningAdvisorTaskId;
            return _resultValue;
        }
    }
}
