// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsSqlTuningAdvisorTaskRecommendationCollectionItem {
    /**
     * @return The percentage benefit of this implementation.
     * 
     */
    private @Nullable Double benefit;
    /**
     * @return Summary of the issue found in the SQL statement.
     * 
     */
    private @Nullable String finding;
    /**
     * @return Action sql to be implemented based on the recommendation result.
     * 
     */
    private @Nullable String implementActionSql;
    /**
     * @return Indicates whether a SQL Profile recommendation uses parallel execution.
     * 
     */
    private @Nullable Boolean isParallelExecution;
    /**
     * @return Describes the reasoning behind the recommendation and how it relates to the finding.
     * 
     */
    private @Nullable String rationale;
    /**
     * @return The recommendation for a specific finding.
     * 
     */
    private @Nullable String recommendation;
    /**
     * @return The unique identifier of the recommendation in the scope of the task.
     * 
     */
    private @Nullable Integer recommendationKey;
    /**
     * @return Type of recommendation.
     * 
     */
    private @Nullable String recommendationType;
    /**
     * @return The SQL tuning task identifier. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String sqlTuningAdvisorTaskId;
    /**
     * @return The key of the object to which these recommendations apply. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String sqlTuningAdvisorTaskObjectId;

    private GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsSqlTuningAdvisorTaskRecommendationCollectionItem() {}
    /**
     * @return The percentage benefit of this implementation.
     * 
     */
    public Optional<Double> benefit() {
        return Optional.ofNullable(this.benefit);
    }
    /**
     * @return Summary of the issue found in the SQL statement.
     * 
     */
    public Optional<String> finding() {
        return Optional.ofNullable(this.finding);
    }
    /**
     * @return Action sql to be implemented based on the recommendation result.
     * 
     */
    public Optional<String> implementActionSql() {
        return Optional.ofNullable(this.implementActionSql);
    }
    /**
     * @return Indicates whether a SQL Profile recommendation uses parallel execution.
     * 
     */
    public Optional<Boolean> isParallelExecution() {
        return Optional.ofNullable(this.isParallelExecution);
    }
    /**
     * @return Describes the reasoning behind the recommendation and how it relates to the finding.
     * 
     */
    public Optional<String> rationale() {
        return Optional.ofNullable(this.rationale);
    }
    /**
     * @return The recommendation for a specific finding.
     * 
     */
    public Optional<String> recommendation() {
        return Optional.ofNullable(this.recommendation);
    }
    /**
     * @return The unique identifier of the recommendation in the scope of the task.
     * 
     */
    public Optional<Integer> recommendationKey() {
        return Optional.ofNullable(this.recommendationKey);
    }
    /**
     * @return Type of recommendation.
     * 
     */
    public Optional<String> recommendationType() {
        return Optional.ofNullable(this.recommendationType);
    }
    /**
     * @return The SQL tuning task identifier. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> sqlTuningAdvisorTaskId() {
        return Optional.ofNullable(this.sqlTuningAdvisorTaskId);
    }
    /**
     * @return The key of the object to which these recommendations apply. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> sqlTuningAdvisorTaskObjectId() {
        return Optional.ofNullable(this.sqlTuningAdvisorTaskObjectId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsSqlTuningAdvisorTaskRecommendationCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double benefit;
        private @Nullable String finding;
        private @Nullable String implementActionSql;
        private @Nullable Boolean isParallelExecution;
        private @Nullable String rationale;
        private @Nullable String recommendation;
        private @Nullable Integer recommendationKey;
        private @Nullable String recommendationType;
        private @Nullable String sqlTuningAdvisorTaskId;
        private @Nullable String sqlTuningAdvisorTaskObjectId;
        public Builder() {}
        public Builder(GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsSqlTuningAdvisorTaskRecommendationCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.benefit = defaults.benefit;
    	      this.finding = defaults.finding;
    	      this.implementActionSql = defaults.implementActionSql;
    	      this.isParallelExecution = defaults.isParallelExecution;
    	      this.rationale = defaults.rationale;
    	      this.recommendation = defaults.recommendation;
    	      this.recommendationKey = defaults.recommendationKey;
    	      this.recommendationType = defaults.recommendationType;
    	      this.sqlTuningAdvisorTaskId = defaults.sqlTuningAdvisorTaskId;
    	      this.sqlTuningAdvisorTaskObjectId = defaults.sqlTuningAdvisorTaskObjectId;
        }

        @CustomType.Setter
        public Builder benefit(@Nullable Double benefit) {
            this.benefit = benefit;
            return this;
        }
        @CustomType.Setter
        public Builder finding(@Nullable String finding) {
            this.finding = finding;
            return this;
        }
        @CustomType.Setter
        public Builder implementActionSql(@Nullable String implementActionSql) {
            this.implementActionSql = implementActionSql;
            return this;
        }
        @CustomType.Setter
        public Builder isParallelExecution(@Nullable Boolean isParallelExecution) {
            this.isParallelExecution = isParallelExecution;
            return this;
        }
        @CustomType.Setter
        public Builder rationale(@Nullable String rationale) {
            this.rationale = rationale;
            return this;
        }
        @CustomType.Setter
        public Builder recommendation(@Nullable String recommendation) {
            this.recommendation = recommendation;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationKey(@Nullable Integer recommendationKey) {
            this.recommendationKey = recommendationKey;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationType(@Nullable String recommendationType) {
            this.recommendationType = recommendationType;
            return this;
        }
        @CustomType.Setter
        public Builder sqlTuningAdvisorTaskId(@Nullable String sqlTuningAdvisorTaskId) {
            this.sqlTuningAdvisorTaskId = sqlTuningAdvisorTaskId;
            return this;
        }
        @CustomType.Setter
        public Builder sqlTuningAdvisorTaskObjectId(@Nullable String sqlTuningAdvisorTaskObjectId) {
            this.sqlTuningAdvisorTaskObjectId = sqlTuningAdvisorTaskObjectId;
            return this;
        }
        public GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsSqlTuningAdvisorTaskRecommendationCollectionItem build() {
            final var o = new GetManagedDatabaseSqlTuningAdvisorTasksRecommendationsSqlTuningAdvisorTaskRecommendationCollectionItem();
            o.benefit = benefit;
            o.finding = finding;
            o.implementActionSql = implementActionSql;
            o.isParallelExecution = isParallelExecution;
            o.rationale = rationale;
            o.recommendation = recommendation;
            o.recommendationKey = recommendationKey;
            o.recommendationType = recommendationType;
            o.sqlTuningAdvisorTaskId = sqlTuningAdvisorTaskId;
            o.sqlTuningAdvisorTaskObjectId = sqlTuningAdvisorTaskObjectId;
            return o;
        }
    }
}
