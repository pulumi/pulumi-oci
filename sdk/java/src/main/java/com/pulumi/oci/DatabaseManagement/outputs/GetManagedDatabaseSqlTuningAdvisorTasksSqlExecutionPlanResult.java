// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult {
    /**
     * @return The text string identifying the type of execution plan.
     * 
     */
    private String attribute;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String managedDatabaseId;
    private @Nullable String opcNamedCredentialId;
    /**
     * @return A SQL execution plan as a list of steps.
     * 
     */
    private List<GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan> plans;
    private String sqlObjectId;
    private String sqlTuningAdvisorTaskId;

    private GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult() {}
    /**
     * @return The text string identifying the type of execution plan.
     * 
     */
    public String attribute() {
        return this.attribute;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }
    public Optional<String> opcNamedCredentialId() {
        return Optional.ofNullable(this.opcNamedCredentialId);
    }
    /**
     * @return A SQL execution plan as a list of steps.
     * 
     */
    public List<GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan> plans() {
        return this.plans;
    }
    public String sqlObjectId() {
        return this.sqlObjectId;
    }
    public String sqlTuningAdvisorTaskId() {
        return this.sqlTuningAdvisorTaskId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attribute;
        private String id;
        private String managedDatabaseId;
        private @Nullable String opcNamedCredentialId;
        private List<GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan> plans;
        private String sqlObjectId;
        private String sqlTuningAdvisorTaskId;
        public Builder() {}
        public Builder(GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attribute = defaults.attribute;
    	      this.id = defaults.id;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.opcNamedCredentialId = defaults.opcNamedCredentialId;
    	      this.plans = defaults.plans;
    	      this.sqlObjectId = defaults.sqlObjectId;
    	      this.sqlTuningAdvisorTaskId = defaults.sqlTuningAdvisorTaskId;
        }

        @CustomType.Setter
        public Builder attribute(String attribute) {
            if (attribute == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult", "attribute");
            }
            this.attribute = attribute;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedDatabaseId(String managedDatabaseId) {
            if (managedDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult", "managedDatabaseId");
            }
            this.managedDatabaseId = managedDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder opcNamedCredentialId(@Nullable String opcNamedCredentialId) {

            this.opcNamedCredentialId = opcNamedCredentialId;
            return this;
        }
        @CustomType.Setter
        public Builder plans(List<GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan> plans) {
            if (plans == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult", "plans");
            }
            this.plans = plans;
            return this;
        }
        public Builder plans(GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan... plans) {
            return plans(List.of(plans));
        }
        @CustomType.Setter
        public Builder sqlObjectId(String sqlObjectId) {
            if (sqlObjectId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult", "sqlObjectId");
            }
            this.sqlObjectId = sqlObjectId;
            return this;
        }
        @CustomType.Setter
        public Builder sqlTuningAdvisorTaskId(String sqlTuningAdvisorTaskId) {
            if (sqlTuningAdvisorTaskId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult", "sqlTuningAdvisorTaskId");
            }
            this.sqlTuningAdvisorTaskId = sqlTuningAdvisorTaskId;
            return this;
        }
        public GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult build() {
            final var _resultValue = new GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult();
            _resultValue.attribute = attribute;
            _resultValue.id = id;
            _resultValue.managedDatabaseId = managedDatabaseId;
            _resultValue.opcNamedCredentialId = opcNamedCredentialId;
            _resultValue.plans = plans;
            _resultValue.sqlObjectId = sqlObjectId;
            _resultValue.sqlTuningAdvisorTaskId = sqlTuningAdvisorTaskId;
            return _resultValue;
        }
    }
}
