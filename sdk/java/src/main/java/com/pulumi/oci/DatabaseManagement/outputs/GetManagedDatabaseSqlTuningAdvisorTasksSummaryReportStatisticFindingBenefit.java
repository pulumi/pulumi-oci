// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit {
    /**
     * @return The actual database time of the SQL statements for which SQL Tuning Advisor recommendations are implemented.
     * 
     */
    private @Nullable Integer dbTimeAfterImplemented;
    /**
     * @return The estimated database time of the above SQL statements, if SQL Tuning Advisor recommendations are implemented.
     * 
     */
    private @Nullable Integer dbTimeAfterRecommended;
    /**
     * @return The actual database time of the above SQL statements, before SQL Tuning Advisor recommendations are implemented.
     * 
     */
    private @Nullable Integer dbTimeBeforeImplemented;
    /**
     * @return The actual database time of the SQL statements for which SQL Tuning Advisor recommendations are not implemented.
     * 
     */
    private @Nullable Integer dbTimeBeforeRecommended;

    private GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit() {}
    /**
     * @return The actual database time of the SQL statements for which SQL Tuning Advisor recommendations are implemented.
     * 
     */
    public Optional<Integer> dbTimeAfterImplemented() {
        return Optional.ofNullable(this.dbTimeAfterImplemented);
    }
    /**
     * @return The estimated database time of the above SQL statements, if SQL Tuning Advisor recommendations are implemented.
     * 
     */
    public Optional<Integer> dbTimeAfterRecommended() {
        return Optional.ofNullable(this.dbTimeAfterRecommended);
    }
    /**
     * @return The actual database time of the above SQL statements, before SQL Tuning Advisor recommendations are implemented.
     * 
     */
    public Optional<Integer> dbTimeBeforeImplemented() {
        return Optional.ofNullable(this.dbTimeBeforeImplemented);
    }
    /**
     * @return The actual database time of the SQL statements for which SQL Tuning Advisor recommendations are not implemented.
     * 
     */
    public Optional<Integer> dbTimeBeforeRecommended() {
        return Optional.ofNullable(this.dbTimeBeforeRecommended);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer dbTimeAfterImplemented;
        private @Nullable Integer dbTimeAfterRecommended;
        private @Nullable Integer dbTimeBeforeImplemented;
        private @Nullable Integer dbTimeBeforeRecommended;
        public Builder() {}
        public Builder(GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbTimeAfterImplemented = defaults.dbTimeAfterImplemented;
    	      this.dbTimeAfterRecommended = defaults.dbTimeAfterRecommended;
    	      this.dbTimeBeforeImplemented = defaults.dbTimeBeforeImplemented;
    	      this.dbTimeBeforeRecommended = defaults.dbTimeBeforeRecommended;
        }

        @CustomType.Setter
        public Builder dbTimeAfterImplemented(@Nullable Integer dbTimeAfterImplemented) {
            this.dbTimeAfterImplemented = dbTimeAfterImplemented;
            return this;
        }
        @CustomType.Setter
        public Builder dbTimeAfterRecommended(@Nullable Integer dbTimeAfterRecommended) {
            this.dbTimeAfterRecommended = dbTimeAfterRecommended;
            return this;
        }
        @CustomType.Setter
        public Builder dbTimeBeforeImplemented(@Nullable Integer dbTimeBeforeImplemented) {
            this.dbTimeBeforeImplemented = dbTimeBeforeImplemented;
            return this;
        }
        @CustomType.Setter
        public Builder dbTimeBeforeRecommended(@Nullable Integer dbTimeBeforeRecommended) {
            this.dbTimeBeforeRecommended = dbTimeBeforeRecommended;
            return this;
        }
        public GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit build() {
            final var o = new GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit();
            o.dbTimeAfterImplemented = dbTimeAfterImplemented;
            o.dbTimeAfterRecommended = dbTimeAfterRecommended;
            o.dbTimeBeforeImplemented = dbTimeBeforeImplemented;
            o.dbTimeBeforeRecommended = dbTimeBeforeRecommended;
            return o;
        }
    }
}
