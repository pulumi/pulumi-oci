// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount {
    /**
     * @return The number of distinct SQL statements with alternative plan recommendations.
     * 
     */
    private @Nullable Integer alternatePlan;
    /**
     * @return The number of distinct SQL statements with implemented SQL profiles.
     * 
     */
    private @Nullable Integer implementedSqlProfile;
    /**
     * @return The number of distinct SQL statements with index recommendations.
     * 
     */
    private @Nullable Integer index;
    /**
     * @return The number of distinct SQL statements with recommended SQL profiles.
     * 
     */
    private @Nullable Integer recommendedSqlProfile;
    /**
     * @return The number of distinct SQL statements with restructured SQL recommendations.
     * 
     */
    private @Nullable Integer restructure;
    /**
     * @return The number of distinct SQL statements with stale or missing optimizer statistics recommendations.
     * 
     */
    private @Nullable Integer statistics;

    private GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount() {}
    /**
     * @return The number of distinct SQL statements with alternative plan recommendations.
     * 
     */
    public Optional<Integer> alternatePlan() {
        return Optional.ofNullable(this.alternatePlan);
    }
    /**
     * @return The number of distinct SQL statements with implemented SQL profiles.
     * 
     */
    public Optional<Integer> implementedSqlProfile() {
        return Optional.ofNullable(this.implementedSqlProfile);
    }
    /**
     * @return The number of distinct SQL statements with index recommendations.
     * 
     */
    public Optional<Integer> index() {
        return Optional.ofNullable(this.index);
    }
    /**
     * @return The number of distinct SQL statements with recommended SQL profiles.
     * 
     */
    public Optional<Integer> recommendedSqlProfile() {
        return Optional.ofNullable(this.recommendedSqlProfile);
    }
    /**
     * @return The number of distinct SQL statements with restructured SQL recommendations.
     * 
     */
    public Optional<Integer> restructure() {
        return Optional.ofNullable(this.restructure);
    }
    /**
     * @return The number of distinct SQL statements with stale or missing optimizer statistics recommendations.
     * 
     */
    public Optional<Integer> statistics() {
        return Optional.ofNullable(this.statistics);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer alternatePlan;
        private @Nullable Integer implementedSqlProfile;
        private @Nullable Integer index;
        private @Nullable Integer recommendedSqlProfile;
        private @Nullable Integer restructure;
        private @Nullable Integer statistics;
        public Builder() {}
        public Builder(GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternatePlan = defaults.alternatePlan;
    	      this.implementedSqlProfile = defaults.implementedSqlProfile;
    	      this.index = defaults.index;
    	      this.recommendedSqlProfile = defaults.recommendedSqlProfile;
    	      this.restructure = defaults.restructure;
    	      this.statistics = defaults.statistics;
        }

        @CustomType.Setter
        public Builder alternatePlan(@Nullable Integer alternatePlan) {
            this.alternatePlan = alternatePlan;
            return this;
        }
        @CustomType.Setter
        public Builder implementedSqlProfile(@Nullable Integer implementedSqlProfile) {
            this.implementedSqlProfile = implementedSqlProfile;
            return this;
        }
        @CustomType.Setter
        public Builder index(@Nullable Integer index) {
            this.index = index;
            return this;
        }
        @CustomType.Setter
        public Builder recommendedSqlProfile(@Nullable Integer recommendedSqlProfile) {
            this.recommendedSqlProfile = recommendedSqlProfile;
            return this;
        }
        @CustomType.Setter
        public Builder restructure(@Nullable Integer restructure) {
            this.restructure = restructure;
            return this;
        }
        @CustomType.Setter
        public Builder statistics(@Nullable Integer statistics) {
            this.statistics = statistics;
            return this;
        }
        public GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount build() {
            final var o = new GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount();
            o.alternatePlan = alternatePlan;
            o.implementedSqlProfile = implementedSqlProfile;
            o.index = index;
            o.recommendedSqlProfile = recommendedSqlProfile;
            o.restructure = restructure;
            o.statistics = statistics;
            return o;
        }
    }
}
