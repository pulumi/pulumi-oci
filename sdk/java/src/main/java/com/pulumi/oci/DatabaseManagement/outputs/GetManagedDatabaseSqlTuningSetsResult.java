// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningSetsFilter;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningSetsSqlTuningSetCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedDatabaseSqlTuningSetsResult {
    private final @Nullable List<GetManagedDatabaseSqlTuningSetsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    private final String managedDatabaseId;
    private final @Nullable String nameContains;
    /**
     * @return The owner of the SQL tuning set.
     * 
     */
    private final @Nullable String owner;
    /**
     * @return The list of sql_tuning_set_collection.
     * 
     */
    private final List<GetManagedDatabaseSqlTuningSetsSqlTuningSetCollection> sqlTuningSetCollections;

    @CustomType.Constructor
    private GetManagedDatabaseSqlTuningSetsResult(
        @CustomType.Parameter("filters") @Nullable List<GetManagedDatabaseSqlTuningSetsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("managedDatabaseId") String managedDatabaseId,
        @CustomType.Parameter("nameContains") @Nullable String nameContains,
        @CustomType.Parameter("owner") @Nullable String owner,
        @CustomType.Parameter("sqlTuningSetCollections") List<GetManagedDatabaseSqlTuningSetsSqlTuningSetCollection> sqlTuningSetCollections) {
        this.filters = filters;
        this.id = id;
        this.managedDatabaseId = managedDatabaseId;
        this.nameContains = nameContains;
        this.owner = owner;
        this.sqlTuningSetCollections = sqlTuningSetCollections;
    }

    public List<GetManagedDatabaseSqlTuningSetsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }
    public Optional<String> nameContains() {
        return Optional.ofNullable(this.nameContains);
    }
    /**
     * @return The owner of the SQL tuning set.
     * 
     */
    public Optional<String> owner() {
        return Optional.ofNullable(this.owner);
    }
    /**
     * @return The list of sql_tuning_set_collection.
     * 
     */
    public List<GetManagedDatabaseSqlTuningSetsSqlTuningSetCollection> sqlTuningSetCollections() {
        return this.sqlTuningSetCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlTuningSetsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<GetManagedDatabaseSqlTuningSetsFilter> filters;
        private String id;
        private String managedDatabaseId;
        private @Nullable String nameContains;
        private @Nullable String owner;
        private List<GetManagedDatabaseSqlTuningSetsSqlTuningSetCollection> sqlTuningSetCollections;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedDatabaseSqlTuningSetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.nameContains = defaults.nameContains;
    	      this.owner = defaults.owner;
    	      this.sqlTuningSetCollections = defaults.sqlTuningSetCollections;
        }

        public Builder filters(@Nullable List<GetManagedDatabaseSqlTuningSetsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedDatabaseSqlTuningSetsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder managedDatabaseId(String managedDatabaseId) {
            this.managedDatabaseId = Objects.requireNonNull(managedDatabaseId);
            return this;
        }
        public Builder nameContains(@Nullable String nameContains) {
            this.nameContains = nameContains;
            return this;
        }
        public Builder owner(@Nullable String owner) {
            this.owner = owner;
            return this;
        }
        public Builder sqlTuningSetCollections(List<GetManagedDatabaseSqlTuningSetsSqlTuningSetCollection> sqlTuningSetCollections) {
            this.sqlTuningSetCollections = Objects.requireNonNull(sqlTuningSetCollections);
            return this;
        }
        public Builder sqlTuningSetCollections(GetManagedDatabaseSqlTuningSetsSqlTuningSetCollection... sqlTuningSetCollections) {
            return sqlTuningSetCollections(List.of(sqlTuningSetCollections));
        }        public GetManagedDatabaseSqlTuningSetsResult build() {
            return new GetManagedDatabaseSqlTuningSetsResult(filters, id, managedDatabaseId, nameContains, owner, sqlTuningSetCollections);
        }
    }
}
