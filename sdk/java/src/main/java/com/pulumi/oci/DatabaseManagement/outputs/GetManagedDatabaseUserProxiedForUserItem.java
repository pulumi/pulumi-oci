// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseUserProxiedForUserItem {
    /**
     * @return Indicates whether the proxy is required to supply the client credentials (YES) or not (NO).
     * 
     */
    private String authentication;
    /**
     * @return The flags associated with the proxy/client pair.
     * 
     */
    private String flags;
    /**
     * @return A filter to return only resources that match the entire name.
     * 
     */
    private String name;

    private GetManagedDatabaseUserProxiedForUserItem() {}
    /**
     * @return Indicates whether the proxy is required to supply the client credentials (YES) or not (NO).
     * 
     */
    public String authentication() {
        return this.authentication;
    }
    /**
     * @return The flags associated with the proxy/client pair.
     * 
     */
    public String flags() {
        return this.flags;
    }
    /**
     * @return A filter to return only resources that match the entire name.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseUserProxiedForUserItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authentication;
        private String flags;
        private String name;
        public Builder() {}
        public Builder(GetManagedDatabaseUserProxiedForUserItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authentication = defaults.authentication;
    	      this.flags = defaults.flags;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder authentication(String authentication) {
            if (authentication == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseUserProxiedForUserItem", "authentication");
            }
            this.authentication = authentication;
            return this;
        }
        @CustomType.Setter
        public Builder flags(String flags) {
            if (flags == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseUserProxiedForUserItem", "flags");
            }
            this.flags = flags;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseUserProxiedForUserItem", "name");
            }
            this.name = name;
            return this;
        }
        public GetManagedDatabaseUserProxiedForUserItem build() {
            final var _resultValue = new GetManagedDatabaseUserProxiedForUserItem();
            _resultValue.authentication = authentication;
            _resultValue.flags = flags;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
