// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItem {
    /**
     * @return The MySQL error, warning or note raised when a query is run, if any.
     * 
     */
    private List<GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError> errors;
    /**
     * @return The number of times a MySQL error is encountered.
     * 
     */
    private Integer occurrenceCount;

    private GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItem() {}
    /**
     * @return The MySQL error, warning or note raised when a query is run, if any.
     * 
     */
    public List<GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError> errors() {
        return this.errors;
    }
    /**
     * @return The number of times a MySQL error is encountered.
     * 
     */
    public Integer occurrenceCount() {
        return this.occurrenceCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError> errors;
        private Integer occurrenceCount;
        public Builder() {}
        public Builder(GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errors = defaults.errors;
    	      this.occurrenceCount = defaults.occurrenceCount;
        }

        @CustomType.Setter
        public Builder errors(List<GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError> errors) {
            if (errors == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItem", "errors");
            }
            this.errors = errors;
            return this;
        }
        public Builder errors(GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError... errors) {
            return errors(List.of(errors));
        }
        @CustomType.Setter
        public Builder occurrenceCount(Integer occurrenceCount) {
            if (occurrenceCount == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItem", "occurrenceCount");
            }
            this.occurrenceCount = occurrenceCount;
            return this;
        }
        public GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItem build() {
            final var _resultValue = new GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItem();
            _resultValue.errors = errors;
            _resultValue.occurrenceCount = occurrenceCount;
            return _resultValue;
        }
    }
}
