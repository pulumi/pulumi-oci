// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError {
    /**
     * @return The MySQL code of the raised error, warning or note.
     * 
     */
    private Integer code;
    /**
     * @return The level of severity of the MySQL message.
     * 
     */
    private String level;
    /**
     * @return The MySQL message text of the raised error, warning or note.
     * 
     */
    private String messageText;

    private GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError() {}
    /**
     * @return The MySQL code of the raised error, warning or note.
     * 
     */
    public Integer code() {
        return this.code;
    }
    /**
     * @return The level of severity of the MySQL message.
     * 
     */
    public String level() {
        return this.level;
    }
    /**
     * @return The MySQL message text of the raised error, warning or note.
     * 
     */
    public String messageText() {
        return this.messageText;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer code;
        private String level;
        private String messageText;
        public Builder() {}
        public Builder(GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.code = defaults.code;
    	      this.level = defaults.level;
    	      this.messageText = defaults.messageText;
        }

        @CustomType.Setter
        public Builder code(Integer code) {
            if (code == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError", "code");
            }
            this.code = code;
            return this;
        }
        @CustomType.Setter
        public Builder level(String level) {
            if (level == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError", "level");
            }
            this.level = level;
            return this;
        }
        @CustomType.Setter
        public Builder messageText(String messageText) {
            if (messageText == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError", "messageText");
            }
            this.messageText = messageText;
            return this;
        }
        public GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError build() {
            final var _resultValue = new GetManagedMySqlDatabaseDigestErrorsMySqlDigestErrorsCollectionItemError();
            _resultValue.code = code;
            _resultValue.level = level;
            _resultValue.messageText = messageText;
            return _resultValue;
        }
    }
}
