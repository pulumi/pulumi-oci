// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem {
    /**
     * @return The host name of the group member that clients use to connect to it.
     * 
     */
    private String memberHost;
    /**
     * @return The port number of the group member that clients use to connect to it.
     * 
     */
    private Integer memberPort;
    /**
     * @return The role of this server as a group replication member.
     * 
     */
    private String memberRole;
    /**
     * @return The state of this server as a group replication member.
     * 
     */
    private String memberState;
    /**
     * @return The Universally Unique Identifier (UUID) of the member server.
     * 
     */
    private String memberUuid;

    private GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem() {}
    /**
     * @return The host name of the group member that clients use to connect to it.
     * 
     */
    public String memberHost() {
        return this.memberHost;
    }
    /**
     * @return The port number of the group member that clients use to connect to it.
     * 
     */
    public Integer memberPort() {
        return this.memberPort;
    }
    /**
     * @return The role of this server as a group replication member.
     * 
     */
    public String memberRole() {
        return this.memberRole;
    }
    /**
     * @return The state of this server as a group replication member.
     * 
     */
    public String memberState() {
        return this.memberState;
    }
    /**
     * @return The Universally Unique Identifier (UUID) of the member server.
     * 
     */
    public String memberUuid() {
        return this.memberUuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String memberHost;
        private Integer memberPort;
        private String memberRole;
        private String memberState;
        private String memberUuid;
        public Builder() {}
        public Builder(GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.memberHost = defaults.memberHost;
    	      this.memberPort = defaults.memberPort;
    	      this.memberRole = defaults.memberRole;
    	      this.memberState = defaults.memberState;
    	      this.memberUuid = defaults.memberUuid;
        }

        @CustomType.Setter
        public Builder memberHost(String memberHost) {
            if (memberHost == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem", "memberHost");
            }
            this.memberHost = memberHost;
            return this;
        }
        @CustomType.Setter
        public Builder memberPort(Integer memberPort) {
            if (memberPort == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem", "memberPort");
            }
            this.memberPort = memberPort;
            return this;
        }
        @CustomType.Setter
        public Builder memberRole(String memberRole) {
            if (memberRole == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem", "memberRole");
            }
            this.memberRole = memberRole;
            return this;
        }
        @CustomType.Setter
        public Builder memberState(String memberState) {
            if (memberState == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem", "memberState");
            }
            this.memberState = memberState;
            return this;
        }
        @CustomType.Setter
        public Builder memberUuid(String memberUuid) {
            if (memberUuid == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem", "memberUuid");
            }
            this.memberUuid = memberUuid;
            return this;
        }
        public GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem build() {
            final var _resultValue = new GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollectionItem();
            _resultValue.memberHost = memberHost;
            _resultValue.memberPort = memberPort;
            _resultValue.memberRole = memberRole;
            _resultValue.memberState = memberState;
            _resultValue.memberUuid = memberUuid;
            return _resultValue;
        }
    }
}
