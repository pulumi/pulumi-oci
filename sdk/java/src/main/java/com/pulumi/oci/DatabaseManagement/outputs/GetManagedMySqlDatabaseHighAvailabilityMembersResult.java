// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedMySqlDatabaseHighAvailabilityMembersFilter;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedMySqlDatabaseHighAvailabilityMembersResult {
    private @Nullable List<GetManagedMySqlDatabaseHighAvailabilityMembersFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of managed_my_sql_database_high_availability_member_collection.
     * 
     */
    private List<GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollection> managedMySqlDatabaseHighAvailabilityMemberCollections;
    private String managedMySqlDatabaseId;

    private GetManagedMySqlDatabaseHighAvailabilityMembersResult() {}
    public List<GetManagedMySqlDatabaseHighAvailabilityMembersFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of managed_my_sql_database_high_availability_member_collection.
     * 
     */
    public List<GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollection> managedMySqlDatabaseHighAvailabilityMemberCollections() {
        return this.managedMySqlDatabaseHighAvailabilityMemberCollections;
    }
    public String managedMySqlDatabaseId() {
        return this.managedMySqlDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedMySqlDatabaseHighAvailabilityMembersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetManagedMySqlDatabaseHighAvailabilityMembersFilter> filters;
        private String id;
        private List<GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollection> managedMySqlDatabaseHighAvailabilityMemberCollections;
        private String managedMySqlDatabaseId;
        public Builder() {}
        public Builder(GetManagedMySqlDatabaseHighAvailabilityMembersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managedMySqlDatabaseHighAvailabilityMemberCollections = defaults.managedMySqlDatabaseHighAvailabilityMemberCollections;
    	      this.managedMySqlDatabaseId = defaults.managedMySqlDatabaseId;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetManagedMySqlDatabaseHighAvailabilityMembersFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedMySqlDatabaseHighAvailabilityMembersFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseHighAvailabilityMembersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedMySqlDatabaseHighAvailabilityMemberCollections(List<GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollection> managedMySqlDatabaseHighAvailabilityMemberCollections) {
            if (managedMySqlDatabaseHighAvailabilityMemberCollections == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseHighAvailabilityMembersResult", "managedMySqlDatabaseHighAvailabilityMemberCollections");
            }
            this.managedMySqlDatabaseHighAvailabilityMemberCollections = managedMySqlDatabaseHighAvailabilityMemberCollections;
            return this;
        }
        public Builder managedMySqlDatabaseHighAvailabilityMemberCollections(GetManagedMySqlDatabaseHighAvailabilityMembersManagedMySqlDatabaseHighAvailabilityMemberCollection... managedMySqlDatabaseHighAvailabilityMemberCollections) {
            return managedMySqlDatabaseHighAvailabilityMemberCollections(List.of(managedMySqlDatabaseHighAvailabilityMemberCollections));
        }
        @CustomType.Setter
        public Builder managedMySqlDatabaseId(String managedMySqlDatabaseId) {
            if (managedMySqlDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseHighAvailabilityMembersResult", "managedMySqlDatabaseId");
            }
            this.managedMySqlDatabaseId = managedMySqlDatabaseId;
            return this;
        }
        public GetManagedMySqlDatabaseHighAvailabilityMembersResult build() {
            final var _resultValue = new GetManagedMySqlDatabaseHighAvailabilityMembersResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.managedMySqlDatabaseHighAvailabilityMemberCollections = managedMySqlDatabaseHighAvailabilityMemberCollections;
            _resultValue.managedMySqlDatabaseId = managedMySqlDatabaseId;
            return _resultValue;
        }
    }
}
