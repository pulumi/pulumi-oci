// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplierFilter {
    /**
     * @return Type of replication filter that has been configured for the replication channel.
     * 
     */
    private String filterName;
    /**
     * @return The rules configured for the replication filter type.
     * 
     */
    private String filterRule;

    private GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplierFilter() {}
    /**
     * @return Type of replication filter that has been configured for the replication channel.
     * 
     */
    public String filterName() {
        return this.filterName;
    }
    /**
     * @return The rules configured for the replication filter type.
     * 
     */
    public String filterRule() {
        return this.filterRule;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplierFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String filterName;
        private String filterRule;
        public Builder() {}
        public Builder(GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplierFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterName = defaults.filterName;
    	      this.filterRule = defaults.filterRule;
        }

        @CustomType.Setter
        public Builder filterName(String filterName) {
            if (filterName == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplierFilter", "filterName");
            }
            this.filterName = filterName;
            return this;
        }
        @CustomType.Setter
        public Builder filterRule(String filterRule) {
            if (filterRule == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplierFilter", "filterRule");
            }
            this.filterRule = filterRule;
            return this;
        }
        public GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplierFilter build() {
            final var _resultValue = new GetManagedMySqlDatabaseInboundReplicationsManagedMySqlDatabaseInboundReplicationCollectionItemApplierFilter();
            _resultValue.filterName = filterName;
            _resultValue.filterRule = filterRule;
            return _resultValue;
        }
    }
}
