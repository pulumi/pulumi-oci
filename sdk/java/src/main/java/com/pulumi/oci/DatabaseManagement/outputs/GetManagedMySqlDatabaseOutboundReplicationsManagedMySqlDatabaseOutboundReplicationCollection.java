// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollectionItem;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollection {
    /**
     * @return The list of ManagedMySqlDatabaseOutboundReplicationSummary records.
     * 
     */
    private List<GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollectionItem> items;
    /**
     * @return The number of outbound replications from the MySQL server.
     * 
     */
    private Integer outboundReplicationsCount;

    private GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollection() {}
    /**
     * @return The list of ManagedMySqlDatabaseOutboundReplicationSummary records.
     * 
     */
    public List<GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollectionItem> items() {
        return this.items;
    }
    /**
     * @return The number of outbound replications from the MySQL server.
     * 
     */
    public Integer outboundReplicationsCount() {
        return this.outboundReplicationsCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollectionItem> items;
        private Integer outboundReplicationsCount;
        public Builder() {}
        public Builder(GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.items = defaults.items;
    	      this.outboundReplicationsCount = defaults.outboundReplicationsCount;
        }

        @CustomType.Setter
        public Builder items(List<GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollectionItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollection", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollectionItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder outboundReplicationsCount(Integer outboundReplicationsCount) {
            if (outboundReplicationsCount == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollection", "outboundReplicationsCount");
            }
            this.outboundReplicationsCount = outboundReplicationsCount;
            return this;
        }
        public GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollection build() {
            final var _resultValue = new GetManagedMySqlDatabaseOutboundReplicationsManagedMySqlDatabaseOutboundReplicationCollection();
            _resultValue.items = items;
            _resultValue.outboundReplicationsCount = outboundReplicationsCount;
            return _resultValue;
        }
    }
}
