// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedMySqlDatabaseQueryDetailQueryExplainPlan;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedMySqlDatabaseQueryDetailQueryMessage;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedMySqlDatabaseQueryDetailQuerySampleDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedMySqlDatabaseQueryDetailResult {
    private String digest;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String managedMySqlDatabaseId;
    /**
     * @return The explain plan for a given MySQL query.
     * 
     */
    private List<GetManagedMySqlDatabaseQueryDetailQueryExplainPlan> queryExplainPlans;
    /**
     * @return The errors, warnings and notes that could be raised by the execution of the query.
     * 
     */
    private List<GetManagedMySqlDatabaseQueryDetailQueryMessage> queryMessages;
    /**
     * @return The details of a query sample including the query text, execution time and other details.
     * 
     */
    private List<GetManagedMySqlDatabaseQueryDetailQuerySampleDetail> querySampleDetails;

    private GetManagedMySqlDatabaseQueryDetailResult() {}
    public String digest() {
        return this.digest;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String managedMySqlDatabaseId() {
        return this.managedMySqlDatabaseId;
    }
    /**
     * @return The explain plan for a given MySQL query.
     * 
     */
    public List<GetManagedMySqlDatabaseQueryDetailQueryExplainPlan> queryExplainPlans() {
        return this.queryExplainPlans;
    }
    /**
     * @return The errors, warnings and notes that could be raised by the execution of the query.
     * 
     */
    public List<GetManagedMySqlDatabaseQueryDetailQueryMessage> queryMessages() {
        return this.queryMessages;
    }
    /**
     * @return The details of a query sample including the query text, execution time and other details.
     * 
     */
    public List<GetManagedMySqlDatabaseQueryDetailQuerySampleDetail> querySampleDetails() {
        return this.querySampleDetails;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedMySqlDatabaseQueryDetailResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String digest;
        private String id;
        private String managedMySqlDatabaseId;
        private List<GetManagedMySqlDatabaseQueryDetailQueryExplainPlan> queryExplainPlans;
        private List<GetManagedMySqlDatabaseQueryDetailQueryMessage> queryMessages;
        private List<GetManagedMySqlDatabaseQueryDetailQuerySampleDetail> querySampleDetails;
        public Builder() {}
        public Builder(GetManagedMySqlDatabaseQueryDetailResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.digest = defaults.digest;
    	      this.id = defaults.id;
    	      this.managedMySqlDatabaseId = defaults.managedMySqlDatabaseId;
    	      this.queryExplainPlans = defaults.queryExplainPlans;
    	      this.queryMessages = defaults.queryMessages;
    	      this.querySampleDetails = defaults.querySampleDetails;
        }

        @CustomType.Setter
        public Builder digest(String digest) {
            if (digest == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseQueryDetailResult", "digest");
            }
            this.digest = digest;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseQueryDetailResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedMySqlDatabaseId(String managedMySqlDatabaseId) {
            if (managedMySqlDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseQueryDetailResult", "managedMySqlDatabaseId");
            }
            this.managedMySqlDatabaseId = managedMySqlDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder queryExplainPlans(List<GetManagedMySqlDatabaseQueryDetailQueryExplainPlan> queryExplainPlans) {
            if (queryExplainPlans == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseQueryDetailResult", "queryExplainPlans");
            }
            this.queryExplainPlans = queryExplainPlans;
            return this;
        }
        public Builder queryExplainPlans(GetManagedMySqlDatabaseQueryDetailQueryExplainPlan... queryExplainPlans) {
            return queryExplainPlans(List.of(queryExplainPlans));
        }
        @CustomType.Setter
        public Builder queryMessages(List<GetManagedMySqlDatabaseQueryDetailQueryMessage> queryMessages) {
            if (queryMessages == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseQueryDetailResult", "queryMessages");
            }
            this.queryMessages = queryMessages;
            return this;
        }
        public Builder queryMessages(GetManagedMySqlDatabaseQueryDetailQueryMessage... queryMessages) {
            return queryMessages(List.of(queryMessages));
        }
        @CustomType.Setter
        public Builder querySampleDetails(List<GetManagedMySqlDatabaseQueryDetailQuerySampleDetail> querySampleDetails) {
            if (querySampleDetails == null) {
              throw new MissingRequiredPropertyException("GetManagedMySqlDatabaseQueryDetailResult", "querySampleDetails");
            }
            this.querySampleDetails = querySampleDetails;
            return this;
        }
        public Builder querySampleDetails(GetManagedMySqlDatabaseQueryDetailQuerySampleDetail... querySampleDetails) {
            return querySampleDetails(List.of(querySampleDetails));
        }
        public GetManagedMySqlDatabaseQueryDetailResult build() {
            final var _resultValue = new GetManagedMySqlDatabaseQueryDetailResult();
            _resultValue.digest = digest;
            _resultValue.id = id;
            _resultValue.managedMySqlDatabaseId = managedMySqlDatabaseId;
            _resultValue.queryExplainPlans = queryExplainPlans;
            _resultValue.queryMessages = queryMessages;
            _resultValue.querySampleDetails = querySampleDetails;
            return _resultValue;
        }
    }
}
