// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagedDatabasesResetDatabaseParameterCredentials {
    /**
     * @return The database user&#39;s password encoded using BASE64 scheme.
     * 
     */
    private @Nullable String password;
    /**
     * @return The role of the database user.
     * 
     */
    private @Nullable String role;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
     * 
     */
    private @Nullable String secretId;
    /**
     * @return The database user name used to perform management activity.
     * 
     */
    private @Nullable String userName;

    private ManagedDatabasesResetDatabaseParameterCredentials() {}
    /**
     * @return The database user&#39;s password encoded using BASE64 scheme.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return The role of the database user.
     * 
     */
    public Optional<String> role() {
        return Optional.ofNullable(this.role);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret containing the user password.
     * 
     */
    public Optional<String> secretId() {
        return Optional.ofNullable(this.secretId);
    }
    /**
     * @return The database user name used to perform management activity.
     * 
     */
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedDatabasesResetDatabaseParameterCredentials defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String password;
        private @Nullable String role;
        private @Nullable String secretId;
        private @Nullable String userName;
        public Builder() {}
        public Builder(ManagedDatabasesResetDatabaseParameterCredentials defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.role = defaults.role;
    	      this.secretId = defaults.secretId;
    	      this.userName = defaults.userName;
        }

        @CustomType.Setter
        public Builder password(@Nullable String password) {

            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder role(@Nullable String role) {

            this.role = role;
            return this;
        }
        @CustomType.Setter
        public Builder secretId(@Nullable String secretId) {

            this.secretId = secretId;
            return this;
        }
        @CustomType.Setter
        public Builder userName(@Nullable String userName) {

            this.userName = userName;
            return this;
        }
        public ManagedDatabasesResetDatabaseParameterCredentials build() {
            final var _resultValue = new ManagedDatabasesResetDatabaseParameterCredentials();
            _resultValue.password = password;
            _resultValue.role = role;
            _resultValue.secretId = secretId;
            _resultValue.userName = userName;
            return _resultValue;
        }
    }
}
