// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DatabaseMigration.ConnectionArgs;
import com.pulumi.oci.DatabaseMigration.inputs.ConnectionState;
import com.pulumi.oci.DatabaseMigration.outputs.ConnectionAdditionalAttribute;
import com.pulumi.oci.DatabaseMigration.outputs.ConnectionIngressIp;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.DatabaseMigration.Connection;
 * import com.pulumi.oci.DatabaseMigration.ConnectionArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.ConnectionAdditionalAttributeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testConnection = new Connection("testConnection", ConnectionArgs.builder()
 *             .compartmentId(compartmentId)
 *             .connectionType(connectionConnectionType)
 *             .displayName(connectionDisplayName)
 *             .keyId(testKey.id())
 *             .password(connectionPassword)
 *             .technologyType(connectionTechnologyType)
 *             .username(connectionUsername)
 *             .vaultId(testVault.id())
 *             .additionalAttributes(ConnectionAdditionalAttributeArgs.builder()
 *                 .name(connectionAdditionalAttributesName)
 *                 .value(connectionAdditionalAttributesValue)
 *                 .build())
 *             .connectionString(connectionConnectionString)
 *             .databaseId(testDatabase.id())
 *             .databaseName(testDatabase.name())
 *             .dbSystemId(testDbSystem.id())
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .description(connectionDescription)
 *             .freeformTags(connectionFreeformTags)
 *             .host(connectionHost)
 *             .nsgIds(connectionNsgIds)
 *             .port(connectionPort)
 *             .replicationPassword(connectionReplicationPassword)
 *             .replicationUsername(connectionReplicationUsername)
 *             .securityProtocol(connectionSecurityProtocol)
 *             .sshHost(connectionSshHost)
 *             .sshKey(connectionSshKey)
 *             .sshSudoLocation(connectionSshSudoLocation)
 *             .sshUser(connectionSshUser)
 *             .sslCa(connectionSslCa)
 *             .sslCert(connectionSslCert)
 *             .sslCrl(connectionSslCrl)
 *             .sslKey(connectionSslKey)
 *             .sslMode(connectionSslMode)
 *             .subnetId(testSubnet.id())
 *             .wallet(connectionWallet)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Connections can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:DatabaseMigration/connection:Connection test_connection &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DatabaseMigration/connection:Connection")
public class Connection extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) An array of name-value pair attribute entries.
     * 
     */
    @Export(name="additionalAttributes", refs={List.class,ConnectionAdditionalAttribute.class}, tree="[0,1]")
    private Output<List<ConnectionAdditionalAttribute>> additionalAttributes;

    /**
     * @return (Updatable) An array of name-value pair attribute entries.
     * 
     */
    public Output<List<ConnectionAdditionalAttribute>> additionalAttributes() {
        return this.additionalAttributes;
    }
    /**
     * (Updatable) The OCID of the compartment.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
     * 
     */
    @Export(name="connectionString", refs={String.class}, tree="[0]")
    private Output<String> connectionString;

    /**
     * @return (Updatable) Connect descriptor or Easy Connect Naming method used to connect to a database.
     * 
     */
    public Output<String> connectionString() {
        return this.connectionString;
    }
    /**
     * (Updatable) Defines the type of connection. For example, ORACLE.
     * 
     */
    @Export(name="connectionType", refs={String.class}, tree="[0]")
    private Output<String> connectionType;

    /**
     * @return (Updatable) Defines the type of connection. For example, ORACLE.
     * 
     */
    public Output<String> connectionType() {
        return this.connectionType;
    }
    /**
     * (Updatable) The OCID of the database being referenced.
     * 
     */
    @Export(name="databaseId", refs={String.class}, tree="[0]")
    private Output<String> databaseId;

    /**
     * @return (Updatable) The OCID of the database being referenced.
     * 
     */
    public Output<String> databaseId() {
        return this.databaseId;
    }
    /**
     * (Updatable) The name of the database being referenced.
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return (Updatable) The name of the database being referenced.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * (Updatable) The OCID of the database system being referenced.
     * 
     */
    @Export(name="dbSystemId", refs={String.class}, tree="[0]")
    private Output<String> dbSystemId;

    /**
     * @return (Updatable) The OCID of the database system being referenced.
     * 
     */
    public Output<String> dbSystemId() {
        return this.dbSystemId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A user-friendly description. Does not have to be unique, and it&#39;s changeable.  Avoid entering confidential information.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) A user-friendly description. Does not have to be unique, and it&#39;s changeable.  Avoid entering confidential information.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {&#34;Department&#34;: &#34;Finance&#34;}
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {&#34;Department&#34;: &#34;Finance&#34;}
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) The IP Address of the host.
     * 
     */
    @Export(name="host", refs={String.class}, tree="[0]")
    private Output<String> host;

    /**
     * @return (Updatable) The IP Address of the host.
     * 
     */
    public Output<String> host() {
        return this.host;
    }
    /**
     * List of ingress IP addresses from where to connect to this connection&#39;s privateIp.
     * 
     */
    @Export(name="ingressIps", refs={List.class,ConnectionIngressIp.class}, tree="[0,1]")
    private Output<List<ConnectionIngressIp>> ingressIps;

    /**
     * @return List of ingress IP addresses from where to connect to this connection&#39;s privateIp.
     * 
     */
    public Output<List<ConnectionIngressIp>> ingressIps() {
        return this.ingressIps;
    }
    /**
     * (Updatable) The OCID of the key used in cryptographic operations.
     * 
     */
    @Export(name="keyId", refs={String.class}, tree="[0]")
    private Output<String> keyId;

    /**
     * @return (Updatable) The OCID of the key used in cryptographic operations.
     * 
     */
    public Output<String> keyId() {
        return this.keyId;
    }
    /**
     * The message describing the current state of the connection&#39;s lifecycle in detail. For example, can be used to provide actionable information for a connection in a Failed state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return The message describing the current state of the connection&#39;s lifecycle in detail. For example, can be used to provide actionable information for a connection in a Failed state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
     * 
     */
    @Export(name="nsgIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> nsgIds;

    /**
     * @return (Updatable) An array of Network Security Group OCIDs used to define network access for Connections.
     * 
     */
    public Output<List<String>> nsgIds() {
        return this.nsgIds;
    }
    /**
     * (Updatable) The password (credential) used when creating or updating this resource.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return (Updatable) The password (credential) used when creating or updating this resource.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * (Updatable) The port to be used for the connection.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return (Updatable) The port to be used for the connection.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * The OCID of the resource being referenced.
     * 
     */
    @Export(name="privateEndpointId", refs={String.class}, tree="[0]")
    private Output<String> privateEndpointId;

    /**
     * @return The OCID of the resource being referenced.
     * 
     */
    public Output<String> privateEndpointId() {
        return this.privateEndpointId;
    }
    /**
     * (Updatable) The password (credential) used when creating or updating this resource.
     * 
     */
    @Export(name="replicationPassword", refs={String.class}, tree="[0]")
    private Output<String> replicationPassword;

    /**
     * @return (Updatable) The password (credential) used when creating or updating this resource.
     * 
     */
    public Output<String> replicationPassword() {
        return this.replicationPassword;
    }
    /**
     * (Updatable) The username (credential) used when creating or updating this resource.
     * 
     */
    @Export(name="replicationUsername", refs={String.class}, tree="[0]")
    private Output<String> replicationUsername;

    /**
     * @return (Updatable) The username (credential) used when creating or updating this resource.
     * 
     */
    public Output<String> replicationUsername() {
        return this.replicationUsername;
    }
    /**
     * The OCID of the resource being referenced.
     * 
     */
    @Export(name="secretId", refs={String.class}, tree="[0]")
    private Output<String> secretId;

    /**
     * @return The OCID of the resource being referenced.
     * 
     */
    public Output<String> secretId() {
        return this.secretId;
    }
    /**
     * (Updatable) Security Type for MySQL.
     * 
     */
    @Export(name="securityProtocol", refs={String.class}, tree="[0]")
    private Output<String> securityProtocol;

    /**
     * @return (Updatable) Security Type for MySQL.
     * 
     */
    public Output<String> securityProtocol() {
        return this.securityProtocol;
    }
    /**
     * (Updatable) Name of the host the SSH key is valid for.
     * 
     */
    @Export(name="sshHost", refs={String.class}, tree="[0]")
    private Output<String> sshHost;

    /**
     * @return (Updatable) Name of the host the SSH key is valid for.
     * 
     */
    public Output<String> sshHost() {
        return this.sshHost;
    }
    /**
     * (Updatable) Private SSH key string.
     * 
     */
    @Export(name="sshKey", refs={String.class}, tree="[0]")
    private Output<String> sshKey;

    /**
     * @return (Updatable) Private SSH key string.
     * 
     */
    public Output<String> sshKey() {
        return this.sshKey;
    }
    /**
     * (Updatable) Sudo location
     * 
     */
    @Export(name="sshSudoLocation", refs={String.class}, tree="[0]")
    private Output<String> sshSudoLocation;

    /**
     * @return (Updatable) Sudo location
     * 
     */
    public Output<String> sshSudoLocation() {
        return this.sshSudoLocation;
    }
    /**
     * (Updatable) The username (credential) used when creating or updating this resource.
     * 
     */
    @Export(name="sshUser", refs={String.class}, tree="[0]")
    private Output<String> sshUser;

    /**
     * @return (Updatable) The username (credential) used when creating or updating this resource.
     * 
     */
    public Output<String> sshUser() {
        return this.sshUser;
    }
    /**
     * (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
     * 
     */
    @Export(name="sslCa", refs={String.class}, tree="[0]")
    private Output<String> sslCa;

    /**
     * @return (Updatable) Database Certificate - The base64 encoded content of mysql.pem file containing the server public key (for 1 and 2-way SSL).
     * 
     */
    public Output<String> sslCa() {
        return this.sslCa;
    }
    /**
     * (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
     * 
     */
    @Export(name="sslCert", refs={String.class}, tree="[0]")
    private Output<String> sslCert;

    /**
     * @return (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
     * 
     */
    public Output<String> sslCert() {
        return this.sslCert;
    }
    /**
     * (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
     * 
     */
    @Export(name="sslCrl", refs={String.class}, tree="[0]")
    private Output<String> sslCrl;

    /**
     * @return (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
     * 
     */
    public Output<String> sslCrl() {
        return this.sslCrl;
    }
    /**
     * (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
     * 
     */
    @Export(name="sslKey", refs={String.class}, tree="[0]")
    private Output<String> sslKey;

    /**
     * @return (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
     * 
     */
    public Output<String> sslKey() {
        return this.sslKey;
    }
    /**
     * (Updatable) SSL modes for MySQL.
     * 
     */
    @Export(name="sslMode", refs={String.class}, tree="[0]")
    private Output<String> sslMode;

    /**
     * @return (Updatable) SSL modes for MySQL.
     * 
     */
    public Output<String> sslMode() {
        return this.sslMode;
    }
    /**
     * The Connection&#39;s current lifecycle state.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The Connection&#39;s current lifecycle state.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * (Updatable) Oracle Cloud Infrastructure resource ID.
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure resource ID.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,Object>> systemTags() {
        return this.systemTags;
    }
    /**
     * The type of MySQL source or target connection. Example: OCI_MYSQL represents Oracle Cloud Infrastructure MySQL HeatWave Database Service
     * 
     */
    @Export(name="technologyType", refs={String.class}, tree="[0]")
    private Output<String> technologyType;

    /**
     * @return The type of MySQL source or target connection. Example: OCI_MYSQL represents Oracle Cloud Infrastructure MySQL HeatWave Database Service
     * 
     */
    public Output<String> technologyType() {
        return this.technologyType;
    }
    /**
     * The time when this resource was created. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The time when this resource was created. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time when this resource was updated. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The time when this resource was updated. An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * (Updatable) The username (credential) used when creating or updating this resource.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return (Updatable) The username (credential) used when creating or updating this resource.
     * 
     */
    public Output<String> username() {
        return this.username;
    }
    /**
     * (Updatable) Oracle Cloud Infrastructure resource ID.
     * 
     */
    @Export(name="vaultId", refs={String.class}, tree="[0]")
    private Output<String> vaultId;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure resource ID.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }
    /**
     * (Updatable) The wallet contents used to make connections to a database.  This attribute is expected to be base64 encoded.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="wallet", refs={String.class}, tree="[0]")
    private Output<String> wallet;

    /**
     * @return (Updatable) The wallet contents used to make connections to a database.  This attribute is expected to be base64 encoded.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> wallet() {
        return this.wallet;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Connection(java.lang.String name) {
        this(name, ConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Connection(java.lang.String name, ConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Connection(java.lang.String name, ConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DatabaseMigration/connection:Connection", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Connection(java.lang.String name, Output<java.lang.String> id, @Nullable ConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DatabaseMigration/connection:Connection", name, state, makeResourceOptions(options, id), false);
    }

    private static ConnectionArgs makeArgs(ConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ConnectionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password",
                "replicationPassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Connection get(java.lang.String name, Output<java.lang.String> id, @Nullable ConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Connection(name, id, state, options);
    }
}
