// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionPlainArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionsArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionsPlainArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetJobAdvisorReportArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetJobAdvisorReportPlainArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetJobOutputArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetJobOutputPlainArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationObjectTypesArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationObjectTypesPlainArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationPlainArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationsArgs;
import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationsPlainArgs;
import com.pulumi.oci.DatabaseMigration.outputs.GetConnectionResult;
import com.pulumi.oci.DatabaseMigration.outputs.GetConnectionsResult;
import com.pulumi.oci.DatabaseMigration.outputs.GetJobAdvisorReportResult;
import com.pulumi.oci.DatabaseMigration.outputs.GetJobOutputResult;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationObjectTypesResult;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationResult;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationsResult;
import com.pulumi.oci.Utilities;
import java.util.concurrent.CompletableFuture;

public final class DatabaseMigrationFunctions {
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnection = DatabaseMigrationFunctions.getConnection(GetConnectionArgs.builder()
     *             .connectionId(testConnectionOciDatabaseMigrationConnection.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionResult> getConnection(GetConnectionArgs args) {
        return getConnection(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnection = DatabaseMigrationFunctions.getConnection(GetConnectionArgs.builder()
     *             .connectionId(testConnectionOciDatabaseMigrationConnection.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionResult> getConnectionPlain(GetConnectionPlainArgs args) {
        return getConnectionPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnection = DatabaseMigrationFunctions.getConnection(GetConnectionArgs.builder()
     *             .connectionId(testConnectionOciDatabaseMigrationConnection.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionResult> getConnection(GetConnectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DatabaseMigration/getConnection:getConnection", TypeShape.of(GetConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnection = DatabaseMigrationFunctions.getConnection(GetConnectionArgs.builder()
     *             .connectionId(testConnectionOciDatabaseMigrationConnection.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionResult> getConnectionPlain(GetConnectionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DatabaseMigration/getConnection:getConnection", TypeShape.of(GetConnectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnections = DatabaseMigrationFunctions.getConnections(GetConnectionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .connectionTypes(connectionConnectionType)
     *             .displayName(connectionDisplayName)
     *             .sourceConnectionId(testConnection.id())
     *             .state(connectionState)
     *             .technologyTypes(connectionTechnologyType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionsResult> getConnections(GetConnectionsArgs args) {
        return getConnections(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnections = DatabaseMigrationFunctions.getConnections(GetConnectionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .connectionTypes(connectionConnectionType)
     *             .displayName(connectionDisplayName)
     *             .sourceConnectionId(testConnection.id())
     *             .state(connectionState)
     *             .technologyTypes(connectionTechnologyType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionsResult> getConnectionsPlain(GetConnectionsPlainArgs args) {
        return getConnectionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnections = DatabaseMigrationFunctions.getConnections(GetConnectionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .connectionTypes(connectionConnectionType)
     *             .displayName(connectionDisplayName)
     *             .sourceConnectionId(testConnection.id())
     *             .state(connectionState)
     *             .technologyTypes(connectionTechnologyType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConnectionsResult> getConnections(GetConnectionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DatabaseMigration/getConnections:getConnections", TypeShape.of(GetConnectionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetConnectionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConnections = DatabaseMigrationFunctions.getConnections(GetConnectionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .connectionTypes(connectionConnectionType)
     *             .displayName(connectionDisplayName)
     *             .sourceConnectionId(testConnection.id())
     *             .state(connectionState)
     *             .technologyTypes(connectionTechnologyType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConnectionsResult> getConnectionsPlain(GetConnectionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DatabaseMigration/getConnections:getConnections", TypeShape.of(GetConnectionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetJobAdvisorReportArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testJobAdvisorReport = DatabaseMigrationFunctions.getJobAdvisorReport(GetJobAdvisorReportArgs.builder()
     *             .jobId(testJob.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetJobAdvisorReportResult> getJobAdvisorReport(GetJobAdvisorReportArgs args) {
        return getJobAdvisorReport(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetJobAdvisorReportArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testJobAdvisorReport = DatabaseMigrationFunctions.getJobAdvisorReport(GetJobAdvisorReportArgs.builder()
     *             .jobId(testJob.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetJobAdvisorReportResult> getJobAdvisorReportPlain(GetJobAdvisorReportPlainArgs args) {
        return getJobAdvisorReportPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetJobAdvisorReportArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testJobAdvisorReport = DatabaseMigrationFunctions.getJobAdvisorReport(GetJobAdvisorReportArgs.builder()
     *             .jobId(testJob.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetJobAdvisorReportResult> getJobAdvisorReport(GetJobAdvisorReportArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DatabaseMigration/getJobAdvisorReport:getJobAdvisorReport", TypeShape.of(GetJobAdvisorReportResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetJobAdvisorReportArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testJobAdvisorReport = DatabaseMigrationFunctions.getJobAdvisorReport(GetJobAdvisorReportArgs.builder()
     *             .jobId(testJob.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetJobAdvisorReportResult> getJobAdvisorReportPlain(GetJobAdvisorReportPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DatabaseMigration/getJobAdvisorReport:getJobAdvisorReport", TypeShape.of(GetJobAdvisorReportResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Job Output resource in Oracle Cloud Infrastructure Database Migration service.
     * 
     * List the Job Outputs
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetJobOutputArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testJobOutput = DatabaseMigrationFunctions.getJobOutput(GetJobOutputArgs.builder()
     *             .jobId(testJob.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetJobOutputResult> getJobOutput(GetJobOutputArgs args) {
        return getJobOutput(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Job Output resource in Oracle Cloud Infrastructure Database Migration service.
     * 
     * List the Job Outputs
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetJobOutputArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testJobOutput = DatabaseMigrationFunctions.getJobOutput(GetJobOutputArgs.builder()
     *             .jobId(testJob.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetJobOutputResult> getJobOutputPlain(GetJobOutputPlainArgs args) {
        return getJobOutputPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Job Output resource in Oracle Cloud Infrastructure Database Migration service.
     * 
     * List the Job Outputs
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetJobOutputArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testJobOutput = DatabaseMigrationFunctions.getJobOutput(GetJobOutputArgs.builder()
     *             .jobId(testJob.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetJobOutputResult> getJobOutput(GetJobOutputArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DatabaseMigration/getJobOutput:getJobOutput", TypeShape.of(GetJobOutputResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Job Output resource in Oracle Cloud Infrastructure Database Migration service.
     * 
     * List the Job Outputs
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetJobOutputArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testJobOutput = DatabaseMigrationFunctions.getJobOutput(GetJobOutputArgs.builder()
     *             .jobId(testJob.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetJobOutputResult> getJobOutputPlain(GetJobOutputPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DatabaseMigration/getJobOutput:getJobOutput", TypeShape.of(GetJobOutputResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigration = DatabaseMigrationFunctions.getMigration(GetMigrationArgs.builder()
     *             .migrationId(testMigrationOciDatabaseMigrationMigration.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMigrationResult> getMigration(GetMigrationArgs args) {
        return getMigration(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigration = DatabaseMigrationFunctions.getMigration(GetMigrationArgs.builder()
     *             .migrationId(testMigrationOciDatabaseMigrationMigration.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMigrationResult> getMigrationPlain(GetMigrationPlainArgs args) {
        return getMigrationPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigration = DatabaseMigrationFunctions.getMigration(GetMigrationArgs.builder()
     *             .migrationId(testMigrationOciDatabaseMigrationMigration.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMigrationResult> getMigration(GetMigrationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DatabaseMigration/getMigration:getMigration", TypeShape.of(GetMigrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigration = DatabaseMigrationFunctions.getMigration(GetMigrationArgs.builder()
     *             .migrationId(testMigrationOciDatabaseMigrationMigration.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMigrationResult> getMigrationPlain(GetMigrationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DatabaseMigration/getMigration:getMigration", TypeShape.of(GetMigrationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationObjectTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigrationObjectTypes = DatabaseMigrationFunctions.getMigrationObjectTypes(GetMigrationObjectTypesArgs.builder()
     *             .connectionType(migrationObjectTypeConnectionType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMigrationObjectTypesResult> getMigrationObjectTypes(GetMigrationObjectTypesArgs args) {
        return getMigrationObjectTypes(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationObjectTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigrationObjectTypes = DatabaseMigrationFunctions.getMigrationObjectTypes(GetMigrationObjectTypesArgs.builder()
     *             .connectionType(migrationObjectTypeConnectionType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMigrationObjectTypesResult> getMigrationObjectTypesPlain(GetMigrationObjectTypesPlainArgs args) {
        return getMigrationObjectTypesPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationObjectTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigrationObjectTypes = DatabaseMigrationFunctions.getMigrationObjectTypes(GetMigrationObjectTypesArgs.builder()
     *             .connectionType(migrationObjectTypeConnectionType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMigrationObjectTypesResult> getMigrationObjectTypes(GetMigrationObjectTypesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DatabaseMigration/getMigrationObjectTypes:getMigrationObjectTypes", TypeShape.of(GetMigrationObjectTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationObjectTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigrationObjectTypes = DatabaseMigrationFunctions.getMigrationObjectTypes(GetMigrationObjectTypesArgs.builder()
     *             .connectionType(migrationObjectTypeConnectionType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMigrationObjectTypesResult> getMigrationObjectTypesPlain(GetMigrationObjectTypesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DatabaseMigration/getMigrationObjectTypes:getMigrationObjectTypes", TypeShape.of(GetMigrationObjectTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigrations = DatabaseMigrationFunctions.getMigrations(GetMigrationsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .displayName(migrationDisplayName)
     *             .lifecycleDetails(migrationLifecycleDetails)
     *             .state(migrationState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMigrationsResult> getMigrations(GetMigrationsArgs args) {
        return getMigrations(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigrations = DatabaseMigrationFunctions.getMigrations(GetMigrationsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .displayName(migrationDisplayName)
     *             .lifecycleDetails(migrationLifecycleDetails)
     *             .state(migrationState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMigrationsResult> getMigrationsPlain(GetMigrationsPlainArgs args) {
        return getMigrationsPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigrations = DatabaseMigrationFunctions.getMigrations(GetMigrationsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .displayName(migrationDisplayName)
     *             .lifecycleDetails(migrationLifecycleDetails)
     *             .state(migrationState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMigrationsResult> getMigrations(GetMigrationsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:DatabaseMigration/getMigrations:getMigrations", TypeShape.of(GetMigrationsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.DatabaseMigration.DatabaseMigrationFunctions;
     * import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testMigrations = DatabaseMigrationFunctions.getMigrations(GetMigrationsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .displayName(migrationDisplayName)
     *             .lifecycleDetails(migrationLifecycleDetails)
     *             .state(migrationState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMigrationsResult> getMigrationsPlain(GetMigrationsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:DatabaseMigration/getMigrations:getMigrations", TypeShape.of(GetMigrationsResult.class), args, Utilities.withVersion(options));
    }
}
