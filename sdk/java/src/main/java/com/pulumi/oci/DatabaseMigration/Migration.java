// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DatabaseMigration.MigrationArgs;
import com.pulumi.oci.DatabaseMigration.inputs.MigrationState;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationAdvancedParameter;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationAdvisorSettings;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationDataTransferMediumDetails;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationExcludeObject;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationGgsDetails;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationHubDetails;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationIncludeObject;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationInitialLoadSettings;
import com.pulumi.oci.Utilities;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.DatabaseMigration.Migration;
 * import com.pulumi.oci.DatabaseMigration.MigrationArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationAdvancedParameterArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationAdvisorSettingsArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationDataTransferMediumDetailsArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationDataTransferMediumDetailsObjectStorageBucketArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationDataTransferMediumDetailsSourceArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationDataTransferMediumDetailsTargetArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationExcludeObjectArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationGgsDetailsArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationGgsDetailsExtractArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationGgsDetailsReplicatArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationHubDetailsArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationHubDetailsRestAdminCredentialsArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationHubDetailsExtractArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationHubDetailsReplicatArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationIncludeObjectArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationInitialLoadSettingsArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationInitialLoadSettingsDataPumpParametersArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationInitialLoadSettingsExportDirectoryObjectArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationInitialLoadSettingsImportDirectoryObjectArgs;
 * import com.pulumi.oci.DatabaseMigration.inputs.MigrationInitialLoadSettingsTablespaceDetailsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testMigration = new Migration("testMigration", MigrationArgs.builder()
 *             .compartmentId(compartmentId)
 *             .databaseCombination(migrationDatabaseCombination)
 *             .sourceDatabaseConnectionId(testConnection.id())
 *             .targetDatabaseConnectionId(testConnection.id())
 *             .type(migrationType)
 *             .advancedParameters(MigrationAdvancedParameterArgs.builder()
 *                 .dataType(migrationAdvancedParametersDataType)
 *                 .name(migrationAdvancedParametersName)
 *                 .value(migrationAdvancedParametersValue)
 *                 .build())
 *             .advisorSettings(MigrationAdvisorSettingsArgs.builder()
 *                 .isIgnoreErrors(migrationAdvisorSettingsIsIgnoreErrors)
 *                 .isSkipAdvisor(migrationAdvisorSettingsIsSkipAdvisor)
 *                 .build())
 *             .bulkIncludeExcludeData(migrationBulkIncludeExcludeData)
 *             .dataTransferMediumDetails(MigrationDataTransferMediumDetailsArgs.builder()
 *                 .type(migrationDataTransferMediumDetailsType)
 *                 .accessKeyId(testKey.id())
 *                 .name(migrationDataTransferMediumDetailsName)
 *                 .objectStorageBucket(MigrationDataTransferMediumDetailsObjectStorageBucketArgs.builder()
 *                     .bucket(migrationDataTransferMediumDetailsObjectStorageBucketBucket)
 *                     .namespace(migrationDataTransferMediumDetailsObjectStorageBucketNamespace)
 *                     .build())
 *                 .region(migrationDataTransferMediumDetailsRegion)
 *                 .secretAccessKey(migrationDataTransferMediumDetailsSecretAccessKey)
 *                 .sharedStorageMountTargetId(testMountTarget.id())
 *                 .source(MigrationDataTransferMediumDetailsSourceArgs.builder()
 *                     .kind(migrationDataTransferMediumDetailsSourceKind)
 *                     .ociHome(migrationDataTransferMediumDetailsSourceOciHome)
 *                     .walletLocation(migrationDataTransferMediumDetailsSourceWalletLocation)
 *                     .build())
 *                 .target(MigrationDataTransferMediumDetailsTargetArgs.builder()
 *                     .kind(migrationDataTransferMediumDetailsTargetKind)
 *                     .ociHome(migrationDataTransferMediumDetailsTargetOciHome)
 *                     .walletLocation(migrationDataTransferMediumDetailsTargetWalletLocation)
 *                     .build())
 *                 .build())
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .description(migrationDescription)
 *             .displayName(migrationDisplayName)
 *             .excludeObjects(MigrationExcludeObjectArgs.builder()
 *                 .object(migrationExcludeObjectsObject)
 *                 .isOmitExcludedTableFromReplication(migrationExcludeObjectsIsOmitExcludedTableFromReplication)
 *                 .owner(migrationExcludeObjectsOwner)
 *                 .schema(migrationExcludeObjectsSchema)
 *                 .type(migrationExcludeObjectsType)
 *                 .build())
 *             .freeformTags(migrationFreeformTags)
 *             .ggsDetails(MigrationGgsDetailsArgs.builder()
 *                 .acceptableLag(migrationGgsDetailsAcceptableLag)
 *                 .extract(MigrationGgsDetailsExtractArgs.builder()
 *                     .longTransDuration(migrationGgsDetailsExtractLongTransDuration)
 *                     .performanceProfile(migrationGgsDetailsExtractPerformanceProfile)
 *                     .build())
 *                 .replicat(MigrationGgsDetailsReplicatArgs.builder()
 *                     .performanceProfile(migrationGgsDetailsReplicatPerformanceProfile)
 *                     .build())
 *                 .build())
 *             .hubDetails(MigrationHubDetailsArgs.builder()
 *                 .keyId(testKey.id())
 *                 .restAdminCredentials(MigrationHubDetailsRestAdminCredentialsArgs.builder()
 *                     .password(migrationHubDetailsRestAdminCredentialsPassword)
 *                     .username(migrationHubDetailsRestAdminCredentialsUsername)
 *                     .build())
 *                 .url(migrationHubDetailsUrl)
 *                 .vaultId(testVault.id())
 *                 .acceptableLag(migrationHubDetailsAcceptableLag)
 *                 .computeId(testCompute.id())
 *                 .extract(MigrationHubDetailsExtractArgs.builder()
 *                     .longTransDuration(migrationHubDetailsExtractLongTransDuration)
 *                     .performanceProfile(migrationHubDetailsExtractPerformanceProfile)
 *                     .build())
 *                 .replicat(MigrationHubDetailsReplicatArgs.builder()
 *                     .performanceProfile(migrationHubDetailsReplicatPerformanceProfile)
 *                     .build())
 *                 .build())
 *             .includeObjects(MigrationIncludeObjectArgs.builder()
 *                 .object(migrationIncludeObjectsObject)
 *                 .isOmitExcludedTableFromReplication(migrationIncludeObjectsIsOmitExcludedTableFromReplication)
 *                 .owner(migrationIncludeObjectsOwner)
 *                 .schema(migrationIncludeObjectsSchema)
 *                 .type(migrationIncludeObjectsType)
 *                 .build())
 *             .initialLoadSettings(MigrationInitialLoadSettingsArgs.builder()
 *                 .jobMode(migrationInitialLoadSettingsJobMode)
 *                 .compatibilities(migrationInitialLoadSettingsCompatibility)
 *                 .dataPumpParameters(MigrationInitialLoadSettingsDataPumpParametersArgs.builder()
 *                     .estimate(migrationInitialLoadSettingsDataPumpParametersEstimate)
 *                     .excludeParameters(migrationInitialLoadSettingsDataPumpParametersExcludeParameters)
 *                     .exportParallelismDegree(migrationInitialLoadSettingsDataPumpParametersExportParallelismDegree)
 *                     .importParallelismDegree(migrationInitialLoadSettingsDataPumpParametersImportParallelismDegree)
 *                     .isCluster(migrationInitialLoadSettingsDataPumpParametersIsCluster)
 *                     .tableExistsAction(migrationInitialLoadSettingsDataPumpParametersTableExistsAction)
 *                     .build())
 *                 .exportDirectoryObject(MigrationInitialLoadSettingsExportDirectoryObjectArgs.builder()
 *                     .name(migrationInitialLoadSettingsExportDirectoryObjectName)
 *                     .path(migrationInitialLoadSettingsExportDirectoryObjectPath)
 *                     .build())
 *                 .handleGrantErrors(migrationInitialLoadSettingsHandleGrantErrors)
 *                 .importDirectoryObject(MigrationInitialLoadSettingsImportDirectoryObjectArgs.builder()
 *                     .name(migrationInitialLoadSettingsImportDirectoryObjectName)
 *                     .path(migrationInitialLoadSettingsImportDirectoryObjectPath)
 *                     .build())
 *                 .isConsistent(migrationInitialLoadSettingsIsConsistent)
 *                 .isIgnoreExistingObjects(migrationInitialLoadSettingsIsIgnoreExistingObjects)
 *                 .isTzUtc(migrationInitialLoadSettingsIsTzUtc)
 *                 .metadataRemaps(MigrationInitialLoadSettingsMetadataRemapArgs.builder()
 *                     .newValue(migrationInitialLoadSettingsMetadataRemapsNewValue)
 *                     .oldValue(migrationInitialLoadSettingsMetadataRemapsOldValue)
 *                     .type(migrationInitialLoadSettingsMetadataRemapsType)
 *                     .build())
 *                 .primaryKeyCompatibility(migrationInitialLoadSettingsPrimaryKeyCompatibility)
 *                 .tablespaceDetails(MigrationInitialLoadSettingsTablespaceDetailsArgs.builder()
 *                     .targetType(migrationInitialLoadSettingsTablespaceDetailsTargetType)
 *                     .blockSizeInKbs(migrationInitialLoadSettingsTablespaceDetailsBlockSizeInKbs)
 *                     .extendSizeInMbs(migrationInitialLoadSettingsTablespaceDetailsExtendSizeInMbs)
 *                     .isAutoCreate(migrationInitialLoadSettingsTablespaceDetailsIsAutoCreate)
 *                     .isBigFile(migrationInitialLoadSettingsTablespaceDetailsIsBigFile)
 *                     .remapTarget(migrationInitialLoadSettingsTablespaceDetailsRemapTarget)
 *                     .build())
 *                 .build())
 *             .sourceContainerDatabaseConnectionId(testConnection.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Migrations can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:DatabaseMigration/migration:Migration test_migration &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DatabaseMigration/migration:Migration")
public class Migration extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) List of Migration Parameter objects.
     * 
     */
    @Export(name="advancedParameters", refs={List.class,MigrationAdvancedParameter.class}, tree="[0,1]")
    private Output<List<MigrationAdvancedParameter>> advancedParameters;

    /**
     * @return (Updatable) List of Migration Parameter objects.
     * 
     */
    public Output<List<MigrationAdvancedParameter>> advancedParameters() {
        return this.advancedParameters;
    }
    /**
     * (Updatable) Optional Pre-Migration advisor settings.
     * 
     */
    @Export(name="advisorSettings", refs={MigrationAdvisorSettings.class}, tree="[0]")
    private Output<MigrationAdvisorSettings> advisorSettings;

    /**
     * @return (Updatable) Optional Pre-Migration advisor settings.
     * 
     */
    public Output<MigrationAdvisorSettings> advisorSettings() {
        return this.advisorSettings;
    }
    /**
     * Specifies the database objects to be excluded from the migration in bulk. The definition accepts input in a CSV format, newline separated for each entry. More details can be found in the documentation.
     * 
     */
    @Export(name="bulkIncludeExcludeData", refs={String.class}, tree="[0]")
    private Output<String> bulkIncludeExcludeData;

    /**
     * @return Specifies the database objects to be excluded from the migration in bulk. The definition accepts input in a CSV format, newline separated for each entry. More details can be found in the documentation.
     * 
     */
    public Output<String> bulkIncludeExcludeData() {
        return this.bulkIncludeExcludeData;
    }
    /**
     * (Updatable) The OCID of the resource being referenced.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Optional additional properties for data transfer.
     * 
     */
    @Export(name="dataTransferMediumDetails", refs={MigrationDataTransferMediumDetails.class}, tree="[0]")
    private Output<MigrationDataTransferMediumDetails> dataTransferMediumDetails;

    /**
     * @return (Updatable) Optional additional properties for data transfer.
     * 
     */
    public Output<MigrationDataTransferMediumDetails> dataTransferMediumDetails() {
        return this.dataTransferMediumDetails;
    }
    /**
     * (Updatable) The combination of source and target databases participating in a migration. Example: ORACLE means the migration is meant for migrating Oracle source and target databases.
     * 
     */
    @Export(name="databaseCombination", refs={String.class}, tree="[0]")
    private Output<String> databaseCombination;

    /**
     * @return (Updatable) The combination of source and target databases participating in a migration. Example: ORACLE means the migration is meant for migrating Oracle source and target databases.
     * 
     */
    public Output<String> databaseCombination() {
        return this.databaseCombination;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A user-friendly description. Does not have to be unique, and it&#39;s changeable.  Avoid entering confidential information.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) A user-friendly description. Does not have to be unique, and it&#39;s changeable.  Avoid entering confidential information.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable.  Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Database objects to exclude from migration, cannot be specified alongside &#39;includeObjects&#39;
     * 
     */
    @Export(name="excludeObjects", refs={List.class,MigrationExcludeObject.class}, tree="[0,1]")
    private Output<List<MigrationExcludeObject>> excludeObjects;

    /**
     * @return Database objects to exclude from migration, cannot be specified alongside &#39;includeObjects&#39;
     * 
     */
    public Output<List<MigrationExcludeObject>> excludeObjects() {
        return this.excludeObjects;
    }
    /**
     * The OCID of the resource being referenced.
     * 
     */
    @Export(name="executingJobId", refs={String.class}, tree="[0]")
    private Output<String> executingJobId;

    /**
     * @return The OCID of the resource being referenced.
     * 
     */
    public Output<String> executingJobId() {
        return this.executingJobId;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {&#34;Department&#34;: &#34;Finance&#34;}
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see Resource Tags. Example: {&#34;Department&#34;: &#34;Finance&#34;}
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) Optional settings for Oracle GoldenGate processes
     * 
     */
    @Export(name="ggsDetails", refs={MigrationGgsDetails.class}, tree="[0]")
    private Output<MigrationGgsDetails> ggsDetails;

    /**
     * @return (Updatable) Optional settings for Oracle GoldenGate processes
     * 
     */
    public Output<MigrationGgsDetails> ggsDetails() {
        return this.ggsDetails;
    }
    /**
     * (Updatable) Details about Oracle GoldenGate Microservices.
     * 
     */
    @Export(name="hubDetails", refs={MigrationHubDetails.class}, tree="[0]")
    private Output<MigrationHubDetails> hubDetails;

    /**
     * @return (Updatable) Details about Oracle GoldenGate Microservices.
     * 
     */
    public Output<MigrationHubDetails> hubDetails() {
        return this.hubDetails;
    }
    /**
     * Database objects to include from migration, cannot be specified alongside &#39;excludeObjects&#39;
     * 
     */
    @Export(name="includeObjects", refs={List.class,MigrationIncludeObject.class}, tree="[0,1]")
    private Output<List<MigrationIncludeObject>> includeObjects;

    /**
     * @return Database objects to include from migration, cannot be specified alongside &#39;excludeObjects&#39;
     * 
     */
    public Output<List<MigrationIncludeObject>> includeObjects() {
        return this.includeObjects;
    }
    /**
     * (Updatable) Optional settings for Data Pump Export and Import jobs
     * 
     */
    @Export(name="initialLoadSettings", refs={MigrationInitialLoadSettings.class}, tree="[0]")
    private Output<MigrationInitialLoadSettings> initialLoadSettings;

    /**
     * @return (Updatable) Optional settings for Data Pump Export and Import jobs
     * 
     */
    public Output<MigrationInitialLoadSettings> initialLoadSettings() {
        return this.initialLoadSettings;
    }
    /**
     * Additional status related to the execution and current state of the Migration.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return Additional status related to the execution and current state of the Migration.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * (Updatable) The OCID of the resource being referenced.
     * 
     */
    @Export(name="sourceContainerDatabaseConnectionId", refs={String.class}, tree="[0]")
    private Output<String> sourceContainerDatabaseConnectionId;

    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    public Output<String> sourceContainerDatabaseConnectionId() {
        return this.sourceContainerDatabaseConnectionId;
    }
    /**
     * (Updatable) The OCID of the resource being referenced.
     * 
     */
    @Export(name="sourceDatabaseConnectionId", refs={String.class}, tree="[0]")
    private Output<String> sourceDatabaseConnectionId;

    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    public Output<String> sourceDatabaseConnectionId() {
        return this.sourceDatabaseConnectionId;
    }
    /**
     * The current state of the Migration resource.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the Migration resource.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,Object>> systemTags() {
        return this.systemTags;
    }
    /**
     * (Updatable) The OCID of the resource being referenced.
     * 
     */
    @Export(name="targetDatabaseConnectionId", refs={String.class}, tree="[0]")
    private Output<String> targetDatabaseConnectionId;

    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    public Output<String> targetDatabaseConnectionId() {
        return this.targetDatabaseConnectionId;
    }
    /**
     * An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Export(name="timeLastMigration", refs={String.class}, tree="[0]")
    private Output<String> timeLastMigration;

    /**
     * @return An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Output<String> timeLastMigration() {
        return this.timeLastMigration;
    }
    /**
     * An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return An RFC3339 formatted datetime string such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * (Updatable) The type of the migration to be performed. Example: ONLINE if no downtime is preferred for a migration. This method uses Oracle GoldenGate for replication.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return (Updatable) The type of the migration to be performed. Example: ONLINE if no downtime is preferred for a migration. This method uses Oracle GoldenGate for replication.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * You can optionally pause a migration after a job phase. This property allows you to optionally specify the phase after which you can pause the migration.
     * 
     */
    @Export(name="waitAfter", refs={String.class}, tree="[0]")
    private Output<String> waitAfter;

    /**
     * @return You can optionally pause a migration after a job phase. This property allows you to optionally specify the phase after which you can pause the migration.
     * 
     */
    public Output<String> waitAfter() {
        return this.waitAfter;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Migration(String name) {
        this(name, MigrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Migration(String name, MigrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Migration(String name, MigrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DatabaseMigration/migration:Migration", name, args == null ? MigrationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Migration(String name, Output<String> id, @Nullable MigrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DatabaseMigration/migration:Migration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Migration get(String name, Output<String> id, @Nullable MigrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Migration(name, id, state, options);
    }
}
