// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseMigration.inputs.GetMigrationObjectTypesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMigrationObjectTypesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMigrationObjectTypesArgs Empty = new GetMigrationObjectTypesArgs();

    /**
     * The connection type for migration objects.
     * 
     */
    @Import(name="connectionType", required=true)
    private Output<String> connectionType;

    /**
     * @return The connection type for migration objects.
     * 
     */
    public Output<String> connectionType() {
        return this.connectionType;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetMigrationObjectTypesFilterArgs>> filters;

    public Optional<Output<List<GetMigrationObjectTypesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetMigrationObjectTypesArgs() {}

    private GetMigrationObjectTypesArgs(GetMigrationObjectTypesArgs $) {
        this.connectionType = $.connectionType;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMigrationObjectTypesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMigrationObjectTypesArgs $;

        public Builder() {
            $ = new GetMigrationObjectTypesArgs();
        }

        public Builder(GetMigrationObjectTypesArgs defaults) {
            $ = new GetMigrationObjectTypesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionType The connection type for migration objects.
         * 
         * @return builder
         * 
         */
        public Builder connectionType(Output<String> connectionType) {
            $.connectionType = connectionType;
            return this;
        }

        /**
         * @param connectionType The connection type for migration objects.
         * 
         * @return builder
         * 
         */
        public Builder connectionType(String connectionType) {
            return connectionType(Output.of(connectionType));
        }

        public Builder filters(@Nullable Output<List<GetMigrationObjectTypesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetMigrationObjectTypesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetMigrationObjectTypesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public GetMigrationObjectTypesArgs build() {
            if ($.connectionType == null) {
                throw new MissingRequiredPropertyException("GetMigrationObjectTypesArgs", "connectionType");
            }
            return $;
        }
    }

}
