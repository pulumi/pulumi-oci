// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseMigration.inputs.MigrationDataTransferMediumDetailsObjectStorageBucketArgs;
import com.pulumi.oci.DatabaseMigration.inputs.MigrationDataTransferMediumDetailsSourceArgs;
import com.pulumi.oci.DatabaseMigration.inputs.MigrationDataTransferMediumDetailsTargetArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationDataTransferMediumDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MigrationDataTransferMediumDetailsArgs Empty = new MigrationDataTransferMediumDetailsArgs();

    /**
     * (Updatable) AWS access key credentials identifier Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    @Import(name="accessKeyId")
    private @Nullable Output<String> accessKeyId;

    /**
     * @return (Updatable) AWS access key credentials identifier Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    public Optional<Output<String>> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }

    /**
     * (Updatable) Name of database link from Oracle Cloud Infrastructure database to on-premise database. ODMS will create link,  if the link does not already exist.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) Name of database link from Oracle Cloud Infrastructure database to on-premise database. ODMS will create link,  if the link does not already exist.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
     * 
     */
    @Import(name="objectStorageBucket")
    private @Nullable Output<MigrationDataTransferMediumDetailsObjectStorageBucketArgs> objectStorageBucket;

    /**
     * @return (Updatable) In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
     * 
     */
    public Optional<Output<MigrationDataTransferMediumDetailsObjectStorageBucketArgs>> objectStorageBucket() {
        return Optional.ofNullable(this.objectStorageBucket);
    }

    /**
     * (Updatable) AWS region code where the S3 bucket is located. Region code should match the documented available regions: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return (Updatable) AWS region code where the S3 bucket is located. Region code should match the documented available regions: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * (Updatable) AWS secret access key credentials Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    @Import(name="secretAccessKey")
    private @Nullable Output<String> secretAccessKey;

    /**
     * @return (Updatable) AWS secret access key credentials Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    public Optional<Output<String>> secretAccessKey() {
        return Optional.ofNullable(this.secretAccessKey);
    }

    /**
     * (Updatable) OCID of the shared storage mount target
     * 
     */
    @Import(name="sharedStorageMountTargetId")
    private @Nullable Output<String> sharedStorageMountTargetId;

    /**
     * @return (Updatable) OCID of the shared storage mount target
     * 
     */
    public Optional<Output<String>> sharedStorageMountTargetId() {
        return Optional.ofNullable(this.sharedStorageMountTargetId);
    }

    /**
     * (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
     * 
     */
    @Import(name="source")
    private @Nullable Output<MigrationDataTransferMediumDetailsSourceArgs> source;

    /**
     * @return (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
     * 
     */
    public Optional<Output<MigrationDataTransferMediumDetailsSourceArgs>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
     * 
     */
    @Import(name="target")
    private @Nullable Output<MigrationDataTransferMediumDetailsTargetArgs> target;

    /**
     * @return (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
     * 
     */
    public Optional<Output<MigrationDataTransferMediumDetailsTargetArgs>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * (Updatable) Type of the data transfer medium to use.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Type of the data transfer medium to use.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private MigrationDataTransferMediumDetailsArgs() {}

    private MigrationDataTransferMediumDetailsArgs(MigrationDataTransferMediumDetailsArgs $) {
        this.accessKeyId = $.accessKeyId;
        this.name = $.name;
        this.objectStorageBucket = $.objectStorageBucket;
        this.region = $.region;
        this.secretAccessKey = $.secretAccessKey;
        this.sharedStorageMountTargetId = $.sharedStorageMountTargetId;
        this.source = $.source;
        this.target = $.target;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationDataTransferMediumDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationDataTransferMediumDetailsArgs $;

        public Builder() {
            $ = new MigrationDataTransferMediumDetailsArgs();
        }

        public Builder(MigrationDataTransferMediumDetailsArgs defaults) {
            $ = new MigrationDataTransferMediumDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyId (Updatable) AWS access key credentials identifier Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(@Nullable Output<String> accessKeyId) {
            $.accessKeyId = accessKeyId;
            return this;
        }

        /**
         * @param accessKeyId (Updatable) AWS access key credentials identifier Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(String accessKeyId) {
            return accessKeyId(Output.of(accessKeyId));
        }

        /**
         * @param name (Updatable) Name of database link from Oracle Cloud Infrastructure database to on-premise database. ODMS will create link,  if the link does not already exist.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Name of database link from Oracle Cloud Infrastructure database to on-premise database. ODMS will create link,  if the link does not already exist.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param objectStorageBucket (Updatable) In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
         * 
         * @return builder
         * 
         */
        public Builder objectStorageBucket(@Nullable Output<MigrationDataTransferMediumDetailsObjectStorageBucketArgs> objectStorageBucket) {
            $.objectStorageBucket = objectStorageBucket;
            return this;
        }

        /**
         * @param objectStorageBucket (Updatable) In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
         * 
         * @return builder
         * 
         */
        public Builder objectStorageBucket(MigrationDataTransferMediumDetailsObjectStorageBucketArgs objectStorageBucket) {
            return objectStorageBucket(Output.of(objectStorageBucket));
        }

        /**
         * @param region (Updatable) AWS region code where the S3 bucket is located. Region code should match the documented available regions: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region (Updatable) AWS region code where the S3 bucket is located. Region code should match the documented available regions: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param secretAccessKey (Updatable) AWS secret access key credentials Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
         * 
         * @return builder
         * 
         */
        public Builder secretAccessKey(@Nullable Output<String> secretAccessKey) {
            $.secretAccessKey = secretAccessKey;
            return this;
        }

        /**
         * @param secretAccessKey (Updatable) AWS secret access key credentials Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
         * 
         * @return builder
         * 
         */
        public Builder secretAccessKey(String secretAccessKey) {
            return secretAccessKey(Output.of(secretAccessKey));
        }

        /**
         * @param sharedStorageMountTargetId (Updatable) OCID of the shared storage mount target
         * 
         * @return builder
         * 
         */
        public Builder sharedStorageMountTargetId(@Nullable Output<String> sharedStorageMountTargetId) {
            $.sharedStorageMountTargetId = sharedStorageMountTargetId;
            return this;
        }

        /**
         * @param sharedStorageMountTargetId (Updatable) OCID of the shared storage mount target
         * 
         * @return builder
         * 
         */
        public Builder sharedStorageMountTargetId(String sharedStorageMountTargetId) {
            return sharedStorageMountTargetId(Output.of(sharedStorageMountTargetId));
        }

        /**
         * @param source (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<MigrationDataTransferMediumDetailsSourceArgs> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
         * 
         * @return builder
         * 
         */
        public Builder source(MigrationDataTransferMediumDetailsSourceArgs source) {
            return source(Output.of(source));
        }

        /**
         * @param target (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<MigrationDataTransferMediumDetailsTargetArgs> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
         * 
         * @return builder
         * 
         */
        public Builder target(MigrationDataTransferMediumDetailsTargetArgs target) {
            return target(Output.of(target));
        }

        /**
         * @param type (Updatable) Type of the data transfer medium to use.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Type of the data transfer medium to use.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public MigrationDataTransferMediumDetailsArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("MigrationDataTransferMediumDetailsArgs", "type");
            }
            return $;
        }
    }

}
