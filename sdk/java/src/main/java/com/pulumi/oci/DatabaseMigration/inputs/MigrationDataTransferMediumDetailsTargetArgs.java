// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationDataTransferMediumDetailsTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final MigrationDataTransferMediumDetailsTargetArgs Empty = new MigrationDataTransferMediumDetailsTargetArgs();

    /**
     * (Updatable) Type of dump transfer to use during migration in source or target host. Default kind is CURL
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    /**
     * @return (Updatable) Type of dump transfer to use during migration in source or target host. Default kind is CURL
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }

    /**
     * (Updatable) Path to the Oracle Cloud Infrastructure CLI installation in the node.
     * 
     */
    @Import(name="ociHome")
    private @Nullable Output<String> ociHome;

    /**
     * @return (Updatable) Path to the Oracle Cloud Infrastructure CLI installation in the node.
     * 
     */
    public Optional<Output<String>> ociHome() {
        return Optional.ofNullable(this.ociHome);
    }

    /**
     * (Updatable) Directory path to Oracle Cloud Infrastructure SSL wallet location on Db server node.
     * 
     */
    @Import(name="walletLocation")
    private @Nullable Output<String> walletLocation;

    /**
     * @return (Updatable) Directory path to Oracle Cloud Infrastructure SSL wallet location on Db server node.
     * 
     */
    public Optional<Output<String>> walletLocation() {
        return Optional.ofNullable(this.walletLocation);
    }

    private MigrationDataTransferMediumDetailsTargetArgs() {}

    private MigrationDataTransferMediumDetailsTargetArgs(MigrationDataTransferMediumDetailsTargetArgs $) {
        this.kind = $.kind;
        this.ociHome = $.ociHome;
        this.walletLocation = $.walletLocation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationDataTransferMediumDetailsTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationDataTransferMediumDetailsTargetArgs $;

        public Builder() {
            $ = new MigrationDataTransferMediumDetailsTargetArgs();
        }

        public Builder(MigrationDataTransferMediumDetailsTargetArgs defaults) {
            $ = new MigrationDataTransferMediumDetailsTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kind (Updatable) Type of dump transfer to use during migration in source or target host. Default kind is CURL
         * 
         * @return builder
         * 
         */
        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind (Updatable) Type of dump transfer to use during migration in source or target host. Default kind is CURL
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param ociHome (Updatable) Path to the Oracle Cloud Infrastructure CLI installation in the node.
         * 
         * @return builder
         * 
         */
        public Builder ociHome(@Nullable Output<String> ociHome) {
            $.ociHome = ociHome;
            return this;
        }

        /**
         * @param ociHome (Updatable) Path to the Oracle Cloud Infrastructure CLI installation in the node.
         * 
         * @return builder
         * 
         */
        public Builder ociHome(String ociHome) {
            return ociHome(Output.of(ociHome));
        }

        /**
         * @param walletLocation (Updatable) Directory path to Oracle Cloud Infrastructure SSL wallet location on Db server node.
         * 
         * @return builder
         * 
         */
        public Builder walletLocation(@Nullable Output<String> walletLocation) {
            $.walletLocation = walletLocation;
            return this;
        }

        /**
         * @param walletLocation (Updatable) Directory path to Oracle Cloud Infrastructure SSL wallet location on Db server node.
         * 
         * @return builder
         * 
         */
        public Builder walletLocation(String walletLocation) {
            return walletLocation(Output.of(walletLocation));
        }

        public MigrationDataTransferMediumDetailsTargetArgs build() {
            if ($.kind == null) {
                throw new MissingRequiredPropertyException("MigrationDataTransferMediumDetailsTargetArgs", "kind");
            }
            return $;
        }
    }

}
