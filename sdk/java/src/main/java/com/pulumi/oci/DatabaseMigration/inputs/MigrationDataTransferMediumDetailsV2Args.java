// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseMigration.inputs.MigrationDataTransferMediumDetailsV2ObjectStorageBucketArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationDataTransferMediumDetailsV2Args extends com.pulumi.resources.ResourceArgs {

    public static final MigrationDataTransferMediumDetailsV2Args Empty = new MigrationDataTransferMediumDetailsV2Args();

    @Import(name="accessKeyId")
    private @Nullable Output<String> accessKeyId;

    public Optional<Output<String>> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }

    /**
     * (Updatable) Name of directory object in database
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) Name of directory object in database
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="objectStorageBucket")
    private @Nullable Output<MigrationDataTransferMediumDetailsV2ObjectStorageBucketArgs> objectStorageBucket;

    public Optional<Output<MigrationDataTransferMediumDetailsV2ObjectStorageBucketArgs>> objectStorageBucket() {
        return Optional.ofNullable(this.objectStorageBucket);
    }

    @Import(name="region")
    private @Nullable Output<String> region;

    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    @Import(name="secretAccessKey")
    private @Nullable Output<String> secretAccessKey;

    public Optional<Output<String>> secretAccessKey() {
        return Optional.ofNullable(this.secretAccessKey);
    }

    /**
     * (Updatable) Migration type.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Migration type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private MigrationDataTransferMediumDetailsV2Args() {}

    private MigrationDataTransferMediumDetailsV2Args(MigrationDataTransferMediumDetailsV2Args $) {
        this.accessKeyId = $.accessKeyId;
        this.name = $.name;
        this.objectStorageBucket = $.objectStorageBucket;
        this.region = $.region;
        this.secretAccessKey = $.secretAccessKey;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationDataTransferMediumDetailsV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationDataTransferMediumDetailsV2Args $;

        public Builder() {
            $ = new MigrationDataTransferMediumDetailsV2Args();
        }

        public Builder(MigrationDataTransferMediumDetailsV2Args defaults) {
            $ = new MigrationDataTransferMediumDetailsV2Args(Objects.requireNonNull(defaults));
        }

        public Builder accessKeyId(@Nullable Output<String> accessKeyId) {
            $.accessKeyId = accessKeyId;
            return this;
        }

        public Builder accessKeyId(String accessKeyId) {
            return accessKeyId(Output.of(accessKeyId));
        }

        /**
         * @param name (Updatable) Name of directory object in database
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Name of directory object in database
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder objectStorageBucket(@Nullable Output<MigrationDataTransferMediumDetailsV2ObjectStorageBucketArgs> objectStorageBucket) {
            $.objectStorageBucket = objectStorageBucket;
            return this;
        }

        public Builder objectStorageBucket(MigrationDataTransferMediumDetailsV2ObjectStorageBucketArgs objectStorageBucket) {
            return objectStorageBucket(Output.of(objectStorageBucket));
        }

        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder secretAccessKey(@Nullable Output<String> secretAccessKey) {
            $.secretAccessKey = secretAccessKey;
            return this;
        }

        public Builder secretAccessKey(String secretAccessKey) {
            return secretAccessKey(Output.of(secretAccessKey));
        }

        /**
         * @param type (Updatable) Migration type.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Migration type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public MigrationDataTransferMediumDetailsV2Args build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("MigrationDataTransferMediumDetailsV2Args", "type");
            }
            return $;
        }
    }

}
