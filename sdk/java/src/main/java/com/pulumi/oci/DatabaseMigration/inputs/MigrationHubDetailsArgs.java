// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseMigration.inputs.MigrationHubDetailsExtractArgs;
import com.pulumi.oci.DatabaseMigration.inputs.MigrationHubDetailsReplicatArgs;
import com.pulumi.oci.DatabaseMigration.inputs.MigrationHubDetailsRestAdminCredentialsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationHubDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MigrationHubDetailsArgs Empty = new MigrationHubDetailsArgs();

    /**
     * (Updatable) ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
     * 
     */
    @Import(name="acceptableLag")
    private @Nullable Output<Integer> acceptableLag;

    /**
     * @return (Updatable) ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
     * 
     */
    public Optional<Output<Integer>> acceptableLag() {
        return Optional.ofNullable(this.acceptableLag);
    }

    /**
     * (Updatable) The OCID of the resource being referenced.
     * 
     */
    @Import(name="computeId")
    private @Nullable Output<String> computeId;

    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    public Optional<Output<String>> computeId() {
        return Optional.ofNullable(this.computeId);
    }

    /**
     * (Updatable) Parameters for GoldenGate Extract processes.
     * 
     */
    @Import(name="extract")
    private @Nullable Output<MigrationHubDetailsExtractArgs> extract;

    /**
     * @return (Updatable) Parameters for GoldenGate Extract processes.
     * 
     */
    public Optional<Output<MigrationHubDetailsExtractArgs>> extract() {
        return Optional.ofNullable(this.extract);
    }

    /**
     * (Updatable) The OCID of the resource being referenced.
     * 
     */
    @Import(name="keyId", required=true)
    private Output<String> keyId;

    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    public Output<String> keyId() {
        return this.keyId;
    }

    /**
     * (Updatable) Parameters for GoldenGate Replicat processes.
     * 
     */
    @Import(name="replicat")
    private @Nullable Output<MigrationHubDetailsReplicatArgs> replicat;

    /**
     * @return (Updatable) Parameters for GoldenGate Replicat processes.
     * 
     */
    public Optional<Output<MigrationHubDetailsReplicatArgs>> replicat() {
        return Optional.ofNullable(this.replicat);
    }

    /**
     * (Updatable) Database Administrator Credentials details.
     * 
     */
    @Import(name="restAdminCredentials", required=true)
    private Output<MigrationHubDetailsRestAdminCredentialsArgs> restAdminCredentials;

    /**
     * @return (Updatable) Database Administrator Credentials details.
     * 
     */
    public Output<MigrationHubDetailsRestAdminCredentialsArgs> restAdminCredentials() {
        return this.restAdminCredentials;
    }

    /**
     * (Updatable) Endpoint URL.
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return (Updatable) Endpoint URL.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     * (Updatable) The OCID of the resource being referenced.
     * 
     */
    @Import(name="vaultId", required=true)
    private Output<String> vaultId;

    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    private MigrationHubDetailsArgs() {}

    private MigrationHubDetailsArgs(MigrationHubDetailsArgs $) {
        this.acceptableLag = $.acceptableLag;
        this.computeId = $.computeId;
        this.extract = $.extract;
        this.keyId = $.keyId;
        this.replicat = $.replicat;
        this.restAdminCredentials = $.restAdminCredentials;
        this.url = $.url;
        this.vaultId = $.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationHubDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationHubDetailsArgs $;

        public Builder() {
            $ = new MigrationHubDetailsArgs();
        }

        public Builder(MigrationHubDetailsArgs defaults) {
            $ = new MigrationHubDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceptableLag (Updatable) ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
         * 
         * @return builder
         * 
         */
        public Builder acceptableLag(@Nullable Output<Integer> acceptableLag) {
            $.acceptableLag = acceptableLag;
            return this;
        }

        /**
         * @param acceptableLag (Updatable) ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
         * 
         * @return builder
         * 
         */
        public Builder acceptableLag(Integer acceptableLag) {
            return acceptableLag(Output.of(acceptableLag));
        }

        /**
         * @param computeId (Updatable) The OCID of the resource being referenced.
         * 
         * @return builder
         * 
         */
        public Builder computeId(@Nullable Output<String> computeId) {
            $.computeId = computeId;
            return this;
        }

        /**
         * @param computeId (Updatable) The OCID of the resource being referenced.
         * 
         * @return builder
         * 
         */
        public Builder computeId(String computeId) {
            return computeId(Output.of(computeId));
        }

        /**
         * @param extract (Updatable) Parameters for GoldenGate Extract processes.
         * 
         * @return builder
         * 
         */
        public Builder extract(@Nullable Output<MigrationHubDetailsExtractArgs> extract) {
            $.extract = extract;
            return this;
        }

        /**
         * @param extract (Updatable) Parameters for GoldenGate Extract processes.
         * 
         * @return builder
         * 
         */
        public Builder extract(MigrationHubDetailsExtractArgs extract) {
            return extract(Output.of(extract));
        }

        /**
         * @param keyId (Updatable) The OCID of the resource being referenced.
         * 
         * @return builder
         * 
         */
        public Builder keyId(Output<String> keyId) {
            $.keyId = keyId;
            return this;
        }

        /**
         * @param keyId (Updatable) The OCID of the resource being referenced.
         * 
         * @return builder
         * 
         */
        public Builder keyId(String keyId) {
            return keyId(Output.of(keyId));
        }

        /**
         * @param replicat (Updatable) Parameters for GoldenGate Replicat processes.
         * 
         * @return builder
         * 
         */
        public Builder replicat(@Nullable Output<MigrationHubDetailsReplicatArgs> replicat) {
            $.replicat = replicat;
            return this;
        }

        /**
         * @param replicat (Updatable) Parameters for GoldenGate Replicat processes.
         * 
         * @return builder
         * 
         */
        public Builder replicat(MigrationHubDetailsReplicatArgs replicat) {
            return replicat(Output.of(replicat));
        }

        /**
         * @param restAdminCredentials (Updatable) Database Administrator Credentials details.
         * 
         * @return builder
         * 
         */
        public Builder restAdminCredentials(Output<MigrationHubDetailsRestAdminCredentialsArgs> restAdminCredentials) {
            $.restAdminCredentials = restAdminCredentials;
            return this;
        }

        /**
         * @param restAdminCredentials (Updatable) Database Administrator Credentials details.
         * 
         * @return builder
         * 
         */
        public Builder restAdminCredentials(MigrationHubDetailsRestAdminCredentialsArgs restAdminCredentials) {
            return restAdminCredentials(Output.of(restAdminCredentials));
        }

        /**
         * @param url (Updatable) Endpoint URL.
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url (Updatable) Endpoint URL.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param vaultId (Updatable) The OCID of the resource being referenced.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(Output<String> vaultId) {
            $.vaultId = vaultId;
            return this;
        }

        /**
         * @param vaultId (Updatable) The OCID of the resource being referenced.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(String vaultId) {
            return vaultId(Output.of(vaultId));
        }

        public MigrationHubDetailsArgs build() {
            if ($.keyId == null) {
                throw new MissingRequiredPropertyException("MigrationHubDetailsArgs", "keyId");
            }
            if ($.restAdminCredentials == null) {
                throw new MissingRequiredPropertyException("MigrationHubDetailsArgs", "restAdminCredentials");
            }
            if ($.url == null) {
                throw new MissingRequiredPropertyException("MigrationHubDetailsArgs", "url");
            }
            if ($.vaultId == null) {
                throw new MissingRequiredPropertyException("MigrationHubDetailsArgs", "vaultId");
            }
            return $;
        }
    }

}
