// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionSshDetails {
    /**
     * @return (Updatable) Name of the host the SSH key is valid for.
     * 
     */
    private String host;
    /**
     * @return (Updatable) Private SSH key string.
     * 
     */
    private String sshkey;
    /**
     * @return (Updatable) Sudo location
     * 
     */
    private @Nullable String sudoLocation;
    /**
     * @return (Updatable) SSH user
     * 
     */
    private String user;

    private ConnectionSshDetails() {}
    /**
     * @return (Updatable) Name of the host the SSH key is valid for.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return (Updatable) Private SSH key string.
     * 
     */
    public String sshkey() {
        return this.sshkey;
    }
    /**
     * @return (Updatable) Sudo location
     * 
     */
    public Optional<String> sudoLocation() {
        return Optional.ofNullable(this.sudoLocation);
    }
    /**
     * @return (Updatable) SSH user
     * 
     */
    public String user() {
        return this.user;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionSshDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String host;
        private String sshkey;
        private @Nullable String sudoLocation;
        private String user;
        public Builder() {}
        public Builder(ConnectionSshDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.sshkey = defaults.sshkey;
    	      this.sudoLocation = defaults.sudoLocation;
    	      this.user = defaults.user;
        }

        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("ConnectionSshDetails", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder sshkey(String sshkey) {
            if (sshkey == null) {
              throw new MissingRequiredPropertyException("ConnectionSshDetails", "sshkey");
            }
            this.sshkey = sshkey;
            return this;
        }
        @CustomType.Setter
        public Builder sudoLocation(@Nullable String sudoLocation) {

            this.sudoLocation = sudoLocation;
            return this;
        }
        @CustomType.Setter
        public Builder user(String user) {
            if (user == null) {
              throw new MissingRequiredPropertyException("ConnectionSshDetails", "user");
            }
            this.user = user;
            return this;
        }
        public ConnectionSshDetails build() {
            final var _resultValue = new ConnectionSshDetails();
            _resultValue.host = host;
            _resultValue.sshkey = sshkey;
            _resultValue.sudoLocation = sudoLocation;
            _resultValue.user = user;
            return _resultValue;
        }
    }
}
