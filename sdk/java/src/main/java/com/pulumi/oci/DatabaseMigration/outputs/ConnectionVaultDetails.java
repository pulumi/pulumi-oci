// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ConnectionVaultDetails {
    /**
     * @return (Updatable) OCID of the compartment where the secret containing the credentials will be created.
     * 
     */
    private String compartmentId;
    /**
     * @return (Updatable) OCID of the vault encryption key
     * 
     */
    private String keyId;
    /**
     * @return (Updatable) OCID of the vault
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private String vaultId;

    private ConnectionVaultDetails() {}
    /**
     * @return (Updatable) OCID of the compartment where the secret containing the credentials will be created.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return (Updatable) OCID of the vault encryption key
     * 
     */
    public String keyId() {
        return this.keyId;
    }
    /**
     * @return (Updatable) OCID of the vault
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionVaultDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String keyId;
        private String vaultId;
        public Builder() {}
        public Builder(ConnectionVaultDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.keyId = defaults.keyId;
    	      this.vaultId = defaults.vaultId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder keyId(String keyId) {
            this.keyId = Objects.requireNonNull(keyId);
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(String vaultId) {
            this.vaultId = Objects.requireNonNull(vaultId);
            return this;
        }
        public ConnectionVaultDetails build() {
            final var o = new ConnectionVaultDetails();
            o.compartmentId = compartmentId;
            o.keyId = keyId;
            o.vaultId = vaultId;
            return o;
        }
    }
}
