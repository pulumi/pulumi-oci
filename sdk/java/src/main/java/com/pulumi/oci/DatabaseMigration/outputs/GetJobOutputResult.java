// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseMigration.outputs.GetJobOutputItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobOutputResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Items in collection.
     * 
     */
    private List<GetJobOutputItem> items;
    private String jobId;

    private GetJobOutputResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Items in collection.
     * 
     */
    public List<GetJobOutputItem> items() {
        return this.items;
    }
    public String jobId() {
        return this.jobId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobOutputResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetJobOutputItem> items;
        private String jobId;
        public Builder() {}
        public Builder(GetJobOutputResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.jobId = defaults.jobId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetJobOutputItem> items) {
            this.items = Objects.requireNonNull(items);
            return this;
        }
        public Builder items(GetJobOutputItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder jobId(String jobId) {
            this.jobId = Objects.requireNonNull(jobId);
            return this;
        }
        public GetJobOutputResult build() {
            final var o = new GetJobOutputResult();
            o.id = id;
            o.items = items;
            o.jobId = jobId;
            return o;
        }
    }
}
