// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationAdvisorSetting;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationDataTransferMediumDetail;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationDataTransferMediumDetailsV2;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationDatapumpSetting;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationDumpTransferDetail;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationExcludeObject;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationGoldenGateDetail;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationGoldenGateServiceDetail;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationIncludeObject;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationVaultDetail;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMigrationResult {
    /**
     * @return Optional Pre-Migration advisor settings.
     * 
     */
    private @Nullable List<GetMigrationAdvisorSetting> advisorSettings;
    /**
     * @return The OCID of the registered on-premises ODMS Agent. Only valid for Offline Migrations.
     * 
     */
    private @Nullable String agentId;
    /**
     * @return OCID of the compartment where the secret containing the credentials will be created.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
     * 
     */
    private @Nullable String credentialsSecretId;
    private @Nullable String csvText;
    /**
     * @return Data Transfer Medium details for the Migration.
     * 
     */
    private @Nullable List<GetMigrationDataTransferMediumDetail> dataTransferMediumDetails;
    private @Nullable List<GetMigrationDataTransferMediumDetailsV2> dataTransferMediumDetailsV2s;
    /**
     * @return Optional settings for Data Pump Export and Import jobs
     * 
     */
    private @Nullable List<GetMigrationDatapumpSetting> datapumpSettings;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Migration Display Name
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Optional additional properties for dump transfer.
     * 
     */
    private @Nullable List<GetMigrationDumpTransferDetail> dumpTransferDetails;
    /**
     * @return Database objects to exclude from migration. If &#39;includeObjects&#39; are specified, only exclude object types can be specified with general wildcards (.*) for owner and objectName.
     * 
     */
    private @Nullable List<GetMigrationExcludeObject> excludeObjects;
    /**
     * @return OCID of the current ODMS Job in execution for the Migration, if any.
     * 
     */
    private @Nullable String executingJobId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Details about Oracle GoldenGate Microservices.
     * 
     */
    private @Nullable List<GetMigrationGoldenGateDetail> goldenGateDetails;
    /**
     * @return Details about Oracle GoldenGate GGS Deployment.
     * 
     */
    private @Nullable List<GetMigrationGoldenGateServiceDetail> goldenGateServiceDetails;
    /**
     * @return The OCID of the resource
     * 
     */
    private @Nullable String id;
    /**
     * @return Database objects to include from migration.
     * 
     */
    private @Nullable List<GetMigrationIncludeObject> includeObjects;
    /**
     * @return Additional status related to the execution and current state of the Migration.
     * 
     */
    private @Nullable String lifecycleDetails;
    private String migrationId;
    /**
     * @return The OCID of the Source Container Database Connection.
     * 
     */
    private @Nullable String sourceContainerDatabaseConnectionId;
    /**
     * @return The OCID of the Source Database Connection.
     * 
     */
    private @Nullable String sourceDatabaseConnectionId;
    /**
     * @return The current state of the Migration resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The OCID of the Target Database Connection.
     * 
     */
    private @Nullable String targetDatabaseConnectionId;
    /**
     * @return The time the Migration was created. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time of last Migration. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeLastMigration;
    /**
     * @return The time of the last Migration details update. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return Migration type.
     * 
     */
    private @Nullable String type;
    /**
     * @return Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
     * 
     */
    private @Nullable List<GetMigrationVaultDetail> vaultDetails;
    /**
     * @return Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
     * 
     */
    private @Nullable String waitAfter;

    private GetMigrationResult() {}
    /**
     * @return Optional Pre-Migration advisor settings.
     * 
     */
    public List<GetMigrationAdvisorSetting> advisorSettings() {
        return this.advisorSettings == null ? List.of() : this.advisorSettings;
    }
    /**
     * @return The OCID of the registered on-premises ODMS Agent. Only valid for Offline Migrations.
     * 
     */
    public Optional<String> agentId() {
        return Optional.ofNullable(this.agentId);
    }
    /**
     * @return OCID of the compartment where the secret containing the credentials will be created.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Migration credentials. Used to store GoldenGate administrator user credentials.
     * 
     */
    public Optional<String> credentialsSecretId() {
        return Optional.ofNullable(this.credentialsSecretId);
    }
    public Optional<String> csvText() {
        return Optional.ofNullable(this.csvText);
    }
    /**
     * @return Data Transfer Medium details for the Migration.
     * 
     */
    public List<GetMigrationDataTransferMediumDetail> dataTransferMediumDetails() {
        return this.dataTransferMediumDetails == null ? List.of() : this.dataTransferMediumDetails;
    }
    public List<GetMigrationDataTransferMediumDetailsV2> dataTransferMediumDetailsV2s() {
        return this.dataTransferMediumDetailsV2s == null ? List.of() : this.dataTransferMediumDetailsV2s;
    }
    /**
     * @return Optional settings for Data Pump Export and Import jobs
     * 
     */
    public List<GetMigrationDatapumpSetting> datapumpSettings() {
        return this.datapumpSettings == null ? List.of() : this.datapumpSettings;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Migration Display Name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Optional additional properties for dump transfer.
     * 
     */
    public List<GetMigrationDumpTransferDetail> dumpTransferDetails() {
        return this.dumpTransferDetails == null ? List.of() : this.dumpTransferDetails;
    }
    /**
     * @return Database objects to exclude from migration. If &#39;includeObjects&#39; are specified, only exclude object types can be specified with general wildcards (.*) for owner and objectName.
     * 
     */
    public List<GetMigrationExcludeObject> excludeObjects() {
        return this.excludeObjects == null ? List.of() : this.excludeObjects;
    }
    /**
     * @return OCID of the current ODMS Job in execution for the Migration, if any.
     * 
     */
    public Optional<String> executingJobId() {
        return Optional.ofNullable(this.executingJobId);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Details about Oracle GoldenGate Microservices.
     * 
     */
    public List<GetMigrationGoldenGateDetail> goldenGateDetails() {
        return this.goldenGateDetails == null ? List.of() : this.goldenGateDetails;
    }
    /**
     * @return Details about Oracle GoldenGate GGS Deployment.
     * 
     */
    public List<GetMigrationGoldenGateServiceDetail> goldenGateServiceDetails() {
        return this.goldenGateServiceDetails == null ? List.of() : this.goldenGateServiceDetails;
    }
    /**
     * @return The OCID of the resource
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Database objects to include from migration.
     * 
     */
    public List<GetMigrationIncludeObject> includeObjects() {
        return this.includeObjects == null ? List.of() : this.includeObjects;
    }
    /**
     * @return Additional status related to the execution and current state of the Migration.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    public String migrationId() {
        return this.migrationId;
    }
    /**
     * @return The OCID of the Source Container Database Connection.
     * 
     */
    public Optional<String> sourceContainerDatabaseConnectionId() {
        return Optional.ofNullable(this.sourceContainerDatabaseConnectionId);
    }
    /**
     * @return The OCID of the Source Database Connection.
     * 
     */
    public Optional<String> sourceDatabaseConnectionId() {
        return Optional.ofNullable(this.sourceDatabaseConnectionId);
    }
    /**
     * @return The current state of the Migration resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The OCID of the Target Database Connection.
     * 
     */
    public Optional<String> targetDatabaseConnectionId() {
        return Optional.ofNullable(this.targetDatabaseConnectionId);
    }
    /**
     * @return The time the Migration was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time of last Migration. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeLastMigration() {
        return Optional.ofNullable(this.timeLastMigration);
    }
    /**
     * @return The time of the last Migration details update. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return Migration type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
     * 
     */
    public List<GetMigrationVaultDetail> vaultDetails() {
        return this.vaultDetails == null ? List.of() : this.vaultDetails;
    }
    /**
     * @return Name of a migration phase. The Job will wait after executing this phase until the Resume Job endpoint is called.
     * 
     */
    public Optional<String> waitAfter() {
        return Optional.ofNullable(this.waitAfter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigrationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetMigrationAdvisorSetting> advisorSettings;
        private @Nullable String agentId;
        private @Nullable String compartmentId;
        private @Nullable String credentialsSecretId;
        private @Nullable String csvText;
        private @Nullable List<GetMigrationDataTransferMediumDetail> dataTransferMediumDetails;
        private @Nullable List<GetMigrationDataTransferMediumDetailsV2> dataTransferMediumDetailsV2s;
        private @Nullable List<GetMigrationDatapumpSetting> datapumpSettings;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable List<GetMigrationDumpTransferDetail> dumpTransferDetails;
        private @Nullable List<GetMigrationExcludeObject> excludeObjects;
        private @Nullable String executingJobId;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable List<GetMigrationGoldenGateDetail> goldenGateDetails;
        private @Nullable List<GetMigrationGoldenGateServiceDetail> goldenGateServiceDetails;
        private @Nullable String id;
        private @Nullable List<GetMigrationIncludeObject> includeObjects;
        private @Nullable String lifecycleDetails;
        private String migrationId;
        private @Nullable String sourceContainerDatabaseConnectionId;
        private @Nullable String sourceDatabaseConnectionId;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String targetDatabaseConnectionId;
        private @Nullable String timeCreated;
        private @Nullable String timeLastMigration;
        private @Nullable String timeUpdated;
        private @Nullable String type;
        private @Nullable List<GetMigrationVaultDetail> vaultDetails;
        private @Nullable String waitAfter;
        public Builder() {}
        public Builder(GetMigrationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advisorSettings = defaults.advisorSettings;
    	      this.agentId = defaults.agentId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.credentialsSecretId = defaults.credentialsSecretId;
    	      this.csvText = defaults.csvText;
    	      this.dataTransferMediumDetails = defaults.dataTransferMediumDetails;
    	      this.dataTransferMediumDetailsV2s = defaults.dataTransferMediumDetailsV2s;
    	      this.datapumpSettings = defaults.datapumpSettings;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.dumpTransferDetails = defaults.dumpTransferDetails;
    	      this.excludeObjects = defaults.excludeObjects;
    	      this.executingJobId = defaults.executingJobId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.goldenGateDetails = defaults.goldenGateDetails;
    	      this.goldenGateServiceDetails = defaults.goldenGateServiceDetails;
    	      this.id = defaults.id;
    	      this.includeObjects = defaults.includeObjects;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.migrationId = defaults.migrationId;
    	      this.sourceContainerDatabaseConnectionId = defaults.sourceContainerDatabaseConnectionId;
    	      this.sourceDatabaseConnectionId = defaults.sourceDatabaseConnectionId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetDatabaseConnectionId = defaults.targetDatabaseConnectionId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastMigration = defaults.timeLastMigration;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
    	      this.vaultDetails = defaults.vaultDetails;
    	      this.waitAfter = defaults.waitAfter;
        }

        @CustomType.Setter
        public Builder advisorSettings(@Nullable List<GetMigrationAdvisorSetting> advisorSettings) {
            this.advisorSettings = advisorSettings;
            return this;
        }
        public Builder advisorSettings(GetMigrationAdvisorSetting... advisorSettings) {
            return advisorSettings(List.of(advisorSettings));
        }
        @CustomType.Setter
        public Builder agentId(@Nullable String agentId) {
            this.agentId = agentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder credentialsSecretId(@Nullable String credentialsSecretId) {
            this.credentialsSecretId = credentialsSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder csvText(@Nullable String csvText) {
            this.csvText = csvText;
            return this;
        }
        @CustomType.Setter
        public Builder dataTransferMediumDetails(@Nullable List<GetMigrationDataTransferMediumDetail> dataTransferMediumDetails) {
            this.dataTransferMediumDetails = dataTransferMediumDetails;
            return this;
        }
        public Builder dataTransferMediumDetails(GetMigrationDataTransferMediumDetail... dataTransferMediumDetails) {
            return dataTransferMediumDetails(List.of(dataTransferMediumDetails));
        }
        @CustomType.Setter
        public Builder dataTransferMediumDetailsV2s(@Nullable List<GetMigrationDataTransferMediumDetailsV2> dataTransferMediumDetailsV2s) {
            this.dataTransferMediumDetailsV2s = dataTransferMediumDetailsV2s;
            return this;
        }
        public Builder dataTransferMediumDetailsV2s(GetMigrationDataTransferMediumDetailsV2... dataTransferMediumDetailsV2s) {
            return dataTransferMediumDetailsV2s(List.of(dataTransferMediumDetailsV2s));
        }
        @CustomType.Setter
        public Builder datapumpSettings(@Nullable List<GetMigrationDatapumpSetting> datapumpSettings) {
            this.datapumpSettings = datapumpSettings;
            return this;
        }
        public Builder datapumpSettings(GetMigrationDatapumpSetting... datapumpSettings) {
            return datapumpSettings(List.of(datapumpSettings));
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder dumpTransferDetails(@Nullable List<GetMigrationDumpTransferDetail> dumpTransferDetails) {
            this.dumpTransferDetails = dumpTransferDetails;
            return this;
        }
        public Builder dumpTransferDetails(GetMigrationDumpTransferDetail... dumpTransferDetails) {
            return dumpTransferDetails(List.of(dumpTransferDetails));
        }
        @CustomType.Setter
        public Builder excludeObjects(@Nullable List<GetMigrationExcludeObject> excludeObjects) {
            this.excludeObjects = excludeObjects;
            return this;
        }
        public Builder excludeObjects(GetMigrationExcludeObject... excludeObjects) {
            return excludeObjects(List.of(excludeObjects));
        }
        @CustomType.Setter
        public Builder executingJobId(@Nullable String executingJobId) {
            this.executingJobId = executingJobId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder goldenGateDetails(@Nullable List<GetMigrationGoldenGateDetail> goldenGateDetails) {
            this.goldenGateDetails = goldenGateDetails;
            return this;
        }
        public Builder goldenGateDetails(GetMigrationGoldenGateDetail... goldenGateDetails) {
            return goldenGateDetails(List.of(goldenGateDetails));
        }
        @CustomType.Setter
        public Builder goldenGateServiceDetails(@Nullable List<GetMigrationGoldenGateServiceDetail> goldenGateServiceDetails) {
            this.goldenGateServiceDetails = goldenGateServiceDetails;
            return this;
        }
        public Builder goldenGateServiceDetails(GetMigrationGoldenGateServiceDetail... goldenGateServiceDetails) {
            return goldenGateServiceDetails(List.of(goldenGateServiceDetails));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includeObjects(@Nullable List<GetMigrationIncludeObject> includeObjects) {
            this.includeObjects = includeObjects;
            return this;
        }
        public Builder includeObjects(GetMigrationIncludeObject... includeObjects) {
            return includeObjects(List.of(includeObjects));
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder migrationId(String migrationId) {
            this.migrationId = Objects.requireNonNull(migrationId);
            return this;
        }
        @CustomType.Setter
        public Builder sourceContainerDatabaseConnectionId(@Nullable String sourceContainerDatabaseConnectionId) {
            this.sourceContainerDatabaseConnectionId = sourceContainerDatabaseConnectionId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDatabaseConnectionId(@Nullable String sourceDatabaseConnectionId) {
            this.sourceDatabaseConnectionId = sourceDatabaseConnectionId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetDatabaseConnectionId(@Nullable String targetDatabaseConnectionId) {
            this.targetDatabaseConnectionId = targetDatabaseConnectionId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastMigration(@Nullable String timeLastMigration) {
            this.timeLastMigration = timeLastMigration;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vaultDetails(@Nullable List<GetMigrationVaultDetail> vaultDetails) {
            this.vaultDetails = vaultDetails;
            return this;
        }
        public Builder vaultDetails(GetMigrationVaultDetail... vaultDetails) {
            return vaultDetails(List.of(vaultDetails));
        }
        @CustomType.Setter
        public Builder waitAfter(@Nullable String waitAfter) {
            this.waitAfter = waitAfter;
            return this;
        }
        public GetMigrationResult build() {
            final var o = new GetMigrationResult();
            o.advisorSettings = advisorSettings;
            o.agentId = agentId;
            o.compartmentId = compartmentId;
            o.credentialsSecretId = credentialsSecretId;
            o.csvText = csvText;
            o.dataTransferMediumDetails = dataTransferMediumDetails;
            o.dataTransferMediumDetailsV2s = dataTransferMediumDetailsV2s;
            o.datapumpSettings = datapumpSettings;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.dumpTransferDetails = dumpTransferDetails;
            o.excludeObjects = excludeObjects;
            o.executingJobId = executingJobId;
            o.freeformTags = freeformTags;
            o.goldenGateDetails = goldenGateDetails;
            o.goldenGateServiceDetails = goldenGateServiceDetails;
            o.id = id;
            o.includeObjects = includeObjects;
            o.lifecycleDetails = lifecycleDetails;
            o.migrationId = migrationId;
            o.sourceContainerDatabaseConnectionId = sourceContainerDatabaseConnectionId;
            o.sourceDatabaseConnectionId = sourceDatabaseConnectionId;
            o.state = state;
            o.systemTags = systemTags;
            o.targetDatabaseConnectionId = targetDatabaseConnectionId;
            o.timeCreated = timeCreated;
            o.timeLastMigration = timeLastMigration;
            o.timeUpdated = timeUpdated;
            o.type = type;
            o.vaultDetails = vaultDetails;
            o.waitAfter = waitAfter;
            return o;
        }
    }
}
