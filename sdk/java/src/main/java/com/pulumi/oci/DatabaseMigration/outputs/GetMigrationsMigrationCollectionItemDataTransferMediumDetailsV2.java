// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseMigration.outputs.GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2ObjectStorageBucket;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2 {
    /**
     * @return AWS access key credentials identifier Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    private String accessKeyId;
    /**
     * @return Name of directory object in database
     * 
     */
    private String name;
    /**
     * @return In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
     * 
     */
    private List<GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2ObjectStorageBucket> objectStorageBuckets;
    /**
     * @return AWS region code where the S3 bucket is located. Region code should match the documented available regions: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions
     * 
     */
    private String region;
    /**
     * @return AWS secret access key credentials Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    private String secretAccessKey;
    /**
     * @return Migration type.
     * 
     */
    private String type;

    private GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2() {}
    /**
     * @return AWS access key credentials identifier Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    public String accessKeyId() {
        return this.accessKeyId;
    }
    /**
     * @return Name of directory object in database
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
     * 
     */
    public List<GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2ObjectStorageBucket> objectStorageBuckets() {
        return this.objectStorageBuckets;
    }
    /**
     * @return AWS region code where the S3 bucket is located. Region code should match the documented available regions: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return AWS secret access key credentials Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    public String secretAccessKey() {
        return this.secretAccessKey;
    }
    /**
     * @return Migration type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessKeyId;
        private String name;
        private List<GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2ObjectStorageBucket> objectStorageBuckets;
        private String region;
        private String secretAccessKey;
        private String type;
        public Builder() {}
        public Builder(GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKeyId = defaults.accessKeyId;
    	      this.name = defaults.name;
    	      this.objectStorageBuckets = defaults.objectStorageBuckets;
    	      this.region = defaults.region;
    	      this.secretAccessKey = defaults.secretAccessKey;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accessKeyId(String accessKeyId) {
            if (accessKeyId == null) {
              throw new MissingRequiredPropertyException("GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2", "accessKeyId");
            }
            this.accessKeyId = accessKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStorageBuckets(List<GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2ObjectStorageBucket> objectStorageBuckets) {
            if (objectStorageBuckets == null) {
              throw new MissingRequiredPropertyException("GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2", "objectStorageBuckets");
            }
            this.objectStorageBuckets = objectStorageBuckets;
            return this;
        }
        public Builder objectStorageBuckets(GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2ObjectStorageBucket... objectStorageBuckets) {
            return objectStorageBuckets(List.of(objectStorageBuckets));
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder secretAccessKey(String secretAccessKey) {
            if (secretAccessKey == null) {
              throw new MissingRequiredPropertyException("GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2", "secretAccessKey");
            }
            this.secretAccessKey = secretAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2", "type");
            }
            this.type = type;
            return this;
        }
        public GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2 build() {
            final var _resultValue = new GetMigrationsMigrationCollectionItemDataTransferMediumDetailsV2();
            _resultValue.accessKeyId = accessKeyId;
            _resultValue.name = name;
            _resultValue.objectStorageBuckets = objectStorageBuckets;
            _resultValue.region = region;
            _resultValue.secretAccessKey = secretAccessKey;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
