// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseMigration.outputs.JobProgressPhaseExtract;
import com.pulumi.oci.DatabaseMigration.outputs.JobProgressPhaseLogLocation;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobProgressPhase {
    /**
     * @return The text describing the action required to fix the issue
     * 
     */
    private @Nullable String action;
    /**
     * @return Duration of the phase in milliseconds
     * 
     */
    private @Nullable Integer durationInMs;
    /**
     * @return Summary of phase status results.
     * 
     */
    private @Nullable List<JobProgressPhaseExtract> extracts;
    /**
     * @return True if a Pre-Migration Advisor report is available for this phase. False or null if no report is available.
     * 
     */
    private @Nullable Boolean isAdvisorReportAvailable;
    /**
     * @return The text describing the root cause of the reported issue
     * 
     */
    private @Nullable String issue;
    /**
     * @return Details to access log file in the specified Object Storage bucket, if any.
     * 
     */
    private @Nullable List<JobProgressPhaseLogLocation> logLocations;
    /**
     * @return Phase name
     * 
     */
    private @Nullable String name;
    /**
     * @return Percent progress of job phase.
     * 
     */
    private @Nullable Integer progress;
    /**
     * @return Phase status
     * 
     */
    private @Nullable String status;

    private JobProgressPhase() {}
    /**
     * @return The text describing the action required to fix the issue
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return Duration of the phase in milliseconds
     * 
     */
    public Optional<Integer> durationInMs() {
        return Optional.ofNullable(this.durationInMs);
    }
    /**
     * @return Summary of phase status results.
     * 
     */
    public List<JobProgressPhaseExtract> extracts() {
        return this.extracts == null ? List.of() : this.extracts;
    }
    /**
     * @return True if a Pre-Migration Advisor report is available for this phase. False or null if no report is available.
     * 
     */
    public Optional<Boolean> isAdvisorReportAvailable() {
        return Optional.ofNullable(this.isAdvisorReportAvailable);
    }
    /**
     * @return The text describing the root cause of the reported issue
     * 
     */
    public Optional<String> issue() {
        return Optional.ofNullable(this.issue);
    }
    /**
     * @return Details to access log file in the specified Object Storage bucket, if any.
     * 
     */
    public List<JobProgressPhaseLogLocation> logLocations() {
        return this.logLocations == null ? List.of() : this.logLocations;
    }
    /**
     * @return Phase name
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Percent progress of job phase.
     * 
     */
    public Optional<Integer> progress() {
        return Optional.ofNullable(this.progress);
    }
    /**
     * @return Phase status
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobProgressPhase defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable Integer durationInMs;
        private @Nullable List<JobProgressPhaseExtract> extracts;
        private @Nullable Boolean isAdvisorReportAvailable;
        private @Nullable String issue;
        private @Nullable List<JobProgressPhaseLogLocation> logLocations;
        private @Nullable String name;
        private @Nullable Integer progress;
        private @Nullable String status;
        public Builder() {}
        public Builder(JobProgressPhase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.durationInMs = defaults.durationInMs;
    	      this.extracts = defaults.extracts;
    	      this.isAdvisorReportAvailable = defaults.isAdvisorReportAvailable;
    	      this.issue = defaults.issue;
    	      this.logLocations = defaults.logLocations;
    	      this.name = defaults.name;
    	      this.progress = defaults.progress;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder durationInMs(@Nullable Integer durationInMs) {
            this.durationInMs = durationInMs;
            return this;
        }
        @CustomType.Setter
        public Builder extracts(@Nullable List<JobProgressPhaseExtract> extracts) {
            this.extracts = extracts;
            return this;
        }
        public Builder extracts(JobProgressPhaseExtract... extracts) {
            return extracts(List.of(extracts));
        }
        @CustomType.Setter
        public Builder isAdvisorReportAvailable(@Nullable Boolean isAdvisorReportAvailable) {
            this.isAdvisorReportAvailable = isAdvisorReportAvailable;
            return this;
        }
        @CustomType.Setter
        public Builder issue(@Nullable String issue) {
            this.issue = issue;
            return this;
        }
        @CustomType.Setter
        public Builder logLocations(@Nullable List<JobProgressPhaseLogLocation> logLocations) {
            this.logLocations = logLocations;
            return this;
        }
        public Builder logLocations(JobProgressPhaseLogLocation... logLocations) {
            return logLocations(List.of(logLocations));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder progress(@Nullable Integer progress) {
            this.progress = progress;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public JobProgressPhase build() {
            final var _resultValue = new JobProgressPhase();
            _resultValue.action = action;
            _resultValue.durationInMs = durationInMs;
            _resultValue.extracts = extracts;
            _resultValue.isAdvisorReportAvailable = isAdvisorReportAvailable;
            _resultValue.issue = issue;
            _resultValue.logLocations = logLocations;
            _resultValue.name = name;
            _resultValue.progress = progress;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
