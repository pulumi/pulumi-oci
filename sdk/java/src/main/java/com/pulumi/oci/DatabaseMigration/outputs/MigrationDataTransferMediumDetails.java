// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationDataTransferMediumDetailsObjectStorageBucket;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationDataTransferMediumDetailsSource;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationDataTransferMediumDetailsTarget;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrationDataTransferMediumDetails {
    /**
     * @return (Updatable) AWS access key credentials identifier Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    private @Nullable String accessKeyId;
    /**
     * @return (Updatable) Name of database link from Oracle Cloud Infrastructure database to on-premise database. ODMS will create link,  if the link does not already exist.
     * 
     */
    private @Nullable String name;
    /**
     * @return (Updatable) In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
     * 
     */
    private @Nullable MigrationDataTransferMediumDetailsObjectStorageBucket objectStorageBucket;
    /**
     * @return (Updatable) AWS region code where the S3 bucket is located. Region code should match the documented available regions: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions
     * 
     */
    private @Nullable String region;
    /**
     * @return (Updatable) AWS secret access key credentials Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    private @Nullable String secretAccessKey;
    /**
     * @return (Updatable) OCID of the shared storage mount target
     * 
     */
    private @Nullable String sharedStorageMountTargetId;
    /**
     * @return (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
     * 
     */
    private @Nullable MigrationDataTransferMediumDetailsSource source;
    /**
     * @return (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
     * 
     */
    private @Nullable MigrationDataTransferMediumDetailsTarget target;
    /**
     * @return (Updatable) Type of the data transfer medium to use.
     * 
     */
    private String type;

    private MigrationDataTransferMediumDetails() {}
    /**
     * @return (Updatable) AWS access key credentials identifier Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    public Optional<String> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }
    /**
     * @return (Updatable) Name of database link from Oracle Cloud Infrastructure database to on-premise database. ODMS will create link,  if the link does not already exist.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return (Updatable) In lieu of a network database link, Oracle Cloud Infrastructure Object Storage bucket will be used to store Data Pump dump files for the migration. Additionally, it can be specified alongside a database link data transfer medium.
     * 
     */
    public Optional<MigrationDataTransferMediumDetailsObjectStorageBucket> objectStorageBucket() {
        return Optional.ofNullable(this.objectStorageBucket);
    }
    /**
     * @return (Updatable) AWS region code where the S3 bucket is located. Region code should match the documented available regions: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return (Updatable) AWS secret access key credentials Details: https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys
     * 
     */
    public Optional<String> secretAccessKey() {
        return Optional.ofNullable(this.secretAccessKey);
    }
    /**
     * @return (Updatable) OCID of the shared storage mount target
     * 
     */
    public Optional<String> sharedStorageMountTargetId() {
        return Optional.ofNullable(this.sharedStorageMountTargetId);
    }
    /**
     * @return (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
     * 
     */
    public Optional<MigrationDataTransferMediumDetailsSource> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return (Updatable) Optional additional properties for dump transfer in source or target host. Default kind is CURL.
     * 
     */
    public Optional<MigrationDataTransferMediumDetailsTarget> target() {
        return Optional.ofNullable(this.target);
    }
    /**
     * @return (Updatable) Type of the data transfer medium to use.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationDataTransferMediumDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessKeyId;
        private @Nullable String name;
        private @Nullable MigrationDataTransferMediumDetailsObjectStorageBucket objectStorageBucket;
        private @Nullable String region;
        private @Nullable String secretAccessKey;
        private @Nullable String sharedStorageMountTargetId;
        private @Nullable MigrationDataTransferMediumDetailsSource source;
        private @Nullable MigrationDataTransferMediumDetailsTarget target;
        private String type;
        public Builder() {}
        public Builder(MigrationDataTransferMediumDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKeyId = defaults.accessKeyId;
    	      this.name = defaults.name;
    	      this.objectStorageBucket = defaults.objectStorageBucket;
    	      this.region = defaults.region;
    	      this.secretAccessKey = defaults.secretAccessKey;
    	      this.sharedStorageMountTargetId = defaults.sharedStorageMountTargetId;
    	      this.source = defaults.source;
    	      this.target = defaults.target;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accessKeyId(@Nullable String accessKeyId) {

            this.accessKeyId = accessKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStorageBucket(@Nullable MigrationDataTransferMediumDetailsObjectStorageBucket objectStorageBucket) {

            this.objectStorageBucket = objectStorageBucket;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder secretAccessKey(@Nullable String secretAccessKey) {

            this.secretAccessKey = secretAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder sharedStorageMountTargetId(@Nullable String sharedStorageMountTargetId) {

            this.sharedStorageMountTargetId = sharedStorageMountTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable MigrationDataTransferMediumDetailsSource source) {

            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder target(@Nullable MigrationDataTransferMediumDetailsTarget target) {

            this.target = target;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("MigrationDataTransferMediumDetails", "type");
            }
            this.type = type;
            return this;
        }
        public MigrationDataTransferMediumDetails build() {
            final var _resultValue = new MigrationDataTransferMediumDetails();
            _resultValue.accessKeyId = accessKeyId;
            _resultValue.name = name;
            _resultValue.objectStorageBucket = objectStorageBucket;
            _resultValue.region = region;
            _resultValue.secretAccessKey = secretAccessKey;
            _resultValue.sharedStorageMountTargetId = sharedStorageMountTargetId;
            _resultValue.source = source;
            _resultValue.target = target;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
