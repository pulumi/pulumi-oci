// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationDataTransferMediumDetailsV2ObjectStorageBucket;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrationDataTransferMediumDetailsV2 {
    private @Nullable String accessKeyId;
    /**
     * @return (Updatable) Name of directory object in database
     * 
     */
    private @Nullable String name;
    private @Nullable MigrationDataTransferMediumDetailsV2ObjectStorageBucket objectStorageBucket;
    private @Nullable String region;
    private @Nullable String secretAccessKey;
    /**
     * @return (Updatable) Migration type.
     * 
     */
    private String type;

    private MigrationDataTransferMediumDetailsV2() {}
    public Optional<String> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }
    /**
     * @return (Updatable) Name of directory object in database
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<MigrationDataTransferMediumDetailsV2ObjectStorageBucket> objectStorageBucket() {
        return Optional.ofNullable(this.objectStorageBucket);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    public Optional<String> secretAccessKey() {
        return Optional.ofNullable(this.secretAccessKey);
    }
    /**
     * @return (Updatable) Migration type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationDataTransferMediumDetailsV2 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessKeyId;
        private @Nullable String name;
        private @Nullable MigrationDataTransferMediumDetailsV2ObjectStorageBucket objectStorageBucket;
        private @Nullable String region;
        private @Nullable String secretAccessKey;
        private String type;
        public Builder() {}
        public Builder(MigrationDataTransferMediumDetailsV2 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessKeyId = defaults.accessKeyId;
    	      this.name = defaults.name;
    	      this.objectStorageBucket = defaults.objectStorageBucket;
    	      this.region = defaults.region;
    	      this.secretAccessKey = defaults.secretAccessKey;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accessKeyId(@Nullable String accessKeyId) {
            this.accessKeyId = accessKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStorageBucket(@Nullable MigrationDataTransferMediumDetailsV2ObjectStorageBucket objectStorageBucket) {
            this.objectStorageBucket = objectStorageBucket;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder secretAccessKey(@Nullable String secretAccessKey) {
            this.secretAccessKey = secretAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public MigrationDataTransferMediumDetailsV2 build() {
            final var o = new MigrationDataTransferMediumDetailsV2();
            o.accessKeyId = accessKeyId;
            o.name = name;
            o.objectStorageBucket = objectStorageBucket;
            o.region = region;
            o.secretAccessKey = secretAccessKey;
            o.type = type;
            return o;
        }
    }
}
