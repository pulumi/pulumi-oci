// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationHubDetailsExtract;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationHubDetailsReplicat;
import com.pulumi.oci.DatabaseMigration.outputs.MigrationHubDetailsRestAdminCredentials;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrationHubDetails {
    /**
     * @return (Updatable) ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
     * 
     */
    private @Nullable Integer acceptableLag;
    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    private @Nullable String computeId;
    /**
     * @return (Updatable) Parameters for GoldenGate Extract processes.
     * 
     */
    private @Nullable MigrationHubDetailsExtract extract;
    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    private String keyId;
    /**
     * @return (Updatable) Parameters for GoldenGate Replicat processes.
     * 
     */
    private @Nullable MigrationHubDetailsReplicat replicat;
    /**
     * @return (Updatable) Database Administrator Credentials details.
     * 
     */
    private MigrationHubDetailsRestAdminCredentials restAdminCredentials;
    /**
     * @return (Updatable) Endpoint URL.
     * 
     */
    private String url;
    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    private String vaultId;

    private MigrationHubDetails() {}
    /**
     * @return (Updatable) ODMS will monitor GoldenGate end-to-end latency until the lag time is lower than the specified value in seconds.
     * 
     */
    public Optional<Integer> acceptableLag() {
        return Optional.ofNullable(this.acceptableLag);
    }
    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    public Optional<String> computeId() {
        return Optional.ofNullable(this.computeId);
    }
    /**
     * @return (Updatable) Parameters for GoldenGate Extract processes.
     * 
     */
    public Optional<MigrationHubDetailsExtract> extract() {
        return Optional.ofNullable(this.extract);
    }
    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    public String keyId() {
        return this.keyId;
    }
    /**
     * @return (Updatable) Parameters for GoldenGate Replicat processes.
     * 
     */
    public Optional<MigrationHubDetailsReplicat> replicat() {
        return Optional.ofNullable(this.replicat);
    }
    /**
     * @return (Updatable) Database Administrator Credentials details.
     * 
     */
    public MigrationHubDetailsRestAdminCredentials restAdminCredentials() {
        return this.restAdminCredentials;
    }
    /**
     * @return (Updatable) Endpoint URL.
     * 
     */
    public String url() {
        return this.url;
    }
    /**
     * @return (Updatable) The OCID of the resource being referenced.
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationHubDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer acceptableLag;
        private @Nullable String computeId;
        private @Nullable MigrationHubDetailsExtract extract;
        private String keyId;
        private @Nullable MigrationHubDetailsReplicat replicat;
        private MigrationHubDetailsRestAdminCredentials restAdminCredentials;
        private String url;
        private String vaultId;
        public Builder() {}
        public Builder(MigrationHubDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptableLag = defaults.acceptableLag;
    	      this.computeId = defaults.computeId;
    	      this.extract = defaults.extract;
    	      this.keyId = defaults.keyId;
    	      this.replicat = defaults.replicat;
    	      this.restAdminCredentials = defaults.restAdminCredentials;
    	      this.url = defaults.url;
    	      this.vaultId = defaults.vaultId;
        }

        @CustomType.Setter
        public Builder acceptableLag(@Nullable Integer acceptableLag) {

            this.acceptableLag = acceptableLag;
            return this;
        }
        @CustomType.Setter
        public Builder computeId(@Nullable String computeId) {

            this.computeId = computeId;
            return this;
        }
        @CustomType.Setter
        public Builder extract(@Nullable MigrationHubDetailsExtract extract) {

            this.extract = extract;
            return this;
        }
        @CustomType.Setter
        public Builder keyId(String keyId) {
            if (keyId == null) {
              throw new MissingRequiredPropertyException("MigrationHubDetails", "keyId");
            }
            this.keyId = keyId;
            return this;
        }
        @CustomType.Setter
        public Builder replicat(@Nullable MigrationHubDetailsReplicat replicat) {

            this.replicat = replicat;
            return this;
        }
        @CustomType.Setter
        public Builder restAdminCredentials(MigrationHubDetailsRestAdminCredentials restAdminCredentials) {
            if (restAdminCredentials == null) {
              throw new MissingRequiredPropertyException("MigrationHubDetails", "restAdminCredentials");
            }
            this.restAdminCredentials = restAdminCredentials;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("MigrationHubDetails", "url");
            }
            this.url = url;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(String vaultId) {
            if (vaultId == null) {
              throw new MissingRequiredPropertyException("MigrationHubDetails", "vaultId");
            }
            this.vaultId = vaultId;
            return this;
        }
        public MigrationHubDetails build() {
            final var _resultValue = new MigrationHubDetails();
            _resultValue.acceptableLag = acceptableLag;
            _resultValue.computeId = computeId;
            _resultValue.extract = extract;
            _resultValue.keyId = keyId;
            _resultValue.replicat = replicat;
            _resultValue.restAdminCredentials = restAdminCredentials;
            _resultValue.url = url;
            _resultValue.vaultId = vaultId;
            return _resultValue;
        }
    }
}
