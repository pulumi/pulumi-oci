// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrationInitialLoadSettingsTablespaceDetails {
    /**
     * @return (Updatable) Size of Oracle database blocks in KB.
     * 
     */
    private @Nullable String blockSizeInKbs;
    /**
     * @return (Updatable) Size to extend the tablespace in MB.  Note: Only applicable if &#39;isBigFile&#39; property is set to true.
     * 
     */
    private @Nullable Integer extendSizeInMbs;
    /**
     * @return (Updatable) Set this property to true to auto-create tablespaces in the target Database. Note: This is not applicable for Autonomous Database Serverless databases.
     * 
     */
    private @Nullable Boolean isAutoCreate;
    /**
     * @return (Updatable) Set this property to true to enable tablespace of the type big file.
     * 
     */
    private @Nullable Boolean isBigFile;
    /**
     * @return (Updatable) Name of the tablespace on the target database to which the source database tablespace is to be remapped.
     * 
     */
    private @Nullable String remapTarget;
    /**
     * @return (Updatable) Type of Database Base Migration Target.
     * 
     */
    private String targetType;

    private MigrationInitialLoadSettingsTablespaceDetails() {}
    /**
     * @return (Updatable) Size of Oracle database blocks in KB.
     * 
     */
    public Optional<String> blockSizeInKbs() {
        return Optional.ofNullable(this.blockSizeInKbs);
    }
    /**
     * @return (Updatable) Size to extend the tablespace in MB.  Note: Only applicable if &#39;isBigFile&#39; property is set to true.
     * 
     */
    public Optional<Integer> extendSizeInMbs() {
        return Optional.ofNullable(this.extendSizeInMbs);
    }
    /**
     * @return (Updatable) Set this property to true to auto-create tablespaces in the target Database. Note: This is not applicable for Autonomous Database Serverless databases.
     * 
     */
    public Optional<Boolean> isAutoCreate() {
        return Optional.ofNullable(this.isAutoCreate);
    }
    /**
     * @return (Updatable) Set this property to true to enable tablespace of the type big file.
     * 
     */
    public Optional<Boolean> isBigFile() {
        return Optional.ofNullable(this.isBigFile);
    }
    /**
     * @return (Updatable) Name of the tablespace on the target database to which the source database tablespace is to be remapped.
     * 
     */
    public Optional<String> remapTarget() {
        return Optional.ofNullable(this.remapTarget);
    }
    /**
     * @return (Updatable) Type of Database Base Migration Target.
     * 
     */
    public String targetType() {
        return this.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationInitialLoadSettingsTablespaceDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String blockSizeInKbs;
        private @Nullable Integer extendSizeInMbs;
        private @Nullable Boolean isAutoCreate;
        private @Nullable Boolean isBigFile;
        private @Nullable String remapTarget;
        private String targetType;
        public Builder() {}
        public Builder(MigrationInitialLoadSettingsTablespaceDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockSizeInKbs = defaults.blockSizeInKbs;
    	      this.extendSizeInMbs = defaults.extendSizeInMbs;
    	      this.isAutoCreate = defaults.isAutoCreate;
    	      this.isBigFile = defaults.isBigFile;
    	      this.remapTarget = defaults.remapTarget;
    	      this.targetType = defaults.targetType;
        }

        @CustomType.Setter
        public Builder blockSizeInKbs(@Nullable String blockSizeInKbs) {

            this.blockSizeInKbs = blockSizeInKbs;
            return this;
        }
        @CustomType.Setter
        public Builder extendSizeInMbs(@Nullable Integer extendSizeInMbs) {

            this.extendSizeInMbs = extendSizeInMbs;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoCreate(@Nullable Boolean isAutoCreate) {

            this.isAutoCreate = isAutoCreate;
            return this;
        }
        @CustomType.Setter
        public Builder isBigFile(@Nullable Boolean isBigFile) {

            this.isBigFile = isBigFile;
            return this;
        }
        @CustomType.Setter
        public Builder remapTarget(@Nullable String remapTarget) {

            this.remapTarget = remapTarget;
            return this;
        }
        @CustomType.Setter
        public Builder targetType(String targetType) {
            if (targetType == null) {
              throw new MissingRequiredPropertyException("MigrationInitialLoadSettingsTablespaceDetails", "targetType");
            }
            this.targetType = targetType;
            return this;
        }
        public MigrationInitialLoadSettingsTablespaceDetails build() {
            final var _resultValue = new MigrationInitialLoadSettingsTablespaceDetails();
            _resultValue.blockSizeInKbs = blockSizeInKbs;
            _resultValue.extendSizeInMbs = extendSizeInMbs;
            _resultValue.isAutoCreate = isAutoCreate;
            _resultValue.isBigFile = isBigFile;
            _resultValue.remapTarget = remapTarget;
            _resultValue.targetType = targetType;
            return _resultValue;
        }
    }
}
