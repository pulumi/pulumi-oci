// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseTools;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DatabaseTools.DatabaseToolsConnectionArgs;
import com.pulumi.oci.DatabaseTools.inputs.DatabaseToolsConnectionState;
import com.pulumi.oci.DatabaseTools.outputs.DatabaseToolsConnectionKeyStore;
import com.pulumi.oci.DatabaseTools.outputs.DatabaseToolsConnectionRelatedResource;
import com.pulumi.oci.DatabaseTools.outputs.DatabaseToolsConnectionUserPassword;
import com.pulumi.oci.Utilities;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Database Tools Connection resource in Oracle Cloud Infrastructure Database Tools service.
 * 
 * Creates a new Database Tools connection.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.DatabaseTools.DatabaseToolsConnection;
 * import com.pulumi.oci.DatabaseTools.DatabaseToolsConnectionArgs;
 * import com.pulumi.oci.DatabaseTools.inputs.DatabaseToolsConnectionKeyStoreArgs;
 * import com.pulumi.oci.DatabaseTools.inputs.DatabaseToolsConnectionKeyStoreKeyStoreContentArgs;
 * import com.pulumi.oci.DatabaseTools.inputs.DatabaseToolsConnectionKeyStoreKeyStorePasswordArgs;
 * import com.pulumi.oci.DatabaseTools.inputs.DatabaseToolsConnectionRelatedResourceArgs;
 * import com.pulumi.oci.DatabaseTools.inputs.DatabaseToolsConnectionUserPasswordArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testDatabaseToolsConnection = new DatabaseToolsConnection(&#34;testDatabaseToolsConnection&#34;, DatabaseToolsConnectionArgs.builder()        
 *             .compartmentId(var_.compartment_id())
 *             .displayName(var_.database_tools_connection_display_name())
 *             .type(var_.database_tools_connection_type())
 *             .advancedProperties(var_.database_tools_connection_advanced_properties())
 *             .connectionString(var_.database_tools_connection_connection_string())
 *             .definedTags(Map.of(&#34;foo-namespace.bar-key&#34;, &#34;value&#34;))
 *             .freeformTags(Map.of(&#34;bar-key&#34;, &#34;value&#34;))
 *             .keyStores(DatabaseToolsConnectionKeyStoreArgs.builder()
 *                 .keyStoreContent(DatabaseToolsConnectionKeyStoreKeyStoreContentArgs.builder()
 *                     .valueType(var_.database_tools_connection_key_stores_key_store_content_value_type())
 *                     .secretId(oci_vault_secret.test_secret().id())
 *                     .build())
 *                 .keyStorePassword(DatabaseToolsConnectionKeyStoreKeyStorePasswordArgs.builder()
 *                     .valueType(var_.database_tools_connection_key_stores_key_store_password_value_type())
 *                     .secretId(oci_vault_secret.test_secret().id())
 *                     .build())
 *                 .keyStoreType(var_.database_tools_connection_key_stores_key_store_type())
 *                 .build())
 *             .privateEndpointId(oci_dataflow_private_endpoint.test_private_endpoint().id())
 *             .relatedResource(DatabaseToolsConnectionRelatedResourceArgs.builder()
 *                 .entityType(var_.database_tools_connection_related_resource_entity_type())
 *                 .identifier(var_.database_tools_connection_related_resource_identifier())
 *                 .build())
 *             .userName(oci_identity_user.test_user().name())
 *             .userPassword(DatabaseToolsConnectionUserPasswordArgs.builder()
 *                 .secretId(oci_vault_secret.test_secret().id())
 *                 .valueType(var_.database_tools_connection_user_password_value_type())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * DatabaseToolsConnections can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection test_database_tools_connection &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection")
public class DatabaseToolsConnection extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
     * 
     */
    @Export(name="advancedProperties", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> advancedProperties;

    /**
     * @return (Updatable) The advanced connection properties key-value pair (e.g., `oracle.net.ssl_server_dn_match`).
     * 
     */
    public Output<Optional<Map<String,Object>>> advancedProperties() {
        return Codegen.optional(this.advancedProperties);
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the Database Tools connection.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
     * 
     */
    @Export(name="connectionString", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> connectionString;

    /**
     * @return (Updatable) The connect descriptor or Easy Connect Naming method use to connect to the database.
     * 
     */
    public Output<Optional<String>> connectionString() {
        return Codegen.optional(this.connectionString);
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> definedTags() {
        return Codegen.optional(this.definedTags);
    }
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> freeformTags() {
        return Codegen.optional(this.freeformTags);
    }
    /**
     * (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server&#39;s public certificate and the client private key and associated certificates required for client authentication.
     * 
     */
    @Export(name="keyStores", refs={List.class,DatabaseToolsConnectionKeyStore.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DatabaseToolsConnectionKeyStore>> keyStores;

    /**
     * @return (Updatable) Oracle wallet or Java Keystores containing trusted certificates for authenticating the server&#39;s public certificate and the client private key and associated certificates required for client authentication.
     * 
     */
    public Output<Optional<List<DatabaseToolsConnectionKeyStore>>> keyStores() {
        return Codegen.optional(this.keyStores);
    }
    /**
     * A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    public Output<Optional<String>> lifecycleDetails() {
        return Codegen.optional(this.lifecycleDetails);
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
     * 
     */
    @Export(name="privateEndpointId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> privateEndpointId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
     * 
     */
    public Output<Optional<String>> privateEndpointId() {
        return Codegen.optional(this.privateEndpointId);
    }
    /**
     * (Updatable) The related resource
     * 
     */
    @Export(name="relatedResource", refs={DatabaseToolsConnectionRelatedResource.class}, tree="[0]")
    private Output</* @Nullable */ DatabaseToolsConnectionRelatedResource> relatedResource;

    /**
     * @return (Updatable) The related resource
     * 
     */
    public Output<Optional<DatabaseToolsConnectionRelatedResource>> relatedResource() {
        return Codegen.optional(this.relatedResource);
    }
    /**
     * The current state of the Database Tools connection.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return The current state of the Database Tools connection.
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> systemTags() {
        return Codegen.optional(this.systemTags);
    }
    /**
     * The time the Database Tools connection was created. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeCreated;

    /**
     * @return The time the Database Tools connection was created. An RFC3339 formatted datetime string.
     * 
     */
    public Output<Optional<String>> timeCreated() {
        return Codegen.optional(this.timeCreated);
    }
    /**
     * The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeUpdated;

    /**
     * @return The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Output<Optional<String>> timeUpdated() {
        return Codegen.optional(this.timeUpdated);
    }
    /**
     * (Updatable) The DatabaseToolsConnection type.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return (Updatable) The DatabaseToolsConnection type.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * (Updatable) The database user name.
     * 
     */
    @Export(name="userName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userName;

    /**
     * @return (Updatable) The database user name.
     * 
     */
    public Output<Optional<String>> userName() {
        return Codegen.optional(this.userName);
    }
    /**
     * (Updatable) The user password.
     * 
     */
    @Export(name="userPassword", refs={DatabaseToolsConnectionUserPassword.class}, tree="[0]")
    private Output</* @Nullable */ DatabaseToolsConnectionUserPassword> userPassword;

    /**
     * @return (Updatable) The user password.
     * 
     */
    public Output<Optional<DatabaseToolsConnectionUserPassword>> userPassword() {
        return Codegen.optional(this.userPassword);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabaseToolsConnection(String name) {
        this(name, DatabaseToolsConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabaseToolsConnection(String name, DatabaseToolsConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabaseToolsConnection(String name, DatabaseToolsConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection", name, args == null ? DatabaseToolsConnectionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DatabaseToolsConnection(String name, Output<String> id, @Nullable DatabaseToolsConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DatabaseTools/databaseToolsConnection:DatabaseToolsConnection", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabaseToolsConnection get(String name, Output<String> id, @Nullable DatabaseToolsConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseToolsConnection(name, id, state, options);
    }
}
