// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseTools.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseTools.outputs.GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStore;
import com.pulumi.oci.DatabaseTools.outputs.GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemRelatedResource;
import com.pulumi.oci.DatabaseTools.outputs.GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemUserPassword;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItem {
    /**
     * @return The advanced connection properties key-value pair (for example, `oracle.net.ssl_server_dn_match`).
     * 
     */
    private @Nullable Map<String,Object> advancedProperties;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The connect descriptor or Easy Connect Naming method used to connect to the database.
     * 
     */
    private @Nullable String connectionString;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the entire specified display name.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools connection.
     * 
     */
    private @Nullable String id;
    /**
     * @return The Oracle wallet or Java Keystores containing trusted certificates for authenticating the server&#39;s public certificate and the client private key and associated certificates required for client authentication.
     * 
     */
    private @Nullable List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStore> keyStores;
    /**
     * @return A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
     * 
     */
    private @Nullable String privateEndpointId;
    /**
     * @return A related resource
     * 
     */
    private @Nullable List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemRelatedResource> relatedResources;
    /**
     * @return A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time the Database Tools connection was created. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return A filter to return only resources their type matches the specified type.
     * 
     */
    private @Nullable String type;
    /**
     * @return The database user name.
     * 
     */
    private @Nullable String userName;
    /**
     * @return The user password.
     * 
     */
    private @Nullable List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemUserPassword> userPasswords;

    private GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItem() {}
    /**
     * @return The advanced connection properties key-value pair (for example, `oracle.net.ssl_server_dn_match`).
     * 
     */
    public Map<String,Object> advancedProperties() {
        return this.advancedProperties == null ? Map.of() : this.advancedProperties;
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The connect descriptor or Easy Connect Naming method used to connect to the database.
     * 
     */
    public Optional<String> connectionString() {
        return Optional.ofNullable(this.connectionString);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire specified display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools connection.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The Oracle wallet or Java Keystores containing trusted certificates for authenticating the server&#39;s public certificate and the client private key and associated certificates required for client authentication.
     * 
     */
    public List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStore> keyStores() {
        return this.keyStores == null ? List.of() : this.keyStores;
    }
    /**
     * @return A message describing the current state in more detail. For example, this message can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint used to access the database in the customer VCN.
     * 
     */
    public Optional<String> privateEndpointId() {
        return Optional.ofNullable(this.privateEndpointId);
    }
    /**
     * @return A related resource
     * 
     */
    public List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemRelatedResource> relatedResources() {
        return this.relatedResources == null ? List.of() : this.relatedResources;
    }
    /**
     * @return A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time the Database Tools connection was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the DatabaseToolsConnection was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return A filter to return only resources their type matches the specified type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return The database user name.
     * 
     */
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }
    /**
     * @return The user password.
     * 
     */
    public List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemUserPassword> userPasswords() {
        return this.userPasswords == null ? List.of() : this.userPasswords;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> advancedProperties;
        private @Nullable String compartmentId;
        private @Nullable String connectionString;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStore> keyStores;
        private @Nullable String lifecycleDetails;
        private @Nullable String privateEndpointId;
        private @Nullable List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemRelatedResource> relatedResources;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String type;
        private @Nullable String userName;
        private @Nullable List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemUserPassword> userPasswords;
        public Builder() {}
        public Builder(GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedProperties = defaults.advancedProperties;
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionString = defaults.connectionString;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.keyStores = defaults.keyStores;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.privateEndpointId = defaults.privateEndpointId;
    	      this.relatedResources = defaults.relatedResources;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
    	      this.userName = defaults.userName;
    	      this.userPasswords = defaults.userPasswords;
        }

        @CustomType.Setter
        public Builder advancedProperties(@Nullable Map<String,Object> advancedProperties) {
            this.advancedProperties = advancedProperties;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectionString(@Nullable String connectionString) {
            this.connectionString = connectionString;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keyStores(@Nullable List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStore> keyStores) {
            this.keyStores = keyStores;
            return this;
        }
        public Builder keyStores(GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemKeyStore... keyStores) {
            return keyStores(List.of(keyStores));
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointId(@Nullable String privateEndpointId) {
            this.privateEndpointId = privateEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder relatedResources(@Nullable List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemRelatedResource> relatedResources) {
            this.relatedResources = relatedResources;
            return this;
        }
        public Builder relatedResources(GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemRelatedResource... relatedResources) {
            return relatedResources(List.of(relatedResources));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder userName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }
        @CustomType.Setter
        public Builder userPasswords(@Nullable List<GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemUserPassword> userPasswords) {
            this.userPasswords = userPasswords;
            return this;
        }
        public Builder userPasswords(GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItemUserPassword... userPasswords) {
            return userPasswords(List.of(userPasswords));
        }
        public GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItem build() {
            final var o = new GetDatabaseToolsConnectionsDatabaseToolsConnectionCollectionItem();
            o.advancedProperties = advancedProperties;
            o.compartmentId = compartmentId;
            o.connectionString = connectionString;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.keyStores = keyStores;
            o.lifecycleDetails = lifecycleDetails;
            o.privateEndpointId = privateEndpointId;
            o.relatedResources = relatedResources;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.type = type;
            o.userName = userName;
            o.userPasswords = userPasswords;
            return o;
        }
    }
}
