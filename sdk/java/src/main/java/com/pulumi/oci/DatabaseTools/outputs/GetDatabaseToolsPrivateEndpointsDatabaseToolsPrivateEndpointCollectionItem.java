// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseTools.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseTools.outputs.GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemLock;
import com.pulumi.oci.DatabaseTools.outputs.GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemReverseConnectionConfiguration;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItem {
    /**
     * @return A list of additional FQDNs that can be also be used for the private endpoint.
     * 
     */
    private List<String> additionalFqdns;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A description of the Database Tools private endpoint.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the entire specified display name.
     * 
     */
    private String displayName;
    /**
     * @return Then FQDN to use for the private endpoint.
     * 
     */
    private String endpointFqdn;
    /**
     * @return A filter to return only resources their `endpointServiceId` matches the specified `endpointServiceId`.
     * 
     */
    private String endpointServiceId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Locks associated with this resource.
     * 
     */
    private List<GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemLock> locks;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups that the private endpoint&#39;s VNIC belongs to.  For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
     * 
     */
    private List<String> nsgIds;
    /**
     * @return The private IP address that represents the access point for the associated endpoint service.
     * 
     */
    private String privateEndpointIp;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint&#39;s VNIC.
     * 
     */
    private String privateEndpointVnicId;
    /**
     * @return Reverse connection configuration details of the private endpoint.
     * 
     */
    private List<GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemReverseConnectionConfiguration> reverseConnectionConfigurations;
    /**
     * @return A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
     * 
     */
    private String state;
    /**
     * @return A filter to return only resources their `subnetId` matches the specified `subnetId`.
     * 
     */
    private String subnetId;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The time the Database Tools private endpoint was created. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;
    /**
     * @return The time the Database Tools private endpoint was updated. An RFC3339 formatted datetime string
     * 
     */
    private String timeUpdated;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN that the private endpoint belongs to.
     * 
     */
    private String vcnId;

    private GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItem() {}
    /**
     * @return A list of additional FQDNs that can be also be used for the private endpoint.
     * 
     */
    public List<String> additionalFqdns() {
        return this.additionalFqdns;
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A description of the Database Tools private endpoint.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire specified display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Then FQDN to use for the private endpoint.
     * 
     */
    public String endpointFqdn() {
        return this.endpointFqdn;
    }
    /**
     * @return A filter to return only resources their `endpointServiceId` matches the specified `endpointServiceId`.
     * 
     */
    public String endpointServiceId() {
        return this.endpointServiceId;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Tools private endpoint.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Locks associated with this resource.
     * 
     */
    public List<GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemLock> locks() {
        return this.locks;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups that the private endpoint&#39;s VNIC belongs to.  For more information about NSGs, see [NetworkSecurityGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/NetworkSecurityGroup/).
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return The private IP address that represents the access point for the associated endpoint service.
     * 
     */
    public String privateEndpointIp() {
        return this.privateEndpointIp;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the private endpoint&#39;s VNIC.
     * 
     */
    public String privateEndpointVnicId() {
        return this.privateEndpointVnicId;
    }
    /**
     * @return Reverse connection configuration details of the private endpoint.
     * 
     */
    public List<GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemReverseConnectionConfiguration> reverseConnectionConfigurations() {
        return this.reverseConnectionConfigurations;
    }
    /**
     * @return A filter to return only resources their `lifecycleState` matches the specified `lifecycleState`.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return A filter to return only resources their `subnetId` matches the specified `subnetId`.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the Database Tools private endpoint was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the Database Tools private endpoint was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN that the private endpoint belongs to.
     * 
     */
    public String vcnId() {
        return this.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> additionalFqdns;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private String endpointFqdn;
        private String endpointServiceId;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private List<GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemLock> locks;
        private List<String> nsgIds;
        private String privateEndpointIp;
        private String privateEndpointVnicId;
        private List<GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemReverseConnectionConfiguration> reverseConnectionConfigurations;
        private String state;
        private String subnetId;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String vcnId;
        public Builder() {}
        public Builder(GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalFqdns = defaults.additionalFqdns;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.endpointFqdn = defaults.endpointFqdn;
    	      this.endpointServiceId = defaults.endpointServiceId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.locks = defaults.locks;
    	      this.nsgIds = defaults.nsgIds;
    	      this.privateEndpointIp = defaults.privateEndpointIp;
    	      this.privateEndpointVnicId = defaults.privateEndpointVnicId;
    	      this.reverseConnectionConfigurations = defaults.reverseConnectionConfigurations;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder additionalFqdns(List<String> additionalFqdns) {
            this.additionalFqdns = Objects.requireNonNull(additionalFqdns);
            return this;
        }
        public Builder additionalFqdns(String... additionalFqdns) {
            return additionalFqdns(List.of(additionalFqdns));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder endpointFqdn(String endpointFqdn) {
            this.endpointFqdn = Objects.requireNonNull(endpointFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder endpointServiceId(String endpointServiceId) {
            this.endpointServiceId = Objects.requireNonNull(endpointServiceId);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder locks(List<GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemLock> locks) {
            this.locks = Objects.requireNonNull(locks);
            return this;
        }
        public Builder locks(GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemLock... locks) {
            return locks(List.of(locks));
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            this.nsgIds = Objects.requireNonNull(nsgIds);
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder privateEndpointIp(String privateEndpointIp) {
            this.privateEndpointIp = Objects.requireNonNull(privateEndpointIp);
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointVnicId(String privateEndpointVnicId) {
            this.privateEndpointVnicId = Objects.requireNonNull(privateEndpointVnicId);
            return this;
        }
        @CustomType.Setter
        public Builder reverseConnectionConfigurations(List<GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemReverseConnectionConfiguration> reverseConnectionConfigurations) {
            this.reverseConnectionConfigurations = Objects.requireNonNull(reverseConnectionConfigurations);
            return this;
        }
        public Builder reverseConnectionConfigurations(GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItemReverseConnectionConfiguration... reverseConnectionConfigurations) {
            return reverseConnectionConfigurations(List.of(reverseConnectionConfigurations));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder vcnId(String vcnId) {
            this.vcnId = Objects.requireNonNull(vcnId);
            return this;
        }
        public GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItem build() {
            final var _resultValue = new GetDatabaseToolsPrivateEndpointsDatabaseToolsPrivateEndpointCollectionItem();
            _resultValue.additionalFqdns = additionalFqdns;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.endpointFqdn = endpointFqdn;
            _resultValue.endpointServiceId = endpointServiceId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.locks = locks;
            _resultValue.nsgIds = nsgIds;
            _resultValue.privateEndpointIp = privateEndpointIp;
            _resultValue.privateEndpointVnicId = privateEndpointVnicId;
            _resultValue.reverseConnectionConfigurations = reverseConnectionConfigurations;
            _resultValue.state = state;
            _resultValue.subnetId = subnetId;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.vcnId = vcnId;
            return _resultValue;
        }
    }
}
