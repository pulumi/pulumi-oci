// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dblm.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Dblm.inputs.GetVulnerabilityAggregatedVulnerabilityDataFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVulnerabilityAggregatedVulnerabilityDataPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVulnerabilityAggregatedVulnerabilityDataPlainArgs Empty = new GetVulnerabilityAggregatedVulnerabilityDataPlainArgs();

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only database that match the given release version.
     * 
     */
    @Import(name="databaseRelease")
    private @Nullable String databaseRelease;

    /**
     * @return A filter to return only database that match the given release version.
     * 
     */
    public Optional<String> databaseRelease() {
        return Optional.ofNullable(this.databaseRelease);
    }

    @Import(name="filters")
    private @Nullable List<GetVulnerabilityAggregatedVulnerabilityDataFilter> filters;

    public Optional<List<GetVulnerabilityAggregatedVulnerabilityDataFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The created greater than.
     * 
     */
    @Import(name="timeCreatedGreaterThan")
    private @Nullable String timeCreatedGreaterThan;

    /**
     * @return The created greater than.
     * 
     */
    public Optional<String> timeCreatedGreaterThan() {
        return Optional.ofNullable(this.timeCreatedGreaterThan);
    }

    /**
     * The time ended less than.
     * 
     */
    @Import(name="timeEndedLessThan")
    private @Nullable String timeEndedLessThan;

    /**
     * @return The time ended less than.
     * 
     */
    public Optional<String> timeEndedLessThan() {
        return Optional.ofNullable(this.timeEndedLessThan);
    }

    private GetVulnerabilityAggregatedVulnerabilityDataPlainArgs() {}

    private GetVulnerabilityAggregatedVulnerabilityDataPlainArgs(GetVulnerabilityAggregatedVulnerabilityDataPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.databaseRelease = $.databaseRelease;
        this.filters = $.filters;
        this.state = $.state;
        this.timeCreatedGreaterThan = $.timeCreatedGreaterThan;
        this.timeEndedLessThan = $.timeEndedLessThan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVulnerabilityAggregatedVulnerabilityDataPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVulnerabilityAggregatedVulnerabilityDataPlainArgs $;

        public Builder() {
            $ = new GetVulnerabilityAggregatedVulnerabilityDataPlainArgs();
        }

        public Builder(GetVulnerabilityAggregatedVulnerabilityDataPlainArgs defaults) {
            $ = new GetVulnerabilityAggregatedVulnerabilityDataPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param databaseRelease A filter to return only database that match the given release version.
         * 
         * @return builder
         * 
         */
        public Builder databaseRelease(@Nullable String databaseRelease) {
            $.databaseRelease = databaseRelease;
            return this;
        }

        public Builder filters(@Nullable List<GetVulnerabilityAggregatedVulnerabilityDataFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetVulnerabilityAggregatedVulnerabilityDataFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state A filter to return only resources their lifecycleState matches the given lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param timeCreatedGreaterThan The created greater than.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedGreaterThan(@Nullable String timeCreatedGreaterThan) {
            $.timeCreatedGreaterThan = timeCreatedGreaterThan;
            return this;
        }

        /**
         * @param timeEndedLessThan The time ended less than.
         * 
         * @return builder
         * 
         */
        public Builder timeEndedLessThan(@Nullable String timeEndedLessThan) {
            $.timeEndedLessThan = timeEndedLessThan;
            return this;
        }

        public GetVulnerabilityAggregatedVulnerabilityDataPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetVulnerabilityAggregatedVulnerabilityDataPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
