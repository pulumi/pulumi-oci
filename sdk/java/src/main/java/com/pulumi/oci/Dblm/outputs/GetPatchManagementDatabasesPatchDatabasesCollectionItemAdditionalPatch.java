// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dblm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPatchManagementDatabasesPatchDatabasesCollectionItemAdditionalPatch {
    /**
     * @return Shows if patch is recommended or is an additional patch from an existing database.
     * 
     */
    private String category;
    /**
     * @return Description of the patch recommendation.
     * 
     */
    private String description;
    /**
     * @return Id for the patch recommendation.
     * 
     */
    private Integer patchId;
    /**
     * @return Name for the patch recommendation.
     * 
     */
    private String patchName;

    private GetPatchManagementDatabasesPatchDatabasesCollectionItemAdditionalPatch() {}
    /**
     * @return Shows if patch is recommended or is an additional patch from an existing database.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return Description of the patch recommendation.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Id for the patch recommendation.
     * 
     */
    public Integer patchId() {
        return this.patchId;
    }
    /**
     * @return Name for the patch recommendation.
     * 
     */
    public String patchName() {
        return this.patchName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPatchManagementDatabasesPatchDatabasesCollectionItemAdditionalPatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String category;
        private String description;
        private Integer patchId;
        private String patchName;
        public Builder() {}
        public Builder(GetPatchManagementDatabasesPatchDatabasesCollectionItemAdditionalPatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.description = defaults.description;
    	      this.patchId = defaults.patchId;
    	      this.patchName = defaults.patchName;
        }

        @CustomType.Setter
        public Builder category(String category) {
            if (category == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemAdditionalPatch", "category");
            }
            this.category = category;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemAdditionalPatch", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder patchId(Integer patchId) {
            if (patchId == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemAdditionalPatch", "patchId");
            }
            this.patchId = patchId;
            return this;
        }
        @CustomType.Setter
        public Builder patchName(String patchName) {
            if (patchName == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemAdditionalPatch", "patchName");
            }
            this.patchName = patchName;
            return this;
        }
        public GetPatchManagementDatabasesPatchDatabasesCollectionItemAdditionalPatch build() {
            final var _resultValue = new GetPatchManagementDatabasesPatchDatabasesCollectionItemAdditionalPatch();
            _resultValue.category = category;
            _resultValue.description = description;
            _resultValue.patchId = patchId;
            _resultValue.patchName = patchName;
            return _resultValue;
        }
    }
}
