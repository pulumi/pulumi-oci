// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dblm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail {
    /**
     * @return Name of the person who created the image.
     * 
     */
    private String createdBy;
    /**
     * @return Name of the image version marked as current of the image.
     * 
     */
    private String currentVersion;
    /**
     * @return Subscribed image
     * 
     */
    private String imageId;
    /**
     * @return Owner of the image.
     * 
     */
    private String imageOwner;
    /**
     * @return Image status.
     * 
     */
    private String imageStatus;
    /**
     * @return Release version of the image.
     * 
     */
    private String imageVersion;
    /**
     * @return Subscribed image.
     * 
     */
    private String subscribedImage;
    /**
     * @return Date when the image was created.
     * 
     */
    private String timeImageCreation;
    /**
     * @return An image version name, that is up to date and has no recommendations.
     * 
     */
    private String upToDateImageVersion;

    private GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail() {}
    /**
     * @return Name of the person who created the image.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Name of the image version marked as current of the image.
     * 
     */
    public String currentVersion() {
        return this.currentVersion;
    }
    /**
     * @return Subscribed image
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return Owner of the image.
     * 
     */
    public String imageOwner() {
        return this.imageOwner;
    }
    /**
     * @return Image status.
     * 
     */
    public String imageStatus() {
        return this.imageStatus;
    }
    /**
     * @return Release version of the image.
     * 
     */
    public String imageVersion() {
        return this.imageVersion;
    }
    /**
     * @return Subscribed image.
     * 
     */
    public String subscribedImage() {
        return this.subscribedImage;
    }
    /**
     * @return Date when the image was created.
     * 
     */
    public String timeImageCreation() {
        return this.timeImageCreation;
    }
    /**
     * @return An image version name, that is up to date and has no recommendations.
     * 
     */
    public String upToDateImageVersion() {
        return this.upToDateImageVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdBy;
        private String currentVersion;
        private String imageId;
        private String imageOwner;
        private String imageStatus;
        private String imageVersion;
        private String subscribedImage;
        private String timeImageCreation;
        private String upToDateImageVersion;
        public Builder() {}
        public Builder(GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdBy = defaults.createdBy;
    	      this.currentVersion = defaults.currentVersion;
    	      this.imageId = defaults.imageId;
    	      this.imageOwner = defaults.imageOwner;
    	      this.imageStatus = defaults.imageStatus;
    	      this.imageVersion = defaults.imageVersion;
    	      this.subscribedImage = defaults.subscribedImage;
    	      this.timeImageCreation = defaults.timeImageCreation;
    	      this.upToDateImageVersion = defaults.upToDateImageVersion;
        }

        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            if (createdBy == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail", "createdBy");
            }
            this.createdBy = createdBy;
            return this;
        }
        @CustomType.Setter
        public Builder currentVersion(String currentVersion) {
            if (currentVersion == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail", "currentVersion");
            }
            this.currentVersion = currentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder imageOwner(String imageOwner) {
            if (imageOwner == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail", "imageOwner");
            }
            this.imageOwner = imageOwner;
            return this;
        }
        @CustomType.Setter
        public Builder imageStatus(String imageStatus) {
            if (imageStatus == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail", "imageStatus");
            }
            this.imageStatus = imageStatus;
            return this;
        }
        @CustomType.Setter
        public Builder imageVersion(String imageVersion) {
            if (imageVersion == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail", "imageVersion");
            }
            this.imageVersion = imageVersion;
            return this;
        }
        @CustomType.Setter
        public Builder subscribedImage(String subscribedImage) {
            if (subscribedImage == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail", "subscribedImage");
            }
            this.subscribedImage = subscribedImage;
            return this;
        }
        @CustomType.Setter
        public Builder timeImageCreation(String timeImageCreation) {
            if (timeImageCreation == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail", "timeImageCreation");
            }
            this.timeImageCreation = timeImageCreation;
            return this;
        }
        @CustomType.Setter
        public Builder upToDateImageVersion(String upToDateImageVersion) {
            if (upToDateImageVersion == null) {
              throw new MissingRequiredPropertyException("GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail", "upToDateImageVersion");
            }
            this.upToDateImageVersion = upToDateImageVersion;
            return this;
        }
        public GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail build() {
            final var _resultValue = new GetPatchManagementDatabasesPatchDatabasesCollectionItemImageDetail();
            _resultValue.createdBy = createdBy;
            _resultValue.currentVersion = currentVersion;
            _resultValue.imageId = imageId;
            _resultValue.imageOwner = imageOwner;
            _resultValue.imageStatus = imageStatus;
            _resultValue.imageVersion = imageVersion;
            _resultValue.subscribedImage = subscribedImage;
            _resultValue.timeImageCreation = timeImageCreation;
            _resultValue.upToDateImageVersion = upToDateImageVersion;
            return _resultValue;
        }
    }
}
