// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dblm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Dblm.outputs.GetVulnerabilityResourcesFilter;
import com.pulumi.oci.Dblm.outputs.GetVulnerabilityResourcesVulnerabilityResourceCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVulnerabilityResourcesResult {
    private String compartmentId;
    private @Nullable String cveId;
    private @Nullable String databaseRelease;
    private @Nullable String displayName;
    private @Nullable List<GetVulnerabilityResourcesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable List<String> patchRecommendations;
    private @Nullable List<String> severityTypes;
    private @Nullable String state;
    /**
     * @return The list of vulnerability_resource_collection.
     * 
     */
    private List<GetVulnerabilityResourcesVulnerabilityResourceCollection> vulnerabilityResourceCollections;

    private GetVulnerabilityResourcesResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<String> cveId() {
        return Optional.ofNullable(this.cveId);
    }
    public Optional<String> databaseRelease() {
        return Optional.ofNullable(this.databaseRelease);
    }
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetVulnerabilityResourcesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<String> patchRecommendations() {
        return this.patchRecommendations == null ? List.of() : this.patchRecommendations;
    }
    public List<String> severityTypes() {
        return this.severityTypes == null ? List.of() : this.severityTypes;
    }
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The list of vulnerability_resource_collection.
     * 
     */
    public List<GetVulnerabilityResourcesVulnerabilityResourceCollection> vulnerabilityResourceCollections() {
        return this.vulnerabilityResourceCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityResourcesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String cveId;
        private @Nullable String databaseRelease;
        private @Nullable String displayName;
        private @Nullable List<GetVulnerabilityResourcesFilter> filters;
        private String id;
        private @Nullable List<String> patchRecommendations;
        private @Nullable List<String> severityTypes;
        private @Nullable String state;
        private List<GetVulnerabilityResourcesVulnerabilityResourceCollection> vulnerabilityResourceCollections;
        public Builder() {}
        public Builder(GetVulnerabilityResourcesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.cveId = defaults.cveId;
    	      this.databaseRelease = defaults.databaseRelease;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.patchRecommendations = defaults.patchRecommendations;
    	      this.severityTypes = defaults.severityTypes;
    	      this.state = defaults.state;
    	      this.vulnerabilityResourceCollections = defaults.vulnerabilityResourceCollections;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder cveId(@Nullable String cveId) {

            this.cveId = cveId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseRelease(@Nullable String databaseRelease) {

            this.databaseRelease = databaseRelease;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetVulnerabilityResourcesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetVulnerabilityResourcesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder patchRecommendations(@Nullable List<String> patchRecommendations) {

            this.patchRecommendations = patchRecommendations;
            return this;
        }
        public Builder patchRecommendations(String... patchRecommendations) {
            return patchRecommendations(List.of(patchRecommendations));
        }
        @CustomType.Setter
        public Builder severityTypes(@Nullable List<String> severityTypes) {

            this.severityTypes = severityTypes;
            return this;
        }
        public Builder severityTypes(String... severityTypes) {
            return severityTypes(List.of(severityTypes));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerabilityResourceCollections(List<GetVulnerabilityResourcesVulnerabilityResourceCollection> vulnerabilityResourceCollections) {
            if (vulnerabilityResourceCollections == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesResult", "vulnerabilityResourceCollections");
            }
            this.vulnerabilityResourceCollections = vulnerabilityResourceCollections;
            return this;
        }
        public Builder vulnerabilityResourceCollections(GetVulnerabilityResourcesVulnerabilityResourceCollection... vulnerabilityResourceCollections) {
            return vulnerabilityResourceCollections(List.of(vulnerabilityResourceCollections));
        }
        public GetVulnerabilityResourcesResult build() {
            final var _resultValue = new GetVulnerabilityResourcesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.cveId = cveId;
            _resultValue.databaseRelease = databaseRelease;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.patchRecommendations = patchRecommendations;
            _resultValue.severityTypes = severityTypes;
            _resultValue.state = state;
            _resultValue.vulnerabilityResourceCollections = vulnerabilityResourceCollections;
            return _resultValue;
        }
    }
}
