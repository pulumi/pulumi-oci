// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dblm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVulnerabilityResourcesSummary {
    private @Nullable Integer cleanResourcesCount;
    private @Nullable Integer errorResourcesCount;
    private Integer notRegisteredResourcesCount;
    private Integer registeredResourcesCount;
    private Integer totalResourcesCount;
    private Integer vulnerableResourcesCount;

    private GetVulnerabilityResourcesSummary() {}
    public Optional<Integer> cleanResourcesCount() {
        return Optional.ofNullable(this.cleanResourcesCount);
    }
    public Optional<Integer> errorResourcesCount() {
        return Optional.ofNullable(this.errorResourcesCount);
    }
    public Integer notRegisteredResourcesCount() {
        return this.notRegisteredResourcesCount;
    }
    public Integer registeredResourcesCount() {
        return this.registeredResourcesCount;
    }
    public Integer totalResourcesCount() {
        return this.totalResourcesCount;
    }
    public Integer vulnerableResourcesCount() {
        return this.vulnerableResourcesCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityResourcesSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer cleanResourcesCount;
        private @Nullable Integer errorResourcesCount;
        private Integer notRegisteredResourcesCount;
        private Integer registeredResourcesCount;
        private Integer totalResourcesCount;
        private Integer vulnerableResourcesCount;
        public Builder() {}
        public Builder(GetVulnerabilityResourcesSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cleanResourcesCount = defaults.cleanResourcesCount;
    	      this.errorResourcesCount = defaults.errorResourcesCount;
    	      this.notRegisteredResourcesCount = defaults.notRegisteredResourcesCount;
    	      this.registeredResourcesCount = defaults.registeredResourcesCount;
    	      this.totalResourcesCount = defaults.totalResourcesCount;
    	      this.vulnerableResourcesCount = defaults.vulnerableResourcesCount;
        }

        @CustomType.Setter
        public Builder cleanResourcesCount(@Nullable Integer cleanResourcesCount) {

            this.cleanResourcesCount = cleanResourcesCount;
            return this;
        }
        @CustomType.Setter
        public Builder errorResourcesCount(@Nullable Integer errorResourcesCount) {

            this.errorResourcesCount = errorResourcesCount;
            return this;
        }
        @CustomType.Setter
        public Builder notRegisteredResourcesCount(Integer notRegisteredResourcesCount) {
            if (notRegisteredResourcesCount == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesSummary", "notRegisteredResourcesCount");
            }
            this.notRegisteredResourcesCount = notRegisteredResourcesCount;
            return this;
        }
        @CustomType.Setter
        public Builder registeredResourcesCount(Integer registeredResourcesCount) {
            if (registeredResourcesCount == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesSummary", "registeredResourcesCount");
            }
            this.registeredResourcesCount = registeredResourcesCount;
            return this;
        }
        @CustomType.Setter
        public Builder totalResourcesCount(Integer totalResourcesCount) {
            if (totalResourcesCount == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesSummary", "totalResourcesCount");
            }
            this.totalResourcesCount = totalResourcesCount;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerableResourcesCount(Integer vulnerableResourcesCount) {
            if (vulnerableResourcesCount == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesSummary", "vulnerableResourcesCount");
            }
            this.vulnerableResourcesCount = vulnerableResourcesCount;
            return this;
        }
        public GetVulnerabilityResourcesSummary build() {
            final var _resultValue = new GetVulnerabilityResourcesSummary();
            _resultValue.cleanResourcesCount = cleanResourcesCount;
            _resultValue.errorResourcesCount = errorResourcesCount;
            _resultValue.notRegisteredResourcesCount = notRegisteredResourcesCount;
            _resultValue.registeredResourcesCount = registeredResourcesCount;
            _resultValue.totalResourcesCount = totalResourcesCount;
            _resultValue.vulnerableResourcesCount = vulnerableResourcesCount;
            return _resultValue;
        }
    }
}
