// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dblm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail {
    /**
     * @return Description of the patch recommendation.
     * 
     */
    private String abstractText;
    /**
     * @return Classification of the patch recommendation.
     * 
     */
    private String classificationName;
    /**
     * @return If the patch has a fix for a CVE.
     * 
     */
    private Boolean hasFixForCve;
    /**
     * @return Name of the patch recommendation.
     * 
     */
    private String patchName;
    /**
     * @return Evaluation date for the patch recommendation.
     * 
     */
    private String timeEvaluated;
    /**
     * @return Release date for the patch.
     * 
     */
    private String timeReleased;

    private GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail() {}
    /**
     * @return Description of the patch recommendation.
     * 
     */
    public String abstractText() {
        return this.abstractText;
    }
    /**
     * @return Classification of the patch recommendation.
     * 
     */
    public String classificationName() {
        return this.classificationName;
    }
    /**
     * @return If the patch has a fix for a CVE.
     * 
     */
    public Boolean hasFixForCve() {
        return this.hasFixForCve;
    }
    /**
     * @return Name of the patch recommendation.
     * 
     */
    public String patchName() {
        return this.patchName;
    }
    /**
     * @return Evaluation date for the patch recommendation.
     * 
     */
    public String timeEvaluated() {
        return this.timeEvaluated;
    }
    /**
     * @return Release date for the patch.
     * 
     */
    public String timeReleased() {
        return this.timeReleased;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String abstractText;
        private String classificationName;
        private Boolean hasFixForCve;
        private String patchName;
        private String timeEvaluated;
        private String timeReleased;
        public Builder() {}
        public Builder(GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abstractText = defaults.abstractText;
    	      this.classificationName = defaults.classificationName;
    	      this.hasFixForCve = defaults.hasFixForCve;
    	      this.patchName = defaults.patchName;
    	      this.timeEvaluated = defaults.timeEvaluated;
    	      this.timeReleased = defaults.timeReleased;
        }

        @CustomType.Setter
        public Builder abstractText(String abstractText) {
            if (abstractText == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail", "abstractText");
            }
            this.abstractText = abstractText;
            return this;
        }
        @CustomType.Setter
        public Builder classificationName(String classificationName) {
            if (classificationName == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail", "classificationName");
            }
            this.classificationName = classificationName;
            return this;
        }
        @CustomType.Setter
        public Builder hasFixForCve(Boolean hasFixForCve) {
            if (hasFixForCve == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail", "hasFixForCve");
            }
            this.hasFixForCve = hasFixForCve;
            return this;
        }
        @CustomType.Setter
        public Builder patchName(String patchName) {
            if (patchName == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail", "patchName");
            }
            this.patchName = patchName;
            return this;
        }
        @CustomType.Setter
        public Builder timeEvaluated(String timeEvaluated) {
            if (timeEvaluated == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail", "timeEvaluated");
            }
            this.timeEvaluated = timeEvaluated;
            return this;
        }
        @CustomType.Setter
        public Builder timeReleased(String timeReleased) {
            if (timeReleased == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail", "timeReleased");
            }
            this.timeReleased = timeReleased;
            return this;
        }
        public GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail build() {
            final var _resultValue = new GetVulnerabilityResourcesVulnerabilityResourceCollectionItemPatchRecommendationsDetail();
            _resultValue.abstractText = abstractText;
            _resultValue.classificationName = classificationName;
            _resultValue.hasFixForCve = hasFixForCve;
            _resultValue.patchName = patchName;
            _resultValue.timeEvaluated = timeEvaluated;
            _resultValue.timeReleased = timeReleased;
            return _resultValue;
        }
    }
}
