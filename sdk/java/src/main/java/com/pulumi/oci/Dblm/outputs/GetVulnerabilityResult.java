// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dblm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Dblm.outputs.GetVulnerabilityPatchRecommendationsSummary;
import com.pulumi.oci.Dblm.outputs.GetVulnerabilityResource;
import com.pulumi.oci.Dblm.outputs.GetVulnerabilityResourcesSummary;
import com.pulumi.oci.Dblm.outputs.GetVulnerabilityVulnerabilitiesSummary;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVulnerabilityResult {
    /**
     * @return Compartment Identifier.
     * 
     */
    private String compartmentId;
    private @Nullable String databaseRelease;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A message describing the status of the feature&#39;s state.
     * 
     */
    private String message;
    /**
     * @return Summary of the patch recommendations for databases.
     * 
     */
    private List<GetVulnerabilityPatchRecommendationsSummary> patchRecommendationsSummaries;
    /**
     * @return Resources objects.
     * 
     */
    private List<GetVulnerabilityResource> resources;
    /**
     * @return Summary of dblm registered and unregistered resources.
     * 
     */
    private List<GetVulnerabilityResourcesSummary> resourcesSummaries;
    /**
     * @return The current state of the feature.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time the the Vulnerability was enabled. An RFC3339 formatted datetime string.
     * 
     */
    private String timeEnabled;
    /**
     * @return Summary of vulnerabilities found in registered resources grouped by severity.
     * 
     */
    private List<GetVulnerabilityVulnerabilitiesSummary> vulnerabilitiesSummaries;

    private GetVulnerabilityResult() {}
    /**
     * @return Compartment Identifier.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<String> databaseRelease() {
        return Optional.ofNullable(this.databaseRelease);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the status of the feature&#39;s state.
     * 
     */
    public String message() {
        return this.message;
    }
    /**
     * @return Summary of the patch recommendations for databases.
     * 
     */
    public List<GetVulnerabilityPatchRecommendationsSummary> patchRecommendationsSummaries() {
        return this.patchRecommendationsSummaries;
    }
    /**
     * @return Resources objects.
     * 
     */
    public List<GetVulnerabilityResource> resources() {
        return this.resources;
    }
    /**
     * @return Summary of dblm registered and unregistered resources.
     * 
     */
    public List<GetVulnerabilityResourcesSummary> resourcesSummaries() {
        return this.resourcesSummaries;
    }
    /**
     * @return The current state of the feature.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the Vulnerability was enabled. An RFC3339 formatted datetime string.
     * 
     */
    public String timeEnabled() {
        return this.timeEnabled;
    }
    /**
     * @return Summary of vulnerabilities found in registered resources grouped by severity.
     * 
     */
    public List<GetVulnerabilityVulnerabilitiesSummary> vulnerabilitiesSummaries() {
        return this.vulnerabilitiesSummaries;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String databaseRelease;
        private Map<String,String> freeformTags;
        private String id;
        private String message;
        private List<GetVulnerabilityPatchRecommendationsSummary> patchRecommendationsSummaries;
        private List<GetVulnerabilityResource> resources;
        private List<GetVulnerabilityResourcesSummary> resourcesSummaries;
        private String state;
        private Map<String,String> systemTags;
        private String timeEnabled;
        private List<GetVulnerabilityVulnerabilitiesSummary> vulnerabilitiesSummaries;
        public Builder() {}
        public Builder(GetVulnerabilityResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseRelease = defaults.databaseRelease;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.message = defaults.message;
    	      this.patchRecommendationsSummaries = defaults.patchRecommendationsSummaries;
    	      this.resources = defaults.resources;
    	      this.resourcesSummaries = defaults.resourcesSummaries;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeEnabled = defaults.timeEnabled;
    	      this.vulnerabilitiesSummaries = defaults.vulnerabilitiesSummaries;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseRelease(@Nullable String databaseRelease) {

            this.databaseRelease = databaseRelease;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder message(String message) {
            if (message == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "message");
            }
            this.message = message;
            return this;
        }
        @CustomType.Setter
        public Builder patchRecommendationsSummaries(List<GetVulnerabilityPatchRecommendationsSummary> patchRecommendationsSummaries) {
            if (patchRecommendationsSummaries == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "patchRecommendationsSummaries");
            }
            this.patchRecommendationsSummaries = patchRecommendationsSummaries;
            return this;
        }
        public Builder patchRecommendationsSummaries(GetVulnerabilityPatchRecommendationsSummary... patchRecommendationsSummaries) {
            return patchRecommendationsSummaries(List.of(patchRecommendationsSummaries));
        }
        @CustomType.Setter
        public Builder resources(List<GetVulnerabilityResource> resources) {
            if (resources == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "resources");
            }
            this.resources = resources;
            return this;
        }
        public Builder resources(GetVulnerabilityResource... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder resourcesSummaries(List<GetVulnerabilityResourcesSummary> resourcesSummaries) {
            if (resourcesSummaries == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "resourcesSummaries");
            }
            this.resourcesSummaries = resourcesSummaries;
            return this;
        }
        public Builder resourcesSummaries(GetVulnerabilityResourcesSummary... resourcesSummaries) {
            return resourcesSummaries(List.of(resourcesSummaries));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnabled(String timeEnabled) {
            if (timeEnabled == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "timeEnabled");
            }
            this.timeEnabled = timeEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerabilitiesSummaries(List<GetVulnerabilityVulnerabilitiesSummary> vulnerabilitiesSummaries) {
            if (vulnerabilitiesSummaries == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityResult", "vulnerabilitiesSummaries");
            }
            this.vulnerabilitiesSummaries = vulnerabilitiesSummaries;
            return this;
        }
        public Builder vulnerabilitiesSummaries(GetVulnerabilityVulnerabilitiesSummary... vulnerabilitiesSummaries) {
            return vulnerabilitiesSummaries(List.of(vulnerabilitiesSummaries));
        }
        public GetVulnerabilityResult build() {
            final var _resultValue = new GetVulnerabilityResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.databaseRelease = databaseRelease;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.message = message;
            _resultValue.patchRecommendationsSummaries = patchRecommendationsSummaries;
            _resultValue.resources = resources;
            _resultValue.resourcesSummaries = resourcesSummaries;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeEnabled = timeEnabled;
            _resultValue.vulnerabilitiesSummaries = vulnerabilitiesSummaries;
            return _resultValue;
        }
    }
}
