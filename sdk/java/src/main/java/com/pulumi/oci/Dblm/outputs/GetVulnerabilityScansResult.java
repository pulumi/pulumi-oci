// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dblm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Dblm.outputs.GetVulnerabilityScansFilter;
import com.pulumi.oci.Dblm.outputs.GetVulnerabilityScansVulnerabilityScanCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVulnerabilityScansResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetVulnerabilityScansFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String timeCreatedGreaterThan;
    private @Nullable String timeEndedLessThan;
    /**
     * @return The list of vulnerability_scan_collection.
     * 
     */
    private List<GetVulnerabilityScansVulnerabilityScanCollection> vulnerabilityScanCollections;
    private @Nullable String vulnerabilityScanId;
    /**
     * @return The status of the vulnerability scan.
     * 
     */
    private @Nullable List<String> vulnerabilityScanStatuses;
    /**
     * @return Scan type is CVE, PATCH or IMAGE_PATCH
     * 
     */
    private @Nullable String vulnerabilityScanType;

    private GetVulnerabilityScansResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetVulnerabilityScansFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> timeCreatedGreaterThan() {
        return Optional.ofNullable(this.timeCreatedGreaterThan);
    }
    public Optional<String> timeEndedLessThan() {
        return Optional.ofNullable(this.timeEndedLessThan);
    }
    /**
     * @return The list of vulnerability_scan_collection.
     * 
     */
    public List<GetVulnerabilityScansVulnerabilityScanCollection> vulnerabilityScanCollections() {
        return this.vulnerabilityScanCollections;
    }
    public Optional<String> vulnerabilityScanId() {
        return Optional.ofNullable(this.vulnerabilityScanId);
    }
    /**
     * @return The status of the vulnerability scan.
     * 
     */
    public List<String> vulnerabilityScanStatuses() {
        return this.vulnerabilityScanStatuses == null ? List.of() : this.vulnerabilityScanStatuses;
    }
    /**
     * @return Scan type is CVE, PATCH or IMAGE_PATCH
     * 
     */
    public Optional<String> vulnerabilityScanType() {
        return Optional.ofNullable(this.vulnerabilityScanType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityScansResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetVulnerabilityScansFilter> filters;
        private String id;
        private @Nullable String timeCreatedGreaterThan;
        private @Nullable String timeEndedLessThan;
        private List<GetVulnerabilityScansVulnerabilityScanCollection> vulnerabilityScanCollections;
        private @Nullable String vulnerabilityScanId;
        private @Nullable List<String> vulnerabilityScanStatuses;
        private @Nullable String vulnerabilityScanType;
        public Builder() {}
        public Builder(GetVulnerabilityScansResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.timeCreatedGreaterThan = defaults.timeCreatedGreaterThan;
    	      this.timeEndedLessThan = defaults.timeEndedLessThan;
    	      this.vulnerabilityScanCollections = defaults.vulnerabilityScanCollections;
    	      this.vulnerabilityScanId = defaults.vulnerabilityScanId;
    	      this.vulnerabilityScanStatuses = defaults.vulnerabilityScanStatuses;
    	      this.vulnerabilityScanType = defaults.vulnerabilityScanType;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetVulnerabilityScansFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetVulnerabilityScansFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityScansResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedGreaterThan(@Nullable String timeCreatedGreaterThan) {

            this.timeCreatedGreaterThan = timeCreatedGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder timeEndedLessThan(@Nullable String timeEndedLessThan) {

            this.timeEndedLessThan = timeEndedLessThan;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerabilityScanCollections(List<GetVulnerabilityScansVulnerabilityScanCollection> vulnerabilityScanCollections) {
            if (vulnerabilityScanCollections == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityScansResult", "vulnerabilityScanCollections");
            }
            this.vulnerabilityScanCollections = vulnerabilityScanCollections;
            return this;
        }
        public Builder vulnerabilityScanCollections(GetVulnerabilityScansVulnerabilityScanCollection... vulnerabilityScanCollections) {
            return vulnerabilityScanCollections(List.of(vulnerabilityScanCollections));
        }
        @CustomType.Setter
        public Builder vulnerabilityScanId(@Nullable String vulnerabilityScanId) {

            this.vulnerabilityScanId = vulnerabilityScanId;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerabilityScanStatuses(@Nullable List<String> vulnerabilityScanStatuses) {

            this.vulnerabilityScanStatuses = vulnerabilityScanStatuses;
            return this;
        }
        public Builder vulnerabilityScanStatuses(String... vulnerabilityScanStatuses) {
            return vulnerabilityScanStatuses(List.of(vulnerabilityScanStatuses));
        }
        @CustomType.Setter
        public Builder vulnerabilityScanType(@Nullable String vulnerabilityScanType) {

            this.vulnerabilityScanType = vulnerabilityScanType;
            return this;
        }
        public GetVulnerabilityScansResult build() {
            final var _resultValue = new GetVulnerabilityScansResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.timeCreatedGreaterThan = timeCreatedGreaterThan;
            _resultValue.timeEndedLessThan = timeEndedLessThan;
            _resultValue.vulnerabilityScanCollections = vulnerabilityScanCollections;
            _resultValue.vulnerabilityScanId = vulnerabilityScanId;
            _resultValue.vulnerabilityScanStatuses = vulnerabilityScanStatuses;
            _resultValue.vulnerabilityScanType = vulnerabilityScanType;
            return _resultValue;
        }
    }
}
