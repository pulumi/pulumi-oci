// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dblm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetVulnerabilityVulnerabilitiesSummary {
    private Integer critical;
    private Integer high;
    private Integer info;
    private Integer low;
    private Integer medium;
    private Integer total;

    private GetVulnerabilityVulnerabilitiesSummary() {}
    public Integer critical() {
        return this.critical;
    }
    public Integer high() {
        return this.high;
    }
    public Integer info() {
        return this.info;
    }
    public Integer low() {
        return this.low;
    }
    public Integer medium() {
        return this.medium;
    }
    public Integer total() {
        return this.total;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityVulnerabilitiesSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer critical;
        private Integer high;
        private Integer info;
        private Integer low;
        private Integer medium;
        private Integer total;
        public Builder() {}
        public Builder(GetVulnerabilityVulnerabilitiesSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.critical = defaults.critical;
    	      this.high = defaults.high;
    	      this.info = defaults.info;
    	      this.low = defaults.low;
    	      this.medium = defaults.medium;
    	      this.total = defaults.total;
        }

        @CustomType.Setter
        public Builder critical(Integer critical) {
            if (critical == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesSummary", "critical");
            }
            this.critical = critical;
            return this;
        }
        @CustomType.Setter
        public Builder high(Integer high) {
            if (high == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesSummary", "high");
            }
            this.high = high;
            return this;
        }
        @CustomType.Setter
        public Builder info(Integer info) {
            if (info == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesSummary", "info");
            }
            this.info = info;
            return this;
        }
        @CustomType.Setter
        public Builder low(Integer low) {
            if (low == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesSummary", "low");
            }
            this.low = low;
            return this;
        }
        @CustomType.Setter
        public Builder medium(Integer medium) {
            if (medium == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesSummary", "medium");
            }
            this.medium = medium;
            return this;
        }
        @CustomType.Setter
        public Builder total(Integer total) {
            if (total == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesSummary", "total");
            }
            this.total = total;
            return this;
        }
        public GetVulnerabilityVulnerabilitiesSummary build() {
            final var _resultValue = new GetVulnerabilityVulnerabilitiesSummary();
            _resultValue.critical = critical;
            _resultValue.high = high;
            _resultValue.info = info;
            _resultValue.low = low;
            _resultValue.medium = medium;
            _resultValue.total = total;
            return _resultValue;
        }
    }
}
