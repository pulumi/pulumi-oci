// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dblm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem {
    /**
     * @return CVE vulnerability ID
     * 
     */
    private String cveId;
    /**
     * @return Vulnerability description
     * 
     */
    private String description;
    /**
     * @return Risk level enumeration
     * 
     */
    private String riskLevel;
    /**
     * @return Vulnerability score
     * 
     */
    private String score;
    /**
     * @return Number of vulnerable resources
     * 
     */
    private Integer vulnerableResourcesCount;

    private GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem() {}
    /**
     * @return CVE vulnerability ID
     * 
     */
    public String cveId() {
        return this.cveId;
    }
    /**
     * @return Vulnerability description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Risk level enumeration
     * 
     */
    public String riskLevel() {
        return this.riskLevel;
    }
    /**
     * @return Vulnerability score
     * 
     */
    public String score() {
        return this.score;
    }
    /**
     * @return Number of vulnerable resources
     * 
     */
    public Integer vulnerableResourcesCount() {
        return this.vulnerableResourcesCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cveId;
        private String description;
        private String riskLevel;
        private String score;
        private Integer vulnerableResourcesCount;
        public Builder() {}
        public Builder(GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cveId = defaults.cveId;
    	      this.description = defaults.description;
    	      this.riskLevel = defaults.riskLevel;
    	      this.score = defaults.score;
    	      this.vulnerableResourcesCount = defaults.vulnerableResourcesCount;
        }

        @CustomType.Setter
        public Builder cveId(String cveId) {
            if (cveId == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem", "cveId");
            }
            this.cveId = cveId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder riskLevel(String riskLevel) {
            if (riskLevel == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem", "riskLevel");
            }
            this.riskLevel = riskLevel;
            return this;
        }
        @CustomType.Setter
        public Builder score(String score) {
            if (score == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem", "score");
            }
            this.score = score;
            return this;
        }
        @CustomType.Setter
        public Builder vulnerableResourcesCount(Integer vulnerableResourcesCount) {
            if (vulnerableResourcesCount == null) {
              throw new MissingRequiredPropertyException("GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem", "vulnerableResourcesCount");
            }
            this.vulnerableResourcesCount = vulnerableResourcesCount;
            return this;
        }
        public GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem build() {
            final var _resultValue = new GetVulnerabilityVulnerabilitiesVulnerabilityCollectionItem();
            _resultValue.cveId = cveId;
            _resultValue.description = description;
            _resultValue.riskLevel = riskLevel;
            _resultValue.score = score;
            _resultValue.vulnerableResourcesCount = vulnerableResourcesCount;
            return _resultValue;
        }
    }
}
