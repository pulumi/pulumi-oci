// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DelegationControlArgs extends com.pulumi.resources.ResourceArgs {

    public static final DelegationControlArgs Empty = new DelegationControlArgs();

    /**
     * (Updatable) The OCID of the compartment that contains this Delegation Control.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that contains this Delegation Control.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) List of Delegation Subscription OCID that are allowed for this Delegation Control. The allowed subscriptions will determine the available Service Provider Actions. Only support operators for the allowed subscriptions are allowed to create Delegated Resource Access Request.
     * 
     */
    @Import(name="delegationSubscriptionIds", required=true)
    private Output<List<String>> delegationSubscriptionIds;

    /**
     * @return (Updatable) List of Delegation Subscription OCID that are allowed for this Delegation Control. The allowed subscriptions will determine the available Service Provider Actions. Only support operators for the allowed subscriptions are allowed to create Delegated Resource Access Request.
     * 
     */
    public Output<List<String>> delegationSubscriptionIds() {
        return this.delegationSubscriptionIds;
    }

    /**
     * (Updatable) Description of the Delegation Control.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description of the Delegation Control.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Name of the Delegation Control. The name does not need to be unique.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) Name of the Delegation Control. The name does not need to be unique.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Set to true to allow all Delegated Resource Access Request to be approved automatically during maintenance.
     * 
     */
    @Import(name="isAutoApproveDuringMaintenance")
    private @Nullable Output<Boolean> isAutoApproveDuringMaintenance;

    /**
     * @return (Updatable) Set to true to allow all Delegated Resource Access Request to be approved automatically during maintenance.
     * 
     */
    public Optional<Output<Boolean>> isAutoApproveDuringMaintenance() {
        return Optional.ofNullable(this.isAutoApproveDuringMaintenance);
    }

    /**
     * (Updatable) The format of the Oracle Cloud Infrastructure Notification messages for this Delegation Control.
     * 
     */
    @Import(name="notificationMessageFormat", required=true)
    private Output<String> notificationMessageFormat;

    /**
     * @return (Updatable) The format of the Oracle Cloud Infrastructure Notification messages for this Delegation Control.
     * 
     */
    public Output<String> notificationMessageFormat() {
        return this.notificationMessageFormat;
    }

    /**
     * (Updatable) The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this Delegation Control.
     * 
     */
    @Import(name="notificationTopicId", required=true)
    private Output<String> notificationTopicId;

    /**
     * @return (Updatable) The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this Delegation Control.
     * 
     */
    public Output<String> notificationTopicId() {
        return this.notificationTopicId;
    }

    /**
     * (Updatable) number of approvals required.
     * 
     */
    @Import(name="numApprovalsRequired")
    private @Nullable Output<Integer> numApprovalsRequired;

    /**
     * @return (Updatable) number of approvals required.
     * 
     */
    public Optional<Output<Integer>> numApprovalsRequired() {
        return Optional.ofNullable(this.numApprovalsRequired);
    }

    /**
     * (Updatable) List of pre-approved Service Provider Action names. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API. Delegated Resource Access Requests associated with a resource governed by this Delegation Control will be automatically approved if the Delegated Resource Access Request only contain Service Provider Actions in the pre-approved list.
     * 
     */
    @Import(name="preApprovedServiceProviderActionNames")
    private @Nullable Output<List<String>> preApprovedServiceProviderActionNames;

    /**
     * @return (Updatable) List of pre-approved Service Provider Action names. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API. Delegated Resource Access Requests associated with a resource governed by this Delegation Control will be automatically approved if the Delegated Resource Access Request only contain Service Provider Actions in the pre-approved list.
     * 
     */
    public Optional<Output<List<String>>> preApprovedServiceProviderActionNames() {
        return Optional.ofNullable(this.preApprovedServiceProviderActionNames);
    }

    /**
     * (Updatable) The OCID of the selected resources that this Delegation Control is applicable to.
     * 
     */
    @Import(name="resourceIds", required=true)
    private Output<List<String>> resourceIds;

    /**
     * @return (Updatable) The OCID of the selected resources that this Delegation Control is applicable to.
     * 
     */
    public Output<List<String>> resourceIds() {
        return this.resourceIds;
    }

    /**
     * Resource type for which the Delegation Control is applicable to.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return Resource type for which the Delegation Control is applicable to.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * The OCID of the Oracle Cloud Infrastructure Vault that will store the secrets containing the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER. Delegate Access Control Service will generate the SSH keys and store them as secrets in the Oracle Cloud Infrastructure Vault.
     * 
     */
    @Import(name="vaultId")
    private @Nullable Output<String> vaultId;

    /**
     * @return The OCID of the Oracle Cloud Infrastructure Vault that will store the secrets containing the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER. Delegate Access Control Service will generate the SSH keys and store them as secrets in the Oracle Cloud Infrastructure Vault.
     * 
     */
    public Optional<Output<String>> vaultId() {
        return Optional.ofNullable(this.vaultId);
    }

    /**
     * The OCID of the Master Encryption Key in the Oracle Cloud Infrastructure Vault specified by vaultId. This key will be used to encrypt the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="vaultKeyId")
    private @Nullable Output<String> vaultKeyId;

    /**
     * @return The OCID of the Master Encryption Key in the Oracle Cloud Infrastructure Vault specified by vaultId. This key will be used to encrypt the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> vaultKeyId() {
        return Optional.ofNullable(this.vaultKeyId);
    }

    private DelegationControlArgs() {}

    private DelegationControlArgs(DelegationControlArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.delegationSubscriptionIds = $.delegationSubscriptionIds;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isAutoApproveDuringMaintenance = $.isAutoApproveDuringMaintenance;
        this.notificationMessageFormat = $.notificationMessageFormat;
        this.notificationTopicId = $.notificationTopicId;
        this.numApprovalsRequired = $.numApprovalsRequired;
        this.preApprovedServiceProviderActionNames = $.preApprovedServiceProviderActionNames;
        this.resourceIds = $.resourceIds;
        this.resourceType = $.resourceType;
        this.vaultId = $.vaultId;
        this.vaultKeyId = $.vaultKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DelegationControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DelegationControlArgs $;

        public Builder() {
            $ = new DelegationControlArgs();
        }

        public Builder(DelegationControlArgs defaults) {
            $ = new DelegationControlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains this Delegation Control.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains this Delegation Control.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param delegationSubscriptionIds (Updatable) List of Delegation Subscription OCID that are allowed for this Delegation Control. The allowed subscriptions will determine the available Service Provider Actions. Only support operators for the allowed subscriptions are allowed to create Delegated Resource Access Request.
         * 
         * @return builder
         * 
         */
        public Builder delegationSubscriptionIds(Output<List<String>> delegationSubscriptionIds) {
            $.delegationSubscriptionIds = delegationSubscriptionIds;
            return this;
        }

        /**
         * @param delegationSubscriptionIds (Updatable) List of Delegation Subscription OCID that are allowed for this Delegation Control. The allowed subscriptions will determine the available Service Provider Actions. Only support operators for the allowed subscriptions are allowed to create Delegated Resource Access Request.
         * 
         * @return builder
         * 
         */
        public Builder delegationSubscriptionIds(List<String> delegationSubscriptionIds) {
            return delegationSubscriptionIds(Output.of(delegationSubscriptionIds));
        }

        /**
         * @param delegationSubscriptionIds (Updatable) List of Delegation Subscription OCID that are allowed for this Delegation Control. The allowed subscriptions will determine the available Service Provider Actions. Only support operators for the allowed subscriptions are allowed to create Delegated Resource Access Request.
         * 
         * @return builder
         * 
         */
        public Builder delegationSubscriptionIds(String... delegationSubscriptionIds) {
            return delegationSubscriptionIds(List.of(delegationSubscriptionIds));
        }

        /**
         * @param description (Updatable) Description of the Delegation Control.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of the Delegation Control.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) Name of the Delegation Control. The name does not need to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Name of the Delegation Control. The name does not need to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isAutoApproveDuringMaintenance (Updatable) Set to true to allow all Delegated Resource Access Request to be approved automatically during maintenance.
         * 
         * @return builder
         * 
         */
        public Builder isAutoApproveDuringMaintenance(@Nullable Output<Boolean> isAutoApproveDuringMaintenance) {
            $.isAutoApproveDuringMaintenance = isAutoApproveDuringMaintenance;
            return this;
        }

        /**
         * @param isAutoApproveDuringMaintenance (Updatable) Set to true to allow all Delegated Resource Access Request to be approved automatically during maintenance.
         * 
         * @return builder
         * 
         */
        public Builder isAutoApproveDuringMaintenance(Boolean isAutoApproveDuringMaintenance) {
            return isAutoApproveDuringMaintenance(Output.of(isAutoApproveDuringMaintenance));
        }

        /**
         * @param notificationMessageFormat (Updatable) The format of the Oracle Cloud Infrastructure Notification messages for this Delegation Control.
         * 
         * @return builder
         * 
         */
        public Builder notificationMessageFormat(Output<String> notificationMessageFormat) {
            $.notificationMessageFormat = notificationMessageFormat;
            return this;
        }

        /**
         * @param notificationMessageFormat (Updatable) The format of the Oracle Cloud Infrastructure Notification messages for this Delegation Control.
         * 
         * @return builder
         * 
         */
        public Builder notificationMessageFormat(String notificationMessageFormat) {
            return notificationMessageFormat(Output.of(notificationMessageFormat));
        }

        /**
         * @param notificationTopicId (Updatable) The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this Delegation Control.
         * 
         * @return builder
         * 
         */
        public Builder notificationTopicId(Output<String> notificationTopicId) {
            $.notificationTopicId = notificationTopicId;
            return this;
        }

        /**
         * @param notificationTopicId (Updatable) The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this Delegation Control.
         * 
         * @return builder
         * 
         */
        public Builder notificationTopicId(String notificationTopicId) {
            return notificationTopicId(Output.of(notificationTopicId));
        }

        /**
         * @param numApprovalsRequired (Updatable) number of approvals required.
         * 
         * @return builder
         * 
         */
        public Builder numApprovalsRequired(@Nullable Output<Integer> numApprovalsRequired) {
            $.numApprovalsRequired = numApprovalsRequired;
            return this;
        }

        /**
         * @param numApprovalsRequired (Updatable) number of approvals required.
         * 
         * @return builder
         * 
         */
        public Builder numApprovalsRequired(Integer numApprovalsRequired) {
            return numApprovalsRequired(Output.of(numApprovalsRequired));
        }

        /**
         * @param preApprovedServiceProviderActionNames (Updatable) List of pre-approved Service Provider Action names. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API. Delegated Resource Access Requests associated with a resource governed by this Delegation Control will be automatically approved if the Delegated Resource Access Request only contain Service Provider Actions in the pre-approved list.
         * 
         * @return builder
         * 
         */
        public Builder preApprovedServiceProviderActionNames(@Nullable Output<List<String>> preApprovedServiceProviderActionNames) {
            $.preApprovedServiceProviderActionNames = preApprovedServiceProviderActionNames;
            return this;
        }

        /**
         * @param preApprovedServiceProviderActionNames (Updatable) List of pre-approved Service Provider Action names. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API. Delegated Resource Access Requests associated with a resource governed by this Delegation Control will be automatically approved if the Delegated Resource Access Request only contain Service Provider Actions in the pre-approved list.
         * 
         * @return builder
         * 
         */
        public Builder preApprovedServiceProviderActionNames(List<String> preApprovedServiceProviderActionNames) {
            return preApprovedServiceProviderActionNames(Output.of(preApprovedServiceProviderActionNames));
        }

        /**
         * @param preApprovedServiceProviderActionNames (Updatable) List of pre-approved Service Provider Action names. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API. Delegated Resource Access Requests associated with a resource governed by this Delegation Control will be automatically approved if the Delegated Resource Access Request only contain Service Provider Actions in the pre-approved list.
         * 
         * @return builder
         * 
         */
        public Builder preApprovedServiceProviderActionNames(String... preApprovedServiceProviderActionNames) {
            return preApprovedServiceProviderActionNames(List.of(preApprovedServiceProviderActionNames));
        }

        /**
         * @param resourceIds (Updatable) The OCID of the selected resources that this Delegation Control is applicable to.
         * 
         * @return builder
         * 
         */
        public Builder resourceIds(Output<List<String>> resourceIds) {
            $.resourceIds = resourceIds;
            return this;
        }

        /**
         * @param resourceIds (Updatable) The OCID of the selected resources that this Delegation Control is applicable to.
         * 
         * @return builder
         * 
         */
        public Builder resourceIds(List<String> resourceIds) {
            return resourceIds(Output.of(resourceIds));
        }

        /**
         * @param resourceIds (Updatable) The OCID of the selected resources that this Delegation Control is applicable to.
         * 
         * @return builder
         * 
         */
        public Builder resourceIds(String... resourceIds) {
            return resourceIds(List.of(resourceIds));
        }

        /**
         * @param resourceType Resource type for which the Delegation Control is applicable to.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType Resource type for which the Delegation Control is applicable to.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param vaultId The OCID of the Oracle Cloud Infrastructure Vault that will store the secrets containing the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER. Delegate Access Control Service will generate the SSH keys and store them as secrets in the Oracle Cloud Infrastructure Vault.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(@Nullable Output<String> vaultId) {
            $.vaultId = vaultId;
            return this;
        }

        /**
         * @param vaultId The OCID of the Oracle Cloud Infrastructure Vault that will store the secrets containing the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER. Delegate Access Control Service will generate the SSH keys and store them as secrets in the Oracle Cloud Infrastructure Vault.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(String vaultId) {
            return vaultId(Output.of(vaultId));
        }

        /**
         * @param vaultKeyId The OCID of the Master Encryption Key in the Oracle Cloud Infrastructure Vault specified by vaultId. This key will be used to encrypt the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vaultKeyId(@Nullable Output<String> vaultKeyId) {
            $.vaultKeyId = vaultKeyId;
            return this;
        }

        /**
         * @param vaultKeyId The OCID of the Master Encryption Key in the Oracle Cloud Infrastructure Vault specified by vaultId. This key will be used to encrypt the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vaultKeyId(String vaultKeyId) {
            return vaultKeyId(Output.of(vaultKeyId));
        }

        public DelegationControlArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("DelegationControlArgs", "compartmentId");
            }
            if ($.delegationSubscriptionIds == null) {
                throw new MissingRequiredPropertyException("DelegationControlArgs", "delegationSubscriptionIds");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("DelegationControlArgs", "displayName");
            }
            if ($.notificationMessageFormat == null) {
                throw new MissingRequiredPropertyException("DelegationControlArgs", "notificationMessageFormat");
            }
            if ($.notificationTopicId == null) {
                throw new MissingRequiredPropertyException("DelegationControlArgs", "notificationTopicId");
            }
            if ($.resourceIds == null) {
                throw new MissingRequiredPropertyException("DelegationControlArgs", "resourceIds");
            }
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("DelegationControlArgs", "resourceType");
            }
            return $;
        }
    }

}
