// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDelegationControlArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDelegationControlArgs Empty = new GetDelegationControlArgs();

    /**
     * unique Delegation Control identifier
     * 
     */
    @Import(name="delegationControlId", required=true)
    private Output<String> delegationControlId;

    /**
     * @return unique Delegation Control identifier
     * 
     */
    public Output<String> delegationControlId() {
        return this.delegationControlId;
    }

    private GetDelegationControlArgs() {}

    private GetDelegationControlArgs(GetDelegationControlArgs $) {
        this.delegationControlId = $.delegationControlId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDelegationControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDelegationControlArgs $;

        public Builder() {
            $ = new GetDelegationControlArgs();
        }

        public Builder(GetDelegationControlArgs defaults) {
            $ = new GetDelegationControlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param delegationControlId unique Delegation Control identifier
         * 
         * @return builder
         * 
         */
        public Builder delegationControlId(Output<String> delegationControlId) {
            $.delegationControlId = delegationControlId;
            return this;
        }

        /**
         * @param delegationControlId unique Delegation Control identifier
         * 
         * @return builder
         * 
         */
        public Builder delegationControlId(String delegationControlId) {
            return delegationControlId(Output.of(delegationControlId));
        }

        public GetDelegationControlArgs build() {
            if ($.delegationControlId == null) {
                throw new MissingRequiredPropertyException("GetDelegationControlArgs", "delegationControlId");
            }
            return $;
        }
    }

}
