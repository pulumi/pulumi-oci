// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DelegateAccessControl.inputs.GetDelegationControlResourcesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDelegationControlResourcesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDelegationControlResourcesArgs Empty = new GetDelegationControlResourcesArgs();

    /**
     * unique Delegation Control identifier
     * 
     */
    @Import(name="delegationControlId", required=true)
    private Output<String> delegationControlId;

    /**
     * @return unique Delegation Control identifier
     * 
     */
    public Output<String> delegationControlId() {
        return this.delegationControlId;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetDelegationControlResourcesFilterArgs>> filters;

    public Optional<Output<List<GetDelegationControlResourcesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetDelegationControlResourcesArgs() {}

    private GetDelegationControlResourcesArgs(GetDelegationControlResourcesArgs $) {
        this.delegationControlId = $.delegationControlId;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDelegationControlResourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDelegationControlResourcesArgs $;

        public Builder() {
            $ = new GetDelegationControlResourcesArgs();
        }

        public Builder(GetDelegationControlResourcesArgs defaults) {
            $ = new GetDelegationControlResourcesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param delegationControlId unique Delegation Control identifier
         * 
         * @return builder
         * 
         */
        public Builder delegationControlId(Output<String> delegationControlId) {
            $.delegationControlId = delegationControlId;
            return this;
        }

        /**
         * @param delegationControlId unique Delegation Control identifier
         * 
         * @return builder
         * 
         */
        public Builder delegationControlId(String delegationControlId) {
            return delegationControlId(Output.of(delegationControlId));
        }

        public Builder filters(@Nullable Output<List<GetDelegationControlResourcesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetDelegationControlResourcesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetDelegationControlResourcesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public GetDelegationControlResourcesArgs build() {
            if ($.delegationControlId == null) {
                throw new MissingRequiredPropertyException("GetDelegationControlResourcesArgs", "delegationControlId");
            }
            return $;
        }
    }

}
