// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DelegateAccessControl.inputs.GetDelegationControlResourcesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDelegationControlResourcesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDelegationControlResourcesPlainArgs Empty = new GetDelegationControlResourcesPlainArgs();

    /**
     * unique Delegation Control identifier
     * 
     */
    @Import(name="delegationControlId", required=true)
    private String delegationControlId;

    /**
     * @return unique Delegation Control identifier
     * 
     */
    public String delegationControlId() {
        return this.delegationControlId;
    }

    @Import(name="filters")
    private @Nullable List<GetDelegationControlResourcesFilter> filters;

    public Optional<List<GetDelegationControlResourcesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetDelegationControlResourcesPlainArgs() {}

    private GetDelegationControlResourcesPlainArgs(GetDelegationControlResourcesPlainArgs $) {
        this.delegationControlId = $.delegationControlId;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDelegationControlResourcesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDelegationControlResourcesPlainArgs $;

        public Builder() {
            $ = new GetDelegationControlResourcesPlainArgs();
        }

        public Builder(GetDelegationControlResourcesPlainArgs defaults) {
            $ = new GetDelegationControlResourcesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param delegationControlId unique Delegation Control identifier
         * 
         * @return builder
         * 
         */
        public Builder delegationControlId(String delegationControlId) {
            $.delegationControlId = delegationControlId;
            return this;
        }

        public Builder filters(@Nullable List<GetDelegationControlResourcesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetDelegationControlResourcesFilter... filters) {
            return filters(List.of(filters));
        }

        public GetDelegationControlResourcesPlainArgs build() {
            if ($.delegationControlId == null) {
                throw new MissingRequiredPropertyException("GetDelegationControlResourcesPlainArgs", "delegationControlId");
            }
            return $;
        }
    }

}
