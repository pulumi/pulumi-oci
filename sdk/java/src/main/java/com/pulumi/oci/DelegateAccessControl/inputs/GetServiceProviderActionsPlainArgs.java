// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DelegateAccessControl.inputs.GetServiceProviderActionsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServiceProviderActionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceProviderActionsPlainArgs Empty = new GetServiceProviderActionsPlainArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetServiceProviderActionsFilter> filters;

    public Optional<List<GetServiceProviderActionsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources that match the entire name given.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return A filter to return only resources that match the entire name given.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to return only resources that match the given resource type.
     * 
     */
    @Import(name="resourceType")
    private @Nullable String resourceType;

    /**
     * @return A filter to return only resources that match the given resource type.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * A filter to return only resources that match the given Service Provider service type.
     * 
     */
    @Import(name="serviceProviderServiceTypes")
    private @Nullable List<String> serviceProviderServiceTypes;

    /**
     * @return A filter to return only resources that match the given Service Provider service type.
     * 
     */
    public Optional<List<String>> serviceProviderServiceTypes() {
        return Optional.ofNullable(this.serviceProviderServiceTypes);
    }

    /**
     * A filter to return only resources whose lifecycleState matches the given Service Provider Action lifecycleState.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only resources whose lifecycleState matches the given Service Provider Action lifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetServiceProviderActionsPlainArgs() {}

    private GetServiceProviderActionsPlainArgs(GetServiceProviderActionsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.name = $.name;
        this.resourceType = $.resourceType;
        this.serviceProviderServiceTypes = $.serviceProviderServiceTypes;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceProviderActionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceProviderActionsPlainArgs $;

        public Builder() {
            $ = new GetServiceProviderActionsPlainArgs();
        }

        public Builder(GetServiceProviderActionsPlainArgs defaults) {
            $ = new GetServiceProviderActionsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetServiceProviderActionsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetServiceProviderActionsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A filter to return only resources that match the entire name given.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param resourceType A filter to return only resources that match the given resource type.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable String resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param serviceProviderServiceTypes A filter to return only resources that match the given Service Provider service type.
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderServiceTypes(@Nullable List<String> serviceProviderServiceTypes) {
            $.serviceProviderServiceTypes = serviceProviderServiceTypes;
            return this;
        }

        /**
         * @param serviceProviderServiceTypes A filter to return only resources that match the given Service Provider service type.
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderServiceTypes(String... serviceProviderServiceTypes) {
            return serviceProviderServiceTypes(List.of(serviceProviderServiceTypes));
        }

        /**
         * @param state A filter to return only resources whose lifecycleState matches the given Service Provider Action lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetServiceProviderActionsPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetServiceProviderActionsPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
