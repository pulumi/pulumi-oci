// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetServiceProviderArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceProviderArgs Empty = new GetServiceProviderArgs();

    /**
     * unique Service Provider identifier
     * 
     */
    @Import(name="serviceProviderId", required=true)
    private Output<String> serviceProviderId;

    /**
     * @return unique Service Provider identifier
     * 
     */
    public Output<String> serviceProviderId() {
        return this.serviceProviderId;
    }

    private GetServiceProviderArgs() {}

    private GetServiceProviderArgs(GetServiceProviderArgs $) {
        this.serviceProviderId = $.serviceProviderId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceProviderArgs $;

        public Builder() {
            $ = new GetServiceProviderArgs();
        }

        public Builder(GetServiceProviderArgs defaults) {
            $ = new GetServiceProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param serviceProviderId unique Service Provider identifier
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderId(Output<String> serviceProviderId) {
            $.serviceProviderId = serviceProviderId;
            return this;
        }

        /**
         * @param serviceProviderId unique Service Provider identifier
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderId(String serviceProviderId) {
            return serviceProviderId(Output.of(serviceProviderId));
        }

        public GetServiceProviderArgs build() {
            if ($.serviceProviderId == null) {
                throw new MissingRequiredPropertyException("GetServiceProviderArgs", "serviceProviderId");
            }
            return $;
        }
    }

}
