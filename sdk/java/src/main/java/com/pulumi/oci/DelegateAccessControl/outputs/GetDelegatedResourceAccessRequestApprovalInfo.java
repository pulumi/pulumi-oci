// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDelegatedResourceAccessRequestApprovalInfo {
    /**
     * @return Indicated whether the request is approved or rejected.
     * 
     */
    private String approvalAction;
    /**
     * @return approval type, initial or extension
     * 
     */
    private String approvalType;
    /**
     * @return Additional message specified by the approver of the request.
     * 
     */
    private String approverAdditionalMessage;
    /**
     * @return Comment specified by the approver of the request.
     * 
     */
    private String approverComment;
    /**
     * @return User ID of the approver.
     * 
     */
    private String approverId;
    /**
     * @return Access start time that is actually approved by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;.
     * 
     */
    private String timeApprovedForAccess;

    private GetDelegatedResourceAccessRequestApprovalInfo() {}
    /**
     * @return Indicated whether the request is approved or rejected.
     * 
     */
    public String approvalAction() {
        return this.approvalAction;
    }
    /**
     * @return approval type, initial or extension
     * 
     */
    public String approvalType() {
        return this.approvalType;
    }
    /**
     * @return Additional message specified by the approver of the request.
     * 
     */
    public String approverAdditionalMessage() {
        return this.approverAdditionalMessage;
    }
    /**
     * @return Comment specified by the approver of the request.
     * 
     */
    public String approverComment() {
        return this.approverComment;
    }
    /**
     * @return User ID of the approver.
     * 
     */
    public String approverId() {
        return this.approverId;
    }
    /**
     * @return Access start time that is actually approved by the customer in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;.
     * 
     */
    public String timeApprovedForAccess() {
        return this.timeApprovedForAccess;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDelegatedResourceAccessRequestApprovalInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String approvalAction;
        private String approvalType;
        private String approverAdditionalMessage;
        private String approverComment;
        private String approverId;
        private String timeApprovedForAccess;
        public Builder() {}
        public Builder(GetDelegatedResourceAccessRequestApprovalInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approvalAction = defaults.approvalAction;
    	      this.approvalType = defaults.approvalType;
    	      this.approverAdditionalMessage = defaults.approverAdditionalMessage;
    	      this.approverComment = defaults.approverComment;
    	      this.approverId = defaults.approverId;
    	      this.timeApprovedForAccess = defaults.timeApprovedForAccess;
        }

        @CustomType.Setter
        public Builder approvalAction(String approvalAction) {
            if (approvalAction == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestApprovalInfo", "approvalAction");
            }
            this.approvalAction = approvalAction;
            return this;
        }
        @CustomType.Setter
        public Builder approvalType(String approvalType) {
            if (approvalType == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestApprovalInfo", "approvalType");
            }
            this.approvalType = approvalType;
            return this;
        }
        @CustomType.Setter
        public Builder approverAdditionalMessage(String approverAdditionalMessage) {
            if (approverAdditionalMessage == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestApprovalInfo", "approverAdditionalMessage");
            }
            this.approverAdditionalMessage = approverAdditionalMessage;
            return this;
        }
        @CustomType.Setter
        public Builder approverComment(String approverComment) {
            if (approverComment == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestApprovalInfo", "approverComment");
            }
            this.approverComment = approverComment;
            return this;
        }
        @CustomType.Setter
        public Builder approverId(String approverId) {
            if (approverId == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestApprovalInfo", "approverId");
            }
            this.approverId = approverId;
            return this;
        }
        @CustomType.Setter
        public Builder timeApprovedForAccess(String timeApprovedForAccess) {
            if (timeApprovedForAccess == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestApprovalInfo", "timeApprovedForAccess");
            }
            this.timeApprovedForAccess = timeApprovedForAccess;
            return this;
        }
        public GetDelegatedResourceAccessRequestApprovalInfo build() {
            final var _resultValue = new GetDelegatedResourceAccessRequestApprovalInfo();
            _resultValue.approvalAction = approvalAction;
            _resultValue.approvalType = approvalType;
            _resultValue.approverAdditionalMessage = approverAdditionalMessage;
            _resultValue.approverComment = approverComment;
            _resultValue.approverId = approverId;
            _resultValue.timeApprovedForAccess = timeApprovedForAccess;
            return _resultValue;
        }
    }
}
