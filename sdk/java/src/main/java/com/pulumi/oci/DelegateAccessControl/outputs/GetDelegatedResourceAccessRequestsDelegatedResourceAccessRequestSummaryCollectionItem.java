// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DelegateAccessControl.outputs.GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItemApprovalInfo;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem {
    /**
     * @return In case of single approval, this will have only one item. Else, a list of approvals.
     * 
     */
    private List<GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItemApprovalInfo> approvalInfos;
    /**
     * @return Specifies the type of auditing to be enabled. There are two levels of auditing: command-level and keystroke-level.  By default, both command-level and keystroke-level auditing are enabled, i.e. commands and key strokes issued by the support operator are logged.
     * 
     */
    private List<String> auditTypes;
    /**
     * @return The comment entered by the support operator while closing the request.
     * 
     */
    private String closureComment;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return List of Database unique names for which access is requested. This parameter is required for DLGT_MGMT_SYS_MAINT_ACCESS cage when database access in needed.
     * 
     */
    private List<String> databaseNameLists;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return unique Delegation Control identifier
     * 
     */
    private String delegationControlId;
    /**
     * @return List of Delegation Subscription OCID that are associated with this Delegated Resource Access Request based on the service types being requested.
     * 
     */
    private List<String> delegationSubscriptionIds;
    /**
     * @return Detailed description of this Delegated Resource Access Request.
     * 
     */
    private String description;
    /**
     * @return Display name. This is generated by the system automatically.
     * 
     */
    private String displayName;
    /**
     * @return Duration in hours for which access is sought on the target resource.
     * 
     */
    private Integer durationInHours;
    /**
     * @return Duration in hours for which extension access is sought on the target resource.
     * 
     */
    private Integer extendDurationInHours;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the Delegated Resource Access Request.
     * 
     */
    private String id;
    /**
     * @return Set to true if the request is approved automatically based on preApprovedServiceProviderActionNames or isAutoApproveDuringMaintenance in the associated Delegation Control.
     * 
     */
    private Boolean isAutoApproved;
    /**
     * @return Indicates if the delegated resource access request is waiting on more information from the operator
     * 
     */
    private Boolean isPendingMoreInfo;
    /**
     * @return Description of the current lifecycle state in more detail.
     * 
     */
    private String lifecycleStateDetails;
    /**
     * @return Number of extension approvals that have been obtained so far.
     * 
     */
    private Integer numExtensionApprovals;
    /**
     * @return Number of initial approvals that have been obtained so far.
     * 
     */
    private Integer numInitialApprovals;
    /**
     * @return List of Service Provider Service Types being provided by the support operator user.
     * 
     */
    private List<String> providedServiceTypes;
    /**
     * @return A short description explaining why this Delegated Resource Access Request is needed by the support operator.
     * 
     */
    private String reasonForRequest;
    /**
     * @return A filter to return only Delegated Resource Access Requests whose status matches the given Delegated Resource Access Request status.
     * 
     */
    private String requestStatus;
    /**
     * @return List of Service Provider Action names for which approval is sought by the support operator user. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API.
     * 
     */
    private List<String> requestedActionNames;
    /**
     * @return Requester type
     * 
     */
    private String requesterType;
    /**
     * @return A filter to return only Delegated Resource Access Requests for the given resource identifier.
     * 
     */
    private String resourceId;
    /**
     * @return The name of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to  access the target resource.
     * 
     */
    private String resourceName;
    /**
     * @return Resource type for which the associated Delegation Control is applicable to.
     * 
     */
    private String resourceType;
    /**
     * @return Priority assigned to the Delegated Resource Access Request by the support operator
     * 
     */
    private String severity;
    /**
     * @return A filter to return only Delegated Resource Access Requests whose lifecycleState matches the given Delegated Resource Access Request lifecycleState.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return A list of ticket numbers related to this Delegated Resource Access Request, e.g. Service Request (SR) number and JIRA ticket number.
     * 
     */
    private List<String> ticketNumbers;
    /**
     * @return Requested access start time in UTC.
     * 
     */
    private String timeAccessRequested;
    /**
     * @return Time when the Delegated Resource Access Request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;.
     * 
     */
    private String timeCreated;
    /**
     * @return Time when the Delegated Resource Access Request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;.
     * 
     */
    private String timeUpdated;

    private GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem() {}
    /**
     * @return In case of single approval, this will have only one item. Else, a list of approvals.
     * 
     */
    public List<GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItemApprovalInfo> approvalInfos() {
        return this.approvalInfos;
    }
    /**
     * @return Specifies the type of auditing to be enabled. There are two levels of auditing: command-level and keystroke-level.  By default, both command-level and keystroke-level auditing are enabled, i.e. commands and key strokes issued by the support operator are logged.
     * 
     */
    public List<String> auditTypes() {
        return this.auditTypes;
    }
    /**
     * @return The comment entered by the support operator while closing the request.
     * 
     */
    public String closureComment() {
        return this.closureComment;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return List of Database unique names for which access is requested. This parameter is required for DLGT_MGMT_SYS_MAINT_ACCESS cage when database access in needed.
     * 
     */
    public List<String> databaseNameLists() {
        return this.databaseNameLists;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return unique Delegation Control identifier
     * 
     */
    public String delegationControlId() {
        return this.delegationControlId;
    }
    /**
     * @return List of Delegation Subscription OCID that are associated with this Delegated Resource Access Request based on the service types being requested.
     * 
     */
    public List<String> delegationSubscriptionIds() {
        return this.delegationSubscriptionIds;
    }
    /**
     * @return Detailed description of this Delegated Resource Access Request.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Display name. This is generated by the system automatically.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Duration in hours for which access is sought on the target resource.
     * 
     */
    public Integer durationInHours() {
        return this.durationInHours;
    }
    /**
     * @return Duration in hours for which extension access is sought on the target resource.
     * 
     */
    public Integer extendDurationInHours() {
        return this.extendDurationInHours;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the Delegated Resource Access Request.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Set to true if the request is approved automatically based on preApprovedServiceProviderActionNames or isAutoApproveDuringMaintenance in the associated Delegation Control.
     * 
     */
    public Boolean isAutoApproved() {
        return this.isAutoApproved;
    }
    /**
     * @return Indicates if the delegated resource access request is waiting on more information from the operator
     * 
     */
    public Boolean isPendingMoreInfo() {
        return this.isPendingMoreInfo;
    }
    /**
     * @return Description of the current lifecycle state in more detail.
     * 
     */
    public String lifecycleStateDetails() {
        return this.lifecycleStateDetails;
    }
    /**
     * @return Number of extension approvals that have been obtained so far.
     * 
     */
    public Integer numExtensionApprovals() {
        return this.numExtensionApprovals;
    }
    /**
     * @return Number of initial approvals that have been obtained so far.
     * 
     */
    public Integer numInitialApprovals() {
        return this.numInitialApprovals;
    }
    /**
     * @return List of Service Provider Service Types being provided by the support operator user.
     * 
     */
    public List<String> providedServiceTypes() {
        return this.providedServiceTypes;
    }
    /**
     * @return A short description explaining why this Delegated Resource Access Request is needed by the support operator.
     * 
     */
    public String reasonForRequest() {
        return this.reasonForRequest;
    }
    /**
     * @return A filter to return only Delegated Resource Access Requests whose status matches the given Delegated Resource Access Request status.
     * 
     */
    public String requestStatus() {
        return this.requestStatus;
    }
    /**
     * @return List of Service Provider Action names for which approval is sought by the support operator user. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API.
     * 
     */
    public List<String> requestedActionNames() {
        return this.requestedActionNames;
    }
    /**
     * @return Requester type
     * 
     */
    public String requesterType() {
        return this.requesterType;
    }
    /**
     * @return A filter to return only Delegated Resource Access Requests for the given resource identifier.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return The name of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to  access the target resource.
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }
    /**
     * @return Resource type for which the associated Delegation Control is applicable to.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return Priority assigned to the Delegated Resource Access Request by the support operator
     * 
     */
    public String severity() {
        return this.severity;
    }
    /**
     * @return A filter to return only Delegated Resource Access Requests whose lifecycleState matches the given Delegated Resource Access Request lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return A list of ticket numbers related to this Delegated Resource Access Request, e.g. Service Request (SR) number and JIRA ticket number.
     * 
     */
    public List<String> ticketNumbers() {
        return this.ticketNumbers;
    }
    /**
     * @return Requested access start time in UTC.
     * 
     */
    public String timeAccessRequested() {
        return this.timeAccessRequested;
    }
    /**
     * @return Time when the Delegated Resource Access Request was created in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Time when the Delegated Resource Access Request was last modified in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItemApprovalInfo> approvalInfos;
        private List<String> auditTypes;
        private String closureComment;
        private String compartmentId;
        private List<String> databaseNameLists;
        private Map<String,String> definedTags;
        private String delegationControlId;
        private List<String> delegationSubscriptionIds;
        private String description;
        private String displayName;
        private Integer durationInHours;
        private Integer extendDurationInHours;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isAutoApproved;
        private Boolean isPendingMoreInfo;
        private String lifecycleStateDetails;
        private Integer numExtensionApprovals;
        private Integer numInitialApprovals;
        private List<String> providedServiceTypes;
        private String reasonForRequest;
        private String requestStatus;
        private List<String> requestedActionNames;
        private String requesterType;
        private String resourceId;
        private String resourceName;
        private String resourceType;
        private String severity;
        private String state;
        private Map<String,String> systemTags;
        private List<String> ticketNumbers;
        private String timeAccessRequested;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approvalInfos = defaults.approvalInfos;
    	      this.auditTypes = defaults.auditTypes;
    	      this.closureComment = defaults.closureComment;
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseNameLists = defaults.databaseNameLists;
    	      this.definedTags = defaults.definedTags;
    	      this.delegationControlId = defaults.delegationControlId;
    	      this.delegationSubscriptionIds = defaults.delegationSubscriptionIds;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.durationInHours = defaults.durationInHours;
    	      this.extendDurationInHours = defaults.extendDurationInHours;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutoApproved = defaults.isAutoApproved;
    	      this.isPendingMoreInfo = defaults.isPendingMoreInfo;
    	      this.lifecycleStateDetails = defaults.lifecycleStateDetails;
    	      this.numExtensionApprovals = defaults.numExtensionApprovals;
    	      this.numInitialApprovals = defaults.numInitialApprovals;
    	      this.providedServiceTypes = defaults.providedServiceTypes;
    	      this.reasonForRequest = defaults.reasonForRequest;
    	      this.requestStatus = defaults.requestStatus;
    	      this.requestedActionNames = defaults.requestedActionNames;
    	      this.requesterType = defaults.requesterType;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceType = defaults.resourceType;
    	      this.severity = defaults.severity;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.ticketNumbers = defaults.ticketNumbers;
    	      this.timeAccessRequested = defaults.timeAccessRequested;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder approvalInfos(List<GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItemApprovalInfo> approvalInfos) {
            if (approvalInfos == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "approvalInfos");
            }
            this.approvalInfos = approvalInfos;
            return this;
        }
        public Builder approvalInfos(GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItemApprovalInfo... approvalInfos) {
            return approvalInfos(List.of(approvalInfos));
        }
        @CustomType.Setter
        public Builder auditTypes(List<String> auditTypes) {
            if (auditTypes == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "auditTypes");
            }
            this.auditTypes = auditTypes;
            return this;
        }
        public Builder auditTypes(String... auditTypes) {
            return auditTypes(List.of(auditTypes));
        }
        @CustomType.Setter
        public Builder closureComment(String closureComment) {
            if (closureComment == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "closureComment");
            }
            this.closureComment = closureComment;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseNameLists(List<String> databaseNameLists) {
            if (databaseNameLists == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "databaseNameLists");
            }
            this.databaseNameLists = databaseNameLists;
            return this;
        }
        public Builder databaseNameLists(String... databaseNameLists) {
            return databaseNameLists(List.of(databaseNameLists));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder delegationControlId(String delegationControlId) {
            if (delegationControlId == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "delegationControlId");
            }
            this.delegationControlId = delegationControlId;
            return this;
        }
        @CustomType.Setter
        public Builder delegationSubscriptionIds(List<String> delegationSubscriptionIds) {
            if (delegationSubscriptionIds == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "delegationSubscriptionIds");
            }
            this.delegationSubscriptionIds = delegationSubscriptionIds;
            return this;
        }
        public Builder delegationSubscriptionIds(String... delegationSubscriptionIds) {
            return delegationSubscriptionIds(List.of(delegationSubscriptionIds));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder durationInHours(Integer durationInHours) {
            if (durationInHours == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "durationInHours");
            }
            this.durationInHours = durationInHours;
            return this;
        }
        @CustomType.Setter
        public Builder extendDurationInHours(Integer extendDurationInHours) {
            if (extendDurationInHours == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "extendDurationInHours");
            }
            this.extendDurationInHours = extendDurationInHours;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoApproved(Boolean isAutoApproved) {
            if (isAutoApproved == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "isAutoApproved");
            }
            this.isAutoApproved = isAutoApproved;
            return this;
        }
        @CustomType.Setter
        public Builder isPendingMoreInfo(Boolean isPendingMoreInfo) {
            if (isPendingMoreInfo == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "isPendingMoreInfo");
            }
            this.isPendingMoreInfo = isPendingMoreInfo;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleStateDetails(String lifecycleStateDetails) {
            if (lifecycleStateDetails == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "lifecycleStateDetails");
            }
            this.lifecycleStateDetails = lifecycleStateDetails;
            return this;
        }
        @CustomType.Setter
        public Builder numExtensionApprovals(Integer numExtensionApprovals) {
            if (numExtensionApprovals == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "numExtensionApprovals");
            }
            this.numExtensionApprovals = numExtensionApprovals;
            return this;
        }
        @CustomType.Setter
        public Builder numInitialApprovals(Integer numInitialApprovals) {
            if (numInitialApprovals == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "numInitialApprovals");
            }
            this.numInitialApprovals = numInitialApprovals;
            return this;
        }
        @CustomType.Setter
        public Builder providedServiceTypes(List<String> providedServiceTypes) {
            if (providedServiceTypes == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "providedServiceTypes");
            }
            this.providedServiceTypes = providedServiceTypes;
            return this;
        }
        public Builder providedServiceTypes(String... providedServiceTypes) {
            return providedServiceTypes(List.of(providedServiceTypes));
        }
        @CustomType.Setter
        public Builder reasonForRequest(String reasonForRequest) {
            if (reasonForRequest == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "reasonForRequest");
            }
            this.reasonForRequest = reasonForRequest;
            return this;
        }
        @CustomType.Setter
        public Builder requestStatus(String requestStatus) {
            if (requestStatus == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "requestStatus");
            }
            this.requestStatus = requestStatus;
            return this;
        }
        @CustomType.Setter
        public Builder requestedActionNames(List<String> requestedActionNames) {
            if (requestedActionNames == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "requestedActionNames");
            }
            this.requestedActionNames = requestedActionNames;
            return this;
        }
        public Builder requestedActionNames(String... requestedActionNames) {
            return requestedActionNames(List.of(requestedActionNames));
        }
        @CustomType.Setter
        public Builder requesterType(String requesterType) {
            if (requesterType == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "requesterType");
            }
            this.requesterType = requesterType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceName(String resourceName) {
            if (resourceName == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "resourceName");
            }
            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder severity(String severity) {
            if (severity == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "severity");
            }
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder ticketNumbers(List<String> ticketNumbers) {
            if (ticketNumbers == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "ticketNumbers");
            }
            this.ticketNumbers = ticketNumbers;
            return this;
        }
        public Builder ticketNumbers(String... ticketNumbers) {
            return ticketNumbers(List.of(ticketNumbers));
        }
        @CustomType.Setter
        public Builder timeAccessRequested(String timeAccessRequested) {
            if (timeAccessRequested == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "timeAccessRequested");
            }
            this.timeAccessRequested = timeAccessRequested;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem build() {
            final var _resultValue = new GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollectionItem();
            _resultValue.approvalInfos = approvalInfos;
            _resultValue.auditTypes = auditTypes;
            _resultValue.closureComment = closureComment;
            _resultValue.compartmentId = compartmentId;
            _resultValue.databaseNameLists = databaseNameLists;
            _resultValue.definedTags = definedTags;
            _resultValue.delegationControlId = delegationControlId;
            _resultValue.delegationSubscriptionIds = delegationSubscriptionIds;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.durationInHours = durationInHours;
            _resultValue.extendDurationInHours = extendDurationInHours;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isAutoApproved = isAutoApproved;
            _resultValue.isPendingMoreInfo = isPendingMoreInfo;
            _resultValue.lifecycleStateDetails = lifecycleStateDetails;
            _resultValue.numExtensionApprovals = numExtensionApprovals;
            _resultValue.numInitialApprovals = numInitialApprovals;
            _resultValue.providedServiceTypes = providedServiceTypes;
            _resultValue.reasonForRequest = reasonForRequest;
            _resultValue.requestStatus = requestStatus;
            _resultValue.requestedActionNames = requestedActionNames;
            _resultValue.requesterType = requesterType;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceName = resourceName;
            _resultValue.resourceType = resourceType;
            _resultValue.severity = severity;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.ticketNumbers = ticketNumbers;
            _resultValue.timeAccessRequested = timeAccessRequested;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
