// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DelegateAccessControl.outputs.GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollection;
import com.pulumi.oci.DelegateAccessControl.outputs.GetDelegatedResourceAccessRequestsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDelegatedResourceAccessRequestsResult {
    /**
     * @return The OCID of the compartment that contains the Delegated Resource Access Request.
     * 
     */
    private String compartmentId;
    /**
     * @return The list of delegated_resource_access_request_summary_collection.
     * 
     */
    private List<GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollection> delegatedResourceAccessRequestSummaryCollections;
    /**
     * @return The OCID of the Delegation Control governing the target resource.
     * 
     */
    private @Nullable String delegationControlId;
    private @Nullable List<GetDelegatedResourceAccessRequestsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The current status of the Delegated Resource Access Request.
     * 
     */
    private @Nullable String requestStatus;
    /**
     * @return The OCID of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to  access the target resource.
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return The current lifecycle state of the Delegated Resource Access Request.
     * 
     */
    private @Nullable String state;
    private @Nullable String timeEnd;
    private @Nullable String timeStart;

    private GetDelegatedResourceAccessRequestsResult() {}
    /**
     * @return The OCID of the compartment that contains the Delegated Resource Access Request.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of delegated_resource_access_request_summary_collection.
     * 
     */
    public List<GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollection> delegatedResourceAccessRequestSummaryCollections() {
        return this.delegatedResourceAccessRequestSummaryCollections;
    }
    /**
     * @return The OCID of the Delegation Control governing the target resource.
     * 
     */
    public Optional<String> delegationControlId() {
        return Optional.ofNullable(this.delegationControlId);
    }
    public List<GetDelegatedResourceAccessRequestsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current status of the Delegated Resource Access Request.
     * 
     */
    public Optional<String> requestStatus() {
        return Optional.ofNullable(this.requestStatus);
    }
    /**
     * @return The OCID of the target resource associated with the Delegated Resource Access Request. The support operator raises a Delegated Resource Access Request to get approval to  access the target resource.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return The current lifecycle state of the Delegated Resource Access Request.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> timeEnd() {
        return Optional.ofNullable(this.timeEnd);
    }
    public Optional<String> timeStart() {
        return Optional.ofNullable(this.timeStart);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDelegatedResourceAccessRequestsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollection> delegatedResourceAccessRequestSummaryCollections;
        private @Nullable String delegationControlId;
        private @Nullable List<GetDelegatedResourceAccessRequestsFilter> filters;
        private String id;
        private @Nullable String requestStatus;
        private @Nullable String resourceId;
        private @Nullable String state;
        private @Nullable String timeEnd;
        private @Nullable String timeStart;
        public Builder() {}
        public Builder(GetDelegatedResourceAccessRequestsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.delegatedResourceAccessRequestSummaryCollections = defaults.delegatedResourceAccessRequestSummaryCollections;
    	      this.delegationControlId = defaults.delegationControlId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.requestStatus = defaults.requestStatus;
    	      this.resourceId = defaults.resourceId;
    	      this.state = defaults.state;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder delegatedResourceAccessRequestSummaryCollections(List<GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollection> delegatedResourceAccessRequestSummaryCollections) {
            if (delegatedResourceAccessRequestSummaryCollections == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsResult", "delegatedResourceAccessRequestSummaryCollections");
            }
            this.delegatedResourceAccessRequestSummaryCollections = delegatedResourceAccessRequestSummaryCollections;
            return this;
        }
        public Builder delegatedResourceAccessRequestSummaryCollections(GetDelegatedResourceAccessRequestsDelegatedResourceAccessRequestSummaryCollection... delegatedResourceAccessRequestSummaryCollections) {
            return delegatedResourceAccessRequestSummaryCollections(List.of(delegatedResourceAccessRequestSummaryCollections));
        }
        @CustomType.Setter
        public Builder delegationControlId(@Nullable String delegationControlId) {

            this.delegationControlId = delegationControlId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDelegatedResourceAccessRequestsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetDelegatedResourceAccessRequestsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDelegatedResourceAccessRequestsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder requestStatus(@Nullable String requestStatus) {

            this.requestStatus = requestStatus;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {

            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(@Nullable String timeEnd) {

            this.timeEnd = timeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(@Nullable String timeStart) {

            this.timeStart = timeStart;
            return this;
        }
        public GetDelegatedResourceAccessRequestsResult build() {
            final var _resultValue = new GetDelegatedResourceAccessRequestsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.delegatedResourceAccessRequestSummaryCollections = delegatedResourceAccessRequestSummaryCollections;
            _resultValue.delegationControlId = delegationControlId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.requestStatus = requestStatus;
            _resultValue.resourceId = resourceId;
            _resultValue.state = state;
            _resultValue.timeEnd = timeEnd;
            _resultValue.timeStart = timeStart;
            return _resultValue;
        }
    }
}
