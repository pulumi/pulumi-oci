// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDelegationControlResult {
    /**
     * @return The OCID of the compartment that contains the Delegation Control.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    private String delegationControlId;
    /**
     * @return List of Delegation Subscription OCID that are allowed for this Delegation Control. The allowed subscriptions will determine the available Service Provider Actions. Only support operators for the allowed subscriptions are allowed to create Delegated Resource Access Request.
     * 
     */
    private List<String> delegationSubscriptionIds;
    /**
     * @return Description of the Delegation Control.
     * 
     */
    private String description;
    /**
     * @return Name of the Delegation Control. The name does not need to be unique.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the Delegation Control.
     * 
     */
    private String id;
    /**
     * @return Set to true to allow all Delegated Resource Access Request to be approved automatically during maintenance.
     * 
     */
    private Boolean isAutoApproveDuringMaintenance;
    /**
     * @return Description of the current lifecycle state in more detail.
     * 
     */
    private String lifecycleStateDetails;
    /**
     * @return The format of the Oracle Cloud Infrastructure Notification messages for this Delegation Control.
     * 
     */
    private String notificationMessageFormat;
    /**
     * @return The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this Delegation Control.
     * 
     */
    private String notificationTopicId;
    /**
     * @return number of approvals required.
     * 
     */
    private Integer numApprovalsRequired;
    /**
     * @return List of pre-approved Service Provider Action names. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API. Delegated Resource Access Requests associated with a resource governed by this Delegation Control will be automatically approved if the Delegated Resource Access Request only contain Service Provider Actions in the pre-approved list.
     * 
     */
    private List<String> preApprovedServiceProviderActionNames;
    /**
     * @return The OCID of the selected resources that this Delegation Control is applicable to.
     * 
     */
    private List<String> resourceIds;
    /**
     * @return Resource type for which the Delegation Control is applicable to.
     * 
     */
    private String resourceType;
    /**
     * @return The current lifecycle state of the Delegation Control.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Time when the Delegation Control was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private String timeCreated;
    /**
     * @return Time when the Delegation Control was deleted expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;. Note a deleted Delegation Control still stays in the system, so that you can still audit Service Provider Actions associated with Delegated Resource Access Requests raised on target resources governed by the deleted Delegation Control.
     * 
     */
    private String timeDeleted;
    /**
     * @return Time when the Delegation Control was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private String timeUpdated;
    /**
     * @return The OCID of the Oracle Cloud Infrastructure Vault that will store the secrets containing the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER. Delegate Access Control Service will generate the SSH keys and store them as secrets in the Oracle Cloud Infrastructure Vault.
     * 
     */
    private String vaultId;
    /**
     * @return The OCID of the Master Encryption Key in the Oracle Cloud Infrastructure Vault specified by vaultId. This key will be used to encrypt the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER.
     * 
     */
    private String vaultKeyId;

    private GetDelegationControlResult() {}
    /**
     * @return The OCID of the compartment that contains the Delegation Control.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    public String delegationControlId() {
        return this.delegationControlId;
    }
    /**
     * @return List of Delegation Subscription OCID that are allowed for this Delegation Control. The allowed subscriptions will determine the available Service Provider Actions. Only support operators for the allowed subscriptions are allowed to create Delegated Resource Access Request.
     * 
     */
    public List<String> delegationSubscriptionIds() {
        return this.delegationSubscriptionIds;
    }
    /**
     * @return Description of the Delegation Control.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Name of the Delegation Control. The name does not need to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the Delegation Control.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Set to true to allow all Delegated Resource Access Request to be approved automatically during maintenance.
     * 
     */
    public Boolean isAutoApproveDuringMaintenance() {
        return this.isAutoApproveDuringMaintenance;
    }
    /**
     * @return Description of the current lifecycle state in more detail.
     * 
     */
    public String lifecycleStateDetails() {
        return this.lifecycleStateDetails;
    }
    /**
     * @return The format of the Oracle Cloud Infrastructure Notification messages for this Delegation Control.
     * 
     */
    public String notificationMessageFormat() {
        return this.notificationMessageFormat;
    }
    /**
     * @return The OCID of the Oracle Cloud Infrastructure Notification topic to publish messages related to this Delegation Control.
     * 
     */
    public String notificationTopicId() {
        return this.notificationTopicId;
    }
    /**
     * @return number of approvals required.
     * 
     */
    public Integer numApprovalsRequired() {
        return this.numApprovalsRequired;
    }
    /**
     * @return List of pre-approved Service Provider Action names. The list of pre-defined Service Provider Actions can be obtained from the ListServiceProviderActions API. Delegated Resource Access Requests associated with a resource governed by this Delegation Control will be automatically approved if the Delegated Resource Access Request only contain Service Provider Actions in the pre-approved list.
     * 
     */
    public List<String> preApprovedServiceProviderActionNames() {
        return this.preApprovedServiceProviderActionNames;
    }
    /**
     * @return The OCID of the selected resources that this Delegation Control is applicable to.
     * 
     */
    public List<String> resourceIds() {
        return this.resourceIds;
    }
    /**
     * @return Resource type for which the Delegation Control is applicable to.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The current lifecycle state of the Delegation Control.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Time when the Delegation Control was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Time when the Delegation Control was deleted expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;. Note a deleted Delegation Control still stays in the system, so that you can still audit Service Provider Actions associated with Delegated Resource Access Requests raised on target resources governed by the deleted Delegation Control.
     * 
     */
    public String timeDeleted() {
        return this.timeDeleted;
    }
    /**
     * @return Time when the Delegation Control was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The OCID of the Oracle Cloud Infrastructure Vault that will store the secrets containing the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER. Delegate Access Control Service will generate the SSH keys and store them as secrets in the Oracle Cloud Infrastructure Vault.
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }
    /**
     * @return The OCID of the Master Encryption Key in the Oracle Cloud Infrastructure Vault specified by vaultId. This key will be used to encrypt the SSH keys to access the resource governed by this Delegation Control by Delegate Access Control Service. This property is required when resourceType is CLOUDVMCLUSTER.
     * 
     */
    public String vaultKeyId() {
        return this.vaultKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDelegationControlResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String delegationControlId;
        private List<String> delegationSubscriptionIds;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isAutoApproveDuringMaintenance;
        private String lifecycleStateDetails;
        private String notificationMessageFormat;
        private String notificationTopicId;
        private Integer numApprovalsRequired;
        private List<String> preApprovedServiceProviderActionNames;
        private List<String> resourceIds;
        private String resourceType;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeDeleted;
        private String timeUpdated;
        private String vaultId;
        private String vaultKeyId;
        public Builder() {}
        public Builder(GetDelegationControlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.delegationControlId = defaults.delegationControlId;
    	      this.delegationSubscriptionIds = defaults.delegationSubscriptionIds;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutoApproveDuringMaintenance = defaults.isAutoApproveDuringMaintenance;
    	      this.lifecycleStateDetails = defaults.lifecycleStateDetails;
    	      this.notificationMessageFormat = defaults.notificationMessageFormat;
    	      this.notificationTopicId = defaults.notificationTopicId;
    	      this.numApprovalsRequired = defaults.numApprovalsRequired;
    	      this.preApprovedServiceProviderActionNames = defaults.preApprovedServiceProviderActionNames;
    	      this.resourceIds = defaults.resourceIds;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeDeleted = defaults.timeDeleted;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vaultId = defaults.vaultId;
    	      this.vaultKeyId = defaults.vaultKeyId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder delegationControlId(String delegationControlId) {
            if (delegationControlId == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "delegationControlId");
            }
            this.delegationControlId = delegationControlId;
            return this;
        }
        @CustomType.Setter
        public Builder delegationSubscriptionIds(List<String> delegationSubscriptionIds) {
            if (delegationSubscriptionIds == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "delegationSubscriptionIds");
            }
            this.delegationSubscriptionIds = delegationSubscriptionIds;
            return this;
        }
        public Builder delegationSubscriptionIds(String... delegationSubscriptionIds) {
            return delegationSubscriptionIds(List.of(delegationSubscriptionIds));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoApproveDuringMaintenance(Boolean isAutoApproveDuringMaintenance) {
            if (isAutoApproveDuringMaintenance == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "isAutoApproveDuringMaintenance");
            }
            this.isAutoApproveDuringMaintenance = isAutoApproveDuringMaintenance;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleStateDetails(String lifecycleStateDetails) {
            if (lifecycleStateDetails == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "lifecycleStateDetails");
            }
            this.lifecycleStateDetails = lifecycleStateDetails;
            return this;
        }
        @CustomType.Setter
        public Builder notificationMessageFormat(String notificationMessageFormat) {
            if (notificationMessageFormat == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "notificationMessageFormat");
            }
            this.notificationMessageFormat = notificationMessageFormat;
            return this;
        }
        @CustomType.Setter
        public Builder notificationTopicId(String notificationTopicId) {
            if (notificationTopicId == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "notificationTopicId");
            }
            this.notificationTopicId = notificationTopicId;
            return this;
        }
        @CustomType.Setter
        public Builder numApprovalsRequired(Integer numApprovalsRequired) {
            if (numApprovalsRequired == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "numApprovalsRequired");
            }
            this.numApprovalsRequired = numApprovalsRequired;
            return this;
        }
        @CustomType.Setter
        public Builder preApprovedServiceProviderActionNames(List<String> preApprovedServiceProviderActionNames) {
            if (preApprovedServiceProviderActionNames == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "preApprovedServiceProviderActionNames");
            }
            this.preApprovedServiceProviderActionNames = preApprovedServiceProviderActionNames;
            return this;
        }
        public Builder preApprovedServiceProviderActionNames(String... preApprovedServiceProviderActionNames) {
            return preApprovedServiceProviderActionNames(List.of(preApprovedServiceProviderActionNames));
        }
        @CustomType.Setter
        public Builder resourceIds(List<String> resourceIds) {
            if (resourceIds == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "resourceIds");
            }
            this.resourceIds = resourceIds;
            return this;
        }
        public Builder resourceIds(String... resourceIds) {
            return resourceIds(List.of(resourceIds));
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeDeleted(String timeDeleted) {
            if (timeDeleted == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "timeDeleted");
            }
            this.timeDeleted = timeDeleted;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(String vaultId) {
            if (vaultId == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "vaultId");
            }
            this.vaultId = vaultId;
            return this;
        }
        @CustomType.Setter
        public Builder vaultKeyId(String vaultKeyId) {
            if (vaultKeyId == null) {
              throw new MissingRequiredPropertyException("GetDelegationControlResult", "vaultKeyId");
            }
            this.vaultKeyId = vaultKeyId;
            return this;
        }
        public GetDelegationControlResult build() {
            final var _resultValue = new GetDelegationControlResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.delegationControlId = delegationControlId;
            _resultValue.delegationSubscriptionIds = delegationSubscriptionIds;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isAutoApproveDuringMaintenance = isAutoApproveDuringMaintenance;
            _resultValue.lifecycleStateDetails = lifecycleStateDetails;
            _resultValue.notificationMessageFormat = notificationMessageFormat;
            _resultValue.notificationTopicId = notificationTopicId;
            _resultValue.numApprovalsRequired = numApprovalsRequired;
            _resultValue.preApprovedServiceProviderActionNames = preApprovedServiceProviderActionNames;
            _resultValue.resourceIds = resourceIds;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeDeleted = timeDeleted;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.vaultId = vaultId;
            _resultValue.vaultKeyId = vaultKeyId;
            return _resultValue;
        }
    }
}
