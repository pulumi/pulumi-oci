// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServiceProviderResult {
    /**
     * @return The OCID of the compartment that contains the Delegation Control.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Description of the Service Provider.
     * 
     */
    private String description;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Description of the current lifecycle state in more detail.
     * 
     */
    private String lifecycleStateDetails;
    /**
     * @return Unique name of the Service Provider.
     * 
     */
    private String name;
    private String serviceProviderId;
    /**
     * @return Service Provider type.
     * 
     */
    private String serviceProviderType;
    /**
     * @return Types of services offered by this provider.
     * 
     */
    private List<String> serviceTypes;
    /**
     * @return The current lifecycle state of the Service Provider.
     * 
     */
    private String state;
    /**
     * @return Resource types for which this provider will provide service. Default to all if not specified.
     * 
     */
    private List<String> supportedResourceTypes;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Time when the Service Provider was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private String timeCreated;
    /**
     * @return Time when the Service Provider was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    private String timeUpdated;

    private GetServiceProviderResult() {}
    /**
     * @return The OCID of the compartment that contains the Delegation Control.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of the Service Provider.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Description of the current lifecycle state in more detail.
     * 
     */
    public String lifecycleStateDetails() {
        return this.lifecycleStateDetails;
    }
    /**
     * @return Unique name of the Service Provider.
     * 
     */
    public String name() {
        return this.name;
    }
    public String serviceProviderId() {
        return this.serviceProviderId;
    }
    /**
     * @return Service Provider type.
     * 
     */
    public String serviceProviderType() {
        return this.serviceProviderType;
    }
    /**
     * @return Types of services offered by this provider.
     * 
     */
    public List<String> serviceTypes() {
        return this.serviceTypes;
    }
    /**
     * @return The current lifecycle state of the Service Provider.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Resource types for which this provider will provide service. Default to all if not specified.
     * 
     */
    public List<String> supportedResourceTypes() {
        return this.supportedResourceTypes;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Time when the Service Provider was created expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Time when the Service Provider was last modified expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format, e.g. &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceProviderResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleStateDetails;
        private String name;
        private String serviceProviderId;
        private String serviceProviderType;
        private List<String> serviceTypes;
        private String state;
        private List<String> supportedResourceTypes;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetServiceProviderResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleStateDetails = defaults.lifecycleStateDetails;
    	      this.name = defaults.name;
    	      this.serviceProviderId = defaults.serviceProviderId;
    	      this.serviceProviderType = defaults.serviceProviderType;
    	      this.serviceTypes = defaults.serviceTypes;
    	      this.state = defaults.state;
    	      this.supportedResourceTypes = defaults.supportedResourceTypes;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleStateDetails(String lifecycleStateDetails) {
            if (lifecycleStateDetails == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "lifecycleStateDetails");
            }
            this.lifecycleStateDetails = lifecycleStateDetails;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder serviceProviderId(String serviceProviderId) {
            if (serviceProviderId == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "serviceProviderId");
            }
            this.serviceProviderId = serviceProviderId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceProviderType(String serviceProviderType) {
            if (serviceProviderType == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "serviceProviderType");
            }
            this.serviceProviderType = serviceProviderType;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTypes(List<String> serviceTypes) {
            if (serviceTypes == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "serviceTypes");
            }
            this.serviceTypes = serviceTypes;
            return this;
        }
        public Builder serviceTypes(String... serviceTypes) {
            return serviceTypes(List.of(serviceTypes));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder supportedResourceTypes(List<String> supportedResourceTypes) {
            if (supportedResourceTypes == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "supportedResourceTypes");
            }
            this.supportedResourceTypes = supportedResourceTypes;
            return this;
        }
        public Builder supportedResourceTypes(String... supportedResourceTypes) {
            return supportedResourceTypes(List.of(supportedResourceTypes));
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetServiceProviderResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetServiceProviderResult build() {
            final var _resultValue = new GetServiceProviderResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleStateDetails = lifecycleStateDetails;
            _resultValue.name = name;
            _resultValue.serviceProviderId = serviceProviderId;
            _resultValue.serviceProviderType = serviceProviderType;
            _resultValue.serviceTypes = serviceTypes;
            _resultValue.state = state;
            _resultValue.supportedResourceTypes = supportedResourceTypes;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
