// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DelegateAccessControl.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DelegateAccessControl.outputs.GetServiceProvidersFilter;
import com.pulumi.oci.DelegateAccessControl.outputs.GetServiceProvidersServiceProviderSummaryCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceProvidersResult {
    /**
     * @return The OCID of the compartment that contains the Delegation Control.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetServiceProvidersFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Unique name of the Service Provider.
     * 
     */
    private @Nullable String name;
    /**
     * @return The list of service_provider_summary_collection.
     * 
     */
    private List<GetServiceProvidersServiceProviderSummaryCollection> serviceProviderSummaryCollections;
    /**
     * @return Service Provider type.
     * 
     */
    private @Nullable String serviceProviderType;
    /**
     * @return The current lifecycle state of the Service Provider.
     * 
     */
    private @Nullable String state;
    private @Nullable String supportedResourceType;

    private GetServiceProvidersResult() {}
    /**
     * @return The OCID of the compartment that contains the Delegation Control.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetServiceProvidersFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Unique name of the Service Provider.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of service_provider_summary_collection.
     * 
     */
    public List<GetServiceProvidersServiceProviderSummaryCollection> serviceProviderSummaryCollections() {
        return this.serviceProviderSummaryCollections;
    }
    /**
     * @return Service Provider type.
     * 
     */
    public Optional<String> serviceProviderType() {
        return Optional.ofNullable(this.serviceProviderType);
    }
    /**
     * @return The current lifecycle state of the Service Provider.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> supportedResourceType() {
        return Optional.ofNullable(this.supportedResourceType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceProvidersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetServiceProvidersFilter> filters;
        private String id;
        private @Nullable String name;
        private List<GetServiceProvidersServiceProviderSummaryCollection> serviceProviderSummaryCollections;
        private @Nullable String serviceProviderType;
        private @Nullable String state;
        private @Nullable String supportedResourceType;
        public Builder() {}
        public Builder(GetServiceProvidersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.serviceProviderSummaryCollections = defaults.serviceProviderSummaryCollections;
    	      this.serviceProviderType = defaults.serviceProviderType;
    	      this.state = defaults.state;
    	      this.supportedResourceType = defaults.supportedResourceType;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetServiceProvidersResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetServiceProvidersFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetServiceProvidersFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceProvidersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder serviceProviderSummaryCollections(List<GetServiceProvidersServiceProviderSummaryCollection> serviceProviderSummaryCollections) {
            if (serviceProviderSummaryCollections == null) {
              throw new MissingRequiredPropertyException("GetServiceProvidersResult", "serviceProviderSummaryCollections");
            }
            this.serviceProviderSummaryCollections = serviceProviderSummaryCollections;
            return this;
        }
        public Builder serviceProviderSummaryCollections(GetServiceProvidersServiceProviderSummaryCollection... serviceProviderSummaryCollections) {
            return serviceProviderSummaryCollections(List.of(serviceProviderSummaryCollections));
        }
        @CustomType.Setter
        public Builder serviceProviderType(@Nullable String serviceProviderType) {

            this.serviceProviderType = serviceProviderType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder supportedResourceType(@Nullable String supportedResourceType) {

            this.supportedResourceType = supportedResourceType;
            return this;
        }
        public GetServiceProvidersResult build() {
            final var _resultValue = new GetServiceProvidersResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.serviceProviderSummaryCollections = serviceProviderSummaryCollections;
            _resultValue.serviceProviderType = serviceProviderType;
            _resultValue.state = state;
            _resultValue.supportedResourceType = supportedResourceType;
            return _resultValue;
        }
    }
}
