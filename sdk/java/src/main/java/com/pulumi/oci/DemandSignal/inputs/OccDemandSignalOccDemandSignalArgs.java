// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DemandSignal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DemandSignal.inputs.OccDemandSignalOccDemandSignalValueArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class OccDemandSignalOccDemandSignalArgs extends com.pulumi.resources.ResourceArgs {

    public static final OccDemandSignalOccDemandSignalArgs Empty = new OccDemandSignalOccDemandSignalArgs();

    /**
     * The name of the resource for the data.
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return The name of the resource for the data.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * The units of the data.
     * 
     */
    @Import(name="units", required=true)
    private Output<String> units;

    /**
     * @return The units of the data.
     * 
     */
    public Output<String> units() {
        return this.units;
    }

    /**
     * The values of forecast.
     * 
     */
    @Import(name="values", required=true)
    private Output<List<OccDemandSignalOccDemandSignalValueArgs>> values;

    /**
     * @return The values of forecast.
     * 
     */
    public Output<List<OccDemandSignalOccDemandSignalValueArgs>> values() {
        return this.values;
    }

    private OccDemandSignalOccDemandSignalArgs() {}

    private OccDemandSignalOccDemandSignalArgs(OccDemandSignalOccDemandSignalArgs $) {
        this.resourceType = $.resourceType;
        this.units = $.units;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OccDemandSignalOccDemandSignalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OccDemandSignalOccDemandSignalArgs $;

        public Builder() {
            $ = new OccDemandSignalOccDemandSignalArgs();
        }

        public Builder(OccDemandSignalOccDemandSignalArgs defaults) {
            $ = new OccDemandSignalOccDemandSignalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resourceType The name of the resource for the data.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The name of the resource for the data.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param units The units of the data.
         * 
         * @return builder
         * 
         */
        public Builder units(Output<String> units) {
            $.units = units;
            return this;
        }

        /**
         * @param units The units of the data.
         * 
         * @return builder
         * 
         */
        public Builder units(String units) {
            return units(Output.of(units));
        }

        /**
         * @param values The values of forecast.
         * 
         * @return builder
         * 
         */
        public Builder values(Output<List<OccDemandSignalOccDemandSignalValueArgs>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values The values of forecast.
         * 
         * @return builder
         * 
         */
        public Builder values(List<OccDemandSignalOccDemandSignalValueArgs> values) {
            return values(Output.of(values));
        }

        /**
         * @param values The values of forecast.
         * 
         * @return builder
         * 
         */
        public Builder values(OccDemandSignalOccDemandSignalValueArgs... values) {
            return values(List.of(values));
        }

        public OccDemandSignalOccDemandSignalArgs build() {
            if ($.resourceType == null) {
                throw new MissingRequiredPropertyException("OccDemandSignalOccDemandSignalArgs", "resourceType");
            }
            if ($.units == null) {
                throw new MissingRequiredPropertyException("OccDemandSignalOccDemandSignalArgs", "units");
            }
            if ($.values == null) {
                throw new MissingRequiredPropertyException("OccDemandSignalOccDemandSignalArgs", "values");
            }
            return $;
        }
    }

}
