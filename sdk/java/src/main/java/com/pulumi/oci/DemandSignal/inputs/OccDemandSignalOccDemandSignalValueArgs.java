// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DemandSignal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OccDemandSignalOccDemandSignalValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final OccDemandSignalOccDemandSignalValueArgs Empty = new OccDemandSignalOccDemandSignalValueArgs();

    /**
     * Space provided for users to make comments regarding the value.
     * 
     */
    @Import(name="comments")
    private @Nullable Output<String> comments;

    /**
     * @return Space provided for users to make comments regarding the value.
     * 
     */
    public Optional<Output<String>> comments() {
        return Optional.ofNullable(this.comments);
    }

    /**
     * The date of the Demand Signal Value.
     * 
     */
    @Import(name="timeExpected", required=true)
    private Output<String> timeExpected;

    /**
     * @return The date of the Demand Signal Value.
     * 
     */
    public Output<String> timeExpected() {
        return this.timeExpected;
    }

    /**
     * The Demand Signal Value.
     * 
     */
    @Import(name="value", required=true)
    private Output<Double> value;

    /**
     * @return The Demand Signal Value.
     * 
     */
    public Output<Double> value() {
        return this.value;
    }

    private OccDemandSignalOccDemandSignalValueArgs() {}

    private OccDemandSignalOccDemandSignalValueArgs(OccDemandSignalOccDemandSignalValueArgs $) {
        this.comments = $.comments;
        this.timeExpected = $.timeExpected;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OccDemandSignalOccDemandSignalValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OccDemandSignalOccDemandSignalValueArgs $;

        public Builder() {
            $ = new OccDemandSignalOccDemandSignalValueArgs();
        }

        public Builder(OccDemandSignalOccDemandSignalValueArgs defaults) {
            $ = new OccDemandSignalOccDemandSignalValueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param comments Space provided for users to make comments regarding the value.
         * 
         * @return builder
         * 
         */
        public Builder comments(@Nullable Output<String> comments) {
            $.comments = comments;
            return this;
        }

        /**
         * @param comments Space provided for users to make comments regarding the value.
         * 
         * @return builder
         * 
         */
        public Builder comments(String comments) {
            return comments(Output.of(comments));
        }

        /**
         * @param timeExpected The date of the Demand Signal Value.
         * 
         * @return builder
         * 
         */
        public Builder timeExpected(Output<String> timeExpected) {
            $.timeExpected = timeExpected;
            return this;
        }

        /**
         * @param timeExpected The date of the Demand Signal Value.
         * 
         * @return builder
         * 
         */
        public Builder timeExpected(String timeExpected) {
            return timeExpected(Output.of(timeExpected));
        }

        /**
         * @param value The Demand Signal Value.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<Double> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The Demand Signal Value.
         * 
         * @return builder
         * 
         */
        public Builder value(Double value) {
            return value(Output.of(value));
        }

        public OccDemandSignalOccDemandSignalValueArgs build() {
            if ($.timeExpected == null) {
                throw new MissingRequiredPropertyException("OccDemandSignalOccDemandSignalValueArgs", "timeExpected");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("OccDemandSignalOccDemandSignalValueArgs", "value");
            }
            return $;
        }
    }

}
