// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DemandSignal.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DemandSignal.outputs.OccDemandSignalOccDemandSignalValue;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class OccDemandSignalOccDemandSignal {
    /**
     * @return The name of the resource for the data.
     * 
     */
    private String resourceType;
    /**
     * @return The units of the data.
     * 
     */
    private String units;
    /**
     * @return The values of forecast.
     * 
     */
    private List<OccDemandSignalOccDemandSignalValue> values;

    private OccDemandSignalOccDemandSignal() {}
    /**
     * @return The name of the resource for the data.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The units of the data.
     * 
     */
    public String units() {
        return this.units;
    }
    /**
     * @return The values of forecast.
     * 
     */
    public List<OccDemandSignalOccDemandSignalValue> values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OccDemandSignalOccDemandSignal defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String resourceType;
        private String units;
        private List<OccDemandSignalOccDemandSignalValue> values;
        public Builder() {}
        public Builder(OccDemandSignalOccDemandSignal defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.resourceType = defaults.resourceType;
    	      this.units = defaults.units;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("OccDemandSignalOccDemandSignal", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder units(String units) {
            if (units == null) {
              throw new MissingRequiredPropertyException("OccDemandSignalOccDemandSignal", "units");
            }
            this.units = units;
            return this;
        }
        @CustomType.Setter
        public Builder values(List<OccDemandSignalOccDemandSignalValue> values) {
            if (values == null) {
              throw new MissingRequiredPropertyException("OccDemandSignalOccDemandSignal", "values");
            }
            this.values = values;
            return this;
        }
        public Builder values(OccDemandSignalOccDemandSignalValue... values) {
            return values(List.of(values));
        }
        public OccDemandSignalOccDemandSignal build() {
            final var _resultValue = new OccDemandSignalOccDemandSignal();
            _resultValue.resourceType = resourceType;
            _resultValue.units = units;
            _resultValue.values = values;
            return _resultValue;
        }
    }
}
