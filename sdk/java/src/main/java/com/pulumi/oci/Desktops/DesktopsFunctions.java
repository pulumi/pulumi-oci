// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Desktops;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.oci.Desktops.inputs.GetDesktopArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopPlainArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopPoolArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopPoolDesktopsArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopPoolDesktopsPlainArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopPoolPlainArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopPoolVolumesArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopPoolVolumesPlainArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopPoolsArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopPoolsPlainArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopsArgs;
import com.pulumi.oci.Desktops.inputs.GetDesktopsPlainArgs;
import com.pulumi.oci.Desktops.outputs.GetDesktopPoolDesktopsResult;
import com.pulumi.oci.Desktops.outputs.GetDesktopPoolResult;
import com.pulumi.oci.Desktops.outputs.GetDesktopPoolVolumesResult;
import com.pulumi.oci.Desktops.outputs.GetDesktopPoolsResult;
import com.pulumi.oci.Desktops.outputs.GetDesktopResult;
import com.pulumi.oci.Desktops.outputs.GetDesktopsResult;
import com.pulumi.oci.Utilities;
import java.util.concurrent.CompletableFuture;

public final class DesktopsFunctions {
    /**
     * This data source provides details about a specific Desktop resource in Oracle Cloud Infrastructure Desktops service.
     * 
     * Provides information about the desktop with the specified OCID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktop = DesktopsFunctions.getDesktop(GetDesktopArgs.builder()
     *             .desktopId(testDesktopOciDesktopsDesktop.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopResult> getDesktop(GetDesktopArgs args) {
        return getDesktop(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Desktop resource in Oracle Cloud Infrastructure Desktops service.
     * 
     * Provides information about the desktop with the specified OCID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktop = DesktopsFunctions.getDesktop(GetDesktopArgs.builder()
     *             .desktopId(testDesktopOciDesktopsDesktop.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopResult> getDesktopPlain(GetDesktopPlainArgs args) {
        return getDesktopPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Desktop resource in Oracle Cloud Infrastructure Desktops service.
     * 
     * Provides information about the desktop with the specified OCID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktop = DesktopsFunctions.getDesktop(GetDesktopArgs.builder()
     *             .desktopId(testDesktopOciDesktopsDesktop.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopResult> getDesktop(GetDesktopArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Desktops/getDesktop:getDesktop", TypeShape.of(GetDesktopResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Desktop resource in Oracle Cloud Infrastructure Desktops service.
     * 
     * Provides information about the desktop with the specified OCID.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktop = DesktopsFunctions.getDesktop(GetDesktopArgs.builder()
     *             .desktopId(testDesktopOciDesktopsDesktop.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopResult> getDesktopPlain(GetDesktopPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Desktops/getDesktop:getDesktop", TypeShape.of(GetDesktopResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Desktop Pool resource in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns information about the desktop pool including all configuration parameters and the current state.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPool = DesktopsFunctions.getDesktopPool(GetDesktopPoolArgs.builder()
     *             .desktopPoolId(testDesktopPoolOciDesktopsDesktopPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopPoolResult> getDesktopPool(GetDesktopPoolArgs args) {
        return getDesktopPool(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Desktop Pool resource in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns information about the desktop pool including all configuration parameters and the current state.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPool = DesktopsFunctions.getDesktopPool(GetDesktopPoolArgs.builder()
     *             .desktopPoolId(testDesktopPoolOciDesktopsDesktopPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopPoolResult> getDesktopPoolPlain(GetDesktopPoolPlainArgs args) {
        return getDesktopPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Desktop Pool resource in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns information about the desktop pool including all configuration parameters and the current state.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPool = DesktopsFunctions.getDesktopPool(GetDesktopPoolArgs.builder()
     *             .desktopPoolId(testDesktopPoolOciDesktopsDesktopPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopPoolResult> getDesktopPool(GetDesktopPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Desktops/getDesktopPool:getDesktopPool", TypeShape.of(GetDesktopPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Desktop Pool resource in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns information about the desktop pool including all configuration parameters and the current state.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPool = DesktopsFunctions.getDesktopPool(GetDesktopPoolArgs.builder()
     *             .desktopPoolId(testDesktopPoolOciDesktopsDesktopPool.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopPoolResult> getDesktopPoolPlain(GetDesktopPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Desktops/getDesktopPool:getDesktopPool", TypeShape.of(GetDesktopPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Desktop Pool Desktops in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktops within a given desktop pool. You can limit the results to an availability domain, desktop name, or desktop state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolDesktopsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPoolDesktops = DesktopsFunctions.getDesktopPoolDesktops(GetDesktopPoolDesktopsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .desktopPoolId(testDesktopPool.id())
     *             .availabilityDomain(desktopPoolDesktopAvailabilityDomain)
     *             .displayName(desktopPoolDesktopDisplayName)
     *             .id(desktopPoolDesktopId)
     *             .state(desktopPoolDesktopState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopPoolDesktopsResult> getDesktopPoolDesktops(GetDesktopPoolDesktopsArgs args) {
        return getDesktopPoolDesktops(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Desktop Pool Desktops in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktops within a given desktop pool. You can limit the results to an availability domain, desktop name, or desktop state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolDesktopsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPoolDesktops = DesktopsFunctions.getDesktopPoolDesktops(GetDesktopPoolDesktopsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .desktopPoolId(testDesktopPool.id())
     *             .availabilityDomain(desktopPoolDesktopAvailabilityDomain)
     *             .displayName(desktopPoolDesktopDisplayName)
     *             .id(desktopPoolDesktopId)
     *             .state(desktopPoolDesktopState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopPoolDesktopsResult> getDesktopPoolDesktopsPlain(GetDesktopPoolDesktopsPlainArgs args) {
        return getDesktopPoolDesktopsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Desktop Pool Desktops in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktops within a given desktop pool. You can limit the results to an availability domain, desktop name, or desktop state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolDesktopsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPoolDesktops = DesktopsFunctions.getDesktopPoolDesktops(GetDesktopPoolDesktopsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .desktopPoolId(testDesktopPool.id())
     *             .availabilityDomain(desktopPoolDesktopAvailabilityDomain)
     *             .displayName(desktopPoolDesktopDisplayName)
     *             .id(desktopPoolDesktopId)
     *             .state(desktopPoolDesktopState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopPoolDesktopsResult> getDesktopPoolDesktops(GetDesktopPoolDesktopsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Desktops/getDesktopPoolDesktops:getDesktopPoolDesktops", TypeShape.of(GetDesktopPoolDesktopsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Desktop Pool Desktops in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktops within a given desktop pool. You can limit the results to an availability domain, desktop name, or desktop state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolDesktopsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPoolDesktops = DesktopsFunctions.getDesktopPoolDesktops(GetDesktopPoolDesktopsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .desktopPoolId(testDesktopPool.id())
     *             .availabilityDomain(desktopPoolDesktopAvailabilityDomain)
     *             .displayName(desktopPoolDesktopDisplayName)
     *             .id(desktopPoolDesktopId)
     *             .state(desktopPoolDesktopState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopPoolDesktopsResult> getDesktopPoolDesktopsPlain(GetDesktopPoolDesktopsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Desktops/getDesktopPoolDesktops:getDesktopPoolDesktops", TypeShape.of(GetDesktopPoolDesktopsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Desktop Pool Volumes in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of volumes within the given desktop pool. You can limit the results to an availability domain, volume name, or volume state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolVolumesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPoolVolumes = DesktopsFunctions.getDesktopPoolVolumes(GetDesktopPoolVolumesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .desktopPoolId(testDesktopPool.id())
     *             .availabilityDomain(desktopPoolVolumeAvailabilityDomain)
     *             .displayName(desktopPoolVolumeDisplayName)
     *             .id(desktopPoolVolumeId)
     *             .state(desktopPoolVolumeState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopPoolVolumesResult> getDesktopPoolVolumes(GetDesktopPoolVolumesArgs args) {
        return getDesktopPoolVolumes(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Desktop Pool Volumes in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of volumes within the given desktop pool. You can limit the results to an availability domain, volume name, or volume state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolVolumesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPoolVolumes = DesktopsFunctions.getDesktopPoolVolumes(GetDesktopPoolVolumesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .desktopPoolId(testDesktopPool.id())
     *             .availabilityDomain(desktopPoolVolumeAvailabilityDomain)
     *             .displayName(desktopPoolVolumeDisplayName)
     *             .id(desktopPoolVolumeId)
     *             .state(desktopPoolVolumeState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopPoolVolumesResult> getDesktopPoolVolumesPlain(GetDesktopPoolVolumesPlainArgs args) {
        return getDesktopPoolVolumesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Desktop Pool Volumes in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of volumes within the given desktop pool. You can limit the results to an availability domain, volume name, or volume state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolVolumesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPoolVolumes = DesktopsFunctions.getDesktopPoolVolumes(GetDesktopPoolVolumesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .desktopPoolId(testDesktopPool.id())
     *             .availabilityDomain(desktopPoolVolumeAvailabilityDomain)
     *             .displayName(desktopPoolVolumeDisplayName)
     *             .id(desktopPoolVolumeId)
     *             .state(desktopPoolVolumeState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopPoolVolumesResult> getDesktopPoolVolumes(GetDesktopPoolVolumesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Desktops/getDesktopPoolVolumes:getDesktopPoolVolumes", TypeShape.of(GetDesktopPoolVolumesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Desktop Pool Volumes in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of volumes within the given desktop pool. You can limit the results to an availability domain, volume name, or volume state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolVolumesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPoolVolumes = DesktopsFunctions.getDesktopPoolVolumes(GetDesktopPoolVolumesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .desktopPoolId(testDesktopPool.id())
     *             .availabilityDomain(desktopPoolVolumeAvailabilityDomain)
     *             .displayName(desktopPoolVolumeDisplayName)
     *             .id(desktopPoolVolumeId)
     *             .state(desktopPoolVolumeState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopPoolVolumesResult> getDesktopPoolVolumesPlain(GetDesktopPoolVolumesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Desktops/getDesktopPoolVolumes:getDesktopPoolVolumes", TypeShape.of(GetDesktopPoolVolumesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Desktop Pools in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktop pools within the given compartment. You can limit the results to an availability domain, pool name, or pool state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPools = DesktopsFunctions.getDesktopPools(GetDesktopPoolsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .availabilityDomain(desktopPoolAvailabilityDomain)
     *             .displayName(desktopPoolDisplayName)
     *             .id(desktopPoolId)
     *             .state(desktopPoolState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopPoolsResult> getDesktopPools(GetDesktopPoolsArgs args) {
        return getDesktopPools(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Desktop Pools in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktop pools within the given compartment. You can limit the results to an availability domain, pool name, or pool state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPools = DesktopsFunctions.getDesktopPools(GetDesktopPoolsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .availabilityDomain(desktopPoolAvailabilityDomain)
     *             .displayName(desktopPoolDisplayName)
     *             .id(desktopPoolId)
     *             .state(desktopPoolState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopPoolsResult> getDesktopPoolsPlain(GetDesktopPoolsPlainArgs args) {
        return getDesktopPoolsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Desktop Pools in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktop pools within the given compartment. You can limit the results to an availability domain, pool name, or pool state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPools = DesktopsFunctions.getDesktopPools(GetDesktopPoolsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .availabilityDomain(desktopPoolAvailabilityDomain)
     *             .displayName(desktopPoolDisplayName)
     *             .id(desktopPoolId)
     *             .state(desktopPoolState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopPoolsResult> getDesktopPools(GetDesktopPoolsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Desktops/getDesktopPools:getDesktopPools", TypeShape.of(GetDesktopPoolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Desktop Pools in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktop pools within the given compartment. You can limit the results to an availability domain, pool name, or pool state. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopPoolsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktopPools = DesktopsFunctions.getDesktopPools(GetDesktopPoolsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .availabilityDomain(desktopPoolAvailabilityDomain)
     *             .displayName(desktopPoolDisplayName)
     *             .id(desktopPoolId)
     *             .state(desktopPoolState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopPoolsResult> getDesktopPoolsPlain(GetDesktopPoolsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Desktops/getDesktopPools:getDesktopPools", TypeShape.of(GetDesktopPoolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Desktops in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktops filtered by the specified parameters. You can limit the results to an availability domain, desktop name, desktop OCID, desktop state, pool OCID, or compartment OCID. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktops = DesktopsFunctions.getDesktops(GetDesktopsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .availabilityDomain(desktopAvailabilityDomain)
     *             .desktopPoolId(testDesktopPool.id())
     *             .displayName(desktopDisplayName)
     *             .id(desktopId)
     *             .state(desktopState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopsResult> getDesktops(GetDesktopsArgs args) {
        return getDesktops(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Desktops in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktops filtered by the specified parameters. You can limit the results to an availability domain, desktop name, desktop OCID, desktop state, pool OCID, or compartment OCID. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktops = DesktopsFunctions.getDesktops(GetDesktopsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .availabilityDomain(desktopAvailabilityDomain)
     *             .desktopPoolId(testDesktopPool.id())
     *             .displayName(desktopDisplayName)
     *             .id(desktopId)
     *             .state(desktopState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopsResult> getDesktopsPlain(GetDesktopsPlainArgs args) {
        return getDesktopsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Desktops in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktops filtered by the specified parameters. You can limit the results to an availability domain, desktop name, desktop OCID, desktop state, pool OCID, or compartment OCID. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktops = DesktopsFunctions.getDesktops(GetDesktopsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .availabilityDomain(desktopAvailabilityDomain)
     *             .desktopPoolId(testDesktopPool.id())
     *             .displayName(desktopDisplayName)
     *             .id(desktopId)
     *             .state(desktopState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDesktopsResult> getDesktops(GetDesktopsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:Desktops/getDesktops:getDesktops", TypeShape.of(GetDesktopsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Desktops in Oracle Cloud Infrastructure Desktops service.
     * 
     * Returns a list of desktops filtered by the specified parameters. You can limit the results to an availability domain, desktop name, desktop OCID, desktop state, pool OCID, or compartment OCID. You can limit the number of results returned, sort the results by time or name, and sort in ascending or descending order.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.Desktops.DesktopsFunctions;
     * import com.pulumi.oci.Desktops.inputs.GetDesktopsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testDesktops = DesktopsFunctions.getDesktops(GetDesktopsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .availabilityDomain(desktopAvailabilityDomain)
     *             .desktopPoolId(testDesktopPool.id())
     *             .displayName(desktopDisplayName)
     *             .id(desktopId)
     *             .state(desktopState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDesktopsResult> getDesktopsPlain(GetDesktopsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Desktops/getDesktops:getDesktops", TypeShape.of(GetDesktopsResult.class), args, Utilities.withVersion(options));
    }
}
