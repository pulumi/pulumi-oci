// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Desktops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DesktopPoolAvailabilityPolicyStopScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DesktopPoolAvailabilityPolicyStopScheduleArgs Empty = new DesktopPoolAvailabilityPolicyStopScheduleArgs();

    /**
     * (Updatable) A cron expression describing the desktop&#39;s schedule.
     * 
     */
    @Import(name="cronExpression", required=true)
    private Output<String> cronExpression;

    /**
     * @return (Updatable) A cron expression describing the desktop&#39;s schedule.
     * 
     */
    public Output<String> cronExpression() {
        return this.cronExpression;
    }

    /**
     * (Updatable) The timezone of the desktop&#39;s schedule.
     * 
     */
    @Import(name="timezone", required=true)
    private Output<String> timezone;

    /**
     * @return (Updatable) The timezone of the desktop&#39;s schedule.
     * 
     */
    public Output<String> timezone() {
        return this.timezone;
    }

    private DesktopPoolAvailabilityPolicyStopScheduleArgs() {}

    private DesktopPoolAvailabilityPolicyStopScheduleArgs(DesktopPoolAvailabilityPolicyStopScheduleArgs $) {
        this.cronExpression = $.cronExpression;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DesktopPoolAvailabilityPolicyStopScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DesktopPoolAvailabilityPolicyStopScheduleArgs $;

        public Builder() {
            $ = new DesktopPoolAvailabilityPolicyStopScheduleArgs();
        }

        public Builder(DesktopPoolAvailabilityPolicyStopScheduleArgs defaults) {
            $ = new DesktopPoolAvailabilityPolicyStopScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cronExpression (Updatable) A cron expression describing the desktop&#39;s schedule.
         * 
         * @return builder
         * 
         */
        public Builder cronExpression(Output<String> cronExpression) {
            $.cronExpression = cronExpression;
            return this;
        }

        /**
         * @param cronExpression (Updatable) A cron expression describing the desktop&#39;s schedule.
         * 
         * @return builder
         * 
         */
        public Builder cronExpression(String cronExpression) {
            return cronExpression(Output.of(cronExpression));
        }

        /**
         * @param timezone (Updatable) The timezone of the desktop&#39;s schedule.
         * 
         * @return builder
         * 
         */
        public Builder timezone(Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone (Updatable) The timezone of the desktop&#39;s schedule.
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public DesktopPoolAvailabilityPolicyStopScheduleArgs build() {
            if ($.cronExpression == null) {
                throw new MissingRequiredPropertyException("DesktopPoolAvailabilityPolicyStopScheduleArgs", "cronExpression");
            }
            if ($.timezone == null) {
                throw new MissingRequiredPropertyException("DesktopPoolAvailabilityPolicyStopScheduleArgs", "timezone");
            }
            return $;
        }
    }

}
