// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Desktops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DesktopPoolImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final DesktopPoolImageArgs Empty = new DesktopPoolImageArgs();

    /**
     * The OCID of the desktop image.
     * 
     */
    @Import(name="imageId", required=true)
    private Output<String> imageId;

    /**
     * @return The OCID of the desktop image.
     * 
     */
    public Output<String> imageId() {
        return this.imageId;
    }

    /**
     * The name of the desktop image.
     * 
     */
    @Import(name="imageName", required=true)
    private Output<String> imageName;

    /**
     * @return The name of the desktop image.
     * 
     */
    public Output<String> imageName() {
        return this.imageName;
    }

    private DesktopPoolImageArgs() {}

    private DesktopPoolImageArgs(DesktopPoolImageArgs $) {
        this.imageId = $.imageId;
        this.imageName = $.imageName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DesktopPoolImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DesktopPoolImageArgs $;

        public Builder() {
            $ = new DesktopPoolImageArgs();
        }

        public Builder(DesktopPoolImageArgs defaults) {
            $ = new DesktopPoolImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param imageId The OCID of the desktop image.
         * 
         * @return builder
         * 
         */
        public Builder imageId(Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId The OCID of the desktop image.
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        /**
         * @param imageName The name of the desktop image.
         * 
         * @return builder
         * 
         */
        public Builder imageName(Output<String> imageName) {
            $.imageName = imageName;
            return this;
        }

        /**
         * @param imageName The name of the desktop image.
         * 
         * @return builder
         * 
         */
        public Builder imageName(String imageName) {
            return imageName(Output.of(imageName));
        }

        public DesktopPoolImageArgs build() {
            if ($.imageId == null) {
                throw new MissingRequiredPropertyException("DesktopPoolImageArgs", "imageId");
            }
            if ($.imageName == null) {
                throw new MissingRequiredPropertyException("DesktopPoolImageArgs", "imageName");
            }
            return $;
        }
    }

}
