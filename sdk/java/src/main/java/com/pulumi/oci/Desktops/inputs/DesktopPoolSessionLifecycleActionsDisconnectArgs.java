// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Desktops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DesktopPoolSessionLifecycleActionsDisconnectArgs extends com.pulumi.resources.ResourceArgs {

    public static final DesktopPoolSessionLifecycleActionsDisconnectArgs Empty = new DesktopPoolSessionLifecycleActionsDisconnectArgs();

    /**
     * (Updatable) a disconnect action to be triggered. Could be set to NONE or STOP
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return (Updatable) a disconnect action to be triggered. Could be set to NONE or STOP
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * (Updatable) The period of time (in minutes) after disconnect before any action occurs. If the value is not provided, a default value is used.
     * 
     */
    @Import(name="gracePeriodInMinutes")
    private @Nullable Output<Integer> gracePeriodInMinutes;

    /**
     * @return (Updatable) The period of time (in minutes) after disconnect before any action occurs. If the value is not provided, a default value is used.
     * 
     */
    public Optional<Output<Integer>> gracePeriodInMinutes() {
        return Optional.ofNullable(this.gracePeriodInMinutes);
    }

    private DesktopPoolSessionLifecycleActionsDisconnectArgs() {}

    private DesktopPoolSessionLifecycleActionsDisconnectArgs(DesktopPoolSessionLifecycleActionsDisconnectArgs $) {
        this.action = $.action;
        this.gracePeriodInMinutes = $.gracePeriodInMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DesktopPoolSessionLifecycleActionsDisconnectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DesktopPoolSessionLifecycleActionsDisconnectArgs $;

        public Builder() {
            $ = new DesktopPoolSessionLifecycleActionsDisconnectArgs();
        }

        public Builder(DesktopPoolSessionLifecycleActionsDisconnectArgs defaults) {
            $ = new DesktopPoolSessionLifecycleActionsDisconnectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action (Updatable) a disconnect action to be triggered. Could be set to NONE or STOP
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action (Updatable) a disconnect action to be triggered. Could be set to NONE or STOP
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param gracePeriodInMinutes (Updatable) The period of time (in minutes) after disconnect before any action occurs. If the value is not provided, a default value is used.
         * 
         * @return builder
         * 
         */
        public Builder gracePeriodInMinutes(@Nullable Output<Integer> gracePeriodInMinutes) {
            $.gracePeriodInMinutes = gracePeriodInMinutes;
            return this;
        }

        /**
         * @param gracePeriodInMinutes (Updatable) The period of time (in minutes) after disconnect before any action occurs. If the value is not provided, a default value is used.
         * 
         * @return builder
         * 
         */
        public Builder gracePeriodInMinutes(Integer gracePeriodInMinutes) {
            return gracePeriodInMinutes(Output.of(gracePeriodInMinutes));
        }

        public DesktopPoolSessionLifecycleActionsDisconnectArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("DesktopPoolSessionLifecycleActionsDisconnectArgs", "action");
            }
            return $;
        }
    }

}
