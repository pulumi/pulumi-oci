// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Desktops.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Desktops.outputs.GetDesktopPoolSessionLifecycleActionDisconnect;
import com.pulumi.oci.Desktops.outputs.GetDesktopPoolSessionLifecycleActionInactivity;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDesktopPoolSessionLifecycleAction {
    /**
     * @return Action and grace period for disconnect
     * 
     */
    private List<GetDesktopPoolSessionLifecycleActionDisconnect> disconnects;
    /**
     * @return Action and grace period for inactivity
     * 
     */
    private List<GetDesktopPoolSessionLifecycleActionInactivity> inactivities;

    private GetDesktopPoolSessionLifecycleAction() {}
    /**
     * @return Action and grace period for disconnect
     * 
     */
    public List<GetDesktopPoolSessionLifecycleActionDisconnect> disconnects() {
        return this.disconnects;
    }
    /**
     * @return Action and grace period for inactivity
     * 
     */
    public List<GetDesktopPoolSessionLifecycleActionInactivity> inactivities() {
        return this.inactivities;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDesktopPoolSessionLifecycleAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDesktopPoolSessionLifecycleActionDisconnect> disconnects;
        private List<GetDesktopPoolSessionLifecycleActionInactivity> inactivities;
        public Builder() {}
        public Builder(GetDesktopPoolSessionLifecycleAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disconnects = defaults.disconnects;
    	      this.inactivities = defaults.inactivities;
        }

        @CustomType.Setter
        public Builder disconnects(List<GetDesktopPoolSessionLifecycleActionDisconnect> disconnects) {
            if (disconnects == null) {
              throw new MissingRequiredPropertyException("GetDesktopPoolSessionLifecycleAction", "disconnects");
            }
            this.disconnects = disconnects;
            return this;
        }
        public Builder disconnects(GetDesktopPoolSessionLifecycleActionDisconnect... disconnects) {
            return disconnects(List.of(disconnects));
        }
        @CustomType.Setter
        public Builder inactivities(List<GetDesktopPoolSessionLifecycleActionInactivity> inactivities) {
            if (inactivities == null) {
              throw new MissingRequiredPropertyException("GetDesktopPoolSessionLifecycleAction", "inactivities");
            }
            this.inactivities = inactivities;
            return this;
        }
        public Builder inactivities(GetDesktopPoolSessionLifecycleActionInactivity... inactivities) {
            return inactivities(List.of(inactivities));
        }
        public GetDesktopPoolSessionLifecycleAction build() {
            final var _resultValue = new GetDesktopPoolSessionLifecycleAction();
            _resultValue.disconnects = disconnects;
            _resultValue.inactivities = inactivities;
            return _resultValue;
        }
    }
}
