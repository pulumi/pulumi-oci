// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Desktops.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Desktops.outputs.GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule;
import com.pulumi.oci.Desktops.outputs.GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy {
    /**
     * @return Provides the schedule information for a desktop.
     * 
     */
    private List<GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule> startSchedules;
    /**
     * @return Provides the schedule information for a desktop.
     * 
     */
    private List<GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule> stopSchedules;

    private GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy() {}
    /**
     * @return Provides the schedule information for a desktop.
     * 
     */
    public List<GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule> startSchedules() {
        return this.startSchedules;
    }
    /**
     * @return Provides the schedule information for a desktop.
     * 
     */
    public List<GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule> stopSchedules() {
        return this.stopSchedules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule> startSchedules;
        private List<GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule> stopSchedules;
        public Builder() {}
        public Builder(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.startSchedules = defaults.startSchedules;
    	      this.stopSchedules = defaults.stopSchedules;
        }

        @CustomType.Setter
        public Builder startSchedules(List<GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule> startSchedules) {
            if (startSchedules == null) {
              throw new MissingRequiredPropertyException("GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy", "startSchedules");
            }
            this.startSchedules = startSchedules;
            return this;
        }
        public Builder startSchedules(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStartSchedule... startSchedules) {
            return startSchedules(List.of(startSchedules));
        }
        @CustomType.Setter
        public Builder stopSchedules(List<GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule> stopSchedules) {
            if (stopSchedules == null) {
              throw new MissingRequiredPropertyException("GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy", "stopSchedules");
            }
            this.stopSchedules = stopSchedules;
            return this;
        }
        public Builder stopSchedules(GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicyStopSchedule... stopSchedules) {
            return stopSchedules(List.of(stopSchedules));
        }
        public GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy build() {
            final var _resultValue = new GetDesktopPoolsDesktopPoolCollectionItemAvailabilityPolicy();
            _resultValue.startSchedules = startSchedules;
            _resultValue.stopSchedules = stopSchedules;
            return _resultValue;
        }
    }
}
