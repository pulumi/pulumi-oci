// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Desktops.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDesktopPoolsDesktopPoolCollectionItemShapeConfig {
    /**
     * @return The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
     * * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
     * * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
     * * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
     * 
     */
    private String baselineOcpuUtilization;
    /**
     * @return The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
     * 
     */
    private String memoryInGbs;
    /**
     * @return The total number of OCPUs available for each desktop compute instance in the desktop pool.
     * 
     */
    private String ocpus;

    private GetDesktopPoolsDesktopPoolCollectionItemShapeConfig() {}
    /**
     * @return The baseline OCPU utilization for a subcore burstable VM instance used for each desktop compute instance in the desktop pool. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`. The following values are supported:
     * * `BASELINE_1_8` - baseline usage is 1/8 of an OCPU.
     * * `BASELINE_1_2` - baseline usage is 1/2 of an OCPU.
     * * `BASELINE_1_1` - baseline usage is the entire OCPU. This represents a non-burstable instance.
     * 
     */
    public String baselineOcpuUtilization() {
        return this.baselineOcpuUtilization;
    }
    /**
     * @return The total amount of memory available in gigabytes for each desktop compute instance in the desktop pool.
     * 
     */
    public String memoryInGbs() {
        return this.memoryInGbs;
    }
    /**
     * @return The total number of OCPUs available for each desktop compute instance in the desktop pool.
     * 
     */
    public String ocpus() {
        return this.ocpus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDesktopPoolsDesktopPoolCollectionItemShapeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String baselineOcpuUtilization;
        private String memoryInGbs;
        private String ocpus;
        public Builder() {}
        public Builder(GetDesktopPoolsDesktopPoolCollectionItemShapeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineOcpuUtilization = defaults.baselineOcpuUtilization;
    	      this.memoryInGbs = defaults.memoryInGbs;
    	      this.ocpus = defaults.ocpus;
        }

        @CustomType.Setter
        public Builder baselineOcpuUtilization(String baselineOcpuUtilization) {
            if (baselineOcpuUtilization == null) {
              throw new MissingRequiredPropertyException("GetDesktopPoolsDesktopPoolCollectionItemShapeConfig", "baselineOcpuUtilization");
            }
            this.baselineOcpuUtilization = baselineOcpuUtilization;
            return this;
        }
        @CustomType.Setter
        public Builder memoryInGbs(String memoryInGbs) {
            if (memoryInGbs == null) {
              throw new MissingRequiredPropertyException("GetDesktopPoolsDesktopPoolCollectionItemShapeConfig", "memoryInGbs");
            }
            this.memoryInGbs = memoryInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder ocpus(String ocpus) {
            if (ocpus == null) {
              throw new MissingRequiredPropertyException("GetDesktopPoolsDesktopPoolCollectionItemShapeConfig", "ocpus");
            }
            this.ocpus = ocpus;
            return this;
        }
        public GetDesktopPoolsDesktopPoolCollectionItemShapeConfig build() {
            final var _resultValue = new GetDesktopPoolsDesktopPoolCollectionItemShapeConfig();
            _resultValue.baselineOcpuUtilization = baselineOcpuUtilization;
            _resultValue.memoryInGbs = memoryInGbs;
            _resultValue.ocpus = ocpus;
            return _resultValue;
        }
    }
}
