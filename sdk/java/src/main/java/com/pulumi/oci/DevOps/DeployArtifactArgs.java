// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DevOps.inputs.DeployArtifactDeployArtifactSourceArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeployArtifactArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeployArtifactArgs Empty = new DeployArtifactArgs();

    /**
     * (Updatable) Mode for artifact parameter substitution. Options: `&#34;NONE&#34;, &#34;SUBSTITUTE_PLACEHOLDERS&#34;` For Helm Deployments only &#34;NONE&#34; is supported.
     * 
     */
    @Import(name="argumentSubstitutionMode", required=true)
    private Output<String> argumentSubstitutionMode;

    /**
     * @return (Updatable) Mode for artifact parameter substitution. Options: `&#34;NONE&#34;, &#34;SUBSTITUTE_PLACEHOLDERS&#34;` For Helm Deployments only &#34;NONE&#34; is supported.
     * 
     */
    public Output<String> argumentSubstitutionMode() {
        return this.argumentSubstitutionMode;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Specifies source of an artifact.
     * 
     */
    @Import(name="deployArtifactSource", required=true)
    private Output<DeployArtifactDeployArtifactSourceArgs> deployArtifactSource;

    /**
     * @return (Updatable) Specifies source of an artifact.
     * 
     */
    public Output<DeployArtifactDeployArtifactSourceArgs> deployArtifactSource() {
        return this.deployArtifactSource;
    }

    /**
     * (Updatable) Type of the deployment artifact.
     * 
     */
    @Import(name="deployArtifactType", required=true)
    private Output<String> deployArtifactType;

    /**
     * @return (Updatable) Type of the deployment artifact.
     * 
     */
    public Output<String> deployArtifactType() {
        return this.deployArtifactType;
    }

    /**
     * (Updatable) Optional description about the deployment artifact.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Optional description about the deployment artifact.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Deployment artifact display name. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Deployment artifact display name. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The OCID of a project.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The OCID of a project.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    private DeployArtifactArgs() {}

    private DeployArtifactArgs(DeployArtifactArgs $) {
        this.argumentSubstitutionMode = $.argumentSubstitutionMode;
        this.definedTags = $.definedTags;
        this.deployArtifactSource = $.deployArtifactSource;
        this.deployArtifactType = $.deployArtifactType;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeployArtifactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeployArtifactArgs $;

        public Builder() {
            $ = new DeployArtifactArgs();
        }

        public Builder(DeployArtifactArgs defaults) {
            $ = new DeployArtifactArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param argumentSubstitutionMode (Updatable) Mode for artifact parameter substitution. Options: `&#34;NONE&#34;, &#34;SUBSTITUTE_PLACEHOLDERS&#34;` For Helm Deployments only &#34;NONE&#34; is supported.
         * 
         * @return builder
         * 
         */
        public Builder argumentSubstitutionMode(Output<String> argumentSubstitutionMode) {
            $.argumentSubstitutionMode = argumentSubstitutionMode;
            return this;
        }

        /**
         * @param argumentSubstitutionMode (Updatable) Mode for artifact parameter substitution. Options: `&#34;NONE&#34;, &#34;SUBSTITUTE_PLACEHOLDERS&#34;` For Helm Deployments only &#34;NONE&#34; is supported.
         * 
         * @return builder
         * 
         */
        public Builder argumentSubstitutionMode(String argumentSubstitutionMode) {
            return argumentSubstitutionMode(Output.of(argumentSubstitutionMode));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param deployArtifactSource (Updatable) Specifies source of an artifact.
         * 
         * @return builder
         * 
         */
        public Builder deployArtifactSource(Output<DeployArtifactDeployArtifactSourceArgs> deployArtifactSource) {
            $.deployArtifactSource = deployArtifactSource;
            return this;
        }

        /**
         * @param deployArtifactSource (Updatable) Specifies source of an artifact.
         * 
         * @return builder
         * 
         */
        public Builder deployArtifactSource(DeployArtifactDeployArtifactSourceArgs deployArtifactSource) {
            return deployArtifactSource(Output.of(deployArtifactSource));
        }

        /**
         * @param deployArtifactType (Updatable) Type of the deployment artifact.
         * 
         * @return builder
         * 
         */
        public Builder deployArtifactType(Output<String> deployArtifactType) {
            $.deployArtifactType = deployArtifactType;
            return this;
        }

        /**
         * @param deployArtifactType (Updatable) Type of the deployment artifact.
         * 
         * @return builder
         * 
         */
        public Builder deployArtifactType(String deployArtifactType) {
            return deployArtifactType(Output.of(deployArtifactType));
        }

        /**
         * @param description (Updatable) Optional description about the deployment artifact.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Optional description about the deployment artifact.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) Deployment artifact display name. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Deployment artifact display name. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param projectId The OCID of a project.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The OCID of a project.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public DeployArtifactArgs build() {
            if ($.argumentSubstitutionMode == null) {
                throw new MissingRequiredPropertyException("DeployArtifactArgs", "argumentSubstitutionMode");
            }
            if ($.deployArtifactSource == null) {
                throw new MissingRequiredPropertyException("DeployArtifactArgs", "deployArtifactSource");
            }
            if ($.deployArtifactType == null) {
                throw new MissingRequiredPropertyException("DeployArtifactArgs", "deployArtifactType");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("DeployArtifactArgs", "projectId");
            }
            return $;
        }
    }

}
