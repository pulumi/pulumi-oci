// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DevOps.DeploymentArgs;
import com.pulumi.oci.DevOps.inputs.DeploymentState;
import com.pulumi.oci.DevOps.outputs.DeploymentDeployArtifactOverrideArguments;
import com.pulumi.oci.DevOps.outputs.DeploymentDeployPipelineArtifact;
import com.pulumi.oci.DevOps.outputs.DeploymentDeployPipelineEnvironment;
import com.pulumi.oci.DevOps.outputs.DeploymentDeployStageOverrideArguments;
import com.pulumi.oci.DevOps.outputs.DeploymentDeploymentArguments;
import com.pulumi.oci.DevOps.outputs.DeploymentDeploymentExecutionProgress;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Deployment resource in Oracle Cloud Infrastructure Devops service.
 * 
 * Creates a new deployment.
 * 
 * ## Import
 * 
 * Deployments can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:DevOps/deployment:Deployment test_deployment &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DevOps/deployment:Deployment")
public class Deployment extends com.pulumi.resources.CustomResource {
    /**
     * The OCID of a compartment.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return The OCID of a compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * Specifies the list of artifact override arguments at the time of deployment.
     * 
     */
    @Export(name="deployArtifactOverrideArguments", refs={DeploymentDeployArtifactOverrideArguments.class}, tree="[0]")
    private Output<DeploymentDeployArtifactOverrideArguments> deployArtifactOverrideArguments;

    /**
     * @return Specifies the list of artifact override arguments at the time of deployment.
     * 
     */
    public Output<DeploymentDeployArtifactOverrideArguments> deployArtifactOverrideArguments() {
        return this.deployArtifactOverrideArguments;
    }
    /**
     * List of all artifacts used in the pipeline.
     * 
     */
    @Export(name="deployPipelineArtifacts", refs={List.class,DeploymentDeployPipelineArtifact.class}, tree="[0,1]")
    private Output<List<DeploymentDeployPipelineArtifact>> deployPipelineArtifacts;

    /**
     * @return List of all artifacts used in the pipeline.
     * 
     */
    public Output<List<DeploymentDeployPipelineArtifact>> deployPipelineArtifacts() {
        return this.deployPipelineArtifacts;
    }
    /**
     * List of all environments used in the pipeline.
     * 
     */
    @Export(name="deployPipelineEnvironments", refs={List.class,DeploymentDeployPipelineEnvironment.class}, tree="[0,1]")
    private Output<List<DeploymentDeployPipelineEnvironment>> deployPipelineEnvironments;

    /**
     * @return List of all environments used in the pipeline.
     * 
     */
    public Output<List<DeploymentDeployPipelineEnvironment>> deployPipelineEnvironments() {
        return this.deployPipelineEnvironments;
    }
    /**
     * The OCID of a pipeline.
     * 
     */
    @Export(name="deployPipelineId", refs={String.class}, tree="[0]")
    private Output<String> deployPipelineId;

    /**
     * @return The OCID of a pipeline.
     * 
     */
    public Output<String> deployPipelineId() {
        return this.deployPipelineId;
    }
    /**
     * Specifies the OCID of the stage to be redeployed.
     * 
     */
    @Export(name="deployStageId", refs={String.class}, tree="[0]")
    private Output<String> deployStageId;

    /**
     * @return Specifies the OCID of the stage to be redeployed.
     * 
     */
    public Output<String> deployStageId() {
        return this.deployStageId;
    }
    /**
     * Specifies the list of arguments to be overriden per Stage at the time of deployment.
     * 
     */
    @Export(name="deployStageOverrideArguments", refs={DeploymentDeployStageOverrideArguments.class}, tree="[0]")
    private Output<DeploymentDeployStageOverrideArguments> deployStageOverrideArguments;

    /**
     * @return Specifies the list of arguments to be overriden per Stage at the time of deployment.
     * 
     */
    public Output<DeploymentDeployStageOverrideArguments> deployStageOverrideArguments() {
        return this.deployStageOverrideArguments;
    }
    /**
     * Specifies list of arguments passed along with the deployment.
     * 
     */
    @Export(name="deploymentArguments", refs={DeploymentDeploymentArguments.class}, tree="[0]")
    private Output<DeploymentDeploymentArguments> deploymentArguments;

    /**
     * @return Specifies list of arguments passed along with the deployment.
     * 
     */
    public Output<DeploymentDeploymentArguments> deploymentArguments() {
        return this.deploymentArguments;
    }
    /**
     * The execution progress details of a deployment.
     * 
     */
    @Export(name="deploymentExecutionProgresses", refs={List.class,DeploymentDeploymentExecutionProgress.class}, tree="[0,1]")
    private Output<List<DeploymentDeploymentExecutionProgress>> deploymentExecutionProgresses;

    /**
     * @return The execution progress details of a deployment.
     * 
     */
    public Output<List<DeploymentDeploymentExecutionProgress>> deploymentExecutionProgresses() {
        return this.deploymentExecutionProgresses;
    }
    /**
     * (Updatable) Specifies type for this deployment.
     * 
     */
    @Export(name="deploymentType", refs={String.class}, tree="[0]")
    private Output<String> deploymentType;

    /**
     * @return (Updatable) Specifies type for this deployment.
     * 
     */
    public Output<String> deploymentType() {
        return this.deploymentType;
    }
    /**
     * (Updatable) Deployment display name. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) Deployment display name. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * Specifies the OCID of the previous deployment to be redeployed.
     * 
     */
    @Export(name="previousDeploymentId", refs={String.class}, tree="[0]")
    private Output<String> previousDeploymentId;

    /**
     * @return Specifies the OCID of the previous deployment to be redeployed.
     * 
     */
    public Output<String> previousDeploymentId() {
        return this.previousDeploymentId;
    }
    /**
     * The OCID of a project.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return The OCID of a project.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * The current state of the deployment.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the deployment.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,Object>> systemTags() {
        return this.systemTags;
    }
    /**
     * Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * A boolean specifying if a new deployment should be created on every apply. As long as this value is set to true in the config, every apply will trigger a new deployment to be created. The existing deployment resource will be replaced with the new one in the state file (deployment resources are never deleted, they persist as a store of records, but your state file will only track the latest one created with this resource block).
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values. Additionally, while `trigger_new_devops_deployment`
     * is set true each apply will force the destruction and recreation of the resource with the new property values.
     * 
     */
    @Export(name="triggerNewDevopsDeployment", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> triggerNewDevopsDeployment;

    /**
     * @return A boolean specifying if a new deployment should be created on every apply. As long as this value is set to true in the config, every apply will trigger a new deployment to be created. The existing deployment resource will be replaced with the new one in the state file (deployment resources are never deleted, they persist as a store of records, but your state file will only track the latest one created with this resource block).
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values. Additionally, while `trigger_new_devops_deployment`
     * is set true each apply will force the destruction and recreation of the resource with the new property values.
     * 
     */
    public Output<Optional<Boolean>> triggerNewDevopsDeployment() {
        return Codegen.optional(this.triggerNewDevopsDeployment);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Deployment(String name) {
        this(name, DeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Deployment(String name, DeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Deployment(String name, DeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DevOps/deployment:Deployment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private Deployment(String name, Output<String> id, @Nullable DeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DevOps/deployment:Deployment", name, state, makeResourceOptions(options, id));
    }

    private static DeploymentArgs makeArgs(DeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DeploymentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Deployment get(String name, Output<String> id, @Nullable DeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Deployment(name, id, state, options);
    }
}
