// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildRunSourceTriggerInfoActionFilterIncludeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildRunBuildRunSourceTriggerInfoActionFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildRunBuildRunSourceTriggerInfoActionFilterArgs Empty = new BuildRunBuildRunSourceTriggerInfoActionFilterArgs();

    /**
     * The events, for example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED.
     * 
     */
    @Import(name="events")
    private @Nullable Output<List<String>> events;

    /**
     * @return The events, for example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED.
     * 
     */
    public Optional<Output<List<String>>> events() {
        return Optional.ofNullable(this.events);
    }

    /**
     * Attributes to filter GitLab self-hosted server events. File filter criteria - Changes only affecting excluded files will not invoke a build. if both include and exclude filter are used then exclusion filter will be applied on the result set of inclusion filter.
     * 
     */
    @Import(name="excludes")
    private @Nullable Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs>> excludes;

    /**
     * @return Attributes to filter GitLab self-hosted server events. File filter criteria - Changes only affecting excluded files will not invoke a build. if both include and exclude filter are used then exclusion filter will be applied on the result set of inclusion filter.
     * 
     */
    public Optional<Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs>>> excludes() {
        return Optional.ofNullable(this.excludes);
    }

    /**
     * Attributes to filter GitLab self-hosted server events.
     * 
     */
    @Import(name="includes")
    private @Nullable Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterIncludeArgs>> includes;

    /**
     * @return Attributes to filter GitLab self-hosted server events.
     * 
     */
    public Optional<Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterIncludeArgs>>> includes() {
        return Optional.ofNullable(this.includes);
    }

    /**
     * Source of the trigger. Allowed values are, GITHUB and GITLAB.
     * 
     */
    @Import(name="triggerSource")
    private @Nullable Output<String> triggerSource;

    /**
     * @return Source of the trigger. Allowed values are, GITHUB and GITLAB.
     * 
     */
    public Optional<Output<String>> triggerSource() {
        return Optional.ofNullable(this.triggerSource);
    }

    private BuildRunBuildRunSourceTriggerInfoActionFilterArgs() {}

    private BuildRunBuildRunSourceTriggerInfoActionFilterArgs(BuildRunBuildRunSourceTriggerInfoActionFilterArgs $) {
        this.events = $.events;
        this.excludes = $.excludes;
        this.includes = $.includes;
        this.triggerSource = $.triggerSource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildRunBuildRunSourceTriggerInfoActionFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildRunBuildRunSourceTriggerInfoActionFilterArgs $;

        public Builder() {
            $ = new BuildRunBuildRunSourceTriggerInfoActionFilterArgs();
        }

        public Builder(BuildRunBuildRunSourceTriggerInfoActionFilterArgs defaults) {
            $ = new BuildRunBuildRunSourceTriggerInfoActionFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param events The events, for example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED.
         * 
         * @return builder
         * 
         */
        public Builder events(@Nullable Output<List<String>> events) {
            $.events = events;
            return this;
        }

        /**
         * @param events The events, for example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED.
         * 
         * @return builder
         * 
         */
        public Builder events(List<String> events) {
            return events(Output.of(events));
        }

        /**
         * @param events The events, for example, PUSH, PULL_REQUEST_CREATED, PULL_REQUEST_UPDATED.
         * 
         * @return builder
         * 
         */
        public Builder events(String... events) {
            return events(List.of(events));
        }

        /**
         * @param excludes Attributes to filter GitLab self-hosted server events. File filter criteria - Changes only affecting excluded files will not invoke a build. if both include and exclude filter are used then exclusion filter will be applied on the result set of inclusion filter.
         * 
         * @return builder
         * 
         */
        public Builder excludes(@Nullable Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs>> excludes) {
            $.excludes = excludes;
            return this;
        }

        /**
         * @param excludes Attributes to filter GitLab self-hosted server events. File filter criteria - Changes only affecting excluded files will not invoke a build. if both include and exclude filter are used then exclusion filter will be applied on the result set of inclusion filter.
         * 
         * @return builder
         * 
         */
        public Builder excludes(List<BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs> excludes) {
            return excludes(Output.of(excludes));
        }

        /**
         * @param excludes Attributes to filter GitLab self-hosted server events. File filter criteria - Changes only affecting excluded files will not invoke a build. if both include and exclude filter are used then exclusion filter will be applied on the result set of inclusion filter.
         * 
         * @return builder
         * 
         */
        public Builder excludes(BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs... excludes) {
            return excludes(List.of(excludes));
        }

        /**
         * @param includes Attributes to filter GitLab self-hosted server events.
         * 
         * @return builder
         * 
         */
        public Builder includes(@Nullable Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterIncludeArgs>> includes) {
            $.includes = includes;
            return this;
        }

        /**
         * @param includes Attributes to filter GitLab self-hosted server events.
         * 
         * @return builder
         * 
         */
        public Builder includes(List<BuildRunBuildRunSourceTriggerInfoActionFilterIncludeArgs> includes) {
            return includes(Output.of(includes));
        }

        /**
         * @param includes Attributes to filter GitLab self-hosted server events.
         * 
         * @return builder
         * 
         */
        public Builder includes(BuildRunBuildRunSourceTriggerInfoActionFilterIncludeArgs... includes) {
            return includes(List.of(includes));
        }

        /**
         * @param triggerSource Source of the trigger. Allowed values are, GITHUB and GITLAB.
         * 
         * @return builder
         * 
         */
        public Builder triggerSource(@Nullable Output<String> triggerSource) {
            $.triggerSource = triggerSource;
            return this;
        }

        /**
         * @param triggerSource Source of the trigger. Allowed values are, GITHUB and GITLAB.
         * 
         * @return builder
         * 
         */
        public Builder triggerSource(String triggerSource) {
            return triggerSource(Output.of(triggerSource));
        }

        public BuildRunBuildRunSourceTriggerInfoActionFilterArgs build() {
            return $;
        }
    }

}
