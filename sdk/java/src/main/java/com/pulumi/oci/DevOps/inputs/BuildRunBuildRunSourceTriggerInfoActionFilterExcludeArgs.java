// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildRunSourceTriggerInfoActionFilterExcludeFileFilterArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs Empty = new BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs();

    /**
     * Attributes to support include/exclude files for triggering build runs.
     * 
     */
    @Import(name="fileFilters")
    private @Nullable Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterExcludeFileFilterArgs>> fileFilters;

    /**
     * @return Attributes to support include/exclude files for triggering build runs.
     * 
     */
    public Optional<Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterExcludeFileFilterArgs>>> fileFilters() {
        return Optional.ofNullable(this.fileFilters);
    }

    private BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs() {}

    private BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs(BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs $) {
        this.fileFilters = $.fileFilters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs $;

        public Builder() {
            $ = new BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs();
        }

        public Builder(BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs defaults) {
            $ = new BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fileFilters Attributes to support include/exclude files for triggering build runs.
         * 
         * @return builder
         * 
         */
        public Builder fileFilters(@Nullable Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterExcludeFileFilterArgs>> fileFilters) {
            $.fileFilters = fileFilters;
            return this;
        }

        /**
         * @param fileFilters Attributes to support include/exclude files for triggering build runs.
         * 
         * @return builder
         * 
         */
        public Builder fileFilters(List<BuildRunBuildRunSourceTriggerInfoActionFilterExcludeFileFilterArgs> fileFilters) {
            return fileFilters(Output.of(fileFilters));
        }

        /**
         * @param fileFilters Attributes to support include/exclude files for triggering build runs.
         * 
         * @return builder
         * 
         */
        public Builder fileFilters(BuildRunBuildRunSourceTriggerInfoActionFilterExcludeFileFilterArgs... fileFilters) {
            return fileFilters(List.of(fileFilters));
        }

        public BuildRunBuildRunSourceTriggerInfoActionFilterExcludeArgs build() {
            return $;
        }
    }

}
