// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ConnectionTlsVerifyConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionTlsVerifyConfigArgs Empty = new ConnectionTlsVerifyConfigArgs();

    /**
     * (Updatable) The OCID of Oracle Cloud Infrastructure certificate service CA bundle.
     * 
     */
    @Import(name="caCertificateBundleId", required=true)
    private Output<String> caCertificateBundleId;

    /**
     * @return (Updatable) The OCID of Oracle Cloud Infrastructure certificate service CA bundle.
     * 
     */
    public Output<String> caCertificateBundleId() {
        return this.caCertificateBundleId;
    }

    /**
     * (Updatable) The type of TLS verification.
     * 
     */
    @Import(name="tlsVerifyMode", required=true)
    private Output<String> tlsVerifyMode;

    /**
     * @return (Updatable) The type of TLS verification.
     * 
     */
    public Output<String> tlsVerifyMode() {
        return this.tlsVerifyMode;
    }

    private ConnectionTlsVerifyConfigArgs() {}

    private ConnectionTlsVerifyConfigArgs(ConnectionTlsVerifyConfigArgs $) {
        this.caCertificateBundleId = $.caCertificateBundleId;
        this.tlsVerifyMode = $.tlsVerifyMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionTlsVerifyConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionTlsVerifyConfigArgs $;

        public Builder() {
            $ = new ConnectionTlsVerifyConfigArgs();
        }

        public Builder(ConnectionTlsVerifyConfigArgs defaults) {
            $ = new ConnectionTlsVerifyConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caCertificateBundleId (Updatable) The OCID of Oracle Cloud Infrastructure certificate service CA bundle.
         * 
         * @return builder
         * 
         */
        public Builder caCertificateBundleId(Output<String> caCertificateBundleId) {
            $.caCertificateBundleId = caCertificateBundleId;
            return this;
        }

        /**
         * @param caCertificateBundleId (Updatable) The OCID of Oracle Cloud Infrastructure certificate service CA bundle.
         * 
         * @return builder
         * 
         */
        public Builder caCertificateBundleId(String caCertificateBundleId) {
            return caCertificateBundleId(Output.of(caCertificateBundleId));
        }

        /**
         * @param tlsVerifyMode (Updatable) The type of TLS verification.
         * 
         * @return builder
         * 
         */
        public Builder tlsVerifyMode(Output<String> tlsVerifyMode) {
            $.tlsVerifyMode = tlsVerifyMode;
            return this;
        }

        /**
         * @param tlsVerifyMode (Updatable) The type of TLS verification.
         * 
         * @return builder
         * 
         */
        public Builder tlsVerifyMode(String tlsVerifyMode) {
            return tlsVerifyMode(Output.of(tlsVerifyMode));
        }

        public ConnectionTlsVerifyConfigArgs build() {
            $.caCertificateBundleId = Objects.requireNonNull($.caCertificateBundleId, "expected parameter 'caCertificateBundleId' to be non-null");
            $.tlsVerifyMode = Objects.requireNonNull($.tlsVerifyMode, "expected parameter 'tlsVerifyMode' to be non-null");
            return $;
        }
    }

}
