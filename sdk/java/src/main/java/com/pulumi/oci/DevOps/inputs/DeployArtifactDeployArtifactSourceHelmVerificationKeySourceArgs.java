// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs Empty = new DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs();

    /**
     * (Updatable) Current version of Base64 encoding of the public key which is in binary GPG exported format.
     * 
     */
    @Import(name="currentPublicKey")
    private @Nullable Output<String> currentPublicKey;

    /**
     * @return (Updatable) Current version of Base64 encoding of the public key which is in binary GPG exported format.
     * 
     */
    public Optional<Output<String>> currentPublicKey() {
        return Optional.ofNullable(this.currentPublicKey);
    }

    /**
     * (Updatable) Previous version of Base64 encoding of the public key which is in binary GPG exported format. This would be used for key rotation scenarios.
     * 
     */
    @Import(name="previousPublicKey")
    private @Nullable Output<String> previousPublicKey;

    /**
     * @return (Updatable) Previous version of Base64 encoding of the public key which is in binary GPG exported format. This would be used for key rotation scenarios.
     * 
     */
    public Optional<Output<String>> previousPublicKey() {
        return Optional.ofNullable(this.previousPublicKey);
    }

    /**
     * (Updatable) The OCID of the Vault Secret containing the verification key versions.
     * 
     */
    @Import(name="vaultSecretId")
    private @Nullable Output<String> vaultSecretId;

    /**
     * @return (Updatable) The OCID of the Vault Secret containing the verification key versions.
     * 
     */
    public Optional<Output<String>> vaultSecretId() {
        return Optional.ofNullable(this.vaultSecretId);
    }

    /**
     * (Updatable) Specifies type of verification material.
     * 
     */
    @Import(name="verificationKeySourceType", required=true)
    private Output<String> verificationKeySourceType;

    /**
     * @return (Updatable) Specifies type of verification material.
     * 
     */
    public Output<String> verificationKeySourceType() {
        return this.verificationKeySourceType;
    }

    private DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs() {}

    private DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs(DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs $) {
        this.currentPublicKey = $.currentPublicKey;
        this.previousPublicKey = $.previousPublicKey;
        this.vaultSecretId = $.vaultSecretId;
        this.verificationKeySourceType = $.verificationKeySourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs $;

        public Builder() {
            $ = new DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs();
        }

        public Builder(DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs defaults) {
            $ = new DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param currentPublicKey (Updatable) Current version of Base64 encoding of the public key which is in binary GPG exported format.
         * 
         * @return builder
         * 
         */
        public Builder currentPublicKey(@Nullable Output<String> currentPublicKey) {
            $.currentPublicKey = currentPublicKey;
            return this;
        }

        /**
         * @param currentPublicKey (Updatable) Current version of Base64 encoding of the public key which is in binary GPG exported format.
         * 
         * @return builder
         * 
         */
        public Builder currentPublicKey(String currentPublicKey) {
            return currentPublicKey(Output.of(currentPublicKey));
        }

        /**
         * @param previousPublicKey (Updatable) Previous version of Base64 encoding of the public key which is in binary GPG exported format. This would be used for key rotation scenarios.
         * 
         * @return builder
         * 
         */
        public Builder previousPublicKey(@Nullable Output<String> previousPublicKey) {
            $.previousPublicKey = previousPublicKey;
            return this;
        }

        /**
         * @param previousPublicKey (Updatable) Previous version of Base64 encoding of the public key which is in binary GPG exported format. This would be used for key rotation scenarios.
         * 
         * @return builder
         * 
         */
        public Builder previousPublicKey(String previousPublicKey) {
            return previousPublicKey(Output.of(previousPublicKey));
        }

        /**
         * @param vaultSecretId (Updatable) The OCID of the Vault Secret containing the verification key versions.
         * 
         * @return builder
         * 
         */
        public Builder vaultSecretId(@Nullable Output<String> vaultSecretId) {
            $.vaultSecretId = vaultSecretId;
            return this;
        }

        /**
         * @param vaultSecretId (Updatable) The OCID of the Vault Secret containing the verification key versions.
         * 
         * @return builder
         * 
         */
        public Builder vaultSecretId(String vaultSecretId) {
            return vaultSecretId(Output.of(vaultSecretId));
        }

        /**
         * @param verificationKeySourceType (Updatable) Specifies type of verification material.
         * 
         * @return builder
         * 
         */
        public Builder verificationKeySourceType(Output<String> verificationKeySourceType) {
            $.verificationKeySourceType = verificationKeySourceType;
            return this;
        }

        /**
         * @param verificationKeySourceType (Updatable) Specifies type of verification material.
         * 
         * @return builder
         * 
         */
        public Builder verificationKeySourceType(String verificationKeySourceType) {
            return verificationKeySourceType(Output.of(verificationKeySourceType));
        }

        public DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs build() {
            if ($.verificationKeySourceType == null) {
                throw new MissingRequiredPropertyException("DeployArtifactDeployArtifactSourceHelmVerificationKeySourceArgs", "verificationKeySourceType");
            }
            return $;
        }
    }

}
