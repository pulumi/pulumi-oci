// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs;
import com.pulumi.oci.DevOps.inputs.DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessorArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs Empty = new DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs();

    /**
     * Stage display name. Avoid entering confidential information.
     * 
     */
    @Import(name="deployStageDisplayName")
    private @Nullable Output<String> deployStageDisplayName;

    /**
     * @return Stage display name. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> deployStageDisplayName() {
        return Optional.ofNullable(this.deployStageDisplayName);
    }

    /**
     * Details about stage execution for all the target environments.
     * 
     */
    @Import(name="deployStageExecutionProgressDetails")
    private @Nullable Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs>> deployStageExecutionProgressDetails;

    /**
     * @return Details about stage execution for all the target environments.
     * 
     */
    public Optional<Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs>>> deployStageExecutionProgressDetails() {
        return Optional.ofNullable(this.deployStageExecutionProgressDetails);
    }

    /**
     * Specifies the OCID of the stage to be redeployed.
     * 
     */
    @Import(name="deployStageId")
    private @Nullable Output<String> deployStageId;

    /**
     * @return Specifies the OCID of the stage to be redeployed.
     * 
     */
    public Optional<Output<String>> deployStageId() {
        return Optional.ofNullable(this.deployStageId);
    }

    /**
     * Collection containing the predecessors of a stage.
     * 
     */
    @Import(name="deployStagePredecessors")
    private @Nullable Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessorArgs>> deployStagePredecessors;

    /**
     * @return Collection containing the predecessors of a stage.
     * 
     */
    public Optional<Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessorArgs>>> deployStagePredecessors() {
        return Optional.ofNullable(this.deployStagePredecessors);
    }

    /**
     * Deployment stage type.
     * 
     */
    @Import(name="deployStageType")
    private @Nullable Output<String> deployStageType;

    /**
     * @return Deployment stage type.
     * 
     */
    public Optional<Output<String>> deployStageType() {
        return Optional.ofNullable(this.deployStageType);
    }

    /**
     * The current state of the stage.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The current state of the stage.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    @Import(name="timeFinished")
    private @Nullable Output<String> timeFinished;

    /**
     * @return Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }

    /**
     * Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    @Import(name="timeStarted")
    private @Nullable Output<String> timeStarted;

    /**
     * @return Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }

    private DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs() {}

    private DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs $) {
        this.deployStageDisplayName = $.deployStageDisplayName;
        this.deployStageExecutionProgressDetails = $.deployStageExecutionProgressDetails;
        this.deployStageId = $.deployStageId;
        this.deployStagePredecessors = $.deployStagePredecessors;
        this.deployStageType = $.deployStageType;
        this.status = $.status;
        this.timeFinished = $.timeFinished;
        this.timeStarted = $.timeStarted;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs $;

        public Builder() {
            $ = new DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs();
        }

        public Builder(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs defaults) {
            $ = new DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deployStageDisplayName Stage display name. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder deployStageDisplayName(@Nullable Output<String> deployStageDisplayName) {
            $.deployStageDisplayName = deployStageDisplayName;
            return this;
        }

        /**
         * @param deployStageDisplayName Stage display name. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder deployStageDisplayName(String deployStageDisplayName) {
            return deployStageDisplayName(Output.of(deployStageDisplayName));
        }

        /**
         * @param deployStageExecutionProgressDetails Details about stage execution for all the target environments.
         * 
         * @return builder
         * 
         */
        public Builder deployStageExecutionProgressDetails(@Nullable Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs>> deployStageExecutionProgressDetails) {
            $.deployStageExecutionProgressDetails = deployStageExecutionProgressDetails;
            return this;
        }

        /**
         * @param deployStageExecutionProgressDetails Details about stage execution for all the target environments.
         * 
         * @return builder
         * 
         */
        public Builder deployStageExecutionProgressDetails(List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs> deployStageExecutionProgressDetails) {
            return deployStageExecutionProgressDetails(Output.of(deployStageExecutionProgressDetails));
        }

        /**
         * @param deployStageExecutionProgressDetails Details about stage execution for all the target environments.
         * 
         * @return builder
         * 
         */
        public Builder deployStageExecutionProgressDetails(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs... deployStageExecutionProgressDetails) {
            return deployStageExecutionProgressDetails(List.of(deployStageExecutionProgressDetails));
        }

        /**
         * @param deployStageId Specifies the OCID of the stage to be redeployed.
         * 
         * @return builder
         * 
         */
        public Builder deployStageId(@Nullable Output<String> deployStageId) {
            $.deployStageId = deployStageId;
            return this;
        }

        /**
         * @param deployStageId Specifies the OCID of the stage to be redeployed.
         * 
         * @return builder
         * 
         */
        public Builder deployStageId(String deployStageId) {
            return deployStageId(Output.of(deployStageId));
        }

        /**
         * @param deployStagePredecessors Collection containing the predecessors of a stage.
         * 
         * @return builder
         * 
         */
        public Builder deployStagePredecessors(@Nullable Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessorArgs>> deployStagePredecessors) {
            $.deployStagePredecessors = deployStagePredecessors;
            return this;
        }

        /**
         * @param deployStagePredecessors Collection containing the predecessors of a stage.
         * 
         * @return builder
         * 
         */
        public Builder deployStagePredecessors(List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessorArgs> deployStagePredecessors) {
            return deployStagePredecessors(Output.of(deployStagePredecessors));
        }

        /**
         * @param deployStagePredecessors Collection containing the predecessors of a stage.
         * 
         * @return builder
         * 
         */
        public Builder deployStagePredecessors(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessorArgs... deployStagePredecessors) {
            return deployStagePredecessors(List.of(deployStagePredecessors));
        }

        /**
         * @param deployStageType Deployment stage type.
         * 
         * @return builder
         * 
         */
        public Builder deployStageType(@Nullable Output<String> deployStageType) {
            $.deployStageType = deployStageType;
            return this;
        }

        /**
         * @param deployStageType Deployment stage type.
         * 
         * @return builder
         * 
         */
        public Builder deployStageType(String deployStageType) {
            return deployStageType(Output.of(deployStageType));
        }

        /**
         * @param status The current state of the stage.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The current state of the stage.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param timeFinished Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeFinished(@Nullable Output<String> timeFinished) {
            $.timeFinished = timeFinished;
            return this;
        }

        /**
         * @param timeFinished Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeFinished(String timeFinished) {
            return timeFinished(Output.of(timeFinished));
        }

        /**
         * @param timeStarted Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeStarted(@Nullable Output<String> timeStarted) {
            $.timeStarted = timeStarted;
            return this;
        }

        /**
         * @param timeStarted Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeStarted(String timeStarted) {
            return timeStarted(Output.of(timeStarted));
        }

        public DeploymentDeploymentExecutionProgressDeployStageExecutionProgressArgs build() {
            return $;
        }
    }

}
