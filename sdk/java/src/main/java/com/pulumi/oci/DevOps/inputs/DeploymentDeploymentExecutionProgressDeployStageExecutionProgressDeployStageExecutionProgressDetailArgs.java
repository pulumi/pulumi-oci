// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailRollbackStepArgs;
import com.pulumi.oci.DevOps.inputs.DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailStepArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs Empty = new DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs();

    /**
     * Details about all the rollback steps for one target environment.
     * 
     */
    @Import(name="rollbackSteps")
    private @Nullable Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailRollbackStepArgs>> rollbackSteps;

    /**
     * @return Details about all the rollback steps for one target environment.
     * 
     */
    public Optional<Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailRollbackStepArgs>>> rollbackSteps() {
        return Optional.ofNullable(this.rollbackSteps);
    }

    /**
     * Details about all the steps for one target environment.
     * 
     */
    @Import(name="steps")
    private @Nullable Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailStepArgs>> steps;

    /**
     * @return Details about all the steps for one target environment.
     * 
     */
    public Optional<Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailStepArgs>>> steps() {
        return Optional.ofNullable(this.steps);
    }

    /**
     * Group for the target environment for example, the batch number for an Instance Group deployment.
     * 
     */
    @Import(name="targetGroup")
    private @Nullable Output<String> targetGroup;

    /**
     * @return Group for the target environment for example, the batch number for an Instance Group deployment.
     * 
     */
    public Optional<Output<String>> targetGroup() {
        return Optional.ofNullable(this.targetGroup);
    }

    /**
     * The function ID, instance ID or the cluster ID. For Wait stage it will be the stage ID.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return The function ID, instance ID or the cluster ID. For Wait stage it will be the stage ID.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    private DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs() {}

    private DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs $) {
        this.rollbackSteps = $.rollbackSteps;
        this.steps = $.steps;
        this.targetGroup = $.targetGroup;
        this.targetId = $.targetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs $;

        public Builder() {
            $ = new DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs();
        }

        public Builder(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs defaults) {
            $ = new DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param rollbackSteps Details about all the rollback steps for one target environment.
         * 
         * @return builder
         * 
         */
        public Builder rollbackSteps(@Nullable Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailRollbackStepArgs>> rollbackSteps) {
            $.rollbackSteps = rollbackSteps;
            return this;
        }

        /**
         * @param rollbackSteps Details about all the rollback steps for one target environment.
         * 
         * @return builder
         * 
         */
        public Builder rollbackSteps(List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailRollbackStepArgs> rollbackSteps) {
            return rollbackSteps(Output.of(rollbackSteps));
        }

        /**
         * @param rollbackSteps Details about all the rollback steps for one target environment.
         * 
         * @return builder
         * 
         */
        public Builder rollbackSteps(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailRollbackStepArgs... rollbackSteps) {
            return rollbackSteps(List.of(rollbackSteps));
        }

        /**
         * @param steps Details about all the steps for one target environment.
         * 
         * @return builder
         * 
         */
        public Builder steps(@Nullable Output<List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailStepArgs>> steps) {
            $.steps = steps;
            return this;
        }

        /**
         * @param steps Details about all the steps for one target environment.
         * 
         * @return builder
         * 
         */
        public Builder steps(List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailStepArgs> steps) {
            return steps(Output.of(steps));
        }

        /**
         * @param steps Details about all the steps for one target environment.
         * 
         * @return builder
         * 
         */
        public Builder steps(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailStepArgs... steps) {
            return steps(List.of(steps));
        }

        /**
         * @param targetGroup Group for the target environment for example, the batch number for an Instance Group deployment.
         * 
         * @return builder
         * 
         */
        public Builder targetGroup(@Nullable Output<String> targetGroup) {
            $.targetGroup = targetGroup;
            return this;
        }

        /**
         * @param targetGroup Group for the target environment for example, the batch number for an Instance Group deployment.
         * 
         * @return builder
         * 
         */
        public Builder targetGroup(String targetGroup) {
            return targetGroup(Output.of(targetGroup));
        }

        /**
         * @param targetId The function ID, instance ID or the cluster ID. For Wait stage it will be the stage ID.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The function ID, instance ID or the cluster ID. For Wait stage it will be the stage ID.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        public DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetailArgs build() {
            return $;
        }
    }

}
