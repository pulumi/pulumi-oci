// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetRepositorySettingPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRepositorySettingPlainArgs Empty = new GetRepositorySettingPlainArgs();

    /**
     * Unique repository identifier.
     * 
     */
    @Import(name="repositoryId", required=true)
    private String repositoryId;

    /**
     * @return Unique repository identifier.
     * 
     */
    public String repositoryId() {
        return this.repositoryId;
    }

    private GetRepositorySettingPlainArgs() {}

    private GetRepositorySettingPlainArgs(GetRepositorySettingPlainArgs $) {
        this.repositoryId = $.repositoryId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepositorySettingPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepositorySettingPlainArgs $;

        public Builder() {
            $ = new GetRepositorySettingPlainArgs();
        }

        public Builder(GetRepositorySettingPlainArgs defaults) {
            $ = new GetRepositorySettingPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param repositoryId Unique repository identifier.
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(String repositoryId) {
            $.repositoryId = repositoryId;
            return this;
        }

        public GetRepositorySettingPlainArgs build() {
            if ($.repositoryId == null) {
                throw new MissingRequiredPropertyException("GetRepositorySettingPlainArgs", "repositoryId");
            }
            return $;
        }
    }

}
