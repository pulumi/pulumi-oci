// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BuildRunBuildOutputDeliveredArtifactItem {
    /**
     * @return The OCID of the artifact registry repository used by the DeliverArtifactStage
     * 
     */
    private @Nullable String artifactRepositoryId;
    /**
     * @return Type of artifact delivered.
     * 
     */
    private @Nullable String artifactType;
    /**
     * @return The hash of the container registry artifact pushed by the Deliver Artifacts stage.
     * 
     */
    private @Nullable String deliveredArtifactHash;
    /**
     * @return The OCID of the artifact pushed by the Deliver Artifacts stage.
     * 
     */
    private @Nullable String deliveredArtifactId;
    /**
     * @return The OCID of the deployment artifact definition.
     * 
     */
    private @Nullable String deployArtifactId;
    /**
     * @return The imageUri of the OCIR artifact pushed by the DeliverArtifactStage
     * 
     */
    private @Nullable String imageUri;
    /**
     * @return Name of the output artifact defined in the build specification file.
     * 
     */
    private @Nullable String outputArtifactName;
    /**
     * @return Path of the repository where artifact was pushed
     * 
     */
    private @Nullable String path;
    /**
     * @return Version of the artifact pushed
     * 
     */
    private @Nullable String version;

    private BuildRunBuildOutputDeliveredArtifactItem() {}
    /**
     * @return The OCID of the artifact registry repository used by the DeliverArtifactStage
     * 
     */
    public Optional<String> artifactRepositoryId() {
        return Optional.ofNullable(this.artifactRepositoryId);
    }
    /**
     * @return Type of artifact delivered.
     * 
     */
    public Optional<String> artifactType() {
        return Optional.ofNullable(this.artifactType);
    }
    /**
     * @return The hash of the container registry artifact pushed by the Deliver Artifacts stage.
     * 
     */
    public Optional<String> deliveredArtifactHash() {
        return Optional.ofNullable(this.deliveredArtifactHash);
    }
    /**
     * @return The OCID of the artifact pushed by the Deliver Artifacts stage.
     * 
     */
    public Optional<String> deliveredArtifactId() {
        return Optional.ofNullable(this.deliveredArtifactId);
    }
    /**
     * @return The OCID of the deployment artifact definition.
     * 
     */
    public Optional<String> deployArtifactId() {
        return Optional.ofNullable(this.deployArtifactId);
    }
    /**
     * @return The imageUri of the OCIR artifact pushed by the DeliverArtifactStage
     * 
     */
    public Optional<String> imageUri() {
        return Optional.ofNullable(this.imageUri);
    }
    /**
     * @return Name of the output artifact defined in the build specification file.
     * 
     */
    public Optional<String> outputArtifactName() {
        return Optional.ofNullable(this.outputArtifactName);
    }
    /**
     * @return Path of the repository where artifact was pushed
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Version of the artifact pushed
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BuildRunBuildOutputDeliveredArtifactItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String artifactRepositoryId;
        private @Nullable String artifactType;
        private @Nullable String deliveredArtifactHash;
        private @Nullable String deliveredArtifactId;
        private @Nullable String deployArtifactId;
        private @Nullable String imageUri;
        private @Nullable String outputArtifactName;
        private @Nullable String path;
        private @Nullable String version;
        public Builder() {}
        public Builder(BuildRunBuildOutputDeliveredArtifactItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactRepositoryId = defaults.artifactRepositoryId;
    	      this.artifactType = defaults.artifactType;
    	      this.deliveredArtifactHash = defaults.deliveredArtifactHash;
    	      this.deliveredArtifactId = defaults.deliveredArtifactId;
    	      this.deployArtifactId = defaults.deployArtifactId;
    	      this.imageUri = defaults.imageUri;
    	      this.outputArtifactName = defaults.outputArtifactName;
    	      this.path = defaults.path;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder artifactRepositoryId(@Nullable String artifactRepositoryId) {

            this.artifactRepositoryId = artifactRepositoryId;
            return this;
        }
        @CustomType.Setter
        public Builder artifactType(@Nullable String artifactType) {

            this.artifactType = artifactType;
            return this;
        }
        @CustomType.Setter
        public Builder deliveredArtifactHash(@Nullable String deliveredArtifactHash) {

            this.deliveredArtifactHash = deliveredArtifactHash;
            return this;
        }
        @CustomType.Setter
        public Builder deliveredArtifactId(@Nullable String deliveredArtifactId) {

            this.deliveredArtifactId = deliveredArtifactId;
            return this;
        }
        @CustomType.Setter
        public Builder deployArtifactId(@Nullable String deployArtifactId) {

            this.deployArtifactId = deployArtifactId;
            return this;
        }
        @CustomType.Setter
        public Builder imageUri(@Nullable String imageUri) {

            this.imageUri = imageUri;
            return this;
        }
        @CustomType.Setter
        public Builder outputArtifactName(@Nullable String outputArtifactName) {

            this.outputArtifactName = outputArtifactName;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {

            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public BuildRunBuildOutputDeliveredArtifactItem build() {
            final var _resultValue = new BuildRunBuildOutputDeliveredArtifactItem();
            _resultValue.artifactRepositoryId = artifactRepositoryId;
            _resultValue.artifactType = artifactType;
            _resultValue.deliveredArtifactHash = deliveredArtifactHash;
            _resultValue.deliveredArtifactId = deliveredArtifactId;
            _resultValue.deployArtifactId = deployArtifactId;
            _resultValue.imageUri = imageUri;
            _resultValue.outputArtifactName = outputArtifactName;
            _resultValue.path = path;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
