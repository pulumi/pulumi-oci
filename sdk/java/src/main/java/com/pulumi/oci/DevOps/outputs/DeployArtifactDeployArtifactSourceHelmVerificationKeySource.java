// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeployArtifactDeployArtifactSourceHelmVerificationKeySource {
    /**
     * @return (Updatable) Current version of Base64 encoding of the public key which is in binary GPG exported format.
     * 
     */
    private @Nullable String currentPublicKey;
    /**
     * @return (Updatable) Previous version of Base64 encoding of the public key which is in binary GPG exported format. This would be used for key rotation scenarios.
     * 
     */
    private @Nullable String previousPublicKey;
    /**
     * @return (Updatable) The OCID of the Vault Secret containing the verification key versions.
     * 
     */
    private @Nullable String vaultSecretId;
    /**
     * @return (Updatable) Specifies type of verification material.
     * 
     */
    private String verificationKeySourceType;

    private DeployArtifactDeployArtifactSourceHelmVerificationKeySource() {}
    /**
     * @return (Updatable) Current version of Base64 encoding of the public key which is in binary GPG exported format.
     * 
     */
    public Optional<String> currentPublicKey() {
        return Optional.ofNullable(this.currentPublicKey);
    }
    /**
     * @return (Updatable) Previous version of Base64 encoding of the public key which is in binary GPG exported format. This would be used for key rotation scenarios.
     * 
     */
    public Optional<String> previousPublicKey() {
        return Optional.ofNullable(this.previousPublicKey);
    }
    /**
     * @return (Updatable) The OCID of the Vault Secret containing the verification key versions.
     * 
     */
    public Optional<String> vaultSecretId() {
        return Optional.ofNullable(this.vaultSecretId);
    }
    /**
     * @return (Updatable) Specifies type of verification material.
     * 
     */
    public String verificationKeySourceType() {
        return this.verificationKeySourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeployArtifactDeployArtifactSourceHelmVerificationKeySource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String currentPublicKey;
        private @Nullable String previousPublicKey;
        private @Nullable String vaultSecretId;
        private String verificationKeySourceType;
        public Builder() {}
        public Builder(DeployArtifactDeployArtifactSourceHelmVerificationKeySource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentPublicKey = defaults.currentPublicKey;
    	      this.previousPublicKey = defaults.previousPublicKey;
    	      this.vaultSecretId = defaults.vaultSecretId;
    	      this.verificationKeySourceType = defaults.verificationKeySourceType;
        }

        @CustomType.Setter
        public Builder currentPublicKey(@Nullable String currentPublicKey) {

            this.currentPublicKey = currentPublicKey;
            return this;
        }
        @CustomType.Setter
        public Builder previousPublicKey(@Nullable String previousPublicKey) {

            this.previousPublicKey = previousPublicKey;
            return this;
        }
        @CustomType.Setter
        public Builder vaultSecretId(@Nullable String vaultSecretId) {

            this.vaultSecretId = vaultSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder verificationKeySourceType(String verificationKeySourceType) {
            if (verificationKeySourceType == null) {
              throw new MissingRequiredPropertyException("DeployArtifactDeployArtifactSourceHelmVerificationKeySource", "verificationKeySourceType");
            }
            this.verificationKeySourceType = verificationKeySourceType;
            return this;
        }
        public DeployArtifactDeployArtifactSourceHelmVerificationKeySource build() {
            final var _resultValue = new DeployArtifactDeployArtifactSourceHelmVerificationKeySource();
            _resultValue.currentPublicKey = currentPublicKey;
            _resultValue.previousPublicKey = previousPublicKey;
            _resultValue.vaultSecretId = vaultSecretId;
            _resultValue.verificationKeySourceType = verificationKeySourceType;
            return _resultValue;
        }
    }
}
