// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DevOps.outputs.DeployStageContainerConfigNetworkChannel;
import com.pulumi.oci.DevOps.outputs.DeployStageContainerConfigShapeConfig;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeployStageContainerConfig {
    /**
     * @return (Updatable) Availability domain where the ContainerInstance will be created.
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return (Updatable) The OCID of the compartment where the ContainerInstance will be created.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return (Updatable) Container configuration type.
     * 
     */
    private String containerConfigType;
    /**
     * @return (Updatable) Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer&#39;s private network.
     * 
     */
    private DeployStageContainerConfigNetworkChannel networkChannel;
    /**
     * @return (Updatable) Determines the size and amount of resources available to the instance.
     * 
     */
    private DeployStageContainerConfigShapeConfig shapeConfig;
    /**
     * @return (Updatable) The shape of the ContainerInstance. The shape determines the resources available to the ContainerInstance.
     * 
     */
    private String shapeName;

    private DeployStageContainerConfig() {}
    /**
     * @return (Updatable) Availability domain where the ContainerInstance will be created.
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return (Updatable) The OCID of the compartment where the ContainerInstance will be created.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return (Updatable) Container configuration type.
     * 
     */
    public String containerConfigType() {
        return this.containerConfigType;
    }
    /**
     * @return (Updatable) Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer&#39;s private network.
     * 
     */
    public DeployStageContainerConfigNetworkChannel networkChannel() {
        return this.networkChannel;
    }
    /**
     * @return (Updatable) Determines the size and amount of resources available to the instance.
     * 
     */
    public DeployStageContainerConfigShapeConfig shapeConfig() {
        return this.shapeConfig;
    }
    /**
     * @return (Updatable) The shape of the ContainerInstance. The shape determines the resources available to the ContainerInstance.
     * 
     */
    public String shapeName() {
        return this.shapeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeployStageContainerConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private @Nullable String compartmentId;
        private String containerConfigType;
        private DeployStageContainerConfigNetworkChannel networkChannel;
        private DeployStageContainerConfigShapeConfig shapeConfig;
        private String shapeName;
        public Builder() {}
        public Builder(DeployStageContainerConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.containerConfigType = defaults.containerConfigType;
    	      this.networkChannel = defaults.networkChannel;
    	      this.shapeConfig = defaults.shapeConfig;
    	      this.shapeName = defaults.shapeName;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {

            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder containerConfigType(String containerConfigType) {
            if (containerConfigType == null) {
              throw new MissingRequiredPropertyException("DeployStageContainerConfig", "containerConfigType");
            }
            this.containerConfigType = containerConfigType;
            return this;
        }
        @CustomType.Setter
        public Builder networkChannel(DeployStageContainerConfigNetworkChannel networkChannel) {
            if (networkChannel == null) {
              throw new MissingRequiredPropertyException("DeployStageContainerConfig", "networkChannel");
            }
            this.networkChannel = networkChannel;
            return this;
        }
        @CustomType.Setter
        public Builder shapeConfig(DeployStageContainerConfigShapeConfig shapeConfig) {
            if (shapeConfig == null) {
              throw new MissingRequiredPropertyException("DeployStageContainerConfig", "shapeConfig");
            }
            this.shapeConfig = shapeConfig;
            return this;
        }
        @CustomType.Setter
        public Builder shapeName(String shapeName) {
            if (shapeName == null) {
              throw new MissingRequiredPropertyException("DeployStageContainerConfig", "shapeName");
            }
            this.shapeName = shapeName;
            return this;
        }
        public DeployStageContainerConfig build() {
            final var _resultValue = new DeployStageContainerConfig();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.containerConfigType = containerConfigType;
            _resultValue.networkChannel = networkChannel;
            _resultValue.shapeConfig = shapeConfig;
            _resultValue.shapeName = shapeName;
            return _resultValue;
        }
    }
}
