// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetail;
import com.pulumi.oci.DevOps.outputs.DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessor;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentDeploymentExecutionProgressDeployStageExecutionProgress {
    /**
     * @return Stage display name. Avoid entering confidential information.
     * 
     */
    private @Nullable String deployStageDisplayName;
    /**
     * @return Details about stage execution for all the target environments.
     * 
     */
    private @Nullable List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetail> deployStageExecutionProgressDetails;
    /**
     * @return Specifies the OCID of the stage to be redeployed.
     * 
     */
    private @Nullable String deployStageId;
    /**
     * @return Collection containing the predecessors of a stage.
     * 
     */
    private @Nullable List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessor> deployStagePredecessors;
    /**
     * @return Deployment stage type.
     * 
     */
    private @Nullable String deployStageType;
    /**
     * @return The current state of the stage.
     * 
     */
    private @Nullable String status;
    /**
     * @return Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private @Nullable String timeFinished;
    /**
     * @return Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private @Nullable String timeStarted;

    private DeploymentDeploymentExecutionProgressDeployStageExecutionProgress() {}
    /**
     * @return Stage display name. Avoid entering confidential information.
     * 
     */
    public Optional<String> deployStageDisplayName() {
        return Optional.ofNullable(this.deployStageDisplayName);
    }
    /**
     * @return Details about stage execution for all the target environments.
     * 
     */
    public List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetail> deployStageExecutionProgressDetails() {
        return this.deployStageExecutionProgressDetails == null ? List.of() : this.deployStageExecutionProgressDetails;
    }
    /**
     * @return Specifies the OCID of the stage to be redeployed.
     * 
     */
    public Optional<String> deployStageId() {
        return Optional.ofNullable(this.deployStageId);
    }
    /**
     * @return Collection containing the predecessors of a stage.
     * 
     */
    public List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessor> deployStagePredecessors() {
        return this.deployStagePredecessors == null ? List.of() : this.deployStagePredecessors;
    }
    /**
     * @return Deployment stage type.
     * 
     */
    public Optional<String> deployStageType() {
        return Optional.ofNullable(this.deployStageType);
    }
    /**
     * @return The current state of the stage.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Time the deployment is finished. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<String> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }
    /**
     * @return Time the deployment is started. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentDeploymentExecutionProgressDeployStageExecutionProgress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String deployStageDisplayName;
        private @Nullable List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetail> deployStageExecutionProgressDetails;
        private @Nullable String deployStageId;
        private @Nullable List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessor> deployStagePredecessors;
        private @Nullable String deployStageType;
        private @Nullable String status;
        private @Nullable String timeFinished;
        private @Nullable String timeStarted;
        public Builder() {}
        public Builder(DeploymentDeploymentExecutionProgressDeployStageExecutionProgress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deployStageDisplayName = defaults.deployStageDisplayName;
    	      this.deployStageExecutionProgressDetails = defaults.deployStageExecutionProgressDetails;
    	      this.deployStageId = defaults.deployStageId;
    	      this.deployStagePredecessors = defaults.deployStagePredecessors;
    	      this.deployStageType = defaults.deployStageType;
    	      this.status = defaults.status;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder deployStageDisplayName(@Nullable String deployStageDisplayName) {

            this.deployStageDisplayName = deployStageDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder deployStageExecutionProgressDetails(@Nullable List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetail> deployStageExecutionProgressDetails) {

            this.deployStageExecutionProgressDetails = deployStageExecutionProgressDetails;
            return this;
        }
        public Builder deployStageExecutionProgressDetails(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStageExecutionProgressDetail... deployStageExecutionProgressDetails) {
            return deployStageExecutionProgressDetails(List.of(deployStageExecutionProgressDetails));
        }
        @CustomType.Setter
        public Builder deployStageId(@Nullable String deployStageId) {

            this.deployStageId = deployStageId;
            return this;
        }
        @CustomType.Setter
        public Builder deployStagePredecessors(@Nullable List<DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessor> deployStagePredecessors) {

            this.deployStagePredecessors = deployStagePredecessors;
            return this;
        }
        public Builder deployStagePredecessors(DeploymentDeploymentExecutionProgressDeployStageExecutionProgressDeployStagePredecessor... deployStagePredecessors) {
            return deployStagePredecessors(List.of(deployStagePredecessors));
        }
        @CustomType.Setter
        public Builder deployStageType(@Nullable String deployStageType) {

            this.deployStageType = deployStageType;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(@Nullable String timeFinished) {

            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {

            this.timeStarted = timeStarted;
            return this;
        }
        public DeploymentDeploymentExecutionProgressDeployStageExecutionProgress build() {
            final var _resultValue = new DeploymentDeploymentExecutionProgressDeployStageExecutionProgress();
            _resultValue.deployStageDisplayName = deployStageDisplayName;
            _resultValue.deployStageExecutionProgressDetails = deployStageExecutionProgressDetails;
            _resultValue.deployStageId = deployStageId;
            _resultValue.deployStagePredecessors = deployStagePredecessors;
            _resultValue.deployStageType = deployStageType;
            _resultValue.status = status;
            _resultValue.timeFinished = timeFinished;
            _resultValue.timeStarted = timeStarted;
            return _resultValue;
        }
    }
}
