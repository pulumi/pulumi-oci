// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.GetBuildPipelineStagesBuildPipelineStageCollection;
import com.pulumi.oci.DevOps.outputs.GetBuildPipelineStagesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBuildPipelineStagesResult {
    /**
     * @return The OCID of the build pipeline.
     * 
     */
    private @Nullable String buildPipelineId;
    /**
     * @return The list of build_pipeline_stage_collection.
     * 
     */
    private List<GetBuildPipelineStagesBuildPipelineStageCollection> buildPipelineStageCollections;
    /**
     * @return The OCID of the compartment where the pipeline is created.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetBuildPipelineStagesFilter> filters;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return The current state of the stage.
     * 
     */
    private @Nullable String state;

    private GetBuildPipelineStagesResult() {}
    /**
     * @return The OCID of the build pipeline.
     * 
     */
    public Optional<String> buildPipelineId() {
        return Optional.ofNullable(this.buildPipelineId);
    }
    /**
     * @return The list of build_pipeline_stage_collection.
     * 
     */
    public List<GetBuildPipelineStagesBuildPipelineStageCollection> buildPipelineStageCollections() {
        return this.buildPipelineStageCollections;
    }
    /**
     * @return The OCID of the compartment where the pipeline is created.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Stage display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetBuildPipelineStagesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The current state of the stage.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBuildPipelineStagesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String buildPipelineId;
        private List<GetBuildPipelineStagesBuildPipelineStageCollection> buildPipelineStageCollections;
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetBuildPipelineStagesFilter> filters;
        private @Nullable String id;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetBuildPipelineStagesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buildPipelineId = defaults.buildPipelineId;
    	      this.buildPipelineStageCollections = defaults.buildPipelineStageCollections;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder buildPipelineId(@Nullable String buildPipelineId) {
            this.buildPipelineId = buildPipelineId;
            return this;
        }
        @CustomType.Setter
        public Builder buildPipelineStageCollections(List<GetBuildPipelineStagesBuildPipelineStageCollection> buildPipelineStageCollections) {
            this.buildPipelineStageCollections = Objects.requireNonNull(buildPipelineStageCollections);
            return this;
        }
        public Builder buildPipelineStageCollections(GetBuildPipelineStagesBuildPipelineStageCollection... buildPipelineStageCollections) {
            return buildPipelineStageCollections(List.of(buildPipelineStageCollections));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetBuildPipelineStagesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetBuildPipelineStagesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetBuildPipelineStagesResult build() {
            final var _resultValue = new GetBuildPipelineStagesResult();
            _resultValue.buildPipelineId = buildPipelineId;
            _resultValue.buildPipelineStageCollections = buildPipelineStageCollections;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
