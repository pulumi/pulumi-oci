// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBuildRunCommitInfo {
    /**
     * @return Commit hash pertinent to the repository URL and the specified branch.
     * 
     */
    private String commitHash;
    /**
     * @return Name of the repository branch.
     * 
     */
    private String repositoryBranch;
    /**
     * @return Repository URL.
     * 
     */
    private String repositoryUrl;

    private GetBuildRunCommitInfo() {}
    /**
     * @return Commit hash pertinent to the repository URL and the specified branch.
     * 
     */
    public String commitHash() {
        return this.commitHash;
    }
    /**
     * @return Name of the repository branch.
     * 
     */
    public String repositoryBranch() {
        return this.repositoryBranch;
    }
    /**
     * @return Repository URL.
     * 
     */
    public String repositoryUrl() {
        return this.repositoryUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBuildRunCommitInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String commitHash;
        private String repositoryBranch;
        private String repositoryUrl;
        public Builder() {}
        public Builder(GetBuildRunCommitInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commitHash = defaults.commitHash;
    	      this.repositoryBranch = defaults.repositoryBranch;
    	      this.repositoryUrl = defaults.repositoryUrl;
        }

        @CustomType.Setter
        public Builder commitHash(String commitHash) {
            if (commitHash == null) {
              throw new MissingRequiredPropertyException("GetBuildRunCommitInfo", "commitHash");
            }
            this.commitHash = commitHash;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryBranch(String repositoryBranch) {
            if (repositoryBranch == null) {
              throw new MissingRequiredPropertyException("GetBuildRunCommitInfo", "repositoryBranch");
            }
            this.repositoryBranch = repositoryBranch;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryUrl(String repositoryUrl) {
            if (repositoryUrl == null) {
              throw new MissingRequiredPropertyException("GetBuildRunCommitInfo", "repositoryUrl");
            }
            this.repositoryUrl = repositoryUrl;
            return this;
        }
        public GetBuildRunCommitInfo build() {
            final var _resultValue = new GetBuildRunCommitInfo();
            _resultValue.commitHash = commitHash;
            _resultValue.repositoryBranch = repositoryBranch;
            _resultValue.repositoryUrl = repositoryUrl;
            return _resultValue;
        }
    }
}
