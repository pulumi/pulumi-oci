// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.GetConnectionsConnectionCollectionItemLastConnectionValidationResult;
import com.pulumi.oci.DevOps.outputs.GetConnectionsConnectionCollectionItemTlsVerifyConfig;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectionsConnectionCollectionItem {
    /**
     * @return The OCID of personal access token saved in secret store.
     * 
     */
    private @Nullable String accessToken;
    /**
     * @return OCID of personal Bitbucket Cloud AppPassword saved in secret store
     * 
     */
    private @Nullable String appPassword;
    /**
     * @return The Base URL of the hosted BitbucketServer/Visual Builder Studio server.
     * 
     */
    private @Nullable String baseUrl;
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return A filter to return only resources that match the given connection type.
     * 
     */
    private @Nullable String connectionType;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Optional description about the connection.
     * 
     */
    private @Nullable String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Unique identifier or OCID for listing a single resource by ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return The result of validating the credentials of a connection.
     * 
     */
    private @Nullable List<GetConnectionsConnectionCollectionItemLastConnectionValidationResult> lastConnectionValidationResults;
    /**
     * @return unique project identifier
     * 
     */
    private @Nullable String projectId;
    /**
     * @return A filter to return only connections that matches the given lifecycle state.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time the connection was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the connection was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return TLS configuration used by build service to verify TLS connection.
     * 
     */
    private @Nullable List<GetConnectionsConnectionCollectionItemTlsVerifyConfig> tlsVerifyConfigs;
    /**
     * @return Public Bitbucket Cloud Username in plain text
     * 
     */
    private @Nullable String username;

    private GetConnectionsConnectionCollectionItem() {}
    /**
     * @return The OCID of personal access token saved in secret store.
     * 
     */
    public Optional<String> accessToken() {
        return Optional.ofNullable(this.accessToken);
    }
    /**
     * @return OCID of personal Bitbucket Cloud AppPassword saved in secret store
     * 
     */
    public Optional<String> appPassword() {
        return Optional.ofNullable(this.appPassword);
    }
    /**
     * @return The Base URL of the hosted BitbucketServer/Visual Builder Studio server.
     * 
     */
    public Optional<String> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return A filter to return only resources that match the given connection type.
     * 
     */
    public Optional<String> connectionType() {
        return Optional.ofNullable(this.connectionType);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Optional description about the connection.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Unique identifier or OCID for listing a single resource by ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The result of validating the credentials of a connection.
     * 
     */
    public List<GetConnectionsConnectionCollectionItemLastConnectionValidationResult> lastConnectionValidationResults() {
        return this.lastConnectionValidationResults == null ? List.of() : this.lastConnectionValidationResults;
    }
    /**
     * @return unique project identifier
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return A filter to return only connections that matches the given lifecycle state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time the connection was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the connection was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return TLS configuration used by build service to verify TLS connection.
     * 
     */
    public List<GetConnectionsConnectionCollectionItemTlsVerifyConfig> tlsVerifyConfigs() {
        return this.tlsVerifyConfigs == null ? List.of() : this.tlsVerifyConfigs;
    }
    /**
     * @return Public Bitbucket Cloud Username in plain text
     * 
     */
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionsConnectionCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessToken;
        private @Nullable String appPassword;
        private @Nullable String baseUrl;
        private @Nullable String compartmentId;
        private @Nullable String connectionType;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable List<GetConnectionsConnectionCollectionItemLastConnectionValidationResult> lastConnectionValidationResults;
        private @Nullable String projectId;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable List<GetConnectionsConnectionCollectionItemTlsVerifyConfig> tlsVerifyConfigs;
        private @Nullable String username;
        public Builder() {}
        public Builder(GetConnectionsConnectionCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessToken = defaults.accessToken;
    	      this.appPassword = defaults.appPassword;
    	      this.baseUrl = defaults.baseUrl;
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionType = defaults.connectionType;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lastConnectionValidationResults = defaults.lastConnectionValidationResults;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.tlsVerifyConfigs = defaults.tlsVerifyConfigs;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder accessToken(@Nullable String accessToken) {
            this.accessToken = accessToken;
            return this;
        }
        @CustomType.Setter
        public Builder appPassword(@Nullable String appPassword) {
            this.appPassword = appPassword;
            return this;
        }
        @CustomType.Setter
        public Builder baseUrl(@Nullable String baseUrl) {
            this.baseUrl = baseUrl;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectionType(@Nullable String connectionType) {
            this.connectionType = connectionType;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastConnectionValidationResults(@Nullable List<GetConnectionsConnectionCollectionItemLastConnectionValidationResult> lastConnectionValidationResults) {
            this.lastConnectionValidationResults = lastConnectionValidationResults;
            return this;
        }
        public Builder lastConnectionValidationResults(GetConnectionsConnectionCollectionItemLastConnectionValidationResult... lastConnectionValidationResults) {
            return lastConnectionValidationResults(List.of(lastConnectionValidationResults));
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder tlsVerifyConfigs(@Nullable List<GetConnectionsConnectionCollectionItemTlsVerifyConfig> tlsVerifyConfigs) {
            this.tlsVerifyConfigs = tlsVerifyConfigs;
            return this;
        }
        public Builder tlsVerifyConfigs(GetConnectionsConnectionCollectionItemTlsVerifyConfig... tlsVerifyConfigs) {
            return tlsVerifyConfigs(List.of(tlsVerifyConfigs));
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {
            this.username = username;
            return this;
        }
        public GetConnectionsConnectionCollectionItem build() {
            final var o = new GetConnectionsConnectionCollectionItem();
            o.accessToken = accessToken;
            o.appPassword = appPassword;
            o.baseUrl = baseUrl;
            o.compartmentId = compartmentId;
            o.connectionType = connectionType;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lastConnectionValidationResults = lastConnectionValidationResults;
            o.projectId = projectId;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.tlsVerifyConfigs = tlsVerifyConfigs;
            o.username = username;
            return o;
        }
    }
}
