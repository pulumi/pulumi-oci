// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.GetDeployArtifactDeployArtifactSource;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeployArtifactResult {
    /**
     * @return Mode for artifact parameter substitution. Options: `&#34;NONE&#34;, &#34;SUBSTITUTE_PLACEHOLDERS&#34;` For Helm Deployments only &#34;NONE&#34; is supported.
     * 
     */
    private @Nullable String argumentSubstitutionMode;
    /**
     * @return The OCID of a compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    private String deployArtifactId;
    /**
     * @return Specifies source of an artifact.
     * 
     */
    private @Nullable List<GetDeployArtifactDeployArtifactSource> deployArtifactSources;
    /**
     * @return Type of the deployment artifact.
     * 
     */
    private @Nullable String deployArtifactType;
    /**
     * @return Optional description about the artifact to be deployed.
     * 
     */
    private @Nullable String description;
    /**
     * @return Deployment artifact identifier, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The OCID of a project.
     * 
     */
    private @Nullable String projectId;
    /**
     * @return Current state of the deployment artifact.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private @Nullable String timeUpdated;

    private GetDeployArtifactResult() {}
    /**
     * @return Mode for artifact parameter substitution. Options: `&#34;NONE&#34;, &#34;SUBSTITUTE_PLACEHOLDERS&#34;` For Helm Deployments only &#34;NONE&#34; is supported.
     * 
     */
    public Optional<String> argumentSubstitutionMode() {
        return Optional.ofNullable(this.argumentSubstitutionMode);
    }
    /**
     * @return The OCID of a compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    public String deployArtifactId() {
        return this.deployArtifactId;
    }
    /**
     * @return Specifies source of an artifact.
     * 
     */
    public List<GetDeployArtifactDeployArtifactSource> deployArtifactSources() {
        return this.deployArtifactSources == null ? List.of() : this.deployArtifactSources;
    }
    /**
     * @return Type of the deployment artifact.
     * 
     */
    public Optional<String> deployArtifactType() {
        return Optional.ofNullable(this.deployArtifactType);
    }
    /**
     * @return Optional description about the artifact to be deployed.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Deployment artifact identifier, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A detailed message describing the current state. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The OCID of a project.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return Current state of the deployment artifact.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return Time the deployment artifact was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Time the deployment artifact was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeployArtifactResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String argumentSubstitutionMode;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private String deployArtifactId;
        private @Nullable List<GetDeployArtifactDeployArtifactSource> deployArtifactSources;
        private @Nullable String deployArtifactType;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String projectId;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetDeployArtifactResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.argumentSubstitutionMode = defaults.argumentSubstitutionMode;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deployArtifactId = defaults.deployArtifactId;
    	      this.deployArtifactSources = defaults.deployArtifactSources;
    	      this.deployArtifactType = defaults.deployArtifactType;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder argumentSubstitutionMode(@Nullable String argumentSubstitutionMode) {
            this.argumentSubstitutionMode = argumentSubstitutionMode;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deployArtifactId(String deployArtifactId) {
            this.deployArtifactId = Objects.requireNonNull(deployArtifactId);
            return this;
        }
        @CustomType.Setter
        public Builder deployArtifactSources(@Nullable List<GetDeployArtifactDeployArtifactSource> deployArtifactSources) {
            this.deployArtifactSources = deployArtifactSources;
            return this;
        }
        public Builder deployArtifactSources(GetDeployArtifactDeployArtifactSource... deployArtifactSources) {
            return deployArtifactSources(List.of(deployArtifactSources));
        }
        @CustomType.Setter
        public Builder deployArtifactType(@Nullable String deployArtifactType) {
            this.deployArtifactType = deployArtifactType;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetDeployArtifactResult build() {
            final var o = new GetDeployArtifactResult();
            o.argumentSubstitutionMode = argumentSubstitutionMode;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.deployArtifactId = deployArtifactId;
            o.deployArtifactSources = deployArtifactSources;
            o.deployArtifactType = deployArtifactType;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.projectId = projectId;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
