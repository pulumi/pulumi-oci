// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DevOps.outputs.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifact;
import com.pulumi.oci.DevOps.outputs.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironment;
import com.pulumi.oci.DevOps.outputs.GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameter;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDeployPipelinesDeployPipelineCollectionItem {
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return List of all artifacts used in the pipeline.
     * 
     */
    private List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifact> deployPipelineArtifacts;
    /**
     * @return List of all environments used in the pipeline.
     * 
     */
    private List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironment> deployPipelineEnvironments;
    /**
     * @return Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
     * 
     */
    private List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameter> deployPipelineParameters;
    /**
     * @return Optional description about the deployment pipeline.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Unique identifier or OCID for listing a single resource by ID.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return unique project identifier
     * 
     */
    private String projectId;
    /**
     * @return A filter to return only DeployPipelines that matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Time the deployment pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private String timeCreated;
    /**
     * @return Time the deployment pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private String timeUpdated;

    private GetDeployPipelinesDeployPipelineCollectionItem() {}
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return List of all artifacts used in the pipeline.
     * 
     */
    public List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifact> deployPipelineArtifacts() {
        return this.deployPipelineArtifacts;
    }
    /**
     * @return List of all environments used in the pipeline.
     * 
     */
    public List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironment> deployPipelineEnvironments() {
        return this.deployPipelineEnvironments;
    }
    /**
     * @return Specifies list of parameters present in the deployment pipeline. In case of Update operation, replaces existing parameters list. Merging with existing parameters is not supported.
     * 
     */
    public List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameter> deployPipelineParameters() {
        return this.deployPipelineParameters;
    }
    /**
     * @return Optional description about the deployment pipeline.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier or OCID for listing a single resource by ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return unique project identifier
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return A filter to return only DeployPipelines that matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Time the deployment pipeline was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Time the deployment pipeline was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeployPipelinesDeployPipelineCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifact> deployPipelineArtifacts;
        private List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironment> deployPipelineEnvironments;
        private List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameter> deployPipelineParameters;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String projectId;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetDeployPipelinesDeployPipelineCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deployPipelineArtifacts = defaults.deployPipelineArtifacts;
    	      this.deployPipelineEnvironments = defaults.deployPipelineEnvironments;
    	      this.deployPipelineParameters = defaults.deployPipelineParameters;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deployPipelineArtifacts(List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifact> deployPipelineArtifacts) {
            if (deployPipelineArtifacts == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "deployPipelineArtifacts");
            }
            this.deployPipelineArtifacts = deployPipelineArtifacts;
            return this;
        }
        public Builder deployPipelineArtifacts(GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineArtifact... deployPipelineArtifacts) {
            return deployPipelineArtifacts(List.of(deployPipelineArtifacts));
        }
        @CustomType.Setter
        public Builder deployPipelineEnvironments(List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironment> deployPipelineEnvironments) {
            if (deployPipelineEnvironments == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "deployPipelineEnvironments");
            }
            this.deployPipelineEnvironments = deployPipelineEnvironments;
            return this;
        }
        public Builder deployPipelineEnvironments(GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineEnvironment... deployPipelineEnvironments) {
            return deployPipelineEnvironments(List.of(deployPipelineEnvironments));
        }
        @CustomType.Setter
        public Builder deployPipelineParameters(List<GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameter> deployPipelineParameters) {
            if (deployPipelineParameters == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "deployPipelineParameters");
            }
            this.deployPipelineParameters = deployPipelineParameters;
            return this;
        }
        public Builder deployPipelineParameters(GetDeployPipelinesDeployPipelineCollectionItemDeployPipelineParameter... deployPipelineParameters) {
            return deployPipelineParameters(List.of(deployPipelineParameters));
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetDeployPipelinesDeployPipelineCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetDeployPipelinesDeployPipelineCollectionItem build() {
            final var _resultValue = new GetDeployPipelinesDeployPipelineCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.deployPipelineArtifacts = deployPipelineArtifacts;
            _resultValue.deployPipelineEnvironments = deployPipelineEnvironments;
            _resultValue.deployPipelineParameters = deployPipelineParameters;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.projectId = projectId;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
