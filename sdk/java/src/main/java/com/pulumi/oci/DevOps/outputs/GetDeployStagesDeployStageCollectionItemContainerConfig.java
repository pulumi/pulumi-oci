// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.GetDeployStagesDeployStageCollectionItemContainerConfigNetworkChannel;
import com.pulumi.oci.DevOps.outputs.GetDeployStagesDeployStageCollectionItemContainerConfigShapeConfig;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDeployStagesDeployStageCollectionItemContainerConfig {
    /**
     * @return Availability domain where the ContainerInstance will be created.
     * 
     */
    private String availabilityDomain;
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Container configuration type.
     * 
     */
    private String containerConfigType;
    /**
     * @return Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer&#39;s private network.
     * 
     */
    private List<GetDeployStagesDeployStageCollectionItemContainerConfigNetworkChannel> networkChannels;
    /**
     * @return Determines the size and amount of resources available to the instance.
     * 
     */
    private List<GetDeployStagesDeployStageCollectionItemContainerConfigShapeConfig> shapeConfigs;
    /**
     * @return The shape of the ContainerInstance. The shape determines the resources available to the ContainerInstance.
     * 
     */
    private String shapeName;

    private GetDeployStagesDeployStageCollectionItemContainerConfig() {}
    /**
     * @return Availability domain where the ContainerInstance will be created.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Container configuration type.
     * 
     */
    public String containerConfigType() {
        return this.containerConfigType;
    }
    /**
     * @return Specifies the configuration needed when the target Oracle Cloud Infrastructure resource, i.e., OKE cluster, resides in customer&#39;s private network.
     * 
     */
    public List<GetDeployStagesDeployStageCollectionItemContainerConfigNetworkChannel> networkChannels() {
        return this.networkChannels;
    }
    /**
     * @return Determines the size and amount of resources available to the instance.
     * 
     */
    public List<GetDeployStagesDeployStageCollectionItemContainerConfigShapeConfig> shapeConfigs() {
        return this.shapeConfigs;
    }
    /**
     * @return The shape of the ContainerInstance. The shape determines the resources available to the ContainerInstance.
     * 
     */
    public String shapeName() {
        return this.shapeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeployStagesDeployStageCollectionItemContainerConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String compartmentId;
        private String containerConfigType;
        private List<GetDeployStagesDeployStageCollectionItemContainerConfigNetworkChannel> networkChannels;
        private List<GetDeployStagesDeployStageCollectionItemContainerConfigShapeConfig> shapeConfigs;
        private String shapeName;
        public Builder() {}
        public Builder(GetDeployStagesDeployStageCollectionItemContainerConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.containerConfigType = defaults.containerConfigType;
    	      this.networkChannels = defaults.networkChannels;
    	      this.shapeConfigs = defaults.shapeConfigs;
    	      this.shapeName = defaults.shapeName;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder containerConfigType(String containerConfigType) {
            this.containerConfigType = Objects.requireNonNull(containerConfigType);
            return this;
        }
        @CustomType.Setter
        public Builder networkChannels(List<GetDeployStagesDeployStageCollectionItemContainerConfigNetworkChannel> networkChannels) {
            this.networkChannels = Objects.requireNonNull(networkChannels);
            return this;
        }
        public Builder networkChannels(GetDeployStagesDeployStageCollectionItemContainerConfigNetworkChannel... networkChannels) {
            return networkChannels(List.of(networkChannels));
        }
        @CustomType.Setter
        public Builder shapeConfigs(List<GetDeployStagesDeployStageCollectionItemContainerConfigShapeConfig> shapeConfigs) {
            this.shapeConfigs = Objects.requireNonNull(shapeConfigs);
            return this;
        }
        public Builder shapeConfigs(GetDeployStagesDeployStageCollectionItemContainerConfigShapeConfig... shapeConfigs) {
            return shapeConfigs(List.of(shapeConfigs));
        }
        @CustomType.Setter
        public Builder shapeName(String shapeName) {
            this.shapeName = Objects.requireNonNull(shapeName);
            return this;
        }
        public GetDeployStagesDeployStageCollectionItemContainerConfig build() {
            final var _resultValue = new GetDeployStagesDeployStageCollectionItemContainerConfig();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.containerConfigType = containerConfigType;
            _resultValue.networkChannels = networkChannels;
            _resultValue.shapeConfigs = shapeConfigs;
            _resultValue.shapeName = shapeName;
            return _resultValue;
        }
    }
}
