// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeployStagesDeployStageCollectionItemFailurePolicy {
    /**
     * @return The threshold count of failed instances in the group, which when reached or exceeded sets the stage as FAILED.
     * 
     */
    private @Nullable Integer failureCount;
    /**
     * @return The failure percentage threshold, which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
     * 
     */
    private @Nullable Integer failurePercentage;
    /**
     * @return The type of policy used for rolling out a deployment stage.
     * 
     */
    private @Nullable String policyType;

    private GetDeployStagesDeployStageCollectionItemFailurePolicy() {}
    /**
     * @return The threshold count of failed instances in the group, which when reached or exceeded sets the stage as FAILED.
     * 
     */
    public Optional<Integer> failureCount() {
        return Optional.ofNullable(this.failureCount);
    }
    /**
     * @return The failure percentage threshold, which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
     * 
     */
    public Optional<Integer> failurePercentage() {
        return Optional.ofNullable(this.failurePercentage);
    }
    /**
     * @return The type of policy used for rolling out a deployment stage.
     * 
     */
    public Optional<String> policyType() {
        return Optional.ofNullable(this.policyType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeployStagesDeployStageCollectionItemFailurePolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer failureCount;
        private @Nullable Integer failurePercentage;
        private @Nullable String policyType;
        public Builder() {}
        public Builder(GetDeployStagesDeployStageCollectionItemFailurePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failureCount = defaults.failureCount;
    	      this.failurePercentage = defaults.failurePercentage;
    	      this.policyType = defaults.policyType;
        }

        @CustomType.Setter
        public Builder failureCount(@Nullable Integer failureCount) {
            this.failureCount = failureCount;
            return this;
        }
        @CustomType.Setter
        public Builder failurePercentage(@Nullable Integer failurePercentage) {
            this.failurePercentage = failurePercentage;
            return this;
        }
        @CustomType.Setter
        public Builder policyType(@Nullable String policyType) {
            this.policyType = policyType;
            return this;
        }
        public GetDeployStagesDeployStageCollectionItemFailurePolicy build() {
            final var o = new GetDeployStagesDeployStageCollectionItemFailurePolicy();
            o.failureCount = failureCount;
            o.failurePercentage = failurePercentage;
            o.policyType = policyType;
            return o;
        }
    }
}
