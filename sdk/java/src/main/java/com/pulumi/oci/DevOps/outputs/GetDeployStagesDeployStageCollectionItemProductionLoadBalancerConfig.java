// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig {
    /**
     * @return Listen port for the backend server.
     * 
     */
    private Integer backendPort;
    /**
     * @return Name of the load balancer listener.
     * 
     */
    private String listenerName;
    /**
     * @return The OCID of the load balancer.
     * 
     */
    private String loadBalancerId;
    /**
     * @return A filter to return only deployment stages that matches the given lifecycle state.
     * 
     */
    private String state;

    private GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig() {}
    /**
     * @return Listen port for the backend server.
     * 
     */
    public Integer backendPort() {
        return this.backendPort;
    }
    /**
     * @return Name of the load balancer listener.
     * 
     */
    public String listenerName() {
        return this.listenerName;
    }
    /**
     * @return The OCID of the load balancer.
     * 
     */
    public String loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * @return A filter to return only deployment stages that matches the given lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer backendPort;
        private String listenerName;
        private String loadBalancerId;
        private String state;
        public Builder() {}
        public Builder(GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendPort = defaults.backendPort;
    	      this.listenerName = defaults.listenerName;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder backendPort(Integer backendPort) {
            if (backendPort == null) {
              throw new MissingRequiredPropertyException("GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig", "backendPort");
            }
            this.backendPort = backendPort;
            return this;
        }
        @CustomType.Setter
        public Builder listenerName(String listenerName) {
            if (listenerName == null) {
              throw new MissingRequiredPropertyException("GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig", "listenerName");
            }
            this.listenerName = listenerName;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerId(String loadBalancerId) {
            if (loadBalancerId == null) {
              throw new MissingRequiredPropertyException("GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig", "loadBalancerId");
            }
            this.loadBalancerId = loadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig", "state");
            }
            this.state = state;
            return this;
        }
        public GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig build() {
            final var _resultValue = new GetDeployStagesDeployStageCollectionItemProductionLoadBalancerConfig();
            _resultValue.backendPort = backendPort;
            _resultValue.listenerName = listenerName;
            _resultValue.loadBalancerId = loadBalancerId;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
