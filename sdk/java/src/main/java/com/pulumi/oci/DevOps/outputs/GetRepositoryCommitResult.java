// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRepositoryCommitResult {
    /**
     * @return Email of the author of the repository.
     * 
     */
    private @Nullable String authorEmail;
    /**
     * @return Name of the author of the repository.
     * 
     */
    private @Nullable String authorName;
    /**
     * @return Commit hash pointed to by reference name.
     * 
     */
    private String commitId;
    /**
     * @return The commit message.
     * 
     */
    private @Nullable String commitMessage;
    /**
     * @return Email of who creates the commit.
     * 
     */
    private @Nullable String committerEmail;
    /**
     * @return Name of who creates the commit.
     * 
     */
    private @Nullable String committerName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return An array of parent commit IDs of created commit.
     * 
     */
    private @Nullable List<String> parentCommitIds;
    private String repositoryId;
    /**
     * @return The time at which commit was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Tree information for the specified commit.
     * 
     */
    private @Nullable String treeId;

    private GetRepositoryCommitResult() {}
    /**
     * @return Email of the author of the repository.
     * 
     */
    public Optional<String> authorEmail() {
        return Optional.ofNullable(this.authorEmail);
    }
    /**
     * @return Name of the author of the repository.
     * 
     */
    public Optional<String> authorName() {
        return Optional.ofNullable(this.authorName);
    }
    /**
     * @return Commit hash pointed to by reference name.
     * 
     */
    public String commitId() {
        return this.commitId;
    }
    /**
     * @return The commit message.
     * 
     */
    public Optional<String> commitMessage() {
        return Optional.ofNullable(this.commitMessage);
    }
    /**
     * @return Email of who creates the commit.
     * 
     */
    public Optional<String> committerEmail() {
        return Optional.ofNullable(this.committerEmail);
    }
    /**
     * @return Name of who creates the commit.
     * 
     */
    public Optional<String> committerName() {
        return Optional.ofNullable(this.committerName);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return An array of parent commit IDs of created commit.
     * 
     */
    public List<String> parentCommitIds() {
        return this.parentCommitIds == null ? List.of() : this.parentCommitIds;
    }
    public String repositoryId() {
        return this.repositoryId;
    }
    /**
     * @return The time at which commit was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Tree information for the specified commit.
     * 
     */
    public Optional<String> treeId() {
        return Optional.ofNullable(this.treeId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryCommitResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authorEmail;
        private @Nullable String authorName;
        private String commitId;
        private @Nullable String commitMessage;
        private @Nullable String committerEmail;
        private @Nullable String committerName;
        private @Nullable String id;
        private @Nullable List<String> parentCommitIds;
        private String repositoryId;
        private @Nullable String timeCreated;
        private @Nullable String treeId;
        public Builder() {}
        public Builder(GetRepositoryCommitResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorEmail = defaults.authorEmail;
    	      this.authorName = defaults.authorName;
    	      this.commitId = defaults.commitId;
    	      this.commitMessage = defaults.commitMessage;
    	      this.committerEmail = defaults.committerEmail;
    	      this.committerName = defaults.committerName;
    	      this.id = defaults.id;
    	      this.parentCommitIds = defaults.parentCommitIds;
    	      this.repositoryId = defaults.repositoryId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.treeId = defaults.treeId;
        }

        @CustomType.Setter
        public Builder authorEmail(@Nullable String authorEmail) {
            this.authorEmail = authorEmail;
            return this;
        }
        @CustomType.Setter
        public Builder authorName(@Nullable String authorName) {
            this.authorName = authorName;
            return this;
        }
        @CustomType.Setter
        public Builder commitId(String commitId) {
            this.commitId = Objects.requireNonNull(commitId);
            return this;
        }
        @CustomType.Setter
        public Builder commitMessage(@Nullable String commitMessage) {
            this.commitMessage = commitMessage;
            return this;
        }
        @CustomType.Setter
        public Builder committerEmail(@Nullable String committerEmail) {
            this.committerEmail = committerEmail;
            return this;
        }
        @CustomType.Setter
        public Builder committerName(@Nullable String committerName) {
            this.committerName = committerName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder parentCommitIds(@Nullable List<String> parentCommitIds) {
            this.parentCommitIds = parentCommitIds;
            return this;
        }
        public Builder parentCommitIds(String... parentCommitIds) {
            return parentCommitIds(List.of(parentCommitIds));
        }
        @CustomType.Setter
        public Builder repositoryId(String repositoryId) {
            this.repositoryId = Objects.requireNonNull(repositoryId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder treeId(@Nullable String treeId) {
            this.treeId = treeId;
            return this;
        }
        public GetRepositoryCommitResult build() {
            final var o = new GetRepositoryCommitResult();
            o.authorEmail = authorEmail;
            o.authorName = authorName;
            o.commitId = commitId;
            o.commitMessage = commitMessage;
            o.committerEmail = committerEmail;
            o.committerName = committerName;
            o.id = id;
            o.parentCommitIds = parentCommitIds;
            o.repositoryId = repositoryId;
            o.timeCreated = timeCreated;
            o.treeId = treeId;
            return o;
        }
    }
}
