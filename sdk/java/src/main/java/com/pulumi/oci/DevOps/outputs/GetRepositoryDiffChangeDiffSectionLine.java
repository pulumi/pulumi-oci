// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRepositoryDiffChangeDiffSectionLine {
    /**
     * @return The number of a line in the base version.
     * 
     */
    private @Nullable Integer baseLine;
    /**
     * @return Indicates whether a line in a conflicted section of the difference is from the base version, the target version, or if its just a marker indicating the beginning, middle, or end of a conflicted section.
     * 
     */
    private @Nullable String conflictMarker;
    /**
     * @return The contents of a line.
     * 
     */
    private @Nullable String lineContent;
    /**
     * @return Line number in target version where changes begin.
     * 
     */
    private @Nullable Integer targetLine;

    private GetRepositoryDiffChangeDiffSectionLine() {}
    /**
     * @return The number of a line in the base version.
     * 
     */
    public Optional<Integer> baseLine() {
        return Optional.ofNullable(this.baseLine);
    }
    /**
     * @return Indicates whether a line in a conflicted section of the difference is from the base version, the target version, or if its just a marker indicating the beginning, middle, or end of a conflicted section.
     * 
     */
    public Optional<String> conflictMarker() {
        return Optional.ofNullable(this.conflictMarker);
    }
    /**
     * @return The contents of a line.
     * 
     */
    public Optional<String> lineContent() {
        return Optional.ofNullable(this.lineContent);
    }
    /**
     * @return Line number in target version where changes begin.
     * 
     */
    public Optional<Integer> targetLine() {
        return Optional.ofNullable(this.targetLine);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryDiffChangeDiffSectionLine defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer baseLine;
        private @Nullable String conflictMarker;
        private @Nullable String lineContent;
        private @Nullable Integer targetLine;
        public Builder() {}
        public Builder(GetRepositoryDiffChangeDiffSectionLine defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseLine = defaults.baseLine;
    	      this.conflictMarker = defaults.conflictMarker;
    	      this.lineContent = defaults.lineContent;
    	      this.targetLine = defaults.targetLine;
        }

        @CustomType.Setter
        public Builder baseLine(@Nullable Integer baseLine) {
            this.baseLine = baseLine;
            return this;
        }
        @CustomType.Setter
        public Builder conflictMarker(@Nullable String conflictMarker) {
            this.conflictMarker = conflictMarker;
            return this;
        }
        @CustomType.Setter
        public Builder lineContent(@Nullable String lineContent) {
            this.lineContent = lineContent;
            return this;
        }
        @CustomType.Setter
        public Builder targetLine(@Nullable Integer targetLine) {
            this.targetLine = targetLine;
            return this;
        }
        public GetRepositoryDiffChangeDiffSectionLine build() {
            final var o = new GetRepositoryDiffChangeDiffSectionLine();
            o.baseLine = baseLine;
            o.conflictMarker = conflictMarker;
            o.lineContent = lineContent;
            o.targetLine = targetLine;
            return o;
        }
    }
}
