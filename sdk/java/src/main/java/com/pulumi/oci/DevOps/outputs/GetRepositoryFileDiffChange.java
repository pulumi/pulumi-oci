// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.GetRepositoryFileDiffChangeDiffSection;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRepositoryFileDiffChange {
    /**
     * @return The number of a line in the base version.
     * 
     */
    private @Nullable Integer baseLine;
    /**
     * @return Number of lines chunk spans in base version.
     * 
     */
    private @Nullable Integer baseSpan;
    /**
     * @return List of difference section.
     * 
     */
    private @Nullable List<GetRepositoryFileDiffChangeDiffSection> diffSections;
    /**
     * @return Line number in target version where changes begin.
     * 
     */
    private @Nullable Integer targetLine;
    /**
     * @return Number of lines chunk spans in target version.
     * 
     */
    private @Nullable Integer targetSpan;

    private GetRepositoryFileDiffChange() {}
    /**
     * @return The number of a line in the base version.
     * 
     */
    public Optional<Integer> baseLine() {
        return Optional.ofNullable(this.baseLine);
    }
    /**
     * @return Number of lines chunk spans in base version.
     * 
     */
    public Optional<Integer> baseSpan() {
        return Optional.ofNullable(this.baseSpan);
    }
    /**
     * @return List of difference section.
     * 
     */
    public List<GetRepositoryFileDiffChangeDiffSection> diffSections() {
        return this.diffSections == null ? List.of() : this.diffSections;
    }
    /**
     * @return Line number in target version where changes begin.
     * 
     */
    public Optional<Integer> targetLine() {
        return Optional.ofNullable(this.targetLine);
    }
    /**
     * @return Number of lines chunk spans in target version.
     * 
     */
    public Optional<Integer> targetSpan() {
        return Optional.ofNullable(this.targetSpan);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryFileDiffChange defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer baseLine;
        private @Nullable Integer baseSpan;
        private @Nullable List<GetRepositoryFileDiffChangeDiffSection> diffSections;
        private @Nullable Integer targetLine;
        private @Nullable Integer targetSpan;
        public Builder() {}
        public Builder(GetRepositoryFileDiffChange defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseLine = defaults.baseLine;
    	      this.baseSpan = defaults.baseSpan;
    	      this.diffSections = defaults.diffSections;
    	      this.targetLine = defaults.targetLine;
    	      this.targetSpan = defaults.targetSpan;
        }

        @CustomType.Setter
        public Builder baseLine(@Nullable Integer baseLine) {
            this.baseLine = baseLine;
            return this;
        }
        @CustomType.Setter
        public Builder baseSpan(@Nullable Integer baseSpan) {
            this.baseSpan = baseSpan;
            return this;
        }
        @CustomType.Setter
        public Builder diffSections(@Nullable List<GetRepositoryFileDiffChangeDiffSection> diffSections) {
            this.diffSections = diffSections;
            return this;
        }
        public Builder diffSections(GetRepositoryFileDiffChangeDiffSection... diffSections) {
            return diffSections(List.of(diffSections));
        }
        @CustomType.Setter
        public Builder targetLine(@Nullable Integer targetLine) {
            this.targetLine = targetLine;
            return this;
        }
        @CustomType.Setter
        public Builder targetSpan(@Nullable Integer targetSpan) {
            this.targetSpan = targetSpan;
            return this;
        }
        public GetRepositoryFileDiffChange build() {
            final var o = new GetRepositoryFileDiffChange();
            o.baseLine = baseLine;
            o.baseSpan = baseSpan;
            o.diffSections = diffSections;
            o.targetLine = targetLine;
            o.targetSpan = targetSpan;
            return o;
        }
    }
}
