// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRepositoryPathsRepositoryPathCollectionItem {
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Name of file or directory.
     * 
     */
    private @Nullable String name;
    /**
     * @return Path to file or directory in a repository.
     * 
     */
    private @Nullable String path;
    /**
     * @return SHA-1 checksum of blob or tree.
     * 
     */
    private @Nullable String sha;
    /**
     * @return Size of file or directory.
     * 
     */
    private @Nullable String sizeInBytes;
    /**
     * @return The git URL of the submodule.
     * 
     */
    private @Nullable String submoduleGitUrl;
    /**
     * @return File or directory.
     * 
     */
    private @Nullable String type;

    private GetRepositoryPathsRepositoryPathCollectionItem() {}
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Name of file or directory.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Path to file or directory in a repository.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return SHA-1 checksum of blob or tree.
     * 
     */
    public Optional<String> sha() {
        return Optional.ofNullable(this.sha);
    }
    /**
     * @return Size of file or directory.
     * 
     */
    public Optional<String> sizeInBytes() {
        return Optional.ofNullable(this.sizeInBytes);
    }
    /**
     * @return The git URL of the submodule.
     * 
     */
    public Optional<String> submoduleGitUrl() {
        return Optional.ofNullable(this.submoduleGitUrl);
    }
    /**
     * @return File or directory.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryPathsRepositoryPathCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> definedTags;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String name;
        private @Nullable String path;
        private @Nullable String sha;
        private @Nullable String sizeInBytes;
        private @Nullable String submoduleGitUrl;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetRepositoryPathsRepositoryPathCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.sha = defaults.sha;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.submoduleGitUrl = defaults.submoduleGitUrl;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder sha(@Nullable String sha) {
            this.sha = sha;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInBytes(@Nullable String sizeInBytes) {
            this.sizeInBytes = sizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder submoduleGitUrl(@Nullable String submoduleGitUrl) {
            this.submoduleGitUrl = submoduleGitUrl;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetRepositoryPathsRepositoryPathCollectionItem build() {
            final var o = new GetRepositoryPathsRepositoryPathCollectionItem();
            o.definedTags = definedTags;
            o.freeformTags = freeformTags;
            o.name = name;
            o.path = path;
            o.sha = sha;
            o.sizeInBytes = sizeInBytes;
            o.submoduleGitUrl = submoduleGitUrl;
            o.type = type;
            return o;
        }
    }
}
