// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRepositoryPathsRepositoryPathCollectionItem {
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Name of file or directory.
     * 
     */
    private String name;
    /**
     * @return Path to file or directory in a repository.
     * 
     */
    private String path;
    /**
     * @return SHA-1 checksum of blob or tree.
     * 
     */
    private String sha;
    /**
     * @return Size of file or directory.
     * 
     */
    private String sizeInBytes;
    /**
     * @return The git URL of the submodule.
     * 
     */
    private String submoduleGitUrl;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return File or directory.
     * 
     */
    private String type;

    private GetRepositoryPathsRepositoryPathCollectionItem() {}
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Name of file or directory.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Path to file or directory in a repository.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return SHA-1 checksum of blob or tree.
     * 
     */
    public String sha() {
        return this.sha;
    }
    /**
     * @return Size of file or directory.
     * 
     */
    public String sizeInBytes() {
        return this.sizeInBytes;
    }
    /**
     * @return The git URL of the submodule.
     * 
     */
    public String submoduleGitUrl() {
        return this.submoduleGitUrl;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return File or directory.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryPathsRepositoryPathCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> definedTags;
        private Map<String,String> freeformTags;
        private String name;
        private String path;
        private String sha;
        private String sizeInBytes;
        private String submoduleGitUrl;
        private Map<String,String> systemTags;
        private String type;
        public Builder() {}
        public Builder(GetRepositoryPathsRepositoryPathCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.sha = defaults.sha;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.submoduleGitUrl = defaults.submoduleGitUrl;
    	      this.systemTags = defaults.systemTags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetRepositoryPathsRepositoryPathCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetRepositoryPathsRepositoryPathCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRepositoryPathsRepositoryPathCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetRepositoryPathsRepositoryPathCollectionItem", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder sha(String sha) {
            if (sha == null) {
              throw new MissingRequiredPropertyException("GetRepositoryPathsRepositoryPathCollectionItem", "sha");
            }
            this.sha = sha;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInBytes(String sizeInBytes) {
            if (sizeInBytes == null) {
              throw new MissingRequiredPropertyException("GetRepositoryPathsRepositoryPathCollectionItem", "sizeInBytes");
            }
            this.sizeInBytes = sizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder submoduleGitUrl(String submoduleGitUrl) {
            if (submoduleGitUrl == null) {
              throw new MissingRequiredPropertyException("GetRepositoryPathsRepositoryPathCollectionItem", "submoduleGitUrl");
            }
            this.submoduleGitUrl = submoduleGitUrl;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetRepositoryPathsRepositoryPathCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetRepositoryPathsRepositoryPathCollectionItem", "type");
            }
            this.type = type;
            return this;
        }
        public GetRepositoryPathsRepositoryPathCollectionItem build() {
            final var _resultValue = new GetRepositoryPathsRepositoryPathCollectionItem();
            _resultValue.definedTags = definedTags;
            _resultValue.freeformTags = freeformTags;
            _resultValue.name = name;
            _resultValue.path = path;
            _resultValue.sha = sha;
            _resultValue.sizeInBytes = sizeInBytes;
            _resultValue.submoduleGitUrl = submoduleGitUrl;
            _resultValue.systemTags = systemTags;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
