// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DevOps.outputs.GetRepositoryProtectedBranchesFilter;
import com.pulumi.oci.DevOps.outputs.GetRepositoryProtectedBranchesProtectedBranchCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRepositoryProtectedBranchesResult {
    private @Nullable List<GetRepositoryProtectedBranchesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String name;
    /**
     * @return The list of protected_branch_collection.
     * 
     */
    private List<GetRepositoryProtectedBranchesProtectedBranchCollection> protectedBranchCollections;
    private String repositoryId;

    private GetRepositoryProtectedBranchesResult() {}
    public List<GetRepositoryProtectedBranchesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of protected_branch_collection.
     * 
     */
    public List<GetRepositoryProtectedBranchesProtectedBranchCollection> protectedBranchCollections() {
        return this.protectedBranchCollections;
    }
    public String repositoryId() {
        return this.repositoryId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryProtectedBranchesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetRepositoryProtectedBranchesFilter> filters;
        private String id;
        private @Nullable String name;
        private List<GetRepositoryProtectedBranchesProtectedBranchCollection> protectedBranchCollections;
        private String repositoryId;
        public Builder() {}
        public Builder(GetRepositoryProtectedBranchesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.protectedBranchCollections = defaults.protectedBranchCollections;
    	      this.repositoryId = defaults.repositoryId;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetRepositoryProtectedBranchesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetRepositoryProtectedBranchesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRepositoryProtectedBranchesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder protectedBranchCollections(List<GetRepositoryProtectedBranchesProtectedBranchCollection> protectedBranchCollections) {
            if (protectedBranchCollections == null) {
              throw new MissingRequiredPropertyException("GetRepositoryProtectedBranchesResult", "protectedBranchCollections");
            }
            this.protectedBranchCollections = protectedBranchCollections;
            return this;
        }
        public Builder protectedBranchCollections(GetRepositoryProtectedBranchesProtectedBranchCollection... protectedBranchCollections) {
            return protectedBranchCollections(List.of(protectedBranchCollections));
        }
        @CustomType.Setter
        public Builder repositoryId(String repositoryId) {
            if (repositoryId == null) {
              throw new MissingRequiredPropertyException("GetRepositoryProtectedBranchesResult", "repositoryId");
            }
            this.repositoryId = repositoryId;
            return this;
        }
        public GetRepositoryProtectedBranchesResult build() {
            final var _resultValue = new GetRepositoryProtectedBranchesResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.protectedBranchCollections = protectedBranchCollections;
            _resultValue.repositoryId = repositoryId;
            return _resultValue;
        }
    }
}
