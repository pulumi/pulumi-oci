// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTriggerActionFilterIncludeFileFilter {
    /**
     * @return The file paths/glob pattern for files.
     * 
     */
    private List<String> filePaths;

    private GetTriggerActionFilterIncludeFileFilter() {}
    /**
     * @return The file paths/glob pattern for files.
     * 
     */
    public List<String> filePaths() {
        return this.filePaths;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTriggerActionFilterIncludeFileFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> filePaths;
        public Builder() {}
        public Builder(GetTriggerActionFilterIncludeFileFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filePaths = defaults.filePaths;
        }

        @CustomType.Setter
        public Builder filePaths(List<String> filePaths) {
            if (filePaths == null) {
              throw new MissingRequiredPropertyException("GetTriggerActionFilterIncludeFileFilter", "filePaths");
            }
            this.filePaths = filePaths;
            return this;
        }
        public Builder filePaths(String... filePaths) {
            return filePaths(List.of(filePaths));
        }
        public GetTriggerActionFilterIncludeFileFilter build() {
            final var _resultValue = new GetTriggerActionFilterIncludeFileFilter();
            _resultValue.filePaths = filePaths;
            return _resultValue;
        }
    }
}
