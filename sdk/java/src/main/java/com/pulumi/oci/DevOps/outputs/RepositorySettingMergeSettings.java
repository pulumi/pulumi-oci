// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RepositorySettingMergeSettings {
    /**
     * @return (Updatable) List of merge strategies which are allowed for a Project or Repository.
     * 
     */
    private List<String> allowedMergeStrategies;
    /**
     * @return (Updatable) Default type of merge strategy associated with the a Project or Repository.
     * 
     */
    private String defaultMergeStrategy;

    private RepositorySettingMergeSettings() {}
    /**
     * @return (Updatable) List of merge strategies which are allowed for a Project or Repository.
     * 
     */
    public List<String> allowedMergeStrategies() {
        return this.allowedMergeStrategies;
    }
    /**
     * @return (Updatable) Default type of merge strategy associated with the a Project or Repository.
     * 
     */
    public String defaultMergeStrategy() {
        return this.defaultMergeStrategy;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositorySettingMergeSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedMergeStrategies;
        private String defaultMergeStrategy;
        public Builder() {}
        public Builder(RepositorySettingMergeSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedMergeStrategies = defaults.allowedMergeStrategies;
    	      this.defaultMergeStrategy = defaults.defaultMergeStrategy;
        }

        @CustomType.Setter
        public Builder allowedMergeStrategies(List<String> allowedMergeStrategies) {
            if (allowedMergeStrategies == null) {
              throw new MissingRequiredPropertyException("RepositorySettingMergeSettings", "allowedMergeStrategies");
            }
            this.allowedMergeStrategies = allowedMergeStrategies;
            return this;
        }
        public Builder allowedMergeStrategies(String... allowedMergeStrategies) {
            return allowedMergeStrategies(List.of(allowedMergeStrategies));
        }
        @CustomType.Setter
        public Builder defaultMergeStrategy(String defaultMergeStrategy) {
            if (defaultMergeStrategy == null) {
              throw new MissingRequiredPropertyException("RepositorySettingMergeSettings", "defaultMergeStrategy");
            }
            this.defaultMergeStrategy = defaultMergeStrategy;
            return this;
        }
        public RepositorySettingMergeSettings build() {
            final var _resultValue = new RepositorySettingMergeSettings();
            _resultValue.allowedMergeStrategies = allowedMergeStrategies;
            _resultValue.defaultMergeStrategy = defaultMergeStrategy;
            return _resultValue;
        }
    }
}
