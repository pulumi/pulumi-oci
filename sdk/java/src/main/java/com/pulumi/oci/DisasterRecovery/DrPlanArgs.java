// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DrPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final DrPlanArgs Empty = new DrPlanArgs();

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The OCID of the DR protection group to which this DR plan belongs.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
     * 
     */
    @Import(name="drProtectionGroupId", required=true)
    private Output<String> drProtectionGroupId;

    /**
     * @return The OCID of the DR protection group to which this DR plan belongs.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
     * 
     */
    public Output<String> drProtectionGroupId() {
        return this.drProtectionGroupId;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
     * 
     */
    @Import(name="refreshTrigger")
    private @Nullable Output<Integer> refreshTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> refreshTrigger() {
        return Optional.ofNullable(this.refreshTrigger);
    }

    /**
     * The OCID of the source DR plan that should be cloned.  Example: `ocid1.drplan.oc1..uniqueID`
     * 
     */
    @Import(name="sourcePlanId")
    private @Nullable Output<String> sourcePlanId;

    /**
     * @return The OCID of the source DR plan that should be cloned.  Example: `ocid1.drplan.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> sourcePlanId() {
        return Optional.ofNullable(this.sourcePlanId);
    }

    /**
     * The type of DR plan to be created.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of DR plan to be created.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * (Updatable) An optional property when incremented triggers Verify. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="verifyTrigger")
    private @Nullable Output<Integer> verifyTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Verify. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Integer>> verifyTrigger() {
        return Optional.ofNullable(this.verifyTrigger);
    }

    private DrPlanArgs() {}

    private DrPlanArgs(DrPlanArgs $) {
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.drProtectionGroupId = $.drProtectionGroupId;
        this.freeformTags = $.freeformTags;
        this.refreshTrigger = $.refreshTrigger;
        this.sourcePlanId = $.sourcePlanId;
        this.type = $.type;
        this.verifyTrigger = $.verifyTrigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DrPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DrPlanArgs $;

        public Builder() {
            $ = new DrPlanArgs();
        }

        public Builder(DrPlanArgs defaults) {
            $ = new DrPlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param drProtectionGroupId The OCID of the DR protection group to which this DR plan belongs.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder drProtectionGroupId(Output<String> drProtectionGroupId) {
            $.drProtectionGroupId = drProtectionGroupId;
            return this;
        }

        /**
         * @param drProtectionGroupId The OCID of the DR protection group to which this DR plan belongs.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder drProtectionGroupId(String drProtectionGroupId) {
            return drProtectionGroupId(Output.of(drProtectionGroupId));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param refreshTrigger (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder refreshTrigger(@Nullable Output<Integer> refreshTrigger) {
            $.refreshTrigger = refreshTrigger;
            return this;
        }

        /**
         * @param refreshTrigger (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder refreshTrigger(Integer refreshTrigger) {
            return refreshTrigger(Output.of(refreshTrigger));
        }

        /**
         * @param sourcePlanId The OCID of the source DR plan that should be cloned.  Example: `ocid1.drplan.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder sourcePlanId(@Nullable Output<String> sourcePlanId) {
            $.sourcePlanId = sourcePlanId;
            return this;
        }

        /**
         * @param sourcePlanId The OCID of the source DR plan that should be cloned.  Example: `ocid1.drplan.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder sourcePlanId(String sourcePlanId) {
            return sourcePlanId(Output.of(sourcePlanId));
        }

        /**
         * @param type The type of DR plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of DR plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param verifyTrigger (Updatable) An optional property when incremented triggers Verify. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder verifyTrigger(@Nullable Output<Integer> verifyTrigger) {
            $.verifyTrigger = verifyTrigger;
            return this;
        }

        /**
         * @param verifyTrigger (Updatable) An optional property when incremented triggers Verify. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder verifyTrigger(Integer verifyTrigger) {
            return verifyTrigger(Output.of(verifyTrigger));
        }

        public DrPlanArgs build() {
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("DrPlanArgs", "displayName");
            }
            if ($.drProtectionGroupId == null) {
                throw new MissingRequiredPropertyException("DrPlanArgs", "drProtectionGroupId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("DrPlanArgs", "type");
            }
            return $;
        }
    }

}
