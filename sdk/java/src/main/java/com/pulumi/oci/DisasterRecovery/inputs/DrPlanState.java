// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DisasterRecovery.inputs.DrPlanPlanGroupArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DrPlanState extends com.pulumi.resources.ResourceArgs {

    public static final DrPlanState Empty = new DrPlanState();

    /**
     * The OCID of the compartment containing the DR plan.  Example: `ocid1.compartment.oc1..uniqueID`
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment containing the DR plan.  Example: `ocid1.compartment.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The OCID of the DR protection group to which this DR plan belongs.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
     * 
     */
    @Import(name="drProtectionGroupId")
    private @Nullable Output<String> drProtectionGroupId;

    /**
     * @return The OCID of the DR protection group to which this DR plan belongs.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> drProtectionGroupId() {
        return Optional.ofNullable(this.drProtectionGroupId);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * A message describing the DR plan&#39;s current state in more detail.
     * 
     */
    @Import(name="lifeCycleDetails")
    private @Nullable Output<String> lifeCycleDetails;

    /**
     * @return A message describing the DR plan&#39;s current state in more detail.
     * 
     */
    public Optional<Output<String>> lifeCycleDetails() {
        return Optional.ofNullable(this.lifeCycleDetails);
    }

    /**
     * The current state of the DR plan.
     * 
     */
    @Import(name="lifecycleSubState")
    private @Nullable Output<String> lifecycleSubState;

    /**
     * @return The current state of the DR plan.
     * 
     */
    public Optional<Output<String>> lifecycleSubState() {
        return Optional.ofNullable(this.lifecycleSubState);
    }

    /**
     * The OCID of the peer DR protection group associated with this plan&#39;s DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
     * 
     */
    @Import(name="peerDrProtectionGroupId")
    private @Nullable Output<String> peerDrProtectionGroupId;

    /**
     * @return The OCID of the peer DR protection group associated with this plan&#39;s DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> peerDrProtectionGroupId() {
        return Optional.ofNullable(this.peerDrProtectionGroupId);
    }

    /**
     * The region of the peer DR protection group associated with this plan&#39;s DR protection group.  Example: `us-ashburn-1`
     * 
     */
    @Import(name="peerRegion")
    private @Nullable Output<String> peerRegion;

    /**
     * @return The region of the peer DR protection group associated with this plan&#39;s DR protection group.  Example: `us-ashburn-1`
     * 
     */
    public Optional<Output<String>> peerRegion() {
        return Optional.ofNullable(this.peerRegion);
    }

    /**
     * The list of groups in this DR plan.
     * 
     */
    @Import(name="planGroups")
    private @Nullable Output<List<DrPlanPlanGroupArgs>> planGroups;

    /**
     * @return The list of groups in this DR plan.
     * 
     */
    public Optional<Output<List<DrPlanPlanGroupArgs>>> planGroups() {
        return Optional.ofNullable(this.planGroups);
    }

    /**
     * (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
     * 
     */
    @Import(name="refreshTrigger")
    private @Nullable Output<Integer> refreshTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> refreshTrigger() {
        return Optional.ofNullable(this.refreshTrigger);
    }

    /**
     * The OCID of the source DR plan that should be cloned.  Example: `ocid1.drplan.oc1..uniqueID`
     * 
     */
    @Import(name="sourcePlanId")
    private @Nullable Output<String> sourcePlanId;

    /**
     * @return The OCID of the source DR plan that should be cloned.  Example: `ocid1.drplan.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> sourcePlanId() {
        return Optional.ofNullable(this.sourcePlanId);
    }

    /**
     * The current state of the DR plan.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the DR plan.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The date and time the DR plan was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the DR plan was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the DR plan was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the DR plan was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The type of DR plan to be created.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of DR plan to be created.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * (Updatable) An optional property when incremented triggers Verify. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="verifyTrigger")
    private @Nullable Output<Integer> verifyTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Verify. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Integer>> verifyTrigger() {
        return Optional.ofNullable(this.verifyTrigger);
    }

    private DrPlanState() {}

    private DrPlanState(DrPlanState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.drProtectionGroupId = $.drProtectionGroupId;
        this.freeformTags = $.freeformTags;
        this.lifeCycleDetails = $.lifeCycleDetails;
        this.lifecycleSubState = $.lifecycleSubState;
        this.peerDrProtectionGroupId = $.peerDrProtectionGroupId;
        this.peerRegion = $.peerRegion;
        this.planGroups = $.planGroups;
        this.refreshTrigger = $.refreshTrigger;
        this.sourcePlanId = $.sourcePlanId;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.type = $.type;
        this.verifyTrigger = $.verifyTrigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DrPlanState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DrPlanState $;

        public Builder() {
            $ = new DrPlanState();
        }

        public Builder(DrPlanState defaults) {
            $ = new DrPlanState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment containing the DR plan.  Example: `ocid1.compartment.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment containing the DR plan.  Example: `ocid1.compartment.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the DR plan being created.  Example: `EBS Switchover PHX to IAD`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param drProtectionGroupId The OCID of the DR protection group to which this DR plan belongs.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder drProtectionGroupId(@Nullable Output<String> drProtectionGroupId) {
            $.drProtectionGroupId = drProtectionGroupId;
            return this;
        }

        /**
         * @param drProtectionGroupId The OCID of the DR protection group to which this DR plan belongs.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder drProtectionGroupId(String drProtectionGroupId) {
            return drProtectionGroupId(Output.of(drProtectionGroupId));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param lifeCycleDetails A message describing the DR plan&#39;s current state in more detail.
         * 
         * @return builder
         * 
         */
        public Builder lifeCycleDetails(@Nullable Output<String> lifeCycleDetails) {
            $.lifeCycleDetails = lifeCycleDetails;
            return this;
        }

        /**
         * @param lifeCycleDetails A message describing the DR plan&#39;s current state in more detail.
         * 
         * @return builder
         * 
         */
        public Builder lifeCycleDetails(String lifeCycleDetails) {
            return lifeCycleDetails(Output.of(lifeCycleDetails));
        }

        /**
         * @param lifecycleSubState The current state of the DR plan.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleSubState(@Nullable Output<String> lifecycleSubState) {
            $.lifecycleSubState = lifecycleSubState;
            return this;
        }

        /**
         * @param lifecycleSubState The current state of the DR plan.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleSubState(String lifecycleSubState) {
            return lifecycleSubState(Output.of(lifecycleSubState));
        }

        /**
         * @param peerDrProtectionGroupId The OCID of the peer DR protection group associated with this plan&#39;s DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder peerDrProtectionGroupId(@Nullable Output<String> peerDrProtectionGroupId) {
            $.peerDrProtectionGroupId = peerDrProtectionGroupId;
            return this;
        }

        /**
         * @param peerDrProtectionGroupId The OCID of the peer DR protection group associated with this plan&#39;s DR protection group.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder peerDrProtectionGroupId(String peerDrProtectionGroupId) {
            return peerDrProtectionGroupId(Output.of(peerDrProtectionGroupId));
        }

        /**
         * @param peerRegion The region of the peer DR protection group associated with this plan&#39;s DR protection group.  Example: `us-ashburn-1`
         * 
         * @return builder
         * 
         */
        public Builder peerRegion(@Nullable Output<String> peerRegion) {
            $.peerRegion = peerRegion;
            return this;
        }

        /**
         * @param peerRegion The region of the peer DR protection group associated with this plan&#39;s DR protection group.  Example: `us-ashburn-1`
         * 
         * @return builder
         * 
         */
        public Builder peerRegion(String peerRegion) {
            return peerRegion(Output.of(peerRegion));
        }

        /**
         * @param planGroups The list of groups in this DR plan.
         * 
         * @return builder
         * 
         */
        public Builder planGroups(@Nullable Output<List<DrPlanPlanGroupArgs>> planGroups) {
            $.planGroups = planGroups;
            return this;
        }

        /**
         * @param planGroups The list of groups in this DR plan.
         * 
         * @return builder
         * 
         */
        public Builder planGroups(List<DrPlanPlanGroupArgs> planGroups) {
            return planGroups(Output.of(planGroups));
        }

        /**
         * @param planGroups The list of groups in this DR plan.
         * 
         * @return builder
         * 
         */
        public Builder planGroups(DrPlanPlanGroupArgs... planGroups) {
            return planGroups(List.of(planGroups));
        }

        /**
         * @param refreshTrigger (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder refreshTrigger(@Nullable Output<Integer> refreshTrigger) {
            $.refreshTrigger = refreshTrigger;
            return this;
        }

        /**
         * @param refreshTrigger (Updatable) An optional property when incremented triggers Refresh. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder refreshTrigger(Integer refreshTrigger) {
            return refreshTrigger(Output.of(refreshTrigger));
        }

        /**
         * @param sourcePlanId The OCID of the source DR plan that should be cloned.  Example: `ocid1.drplan.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder sourcePlanId(@Nullable Output<String> sourcePlanId) {
            $.sourcePlanId = sourcePlanId;
            return this;
        }

        /**
         * @param sourcePlanId The OCID of the source DR plan that should be cloned.  Example: `ocid1.drplan.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder sourcePlanId(String sourcePlanId) {
            return sourcePlanId(Output.of(sourcePlanId));
        }

        /**
         * @param state The current state of the DR plan.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the DR plan.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The date and time the DR plan was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the DR plan was created. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The date and time the DR plan was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the DR plan was updated. An RFC3339 formatted datetime string.  Example: `2019-03-29T09:36:42Z`
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param type The type of DR plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of DR plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param verifyTrigger (Updatable) An optional property when incremented triggers Verify. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder verifyTrigger(@Nullable Output<Integer> verifyTrigger) {
            $.verifyTrigger = verifyTrigger;
            return this;
        }

        /**
         * @param verifyTrigger (Updatable) An optional property when incremented triggers Verify. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder verifyTrigger(Integer verifyTrigger) {
            return verifyTrigger(Output.of(verifyTrigger));
        }

        public DrPlanState build() {
            return $;
        }
    }

}
