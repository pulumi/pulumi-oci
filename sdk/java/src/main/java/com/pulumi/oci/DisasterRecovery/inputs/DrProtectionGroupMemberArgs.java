// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DisasterRecovery.inputs.DrProtectionGroupMemberBackendSetMappingArgs;
import com.pulumi.oci.DisasterRecovery.inputs.DrProtectionGroupMemberBlockVolumeOperationArgs;
import com.pulumi.oci.DisasterRecovery.inputs.DrProtectionGroupMemberExportMappingArgs;
import com.pulumi.oci.DisasterRecovery.inputs.DrProtectionGroupMemberFileSystemOperationArgs;
import com.pulumi.oci.DisasterRecovery.inputs.DrProtectionGroupMemberVnicMappingArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DrProtectionGroupMemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final DrProtectionGroupMemberArgs Empty = new DrProtectionGroupMemberArgs();

    /**
     * (Updatable) This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html&gt; for information about these clone types. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html&gt; for information about snapshot standby.
     * 
     */
    @Import(name="autonomousDatabaseStandbyTypeForDrDrills")
    private @Nullable Output<String> autonomousDatabaseStandbyTypeForDrDrills;

    /**
     * @return (Updatable) This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html&gt; for information about these clone types. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html&gt; for information about snapshot standby.
     * 
     */
    public Optional<Output<String>> autonomousDatabaseStandbyTypeForDrDrills() {
        return Optional.ofNullable(this.autonomousDatabaseStandbyTypeForDrDrills);
    }

    /**
     * (Updatable) A list of backend set mappings that are used to transfer or update backends during DR.
     * 
     */
    @Import(name="backendSetMappings")
    private @Nullable Output<List<DrProtectionGroupMemberBackendSetMappingArgs>> backendSetMappings;

    /**
     * @return (Updatable) A list of backend set mappings that are used to transfer or update backends during DR.
     * 
     */
    public Optional<Output<List<DrProtectionGroupMemberBackendSetMappingArgs>>> backendSetMappings() {
        return Optional.ofNullable(this.backendSetMappings);
    }

    /**
     * (Updatable) A list of operations performed on block volumes used by the compute instance.
     * 
     */
    @Import(name="blockVolumeOperations")
    private @Nullable Output<List<DrProtectionGroupMemberBlockVolumeOperationArgs>> blockVolumeOperations;

    /**
     * @return (Updatable) A list of operations performed on block volumes used by the compute instance.
     * 
     */
    public Optional<Output<List<DrProtectionGroupMemberBlockVolumeOperationArgs>>> blockVolumeOperations() {
        return Optional.ofNullable(this.blockVolumeOperations);
    }

    /**
     * (Updatable) The bucket name inside the object storage namespace.  Example: `bucket_name`
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return (Updatable) The bucket name inside the object storage namespace.  Example: `bucket_name`
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * (Updatable) The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html&gt; for information about these service types.
     * 
     */
    @Import(name="connectionStringType")
    private @Nullable Output<String> connectionStringType;

    /**
     * @return (Updatable) The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html&gt; for information about these service types.
     * 
     */
    public Optional<Output<String>> connectionStringType() {
        return Optional.ofNullable(this.connectionStringType);
    }

    /**
     * (Updatable) The availability domain of the destination mount target.  Example: `BBTh:region-AD`
     * 
     */
    @Import(name="destinationAvailabilityDomain")
    private @Nullable Output<String> destinationAvailabilityDomain;

    /**
     * @return (Updatable) The availability domain of the destination mount target.  Example: `BBTh:region-AD`
     * 
     */
    public Optional<Output<String>> destinationAvailabilityDomain() {
        return Optional.ofNullable(this.destinationAvailabilityDomain);
    }

    /**
     * (Updatable) The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
     * 
     */
    @Import(name="destinationCapacityReservationId")
    private @Nullable Output<String> destinationCapacityReservationId;

    /**
     * @return (Updatable) The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> destinationCapacityReservationId() {
        return Optional.ofNullable(this.destinationCapacityReservationId);
    }

    /**
     * (Updatable) The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
     * 
     */
    @Import(name="destinationCompartmentId")
    private @Nullable Output<String> destinationCompartmentId;

    /**
     * @return (Updatable) The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> destinationCompartmentId() {
        return Optional.ofNullable(this.destinationCompartmentId);
    }

    /**
     * (Updatable) The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
     * 
     */
    @Import(name="destinationDedicatedVmHostId")
    private @Nullable Output<String> destinationDedicatedVmHostId;

    /**
     * @return (Updatable) The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> destinationDedicatedVmHostId() {
        return Optional.ofNullable(this.destinationDedicatedVmHostId);
    }

    /**
     * (Updatable) The OCID of the destination load balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
     * 
     */
    @Import(name="destinationLoadBalancerId")
    private @Nullable Output<String> destinationLoadBalancerId;

    /**
     * @return (Updatable) The OCID of the destination load balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> destinationLoadBalancerId() {
        return Optional.ofNullable(this.destinationLoadBalancerId);
    }

    /**
     * (Updatable) The OCID of the destination network load balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
     * 
     */
    @Import(name="destinationNetworkLoadBalancerId")
    private @Nullable Output<String> destinationNetworkLoadBalancerId;

    /**
     * @return (Updatable) The OCID of the destination network load balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> destinationNetworkLoadBalancerId() {
        return Optional.ofNullable(this.destinationNetworkLoadBalancerId);
    }

    /**
     * (Updatable) A list of mappings between file system exports in the primary region and mount targets in the standby region.
     * 
     */
    @Import(name="exportMappings")
    private @Nullable Output<List<DrProtectionGroupMemberExportMappingArgs>> exportMappings;

    /**
     * @return (Updatable) A list of mappings between file system exports in the primary region and mount targets in the standby region.
     * 
     */
    public Optional<Output<List<DrProtectionGroupMemberExportMappingArgs>>> exportMappings() {
        return Optional.ofNullable(this.exportMappings);
    }

    /**
     * (Updatable) A list of operations performed on file systems used by the compute instance.
     * 
     */
    @Import(name="fileSystemOperations")
    private @Nullable Output<List<DrProtectionGroupMemberFileSystemOperationArgs>> fileSystemOperations;

    /**
     * @return (Updatable) A list of operations performed on file systems used by the compute instance.
     * 
     */
    public Optional<Output<List<DrProtectionGroupMemberFileSystemOperationArgs>>> fileSystemOperations() {
        return Optional.ofNullable(this.fileSystemOperations);
    }

    /**
     * (Updatable) A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
     * 
     */
    @Import(name="isMovable")
    private @Nullable Output<Boolean> isMovable;

    /**
     * @return (Updatable) A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
     * 
     */
    public Optional<Output<Boolean>> isMovable() {
        return Optional.ofNullable(this.isMovable);
    }

    /**
     * (Updatable) A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
     * 
     */
    @Import(name="isRetainFaultDomain")
    private @Nullable Output<Boolean> isRetainFaultDomain;

    /**
     * @return (Updatable) A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
     * 
     */
    public Optional<Output<Boolean>> isRetainFaultDomain() {
        return Optional.ofNullable(this.isRetainFaultDomain);
    }

    /**
     * (Updatable) A flag indicating whether the non-movable compute instance should be started and stopped during DR operations. *Prechecks cannot be executed on stopped instances that are configured to be started.*
     * 
     */
    @Import(name="isStartStopEnabled")
    private @Nullable Output<Boolean> isStartStopEnabled;

    /**
     * @return (Updatable) A flag indicating whether the non-movable compute instance should be started and stopped during DR operations. *Prechecks cannot be executed on stopped instances that are configured to be started.*
     * 
     */
    public Optional<Output<Boolean>> isStartStopEnabled() {
        return Optional.ofNullable(this.isStartStopEnabled);
    }

    /**
     * (Updatable) The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
     * 
     */
    @Import(name="memberId", required=true)
    private Output<String> memberId;

    /**
     * @return (Updatable) The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
     * 
     */
    public Output<String> memberId() {
        return this.memberId;
    }

    /**
     * (Updatable) The type of the member.
     * 
     */
    @Import(name="memberType", required=true)
    private Output<String> memberType;

    /**
     * @return (Updatable) The type of the member.
     * 
     */
    public Output<String> memberType() {
        return this.memberType;
    }

    /**
     * (Updatable) The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return (Updatable) The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * (Updatable) The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
     * 
     */
    @Import(name="passwordVaultSecretId")
    private @Nullable Output<String> passwordVaultSecretId;

    /**
     * @return (Updatable) The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> passwordVaultSecretId() {
        return Optional.ofNullable(this.passwordVaultSecretId);
    }

    /**
     * (Updatable) A list of compute instance VNIC mappings.
     * 
     */
    @Import(name="vnicMapping")
    private @Nullable Output<List<DrProtectionGroupMemberVnicMappingArgs>> vnicMapping;

    /**
     * @return (Updatable) A list of compute instance VNIC mappings.
     * 
     */
    public Optional<Output<List<DrProtectionGroupMemberVnicMappingArgs>>> vnicMapping() {
        return Optional.ofNullable(this.vnicMapping);
    }

    /**
     * (Updatable) A list of compute instance VNIC mappings.
     * 
     */
    @Import(name="vnicMappings")
    private @Nullable Output<List<DrProtectionGroupMemberVnicMappingArgs>> vnicMappings;

    /**
     * @return (Updatable) A list of compute instance VNIC mappings.
     * 
     */
    public Optional<Output<List<DrProtectionGroupMemberVnicMappingArgs>>> vnicMappings() {
        return Optional.ofNullable(this.vnicMappings);
    }

    private DrProtectionGroupMemberArgs() {}

    private DrProtectionGroupMemberArgs(DrProtectionGroupMemberArgs $) {
        this.autonomousDatabaseStandbyTypeForDrDrills = $.autonomousDatabaseStandbyTypeForDrDrills;
        this.backendSetMappings = $.backendSetMappings;
        this.blockVolumeOperations = $.blockVolumeOperations;
        this.bucket = $.bucket;
        this.connectionStringType = $.connectionStringType;
        this.destinationAvailabilityDomain = $.destinationAvailabilityDomain;
        this.destinationCapacityReservationId = $.destinationCapacityReservationId;
        this.destinationCompartmentId = $.destinationCompartmentId;
        this.destinationDedicatedVmHostId = $.destinationDedicatedVmHostId;
        this.destinationLoadBalancerId = $.destinationLoadBalancerId;
        this.destinationNetworkLoadBalancerId = $.destinationNetworkLoadBalancerId;
        this.exportMappings = $.exportMappings;
        this.fileSystemOperations = $.fileSystemOperations;
        this.isMovable = $.isMovable;
        this.isRetainFaultDomain = $.isRetainFaultDomain;
        this.isStartStopEnabled = $.isStartStopEnabled;
        this.memberId = $.memberId;
        this.memberType = $.memberType;
        this.namespace = $.namespace;
        this.passwordVaultSecretId = $.passwordVaultSecretId;
        this.vnicMapping = $.vnicMapping;
        this.vnicMappings = $.vnicMappings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DrProtectionGroupMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DrProtectionGroupMemberArgs $;

        public Builder() {
            $ = new DrProtectionGroupMemberArgs();
        }

        public Builder(DrProtectionGroupMemberArgs defaults) {
            $ = new DrProtectionGroupMemberArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autonomousDatabaseStandbyTypeForDrDrills (Updatable) This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html&gt; for information about these clone types. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html&gt; for information about snapshot standby.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseStandbyTypeForDrDrills(@Nullable Output<String> autonomousDatabaseStandbyTypeForDrDrills) {
            $.autonomousDatabaseStandbyTypeForDrDrills = autonomousDatabaseStandbyTypeForDrDrills;
            return this;
        }

        /**
         * @param autonomousDatabaseStandbyTypeForDrDrills (Updatable) This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html&gt; for information about these clone types. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html&gt; for information about snapshot standby.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseStandbyTypeForDrDrills(String autonomousDatabaseStandbyTypeForDrDrills) {
            return autonomousDatabaseStandbyTypeForDrDrills(Output.of(autonomousDatabaseStandbyTypeForDrDrills));
        }

        /**
         * @param backendSetMappings (Updatable) A list of backend set mappings that are used to transfer or update backends during DR.
         * 
         * @return builder
         * 
         */
        public Builder backendSetMappings(@Nullable Output<List<DrProtectionGroupMemberBackendSetMappingArgs>> backendSetMappings) {
            $.backendSetMappings = backendSetMappings;
            return this;
        }

        /**
         * @param backendSetMappings (Updatable) A list of backend set mappings that are used to transfer or update backends during DR.
         * 
         * @return builder
         * 
         */
        public Builder backendSetMappings(List<DrProtectionGroupMemberBackendSetMappingArgs> backendSetMappings) {
            return backendSetMappings(Output.of(backendSetMappings));
        }

        /**
         * @param backendSetMappings (Updatable) A list of backend set mappings that are used to transfer or update backends during DR.
         * 
         * @return builder
         * 
         */
        public Builder backendSetMappings(DrProtectionGroupMemberBackendSetMappingArgs... backendSetMappings) {
            return backendSetMappings(List.of(backendSetMappings));
        }

        /**
         * @param blockVolumeOperations (Updatable) A list of operations performed on block volumes used by the compute instance.
         * 
         * @return builder
         * 
         */
        public Builder blockVolumeOperations(@Nullable Output<List<DrProtectionGroupMemberBlockVolumeOperationArgs>> blockVolumeOperations) {
            $.blockVolumeOperations = blockVolumeOperations;
            return this;
        }

        /**
         * @param blockVolumeOperations (Updatable) A list of operations performed on block volumes used by the compute instance.
         * 
         * @return builder
         * 
         */
        public Builder blockVolumeOperations(List<DrProtectionGroupMemberBlockVolumeOperationArgs> blockVolumeOperations) {
            return blockVolumeOperations(Output.of(blockVolumeOperations));
        }

        /**
         * @param blockVolumeOperations (Updatable) A list of operations performed on block volumes used by the compute instance.
         * 
         * @return builder
         * 
         */
        public Builder blockVolumeOperations(DrProtectionGroupMemberBlockVolumeOperationArgs... blockVolumeOperations) {
            return blockVolumeOperations(List.of(blockVolumeOperations));
        }

        /**
         * @param bucket (Updatable) The bucket name inside the object storage namespace.  Example: `bucket_name`
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket (Updatable) The bucket name inside the object storage namespace.  Example: `bucket_name`
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param connectionStringType (Updatable) The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html&gt; for information about these service types.
         * 
         * @return builder
         * 
         */
        public Builder connectionStringType(@Nullable Output<String> connectionStringType) {
            $.connectionStringType = connectionStringType;
            return this;
        }

        /**
         * @param connectionStringType (Updatable) The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See &lt;https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html&gt; for information about these service types.
         * 
         * @return builder
         * 
         */
        public Builder connectionStringType(String connectionStringType) {
            return connectionStringType(Output.of(connectionStringType));
        }

        /**
         * @param destinationAvailabilityDomain (Updatable) The availability domain of the destination mount target.  Example: `BBTh:region-AD`
         * 
         * @return builder
         * 
         */
        public Builder destinationAvailabilityDomain(@Nullable Output<String> destinationAvailabilityDomain) {
            $.destinationAvailabilityDomain = destinationAvailabilityDomain;
            return this;
        }

        /**
         * @param destinationAvailabilityDomain (Updatable) The availability domain of the destination mount target.  Example: `BBTh:region-AD`
         * 
         * @return builder
         * 
         */
        public Builder destinationAvailabilityDomain(String destinationAvailabilityDomain) {
            return destinationAvailabilityDomain(Output.of(destinationAvailabilityDomain));
        }

        /**
         * @param destinationCapacityReservationId (Updatable) The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder destinationCapacityReservationId(@Nullable Output<String> destinationCapacityReservationId) {
            $.destinationCapacityReservationId = destinationCapacityReservationId;
            return this;
        }

        /**
         * @param destinationCapacityReservationId (Updatable) The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder destinationCapacityReservationId(String destinationCapacityReservationId) {
            return destinationCapacityReservationId(Output.of(destinationCapacityReservationId));
        }

        /**
         * @param destinationCompartmentId (Updatable) The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder destinationCompartmentId(@Nullable Output<String> destinationCompartmentId) {
            $.destinationCompartmentId = destinationCompartmentId;
            return this;
        }

        /**
         * @param destinationCompartmentId (Updatable) The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder destinationCompartmentId(String destinationCompartmentId) {
            return destinationCompartmentId(Output.of(destinationCompartmentId));
        }

        /**
         * @param destinationDedicatedVmHostId (Updatable) The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder destinationDedicatedVmHostId(@Nullable Output<String> destinationDedicatedVmHostId) {
            $.destinationDedicatedVmHostId = destinationDedicatedVmHostId;
            return this;
        }

        /**
         * @param destinationDedicatedVmHostId (Updatable) The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder destinationDedicatedVmHostId(String destinationDedicatedVmHostId) {
            return destinationDedicatedVmHostId(Output.of(destinationDedicatedVmHostId));
        }

        /**
         * @param destinationLoadBalancerId (Updatable) The OCID of the destination load balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder destinationLoadBalancerId(@Nullable Output<String> destinationLoadBalancerId) {
            $.destinationLoadBalancerId = destinationLoadBalancerId;
            return this;
        }

        /**
         * @param destinationLoadBalancerId (Updatable) The OCID of the destination load balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder destinationLoadBalancerId(String destinationLoadBalancerId) {
            return destinationLoadBalancerId(Output.of(destinationLoadBalancerId));
        }

        /**
         * @param destinationNetworkLoadBalancerId (Updatable) The OCID of the destination network load balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder destinationNetworkLoadBalancerId(@Nullable Output<String> destinationNetworkLoadBalancerId) {
            $.destinationNetworkLoadBalancerId = destinationNetworkLoadBalancerId;
            return this;
        }

        /**
         * @param destinationNetworkLoadBalancerId (Updatable) The OCID of the destination network load balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder destinationNetworkLoadBalancerId(String destinationNetworkLoadBalancerId) {
            return destinationNetworkLoadBalancerId(Output.of(destinationNetworkLoadBalancerId));
        }

        /**
         * @param exportMappings (Updatable) A list of mappings between file system exports in the primary region and mount targets in the standby region.
         * 
         * @return builder
         * 
         */
        public Builder exportMappings(@Nullable Output<List<DrProtectionGroupMemberExportMappingArgs>> exportMappings) {
            $.exportMappings = exportMappings;
            return this;
        }

        /**
         * @param exportMappings (Updatable) A list of mappings between file system exports in the primary region and mount targets in the standby region.
         * 
         * @return builder
         * 
         */
        public Builder exportMappings(List<DrProtectionGroupMemberExportMappingArgs> exportMappings) {
            return exportMappings(Output.of(exportMappings));
        }

        /**
         * @param exportMappings (Updatable) A list of mappings between file system exports in the primary region and mount targets in the standby region.
         * 
         * @return builder
         * 
         */
        public Builder exportMappings(DrProtectionGroupMemberExportMappingArgs... exportMappings) {
            return exportMappings(List.of(exportMappings));
        }

        /**
         * @param fileSystemOperations (Updatable) A list of operations performed on file systems used by the compute instance.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemOperations(@Nullable Output<List<DrProtectionGroupMemberFileSystemOperationArgs>> fileSystemOperations) {
            $.fileSystemOperations = fileSystemOperations;
            return this;
        }

        /**
         * @param fileSystemOperations (Updatable) A list of operations performed on file systems used by the compute instance.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemOperations(List<DrProtectionGroupMemberFileSystemOperationArgs> fileSystemOperations) {
            return fileSystemOperations(Output.of(fileSystemOperations));
        }

        /**
         * @param fileSystemOperations (Updatable) A list of operations performed on file systems used by the compute instance.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemOperations(DrProtectionGroupMemberFileSystemOperationArgs... fileSystemOperations) {
            return fileSystemOperations(List.of(fileSystemOperations));
        }

        /**
         * @param isMovable (Updatable) A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
         * 
         * @return builder
         * 
         */
        public Builder isMovable(@Nullable Output<Boolean> isMovable) {
            $.isMovable = isMovable;
            return this;
        }

        /**
         * @param isMovable (Updatable) A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
         * 
         * @return builder
         * 
         */
        public Builder isMovable(Boolean isMovable) {
            return isMovable(Output.of(isMovable));
        }

        /**
         * @param isRetainFaultDomain (Updatable) A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
         * 
         * @return builder
         * 
         */
        public Builder isRetainFaultDomain(@Nullable Output<Boolean> isRetainFaultDomain) {
            $.isRetainFaultDomain = isRetainFaultDomain;
            return this;
        }

        /**
         * @param isRetainFaultDomain (Updatable) A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
         * 
         * @return builder
         * 
         */
        public Builder isRetainFaultDomain(Boolean isRetainFaultDomain) {
            return isRetainFaultDomain(Output.of(isRetainFaultDomain));
        }

        /**
         * @param isStartStopEnabled (Updatable) A flag indicating whether the non-movable compute instance should be started and stopped during DR operations. *Prechecks cannot be executed on stopped instances that are configured to be started.*
         * 
         * @return builder
         * 
         */
        public Builder isStartStopEnabled(@Nullable Output<Boolean> isStartStopEnabled) {
            $.isStartStopEnabled = isStartStopEnabled;
            return this;
        }

        /**
         * @param isStartStopEnabled (Updatable) A flag indicating whether the non-movable compute instance should be started and stopped during DR operations. *Prechecks cannot be executed on stopped instances that are configured to be started.*
         * 
         * @return builder
         * 
         */
        public Builder isStartStopEnabled(Boolean isStartStopEnabled) {
            return isStartStopEnabled(Output.of(isStartStopEnabled));
        }

        /**
         * @param memberId (Updatable) The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder memberId(Output<String> memberId) {
            $.memberId = memberId;
            return this;
        }

        /**
         * @param memberId (Updatable) The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder memberId(String memberId) {
            return memberId(Output.of(memberId));
        }

        /**
         * @param memberType (Updatable) The type of the member.
         * 
         * @return builder
         * 
         */
        public Builder memberType(Output<String> memberType) {
            $.memberType = memberType;
            return this;
        }

        /**
         * @param memberType (Updatable) The type of the member.
         * 
         * @return builder
         * 
         */
        public Builder memberType(String memberType) {
            return memberType(Output.of(memberType));
        }

        /**
         * @param namespace (Updatable) The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace (Updatable) The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param passwordVaultSecretId (Updatable) The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder passwordVaultSecretId(@Nullable Output<String> passwordVaultSecretId) {
            $.passwordVaultSecretId = passwordVaultSecretId;
            return this;
        }

        /**
         * @param passwordVaultSecretId (Updatable) The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder passwordVaultSecretId(String passwordVaultSecretId) {
            return passwordVaultSecretId(Output.of(passwordVaultSecretId));
        }

        /**
         * @param vnicMapping (Updatable) A list of compute instance VNIC mappings.
         * 
         * @return builder
         * 
         */
        public Builder vnicMapping(@Nullable Output<List<DrProtectionGroupMemberVnicMappingArgs>> vnicMapping) {
            $.vnicMapping = vnicMapping;
            return this;
        }

        /**
         * @param vnicMapping (Updatable) A list of compute instance VNIC mappings.
         * 
         * @return builder
         * 
         */
        public Builder vnicMapping(List<DrProtectionGroupMemberVnicMappingArgs> vnicMapping) {
            return vnicMapping(Output.of(vnicMapping));
        }

        /**
         * @param vnicMapping (Updatable) A list of compute instance VNIC mappings.
         * 
         * @return builder
         * 
         */
        public Builder vnicMapping(DrProtectionGroupMemberVnicMappingArgs... vnicMapping) {
            return vnicMapping(List.of(vnicMapping));
        }

        /**
         * @param vnicMappings (Updatable) A list of compute instance VNIC mappings.
         * 
         * @return builder
         * 
         */
        public Builder vnicMappings(@Nullable Output<List<DrProtectionGroupMemberVnicMappingArgs>> vnicMappings) {
            $.vnicMappings = vnicMappings;
            return this;
        }

        /**
         * @param vnicMappings (Updatable) A list of compute instance VNIC mappings.
         * 
         * @return builder
         * 
         */
        public Builder vnicMappings(List<DrProtectionGroupMemberVnicMappingArgs> vnicMappings) {
            return vnicMappings(Output.of(vnicMappings));
        }

        /**
         * @param vnicMappings (Updatable) A list of compute instance VNIC mappings.
         * 
         * @return builder
         * 
         */
        public Builder vnicMappings(DrProtectionGroupMemberVnicMappingArgs... vnicMappings) {
            return vnicMappings(List.of(vnicMappings));
        }

        public DrProtectionGroupMemberArgs build() {
            if ($.memberId == null) {
                throw new MissingRequiredPropertyException("DrProtectionGroupMemberArgs", "memberId");
            }
            if ($.memberType == null) {
                throw new MissingRequiredPropertyException("DrProtectionGroupMemberArgs", "memberType");
            }
            return $;
        }
    }

}
