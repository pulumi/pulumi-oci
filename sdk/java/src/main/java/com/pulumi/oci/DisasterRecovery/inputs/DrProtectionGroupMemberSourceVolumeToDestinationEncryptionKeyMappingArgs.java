// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DisasterRecovery.inputs.DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingDestinationEncryptionKeyArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs Empty = new DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs();

    /**
     * (Updatable) Create properties for a customer-managed vault and encryption key in the destination region.  The customer-managed encryption key in this will be used to encrypt the resource or containing resources after they  move to the destination region.
     * 
     */
    @Import(name="destinationEncryptionKey")
    private @Nullable Output<DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingDestinationEncryptionKeyArgs> destinationEncryptionKey;

    /**
     * @return (Updatable) Create properties for a customer-managed vault and encryption key in the destination region.  The customer-managed encryption key in this will be used to encrypt the resource or containing resources after they  move to the destination region.
     * 
     */
    public Optional<Output<DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingDestinationEncryptionKeyArgs>> destinationEncryptionKey() {
        return Optional.ofNullable(this.destinationEncryptionKey);
    }

    /**
     * (Updatable) The OCID of the source boot volume or block volume.  Example: `ocid1.volume.oc1..uniqueID`
     * 
     */
    @Import(name="sourceVolumeId")
    private @Nullable Output<String> sourceVolumeId;

    /**
     * @return (Updatable) The OCID of the source boot volume or block volume.  Example: `ocid1.volume.oc1..uniqueID`
     * 
     */
    public Optional<Output<String>> sourceVolumeId() {
        return Optional.ofNullable(this.sourceVolumeId);
    }

    private DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs() {}

    private DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs(DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs $) {
        this.destinationEncryptionKey = $.destinationEncryptionKey;
        this.sourceVolumeId = $.sourceVolumeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs $;

        public Builder() {
            $ = new DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs();
        }

        public Builder(DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs defaults) {
            $ = new DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationEncryptionKey (Updatable) Create properties for a customer-managed vault and encryption key in the destination region.  The customer-managed encryption key in this will be used to encrypt the resource or containing resources after they  move to the destination region.
         * 
         * @return builder
         * 
         */
        public Builder destinationEncryptionKey(@Nullable Output<DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingDestinationEncryptionKeyArgs> destinationEncryptionKey) {
            $.destinationEncryptionKey = destinationEncryptionKey;
            return this;
        }

        /**
         * @param destinationEncryptionKey (Updatable) Create properties for a customer-managed vault and encryption key in the destination region.  The customer-managed encryption key in this will be used to encrypt the resource or containing resources after they  move to the destination region.
         * 
         * @return builder
         * 
         */
        public Builder destinationEncryptionKey(DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingDestinationEncryptionKeyArgs destinationEncryptionKey) {
            return destinationEncryptionKey(Output.of(destinationEncryptionKey));
        }

        /**
         * @param sourceVolumeId (Updatable) The OCID of the source boot volume or block volume.  Example: `ocid1.volume.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder sourceVolumeId(@Nullable Output<String> sourceVolumeId) {
            $.sourceVolumeId = sourceVolumeId;
            return this;
        }

        /**
         * @param sourceVolumeId (Updatable) The OCID of the source boot volume or block volume.  Example: `ocid1.volume.oc1..uniqueID`
         * 
         * @return builder
         * 
         */
        public Builder sourceVolumeId(String sourceVolumeId) {
            return sourceVolumeId(Output.of(sourceVolumeId));
        }

        public DrProtectionGroupMemberSourceVolumeToDestinationEncryptionKeyMappingArgs build() {
            return $;
        }
    }

}
