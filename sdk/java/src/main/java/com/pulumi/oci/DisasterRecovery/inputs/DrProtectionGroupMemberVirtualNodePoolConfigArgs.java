// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DrProtectionGroupMemberVirtualNodePoolConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DrProtectionGroupMemberVirtualNodePoolConfigArgs Empty = new DrProtectionGroupMemberVirtualNodePoolConfigArgs();

    /**
     * (Updatable) The OCID of the virtual node pool in OKE cluster.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return (Updatable) The OCID of the virtual node pool in OKE cluster.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * (Updatable) The maximum number to which nodes in the virtual node pool could be scaled up.
     * 
     */
    @Import(name="maximum")
    private @Nullable Output<Integer> maximum;

    /**
     * @return (Updatable) The maximum number to which nodes in the virtual node pool could be scaled up.
     * 
     */
    public Optional<Output<Integer>> maximum() {
        return Optional.ofNullable(this.maximum);
    }

    /**
     * (Updatable) The minimum number to which nodes in the virtual node pool could be scaled down.
     * 
     */
    @Import(name="minimum")
    private @Nullable Output<Integer> minimum;

    /**
     * @return (Updatable) The minimum number to which nodes in the virtual node pool could be scaled down.
     * 
     */
    public Optional<Output<Integer>> minimum() {
        return Optional.ofNullable(this.minimum);
    }

    private DrProtectionGroupMemberVirtualNodePoolConfigArgs() {}

    private DrProtectionGroupMemberVirtualNodePoolConfigArgs(DrProtectionGroupMemberVirtualNodePoolConfigArgs $) {
        this.id = $.id;
        this.maximum = $.maximum;
        this.minimum = $.minimum;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DrProtectionGroupMemberVirtualNodePoolConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DrProtectionGroupMemberVirtualNodePoolConfigArgs $;

        public Builder() {
            $ = new DrProtectionGroupMemberVirtualNodePoolConfigArgs();
        }

        public Builder(DrProtectionGroupMemberVirtualNodePoolConfigArgs defaults) {
            $ = new DrProtectionGroupMemberVirtualNodePoolConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id (Updatable) The OCID of the virtual node pool in OKE cluster.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id (Updatable) The OCID of the virtual node pool in OKE cluster.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param maximum (Updatable) The maximum number to which nodes in the virtual node pool could be scaled up.
         * 
         * @return builder
         * 
         */
        public Builder maximum(@Nullable Output<Integer> maximum) {
            $.maximum = maximum;
            return this;
        }

        /**
         * @param maximum (Updatable) The maximum number to which nodes in the virtual node pool could be scaled up.
         * 
         * @return builder
         * 
         */
        public Builder maximum(Integer maximum) {
            return maximum(Output.of(maximum));
        }

        /**
         * @param minimum (Updatable) The minimum number to which nodes in the virtual node pool could be scaled down.
         * 
         * @return builder
         * 
         */
        public Builder minimum(@Nullable Output<Integer> minimum) {
            $.minimum = minimum;
            return this;
        }

        /**
         * @param minimum (Updatable) The minimum number to which nodes in the virtual node pool could be scaled down.
         * 
         * @return builder
         * 
         */
        public Builder minimum(Integer minimum) {
            return minimum(Output.of(minimum));
        }

        public DrProtectionGroupMemberVirtualNodePoolConfigArgs build() {
            return $;
        }
    }

}
