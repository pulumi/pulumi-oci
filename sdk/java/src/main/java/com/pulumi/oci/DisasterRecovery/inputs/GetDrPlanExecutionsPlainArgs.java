// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DisasterRecovery.inputs.GetDrPlanExecutionsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDrPlanExecutionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDrPlanExecutionsPlainArgs Empty = new GetDrPlanExecutionsPlainArgs();

    /**
     * A filter to return only resources that match the entire display name given.  Example: `MY UNIQUE DISPLAY NAME`
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.  Example: `MY UNIQUE DISPLAY NAME`
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The OCID of the DR Plan Execution.  Example: `ocid1.drplanexecution.oc1.iad.exampleocid`
     * 
     */
    @Import(name="drPlanExecutionId")
    private @Nullable String drPlanExecutionId;

    /**
     * @return The OCID of the DR Plan Execution.  Example: `ocid1.drplanexecution.oc1.iad.exampleocid`
     * 
     */
    public Optional<String> drPlanExecutionId() {
        return Optional.ofNullable(this.drPlanExecutionId);
    }

    /**
     * The DR Plan Execution type.
     * 
     */
    @Import(name="drPlanExecutionType")
    private @Nullable String drPlanExecutionType;

    /**
     * @return The DR Plan Execution type.
     * 
     */
    public Optional<String> drPlanExecutionType() {
        return Optional.ofNullable(this.drPlanExecutionType);
    }

    /**
     * The OCID of the DR Protection Group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1.phx.exampleocid`
     * 
     */
    @Import(name="drProtectionGroupId", required=true)
    private String drProtectionGroupId;

    /**
     * @return The OCID of the DR Protection Group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1.phx.exampleocid`
     * 
     */
    public String drProtectionGroupId() {
        return this.drProtectionGroupId;
    }

    @Import(name="filters")
    private @Nullable List<GetDrPlanExecutionsFilter> filters;

    public Optional<List<GetDrPlanExecutionsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only DR Plan Executions that match the given lifecycleState.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only DR Plan Executions that match the given lifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetDrPlanExecutionsPlainArgs() {}

    private GetDrPlanExecutionsPlainArgs(GetDrPlanExecutionsPlainArgs $) {
        this.displayName = $.displayName;
        this.drPlanExecutionId = $.drPlanExecutionId;
        this.drPlanExecutionType = $.drPlanExecutionType;
        this.drProtectionGroupId = $.drProtectionGroupId;
        this.filters = $.filters;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDrPlanExecutionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDrPlanExecutionsPlainArgs $;

        public Builder() {
            $ = new GetDrPlanExecutionsPlainArgs();
        }

        public Builder(GetDrPlanExecutionsPlainArgs defaults) {
            $ = new GetDrPlanExecutionsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.  Example: `MY UNIQUE DISPLAY NAME`
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param drPlanExecutionId The OCID of the DR Plan Execution.  Example: `ocid1.drplanexecution.oc1.iad.exampleocid`
         * 
         * @return builder
         * 
         */
        public Builder drPlanExecutionId(@Nullable String drPlanExecutionId) {
            $.drPlanExecutionId = drPlanExecutionId;
            return this;
        }

        /**
         * @param drPlanExecutionType The DR Plan Execution type.
         * 
         * @return builder
         * 
         */
        public Builder drPlanExecutionType(@Nullable String drPlanExecutionType) {
            $.drPlanExecutionType = drPlanExecutionType;
            return this;
        }

        /**
         * @param drProtectionGroupId The OCID of the DR Protection Group. Mandatory query param.  Example: `ocid1.drprotectiongroup.oc1.phx.exampleocid`
         * 
         * @return builder
         * 
         */
        public Builder drProtectionGroupId(String drProtectionGroupId) {
            $.drProtectionGroupId = drProtectionGroupId;
            return this;
        }

        public Builder filters(@Nullable List<GetDrPlanExecutionsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetDrPlanExecutionsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state A filter to return only DR Plan Executions that match the given lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetDrPlanExecutionsPlainArgs build() {
            $.drProtectionGroupId = Objects.requireNonNull($.drProtectionGroupId, "expected parameter 'drProtectionGroupId' to be non-null");
            return $;
        }
    }

}
