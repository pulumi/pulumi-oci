// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DisasterRecovery.outputs.DrProtectionGroupMemberBackendSetMapping;
import com.pulumi.oci.DisasterRecovery.outputs.DrProtectionGroupMemberBlockVolumeOperation;
import com.pulumi.oci.DisasterRecovery.outputs.DrProtectionGroupMemberExportMapping;
import com.pulumi.oci.DisasterRecovery.outputs.DrProtectionGroupMemberFileSystemOperation;
import com.pulumi.oci.DisasterRecovery.outputs.DrProtectionGroupMemberVnicMapping;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DrProtectionGroupMember {
    /**
     * @return (Updatable) This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html for information about these clone types. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html for information about snapshot standby.
     * 
     */
    private @Nullable String autonomousDatabaseStandbyTypeForDrDrills;
    /**
     * @return (Updatable) A list of backend set mappings that are used to transfer or update backends during DR.
     * 
     */
    private @Nullable List<DrProtectionGroupMemberBackendSetMapping> backendSetMappings;
    /**
     * @return (Updatable) A list of operations performed on block volumes used by the compute instance.
     * 
     */
    private @Nullable List<DrProtectionGroupMemberBlockVolumeOperation> blockVolumeOperations;
    /**
     * @return (Updatable) The bucket name inside the object storage namespace.  Example: `bucket_name`
     * 
     */
    private @Nullable String bucket;
    /**
     * @return (Updatable) The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html for information about these service types.
     * 
     */
    private @Nullable String connectionStringType;
    /**
     * @return (Updatable) The availability domain of the destination mount target.  Example: `BBTh:region-AD`
     * 
     */
    private @Nullable String destinationAvailabilityDomain;
    /**
     * @return (Updatable) The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
     * 
     */
    private @Nullable String destinationCapacityReservationId;
    /**
     * @return (Updatable) The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
     * 
     */
    private @Nullable String destinationCompartmentId;
    /**
     * @return (Updatable) The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
     * 
     */
    private @Nullable String destinationDedicatedVmHostId;
    /**
     * @return (Updatable) The OCID of the destination load balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
     * 
     */
    private @Nullable String destinationLoadBalancerId;
    /**
     * @return (Updatable) The OCID of the destination network load balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
     * 
     */
    private @Nullable String destinationNetworkLoadBalancerId;
    /**
     * @return (Updatable) A list of mappings between file system exports in the primary region and mount targets in the standby region.
     * 
     */
    private @Nullable List<DrProtectionGroupMemberExportMapping> exportMappings;
    /**
     * @return (Updatable) A list of operations performed on file systems used by the compute instance.
     * 
     */
    private @Nullable List<DrProtectionGroupMemberFileSystemOperation> fileSystemOperations;
    /**
     * @return (Updatable) A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
     * 
     */
    private @Nullable Boolean isMovable;
    /**
     * @return (Updatable) A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
     * 
     */
    private @Nullable Boolean isRetainFaultDomain;
    /**
     * @return (Updatable) A flag indicating whether the non-movable compute instance should be started and stopped during DR operations. *Prechecks cannot be executed on stopped instances that are configured to be started.*
     * 
     */
    private @Nullable Boolean isStartStopEnabled;
    /**
     * @return (Updatable) The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
     * 
     */
    private String memberId;
    /**
     * @return (Updatable) The type of the member.
     * 
     */
    private String memberType;
    /**
     * @return (Updatable) The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
     * 
     */
    private @Nullable String namespace;
    /**
     * @return (Updatable) The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
     * 
     */
    private @Nullable String passwordVaultSecretId;
    /**
     * @return (Updatable) A list of compute instance VNIC mappings.
     * 
     */
    private @Nullable List<DrProtectionGroupMemberVnicMapping> vnicMapping;
    /**
     * @return (Updatable) A list of compute instance VNIC mappings.
     * 
     */
    private @Nullable List<DrProtectionGroupMemberVnicMapping> vnicMappings;

    private DrProtectionGroupMember() {}
    /**
     * @return (Updatable) This specifies the mechanism used to create a temporary Autonomous Database instance for DR Drills. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-clone-about.html for information about these clone types. See https://docs.oracle.com/en/cloud/paas/autonomous-database/serverless/adbsb/autonomous-data-guard-snapshot-standby.html for information about snapshot standby.
     * 
     */
    public Optional<String> autonomousDatabaseStandbyTypeForDrDrills() {
        return Optional.ofNullable(this.autonomousDatabaseStandbyTypeForDrDrills);
    }
    /**
     * @return (Updatable) A list of backend set mappings that are used to transfer or update backends during DR.
     * 
     */
    public List<DrProtectionGroupMemberBackendSetMapping> backendSetMappings() {
        return this.backendSetMappings == null ? List.of() : this.backendSetMappings;
    }
    /**
     * @return (Updatable) A list of operations performed on block volumes used by the compute instance.
     * 
     */
    public List<DrProtectionGroupMemberBlockVolumeOperation> blockVolumeOperations() {
        return this.blockVolumeOperations == null ? List.of() : this.blockVolumeOperations;
    }
    /**
     * @return (Updatable) The bucket name inside the object storage namespace.  Example: `bucket_name`
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return (Updatable) The type of connection strings used to connect to an Autonomous Container Database snapshot standby created during a DR Drill operation. See https://docs.oracle.com/en/cloud/paas/autonomous-database/dedicated/adbcl/index.html for information about these service types.
     * 
     */
    public Optional<String> connectionStringType() {
        return Optional.ofNullable(this.connectionStringType);
    }
    /**
     * @return (Updatable) The availability domain of the destination mount target.  Example: `BBTh:region-AD`
     * 
     */
    public Optional<String> destinationAvailabilityDomain() {
        return Optional.ofNullable(this.destinationAvailabilityDomain);
    }
    /**
     * @return (Updatable) The OCID of a capacity reservation in the destination region which will be used to launch the compute instance.  Example: `ocid1.capacityreservation.oc1..uniqueID`
     * 
     */
    public Optional<String> destinationCapacityReservationId() {
        return Optional.ofNullable(this.destinationCapacityReservationId);
    }
    /**
     * @return (Updatable) The OCID of a compartment in the destination region in which the compute instance should be launched.  Example: `ocid1.compartment.oc1..uniqueID`
     * 
     */
    public Optional<String> destinationCompartmentId() {
        return Optional.ofNullable(this.destinationCompartmentId);
    }
    /**
     * @return (Updatable) The OCID of a dedicated VM host in the destination region where the compute instance should be launched.  Example: `ocid1.dedicatedvmhost.oc1..uniqueID`
     * 
     */
    public Optional<String> destinationDedicatedVmHostId() {
        return Optional.ofNullable(this.destinationDedicatedVmHostId);
    }
    /**
     * @return (Updatable) The OCID of the destination load balancer.  Example: `ocid1.loadbalancer.oc1..uniqueID`
     * 
     */
    public Optional<String> destinationLoadBalancerId() {
        return Optional.ofNullable(this.destinationLoadBalancerId);
    }
    /**
     * @return (Updatable) The OCID of the destination network load balancer.  Example: `ocid1.networkloadbalancer.oc1..uniqueID`
     * 
     */
    public Optional<String> destinationNetworkLoadBalancerId() {
        return Optional.ofNullable(this.destinationNetworkLoadBalancerId);
    }
    /**
     * @return (Updatable) A list of mappings between file system exports in the primary region and mount targets in the standby region.
     * 
     */
    public List<DrProtectionGroupMemberExportMapping> exportMappings() {
        return this.exportMappings == null ? List.of() : this.exportMappings;
    }
    /**
     * @return (Updatable) A list of operations performed on file systems used by the compute instance.
     * 
     */
    public List<DrProtectionGroupMemberFileSystemOperation> fileSystemOperations() {
        return this.fileSystemOperations == null ? List.of() : this.fileSystemOperations;
    }
    /**
     * @return (Updatable) A flag indicating if the compute instance should be moved during DR operations.  Example: `false`
     * 
     */
    public Optional<Boolean> isMovable() {
        return Optional.ofNullable(this.isMovable);
    }
    /**
     * @return (Updatable) A flag indicating if the compute instance should be moved to the same fault domain in the destination region.  The compute instance launch will fail if this flag is set to true and capacity is not available in the  specified fault domain in the destination region.  Example: `false`
     * 
     */
    public Optional<Boolean> isRetainFaultDomain() {
        return Optional.ofNullable(this.isRetainFaultDomain);
    }
    /**
     * @return (Updatable) A flag indicating whether the non-movable compute instance should be started and stopped during DR operations. *Prechecks cannot be executed on stopped instances that are configured to be started.*
     * 
     */
    public Optional<Boolean> isStartStopEnabled() {
        return Optional.ofNullable(this.isStartStopEnabled);
    }
    /**
     * @return (Updatable) The OCID of the member.  Example: `ocid1.instance.oc1..uniqueID`
     * 
     */
    public String memberId() {
        return this.memberId;
    }
    /**
     * @return (Updatable) The type of the member.
     * 
     */
    public String memberType() {
        return this.memberType;
    }
    /**
     * @return (Updatable) The namespace in object storage (Note - this is usually the tenancy name).  Example: `myocitenancy`
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return (Updatable) The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
     * 
     */
    public Optional<String> passwordVaultSecretId() {
        return Optional.ofNullable(this.passwordVaultSecretId);
    }
    /**
     * @return (Updatable) A list of compute instance VNIC mappings.
     * 
     */
    public List<DrProtectionGroupMemberVnicMapping> vnicMapping() {
        return this.vnicMapping == null ? List.of() : this.vnicMapping;
    }
    /**
     * @return (Updatable) A list of compute instance VNIC mappings.
     * 
     */
    public List<DrProtectionGroupMemberVnicMapping> vnicMappings() {
        return this.vnicMappings == null ? List.of() : this.vnicMappings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DrProtectionGroupMember defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String autonomousDatabaseStandbyTypeForDrDrills;
        private @Nullable List<DrProtectionGroupMemberBackendSetMapping> backendSetMappings;
        private @Nullable List<DrProtectionGroupMemberBlockVolumeOperation> blockVolumeOperations;
        private @Nullable String bucket;
        private @Nullable String connectionStringType;
        private @Nullable String destinationAvailabilityDomain;
        private @Nullable String destinationCapacityReservationId;
        private @Nullable String destinationCompartmentId;
        private @Nullable String destinationDedicatedVmHostId;
        private @Nullable String destinationLoadBalancerId;
        private @Nullable String destinationNetworkLoadBalancerId;
        private @Nullable List<DrProtectionGroupMemberExportMapping> exportMappings;
        private @Nullable List<DrProtectionGroupMemberFileSystemOperation> fileSystemOperations;
        private @Nullable Boolean isMovable;
        private @Nullable Boolean isRetainFaultDomain;
        private @Nullable Boolean isStartStopEnabled;
        private String memberId;
        private String memberType;
        private @Nullable String namespace;
        private @Nullable String passwordVaultSecretId;
        private @Nullable List<DrProtectionGroupMemberVnicMapping> vnicMapping;
        private @Nullable List<DrProtectionGroupMemberVnicMapping> vnicMappings;
        public Builder() {}
        public Builder(DrProtectionGroupMember defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDatabaseStandbyTypeForDrDrills = defaults.autonomousDatabaseStandbyTypeForDrDrills;
    	      this.backendSetMappings = defaults.backendSetMappings;
    	      this.blockVolumeOperations = defaults.blockVolumeOperations;
    	      this.bucket = defaults.bucket;
    	      this.connectionStringType = defaults.connectionStringType;
    	      this.destinationAvailabilityDomain = defaults.destinationAvailabilityDomain;
    	      this.destinationCapacityReservationId = defaults.destinationCapacityReservationId;
    	      this.destinationCompartmentId = defaults.destinationCompartmentId;
    	      this.destinationDedicatedVmHostId = defaults.destinationDedicatedVmHostId;
    	      this.destinationLoadBalancerId = defaults.destinationLoadBalancerId;
    	      this.destinationNetworkLoadBalancerId = defaults.destinationNetworkLoadBalancerId;
    	      this.exportMappings = defaults.exportMappings;
    	      this.fileSystemOperations = defaults.fileSystemOperations;
    	      this.isMovable = defaults.isMovable;
    	      this.isRetainFaultDomain = defaults.isRetainFaultDomain;
    	      this.isStartStopEnabled = defaults.isStartStopEnabled;
    	      this.memberId = defaults.memberId;
    	      this.memberType = defaults.memberType;
    	      this.namespace = defaults.namespace;
    	      this.passwordVaultSecretId = defaults.passwordVaultSecretId;
    	      this.vnicMapping = defaults.vnicMapping;
    	      this.vnicMappings = defaults.vnicMappings;
        }

        @CustomType.Setter
        public Builder autonomousDatabaseStandbyTypeForDrDrills(@Nullable String autonomousDatabaseStandbyTypeForDrDrills) {

            this.autonomousDatabaseStandbyTypeForDrDrills = autonomousDatabaseStandbyTypeForDrDrills;
            return this;
        }
        @CustomType.Setter
        public Builder backendSetMappings(@Nullable List<DrProtectionGroupMemberBackendSetMapping> backendSetMappings) {

            this.backendSetMappings = backendSetMappings;
            return this;
        }
        public Builder backendSetMappings(DrProtectionGroupMemberBackendSetMapping... backendSetMappings) {
            return backendSetMappings(List.of(backendSetMappings));
        }
        @CustomType.Setter
        public Builder blockVolumeOperations(@Nullable List<DrProtectionGroupMemberBlockVolumeOperation> blockVolumeOperations) {

            this.blockVolumeOperations = blockVolumeOperations;
            return this;
        }
        public Builder blockVolumeOperations(DrProtectionGroupMemberBlockVolumeOperation... blockVolumeOperations) {
            return blockVolumeOperations(List.of(blockVolumeOperations));
        }
        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {

            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder connectionStringType(@Nullable String connectionStringType) {

            this.connectionStringType = connectionStringType;
            return this;
        }
        @CustomType.Setter
        public Builder destinationAvailabilityDomain(@Nullable String destinationAvailabilityDomain) {

            this.destinationAvailabilityDomain = destinationAvailabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder destinationCapacityReservationId(@Nullable String destinationCapacityReservationId) {

            this.destinationCapacityReservationId = destinationCapacityReservationId;
            return this;
        }
        @CustomType.Setter
        public Builder destinationCompartmentId(@Nullable String destinationCompartmentId) {

            this.destinationCompartmentId = destinationCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder destinationDedicatedVmHostId(@Nullable String destinationDedicatedVmHostId) {

            this.destinationDedicatedVmHostId = destinationDedicatedVmHostId;
            return this;
        }
        @CustomType.Setter
        public Builder destinationLoadBalancerId(@Nullable String destinationLoadBalancerId) {

            this.destinationLoadBalancerId = destinationLoadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder destinationNetworkLoadBalancerId(@Nullable String destinationNetworkLoadBalancerId) {

            this.destinationNetworkLoadBalancerId = destinationNetworkLoadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder exportMappings(@Nullable List<DrProtectionGroupMemberExportMapping> exportMappings) {

            this.exportMappings = exportMappings;
            return this;
        }
        public Builder exportMappings(DrProtectionGroupMemberExportMapping... exportMappings) {
            return exportMappings(List.of(exportMappings));
        }
        @CustomType.Setter
        public Builder fileSystemOperations(@Nullable List<DrProtectionGroupMemberFileSystemOperation> fileSystemOperations) {

            this.fileSystemOperations = fileSystemOperations;
            return this;
        }
        public Builder fileSystemOperations(DrProtectionGroupMemberFileSystemOperation... fileSystemOperations) {
            return fileSystemOperations(List.of(fileSystemOperations));
        }
        @CustomType.Setter
        public Builder isMovable(@Nullable Boolean isMovable) {

            this.isMovable = isMovable;
            return this;
        }
        @CustomType.Setter
        public Builder isRetainFaultDomain(@Nullable Boolean isRetainFaultDomain) {

            this.isRetainFaultDomain = isRetainFaultDomain;
            return this;
        }
        @CustomType.Setter
        public Builder isStartStopEnabled(@Nullable Boolean isStartStopEnabled) {

            this.isStartStopEnabled = isStartStopEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder memberId(String memberId) {
            if (memberId == null) {
              throw new MissingRequiredPropertyException("DrProtectionGroupMember", "memberId");
            }
            this.memberId = memberId;
            return this;
        }
        @CustomType.Setter
        public Builder memberType(String memberType) {
            if (memberType == null) {
              throw new MissingRequiredPropertyException("DrProtectionGroupMember", "memberType");
            }
            this.memberType = memberType;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder passwordVaultSecretId(@Nullable String passwordVaultSecretId) {

            this.passwordVaultSecretId = passwordVaultSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder vnicMapping(@Nullable List<DrProtectionGroupMemberVnicMapping> vnicMapping) {

            this.vnicMapping = vnicMapping;
            return this;
        }
        public Builder vnicMapping(DrProtectionGroupMemberVnicMapping... vnicMapping) {
            return vnicMapping(List.of(vnicMapping));
        }
        @CustomType.Setter
        public Builder vnicMappings(@Nullable List<DrProtectionGroupMemberVnicMapping> vnicMappings) {

            this.vnicMappings = vnicMappings;
            return this;
        }
        public Builder vnicMappings(DrProtectionGroupMemberVnicMapping... vnicMappings) {
            return vnicMappings(List.of(vnicMappings));
        }
        public DrProtectionGroupMember build() {
            final var _resultValue = new DrProtectionGroupMember();
            _resultValue.autonomousDatabaseStandbyTypeForDrDrills = autonomousDatabaseStandbyTypeForDrDrills;
            _resultValue.backendSetMappings = backendSetMappings;
            _resultValue.blockVolumeOperations = blockVolumeOperations;
            _resultValue.bucket = bucket;
            _resultValue.connectionStringType = connectionStringType;
            _resultValue.destinationAvailabilityDomain = destinationAvailabilityDomain;
            _resultValue.destinationCapacityReservationId = destinationCapacityReservationId;
            _resultValue.destinationCompartmentId = destinationCompartmentId;
            _resultValue.destinationDedicatedVmHostId = destinationDedicatedVmHostId;
            _resultValue.destinationLoadBalancerId = destinationLoadBalancerId;
            _resultValue.destinationNetworkLoadBalancerId = destinationNetworkLoadBalancerId;
            _resultValue.exportMappings = exportMappings;
            _resultValue.fileSystemOperations = fileSystemOperations;
            _resultValue.isMovable = isMovable;
            _resultValue.isRetainFaultDomain = isRetainFaultDomain;
            _resultValue.isStartStopEnabled = isStartStopEnabled;
            _resultValue.memberId = memberId;
            _resultValue.memberType = memberType;
            _resultValue.namespace = namespace;
            _resultValue.passwordVaultSecretId = passwordVaultSecretId;
            _resultValue.vnicMapping = vnicMapping;
            _resultValue.vnicMappings = vnicMappings;
            return _resultValue;
        }
    }
}
