// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DrProtectionGroupMemberBackupConfig {
    /**
     * @return (Updatable) The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created.  This format of the string specifying the backup schedule must conform with RFC-5545 (see examples below). This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.
     * 
     * The backup frequency can be HOURLY, DAILY, WEEKLY or MONTHLY, and the upper and lower interval bounds are as follows HOURLY
     * * Minimum = 1
     * * Maximum = 24 DAILY
     * * Minimum = 1
     * * Maximum = 30 WEEKLY
     * * Minimum = 1
     * * Maximum = 1 MONTHLY
     * * Minimum = 1
     * * Maximum = 12
     * 
     * Examples:  FREQ=WEEKLY;BYDAY=MO,WE;BYHOUR=10;INTERVAL=1 &gt; Run a backup every week on monday and wednesday at 10:00 AM. FREQ=WEEKLY;BYDAY=MO,WE;BYHOUR=10;INTERVAL=2 &gt; Invalid configuration (can not specify interval of 2).
     * 
     * FREQ=HOURLY;INTERVAL=25 &gt; Invalid configuration (can not specify interval of 25). FREQ=HOURLY;INTERVAL=0 &gt; Invalid configuration (can not specify interval of 0). FREQ=HOURLY;INTERVAL=24 &gt; Run a backup every 24 hours. FREQ=HOURLY;INTERVAL=1 &gt; Run a backup every hour. FREQ=HOURLY;BYMINUTE=30;INTERVAL=15 &gt; Run a backup every 15 hours at the 30th minute. FREQ=DAILY;INTERVAL=31 &gt; Invalid configuration (can not specify interval of 31). FREQ=DAILY;INTERVAL=0 &gt; Invalid configuration (can not specify interval of 0). FREQ=DAILY;INTERVAL=30 &gt; Run a backup every 30 days at 12:00 midnight.  FREQ=DAILY;BYHOUR=17;BYMINUTE=10;INTERVAL=1 &gt; Run a backup every day at 05:10 PM.
     * 
     */
    private @Nullable String backupSchedule;
    /**
     * @return (Updatable) The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
     * 
     */
    private @Nullable String imageReplicationVaultSecretId;
    /**
     * @return (Updatable) The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
     * 
     */
    private @Nullable Integer maxNumberOfBackupsRetained;
    /**
     * @return (Updatable) A list of namespaces that need to be backed up.  The default value is null. If a list of namespaces is not provided, all namespaces will be backed up. This property applies to the OKE cluster member in primary region.  Example: [&#34;default&#34;, &#34;pv-nginx&#34;]
     * 
     */
    private @Nullable List<String> namespaces;
    /**
     * @return (Updatable) Controls the behaviour of image replication across regions. Image replication is enabled by default for DR Protection Groups with a primary role. This property applies to the OKE cluster member in primary region.
     * 
     */
    private @Nullable String replicateImages;

    private DrProtectionGroupMemberBackupConfig() {}
    /**
     * @return (Updatable) The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created.  This format of the string specifying the backup schedule must conform with RFC-5545 (see examples below). This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.
     * 
     * The backup frequency can be HOURLY, DAILY, WEEKLY or MONTHLY, and the upper and lower interval bounds are as follows HOURLY
     * * Minimum = 1
     * * Maximum = 24 DAILY
     * * Minimum = 1
     * * Maximum = 30 WEEKLY
     * * Minimum = 1
     * * Maximum = 1 MONTHLY
     * * Minimum = 1
     * * Maximum = 12
     * 
     * Examples:  FREQ=WEEKLY;BYDAY=MO,WE;BYHOUR=10;INTERVAL=1 &gt; Run a backup every week on monday and wednesday at 10:00 AM. FREQ=WEEKLY;BYDAY=MO,WE;BYHOUR=10;INTERVAL=2 &gt; Invalid configuration (can not specify interval of 2).
     * 
     * FREQ=HOURLY;INTERVAL=25 &gt; Invalid configuration (can not specify interval of 25). FREQ=HOURLY;INTERVAL=0 &gt; Invalid configuration (can not specify interval of 0). FREQ=HOURLY;INTERVAL=24 &gt; Run a backup every 24 hours. FREQ=HOURLY;INTERVAL=1 &gt; Run a backup every hour. FREQ=HOURLY;BYMINUTE=30;INTERVAL=15 &gt; Run a backup every 15 hours at the 30th minute. FREQ=DAILY;INTERVAL=31 &gt; Invalid configuration (can not specify interval of 31). FREQ=DAILY;INTERVAL=0 &gt; Invalid configuration (can not specify interval of 0). FREQ=DAILY;INTERVAL=30 &gt; Run a backup every 30 days at 12:00 midnight.  FREQ=DAILY;BYHOUR=17;BYMINUTE=10;INTERVAL=1 &gt; Run a backup every day at 05:10 PM.
     * 
     */
    public Optional<String> backupSchedule() {
        return Optional.ofNullable(this.backupSchedule);
    }
    /**
     * @return (Updatable) The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
     * 
     */
    public Optional<String> imageReplicationVaultSecretId() {
        return Optional.ofNullable(this.imageReplicationVaultSecretId);
    }
    /**
     * @return (Updatable) The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
     * 
     */
    public Optional<Integer> maxNumberOfBackupsRetained() {
        return Optional.ofNullable(this.maxNumberOfBackupsRetained);
    }
    /**
     * @return (Updatable) A list of namespaces that need to be backed up.  The default value is null. If a list of namespaces is not provided, all namespaces will be backed up. This property applies to the OKE cluster member in primary region.  Example: [&#34;default&#34;, &#34;pv-nginx&#34;]
     * 
     */
    public List<String> namespaces() {
        return this.namespaces == null ? List.of() : this.namespaces;
    }
    /**
     * @return (Updatable) Controls the behaviour of image replication across regions. Image replication is enabled by default for DR Protection Groups with a primary role. This property applies to the OKE cluster member in primary region.
     * 
     */
    public Optional<String> replicateImages() {
        return Optional.ofNullable(this.replicateImages);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DrProtectionGroupMemberBackupConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupSchedule;
        private @Nullable String imageReplicationVaultSecretId;
        private @Nullable Integer maxNumberOfBackupsRetained;
        private @Nullable List<String> namespaces;
        private @Nullable String replicateImages;
        public Builder() {}
        public Builder(DrProtectionGroupMemberBackupConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupSchedule = defaults.backupSchedule;
    	      this.imageReplicationVaultSecretId = defaults.imageReplicationVaultSecretId;
    	      this.maxNumberOfBackupsRetained = defaults.maxNumberOfBackupsRetained;
    	      this.namespaces = defaults.namespaces;
    	      this.replicateImages = defaults.replicateImages;
        }

        @CustomType.Setter
        public Builder backupSchedule(@Nullable String backupSchedule) {

            this.backupSchedule = backupSchedule;
            return this;
        }
        @CustomType.Setter
        public Builder imageReplicationVaultSecretId(@Nullable String imageReplicationVaultSecretId) {

            this.imageReplicationVaultSecretId = imageReplicationVaultSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder maxNumberOfBackupsRetained(@Nullable Integer maxNumberOfBackupsRetained) {

            this.maxNumberOfBackupsRetained = maxNumberOfBackupsRetained;
            return this;
        }
        @CustomType.Setter
        public Builder namespaces(@Nullable List<String> namespaces) {

            this.namespaces = namespaces;
            return this;
        }
        public Builder namespaces(String... namespaces) {
            return namespaces(List.of(namespaces));
        }
        @CustomType.Setter
        public Builder replicateImages(@Nullable String replicateImages) {

            this.replicateImages = replicateImages;
            return this;
        }
        public DrProtectionGroupMemberBackupConfig build() {
            final var _resultValue = new DrProtectionGroupMemberBackupConfig();
            _resultValue.backupSchedule = backupSchedule;
            _resultValue.imageReplicationVaultSecretId = imageReplicationVaultSecretId;
            _resultValue.maxNumberOfBackupsRetained = maxNumberOfBackupsRetained;
            _resultValue.namespaces = namespaces;
            _resultValue.replicateImages = replicateImages;
            return _resultValue;
        }
    }
}
