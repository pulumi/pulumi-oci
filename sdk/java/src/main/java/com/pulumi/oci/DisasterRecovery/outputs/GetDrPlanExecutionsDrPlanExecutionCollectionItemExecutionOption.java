// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOption {
    /**
     * @return A flag indicating whether a precheck should be executed before the plan execution.  Example: `true`
     * 
     */
    private Boolean arePrechecksEnabled;
    /**
     * @return A flag indicating whether warnings should be ignored during the plan execution.  Example: `false`
     * 
     */
    private Boolean areWarningsIgnored;
    /**
     * @return The type of the DR plan executed.
     * 
     */
    private String planExecutionType;

    private GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOption() {}
    /**
     * @return A flag indicating whether a precheck should be executed before the plan execution.  Example: `true`
     * 
     */
    public Boolean arePrechecksEnabled() {
        return this.arePrechecksEnabled;
    }
    /**
     * @return A flag indicating whether warnings should be ignored during the plan execution.  Example: `false`
     * 
     */
    public Boolean areWarningsIgnored() {
        return this.areWarningsIgnored;
    }
    /**
     * @return The type of the DR plan executed.
     * 
     */
    public String planExecutionType() {
        return this.planExecutionType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean arePrechecksEnabled;
        private Boolean areWarningsIgnored;
        private String planExecutionType;
        public Builder() {}
        public Builder(GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arePrechecksEnabled = defaults.arePrechecksEnabled;
    	      this.areWarningsIgnored = defaults.areWarningsIgnored;
    	      this.planExecutionType = defaults.planExecutionType;
        }

        @CustomType.Setter
        public Builder arePrechecksEnabled(Boolean arePrechecksEnabled) {
            this.arePrechecksEnabled = Objects.requireNonNull(arePrechecksEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder areWarningsIgnored(Boolean areWarningsIgnored) {
            this.areWarningsIgnored = Objects.requireNonNull(areWarningsIgnored);
            return this;
        }
        @CustomType.Setter
        public Builder planExecutionType(String planExecutionType) {
            this.planExecutionType = Objects.requireNonNull(planExecutionType);
            return this;
        }
        public GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOption build() {
            final var o = new GetDrPlanExecutionsDrPlanExecutionCollectionItemExecutionOption();
            o.arePrechecksEnabled = arePrechecksEnabled;
            o.areWarningsIgnored = areWarningsIgnored;
            o.planExecutionType = planExecutionType;
            return o;
        }
    }
}
