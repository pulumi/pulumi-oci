// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DisasterRecovery.outputs.GetDrPlanExecutionsDrPlanExecutionCollection;
import com.pulumi.oci.DisasterRecovery.outputs.GetDrPlanExecutionsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDrPlanExecutionsResult {
    /**
     * @return The display name of the step execution.  Example: `DATABASE_SWITCHOVER`
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The list of dr_plan_execution_collection.
     * 
     */
    private @Nullable List<GetDrPlanExecutionsDrPlanExecutionCollection> drPlanExecutionCollections;
    private @Nullable String drPlanExecutionId;
    private @Nullable String drPlanExecutionType;
    /**
     * @return The OCID of the DR protection group to which this DR plan execution belongs.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
     * 
     */
    private String drProtectionGroupId;
    private @Nullable List<GetDrPlanExecutionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The current state of the DR plan execution.
     * 
     */
    private @Nullable String state;

    private GetDrPlanExecutionsResult() {}
    /**
     * @return The display name of the step execution.  Example: `DATABASE_SWITCHOVER`
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The list of dr_plan_execution_collection.
     * 
     */
    public List<GetDrPlanExecutionsDrPlanExecutionCollection> drPlanExecutionCollections() {
        return this.drPlanExecutionCollections == null ? List.of() : this.drPlanExecutionCollections;
    }
    public Optional<String> drPlanExecutionId() {
        return Optional.ofNullable(this.drPlanExecutionId);
    }
    public Optional<String> drPlanExecutionType() {
        return Optional.ofNullable(this.drPlanExecutionType);
    }
    /**
     * @return The OCID of the DR protection group to which this DR plan execution belongs.  Example: `ocid1.drprotectiongroup.oc1..uniqueID`
     * 
     */
    public String drProtectionGroupId() {
        return this.drProtectionGroupId;
    }
    public List<GetDrPlanExecutionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The current state of the DR plan execution.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDrPlanExecutionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String displayName;
        private @Nullable List<GetDrPlanExecutionsDrPlanExecutionCollection> drPlanExecutionCollections;
        private @Nullable String drPlanExecutionId;
        private @Nullable String drPlanExecutionType;
        private String drProtectionGroupId;
        private @Nullable List<GetDrPlanExecutionsFilter> filters;
        private @Nullable String id;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetDrPlanExecutionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.drPlanExecutionCollections = defaults.drPlanExecutionCollections;
    	      this.drPlanExecutionId = defaults.drPlanExecutionId;
    	      this.drPlanExecutionType = defaults.drPlanExecutionType;
    	      this.drProtectionGroupId = defaults.drProtectionGroupId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder drPlanExecutionCollections(@Nullable List<GetDrPlanExecutionsDrPlanExecutionCollection> drPlanExecutionCollections) {
            this.drPlanExecutionCollections = drPlanExecutionCollections;
            return this;
        }
        public Builder drPlanExecutionCollections(GetDrPlanExecutionsDrPlanExecutionCollection... drPlanExecutionCollections) {
            return drPlanExecutionCollections(List.of(drPlanExecutionCollections));
        }
        @CustomType.Setter
        public Builder drPlanExecutionId(@Nullable String drPlanExecutionId) {
            this.drPlanExecutionId = drPlanExecutionId;
            return this;
        }
        @CustomType.Setter
        public Builder drPlanExecutionType(@Nullable String drPlanExecutionType) {
            this.drPlanExecutionType = drPlanExecutionType;
            return this;
        }
        @CustomType.Setter
        public Builder drProtectionGroupId(String drProtectionGroupId) {
            this.drProtectionGroupId = Objects.requireNonNull(drProtectionGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDrPlanExecutionsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetDrPlanExecutionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetDrPlanExecutionsResult build() {
            final var o = new GetDrPlanExecutionsResult();
            o.displayName = displayName;
            o.drPlanExecutionCollections = drPlanExecutionCollections;
            o.drPlanExecutionId = drPlanExecutionId;
            o.drPlanExecutionType = drPlanExecutionType;
            o.drProtectionGroupId = drProtectionGroupId;
            o.filters = filters;
            o.id = id;
            o.state = state;
            return o;
        }
    }
}
