// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.DisasterRecovery.outputs.GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStep;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDrPlansDrPlanCollectionItemPlanGroupStep {
    /**
     * @return A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
     * 
     */
    private String displayName;
    /**
     * @return The error mode for this step.
     * 
     */
    private String errorMode;
    /**
     * @return The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
     * 
     */
    private String groupId;
    /**
     * @return The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
     * 
     */
    private String id;
    /**
     * @return A flag indicating whether this step should be enabled for execution.  Example: `true`
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The OCID of the member associated with this step.  Example: `ocid1.database.oc1..uniqueID`
     * 
     */
    private String memberId;
    /**
     * @return The DR plan step refresh status.  Example: `STEP_ADDED`
     * 
     */
    private String refreshStatus;
    /**
     * @return The timeout in seconds for executing this step.  Example: `600`
     * 
     */
    private Integer timeout;
    /**
     * @return The type of the DR plan.
     * 
     */
    private String type;
    /**
     * @return The display name of the DR Plan step type.  Example: `Database Switchover`
     * 
     */
    private String typeDisplayName;
    /**
     * @return The details for a user-defined step in a DR plan.
     * 
     */
    private List<GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStep> userDefinedSteps;

    private GetDrPlansDrPlanCollectionItemPlanGroupStep() {}
    /**
     * @return A filter to return only resources that match the given display name.  Example: `MyResourceDisplayName`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The error mode for this step.
     * 
     */
    public String errorMode() {
        return this.errorMode;
    }
    /**
     * @return The unique id of the group to which this step belongs. Must not be modified by user.  Example: `sgid1.group..uniqueID`
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The unique id of the step. Must not be modified by the user.  Example: `sgid1.step..uniqueID`
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A flag indicating whether this step should be enabled for execution.  Example: `true`
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The OCID of the member associated with this step.  Example: `ocid1.database.oc1..uniqueID`
     * 
     */
    public String memberId() {
        return this.memberId;
    }
    /**
     * @return The DR plan step refresh status.  Example: `STEP_ADDED`
     * 
     */
    public String refreshStatus() {
        return this.refreshStatus;
    }
    /**
     * @return The timeout in seconds for executing this step.  Example: `600`
     * 
     */
    public Integer timeout() {
        return this.timeout;
    }
    /**
     * @return The type of the DR plan.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The display name of the DR Plan step type.  Example: `Database Switchover`
     * 
     */
    public String typeDisplayName() {
        return this.typeDisplayName;
    }
    /**
     * @return The details for a user-defined step in a DR plan.
     * 
     */
    public List<GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStep> userDefinedSteps() {
        return this.userDefinedSteps;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDrPlansDrPlanCollectionItemPlanGroupStep defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String errorMode;
        private String groupId;
        private String id;
        private Boolean isEnabled;
        private String memberId;
        private String refreshStatus;
        private Integer timeout;
        private String type;
        private String typeDisplayName;
        private List<GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStep> userDefinedSteps;
        public Builder() {}
        public Builder(GetDrPlansDrPlanCollectionItemPlanGroupStep defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.errorMode = defaults.errorMode;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.memberId = defaults.memberId;
    	      this.refreshStatus = defaults.refreshStatus;
    	      this.timeout = defaults.timeout;
    	      this.type = defaults.type;
    	      this.typeDisplayName = defaults.typeDisplayName;
    	      this.userDefinedSteps = defaults.userDefinedSteps;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder errorMode(String errorMode) {
            if (errorMode == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "errorMode");
            }
            this.errorMode = errorMode;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder memberId(String memberId) {
            if (memberId == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "memberId");
            }
            this.memberId = memberId;
            return this;
        }
        @CustomType.Setter
        public Builder refreshStatus(String refreshStatus) {
            if (refreshStatus == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "refreshStatus");
            }
            this.refreshStatus = refreshStatus;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(Integer timeout) {
            if (timeout == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "timeout");
            }
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder typeDisplayName(String typeDisplayName) {
            if (typeDisplayName == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "typeDisplayName");
            }
            this.typeDisplayName = typeDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder userDefinedSteps(List<GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStep> userDefinedSteps) {
            if (userDefinedSteps == null) {
              throw new MissingRequiredPropertyException("GetDrPlansDrPlanCollectionItemPlanGroupStep", "userDefinedSteps");
            }
            this.userDefinedSteps = userDefinedSteps;
            return this;
        }
        public Builder userDefinedSteps(GetDrPlansDrPlanCollectionItemPlanGroupStepUserDefinedStep... userDefinedSteps) {
            return userDefinedSteps(List.of(userDefinedSteps));
        }
        public GetDrPlansDrPlanCollectionItemPlanGroupStep build() {
            final var _resultValue = new GetDrPlansDrPlanCollectionItemPlanGroupStep();
            _resultValue.displayName = displayName;
            _resultValue.errorMode = errorMode;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.isEnabled = isEnabled;
            _resultValue.memberId = memberId;
            _resultValue.refreshStatus = refreshStatus;
            _resultValue.timeout = timeout;
            _resultValue.type = type;
            _resultValue.typeDisplayName = typeDisplayName;
            _resultValue.userDefinedSteps = userDefinedSteps;
            return _resultValue;
        }
    }
}
