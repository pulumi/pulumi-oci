// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDrProtectionGroupMemberBackupConfig {
    /**
     * @return The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created. This format of the string specifying the backup schedule must conform with RFC-5545. This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.  Example: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1
     * 
     */
    private String backupSchedule;
    /**
     * @return A list of namespaces to be excluded from the backup.  The default value is null. If a list of namespaces to exclude is not provided, all namespaces will be backed up. Specify either the `namespaces` or the `excludeNamespaces` parameter, but not both. This property applies to OKE cluster members in the primary region.  Example: [&#34;namespace_string_3&#34;, &#34;namespace_string_4&#34;]
     * 
     */
    private List<String> excludeNamespaces;
    /**
     * @return The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
     * 
     */
    private String imageReplicationVaultSecretId;
    /**
     * @return The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
     * 
     */
    private Integer maxNumberOfBackupsRetained;
    /**
     * @return A list of namespaces to be included in the backup.  The default value is null. If a list of namespaces to include is not provided, all namespaces will be backed up. Specify either the `namespaces` or the `excludeNamespaces` parameter, but not both. This property applies to the OKE cluster member in primary region.  Example: [&#34;default&#34;, &#34;pv-nginx&#34;]
     * 
     */
    private List<String> namespaces;
    /**
     * @return Controls the behaviour of image replication across regions. This property applies to the OKE cluster member in primary region.
     * 
     */
    private String replicateImages;

    private GetDrProtectionGroupMemberBackupConfig() {}
    /**
     * @return The schedule for backing up namespaces to the destination region. If a backup schedule is not specified, only a single backup will be created. This format of the string specifying the backup schedule must conform with RFC-5545. This schedule will use the UTC timezone. This property applies to the OKE cluster member in primary region.  Example: FREQ=WEEKLY;BYDAY=MO,TU,WE,TH;BYHOUR=10;INTERVAL=1
     * 
     */
    public String backupSchedule() {
        return this.backupSchedule;
    }
    /**
     * @return A list of namespaces to be excluded from the backup.  The default value is null. If a list of namespaces to exclude is not provided, all namespaces will be backed up. Specify either the `namespaces` or the `excludeNamespaces` parameter, but not both. This property applies to OKE cluster members in the primary region.  Example: [&#34;namespace_string_3&#34;, &#34;namespace_string_4&#34;]
     * 
     */
    public List<String> excludeNamespaces() {
        return this.excludeNamespaces;
    }
    /**
     * @return The OCID of the vault secret that stores the image credential. This property applies to the OKE cluster member in both the primary and standby region.
     * 
     */
    public String imageReplicationVaultSecretId() {
        return this.imageReplicationVaultSecretId;
    }
    /**
     * @return The maximum number of backups that should be retained. This property applies to the OKE cluster member in primary region.
     * 
     */
    public Integer maxNumberOfBackupsRetained() {
        return this.maxNumberOfBackupsRetained;
    }
    /**
     * @return A list of namespaces to be included in the backup.  The default value is null. If a list of namespaces to include is not provided, all namespaces will be backed up. Specify either the `namespaces` or the `excludeNamespaces` parameter, but not both. This property applies to the OKE cluster member in primary region.  Example: [&#34;default&#34;, &#34;pv-nginx&#34;]
     * 
     */
    public List<String> namespaces() {
        return this.namespaces;
    }
    /**
     * @return Controls the behaviour of image replication across regions. This property applies to the OKE cluster member in primary region.
     * 
     */
    public String replicateImages() {
        return this.replicateImages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDrProtectionGroupMemberBackupConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backupSchedule;
        private List<String> excludeNamespaces;
        private String imageReplicationVaultSecretId;
        private Integer maxNumberOfBackupsRetained;
        private List<String> namespaces;
        private String replicateImages;
        public Builder() {}
        public Builder(GetDrProtectionGroupMemberBackupConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupSchedule = defaults.backupSchedule;
    	      this.excludeNamespaces = defaults.excludeNamespaces;
    	      this.imageReplicationVaultSecretId = defaults.imageReplicationVaultSecretId;
    	      this.maxNumberOfBackupsRetained = defaults.maxNumberOfBackupsRetained;
    	      this.namespaces = defaults.namespaces;
    	      this.replicateImages = defaults.replicateImages;
        }

        @CustomType.Setter
        public Builder backupSchedule(String backupSchedule) {
            if (backupSchedule == null) {
              throw new MissingRequiredPropertyException("GetDrProtectionGroupMemberBackupConfig", "backupSchedule");
            }
            this.backupSchedule = backupSchedule;
            return this;
        }
        @CustomType.Setter
        public Builder excludeNamespaces(List<String> excludeNamespaces) {
            if (excludeNamespaces == null) {
              throw new MissingRequiredPropertyException("GetDrProtectionGroupMemberBackupConfig", "excludeNamespaces");
            }
            this.excludeNamespaces = excludeNamespaces;
            return this;
        }
        public Builder excludeNamespaces(String... excludeNamespaces) {
            return excludeNamespaces(List.of(excludeNamespaces));
        }
        @CustomType.Setter
        public Builder imageReplicationVaultSecretId(String imageReplicationVaultSecretId) {
            if (imageReplicationVaultSecretId == null) {
              throw new MissingRequiredPropertyException("GetDrProtectionGroupMemberBackupConfig", "imageReplicationVaultSecretId");
            }
            this.imageReplicationVaultSecretId = imageReplicationVaultSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder maxNumberOfBackupsRetained(Integer maxNumberOfBackupsRetained) {
            if (maxNumberOfBackupsRetained == null) {
              throw new MissingRequiredPropertyException("GetDrProtectionGroupMemberBackupConfig", "maxNumberOfBackupsRetained");
            }
            this.maxNumberOfBackupsRetained = maxNumberOfBackupsRetained;
            return this;
        }
        @CustomType.Setter
        public Builder namespaces(List<String> namespaces) {
            if (namespaces == null) {
              throw new MissingRequiredPropertyException("GetDrProtectionGroupMemberBackupConfig", "namespaces");
            }
            this.namespaces = namespaces;
            return this;
        }
        public Builder namespaces(String... namespaces) {
            return namespaces(List.of(namespaces));
        }
        @CustomType.Setter
        public Builder replicateImages(String replicateImages) {
            if (replicateImages == null) {
              throw new MissingRequiredPropertyException("GetDrProtectionGroupMemberBackupConfig", "replicateImages");
            }
            this.replicateImages = replicateImages;
            return this;
        }
        public GetDrProtectionGroupMemberBackupConfig build() {
            final var _resultValue = new GetDrProtectionGroupMemberBackupConfig();
            _resultValue.backupSchedule = backupSchedule;
            _resultValue.excludeNamespaces = excludeNamespaces;
            _resultValue.imageReplicationVaultSecretId = imageReplicationVaultSecretId;
            _resultValue.maxNumberOfBackupsRetained = maxNumberOfBackupsRetained;
            _resultValue.namespaces = namespaces;
            _resultValue.replicateImages = replicateImages;
            return _resultValue;
        }
    }
}
