// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DisasterRecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberDbSystemAdminUserDetail {
    /**
     * @return The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
     * 
     */
    private String passwordVaultSecretId;
    /**
     * @return The user name for connecting to the HeatWave MySQL DB System node.  Example: `user`
     * 
     */
    private String username;

    private GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberDbSystemAdminUserDetail() {}
    /**
     * @return The OCID of the vault secret where the database SYSDBA password is stored. This password is required and used for performing database DR Drill operations when using full clone.  Example: `ocid1.vaultsecret.oc1..uniqueID`
     * 
     */
    public String passwordVaultSecretId() {
        return this.passwordVaultSecretId;
    }
    /**
     * @return The user name for connecting to the HeatWave MySQL DB System node.  Example: `user`
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberDbSystemAdminUserDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String passwordVaultSecretId;
        private String username;
        public Builder() {}
        public Builder(GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberDbSystemAdminUserDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.passwordVaultSecretId = defaults.passwordVaultSecretId;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder passwordVaultSecretId(String passwordVaultSecretId) {
            if (passwordVaultSecretId == null) {
              throw new MissingRequiredPropertyException("GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberDbSystemAdminUserDetail", "passwordVaultSecretId");
            }
            this.passwordVaultSecretId = passwordVaultSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberDbSystemAdminUserDetail", "username");
            }
            this.username = username;
            return this;
        }
        public GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberDbSystemAdminUserDetail build() {
            final var _resultValue = new GetDrProtectionGroupsDrProtectionGroupCollectionItemMemberDbSystemAdminUserDetail();
            _resultValue.passwordVaultSecretId = passwordVaultSecretId;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
