// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Dns.RrsetArgs;
import com.pulumi.oci.Dns.inputs.RrsetState;
import com.pulumi.oci.Dns.outputs.RrsetItem;
import com.pulumi.oci.Utilities;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Rrset resource in Oracle Cloud Infrastructure DNS service.
 * 
 * Replaces records in the specified RRSet. When the zone name is provided as a path parameter
 * and the zone has a scope of `PRIVATE` then the viewId query parameter is required.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Dns.Rrset;
 * import com.pulumi.oci.Dns.RrsetArgs;
 * import com.pulumi.oci.Dns.inputs.RrsetItemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testRrset = new Rrset("testRrset", RrsetArgs.builder()
 *             .domain(rrsetDomain)
 *             .rtype(rrsetRtype)
 *             .zoneNameOrId(testZone.id())
 *             .compartmentId(compartmentId)
 *             .items(RrsetItemArgs.builder()
 *                 .domain(rrsetItemsDomain)
 *                 .rdata(rrsetItemsRdata)
 *                 .rtype(rrsetItemsRtype)
 *                 .ttl(rrsetItemsTtl)
 *                 .build())
 *             .scope(rrsetScope)
 *             .viewId(testView.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * For legacy Rrsets that were created without using `scope`, these Rrsets can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Dns/rrset:Rrset test_rrset &#34;zoneNameOrId/{zoneNameOrId}/domain/{domain}/rtype/{rtype}&#34;
 * ```
 * For Rrsets created using `scope` and `view_id`, these Rrsets can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Dns/rrset:Rrset test_rrset &#34;zoneNameOrId/{zoneNameOrId}/domain/{domain}/rtype/{rtype}/scope/{scope}/viewId/{viewId}&#34;
 * ```
 * skip adding `{view_id}` at the end if Rrset was created without `view_id`.
 * 
 */
@ResourceType(type="oci:Dns/rrset:Rrset")
public class Rrset extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The OCID of the compartment the resource belongs to.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment the resource belongs to.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * The target fully-qualified domain name (FQDN) within the target zone.
     * 
     */
    @Export(name="domain", refs={String.class}, tree="[0]")
    private Output<String> domain;

    /**
     * @return The target fully-qualified domain name (FQDN) within the target zone.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }
    /**
     * (Updatable)
     * **NOTE** Omitting `items` at time of create, will delete any existing records in the RRSet
     * 
     */
    @Export(name="items", refs={List.class,RrsetItem.class}, tree="[0,1]")
    private Output<List<RrsetItem>> items;

    /**
     * @return (Updatable)
     * **NOTE** Omitting `items` at time of create, will delete any existing records in the RRSet
     * 
     */
    public Output<List<RrsetItem>> items() {
        return this.items;
    }
    /**
     * The type of the target RRSet within the target zone.
     * 
     */
    @Export(name="rtype", refs={String.class}, tree="[0]")
    private Output<String> rtype;

    /**
     * @return The type of the target RRSet within the target zone.
     * 
     */
    public Output<String> rtype() {
        return this.rtype;
    }
    /**
     * Specifies to operate only on resources that have a matching DNS scope.
     * This value will be null for zones in the global DNS and `PRIVATE` when creating private Rrsets.
     * 
     */
    @Export(name="scope", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> scope;

    /**
     * @return Specifies to operate only on resources that have a matching DNS scope.
     * This value will be null for zones in the global DNS and `PRIVATE` when creating private Rrsets.
     * 
     */
    public Output<Optional<String>> scope() {
        return Codegen.optional(this.scope);
    }
    /**
     * The OCID of the view the resource is associated with.
     * 
     */
    @Export(name="viewId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> viewId;

    /**
     * @return The OCID of the view the resource is associated with.
     * 
     */
    public Output<Optional<String>> viewId() {
        return Codegen.optional(this.viewId);
    }
    /**
     * The name or OCID of the target zone.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="zoneNameOrId", refs={String.class}, tree="[0]")
    private Output<String> zoneNameOrId;

    /**
     * @return The name or OCID of the target zone.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> zoneNameOrId() {
        return this.zoneNameOrId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Rrset(String name) {
        this(name, RrsetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Rrset(String name, RrsetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Rrset(String name, RrsetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Dns/rrset:Rrset", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private Rrset(String name, Output<String> id, @Nullable RrsetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Dns/rrset:Rrset", name, state, makeResourceOptions(options, id));
    }

    private static RrsetArgs makeArgs(RrsetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RrsetArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Rrset get(String name, Output<String> id, @Nullable RrsetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Rrset(name, id, state, options);
    }
}
