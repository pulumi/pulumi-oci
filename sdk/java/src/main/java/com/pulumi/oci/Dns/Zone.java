// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Dns.ZoneArgs;
import com.pulumi.oci.Dns.inputs.ZoneState;
import com.pulumi.oci.Dns.outputs.ZoneExternalDownstream;
import com.pulumi.oci.Dns.outputs.ZoneExternalMaster;
import com.pulumi.oci.Dns.outputs.ZoneNameserver;
import com.pulumi.oci.Dns.outputs.ZoneZoneTransferServer;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Zone resource in Oracle Cloud Infrastructure DNS service.
 * 
 * Creates a new zone in the specified compartment. For global zones, if the `Content-Type` header for the request
 * is `text/dns`, the `compartmentId` query parameter is required. `text/dns` for the `Content-Type` header is
 * not supported for private zones. Query parameter scope with a value of `PRIVATE` is required when creating a
 * private zone. Private zones must have a zone type of `PRIMARY`. Creating a private zone at or under
 * `oraclevcn.com` within the default protected view of a VCN-dedicated resolver is not permitted.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Dns.Zone;
 * import com.pulumi.oci.Dns.ZoneArgs;
 * import com.pulumi.oci.Dns.inputs.ZoneExternalDownstreamArgs;
 * import com.pulumi.oci.Dns.inputs.ZoneExternalMasterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testZone = new Zone(&#34;testZone&#34;, ZoneArgs.builder()        
 *             .compartmentId(var_.compartment_id())
 *             .zoneType(var_.zone_zone_type())
 *             .definedTags(var_.zone_defined_tags())
 *             .externalDownstreams(ZoneExternalDownstreamArgs.builder()
 *                 .address(var_.zone_external_downstreams_address())
 *                 .port(var_.zone_external_downstreams_port())
 *                 .tsigKeyId(oci_dns_tsig_key.test_tsig_key().id())
 *                 .build())
 *             .externalMasters(ZoneExternalMasterArgs.builder()
 *                 .address(var_.zone_external_masters_address())
 *                 .port(var_.zone_external_masters_port())
 *                 .tsigKeyId(oci_dns_tsig_key.test_tsig_key().id())
 *                 .build())
 *             .freeformTags(var_.zone_freeform_tags())
 *             .scope(var_.zone_scope())
 *             .viewId(oci_dns_view.test_view().id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Zones can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Dns/zone:Zone test_zone &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Dns/zone:Zone")
public class Zone extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The OCID of the compartment the resource belongs to.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment the resource belongs to.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     * **Example:** `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     * **Example:** `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}`
     * 
     */
    public Output<Optional<Map<String,Object>>> definedTags() {
        return Codegen.optional(this.definedTags);
    }
    /**
     * (Updatable) External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
     * 
     */
    @Export(name="externalDownstreams", refs={List.class,ZoneExternalDownstream.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ZoneExternalDownstream>> externalDownstreams;

    /**
     * @return (Updatable) External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
     * 
     */
    public Output<Optional<List<ZoneExternalDownstream>>> externalDownstreams() {
        return Codegen.optional(this.externalDownstreams);
    }
    /**
     * (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     * 
     */
    @Export(name="externalMasters", refs={List.class,ZoneExternalMaster.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ZoneExternalMaster>> externalMasters;

    /**
     * @return (Updatable) External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     * 
     */
    public Output<Optional<List<ZoneExternalMaster>>> externalMasters() {
        return Codegen.optional(this.externalMasters);
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     * **Example:** `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     * **Example:** `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> freeformTags() {
        return Codegen.optional(this.freeformTags);
    }
    /**
     * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    @Export(name="isProtected", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isProtected;

    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    public Output<Optional<Boolean>> isProtected() {
        return Codegen.optional(this.isProtected);
    }
    /**
     * The name of the zone.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the zone.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The authoritative nameservers for the zone.
     * 
     */
    @Export(name="nameservers", refs={List.class,ZoneNameserver.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ZoneNameserver>> nameservers;

    /**
     * @return The authoritative nameservers for the zone.
     * 
     */
    public Output<Optional<List<ZoneNameserver>>> nameservers() {
        return Codegen.optional(this.nameservers);
    }
    /**
     * Specifies to operate only on resources that have a matching DNS scope.
     * This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
     * 
     */
    @Export(name="scope", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> scope;

    /**
     * @return Specifies to operate only on resources that have a matching DNS scope.
     * This value will be null for zones in the global DNS and `PRIVATE` when creating a private zone.
     * 
     */
    public Output<Optional<String>> scope() {
        return Codegen.optional(this.scope);
    }
    /**
     * The canonical absolute URL of the resource.
     * 
     */
    @Export(name="self", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> self;

    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public Output<Optional<String>> self() {
        return Codegen.optional(this.self);
    }
    /**
     * The current serial of the zone. As seen in the zone&#39;s SOA record.
     * 
     */
    @Export(name="serial", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> serial;

    /**
     * @return The current serial of the zone. As seen in the zone&#39;s SOA record.
     * 
     */
    public Output<Optional<Integer>> serial() {
        return Codegen.optional(this.serial);
    }
    /**
     * The current state of the zone resource.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return The current state of the zone resource.
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeCreated;

    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Output<Optional<String>> timeCreated() {
        return Codegen.optional(this.timeCreated);
    }
    /**
     * Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone&#39;s SOA record is derived.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> version;

    /**
     * @return Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone&#39;s SOA record is derived.
     * 
     */
    public Output<Optional<String>> version() {
        return Codegen.optional(this.version);
    }
    /**
     * The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
     * 
     */
    @Export(name="viewId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> viewId;

    /**
     * @return The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
     * 
     */
    public Output<Optional<String>> viewId() {
        return Codegen.optional(this.viewId);
    }
    /**
     * The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
     * 
     */
    @Export(name="zoneTransferServers", refs={List.class,ZoneZoneTransferServer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ZoneZoneTransferServer>> zoneTransferServers;

    /**
     * @return The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
     * 
     */
    public Output<Optional<List<ZoneZoneTransferServer>>> zoneTransferServers() {
        return Codegen.optional(this.zoneTransferServers);
    }
    /**
     * The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="zoneType", refs={String.class}, tree="[0]")
    private Output<String> zoneType;

    /**
     * @return The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> zoneType() {
        return this.zoneType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Zone(String name) {
        this(name, ZoneArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Zone(String name, ZoneArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Zone(String name, ZoneArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Dns/zone:Zone", name, args == null ? ZoneArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Zone(String name, Output<String> id, @Nullable ZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Dns/zone:Zone", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Zone get(String name, Output<String> id, @Nullable ZoneState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Zone(name, id, state, options);
    }
}
