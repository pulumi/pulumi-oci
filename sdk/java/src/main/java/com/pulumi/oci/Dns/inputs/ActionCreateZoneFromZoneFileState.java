// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Dns.inputs.ActionCreateZoneFromZoneFileDnssecConfigArgs;
import com.pulumi.oci.Dns.inputs.ActionCreateZoneFromZoneFileExternalDownstreamArgs;
import com.pulumi.oci.Dns.inputs.ActionCreateZoneFromZoneFileExternalMasterArgs;
import com.pulumi.oci.Dns.inputs.ActionCreateZoneFromZoneFileNameserverArgs;
import com.pulumi.oci.Dns.inputs.ActionCreateZoneFromZoneFileZoneTransferServerArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionCreateZoneFromZoneFileState extends com.pulumi.resources.ResourceArgs {

    public static final ActionCreateZoneFromZoneFileState Empty = new ActionCreateZoneFromZoneFileState();

    /**
     * The OCID of the compartment the resource belongs to.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The zone file contents.
     * 
     */
    @Import(name="createZoneFromZoneFileDetails")
    private @Nullable Output<String> createZoneFromZoneFileDetails;

    /**
     * @return The zone file contents.
     * 
     */
    public Optional<Output<String>> createZoneFromZoneFileDetails() {
        return Optional.ofNullable(this.createZoneFromZoneFileDetails);
    }

    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    @Import(name="dnssecConfigs")
    private @Nullable Output<List<ActionCreateZoneFromZoneFileDnssecConfigArgs>> dnssecConfigs;

    public Optional<Output<List<ActionCreateZoneFromZoneFileDnssecConfigArgs>>> dnssecConfigs() {
        return Optional.ofNullable(this.dnssecConfigs);
    }

    @Import(name="dnssecState")
    private @Nullable Output<String> dnssecState;

    public Optional<Output<String>> dnssecState() {
        return Optional.ofNullable(this.dnssecState);
    }

    /**
     * External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
     * 
     */
    @Import(name="externalDownstreams")
    private @Nullable Output<List<ActionCreateZoneFromZoneFileExternalDownstreamArgs>> externalDownstreams;

    /**
     * @return External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
     * 
     */
    public Optional<Output<List<ActionCreateZoneFromZoneFileExternalDownstreamArgs>>> externalDownstreams() {
        return Optional.ofNullable(this.externalDownstreams);
    }

    /**
     * External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     * 
     */
    @Import(name="externalMasters")
    private @Nullable Output<List<ActionCreateZoneFromZoneFileExternalMasterArgs>> externalMasters;

    /**
     * @return External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     * 
     */
    public Optional<Output<List<ActionCreateZoneFromZoneFileExternalMasterArgs>>> externalMasters() {
        return Optional.ofNullable(this.externalMasters);
    }

    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    @Import(name="isProtected")
    private @Nullable Output<Boolean> isProtected;

    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    public Optional<Output<Boolean>> isProtected() {
        return Optional.ofNullable(this.isProtected);
    }

    /**
     * The name of the zone.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the zone.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The authoritative nameservers for the zone.
     * 
     */
    @Import(name="nameservers")
    private @Nullable Output<List<ActionCreateZoneFromZoneFileNameserverArgs>> nameservers;

    /**
     * @return The authoritative nameservers for the zone.
     * 
     */
    public Optional<Output<List<ActionCreateZoneFromZoneFileNameserverArgs>>> nameservers() {
        return Optional.ofNullable(this.nameservers);
    }

    /**
     * Specifies to operate only on resources that have a matching DNS scope.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return Specifies to operate only on resources that have a matching DNS scope.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * The canonical absolute URL of the resource.
     * 
     */
    @Import(name="self")
    private @Nullable Output<String> self;

    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public Optional<Output<String>> self() {
        return Optional.ofNullable(this.self);
    }

    /**
     * The current serial of the zone. As seen in the zone&#39;s SOA record.
     * 
     */
    @Import(name="serial")
    private @Nullable Output<String> serial;

    /**
     * @return The current serial of the zone. As seen in the zone&#39;s SOA record.
     * 
     */
    public Optional<Output<String>> serial() {
        return Optional.ofNullable(this.serial);
    }

    /**
     * The current state of the zone resource.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the zone resource.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone&#39;s SOA record is derived.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone&#39;s SOA record is derived.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    /**
     * The OCID of the view the resource is associated with.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="viewId")
    private @Nullable Output<String> viewId;

    /**
     * @return The OCID of the view the resource is associated with.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> viewId() {
        return Optional.ofNullable(this.viewId);
    }

    /**
     * The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
     * 
     */
    @Import(name="zoneTransferServers")
    private @Nullable Output<List<ActionCreateZoneFromZoneFileZoneTransferServerArgs>> zoneTransferServers;

    /**
     * @return The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
     * 
     */
    public Optional<Output<List<ActionCreateZoneFromZoneFileZoneTransferServerArgs>>> zoneTransferServers() {
        return Optional.ofNullable(this.zoneTransferServers);
    }

    /**
     * The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     * 
     */
    @Import(name="zoneType")
    private @Nullable Output<String> zoneType;

    /**
     * @return The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     * 
     */
    public Optional<Output<String>> zoneType() {
        return Optional.ofNullable(this.zoneType);
    }

    private ActionCreateZoneFromZoneFileState() {}

    private ActionCreateZoneFromZoneFileState(ActionCreateZoneFromZoneFileState $) {
        this.compartmentId = $.compartmentId;
        this.createZoneFromZoneFileDetails = $.createZoneFromZoneFileDetails;
        this.definedTags = $.definedTags;
        this.dnssecConfigs = $.dnssecConfigs;
        this.dnssecState = $.dnssecState;
        this.externalDownstreams = $.externalDownstreams;
        this.externalMasters = $.externalMasters;
        this.freeformTags = $.freeformTags;
        this.isProtected = $.isProtected;
        this.name = $.name;
        this.nameservers = $.nameservers;
        this.scope = $.scope;
        this.self = $.self;
        this.serial = $.serial;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.version = $.version;
        this.viewId = $.viewId;
        this.zoneTransferServers = $.zoneTransferServers;
        this.zoneType = $.zoneType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionCreateZoneFromZoneFileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionCreateZoneFromZoneFileState $;

        public Builder() {
            $ = new ActionCreateZoneFromZoneFileState();
        }

        public Builder(ActionCreateZoneFromZoneFileState defaults) {
            $ = new ActionCreateZoneFromZoneFileState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment the resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment the resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param createZoneFromZoneFileDetails The zone file contents.
         * 
         * @return builder
         * 
         */
        public Builder createZoneFromZoneFileDetails(@Nullable Output<String> createZoneFromZoneFileDetails) {
            $.createZoneFromZoneFileDetails = createZoneFromZoneFileDetails;
            return this;
        }

        /**
         * @param createZoneFromZoneFileDetails The zone file contents.
         * 
         * @return builder
         * 
         */
        public Builder createZoneFromZoneFileDetails(String createZoneFromZoneFileDetails) {
            return createZoneFromZoneFileDetails(Output.of(createZoneFromZoneFileDetails));
        }

        /**
         * @param definedTags Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        public Builder dnssecConfigs(@Nullable Output<List<ActionCreateZoneFromZoneFileDnssecConfigArgs>> dnssecConfigs) {
            $.dnssecConfigs = dnssecConfigs;
            return this;
        }

        public Builder dnssecConfigs(List<ActionCreateZoneFromZoneFileDnssecConfigArgs> dnssecConfigs) {
            return dnssecConfigs(Output.of(dnssecConfigs));
        }

        public Builder dnssecConfigs(ActionCreateZoneFromZoneFileDnssecConfigArgs... dnssecConfigs) {
            return dnssecConfigs(List.of(dnssecConfigs));
        }

        public Builder dnssecState(@Nullable Output<String> dnssecState) {
            $.dnssecState = dnssecState;
            return this;
        }

        public Builder dnssecState(String dnssecState) {
            return dnssecState(Output.of(dnssecState));
        }

        /**
         * @param externalDownstreams External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
         * 
         * @return builder
         * 
         */
        public Builder externalDownstreams(@Nullable Output<List<ActionCreateZoneFromZoneFileExternalDownstreamArgs>> externalDownstreams) {
            $.externalDownstreams = externalDownstreams;
            return this;
        }

        /**
         * @param externalDownstreams External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
         * 
         * @return builder
         * 
         */
        public Builder externalDownstreams(List<ActionCreateZoneFromZoneFileExternalDownstreamArgs> externalDownstreams) {
            return externalDownstreams(Output.of(externalDownstreams));
        }

        /**
         * @param externalDownstreams External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
         * 
         * @return builder
         * 
         */
        public Builder externalDownstreams(ActionCreateZoneFromZoneFileExternalDownstreamArgs... externalDownstreams) {
            return externalDownstreams(List.of(externalDownstreams));
        }

        /**
         * @param externalMasters External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
         * 
         * @return builder
         * 
         */
        public Builder externalMasters(@Nullable Output<List<ActionCreateZoneFromZoneFileExternalMasterArgs>> externalMasters) {
            $.externalMasters = externalMasters;
            return this;
        }

        /**
         * @param externalMasters External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
         * 
         * @return builder
         * 
         */
        public Builder externalMasters(List<ActionCreateZoneFromZoneFileExternalMasterArgs> externalMasters) {
            return externalMasters(Output.of(externalMasters));
        }

        /**
         * @param externalMasters External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
         * 
         * @return builder
         * 
         */
        public Builder externalMasters(ActionCreateZoneFromZoneFileExternalMasterArgs... externalMasters) {
            return externalMasters(List.of(externalMasters));
        }

        /**
         * @param freeformTags Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isProtected A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
         * 
         * @return builder
         * 
         */
        public Builder isProtected(@Nullable Output<Boolean> isProtected) {
            $.isProtected = isProtected;
            return this;
        }

        /**
         * @param isProtected A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
         * 
         * @return builder
         * 
         */
        public Builder isProtected(Boolean isProtected) {
            return isProtected(Output.of(isProtected));
        }

        /**
         * @param name The name of the zone.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the zone.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nameservers The authoritative nameservers for the zone.
         * 
         * @return builder
         * 
         */
        public Builder nameservers(@Nullable Output<List<ActionCreateZoneFromZoneFileNameserverArgs>> nameservers) {
            $.nameservers = nameservers;
            return this;
        }

        /**
         * @param nameservers The authoritative nameservers for the zone.
         * 
         * @return builder
         * 
         */
        public Builder nameservers(List<ActionCreateZoneFromZoneFileNameserverArgs> nameservers) {
            return nameservers(Output.of(nameservers));
        }

        /**
         * @param nameservers The authoritative nameservers for the zone.
         * 
         * @return builder
         * 
         */
        public Builder nameservers(ActionCreateZoneFromZoneFileNameserverArgs... nameservers) {
            return nameservers(List.of(nameservers));
        }

        /**
         * @param scope Specifies to operate only on resources that have a matching DNS scope.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Specifies to operate only on resources that have a matching DNS scope.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param self The canonical absolute URL of the resource.
         * 
         * @return builder
         * 
         */
        public Builder self(@Nullable Output<String> self) {
            $.self = self;
            return this;
        }

        /**
         * @param self The canonical absolute URL of the resource.
         * 
         * @return builder
         * 
         */
        public Builder self(String self) {
            return self(Output.of(self));
        }

        /**
         * @param serial The current serial of the zone. As seen in the zone&#39;s SOA record.
         * 
         * @return builder
         * 
         */
        public Builder serial(@Nullable Output<String> serial) {
            $.serial = serial;
            return this;
        }

        /**
         * @param serial The current serial of the zone. As seen in the zone&#39;s SOA record.
         * 
         * @return builder
         * 
         */
        public Builder serial(String serial) {
            return serial(Output.of(serial));
        }

        /**
         * @param state The current state of the zone resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the zone resource.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param version Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone&#39;s SOA record is derived.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone&#39;s SOA record is derived.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        /**
         * @param viewId The OCID of the view the resource is associated with.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder viewId(@Nullable Output<String> viewId) {
            $.viewId = viewId;
            return this;
        }

        /**
         * @param viewId The OCID of the view the resource is associated with.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder viewId(String viewId) {
            return viewId(Output.of(viewId));
        }

        /**
         * @param zoneTransferServers The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
         * 
         * @return builder
         * 
         */
        public Builder zoneTransferServers(@Nullable Output<List<ActionCreateZoneFromZoneFileZoneTransferServerArgs>> zoneTransferServers) {
            $.zoneTransferServers = zoneTransferServers;
            return this;
        }

        /**
         * @param zoneTransferServers The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
         * 
         * @return builder
         * 
         */
        public Builder zoneTransferServers(List<ActionCreateZoneFromZoneFileZoneTransferServerArgs> zoneTransferServers) {
            return zoneTransferServers(Output.of(zoneTransferServers));
        }

        /**
         * @param zoneTransferServers The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
         * 
         * @return builder
         * 
         */
        public Builder zoneTransferServers(ActionCreateZoneFromZoneFileZoneTransferServerArgs... zoneTransferServers) {
            return zoneTransferServers(List.of(zoneTransferServers));
        }

        /**
         * @param zoneType The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
         * 
         * @return builder
         * 
         */
        public Builder zoneType(@Nullable Output<String> zoneType) {
            $.zoneType = zoneType;
            return this;
        }

        /**
         * @param zoneType The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
         * 
         * @return builder
         * 
         */
        public Builder zoneType(String zoneType) {
            return zoneType(Output.of(zoneType));
        }

        public ActionCreateZoneFromZoneFileState build() {
            return $;
        }
    }

}
