// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetResolverPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResolverPlainArgs Empty = new GetResolverPlainArgs();

    /**
     * The OCID of the target resolver.
     * 
     */
    @Import(name="resolverId", required=true)
    private String resolverId;

    /**
     * @return The OCID of the target resolver.
     * 
     */
    public String resolverId() {
        return this.resolverId;
    }

    /**
     * Value must be `PRIVATE` when listing private name resolvers.
     * 
     */
    @Import(name="scope")
    private @Nullable String scope;

    /**
     * @return Value must be `PRIVATE` when listing private name resolvers.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }

    private GetResolverPlainArgs() {}

    private GetResolverPlainArgs(GetResolverPlainArgs $) {
        this.resolverId = $.resolverId;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResolverPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResolverPlainArgs $;

        public Builder() {
            $ = new GetResolverPlainArgs();
        }

        public Builder(GetResolverPlainArgs defaults) {
            $ = new GetResolverPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param resolverId The OCID of the target resolver.
         * 
         * @return builder
         * 
         */
        public Builder resolverId(String resolverId) {
            $.resolverId = resolverId;
            return this;
        }

        /**
         * @param scope Value must be `PRIVATE` when listing private name resolvers.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable String scope) {
            $.scope = scope;
            return this;
        }

        public GetResolverPlainArgs build() {
            if ($.resolverId == null) {
                throw new MissingRequiredPropertyException("GetResolverPlainArgs", "resolverId");
            }
            return $;
        }
    }

}
