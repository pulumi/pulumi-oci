// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetViewPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetViewPlainArgs Empty = new GetViewPlainArgs();

    /**
     * Value must be `PRIVATE` when listing views for private zones.
     * 
     */
    @Import(name="scope")
    private @Nullable String scope;

    /**
     * @return Value must be `PRIVATE` when listing views for private zones.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * The OCID of the target view.
     * 
     */
    @Import(name="viewId")
    private @Nullable String viewId;

    /**
     * @return The OCID of the target view.
     * 
     */
    public Optional<String> viewId() {
        return Optional.ofNullable(this.viewId);
    }

    private GetViewPlainArgs() {}

    private GetViewPlainArgs(GetViewPlainArgs $) {
        this.scope = $.scope;
        this.viewId = $.viewId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetViewPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetViewPlainArgs $;

        public Builder() {
            $ = new GetViewPlainArgs();
        }

        public Builder(GetViewPlainArgs defaults) {
            $ = new GetViewPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param scope Value must be `PRIVATE` when listing views for private zones.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable String scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param viewId The OCID of the target view.
         * 
         * @return builder
         * 
         */
        public Builder viewId(@Nullable String viewId) {
            $.viewId = viewId;
            return this;
        }

        public GetViewPlainArgs build() {
            return $;
        }
    }

}
