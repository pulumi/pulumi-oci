// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs Empty = new ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs();

    /**
     * The type of the digest associated with the rdata.
     * 
     */
    @Import(name="digestType")
    private @Nullable Output<String> digestType;

    /**
     * @return The type of the digest associated with the rdata.
     * 
     */
    public Optional<Output<String>> digestType() {
        return Optional.ofNullable(this.digestType);
    }

    /**
     * Presentation-format DS record data that must be added to the parent zone. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
     * 
     */
    @Import(name="rdata")
    private @Nullable Output<String> rdata;

    /**
     * @return Presentation-format DS record data that must be added to the parent zone. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
     * 
     */
    public Optional<Output<String>> rdata() {
        return Optional.ofNullable(this.rdata);
    }

    private ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs() {}

    private ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs(ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs $) {
        this.digestType = $.digestType;
        this.rdata = $.rdata;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs $;

        public Builder() {
            $ = new ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs();
        }

        public Builder(ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs defaults) {
            $ = new ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param digestType The type of the digest associated with the rdata.
         * 
         * @return builder
         * 
         */
        public Builder digestType(@Nullable Output<String> digestType) {
            $.digestType = digestType;
            return this;
        }

        /**
         * @param digestType The type of the digest associated with the rdata.
         * 
         * @return builder
         * 
         */
        public Builder digestType(String digestType) {
            return digestType(Output.of(digestType));
        }

        /**
         * @param rdata Presentation-format DS record data that must be added to the parent zone. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
         * 
         * @return builder
         * 
         */
        public Builder rdata(@Nullable Output<String> rdata) {
            $.rdata = rdata;
            return this;
        }

        /**
         * @param rdata Presentation-format DS record data that must be added to the parent zone. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm)
         * 
         * @return builder
         * 
         */
        public Builder rdata(String rdata) {
            return rdata(Output.of(rdata));
        }

        public ZoneDnssecConfigKskDnssecKeyVersionDsDataArgs build() {
            return $;
        }
    }

}
