// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Dns.outputs.GetResolverAttachedView;
import com.pulumi.oci.Dns.outputs.GetResolverEndpoint;
import com.pulumi.oci.Dns.outputs.GetResolverRule;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResolverResult {
    /**
     * @return The OCID of the attached VCN.
     * 
     */
    private @Nullable String attachedVcnId;
    /**
     * @return The attached views. Views are evaluated in order.
     * 
     */
    private @Nullable List<GetResolverAttachedView> attachedViews;
    /**
     * @return The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver&#39;s compartment is changed.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The OCID of the default view.
     * 
     */
    private @Nullable String defaultViewId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The display name of the resolver.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Read-only array of endpoints for the resolver.
     * 
     */
    private @Nullable List<GetResolverEndpoint> endpoints;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the resolver.
     * 
     */
    private @Nullable String id;
    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    private @Nullable Boolean isProtected;
    private String resolverId;
    /**
     * @return Rules for the resolver. Rules are evaluated in order.
     * 
     */
    private @Nullable List<GetResolverRule> rules;
    private @Nullable String scope;
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    private @Nullable String self;
    /**
     * @return The current state of the resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    private @Nullable String timeUpdated;

    private GetResolverResult() {}
    /**
     * @return The OCID of the attached VCN.
     * 
     */
    public Optional<String> attachedVcnId() {
        return Optional.ofNullable(this.attachedVcnId);
    }
    /**
     * @return The attached views. Views are evaluated in order.
     * 
     */
    public List<GetResolverAttachedView> attachedViews() {
        return this.attachedViews == null ? List.of() : this.attachedViews;
    }
    /**
     * @return The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver&#39;s compartment is changed.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The OCID of the default view.
     * 
     */
    public Optional<String> defaultViewId() {
        return Optional.ofNullable(this.defaultViewId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The display name of the resolver.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Read-only array of endpoints for the resolver.
     * 
     */
    public List<GetResolverEndpoint> endpoints() {
        return this.endpoints == null ? List.of() : this.endpoints;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the resolver.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    public Optional<Boolean> isProtected() {
        return Optional.ofNullable(this.isProtected);
    }
    public String resolverId() {
        return this.resolverId;
    }
    /**
     * @return Rules for the resolver. Rules are evaluated in order.
     * 
     */
    public List<GetResolverRule> rules() {
        return this.rules == null ? List.of() : this.rules;
    }
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public Optional<String> self() {
        return Optional.ofNullable(this.self);
    }
    /**
     * @return The current state of the resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResolverResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String attachedVcnId;
        private @Nullable List<GetResolverAttachedView> attachedViews;
        private @Nullable String compartmentId;
        private @Nullable String defaultViewId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable List<GetResolverEndpoint> endpoints;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isProtected;
        private String resolverId;
        private @Nullable List<GetResolverRule> rules;
        private @Nullable String scope;
        private @Nullable String self;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetResolverResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachedVcnId = defaults.attachedVcnId;
    	      this.attachedViews = defaults.attachedViews;
    	      this.compartmentId = defaults.compartmentId;
    	      this.defaultViewId = defaults.defaultViewId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.endpoints = defaults.endpoints;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isProtected = defaults.isProtected;
    	      this.resolverId = defaults.resolverId;
    	      this.rules = defaults.rules;
    	      this.scope = defaults.scope;
    	      this.self = defaults.self;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder attachedVcnId(@Nullable String attachedVcnId) {
            this.attachedVcnId = attachedVcnId;
            return this;
        }
        @CustomType.Setter
        public Builder attachedViews(@Nullable List<GetResolverAttachedView> attachedViews) {
            this.attachedViews = attachedViews;
            return this;
        }
        public Builder attachedViews(GetResolverAttachedView... attachedViews) {
            return attachedViews(List.of(attachedViews));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder defaultViewId(@Nullable String defaultViewId) {
            this.defaultViewId = defaultViewId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder endpoints(@Nullable List<GetResolverEndpoint> endpoints) {
            this.endpoints = endpoints;
            return this;
        }
        public Builder endpoints(GetResolverEndpoint... endpoints) {
            return endpoints(List.of(endpoints));
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isProtected(@Nullable Boolean isProtected) {
            this.isProtected = isProtected;
            return this;
        }
        @CustomType.Setter
        public Builder resolverId(String resolverId) {
            this.resolverId = Objects.requireNonNull(resolverId);
            return this;
        }
        @CustomType.Setter
        public Builder rules(@Nullable List<GetResolverRule> rules) {
            this.rules = rules;
            return this;
        }
        public Builder rules(GetResolverRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder self(@Nullable String self) {
            this.self = self;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetResolverResult build() {
            final var o = new GetResolverResult();
            o.attachedVcnId = attachedVcnId;
            o.attachedViews = attachedViews;
            o.compartmentId = compartmentId;
            o.defaultViewId = defaultViewId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.endpoints = endpoints;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isProtected = isProtected;
            o.resolverId = resolverId;
            o.rules = rules;
            o.scope = scope;
            o.self = self;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
