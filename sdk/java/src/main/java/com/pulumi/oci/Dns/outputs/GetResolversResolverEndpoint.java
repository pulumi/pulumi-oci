// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetResolversResolverEndpoint {
    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    private String compartmentId;
    private String endpointType;
    private String forwardingAddress;
    private Boolean isForwarding;
    private Boolean isListening;
    private String listeningAddress;
    private String name;
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    private String self;
    /**
     * @return The state of a resource.
     * 
     */
    private String state;
    private String subnetId;
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    private String timeUpdated;

    private GetResolversResolverEndpoint() {}
    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String endpointType() {
        return this.endpointType;
    }
    public String forwardingAddress() {
        return this.forwardingAddress;
    }
    public Boolean isForwarding() {
        return this.isForwarding;
    }
    public Boolean isListening() {
        return this.isListening;
    }
    public String listeningAddress() {
        return this.listeningAddress;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public String self() {
        return this.self;
    }
    /**
     * @return The state of a resource.
     * 
     */
    public String state() {
        return this.state;
    }
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResolversResolverEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String endpointType;
        private String forwardingAddress;
        private Boolean isForwarding;
        private Boolean isListening;
        private String listeningAddress;
        private String name;
        private String self;
        private String state;
        private String subnetId;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetResolversResolverEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.endpointType = defaults.endpointType;
    	      this.forwardingAddress = defaults.forwardingAddress;
    	      this.isForwarding = defaults.isForwarding;
    	      this.isListening = defaults.isListening;
    	      this.listeningAddress = defaults.listeningAddress;
    	      this.name = defaults.name;
    	      this.self = defaults.self;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder endpointType(String endpointType) {
            this.endpointType = Objects.requireNonNull(endpointType);
            return this;
        }
        @CustomType.Setter
        public Builder forwardingAddress(String forwardingAddress) {
            this.forwardingAddress = Objects.requireNonNull(forwardingAddress);
            return this;
        }
        @CustomType.Setter
        public Builder isForwarding(Boolean isForwarding) {
            this.isForwarding = Objects.requireNonNull(isForwarding);
            return this;
        }
        @CustomType.Setter
        public Builder isListening(Boolean isListening) {
            this.isListening = Objects.requireNonNull(isListening);
            return this;
        }
        @CustomType.Setter
        public Builder listeningAddress(String listeningAddress) {
            this.listeningAddress = Objects.requireNonNull(listeningAddress);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder self(String self) {
            this.self = Objects.requireNonNull(self);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public GetResolversResolverEndpoint build() {
            final var o = new GetResolversResolverEndpoint();
            o.compartmentId = compartmentId;
            o.endpointType = endpointType;
            o.forwardingAddress = forwardingAddress;
            o.isForwarding = isForwarding;
            o.isListening = isListening;
            o.listeningAddress = listeningAddress;
            o.name = name;
            o.self = self;
            o.state = state;
            o.subnetId = subnetId;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
