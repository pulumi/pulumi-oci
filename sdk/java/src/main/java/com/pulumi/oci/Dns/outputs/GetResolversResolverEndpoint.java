// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResolversResolverEndpoint {
    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable String endpointType;
    private @Nullable String forwardingAddress;
    private @Nullable Boolean isForwarding;
    private @Nullable Boolean isListening;
    private @Nullable String listeningAddress;
    private @Nullable String name;
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    private @Nullable String self;
    /**
     * @return The state of a resource.
     * 
     */
    private @Nullable String state;
    private @Nullable String subnetId;
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    private @Nullable String timeUpdated;

    private GetResolversResolverEndpoint() {}
    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<String> endpointType() {
        return Optional.ofNullable(this.endpointType);
    }
    public Optional<String> forwardingAddress() {
        return Optional.ofNullable(this.forwardingAddress);
    }
    public Optional<Boolean> isForwarding() {
        return Optional.ofNullable(this.isForwarding);
    }
    public Optional<Boolean> isListening() {
        return Optional.ofNullable(this.isListening);
    }
    public Optional<String> listeningAddress() {
        return Optional.ofNullable(this.listeningAddress);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public Optional<String> self() {
        return Optional.ofNullable(this.self);
    }
    /**
     * @return The state of a resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResolversResolverEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String endpointType;
        private @Nullable String forwardingAddress;
        private @Nullable Boolean isForwarding;
        private @Nullable Boolean isListening;
        private @Nullable String listeningAddress;
        private @Nullable String name;
        private @Nullable String self;
        private @Nullable String state;
        private @Nullable String subnetId;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetResolversResolverEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.endpointType = defaults.endpointType;
    	      this.forwardingAddress = defaults.forwardingAddress;
    	      this.isForwarding = defaults.isForwarding;
    	      this.isListening = defaults.isListening;
    	      this.listeningAddress = defaults.listeningAddress;
    	      this.name = defaults.name;
    	      this.self = defaults.self;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder endpointType(@Nullable String endpointType) {
            this.endpointType = endpointType;
            return this;
        }
        @CustomType.Setter
        public Builder forwardingAddress(@Nullable String forwardingAddress) {
            this.forwardingAddress = forwardingAddress;
            return this;
        }
        @CustomType.Setter
        public Builder isForwarding(@Nullable Boolean isForwarding) {
            this.isForwarding = isForwarding;
            return this;
        }
        @CustomType.Setter
        public Builder isListening(@Nullable Boolean isListening) {
            this.isListening = isListening;
            return this;
        }
        @CustomType.Setter
        public Builder listeningAddress(@Nullable String listeningAddress) {
            this.listeningAddress = listeningAddress;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder self(@Nullable String self) {
            this.self = self;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetResolversResolverEndpoint build() {
            final var o = new GetResolversResolverEndpoint();
            o.compartmentId = compartmentId;
            o.endpointType = endpointType;
            o.forwardingAddress = forwardingAddress;
            o.isForwarding = isForwarding;
            o.isListening = isListening;
            o.listeningAddress = listeningAddress;
            o.name = name;
            o.self = self;
            o.state = state;
            o.subnetId = subnetId;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
