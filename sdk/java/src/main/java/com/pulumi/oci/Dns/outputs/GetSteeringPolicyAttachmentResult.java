// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSteeringPolicyAttachmentResult {
    /**
     * @return The OCID of the compartment containing the steering policy attachment.
     * 
     */
    private String compartmentId;
    /**
     * @return A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return The attached domain within the attached zone.
     * 
     */
    private String domainName;
    /**
     * @return The OCID of the resource.
     * 
     */
    private String id;
    /**
     * @return The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
     * 
     */
    private List<String> rtypes;
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    private String self;
    /**
     * @return The current state of the resource.
     * 
     */
    private String state;
    private String steeringPolicyAttachmentId;
    /**
     * @return The OCID of the attached steering policy.
     * 
     */
    private String steeringPolicyId;
    /**
     * @return The date and time the resource was created, expressed in RFC 3339 timestamp format.
     * 
     */
    private String timeCreated;
    /**
     * @return The OCID of the attached zone.
     * 
     */
    private String zoneId;

    private GetSteeringPolicyAttachmentResult() {}
    /**
     * @return The OCID of the compartment containing the steering policy attachment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The attached domain within the attached zone.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return The OCID of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
     * 
     */
    public List<String> rtypes() {
        return this.rtypes;
    }
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public String self() {
        return this.self;
    }
    /**
     * @return The current state of the resource.
     * 
     */
    public String state() {
        return this.state;
    }
    public String steeringPolicyAttachmentId() {
        return this.steeringPolicyAttachmentId;
    }
    /**
     * @return The OCID of the attached steering policy.
     * 
     */
    public String steeringPolicyId() {
        return this.steeringPolicyId;
    }
    /**
     * @return The date and time the resource was created, expressed in RFC 3339 timestamp format.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The OCID of the attached zone.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSteeringPolicyAttachmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String displayName;
        private String domainName;
        private String id;
        private List<String> rtypes;
        private String self;
        private String state;
        private String steeringPolicyAttachmentId;
        private String steeringPolicyId;
        private String timeCreated;
        private String zoneId;
        public Builder() {}
        public Builder(GetSteeringPolicyAttachmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.domainName = defaults.domainName;
    	      this.id = defaults.id;
    	      this.rtypes = defaults.rtypes;
    	      this.self = defaults.self;
    	      this.state = defaults.state;
    	      this.steeringPolicyAttachmentId = defaults.steeringPolicyAttachmentId;
    	      this.steeringPolicyId = defaults.steeringPolicyId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder domainName(String domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder rtypes(List<String> rtypes) {
            this.rtypes = Objects.requireNonNull(rtypes);
            return this;
        }
        public Builder rtypes(String... rtypes) {
            return rtypes(List.of(rtypes));
        }
        @CustomType.Setter
        public Builder self(String self) {
            this.self = Objects.requireNonNull(self);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder steeringPolicyAttachmentId(String steeringPolicyAttachmentId) {
            this.steeringPolicyAttachmentId = Objects.requireNonNull(steeringPolicyAttachmentId);
            return this;
        }
        @CustomType.Setter
        public Builder steeringPolicyId(String steeringPolicyId) {
            this.steeringPolicyId = Objects.requireNonNull(steeringPolicyId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(String zoneId) {
            this.zoneId = Objects.requireNonNull(zoneId);
            return this;
        }
        public GetSteeringPolicyAttachmentResult build() {
            final var _resultValue = new GetSteeringPolicyAttachmentResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.domainName = domainName;
            _resultValue.id = id;
            _resultValue.rtypes = rtypes;
            _resultValue.self = self;
            _resultValue.state = state;
            _resultValue.steeringPolicyAttachmentId = steeringPolicyAttachmentId;
            _resultValue.steeringPolicyId = steeringPolicyId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.zoneId = zoneId;
            return _resultValue;
        }
    }
}
