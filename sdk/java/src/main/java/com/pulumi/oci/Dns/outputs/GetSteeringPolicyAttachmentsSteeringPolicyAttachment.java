// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSteeringPolicyAttachmentsSteeringPolicyAttachment {
    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The displayName of a resource.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The attached domain within the attached zone.
     * 
     */
    private @Nullable String domainName;
    /**
     * @return The OCID of a resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
     * 
     */
    private @Nullable List<String> rtypes;
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    private @Nullable String self;
    /**
     * @return The state of a resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return Search by steering policy OCID. Will match any resource whose steering policy ID matches the provided value.
     * 
     */
    private @Nullable String steeringPolicyId;
    /**
     * @return The date and time the resource was created, expressed in RFC 3339 timestamp format.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Search by zone OCID. Will match any resource whose zone ID matches the provided value.
     * 
     */
    private @Nullable String zoneId;

    private GetSteeringPolicyAttachmentsSteeringPolicyAttachment() {}
    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The displayName of a resource.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The attached domain within the attached zone.
     * 
     */
    public Optional<String> domainName() {
        return Optional.ofNullable(this.domainName);
    }
    /**
     * @return The OCID of a resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
     * 
     */
    public List<String> rtypes() {
        return this.rtypes == null ? List.of() : this.rtypes;
    }
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public Optional<String> self() {
        return Optional.ofNullable(this.self);
    }
    /**
     * @return The state of a resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Search by steering policy OCID. Will match any resource whose steering policy ID matches the provided value.
     * 
     */
    public Optional<String> steeringPolicyId() {
        return Optional.ofNullable(this.steeringPolicyId);
    }
    /**
     * @return The date and time the resource was created, expressed in RFC 3339 timestamp format.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Search by zone OCID. Will match any resource whose zone ID matches the provided value.
     * 
     */
    public Optional<String> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSteeringPolicyAttachmentsSteeringPolicyAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable String domainName;
        private @Nullable String id;
        private @Nullable List<String> rtypes;
        private @Nullable String self;
        private @Nullable String state;
        private @Nullable String steeringPolicyId;
        private @Nullable String timeCreated;
        private @Nullable String zoneId;
        public Builder() {}
        public Builder(GetSteeringPolicyAttachmentsSteeringPolicyAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.domainName = defaults.domainName;
    	      this.id = defaults.id;
    	      this.rtypes = defaults.rtypes;
    	      this.self = defaults.self;
    	      this.state = defaults.state;
    	      this.steeringPolicyId = defaults.steeringPolicyId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.zoneId = defaults.zoneId;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder domainName(@Nullable String domainName) {
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder rtypes(@Nullable List<String> rtypes) {
            this.rtypes = rtypes;
            return this;
        }
        public Builder rtypes(String... rtypes) {
            return rtypes(List.of(rtypes));
        }
        @CustomType.Setter
        public Builder self(@Nullable String self) {
            this.self = self;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder steeringPolicyId(@Nullable String steeringPolicyId) {
            this.steeringPolicyId = steeringPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder zoneId(@Nullable String zoneId) {
            this.zoneId = zoneId;
            return this;
        }
        public GetSteeringPolicyAttachmentsSteeringPolicyAttachment build() {
            final var o = new GetSteeringPolicyAttachmentsSteeringPolicyAttachment();
            o.compartmentId = compartmentId;
            o.displayName = displayName;
            o.domainName = domainName;
            o.id = id;
            o.rtypes = rtypes;
            o.self = self;
            o.state = state;
            o.steeringPolicyId = steeringPolicyId;
            o.timeCreated = timeCreated;
            o.zoneId = zoneId;
            return o;
        }
    }
}
