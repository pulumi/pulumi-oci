// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Dns.outputs.GetZonesFilter;
import com.pulumi.oci.Dns.outputs.GetZonesZone;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZonesResult {
    /**
     * @return The OCID of the compartment containing the zone.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetZonesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the zone.
     * 
     */
    private @Nullable String name;
    private @Nullable String nameContains;
    /**
     * @return The scope of the zone.
     * 
     */
    private @Nullable String scope;
    private @Nullable String sortBy;
    private @Nullable String sortOrder;
    /**
     * @return The current state of the zone resource.
     * 
     */
    private @Nullable String state;
    private @Nullable String timeCreatedGreaterThanOrEqualTo;
    private @Nullable String timeCreatedLessThan;
    /**
     * @return The OCID of the TSIG key.
     * 
     */
    private @Nullable String tsigKeyId;
    /**
     * @return The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
     * 
     */
    private @Nullable String viewId;
    /**
     * @return The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     * 
     */
    private @Nullable String zoneType;
    /**
     * @return The list of zones.
     * 
     */
    private List<GetZonesZone> zones;

    private GetZonesResult() {}
    /**
     * @return The OCID of the compartment containing the zone.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetZonesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the zone.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> nameContains() {
        return Optional.ofNullable(this.nameContains);
    }
    /**
     * @return The scope of the zone.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    public Optional<String> sortBy() {
        return Optional.ofNullable(this.sortBy);
    }
    public Optional<String> sortOrder() {
        return Optional.ofNullable(this.sortOrder);
    }
    /**
     * @return The current state of the zone resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }
    /**
     * @return The OCID of the TSIG key.
     * 
     */
    public Optional<String> tsigKeyId() {
        return Optional.ofNullable(this.tsigKeyId);
    }
    /**
     * @return The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
     * 
     */
    public Optional<String> viewId() {
        return Optional.ofNullable(this.viewId);
    }
    /**
     * @return The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     * 
     */
    public Optional<String> zoneType() {
        return Optional.ofNullable(this.zoneType);
    }
    /**
     * @return The list of zones.
     * 
     */
    public List<GetZonesZone> zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZonesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetZonesFilter> filters;
        private String id;
        private @Nullable String name;
        private @Nullable String nameContains;
        private @Nullable String scope;
        private @Nullable String sortBy;
        private @Nullable String sortOrder;
        private @Nullable String state;
        private @Nullable String timeCreatedGreaterThanOrEqualTo;
        private @Nullable String timeCreatedLessThan;
        private @Nullable String tsigKeyId;
        private @Nullable String viewId;
        private @Nullable String zoneType;
        private List<GetZonesZone> zones;
        public Builder() {}
        public Builder(GetZonesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.nameContains = defaults.nameContains;
    	      this.scope = defaults.scope;
    	      this.sortBy = defaults.sortBy;
    	      this.sortOrder = defaults.sortOrder;
    	      this.state = defaults.state;
    	      this.timeCreatedGreaterThanOrEqualTo = defaults.timeCreatedGreaterThanOrEqualTo;
    	      this.timeCreatedLessThan = defaults.timeCreatedLessThan;
    	      this.tsigKeyId = defaults.tsigKeyId;
    	      this.viewId = defaults.viewId;
    	      this.zoneType = defaults.zoneType;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetZonesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetZonesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetZonesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetZonesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nameContains(@Nullable String nameContains) {

            this.nameContains = nameContains;
            return this;
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {

            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder sortBy(@Nullable String sortBy) {

            this.sortBy = sortBy;
            return this;
        }
        @CustomType.Setter
        public Builder sortOrder(@Nullable String sortOrder) {

            this.sortOrder = sortOrder;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {

            this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {

            this.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }
        @CustomType.Setter
        public Builder tsigKeyId(@Nullable String tsigKeyId) {

            this.tsigKeyId = tsigKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder viewId(@Nullable String viewId) {

            this.viewId = viewId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneType(@Nullable String zoneType) {

            this.zoneType = zoneType;
            return this;
        }
        @CustomType.Setter
        public Builder zones(List<GetZonesZone> zones) {
            if (zones == null) {
              throw new MissingRequiredPropertyException("GetZonesResult", "zones");
            }
            this.zones = zones;
            return this;
        }
        public Builder zones(GetZonesZone... zones) {
            return zones(List.of(zones));
        }
        public GetZonesResult build() {
            final var _resultValue = new GetZonesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.nameContains = nameContains;
            _resultValue.scope = scope;
            _resultValue.sortBy = sortBy;
            _resultValue.sortOrder = sortOrder;
            _resultValue.state = state;
            _resultValue.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            _resultValue.timeCreatedLessThan = timeCreatedLessThan;
            _resultValue.tsigKeyId = tsigKeyId;
            _resultValue.viewId = viewId;
            _resultValue.zoneType = zoneType;
            _resultValue.zones = zones;
            return _resultValue;
        }
    }
}
