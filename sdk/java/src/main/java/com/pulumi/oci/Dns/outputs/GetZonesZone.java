// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Dns.outputs.GetZonesZoneExternalDownstream;
import com.pulumi.oci.Dns.outputs.GetZonesZoneExternalMaster;
import com.pulumi.oci.Dns.outputs.GetZonesZoneNameserver;
import com.pulumi.oci.Dns.outputs.GetZonesZoneZoneTransferServer;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZonesZone {
    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
     * 
     */
    private @Nullable List<GetZonesZoneExternalDownstream> externalDownstreams;
    /**
     * @return External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     * 
     */
    private @Nullable List<GetZonesZoneExternalMaster> externalMasters;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the zone.
     * 
     */
    private @Nullable String id;
    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    private @Nullable Boolean isProtected;
    /**
     * @return A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
     * 
     */
    private @Nullable String name;
    /**
     * @return The authoritative nameservers for the zone.
     * 
     */
    private @Nullable List<GetZonesZoneNameserver> nameservers;
    /**
     * @return Specifies to operate only on resources that have a matching DNS scope. This value will be null
     * for zones in the global DNS and `PRIVATE` when listing private zones.
     * 
     */
    private @Nullable String scope;
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    private @Nullable String self;
    /**
     * @return The current serial of the zone. As seen in the zone&#39;s SOA record.
     * 
     */
    private @Nullable Integer serial;
    /**
     * @return The state of a resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone&#39;s SOA record is derived.
     * 
     */
    private @Nullable String version;
    /**
     * @return The OCID of the view the resource is associated with.
     * 
     */
    private @Nullable String viewId;
    /**
     * @return The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
     * 
     */
    private @Nullable List<GetZonesZoneZoneTransferServer> zoneTransferServers;
    /**
     * @return Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
     * 
     */
    private @Nullable String zoneType;

    private GetZonesZone() {}
    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return External secondary servers for the zone. This field is currently not supported when `zoneType` is `SECONDARY` or `scope` is `PRIVATE`.
     * 
     */
    public List<GetZonesZoneExternalDownstream> externalDownstreams() {
        return this.externalDownstreams == null ? List.of() : this.externalDownstreams;
    }
    /**
     * @return External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     * 
     */
    public List<GetZonesZoneExternalMaster> externalMasters() {
        return this.externalMasters == null ? List.of() : this.externalMasters;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the zone.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    public Optional<Boolean> isProtected() {
        return Optional.ofNullable(this.isProtected);
    }
    /**
     * @return A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The authoritative nameservers for the zone.
     * 
     */
    public List<GetZonesZoneNameserver> nameservers() {
        return this.nameservers == null ? List.of() : this.nameservers;
    }
    /**
     * @return Specifies to operate only on resources that have a matching DNS scope. This value will be null
     * for zones in the global DNS and `PRIVATE` when listing private zones.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public Optional<String> self() {
        return Optional.ofNullable(this.self);
    }
    /**
     * @return The current serial of the zone. As seen in the zone&#39;s SOA record.
     * 
     */
    public Optional<Integer> serial() {
        return Optional.ofNullable(this.serial);
    }
    /**
     * @return The state of a resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone&#39;s SOA record is derived.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }
    /**
     * @return The OCID of the view the resource is associated with.
     * 
     */
    public Optional<String> viewId() {
        return Optional.ofNullable(this.viewId);
    }
    /**
     * @return The Oracle Cloud Infrastructure nameservers that transfer the zone data with external nameservers.
     * 
     */
    public List<GetZonesZoneZoneTransferServer> zoneTransferServers() {
        return this.zoneTransferServers == null ? List.of() : this.zoneTransferServers;
    }
    /**
     * @return Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
     * 
     */
    public Optional<String> zoneType() {
        return Optional.ofNullable(this.zoneType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZonesZone defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable List<GetZonesZoneExternalDownstream> externalDownstreams;
        private @Nullable List<GetZonesZoneExternalMaster> externalMasters;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isProtected;
        private @Nullable String name;
        private @Nullable List<GetZonesZoneNameserver> nameservers;
        private @Nullable String scope;
        private @Nullable String self;
        private @Nullable Integer serial;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String version;
        private @Nullable String viewId;
        private @Nullable List<GetZonesZoneZoneTransferServer> zoneTransferServers;
        private @Nullable String zoneType;
        public Builder() {}
        public Builder(GetZonesZone defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.externalDownstreams = defaults.externalDownstreams;
    	      this.externalMasters = defaults.externalMasters;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isProtected = defaults.isProtected;
    	      this.name = defaults.name;
    	      this.nameservers = defaults.nameservers;
    	      this.scope = defaults.scope;
    	      this.self = defaults.self;
    	      this.serial = defaults.serial;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.version = defaults.version;
    	      this.viewId = defaults.viewId;
    	      this.zoneTransferServers = defaults.zoneTransferServers;
    	      this.zoneType = defaults.zoneType;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder externalDownstreams(@Nullable List<GetZonesZoneExternalDownstream> externalDownstreams) {
            this.externalDownstreams = externalDownstreams;
            return this;
        }
        public Builder externalDownstreams(GetZonesZoneExternalDownstream... externalDownstreams) {
            return externalDownstreams(List.of(externalDownstreams));
        }
        @CustomType.Setter
        public Builder externalMasters(@Nullable List<GetZonesZoneExternalMaster> externalMasters) {
            this.externalMasters = externalMasters;
            return this;
        }
        public Builder externalMasters(GetZonesZoneExternalMaster... externalMasters) {
            return externalMasters(List.of(externalMasters));
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isProtected(@Nullable Boolean isProtected) {
            this.isProtected = isProtected;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nameservers(@Nullable List<GetZonesZoneNameserver> nameservers) {
            this.nameservers = nameservers;
            return this;
        }
        public Builder nameservers(GetZonesZoneNameserver... nameservers) {
            return nameservers(List.of(nameservers));
        }
        @CustomType.Setter
        public Builder scope(@Nullable String scope) {
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder self(@Nullable String self) {
            this.self = self;
            return this;
        }
        @CustomType.Setter
        public Builder serial(@Nullable Integer serial) {
            this.serial = serial;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder viewId(@Nullable String viewId) {
            this.viewId = viewId;
            return this;
        }
        @CustomType.Setter
        public Builder zoneTransferServers(@Nullable List<GetZonesZoneZoneTransferServer> zoneTransferServers) {
            this.zoneTransferServers = zoneTransferServers;
            return this;
        }
        public Builder zoneTransferServers(GetZonesZoneZoneTransferServer... zoneTransferServers) {
            return zoneTransferServers(List.of(zoneTransferServers));
        }
        @CustomType.Setter
        public Builder zoneType(@Nullable String zoneType) {
            this.zoneType = zoneType;
            return this;
        }
        public GetZonesZone build() {
            final var o = new GetZonesZone();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.externalDownstreams = externalDownstreams;
            o.externalMasters = externalMasters;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isProtected = isProtected;
            o.name = name;
            o.nameservers = nameservers;
            o.scope = scope;
            o.self = self;
            o.serial = serial;
            o.state = state;
            o.timeCreated = timeCreated;
            o.version = version;
            o.viewId = viewId;
            o.zoneTransferServers = zoneTransferServers;
            o.zoneType = zoneType;
            return o;
        }
    }
}
