// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SteeringPolicyAnswer {
    /**
     * @return Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer&#39;s `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
     * 
     */
    private @Nullable Boolean isDisabled;
    /**
     * @return A user-friendly name for the answer, unique within the steering policy. An answer&#39;s `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
     * 
     */
    private String name;
    /**
     * @return The freeform name of a group of one or more records in which this record is included, such as &#34;LAX data center&#34;. An answer&#39;s `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
     * 
     */
    private @Nullable String pool;
    /**
     * @return The record&#39;s data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
     * 
     */
    private String rdata;
    /**
     * @return The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
     * 
     */
    private String rtype;

    private SteeringPolicyAnswer() {}
    /**
     * @return Set this property to `true` to indicate that the answer is administratively disabled, such as when the corresponding server is down for maintenance. An answer&#39;s `isDisabled` property can be referenced in `answerCondition` properties in rules using `answer.isDisabled`.
     * 
     */
    public Optional<Boolean> isDisabled() {
        return Optional.ofNullable(this.isDisabled);
    }
    /**
     * @return A user-friendly name for the answer, unique within the steering policy. An answer&#39;s `name` property can be referenced in `answerCondition` properties of rules using `answer.name`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The freeform name of a group of one or more records in which this record is included, such as &#34;LAX data center&#34;. An answer&#39;s `pool` property can be referenced in `answerCondition` properties of rules using `answer.pool`.
     * 
     */
    public Optional<String> pool() {
        return Optional.ofNullable(this.pool);
    }
    /**
     * @return The record&#39;s data, as whitespace-delimited tokens in type-specific presentation format. All RDATA is normalized and the returned presentation of your RDATA may differ from its initial input. For more information about RDATA, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
     * 
     */
    public String rdata() {
        return this.rdata;
    }
    /**
     * @return The type of DNS record, such as A or CNAME. Only A, AAAA, and CNAME are supported. For more information, see [Supported DNS Resource Record Types](https://docs.cloud.oracle.com/iaas/Content/DNS/Reference/supporteddnsresource.htm).
     * 
     */
    public String rtype() {
        return this.rtype;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SteeringPolicyAnswer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isDisabled;
        private String name;
        private @Nullable String pool;
        private String rdata;
        private String rtype;
        public Builder() {}
        public Builder(SteeringPolicyAnswer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isDisabled = defaults.isDisabled;
    	      this.name = defaults.name;
    	      this.pool = defaults.pool;
    	      this.rdata = defaults.rdata;
    	      this.rtype = defaults.rtype;
        }

        @CustomType.Setter
        public Builder isDisabled(@Nullable Boolean isDisabled) {
            this.isDisabled = isDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder pool(@Nullable String pool) {
            this.pool = pool;
            return this;
        }
        @CustomType.Setter
        public Builder rdata(String rdata) {
            this.rdata = Objects.requireNonNull(rdata);
            return this;
        }
        @CustomType.Setter
        public Builder rtype(String rtype) {
            this.rtype = Objects.requireNonNull(rtype);
            return this;
        }
        public SteeringPolicyAnswer build() {
            final var _resultValue = new SteeringPolicyAnswer();
            _resultValue.isDisabled = isDisabled;
            _resultValue.name = name;
            _resultValue.pool = pool;
            _resultValue.rdata = rdata;
            _resultValue.rtype = rtype;
            return _resultValue;
        }
    }
}
