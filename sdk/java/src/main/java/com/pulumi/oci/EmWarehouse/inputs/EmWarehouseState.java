// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.EmWarehouse.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmWarehouseState extends com.pulumi.resources.ResourceArgs {

    public static final EmWarehouseState Empty = new EmWarehouseState();

    /**
     * (Updatable) Compartment Identifier
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * EmWarehouse Identifier
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return EmWarehouse Identifier
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) EMBridge Identifier
     * 
     */
    @Import(name="emBridgeId")
    private @Nullable Output<String> emBridgeId;

    /**
     * @return (Updatable) EMBridge Identifier
     * 
     */
    public Optional<Output<String>> emBridgeId() {
        return Optional.ofNullable(this.emBridgeId);
    }

    /**
     * Type of the EmWarehouse.
     * 
     */
    @Import(name="emWarehouseType")
    private @Nullable Output<String> emWarehouseType;

    /**
     * @return Type of the EmWarehouse.
     * 
     */
    public Optional<Output<String>> emWarehouseType() {
        return Optional.ofNullable(this.emWarehouseType);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Data Flow Run Status Message
     * 
     */
    @Import(name="latestEtlRunMessage")
    private @Nullable Output<String> latestEtlRunMessage;

    /**
     * @return Data Flow Run Status Message
     * 
     */
    public Optional<Output<String>> latestEtlRunMessage() {
        return Optional.ofNullable(this.latestEtlRunMessage);
    }

    /**
     * Data Flow Run Status
     * 
     */
    @Import(name="latestEtlRunStatus")
    private @Nullable Output<String> latestEtlRunStatus;

    /**
     * @return Data Flow Run Status
     * 
     */
    public Optional<Output<String>> latestEtlRunStatus() {
        return Optional.ofNullable(this.latestEtlRunStatus);
    }

    /**
     * Data Flow Run Total Time
     * 
     */
    @Import(name="latestEtlRunTime")
    private @Nullable Output<String> latestEtlRunTime;

    /**
     * @return Data Flow Run Total Time
     * 
     */
    public Optional<Output<String>> latestEtlRunTime() {
        return Optional.ofNullable(this.latestEtlRunTime);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * operations Insights Warehouse Identifier
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="operationsInsightsWarehouseId")
    private @Nullable Output<String> operationsInsightsWarehouseId;

    /**
     * @return operations Insights Warehouse Identifier
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> operationsInsightsWarehouseId() {
        return Optional.ofNullable(this.operationsInsightsWarehouseId);
    }

    /**
     * The current state of the EmWarehouse.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the EmWarehouse.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time the the EmWarehouse was created. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the the EmWarehouse was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the EmWarehouse was updated. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the EmWarehouse was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private EmWarehouseState() {}

    private EmWarehouseState(EmWarehouseState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.emBridgeId = $.emBridgeId;
        this.emWarehouseType = $.emWarehouseType;
        this.freeformTags = $.freeformTags;
        this.latestEtlRunMessage = $.latestEtlRunMessage;
        this.latestEtlRunStatus = $.latestEtlRunStatus;
        this.latestEtlRunTime = $.latestEtlRunTime;
        this.lifecycleDetails = $.lifecycleDetails;
        this.operationsInsightsWarehouseId = $.operationsInsightsWarehouseId;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmWarehouseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmWarehouseState $;

        public Builder() {
            $ = new EmWarehouseState();
        }

        public Builder(EmWarehouseState defaults) {
            $ = new EmWarehouseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName EmWarehouse Identifier
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName EmWarehouse Identifier
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param emBridgeId (Updatable) EMBridge Identifier
         * 
         * @return builder
         * 
         */
        public Builder emBridgeId(@Nullable Output<String> emBridgeId) {
            $.emBridgeId = emBridgeId;
            return this;
        }

        /**
         * @param emBridgeId (Updatable) EMBridge Identifier
         * 
         * @return builder
         * 
         */
        public Builder emBridgeId(String emBridgeId) {
            return emBridgeId(Output.of(emBridgeId));
        }

        /**
         * @param emWarehouseType Type of the EmWarehouse.
         * 
         * @return builder
         * 
         */
        public Builder emWarehouseType(@Nullable Output<String> emWarehouseType) {
            $.emWarehouseType = emWarehouseType;
            return this;
        }

        /**
         * @param emWarehouseType Type of the EmWarehouse.
         * 
         * @return builder
         * 
         */
        public Builder emWarehouseType(String emWarehouseType) {
            return emWarehouseType(Output.of(emWarehouseType));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param latestEtlRunMessage Data Flow Run Status Message
         * 
         * @return builder
         * 
         */
        public Builder latestEtlRunMessage(@Nullable Output<String> latestEtlRunMessage) {
            $.latestEtlRunMessage = latestEtlRunMessage;
            return this;
        }

        /**
         * @param latestEtlRunMessage Data Flow Run Status Message
         * 
         * @return builder
         * 
         */
        public Builder latestEtlRunMessage(String latestEtlRunMessage) {
            return latestEtlRunMessage(Output.of(latestEtlRunMessage));
        }

        /**
         * @param latestEtlRunStatus Data Flow Run Status
         * 
         * @return builder
         * 
         */
        public Builder latestEtlRunStatus(@Nullable Output<String> latestEtlRunStatus) {
            $.latestEtlRunStatus = latestEtlRunStatus;
            return this;
        }

        /**
         * @param latestEtlRunStatus Data Flow Run Status
         * 
         * @return builder
         * 
         */
        public Builder latestEtlRunStatus(String latestEtlRunStatus) {
            return latestEtlRunStatus(Output.of(latestEtlRunStatus));
        }

        /**
         * @param latestEtlRunTime Data Flow Run Total Time
         * 
         * @return builder
         * 
         */
        public Builder latestEtlRunTime(@Nullable Output<String> latestEtlRunTime) {
            $.latestEtlRunTime = latestEtlRunTime;
            return this;
        }

        /**
         * @param latestEtlRunTime Data Flow Run Total Time
         * 
         * @return builder
         * 
         */
        public Builder latestEtlRunTime(String latestEtlRunTime) {
            return latestEtlRunTime(Output.of(latestEtlRunTime));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param operationsInsightsWarehouseId operations Insights Warehouse Identifier
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder operationsInsightsWarehouseId(@Nullable Output<String> operationsInsightsWarehouseId) {
            $.operationsInsightsWarehouseId = operationsInsightsWarehouseId;
            return this;
        }

        /**
         * @param operationsInsightsWarehouseId operations Insights Warehouse Identifier
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder operationsInsightsWarehouseId(String operationsInsightsWarehouseId) {
            return operationsInsightsWarehouseId(Output.of(operationsInsightsWarehouseId));
        }

        /**
         * @param state The current state of the EmWarehouse.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the EmWarehouse.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time the the EmWarehouse was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the the EmWarehouse was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the EmWarehouse was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the EmWarehouse was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public EmWarehouseState build() {
            return $;
        }
    }

}
