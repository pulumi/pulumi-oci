// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.EmWarehouse.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetEmWarehouseResult {
    /**
     * @return Compartment Identifier
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return EmWarehouse Identifier, can be renamed
     * 
     */
    private String displayName;
    /**
     * @return EMBridge Identifier
     * 
     */
    private String emBridgeId;
    private String emWarehouseId;
    /**
     * @return Type of the EmWarehouse.
     * 
     */
    private String emWarehouseType;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    private String id;
    /**
     * @return Data Flow Run Status Message
     * 
     */
    private String latestEtlRunMessage;
    /**
     * @return Data Flow Run Status
     * 
     */
    private String latestEtlRunStatus;
    /**
     * @return Data Flow Run Total Time
     * 
     */
    private String latestEtlRunTime;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return operations Insights Warehouse Identifier
     * 
     */
    private String operationsInsightsWarehouseId;
    /**
     * @return The current state of the EmWarehouse.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The time the the EmWarehouse was created. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;
    /**
     * @return The time the EmWarehouse was updated. An RFC3339 formatted datetime string
     * 
     */
    private String timeUpdated;

    private GetEmWarehouseResult() {}
    /**
     * @return Compartment Identifier
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return EmWarehouse Identifier, can be renamed
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return EMBridge Identifier
     * 
     */
    public String emBridgeId() {
        return this.emBridgeId;
    }
    public String emWarehouseId() {
        return this.emWarehouseId;
    }
    /**
     * @return Type of the EmWarehouse.
     * 
     */
    public String emWarehouseType() {
        return this.emWarehouseType;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Data Flow Run Status Message
     * 
     */
    public String latestEtlRunMessage() {
        return this.latestEtlRunMessage;
    }
    /**
     * @return Data Flow Run Status
     * 
     */
    public String latestEtlRunStatus() {
        return this.latestEtlRunStatus;
    }
    /**
     * @return Data Flow Run Total Time
     * 
     */
    public String latestEtlRunTime() {
        return this.latestEtlRunTime;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return operations Insights Warehouse Identifier
     * 
     */
    public String operationsInsightsWarehouseId() {
        return this.operationsInsightsWarehouseId;
    }
    /**
     * @return The current state of the EmWarehouse.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the EmWarehouse was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the EmWarehouse was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEmWarehouseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private String emBridgeId;
        private String emWarehouseId;
        private String emWarehouseType;
        private Map<String,Object> freeformTags;
        private String id;
        private String latestEtlRunMessage;
        private String latestEtlRunStatus;
        private String latestEtlRunTime;
        private String lifecycleDetails;
        private String operationsInsightsWarehouseId;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetEmWarehouseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.emBridgeId = defaults.emBridgeId;
    	      this.emWarehouseId = defaults.emWarehouseId;
    	      this.emWarehouseType = defaults.emWarehouseType;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.latestEtlRunMessage = defaults.latestEtlRunMessage;
    	      this.latestEtlRunStatus = defaults.latestEtlRunStatus;
    	      this.latestEtlRunTime = defaults.latestEtlRunTime;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.operationsInsightsWarehouseId = defaults.operationsInsightsWarehouseId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder emBridgeId(String emBridgeId) {
            if (emBridgeId == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "emBridgeId");
            }
            this.emBridgeId = emBridgeId;
            return this;
        }
        @CustomType.Setter
        public Builder emWarehouseId(String emWarehouseId) {
            if (emWarehouseId == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "emWarehouseId");
            }
            this.emWarehouseId = emWarehouseId;
            return this;
        }
        @CustomType.Setter
        public Builder emWarehouseType(String emWarehouseType) {
            if (emWarehouseType == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "emWarehouseType");
            }
            this.emWarehouseType = emWarehouseType;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder latestEtlRunMessage(String latestEtlRunMessage) {
            if (latestEtlRunMessage == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "latestEtlRunMessage");
            }
            this.latestEtlRunMessage = latestEtlRunMessage;
            return this;
        }
        @CustomType.Setter
        public Builder latestEtlRunStatus(String latestEtlRunStatus) {
            if (latestEtlRunStatus == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "latestEtlRunStatus");
            }
            this.latestEtlRunStatus = latestEtlRunStatus;
            return this;
        }
        @CustomType.Setter
        public Builder latestEtlRunTime(String latestEtlRunTime) {
            if (latestEtlRunTime == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "latestEtlRunTime");
            }
            this.latestEtlRunTime = latestEtlRunTime;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder operationsInsightsWarehouseId(String operationsInsightsWarehouseId) {
            if (operationsInsightsWarehouseId == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "operationsInsightsWarehouseId");
            }
            this.operationsInsightsWarehouseId = operationsInsightsWarehouseId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetEmWarehouseResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetEmWarehouseResult build() {
            final var _resultValue = new GetEmWarehouseResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.emBridgeId = emBridgeId;
            _resultValue.emWarehouseId = emWarehouseId;
            _resultValue.emWarehouseType = emWarehouseType;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.latestEtlRunMessage = latestEtlRunMessage;
            _resultValue.latestEtlRunStatus = latestEtlRunStatus;
            _resultValue.latestEtlRunTime = latestEtlRunTime;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.operationsInsightsWarehouseId = operationsInsightsWarehouseId;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
