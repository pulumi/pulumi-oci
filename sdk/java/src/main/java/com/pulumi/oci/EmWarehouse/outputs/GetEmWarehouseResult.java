// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.EmWarehouse.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetEmWarehouseResult {
    /**
     * @return Compartment Identifier
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return EmWarehouse Identifier, can be renamed
     * 
     */
    private final String displayName;
    /**
     * @return EMBridge Identifier
     * 
     */
    private final String emBridgeId;
    private final String emWarehouseId;
    /**
     * @return Type of the EmWarehouse.
     * 
     */
    private final String emWarehouseType;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    private final String id;
    /**
     * @return Data Flow Run Status Message
     * 
     */
    private final String latestEtlRunMessage;
    /**
     * @return Data Flow Run Status
     * 
     */
    private final String latestEtlRunStatus;
    /**
     * @return Data Flow Run Total Time
     * 
     */
    private final String latestEtlRunTime;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return operations Insights Warehouse Identifier
     * 
     */
    private final String operationsInsightsWarehouseId;
    /**
     * @return The current state of the EmWarehouse.
     * 
     */
    private final String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The time the the EmWarehouse was created. An RFC3339 formatted datetime string
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the EmWarehouse was updated. An RFC3339 formatted datetime string
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetEmWarehouseResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("emBridgeId") String emBridgeId,
        @CustomType.Parameter("emWarehouseId") String emWarehouseId,
        @CustomType.Parameter("emWarehouseType") String emWarehouseType,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("latestEtlRunMessage") String latestEtlRunMessage,
        @CustomType.Parameter("latestEtlRunStatus") String latestEtlRunStatus,
        @CustomType.Parameter("latestEtlRunTime") String latestEtlRunTime,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("operationsInsightsWarehouseId") String operationsInsightsWarehouseId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.emBridgeId = emBridgeId;
        this.emWarehouseId = emWarehouseId;
        this.emWarehouseType = emWarehouseType;
        this.freeformTags = freeformTags;
        this.id = id;
        this.latestEtlRunMessage = latestEtlRunMessage;
        this.latestEtlRunStatus = latestEtlRunStatus;
        this.latestEtlRunTime = latestEtlRunTime;
        this.lifecycleDetails = lifecycleDetails;
        this.operationsInsightsWarehouseId = operationsInsightsWarehouseId;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return Compartment Identifier
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return EmWarehouse Identifier, can be renamed
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return EMBridge Identifier
     * 
     */
    public String emBridgeId() {
        return this.emBridgeId;
    }
    public String emWarehouseId() {
        return this.emWarehouseId;
    }
    /**
     * @return Type of the EmWarehouse.
     * 
     */
    public String emWarehouseType() {
        return this.emWarehouseType;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Data Flow Run Status Message
     * 
     */
    public String latestEtlRunMessage() {
        return this.latestEtlRunMessage;
    }
    /**
     * @return Data Flow Run Status
     * 
     */
    public String latestEtlRunStatus() {
        return this.latestEtlRunStatus;
    }
    /**
     * @return Data Flow Run Total Time
     * 
     */
    public String latestEtlRunTime() {
        return this.latestEtlRunTime;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return operations Insights Warehouse Identifier
     * 
     */
    public String operationsInsightsWarehouseId() {
        return this.operationsInsightsWarehouseId;
    }
    /**
     * @return The current state of the EmWarehouse.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the EmWarehouse was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the EmWarehouse was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEmWarehouseResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private String emBridgeId;
        private String emWarehouseId;
        private String emWarehouseType;
        private Map<String,Object> freeformTags;
        private String id;
        private String latestEtlRunMessage;
        private String latestEtlRunStatus;
        private String latestEtlRunTime;
        private String lifecycleDetails;
        private String operationsInsightsWarehouseId;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEmWarehouseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.emBridgeId = defaults.emBridgeId;
    	      this.emWarehouseId = defaults.emWarehouseId;
    	      this.emWarehouseType = defaults.emWarehouseType;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.latestEtlRunMessage = defaults.latestEtlRunMessage;
    	      this.latestEtlRunStatus = defaults.latestEtlRunStatus;
    	      this.latestEtlRunTime = defaults.latestEtlRunTime;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.operationsInsightsWarehouseId = defaults.operationsInsightsWarehouseId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder emBridgeId(String emBridgeId) {
            this.emBridgeId = Objects.requireNonNull(emBridgeId);
            return this;
        }
        public Builder emWarehouseId(String emWarehouseId) {
            this.emWarehouseId = Objects.requireNonNull(emWarehouseId);
            return this;
        }
        public Builder emWarehouseType(String emWarehouseType) {
            this.emWarehouseType = Objects.requireNonNull(emWarehouseType);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder latestEtlRunMessage(String latestEtlRunMessage) {
            this.latestEtlRunMessage = Objects.requireNonNull(latestEtlRunMessage);
            return this;
        }
        public Builder latestEtlRunStatus(String latestEtlRunStatus) {
            this.latestEtlRunStatus = Objects.requireNonNull(latestEtlRunStatus);
            return this;
        }
        public Builder latestEtlRunTime(String latestEtlRunTime) {
            this.latestEtlRunTime = Objects.requireNonNull(latestEtlRunTime);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder operationsInsightsWarehouseId(String operationsInsightsWarehouseId) {
            this.operationsInsightsWarehouseId = Objects.requireNonNull(operationsInsightsWarehouseId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetEmWarehouseResult build() {
            return new GetEmWarehouseResult(compartmentId, definedTags, displayName, emBridgeId, emWarehouseId, emWarehouseType, freeformTags, id, latestEtlRunMessage, latestEtlRunStatus, latestEtlRunTime, lifecycleDetails, operationsInsightsWarehouseId, state, systemTags, timeCreated, timeUpdated);
        }
    }
}
