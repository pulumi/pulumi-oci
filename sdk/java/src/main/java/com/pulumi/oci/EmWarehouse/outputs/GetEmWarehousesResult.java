// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.EmWarehouse.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.EmWarehouse.outputs.GetEmWarehousesEmWarehouseCollection;
import com.pulumi.oci.EmWarehouse.outputs.GetEmWarehousesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEmWarehousesResult {
    /**
     * @return Compartment Identifier
     * 
     */
    private final @Nullable String compartmentId;
    /**
     * @return EmWarehouse Identifier, can be renamed
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return The list of em_warehouse_collection.
     * 
     */
    private final List<GetEmWarehousesEmWarehouseCollection> emWarehouseCollections;
    private final @Nullable List<GetEmWarehousesFilter> filters;
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    private final @Nullable String id;
    /**
     * @return operations Insights Warehouse Identifier
     * 
     */
    private final @Nullable String operationsInsightsWarehouseId;
    /**
     * @return The current state of the EmWarehouse.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetEmWarehousesResult(
        @CustomType.Parameter("compartmentId") @Nullable String compartmentId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("emWarehouseCollections") List<GetEmWarehousesEmWarehouseCollection> emWarehouseCollections,
        @CustomType.Parameter("filters") @Nullable List<GetEmWarehousesFilter> filters,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("operationsInsightsWarehouseId") @Nullable String operationsInsightsWarehouseId,
        @CustomType.Parameter("state") @Nullable String state) {
        this.compartmentId = compartmentId;
        this.displayName = displayName;
        this.emWarehouseCollections = emWarehouseCollections;
        this.filters = filters;
        this.id = id;
        this.operationsInsightsWarehouseId = operationsInsightsWarehouseId;
        this.state = state;
    }

    /**
     * @return Compartment Identifier
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return EmWarehouse Identifier, can be renamed
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The list of em_warehouse_collection.
     * 
     */
    public List<GetEmWarehousesEmWarehouseCollection> emWarehouseCollections() {
        return this.emWarehouseCollections;
    }
    public List<GetEmWarehousesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return operations Insights Warehouse Identifier
     * 
     */
    public Optional<String> operationsInsightsWarehouseId() {
        return Optional.ofNullable(this.operationsInsightsWarehouseId);
    }
    /**
     * @return The current state of the EmWarehouse.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEmWarehousesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private List<GetEmWarehousesEmWarehouseCollection> emWarehouseCollections;
        private @Nullable List<GetEmWarehousesFilter> filters;
        private @Nullable String id;
        private @Nullable String operationsInsightsWarehouseId;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEmWarehousesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.emWarehouseCollections = defaults.emWarehouseCollections;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.operationsInsightsWarehouseId = defaults.operationsInsightsWarehouseId;
    	      this.state = defaults.state;
        }

        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder emWarehouseCollections(List<GetEmWarehousesEmWarehouseCollection> emWarehouseCollections) {
            this.emWarehouseCollections = Objects.requireNonNull(emWarehouseCollections);
            return this;
        }
        public Builder emWarehouseCollections(GetEmWarehousesEmWarehouseCollection... emWarehouseCollections) {
            return emWarehouseCollections(List.of(emWarehouseCollections));
        }
        public Builder filters(@Nullable List<GetEmWarehousesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetEmWarehousesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder operationsInsightsWarehouseId(@Nullable String operationsInsightsWarehouseId) {
            this.operationsInsightsWarehouseId = operationsInsightsWarehouseId;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetEmWarehousesResult build() {
            return new GetEmWarehousesResult(compartmentId, displayName, emWarehouseCollections, filters, id, operationsInsightsWarehouseId, state);
        }
    }
}
