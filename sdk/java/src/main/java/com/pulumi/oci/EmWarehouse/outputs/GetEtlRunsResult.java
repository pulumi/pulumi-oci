// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.EmWarehouse.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.EmWarehouse.outputs.GetEtlRunsEtlRunCollection;
import com.pulumi.oci.EmWarehouse.outputs.GetEtlRunsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEtlRunsResult {
    /**
     * @return Compartment Identifier
     * 
     */
    private final @Nullable String compartmentId;
    /**
     * @return The name of the ETLRun.
     * 
     */
    private final @Nullable String displayName;
    private final String emWarehouseId;
    /**
     * @return The list of etl_run_collection.
     * 
     */
    private final List<GetEtlRunsEtlRunCollection> etlRunCollections;
    private final @Nullable List<GetEtlRunsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;

    @CustomType.Constructor
    private GetEtlRunsResult(
        @CustomType.Parameter("compartmentId") @Nullable String compartmentId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("emWarehouseId") String emWarehouseId,
        @CustomType.Parameter("etlRunCollections") List<GetEtlRunsEtlRunCollection> etlRunCollections,
        @CustomType.Parameter("filters") @Nullable List<GetEtlRunsFilter> filters,
        @CustomType.Parameter("id") String id) {
        this.compartmentId = compartmentId;
        this.displayName = displayName;
        this.emWarehouseId = emWarehouseId;
        this.etlRunCollections = etlRunCollections;
        this.filters = filters;
        this.id = id;
    }

    /**
     * @return Compartment Identifier
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The name of the ETLRun.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public String emWarehouseId() {
        return this.emWarehouseId;
    }
    /**
     * @return The list of etl_run_collection.
     * 
     */
    public List<GetEtlRunsEtlRunCollection> etlRunCollections() {
        return this.etlRunCollections;
    }
    public List<GetEtlRunsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEtlRunsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private String emWarehouseId;
        private List<GetEtlRunsEtlRunCollection> etlRunCollections;
        private @Nullable List<GetEtlRunsFilter> filters;
        private String id;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEtlRunsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.emWarehouseId = defaults.emWarehouseId;
    	      this.etlRunCollections = defaults.etlRunCollections;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
        }

        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder emWarehouseId(String emWarehouseId) {
            this.emWarehouseId = Objects.requireNonNull(emWarehouseId);
            return this;
        }
        public Builder etlRunCollections(List<GetEtlRunsEtlRunCollection> etlRunCollections) {
            this.etlRunCollections = Objects.requireNonNull(etlRunCollections);
            return this;
        }
        public Builder etlRunCollections(GetEtlRunsEtlRunCollection... etlRunCollections) {
            return etlRunCollections(List.of(etlRunCollections));
        }
        public Builder filters(@Nullable List<GetEtlRunsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetEtlRunsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }        public GetEtlRunsResult build() {
            return new GetEtlRunsResult(compartmentId, displayName, emWarehouseId, etlRunCollections, filters, id);
        }
    }
}
