// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.EmWarehouse.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.EmWarehouse.outputs.GetResourceUsageEmInstance;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResourceUsageResult {
    /**
     * @return EmInstanceCount
     * 
     */
    private @Nullable Integer emInstanceCount;
    /**
     * @return List of emInstances
     * 
     */
    private @Nullable List<GetResourceUsageEmInstance> emInstances;
    private String emWarehouseId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return operations Insights Warehouse Identifier
     * 
     */
    private @Nullable String operationsInsightsWarehouseId;
    /**
     * @return schema name
     * 
     */
    private @Nullable String schemaName;
    /**
     * @return EmInstance Target count
     * 
     */
    private @Nullable Integer targetsCount;

    private GetResourceUsageResult() {}
    /**
     * @return EmInstanceCount
     * 
     */
    public Optional<Integer> emInstanceCount() {
        return Optional.ofNullable(this.emInstanceCount);
    }
    /**
     * @return List of emInstances
     * 
     */
    public List<GetResourceUsageEmInstance> emInstances() {
        return this.emInstances == null ? List.of() : this.emInstances;
    }
    public String emWarehouseId() {
        return this.emWarehouseId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return operations Insights Warehouse Identifier
     * 
     */
    public Optional<String> operationsInsightsWarehouseId() {
        return Optional.ofNullable(this.operationsInsightsWarehouseId);
    }
    /**
     * @return schema name
     * 
     */
    public Optional<String> schemaName() {
        return Optional.ofNullable(this.schemaName);
    }
    /**
     * @return EmInstance Target count
     * 
     */
    public Optional<Integer> targetsCount() {
        return Optional.ofNullable(this.targetsCount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourceUsageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer emInstanceCount;
        private @Nullable List<GetResourceUsageEmInstance> emInstances;
        private String emWarehouseId;
        private @Nullable String id;
        private @Nullable String operationsInsightsWarehouseId;
        private @Nullable String schemaName;
        private @Nullable Integer targetsCount;
        public Builder() {}
        public Builder(GetResourceUsageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.emInstanceCount = defaults.emInstanceCount;
    	      this.emInstances = defaults.emInstances;
    	      this.emWarehouseId = defaults.emWarehouseId;
    	      this.id = defaults.id;
    	      this.operationsInsightsWarehouseId = defaults.operationsInsightsWarehouseId;
    	      this.schemaName = defaults.schemaName;
    	      this.targetsCount = defaults.targetsCount;
        }

        @CustomType.Setter
        public Builder emInstanceCount(@Nullable Integer emInstanceCount) {
            this.emInstanceCount = emInstanceCount;
            return this;
        }
        @CustomType.Setter
        public Builder emInstances(@Nullable List<GetResourceUsageEmInstance> emInstances) {
            this.emInstances = emInstances;
            return this;
        }
        public Builder emInstances(GetResourceUsageEmInstance... emInstances) {
            return emInstances(List.of(emInstances));
        }
        @CustomType.Setter
        public Builder emWarehouseId(String emWarehouseId) {
            this.emWarehouseId = Objects.requireNonNull(emWarehouseId);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder operationsInsightsWarehouseId(@Nullable String operationsInsightsWarehouseId) {
            this.operationsInsightsWarehouseId = operationsInsightsWarehouseId;
            return this;
        }
        @CustomType.Setter
        public Builder schemaName(@Nullable String schemaName) {
            this.schemaName = schemaName;
            return this;
        }
        @CustomType.Setter
        public Builder targetsCount(@Nullable Integer targetsCount) {
            this.targetsCount = targetsCount;
            return this;
        }
        public GetResourceUsageResult build() {
            final var o = new GetResourceUsageResult();
            o.emInstanceCount = emInstanceCount;
            o.emInstances = emInstances;
            o.emWarehouseId = emWarehouseId;
            o.id = id;
            o.operationsInsightsWarehouseId = operationsInsightsWarehouseId;
            o.schemaName = schemaName;
            o.targetsCount = targetsCount;
            return o;
        }
    }
}
