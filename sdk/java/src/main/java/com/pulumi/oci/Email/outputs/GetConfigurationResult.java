// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Email.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetConfigurationResult {
    /**
     * @return The root compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (same as the tenancy OCID)
     * 
     */
    private String compartmentId;
    /**
     * @return Endpoint used to submit emails via the HTTP email submission API
     * 
     */
    private String httpSubmitEndpoint;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Endpoint used to submit emails via the standard SMTP submission protocol. Note that TLS 1.2 and standard SMTP authentication is required for submission.
     * 
     */
    private String smtpSubmitEndpoint;

    private GetConfigurationResult() {}
    /**
     * @return The root compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) (same as the tenancy OCID)
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Endpoint used to submit emails via the HTTP email submission API
     * 
     */
    public String httpSubmitEndpoint() {
        return this.httpSubmitEndpoint;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Endpoint used to submit emails via the standard SMTP submission protocol. Note that TLS 1.2 and standard SMTP authentication is required for submission.
     * 
     */
    public String smtpSubmitEndpoint() {
        return this.smtpSubmitEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String httpSubmitEndpoint;
        private String id;
        private String smtpSubmitEndpoint;
        public Builder() {}
        public Builder(GetConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.httpSubmitEndpoint = defaults.httpSubmitEndpoint;
    	      this.id = defaults.id;
    	      this.smtpSubmitEndpoint = defaults.smtpSubmitEndpoint;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetConfigurationResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder httpSubmitEndpoint(String httpSubmitEndpoint) {
            if (httpSubmitEndpoint == null) {
              throw new MissingRequiredPropertyException("GetConfigurationResult", "httpSubmitEndpoint");
            }
            this.httpSubmitEndpoint = httpSubmitEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConfigurationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder smtpSubmitEndpoint(String smtpSubmitEndpoint) {
            if (smtpSubmitEndpoint == null) {
              throw new MissingRequiredPropertyException("GetConfigurationResult", "smtpSubmitEndpoint");
            }
            this.smtpSubmitEndpoint = smtpSubmitEndpoint;
            return this;
        }
        public GetConfigurationResult build() {
            final var _resultValue = new GetConfigurationResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.httpSubmitEndpoint = httpSubmitEndpoint;
            _resultValue.id = id;
            _resultValue.smtpSubmitEndpoint = smtpSubmitEndpoint;
            return _resultValue;
        }
    }
}
