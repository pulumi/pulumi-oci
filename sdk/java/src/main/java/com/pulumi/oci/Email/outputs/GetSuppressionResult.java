// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Email.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSuppressionResult {
    /**
     * @return The OCID of the compartment to contain the suppression. Since suppressions are at the customer level, this must be the tenancy OCID.
     * 
     */
    private String compartmentId;
    /**
     * @return The email address of the suppression.
     * 
     */
    private String emailAddress;
    /**
     * @return The specific error message returned by a system that resulted in the suppression. This message is usually an SMTP error code with additional descriptive text. Not provided for all types of suppressions.
     * 
     */
    private String errorDetail;
    /**
     * @return DNS name of the source of the error that caused the suppression. Will be set to either the remote-mta or reporting-mta field from a delivery status notification (RFC 3464) when available. Not provided for all types of suppressions, and not always known.
     * 
     */
    private String errorSource;
    /**
     * @return The unique OCID of the suppression.
     * 
     */
    private String id;
    /**
     * @return The value of the Message-ID header from the email that triggered a suppression. This value is as defined in RFC 5322 section 3.6.4, excluding angle-brackets. Not provided for all types of suppressions.
     * 
     */
    private String messageId;
    /**
     * @return The reason that the email address was suppressed. For more information on the types of bounces, see [Suppression List](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
     * 
     */
    private String reason;
    private String suppressionId;
    /**
     * @return The date and time a recipient&#39;s email address was added to the suppression list, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeCreated;
    /**
     * @return The last date and time the suppression prevented submission in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeLastSuppressed;

    private GetSuppressionResult() {}
    /**
     * @return The OCID of the compartment to contain the suppression. Since suppressions are at the customer level, this must be the tenancy OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The email address of the suppression.
     * 
     */
    public String emailAddress() {
        return this.emailAddress;
    }
    /**
     * @return The specific error message returned by a system that resulted in the suppression. This message is usually an SMTP error code with additional descriptive text. Not provided for all types of suppressions.
     * 
     */
    public String errorDetail() {
        return this.errorDetail;
    }
    /**
     * @return DNS name of the source of the error that caused the suppression. Will be set to either the remote-mta or reporting-mta field from a delivery status notification (RFC 3464) when available. Not provided for all types of suppressions, and not always known.
     * 
     */
    public String errorSource() {
        return this.errorSource;
    }
    /**
     * @return The unique OCID of the suppression.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The value of the Message-ID header from the email that triggered a suppression. This value is as defined in RFC 5322 section 3.6.4, excluding angle-brackets. Not provided for all types of suppressions.
     * 
     */
    public String messageId() {
        return this.messageId;
    }
    /**
     * @return The reason that the email address was suppressed. For more information on the types of bounces, see [Suppression List](https://docs.cloud.oracle.com/iaas/Content/Email/Concepts/overview.htm#components).
     * 
     */
    public String reason() {
        return this.reason;
    }
    public String suppressionId() {
        return this.suppressionId;
    }
    /**
     * @return The date and time a recipient&#39;s email address was added to the suppression list, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The last date and time the suppression prevented submission in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeLastSuppressed() {
        return this.timeLastSuppressed;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSuppressionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String emailAddress;
        private String errorDetail;
        private String errorSource;
        private String id;
        private String messageId;
        private String reason;
        private String suppressionId;
        private String timeCreated;
        private String timeLastSuppressed;
        public Builder() {}
        public Builder(GetSuppressionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.emailAddress = defaults.emailAddress;
    	      this.errorDetail = defaults.errorDetail;
    	      this.errorSource = defaults.errorSource;
    	      this.id = defaults.id;
    	      this.messageId = defaults.messageId;
    	      this.reason = defaults.reason;
    	      this.suppressionId = defaults.suppressionId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastSuppressed = defaults.timeLastSuppressed;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSuppressionResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder emailAddress(String emailAddress) {
            if (emailAddress == null) {
              throw new MissingRequiredPropertyException("GetSuppressionResult", "emailAddress");
            }
            this.emailAddress = emailAddress;
            return this;
        }
        @CustomType.Setter
        public Builder errorDetail(String errorDetail) {
            if (errorDetail == null) {
              throw new MissingRequiredPropertyException("GetSuppressionResult", "errorDetail");
            }
            this.errorDetail = errorDetail;
            return this;
        }
        @CustomType.Setter
        public Builder errorSource(String errorSource) {
            if (errorSource == null) {
              throw new MissingRequiredPropertyException("GetSuppressionResult", "errorSource");
            }
            this.errorSource = errorSource;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSuppressionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder messageId(String messageId) {
            if (messageId == null) {
              throw new MissingRequiredPropertyException("GetSuppressionResult", "messageId");
            }
            this.messageId = messageId;
            return this;
        }
        @CustomType.Setter
        public Builder reason(String reason) {
            if (reason == null) {
              throw new MissingRequiredPropertyException("GetSuppressionResult", "reason");
            }
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder suppressionId(String suppressionId) {
            if (suppressionId == null) {
              throw new MissingRequiredPropertyException("GetSuppressionResult", "suppressionId");
            }
            this.suppressionId = suppressionId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetSuppressionResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSuppressed(String timeLastSuppressed) {
            if (timeLastSuppressed == null) {
              throw new MissingRequiredPropertyException("GetSuppressionResult", "timeLastSuppressed");
            }
            this.timeLastSuppressed = timeLastSuppressed;
            return this;
        }
        public GetSuppressionResult build() {
            final var _resultValue = new GetSuppressionResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.emailAddress = emailAddress;
            _resultValue.errorDetail = errorDetail;
            _resultValue.errorSource = errorSource;
            _resultValue.id = id;
            _resultValue.messageId = messageId;
            _resultValue.reason = reason;
            _resultValue.suppressionId = suppressionId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeLastSuppressed = timeLastSuppressed;
            return _resultValue;
        }
    }
}
