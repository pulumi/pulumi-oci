// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FileStorage.inputs.ExportExportOptionArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExportArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExportArgs Empty = new ExportArgs();

    /**
     * (Updatable) Export options for the new export. If left unspecified, defaults to:
     * [ { &#34;source&#34; : &#34;0.0.0.0/0&#34;, &#34;requirePrivilegedSourcePort&#34; : false, &#34;access&#34;: &#34;READ_WRITE&#34;, &#34;identitySquash&#34;: &#34;NONE&#34;, &#34;anonymousUid&#34;: 65534, &#34;anonymousGid&#34;: 65534, &#34;isAnonymousAccessAllowed&#34;: false, &#34;allowedAuth&#34;: [&#34;SYS&#34;] } ]
     * 
     * **Note:** Mount targets do not have Internet-routable IP addresses.  Therefore they will not be reachable from the Internet, even if an associated `ClientOptions` item has a source of `0.0.0.0/0`.
     * 
     * **If set to the empty array then the export will not be visible to any clients.**
     * 
     * The export&#39;s `exportOptions` can be changed after creation using the `UpdateExport` operation.
     * 
     */
    @Import(name="exportOptions")
    private @Nullable Output<List<ExportExportOptionArgs>> exportOptions;

    /**
     * @return (Updatable) Export options for the new export. If left unspecified, defaults to:
     * [ { &#34;source&#34; : &#34;0.0.0.0/0&#34;, &#34;requirePrivilegedSourcePort&#34; : false, &#34;access&#34;: &#34;READ_WRITE&#34;, &#34;identitySquash&#34;: &#34;NONE&#34;, &#34;anonymousUid&#34;: 65534, &#34;anonymousGid&#34;: 65534, &#34;isAnonymousAccessAllowed&#34;: false, &#34;allowedAuth&#34;: [&#34;SYS&#34;] } ]
     * 
     * **Note:** Mount targets do not have Internet-routable IP addresses.  Therefore they will not be reachable from the Internet, even if an associated `ClientOptions` item has a source of `0.0.0.0/0`.
     * 
     * **If set to the empty array then the export will not be visible to any clients.**
     * 
     * The export&#39;s `exportOptions` can be changed after creation using the `UpdateExport` operation.
     * 
     */
    public Optional<Output<List<ExportExportOptionArgs>>> exportOptions() {
        return Optional.ofNullable(this.exportOptions);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export&#39;s export set.
     * 
     */
    @Import(name="exportSetId", required=true)
    private Output<String> exportSetId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export&#39;s export set.
     * 
     */
    public Output<String> exportSetId() {
        return this.exportSetId;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export&#39;s file system.
     * 
     */
    @Import(name="fileSystemId", required=true)
    private Output<String> fileSystemId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export&#39;s file system.
     * 
     */
    public Output<String> fileSystemId() {
        return this.fileSystemId;
    }

    /**
     * (Updatable) Whether or not the export should use ID mapping for Unix groups rather than the group list provided within an NFS request&#39;s RPC header. When this flag is true the Unix UID from the RPC header is used to retrieve the list of secondary groups from a the ID mapping subsystem. The primary GID is always taken from the RPC header. If ID mapping is not configured, incorrectly configured, unavailable, or cannot be used to determine a list of secondary groups then an empty secondary group list is used for authorization. If the number of groups exceeds the limit of 256 groups, the list retrieved from LDAP is truncated to the first 256 groups read.
     * 
     */
    @Import(name="isIdmapGroupsForSysAuth")
    private @Nullable Output<Boolean> isIdmapGroupsForSysAuth;

    /**
     * @return (Updatable) Whether or not the export should use ID mapping for Unix groups rather than the group list provided within an NFS request&#39;s RPC header. When this flag is true the Unix UID from the RPC header is used to retrieve the list of secondary groups from a the ID mapping subsystem. The primary GID is always taken from the RPC header. If ID mapping is not configured, incorrectly configured, unavailable, or cannot be used to determine a list of secondary groups then an empty secondary group list is used for authorization. If the number of groups exceeds the limit of 256 groups, the list retrieved from LDAP is truncated to the first 256 groups read.
     * 
     */
    public Optional<Output<Boolean>> isIdmapGroupsForSysAuth() {
        return Optional.ofNullable(this.isIdmapGroupsForSysAuth);
    }

    /**
     * Path used to access the associated file system.
     * 
     * Avoid entering confidential information.
     * 
     * Example: `/mediafiles`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="path", required=true)
    private Output<String> path;

    /**
     * @return Path used to access the associated file system.
     * 
     * Avoid entering confidential information.
     * 
     * Example: `/mediafiles`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> path() {
        return this.path;
    }

    private ExportArgs() {}

    private ExportArgs(ExportArgs $) {
        this.exportOptions = $.exportOptions;
        this.exportSetId = $.exportSetId;
        this.fileSystemId = $.fileSystemId;
        this.isIdmapGroupsForSysAuth = $.isIdmapGroupsForSysAuth;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExportArgs $;

        public Builder() {
            $ = new ExportArgs();
        }

        public Builder(ExportArgs defaults) {
            $ = new ExportArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exportOptions (Updatable) Export options for the new export. If left unspecified, defaults to:
         * [ { &#34;source&#34; : &#34;0.0.0.0/0&#34;, &#34;requirePrivilegedSourcePort&#34; : false, &#34;access&#34;: &#34;READ_WRITE&#34;, &#34;identitySquash&#34;: &#34;NONE&#34;, &#34;anonymousUid&#34;: 65534, &#34;anonymousGid&#34;: 65534, &#34;isAnonymousAccessAllowed&#34;: false, &#34;allowedAuth&#34;: [&#34;SYS&#34;] } ]
         * 
         * **Note:** Mount targets do not have Internet-routable IP addresses.  Therefore they will not be reachable from the Internet, even if an associated `ClientOptions` item has a source of `0.0.0.0/0`.
         * 
         * **If set to the empty array then the export will not be visible to any clients.**
         * 
         * The export&#39;s `exportOptions` can be changed after creation using the `UpdateExport` operation.
         * 
         * @return builder
         * 
         */
        public Builder exportOptions(@Nullable Output<List<ExportExportOptionArgs>> exportOptions) {
            $.exportOptions = exportOptions;
            return this;
        }

        /**
         * @param exportOptions (Updatable) Export options for the new export. If left unspecified, defaults to:
         * [ { &#34;source&#34; : &#34;0.0.0.0/0&#34;, &#34;requirePrivilegedSourcePort&#34; : false, &#34;access&#34;: &#34;READ_WRITE&#34;, &#34;identitySquash&#34;: &#34;NONE&#34;, &#34;anonymousUid&#34;: 65534, &#34;anonymousGid&#34;: 65534, &#34;isAnonymousAccessAllowed&#34;: false, &#34;allowedAuth&#34;: [&#34;SYS&#34;] } ]
         * 
         * **Note:** Mount targets do not have Internet-routable IP addresses.  Therefore they will not be reachable from the Internet, even if an associated `ClientOptions` item has a source of `0.0.0.0/0`.
         * 
         * **If set to the empty array then the export will not be visible to any clients.**
         * 
         * The export&#39;s `exportOptions` can be changed after creation using the `UpdateExport` operation.
         * 
         * @return builder
         * 
         */
        public Builder exportOptions(List<ExportExportOptionArgs> exportOptions) {
            return exportOptions(Output.of(exportOptions));
        }

        /**
         * @param exportOptions (Updatable) Export options for the new export. If left unspecified, defaults to:
         * [ { &#34;source&#34; : &#34;0.0.0.0/0&#34;, &#34;requirePrivilegedSourcePort&#34; : false, &#34;access&#34;: &#34;READ_WRITE&#34;, &#34;identitySquash&#34;: &#34;NONE&#34;, &#34;anonymousUid&#34;: 65534, &#34;anonymousGid&#34;: 65534, &#34;isAnonymousAccessAllowed&#34;: false, &#34;allowedAuth&#34;: [&#34;SYS&#34;] } ]
         * 
         * **Note:** Mount targets do not have Internet-routable IP addresses.  Therefore they will not be reachable from the Internet, even if an associated `ClientOptions` item has a source of `0.0.0.0/0`.
         * 
         * **If set to the empty array then the export will not be visible to any clients.**
         * 
         * The export&#39;s `exportOptions` can be changed after creation using the `UpdateExport` operation.
         * 
         * @return builder
         * 
         */
        public Builder exportOptions(ExportExportOptionArgs... exportOptions) {
            return exportOptions(List.of(exportOptions));
        }

        /**
         * @param exportSetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export&#39;s export set.
         * 
         * @return builder
         * 
         */
        public Builder exportSetId(Output<String> exportSetId) {
            $.exportSetId = exportSetId;
            return this;
        }

        /**
         * @param exportSetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export&#39;s export set.
         * 
         * @return builder
         * 
         */
        public Builder exportSetId(String exportSetId) {
            return exportSetId(Output.of(exportSetId));
        }

        /**
         * @param fileSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export&#39;s file system.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemId(Output<String> fileSystemId) {
            $.fileSystemId = fileSystemId;
            return this;
        }

        /**
         * @param fileSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this export&#39;s file system.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemId(String fileSystemId) {
            return fileSystemId(Output.of(fileSystemId));
        }

        /**
         * @param isIdmapGroupsForSysAuth (Updatable) Whether or not the export should use ID mapping for Unix groups rather than the group list provided within an NFS request&#39;s RPC header. When this flag is true the Unix UID from the RPC header is used to retrieve the list of secondary groups from a the ID mapping subsystem. The primary GID is always taken from the RPC header. If ID mapping is not configured, incorrectly configured, unavailable, or cannot be used to determine a list of secondary groups then an empty secondary group list is used for authorization. If the number of groups exceeds the limit of 256 groups, the list retrieved from LDAP is truncated to the first 256 groups read.
         * 
         * @return builder
         * 
         */
        public Builder isIdmapGroupsForSysAuth(@Nullable Output<Boolean> isIdmapGroupsForSysAuth) {
            $.isIdmapGroupsForSysAuth = isIdmapGroupsForSysAuth;
            return this;
        }

        /**
         * @param isIdmapGroupsForSysAuth (Updatable) Whether or not the export should use ID mapping for Unix groups rather than the group list provided within an NFS request&#39;s RPC header. When this flag is true the Unix UID from the RPC header is used to retrieve the list of secondary groups from a the ID mapping subsystem. The primary GID is always taken from the RPC header. If ID mapping is not configured, incorrectly configured, unavailable, or cannot be used to determine a list of secondary groups then an empty secondary group list is used for authorization. If the number of groups exceeds the limit of 256 groups, the list retrieved from LDAP is truncated to the first 256 groups read.
         * 
         * @return builder
         * 
         */
        public Builder isIdmapGroupsForSysAuth(Boolean isIdmapGroupsForSysAuth) {
            return isIdmapGroupsForSysAuth(Output.of(isIdmapGroupsForSysAuth));
        }

        /**
         * @param path Path used to access the associated file system.
         * 
         * Avoid entering confidential information.
         * 
         * Example: `/mediafiles`
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path used to access the associated file system.
         * 
         * Avoid entering confidential information.
         * 
         * Example: `/mediafiles`
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public ExportArgs build() {
            if ($.exportSetId == null) {
                throw new MissingRequiredPropertyException("ExportArgs", "exportSetId");
            }
            if ($.fileSystemId == null) {
                throw new MissingRequiredPropertyException("ExportArgs", "fileSystemId");
            }
            if ($.path == null) {
                throw new MissingRequiredPropertyException("ExportArgs", "path");
            }
            return $;
        }
    }

}
