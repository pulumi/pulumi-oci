// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FileStorage.inputs.GetFileSystemQuotaRulesFilter;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFileSystemQuotaRulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFileSystemQuotaRulesPlainArgs Empty = new GetFileSystemQuotaRulesPlainArgs();

    /**
     * An option to only display the users or groups that violate their quota rules. If `areViolatorsOnly` is false, the list result will display all the quota and usage report. If `areViolatorsOnly` is true, the list result will only display the quota and usage report for the users or groups that violate their quota rules.
     * 
     */
    @Import(name="areViolatorsOnly")
    private @Nullable Boolean areViolatorsOnly;

    /**
     * @return An option to only display the users or groups that violate their quota rules. If `areViolatorsOnly` is false, the list result will display all the quota and usage report. If `areViolatorsOnly` is true, the list result will only display the quota and usage report for the users or groups that violate their quota rules.
     * 
     */
    public Optional<Boolean> areViolatorsOnly() {
        return Optional.ofNullable(this.areViolatorsOnly);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     * 
     */
    @Import(name="fileSystemId", required=true)
    private String fileSystemId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     * 
     */
    public String fileSystemId() {
        return this.fileSystemId;
    }

    @Import(name="filters")
    private @Nullable List<GetFileSystemQuotaRulesFilter> filters;

    public Optional<List<GetFileSystemQuotaRulesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
     * 
     */
    @Import(name="principalId")
    private @Nullable Integer principalId;

    /**
     * @return An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
     * 
     */
    public Optional<Integer> principalId() {
        return Optional.ofNullable(this.principalId);
    }

    /**
     * The type of the owner of this quota rule and usage.
     * 
     */
    @Import(name="principalType", required=true)
    private String principalType;

    /**
     * @return The type of the owner of this quota rule and usage.
     * 
     */
    public String principalType() {
        return this.principalType;
    }

    private GetFileSystemQuotaRulesPlainArgs() {}

    private GetFileSystemQuotaRulesPlainArgs(GetFileSystemQuotaRulesPlainArgs $) {
        this.areViolatorsOnly = $.areViolatorsOnly;
        this.fileSystemId = $.fileSystemId;
        this.filters = $.filters;
        this.principalId = $.principalId;
        this.principalType = $.principalType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFileSystemQuotaRulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFileSystemQuotaRulesPlainArgs $;

        public Builder() {
            $ = new GetFileSystemQuotaRulesPlainArgs();
        }

        public Builder(GetFileSystemQuotaRulesPlainArgs defaults) {
            $ = new GetFileSystemQuotaRulesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param areViolatorsOnly An option to only display the users or groups that violate their quota rules. If `areViolatorsOnly` is false, the list result will display all the quota and usage report. If `areViolatorsOnly` is true, the list result will only display the quota and usage report for the users or groups that violate their quota rules.
         * 
         * @return builder
         * 
         */
        public Builder areViolatorsOnly(@Nullable Boolean areViolatorsOnly) {
            $.areViolatorsOnly = areViolatorsOnly;
            return this;
        }

        /**
         * @param fileSystemId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemId(String fileSystemId) {
            $.fileSystemId = fileSystemId;
            return this;
        }

        public Builder filters(@Nullable List<GetFileSystemQuotaRulesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetFileSystemQuotaRulesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param principalId An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
         * 
         * @return builder
         * 
         */
        public Builder principalId(@Nullable Integer principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param principalType The type of the owner of this quota rule and usage.
         * 
         * @return builder
         * 
         */
        public Builder principalType(String principalType) {
            $.principalType = principalType;
            return this;
        }

        public GetFileSystemQuotaRulesPlainArgs build() {
            if ($.fileSystemId == null) {
                throw new MissingRequiredPropertyException("GetFileSystemQuotaRulesPlainArgs", "fileSystemId");
            }
            if ($.principalType == null) {
                throw new MissingRequiredPropertyException("GetFileSystemQuotaRulesPlainArgs", "principalType");
            }
            return $;
        }
    }

}
