// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.FileStorage.outputs.GetExportsExportExportOption;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExportsExport {
    /**
     * @return Policies that apply to NFS requests made through this export. `exportOptions` contains a sequential list of `ClientOptions`. Each `ClientOptions` item defines the export options that are applied to a specified set of clients.
     * 
     */
    private @Nullable List<GetExportsExportExportOption> exportOptions;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export set.
     * 
     */
    private @Nullable String exportSetId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     * 
     */
    private @Nullable String fileSystemId;
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether or not the export should use ID mapping for Unix groups rather than the group list provided within an NFS request&#39;s RPC header. When this flag is true the Unix UID from the RPC header is used to retrieve the list of secondary groups from a the ID mapping subsystem. The primary GID is always taken from the RPC header. If ID mapping is not configured, incorrectly configured, unavailable, or cannot be used to determine a list of secondary groups then an empty secondary group list is used for authorization. If the number of groups exceeds the limit of 256 groups, the list retrieved from LDAP is truncated to the first 256 groups read.
     * 
     */
    private @Nullable Boolean isIdmapGroupsForSysAuth;
    /**
     * @return Path used to access the associated file system.
     * 
     */
    private @Nullable String path;
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the export was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;

    private GetExportsExport() {}
    /**
     * @return Policies that apply to NFS requests made through this export. `exportOptions` contains a sequential list of `ClientOptions`. Each `ClientOptions` item defines the export options that are applied to a specified set of clients.
     * 
     */
    public List<GetExportsExportExportOption> exportOptions() {
        return this.exportOptions == null ? List.of() : this.exportOptions;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the export set.
     * 
     */
    public Optional<String> exportSetId() {
        return Optional.ofNullable(this.exportSetId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     * 
     */
    public Optional<String> fileSystemId() {
        return Optional.ofNullable(this.fileSystemId);
    }
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether or not the export should use ID mapping for Unix groups rather than the group list provided within an NFS request&#39;s RPC header. When this flag is true the Unix UID from the RPC header is used to retrieve the list of secondary groups from a the ID mapping subsystem. The primary GID is always taken from the RPC header. If ID mapping is not configured, incorrectly configured, unavailable, or cannot be used to determine a list of secondary groups then an empty secondary group list is used for authorization. If the number of groups exceeds the limit of 256 groups, the list retrieved from LDAP is truncated to the first 256 groups read.
     * 
     */
    public Optional<Boolean> isIdmapGroupsForSysAuth() {
        return Optional.ofNullable(this.isIdmapGroupsForSysAuth);
    }
    /**
     * @return Path used to access the associated file system.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the export was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExportsExport defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetExportsExportExportOption> exportOptions;
        private @Nullable String exportSetId;
        private @Nullable String fileSystemId;
        private @Nullable String id;
        private @Nullable Boolean isIdmapGroupsForSysAuth;
        private @Nullable String path;
        private @Nullable String state;
        private @Nullable String timeCreated;
        public Builder() {}
        public Builder(GetExportsExport defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exportOptions = defaults.exportOptions;
    	      this.exportSetId = defaults.exportSetId;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.id = defaults.id;
    	      this.isIdmapGroupsForSysAuth = defaults.isIdmapGroupsForSysAuth;
    	      this.path = defaults.path;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder exportOptions(@Nullable List<GetExportsExportExportOption> exportOptions) {
            this.exportOptions = exportOptions;
            return this;
        }
        public Builder exportOptions(GetExportsExportExportOption... exportOptions) {
            return exportOptions(List.of(exportOptions));
        }
        @CustomType.Setter
        public Builder exportSetId(@Nullable String exportSetId) {
            this.exportSetId = exportSetId;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(@Nullable String fileSystemId) {
            this.fileSystemId = fileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isIdmapGroupsForSysAuth(@Nullable Boolean isIdmapGroupsForSysAuth) {
            this.isIdmapGroupsForSysAuth = isIdmapGroupsForSysAuth;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        public GetExportsExport build() {
            final var o = new GetExportsExport();
            o.exportOptions = exportOptions;
            o.exportSetId = exportSetId;
            o.fileSystemId = fileSystemId;
            o.id = id;
            o.isIdmapGroupsForSysAuth = isIdmapGroupsForSysAuth;
            o.path = path;
            o.state = state;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
