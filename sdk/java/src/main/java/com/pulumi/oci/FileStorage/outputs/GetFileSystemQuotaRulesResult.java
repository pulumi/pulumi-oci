// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FileStorage.outputs.GetFileSystemQuotaRulesFilter;
import com.pulumi.oci.FileStorage.outputs.GetFileSystemQuotaRulesQuotaRule;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFileSystemQuotaRulesResult {
    private @Nullable Boolean areViolatorsOnly;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file System.
     * 
     */
    private String fileSystemId;
    private @Nullable List<GetFileSystemQuotaRulesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
     * 
     */
    private @Nullable Integer principalId;
    /**
     * @return The type of the owner of this quota rule and usage.
     * 
     */
    private String principalType;
    /**
     * @return The list of quota_rules.
     * 
     */
    private List<GetFileSystemQuotaRulesQuotaRule> quotaRules;

    private GetFileSystemQuotaRulesResult() {}
    public Optional<Boolean> areViolatorsOnly() {
        return Optional.ofNullable(this.areViolatorsOnly);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file System.
     * 
     */
    public String fileSystemId() {
        return this.fileSystemId;
    }
    public List<GetFileSystemQuotaRulesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An identifier for the owner of this usage and quota rule. Unix-like operating systems use this integer value to identify a user or group to manage access control.
     * 
     */
    public Optional<Integer> principalId() {
        return Optional.ofNullable(this.principalId);
    }
    /**
     * @return The type of the owner of this quota rule and usage.
     * 
     */
    public String principalType() {
        return this.principalType;
    }
    /**
     * @return The list of quota_rules.
     * 
     */
    public List<GetFileSystemQuotaRulesQuotaRule> quotaRules() {
        return this.quotaRules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFileSystemQuotaRulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean areViolatorsOnly;
        private String fileSystemId;
        private @Nullable List<GetFileSystemQuotaRulesFilter> filters;
        private String id;
        private @Nullable Integer principalId;
        private String principalType;
        private List<GetFileSystemQuotaRulesQuotaRule> quotaRules;
        public Builder() {}
        public Builder(GetFileSystemQuotaRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areViolatorsOnly = defaults.areViolatorsOnly;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.principalId = defaults.principalId;
    	      this.principalType = defaults.principalType;
    	      this.quotaRules = defaults.quotaRules;
        }

        @CustomType.Setter
        public Builder areViolatorsOnly(@Nullable Boolean areViolatorsOnly) {

            this.areViolatorsOnly = areViolatorsOnly;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(String fileSystemId) {
            if (fileSystemId == null) {
              throw new MissingRequiredPropertyException("GetFileSystemQuotaRulesResult", "fileSystemId");
            }
            this.fileSystemId = fileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetFileSystemQuotaRulesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetFileSystemQuotaRulesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFileSystemQuotaRulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder principalId(@Nullable Integer principalId) {

            this.principalId = principalId;
            return this;
        }
        @CustomType.Setter
        public Builder principalType(String principalType) {
            if (principalType == null) {
              throw new MissingRequiredPropertyException("GetFileSystemQuotaRulesResult", "principalType");
            }
            this.principalType = principalType;
            return this;
        }
        @CustomType.Setter
        public Builder quotaRules(List<GetFileSystemQuotaRulesQuotaRule> quotaRules) {
            if (quotaRules == null) {
              throw new MissingRequiredPropertyException("GetFileSystemQuotaRulesResult", "quotaRules");
            }
            this.quotaRules = quotaRules;
            return this;
        }
        public Builder quotaRules(GetFileSystemQuotaRulesQuotaRule... quotaRules) {
            return quotaRules(List.of(quotaRules));
        }
        public GetFileSystemQuotaRulesResult build() {
            final var _resultValue = new GetFileSystemQuotaRulesResult();
            _resultValue.areViolatorsOnly = areViolatorsOnly;
            _resultValue.fileSystemId = fileSystemId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.principalId = principalId;
            _resultValue.principalType = principalType;
            _resultValue.quotaRules = quotaRules;
            return _resultValue;
        }
    }
}
