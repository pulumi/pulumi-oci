// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FileStorage.outputs.GetFileSystemsFileSystemLock;
import com.pulumi.oci.FileStorage.outputs.GetFileSystemsFileSystemSourceDetail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFileSystemsFileSystem {
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return Specifies whether the file system is attached to its parent file system.
     * 
     */
    private String cloneAttachStatus;
    /**
     * @return Specifies the total number of children of a file system.
     * 
     */
    private Integer cloneCount;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    private Integer detachCloneTrigger;
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     * 
     */
    private String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that is associated with the file systems.
     * 
     */
    private String filesystemSnapshotPolicyId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    private String id;
    /**
     * @return Specifies whether the file system has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
     * 
     */
    private Boolean isCloneParent;
    /**
     * @return Specifies whether the data has finished copying from the source to the clone. Hydration can take up to several hours to complete depending on the size of the source. The source and clone remain available during hydration, but there may be some performance impact. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm#hydration).
     * 
     */
    private Boolean isHydrated;
    private Boolean isLockOverride;
    /**
     * @return Specifies whether the file system can be used as a target file system for replication. The system sets this value to `true` if the file system is unexported, hasn&#39;t yet been specified as a target file system in any replication resource, and has no user snapshots. After the file system has been specified as a target in a replication, or if the file system contains user snapshots, the system sets this value to `false`. For more information, see [Using Replication](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/using-replication.htm).
     * 
     */
    private Boolean isTargetable;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
     * 
     */
    private String kmsKeyId;
    /**
     * @return Additional information about the current &#39;lifecycleState&#39;.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Locks associated with this resource.
     * 
     */
    private List<GetFileSystemsFileSystemLock> locks;
    /**
     * @return The number of bytes consumed by the file system, including any snapshots. This number reflects the metered size of the file system and is updated asynchronously with respect to updates to the file system. For more information, see [File System Usage and Metering](https://docs.cloud.oracle.com/iaas/Content/File/Concepts/FSutilization.htm).
     * 
     */
    private String meteredBytes;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the replication target associated with the file system. Empty if the file system is not being used as target in a replication.
     * 
     */
    private String replicationTargetId;
    /**
     * @return Source information for the file system.
     * 
     */
    private List<GetFileSystemsFileSystemSourceDetail> sourceDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
     * 
     */
    private String sourceSnapshotId;
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    private String state;
    /**
     * @return The date and time the file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;

    private GetFileSystemsFileSystem() {}
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return Specifies whether the file system is attached to its parent file system.
     * 
     */
    public String cloneAttachStatus() {
        return this.cloneAttachStatus;
    }
    /**
     * @return Specifies the total number of children of a file system.
     * 
     */
    public Integer cloneCount() {
        return this.cloneCount;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    public Integer detachCloneTrigger() {
        return this.detachCloneTrigger;
    }
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that is associated with the file systems.
     * 
     */
    public String filesystemSnapshotPolicyId() {
        return this.filesystemSnapshotPolicyId;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Specifies whether the file system has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
     * 
     */
    public Boolean isCloneParent() {
        return this.isCloneParent;
    }
    /**
     * @return Specifies whether the data has finished copying from the source to the clone. Hydration can take up to several hours to complete depending on the size of the source. The source and clone remain available during hydration, but there may be some performance impact. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm#hydration).
     * 
     */
    public Boolean isHydrated() {
        return this.isHydrated;
    }
    public Boolean isLockOverride() {
        return this.isLockOverride;
    }
    /**
     * @return Specifies whether the file system can be used as a target file system for replication. The system sets this value to `true` if the file system is unexported, hasn&#39;t yet been specified as a target file system in any replication resource, and has no user snapshots. After the file system has been specified as a target in a replication, or if the file system contains user snapshots, the system sets this value to `false`. For more information, see [Using Replication](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/using-replication.htm).
     * 
     */
    public Boolean isTargetable() {
        return this.isTargetable;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return Additional information about the current &#39;lifecycleState&#39;.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Locks associated with this resource.
     * 
     */
    public List<GetFileSystemsFileSystemLock> locks() {
        return this.locks;
    }
    /**
     * @return The number of bytes consumed by the file system, including any snapshots. This number reflects the metered size of the file system and is updated asynchronously with respect to updates to the file system. For more information, see [File System Usage and Metering](https://docs.cloud.oracle.com/iaas/Content/File/Concepts/FSutilization.htm).
     * 
     */
    public String meteredBytes() {
        return this.meteredBytes;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the replication target associated with the file system. Empty if the file system is not being used as target in a replication.
     * 
     */
    public String replicationTargetId() {
        return this.replicationTargetId;
    }
    /**
     * @return Source information for the file system.
     * 
     */
    public List<GetFileSystemsFileSystemSourceDetail> sourceDetails() {
        return this.sourceDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
     * 
     */
    public String sourceSnapshotId() {
        return this.sourceSnapshotId;
    }
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFileSystemsFileSystem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String cloneAttachStatus;
        private Integer cloneCount;
        private String compartmentId;
        private Map<String,String> definedTags;
        private Integer detachCloneTrigger;
        private String displayName;
        private String filesystemSnapshotPolicyId;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isCloneParent;
        private Boolean isHydrated;
        private Boolean isLockOverride;
        private Boolean isTargetable;
        private String kmsKeyId;
        private String lifecycleDetails;
        private List<GetFileSystemsFileSystemLock> locks;
        private String meteredBytes;
        private String replicationTargetId;
        private List<GetFileSystemsFileSystemSourceDetail> sourceDetails;
        private String sourceSnapshotId;
        private String state;
        private String timeCreated;
        public Builder() {}
        public Builder(GetFileSystemsFileSystem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.cloneAttachStatus = defaults.cloneAttachStatus;
    	      this.cloneCount = defaults.cloneCount;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.detachCloneTrigger = defaults.detachCloneTrigger;
    	      this.displayName = defaults.displayName;
    	      this.filesystemSnapshotPolicyId = defaults.filesystemSnapshotPolicyId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isCloneParent = defaults.isCloneParent;
    	      this.isHydrated = defaults.isHydrated;
    	      this.isLockOverride = defaults.isLockOverride;
    	      this.isTargetable = defaults.isTargetable;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.locks = defaults.locks;
    	      this.meteredBytes = defaults.meteredBytes;
    	      this.replicationTargetId = defaults.replicationTargetId;
    	      this.sourceDetails = defaults.sourceDetails;
    	      this.sourceSnapshotId = defaults.sourceSnapshotId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder cloneAttachStatus(String cloneAttachStatus) {
            if (cloneAttachStatus == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "cloneAttachStatus");
            }
            this.cloneAttachStatus = cloneAttachStatus;
            return this;
        }
        @CustomType.Setter
        public Builder cloneCount(Integer cloneCount) {
            if (cloneCount == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "cloneCount");
            }
            this.cloneCount = cloneCount;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder detachCloneTrigger(Integer detachCloneTrigger) {
            if (detachCloneTrigger == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "detachCloneTrigger");
            }
            this.detachCloneTrigger = detachCloneTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filesystemSnapshotPolicyId(String filesystemSnapshotPolicyId) {
            if (filesystemSnapshotPolicyId == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "filesystemSnapshotPolicyId");
            }
            this.filesystemSnapshotPolicyId = filesystemSnapshotPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCloneParent(Boolean isCloneParent) {
            if (isCloneParent == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "isCloneParent");
            }
            this.isCloneParent = isCloneParent;
            return this;
        }
        @CustomType.Setter
        public Builder isHydrated(Boolean isHydrated) {
            if (isHydrated == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "isHydrated");
            }
            this.isHydrated = isHydrated;
            return this;
        }
        @CustomType.Setter
        public Builder isLockOverride(Boolean isLockOverride) {
            if (isLockOverride == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "isLockOverride");
            }
            this.isLockOverride = isLockOverride;
            return this;
        }
        @CustomType.Setter
        public Builder isTargetable(Boolean isTargetable) {
            if (isTargetable == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "isTargetable");
            }
            this.isTargetable = isTargetable;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            if (kmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "kmsKeyId");
            }
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder locks(List<GetFileSystemsFileSystemLock> locks) {
            if (locks == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "locks");
            }
            this.locks = locks;
            return this;
        }
        public Builder locks(GetFileSystemsFileSystemLock... locks) {
            return locks(List.of(locks));
        }
        @CustomType.Setter
        public Builder meteredBytes(String meteredBytes) {
            if (meteredBytes == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "meteredBytes");
            }
            this.meteredBytes = meteredBytes;
            return this;
        }
        @CustomType.Setter
        public Builder replicationTargetId(String replicationTargetId) {
            if (replicationTargetId == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "replicationTargetId");
            }
            this.replicationTargetId = replicationTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDetails(List<GetFileSystemsFileSystemSourceDetail> sourceDetails) {
            if (sourceDetails == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "sourceDetails");
            }
            this.sourceDetails = sourceDetails;
            return this;
        }
        public Builder sourceDetails(GetFileSystemsFileSystemSourceDetail... sourceDetails) {
            return sourceDetails(List.of(sourceDetails));
        }
        @CustomType.Setter
        public Builder sourceSnapshotId(String sourceSnapshotId) {
            if (sourceSnapshotId == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "sourceSnapshotId");
            }
            this.sourceSnapshotId = sourceSnapshotId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetFileSystemsFileSystem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetFileSystemsFileSystem build() {
            final var _resultValue = new GetFileSystemsFileSystem();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.cloneAttachStatus = cloneAttachStatus;
            _resultValue.cloneCount = cloneCount;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.detachCloneTrigger = detachCloneTrigger;
            _resultValue.displayName = displayName;
            _resultValue.filesystemSnapshotPolicyId = filesystemSnapshotPolicyId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isCloneParent = isCloneParent;
            _resultValue.isHydrated = isHydrated;
            _resultValue.isLockOverride = isLockOverride;
            _resultValue.isTargetable = isTargetable;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.locks = locks;
            _resultValue.meteredBytes = meteredBytes;
            _resultValue.replicationTargetId = replicationTargetId;
            _resultValue.sourceDetails = sourceDetails;
            _resultValue.sourceSnapshotId = sourceSnapshotId;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
