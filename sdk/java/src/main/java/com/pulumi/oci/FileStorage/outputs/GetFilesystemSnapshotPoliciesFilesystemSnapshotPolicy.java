// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FileStorage.outputs.GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyLock;
import com.pulumi.oci.FileStorage.outputs.GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicySchedule;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy {
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    private String id;
    private Boolean isLockOverride;
    /**
     * @return Locks associated with this resource.
     * 
     */
    private List<GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyLock> locks;
    /**
     * @return The prefix to apply to all snapshots created by this policy.  Example: `acme`
     * 
     */
    private String policyPrefix;
    /**
     * @return The list of associated snapshot schedules. A maximum of 10 schedules can be associated with a policy.
     * 
     */
    private List<GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicySchedule> schedules;
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. System tags are applied to resources by internal Oracle Cloud Infrastructure services.
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the file system snapshot policy was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;

    private GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy() {}
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean isLockOverride() {
        return this.isLockOverride;
    }
    /**
     * @return Locks associated with this resource.
     * 
     */
    public List<GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyLock> locks() {
        return this.locks;
    }
    /**
     * @return The prefix to apply to all snapshots created by this policy.  Example: `acme`
     * 
     */
    public String policyPrefix() {
        return this.policyPrefix;
    }
    /**
     * @return The list of associated snapshot schedules. A maximum of 10 schedules can be associated with a policy.
     * 
     */
    public List<GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicySchedule> schedules() {
        return this.schedules;
    }
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. System tags are applied to resources by internal Oracle Cloud Infrastructure services.
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the file system snapshot policy was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isLockOverride;
        private List<GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyLock> locks;
        private String policyPrefix;
        private List<GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicySchedule> schedules;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        public Builder() {}
        public Builder(GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isLockOverride = defaults.isLockOverride;
    	      this.locks = defaults.locks;
    	      this.policyPrefix = defaults.policyPrefix;
    	      this.schedules = defaults.schedules;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isLockOverride(Boolean isLockOverride) {
            if (isLockOverride == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "isLockOverride");
            }
            this.isLockOverride = isLockOverride;
            return this;
        }
        @CustomType.Setter
        public Builder locks(List<GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyLock> locks) {
            if (locks == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "locks");
            }
            this.locks = locks;
            return this;
        }
        public Builder locks(GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicyLock... locks) {
            return locks(List.of(locks));
        }
        @CustomType.Setter
        public Builder policyPrefix(String policyPrefix) {
            if (policyPrefix == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "policyPrefix");
            }
            this.policyPrefix = policyPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder schedules(List<GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicySchedule> schedules) {
            if (schedules == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "schedules");
            }
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicySchedule... schedules) {
            return schedules(List.of(schedules));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy build() {
            final var _resultValue = new GetFilesystemSnapshotPoliciesFilesystemSnapshotPolicy();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isLockOverride = isLockOverride;
            _resultValue.locks = locks;
            _resultValue.policyPrefix = policyPrefix;
            _resultValue.schedules = schedules;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
