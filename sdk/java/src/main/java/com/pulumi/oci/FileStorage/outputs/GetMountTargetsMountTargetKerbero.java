// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMountTargetsMountTargetKerbero {
    /**
     * @return Version of the keytab secert in the Vault to use as a backup.
     * 
     */
    private Integer backupKeyTabSecretVersion;
    /**
     * @return Version of the keytab secret in the Vault to use.
     * 
     */
    private Integer currentKeyTabSecretVersion;
    /**
     * @return Specifies whether to enable or disable Kerberos.
     * 
     */
    private Boolean isKerberosEnabled;
    /**
     * @return The Kerberos realm that the mount target will join.
     * 
     */
    private String kerberosRealm;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the keytab secret in the Vault.
     * 
     */
    private String keyTabSecretId;

    private GetMountTargetsMountTargetKerbero() {}
    /**
     * @return Version of the keytab secert in the Vault to use as a backup.
     * 
     */
    public Integer backupKeyTabSecretVersion() {
        return this.backupKeyTabSecretVersion;
    }
    /**
     * @return Version of the keytab secret in the Vault to use.
     * 
     */
    public Integer currentKeyTabSecretVersion() {
        return this.currentKeyTabSecretVersion;
    }
    /**
     * @return Specifies whether to enable or disable Kerberos.
     * 
     */
    public Boolean isKerberosEnabled() {
        return this.isKerberosEnabled;
    }
    /**
     * @return The Kerberos realm that the mount target will join.
     * 
     */
    public String kerberosRealm() {
        return this.kerberosRealm;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the keytab secret in the Vault.
     * 
     */
    public String keyTabSecretId() {
        return this.keyTabSecretId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMountTargetsMountTargetKerbero defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer backupKeyTabSecretVersion;
        private Integer currentKeyTabSecretVersion;
        private Boolean isKerberosEnabled;
        private String kerberosRealm;
        private String keyTabSecretId;
        public Builder() {}
        public Builder(GetMountTargetsMountTargetKerbero defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupKeyTabSecretVersion = defaults.backupKeyTabSecretVersion;
    	      this.currentKeyTabSecretVersion = defaults.currentKeyTabSecretVersion;
    	      this.isKerberosEnabled = defaults.isKerberosEnabled;
    	      this.kerberosRealm = defaults.kerberosRealm;
    	      this.keyTabSecretId = defaults.keyTabSecretId;
        }

        @CustomType.Setter
        public Builder backupKeyTabSecretVersion(Integer backupKeyTabSecretVersion) {
            this.backupKeyTabSecretVersion = Objects.requireNonNull(backupKeyTabSecretVersion);
            return this;
        }
        @CustomType.Setter
        public Builder currentKeyTabSecretVersion(Integer currentKeyTabSecretVersion) {
            this.currentKeyTabSecretVersion = Objects.requireNonNull(currentKeyTabSecretVersion);
            return this;
        }
        @CustomType.Setter
        public Builder isKerberosEnabled(Boolean isKerberosEnabled) {
            this.isKerberosEnabled = Objects.requireNonNull(isKerberosEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder kerberosRealm(String kerberosRealm) {
            this.kerberosRealm = Objects.requireNonNull(kerberosRealm);
            return this;
        }
        @CustomType.Setter
        public Builder keyTabSecretId(String keyTabSecretId) {
            this.keyTabSecretId = Objects.requireNonNull(keyTabSecretId);
            return this;
        }
        public GetMountTargetsMountTargetKerbero build() {
            final var o = new GetMountTargetsMountTargetKerbero();
            o.backupKeyTabSecretVersion = backupKeyTabSecretVersion;
            o.currentKeyTabSecretVersion = currentKeyTabSecretVersion;
            o.isKerberosEnabled = isKerberosEnabled;
            o.kerberosRealm = kerberosRealm;
            o.keyTabSecretId = keyTabSecretId;
            return o;
        }
    }
}
