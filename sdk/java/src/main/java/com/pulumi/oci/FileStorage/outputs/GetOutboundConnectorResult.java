// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.FileStorage.outputs.GetOutboundConnectorEndpoint;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetOutboundConnectorResult {
    /**
     * @return The availability domain the outbound connector is in. May be unset as a blank or NULL value.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return The LDAP Distinguished Name of the account.
     * 
     */
    private String bindDistinguishedName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the outbound connector.
     * 
     */
    private String compartmentId;
    /**
     * @return The account type of this outbound connector.
     * 
     */
    private String connectorType;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My outbound connector`
     * 
     */
    private String displayName;
    /**
     * @return Array of server endpoints to use when connecting with the LDAP bind account.
     * 
     */
    private List<GetOutboundConnectorEndpoint> endpoints;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the outbound connector.
     * 
     */
    private String id;
    private String outboundConnectorId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the password for the LDAP bind account in the Vault.
     * 
     */
    private String passwordSecretId;
    /**
     * @return Version of the password secret in the Vault to use.
     * 
     */
    private Integer passwordSecretVersion;
    /**
     * @return The current state of this outbound connector.
     * 
     */
    private String state;
    /**
     * @return The date and time the outbound connector was created in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;

    private GetOutboundConnectorResult() {}
    /**
     * @return The availability domain the outbound connector is in. May be unset as a blank or NULL value.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The LDAP Distinguished Name of the account.
     * 
     */
    public String bindDistinguishedName() {
        return this.bindDistinguishedName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the outbound connector.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The account type of this outbound connector.
     * 
     */
    public String connectorType() {
        return this.connectorType;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My outbound connector`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Array of server endpoints to use when connecting with the LDAP bind account.
     * 
     */
    public List<GetOutboundConnectorEndpoint> endpoints() {
        return this.endpoints;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the outbound connector.
     * 
     */
    public String id() {
        return this.id;
    }
    public String outboundConnectorId() {
        return this.outboundConnectorId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the password for the LDAP bind account in the Vault.
     * 
     */
    public String passwordSecretId() {
        return this.passwordSecretId;
    }
    /**
     * @return Version of the password secret in the Vault to use.
     * 
     */
    public Integer passwordSecretVersion() {
        return this.passwordSecretVersion;
    }
    /**
     * @return The current state of this outbound connector.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the outbound connector was created in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOutboundConnectorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String bindDistinguishedName;
        private String compartmentId;
        private String connectorType;
        private Map<String,Object> definedTags;
        private String displayName;
        private List<GetOutboundConnectorEndpoint> endpoints;
        private Map<String,Object> freeformTags;
        private String id;
        private String outboundConnectorId;
        private String passwordSecretId;
        private Integer passwordSecretVersion;
        private String state;
        private String timeCreated;
        public Builder() {}
        public Builder(GetOutboundConnectorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.bindDistinguishedName = defaults.bindDistinguishedName;
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectorType = defaults.connectorType;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.endpoints = defaults.endpoints;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.outboundConnectorId = defaults.outboundConnectorId;
    	      this.passwordSecretId = defaults.passwordSecretId;
    	      this.passwordSecretVersion = defaults.passwordSecretVersion;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        @CustomType.Setter
        public Builder bindDistinguishedName(String bindDistinguishedName) {
            this.bindDistinguishedName = Objects.requireNonNull(bindDistinguishedName);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder connectorType(String connectorType) {
            this.connectorType = Objects.requireNonNull(connectorType);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder endpoints(List<GetOutboundConnectorEndpoint> endpoints) {
            this.endpoints = Objects.requireNonNull(endpoints);
            return this;
        }
        public Builder endpoints(GetOutboundConnectorEndpoint... endpoints) {
            return endpoints(List.of(endpoints));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder outboundConnectorId(String outboundConnectorId) {
            this.outboundConnectorId = Objects.requireNonNull(outboundConnectorId);
            return this;
        }
        @CustomType.Setter
        public Builder passwordSecretId(String passwordSecretId) {
            this.passwordSecretId = Objects.requireNonNull(passwordSecretId);
            return this;
        }
        @CustomType.Setter
        public Builder passwordSecretVersion(Integer passwordSecretVersion) {
            this.passwordSecretVersion = Objects.requireNonNull(passwordSecretVersion);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public GetOutboundConnectorResult build() {
            final var _resultValue = new GetOutboundConnectorResult();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.bindDistinguishedName = bindDistinguishedName;
            _resultValue.compartmentId = compartmentId;
            _resultValue.connectorType = connectorType;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.endpoints = endpoints;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.outboundConnectorId = outboundConnectorId;
            _resultValue.passwordSecretId = passwordSecretId;
            _resultValue.passwordSecretVersion = passwordSecretVersion;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
