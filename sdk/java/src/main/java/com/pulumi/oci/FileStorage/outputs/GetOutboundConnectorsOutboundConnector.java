// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.FileStorage.outputs.GetOutboundConnectorsOutboundConnectorEndpoint;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOutboundConnectorsOutboundConnector {
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return The LDAP Distinguished Name of the account.
     * 
     */
    private @Nullable String bindDistinguishedName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The account type of this outbound connector.
     * 
     */
    private @Nullable String connectorType;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Array of server endpoints to use when connecting with the LDAP bind account.
     * 
     */
    private @Nullable List<GetOutboundConnectorsOutboundConnectorEndpoint> endpoints;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    private @Nullable String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the password for the LDAP bind account in the Vault.
     * 
     */
    private @Nullable String passwordSecretId;
    /**
     * @return Version of the password secret in the Vault to use.
     * 
     */
    private @Nullable Integer passwordSecretVersion;
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the outbound connector was created in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;

    private GetOutboundConnectorsOutboundConnector() {}
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return The LDAP Distinguished Name of the account.
     * 
     */
    public Optional<String> bindDistinguishedName() {
        return Optional.ofNullable(this.bindDistinguishedName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The account type of this outbound connector.
     * 
     */
    public Optional<String> connectorType() {
        return Optional.ofNullable(this.connectorType);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Array of server endpoints to use when connecting with the LDAP bind account.
     * 
     */
    public List<GetOutboundConnectorsOutboundConnectorEndpoint> endpoints() {
        return this.endpoints == null ? List.of() : this.endpoints;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the password for the LDAP bind account in the Vault.
     * 
     */
    public Optional<String> passwordSecretId() {
        return Optional.ofNullable(this.passwordSecretId);
    }
    /**
     * @return Version of the password secret in the Vault to use.
     * 
     */
    public Optional<Integer> passwordSecretVersion() {
        return Optional.ofNullable(this.passwordSecretVersion);
    }
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the outbound connector was created in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOutboundConnectorsOutboundConnector defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private @Nullable String bindDistinguishedName;
        private @Nullable String compartmentId;
        private @Nullable String connectorType;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable List<GetOutboundConnectorsOutboundConnectorEndpoint> endpoints;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String passwordSecretId;
        private @Nullable Integer passwordSecretVersion;
        private @Nullable String state;
        private @Nullable String timeCreated;
        public Builder() {}
        public Builder(GetOutboundConnectorsOutboundConnector defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.bindDistinguishedName = defaults.bindDistinguishedName;
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectorType = defaults.connectorType;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.endpoints = defaults.endpoints;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.passwordSecretId = defaults.passwordSecretId;
    	      this.passwordSecretVersion = defaults.passwordSecretVersion;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder bindDistinguishedName(@Nullable String bindDistinguishedName) {
            this.bindDistinguishedName = bindDistinguishedName;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder connectorType(@Nullable String connectorType) {
            this.connectorType = connectorType;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder endpoints(@Nullable List<GetOutboundConnectorsOutboundConnectorEndpoint> endpoints) {
            this.endpoints = endpoints;
            return this;
        }
        public Builder endpoints(GetOutboundConnectorsOutboundConnectorEndpoint... endpoints) {
            return endpoints(List.of(endpoints));
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder passwordSecretId(@Nullable String passwordSecretId) {
            this.passwordSecretId = passwordSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder passwordSecretVersion(@Nullable Integer passwordSecretVersion) {
            this.passwordSecretVersion = passwordSecretVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        public GetOutboundConnectorsOutboundConnector build() {
            final var o = new GetOutboundConnectorsOutboundConnector();
            o.availabilityDomain = availabilityDomain;
            o.bindDistinguishedName = bindDistinguishedName;
            o.compartmentId = compartmentId;
            o.connectorType = connectorType;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.endpoints = endpoints;
            o.freeformTags = freeformTags;
            o.id = id;
            o.passwordSecretId = passwordSecretId;
            o.passwordSecretVersion = passwordSecretVersion;
            o.state = state;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
