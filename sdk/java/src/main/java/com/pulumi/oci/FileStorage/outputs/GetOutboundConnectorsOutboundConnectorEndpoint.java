// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOutboundConnectorsOutboundConnectorEndpoint {
    /**
     * @return Name of the DNS server.
     * 
     */
    private @Nullable String hostname;
    /**
     * @return Port of the DNS server.
     * 
     */
    private @Nullable String port;

    private GetOutboundConnectorsOutboundConnectorEndpoint() {}
    /**
     * @return Name of the DNS server.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return Port of the DNS server.
     * 
     */
    public Optional<String> port() {
        return Optional.ofNullable(this.port);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOutboundConnectorsOutboundConnectorEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String hostname;
        private @Nullable String port;
        public Builder() {}
        public Builder(GetOutboundConnectorsOutboundConnectorEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder hostname(@Nullable String hostname) {
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable String port) {
            this.port = port;
            return this;
        }
        public GetOutboundConnectorsOutboundConnectorEndpoint build() {
            final var o = new GetOutboundConnectorsOutboundConnectorEndpoint();
            o.hostname = hostname;
            o.port = port;
            return o;
        }
    }
}
