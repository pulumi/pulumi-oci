// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReplicationTargetResult {
    /**
     * @return The availability domain the replication target is in. Must be in the same availability domain as the target file system. Example: `Uocm:PHX-AD-1`
     * 
     */
    private @Nullable String availabilityDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the replication.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Percentage progress of the current replication cycle.
     * 
     */
    private @Nullable String deltaProgress;
    /**
     * @return The current state of the snapshot during replication operations.
     * 
     */
    private @Nullable String deltaStatus;
    /**
     * @return A user-friendly name. This name is same as the replication display name for the associated resource. Example: `My Replication`
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last snapshot snapshot which was completely applied to the target file system. Empty while the initial snapshot is being applied.
     * 
     */
    private @Nullable String lastSnapshotId;
    /**
     * @return Additional information about the current `lifecycleState`.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The snapshotTime of the most recent recoverable replication snapshot in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. Example: `2021-04-04T20:01:29.100Z`
     * 
     */
    private @Nullable String recoveryPointTime;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of replication.
     * 
     */
    private @Nullable String replicationId;
    private String replicationTargetId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of source filesystem.
     * 
     */
    private @Nullable String sourceId;
    /**
     * @return The current state of this replication.
     * 
     */
    private @Nullable String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of target filesystem.
     * 
     */
    private @Nullable String targetId;
    /**
     * @return The date and time the replication target was created in target region. in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. Example: `2021-01-04T20:01:29.100Z`
     * 
     */
    private @Nullable String timeCreated;

    private GetReplicationTargetResult() {}
    /**
     * @return The availability domain the replication target is in. Must be in the same availability domain as the target file system. Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the replication.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Percentage progress of the current replication cycle.
     * 
     */
    public Optional<String> deltaProgress() {
        return Optional.ofNullable(this.deltaProgress);
    }
    /**
     * @return The current state of the snapshot during replication operations.
     * 
     */
    public Optional<String> deltaStatus() {
        return Optional.ofNullable(this.deltaStatus);
    }
    /**
     * @return A user-friendly name. This name is same as the replication display name for the associated resource. Example: `My Replication`
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last snapshot snapshot which was completely applied to the target file system. Empty while the initial snapshot is being applied.
     * 
     */
    public Optional<String> lastSnapshotId() {
        return Optional.ofNullable(this.lastSnapshotId);
    }
    /**
     * @return Additional information about the current `lifecycleState`.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The snapshotTime of the most recent recoverable replication snapshot in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. Example: `2021-04-04T20:01:29.100Z`
     * 
     */
    public Optional<String> recoveryPointTime() {
        return Optional.ofNullable(this.recoveryPointTime);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of replication.
     * 
     */
    public Optional<String> replicationId() {
        return Optional.ofNullable(this.replicationId);
    }
    public String replicationTargetId() {
        return this.replicationTargetId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of source filesystem.
     * 
     */
    public Optional<String> sourceId() {
        return Optional.ofNullable(this.sourceId);
    }
    /**
     * @return The current state of this replication.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of target filesystem.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    /**
     * @return The date and time the replication target was created in target region. in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. Example: `2021-01-04T20:01:29.100Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicationTargetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityDomain;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String deltaProgress;
        private @Nullable String deltaStatus;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lastSnapshotId;
        private @Nullable String lifecycleDetails;
        private @Nullable String recoveryPointTime;
        private @Nullable String replicationId;
        private String replicationTargetId;
        private @Nullable String sourceId;
        private @Nullable String state;
        private @Nullable String targetId;
        private @Nullable String timeCreated;
        public Builder() {}
        public Builder(GetReplicationTargetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deltaProgress = defaults.deltaProgress;
    	      this.deltaStatus = defaults.deltaStatus;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lastSnapshotId = defaults.lastSnapshotId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.recoveryPointTime = defaults.recoveryPointTime;
    	      this.replicationId = defaults.replicationId;
    	      this.replicationTargetId = defaults.replicationTargetId;
    	      this.sourceId = defaults.sourceId;
    	      this.state = defaults.state;
    	      this.targetId = defaults.targetId;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deltaProgress(@Nullable String deltaProgress) {
            this.deltaProgress = deltaProgress;
            return this;
        }
        @CustomType.Setter
        public Builder deltaStatus(@Nullable String deltaStatus) {
            this.deltaStatus = deltaStatus;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastSnapshotId(@Nullable String lastSnapshotId) {
            this.lastSnapshotId = lastSnapshotId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryPointTime(@Nullable String recoveryPointTime) {
            this.recoveryPointTime = recoveryPointTime;
            return this;
        }
        @CustomType.Setter
        public Builder replicationId(@Nullable String replicationId) {
            this.replicationId = replicationId;
            return this;
        }
        @CustomType.Setter
        public Builder replicationTargetId(String replicationTargetId) {
            this.replicationTargetId = Objects.requireNonNull(replicationTargetId);
            return this;
        }
        @CustomType.Setter
        public Builder sourceId(@Nullable String sourceId) {
            this.sourceId = sourceId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        public GetReplicationTargetResult build() {
            final var o = new GetReplicationTargetResult();
            o.availabilityDomain = availabilityDomain;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.deltaProgress = deltaProgress;
            o.deltaStatus = deltaStatus;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lastSnapshotId = lastSnapshotId;
            o.lifecycleDetails = lifecycleDetails;
            o.recoveryPointTime = recoveryPointTime;
            o.replicationId = replicationId;
            o.replicationTargetId = replicationTargetId;
            o.sourceId = sourceId;
            o.state = state;
            o.targetId = targetId;
            o.timeCreated = timeCreated;
            return o;
        }
    }
}
