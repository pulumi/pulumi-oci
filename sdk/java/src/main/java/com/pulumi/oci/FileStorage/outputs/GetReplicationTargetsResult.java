// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.FileStorage.outputs.GetReplicationTargetsFilter;
import com.pulumi.oci.FileStorage.outputs.GetReplicationTargetsReplicationTarget;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReplicationTargetsResult {
    /**
     * @return The availability domain the replication target is in. Must be in the same availability domain as the target file system. Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the replication.
     * 
     */
    private String compartmentId;
    /**
     * @return A user-friendly name. This name is same as the replication display name for the associated resource. Example: `My Replication`
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetReplicationTargetsFilter> filters;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the replication target.
     * 
     */
    private @Nullable String id;
    /**
     * @return The list of replication_targets.
     * 
     */
    private List<GetReplicationTargetsReplicationTarget> replicationTargets;
    /**
     * @return The current state of this replication.
     * 
     */
    private @Nullable String state;

    private GetReplicationTargetsResult() {}
    /**
     * @return The availability domain the replication target is in. Must be in the same availability domain as the target file system. Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the replication.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user-friendly name. This name is same as the replication display name for the associated resource. Example: `My Replication`
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetReplicationTargetsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the replication target.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The list of replication_targets.
     * 
     */
    public List<GetReplicationTargetsReplicationTarget> replicationTargets() {
        return this.replicationTargets;
    }
    /**
     * @return The current state of this replication.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicationTargetsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetReplicationTargetsFilter> filters;
        private @Nullable String id;
        private List<GetReplicationTargetsReplicationTarget> replicationTargets;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetReplicationTargetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.replicationTargets = defaults.replicationTargets;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetReplicationTargetsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetReplicationTargetsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder replicationTargets(List<GetReplicationTargetsReplicationTarget> replicationTargets) {
            this.replicationTargets = Objects.requireNonNull(replicationTargets);
            return this;
        }
        public Builder replicationTargets(GetReplicationTargetsReplicationTarget... replicationTargets) {
            return replicationTargets(List.of(replicationTargets));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetReplicationTargetsResult build() {
            final var o = new GetReplicationTargetsResult();
            o.availabilityDomain = availabilityDomain;
            o.compartmentId = compartmentId;
            o.displayName = displayName;
            o.filters = filters;
            o.id = id;
            o.replicationTargets = replicationTargets;
            o.state = state;
            return o;
        }
    }
}
