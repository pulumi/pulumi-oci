// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetReplicationsReplication {
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Percentage progress of the current replication cycle.
     * 
     */
    private String deltaProgress;
    /**
     * @return The current state of the snapshot during replication operations.
     * 
     */
    private String deltaStatus;
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    private String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last snapshot that has been replicated completely. Empty if the copy of the initial snapshot is not complete.
     * 
     */
    private String lastSnapshotId;
    /**
     * @return Additional information about the current &#39;lifecycleState&#39;.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The [`snapshotTime`](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Snapshot/snapshotTime) of the most recent recoverable replication snapshot in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. Example: `2021-04-04T20:01:29.100Z`
     * 
     */
    private String recoveryPointTime;
    /**
     * @return Duration in minutes between replication snapshots.
     * 
     */
    private String replicationInterval;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [`ReplicationTarget`](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/ReplicationTarget).
     * 
     */
    private String replicationTargetId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source file system.
     * 
     */
    private String sourceId;
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    private String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target file system.
     * 
     */
    private String targetId;
    /**
     * @return The date and time the replication was created in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2021-01-04T20:01:29.100Z`
     * 
     */
    private String timeCreated;

    private GetReplicationsReplication() {}
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Percentage progress of the current replication cycle.
     * 
     */
    public String deltaProgress() {
        return this.deltaProgress;
    }
    /**
     * @return The current state of the snapshot during replication operations.
     * 
     */
    public String deltaStatus() {
        return this.deltaStatus;
    }
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable.  Example: `My resource`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last snapshot that has been replicated completely. Empty if the copy of the initial snapshot is not complete.
     * 
     */
    public String lastSnapshotId() {
        return this.lastSnapshotId;
    }
    /**
     * @return Additional information about the current &#39;lifecycleState&#39;.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The [`snapshotTime`](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Snapshot/snapshotTime) of the most recent recoverable replication snapshot in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. Example: `2021-04-04T20:01:29.100Z`
     * 
     */
    public String recoveryPointTime() {
        return this.recoveryPointTime;
    }
    /**
     * @return Duration in minutes between replication snapshots.
     * 
     */
    public String replicationInterval() {
        return this.replicationInterval;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [`ReplicationTarget`](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/ReplicationTarget).
     * 
     */
    public String replicationTargetId() {
        return this.replicationTargetId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source file system.
     * 
     */
    public String sourceId() {
        return this.sourceId;
    }
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target file system.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The date and time the replication was created in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2021-01-04T20:01:29.100Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicationsReplication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String deltaProgress;
        private String deltaStatus;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lastSnapshotId;
        private String lifecycleDetails;
        private String recoveryPointTime;
        private String replicationInterval;
        private String replicationTargetId;
        private String sourceId;
        private String state;
        private String targetId;
        private String timeCreated;
        public Builder() {}
        public Builder(GetReplicationsReplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deltaProgress = defaults.deltaProgress;
    	      this.deltaStatus = defaults.deltaStatus;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lastSnapshotId = defaults.lastSnapshotId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.recoveryPointTime = defaults.recoveryPointTime;
    	      this.replicationInterval = defaults.replicationInterval;
    	      this.replicationTargetId = defaults.replicationTargetId;
    	      this.sourceId = defaults.sourceId;
    	      this.state = defaults.state;
    	      this.targetId = defaults.targetId;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deltaProgress(String deltaProgress) {
            if (deltaProgress == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "deltaProgress");
            }
            this.deltaProgress = deltaProgress;
            return this;
        }
        @CustomType.Setter
        public Builder deltaStatus(String deltaStatus) {
            if (deltaStatus == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "deltaStatus");
            }
            this.deltaStatus = deltaStatus;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastSnapshotId(String lastSnapshotId) {
            if (lastSnapshotId == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "lastSnapshotId");
            }
            this.lastSnapshotId = lastSnapshotId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryPointTime(String recoveryPointTime) {
            if (recoveryPointTime == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "recoveryPointTime");
            }
            this.recoveryPointTime = recoveryPointTime;
            return this;
        }
        @CustomType.Setter
        public Builder replicationInterval(String replicationInterval) {
            if (replicationInterval == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "replicationInterval");
            }
            this.replicationInterval = replicationInterval;
            return this;
        }
        @CustomType.Setter
        public Builder replicationTargetId(String replicationTargetId) {
            if (replicationTargetId == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "replicationTargetId");
            }
            this.replicationTargetId = replicationTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceId(String sourceId) {
            if (sourceId == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "sourceId");
            }
            this.sourceId = sourceId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetReplicationsReplication", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetReplicationsReplication build() {
            final var _resultValue = new GetReplicationsReplication();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.deltaProgress = deltaProgress;
            _resultValue.deltaStatus = deltaStatus;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lastSnapshotId = lastSnapshotId;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.recoveryPointTime = recoveryPointTime;
            _resultValue.replicationInterval = replicationInterval;
            _resultValue.replicationTargetId = replicationTargetId;
            _resultValue.sourceId = sourceId;
            _resultValue.state = state;
            _resultValue.targetId = targetId;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
