// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FileStorage.outputs.GetSnapshotsFilter;
import com.pulumi.oci.FileStorage.outputs.GetSnapshotsSnapshot;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSnapshotsResult {
    private @Nullable String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system from which the snapshot was created.
     * 
     */
    private @Nullable String fileSystemId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that created this snapshot.
     * 
     */
    private @Nullable String filesystemSnapshotPolicyId;
    private @Nullable List<GetSnapshotsFilter> filters;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot.
     * 
     */
    private @Nullable String id;
    /**
     * @return The list of snapshots.
     * 
     */
    private List<GetSnapshotsSnapshot> snapshots;
    /**
     * @return The current state of the snapshot.
     * 
     */
    private @Nullable String state;

    private GetSnapshotsResult() {}
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system from which the snapshot was created.
     * 
     */
    public Optional<String> fileSystemId() {
        return Optional.ofNullable(this.fileSystemId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that created this snapshot.
     * 
     */
    public Optional<String> filesystemSnapshotPolicyId() {
        return Optional.ofNullable(this.filesystemSnapshotPolicyId);
    }
    public List<GetSnapshotsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the snapshot.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The list of snapshots.
     * 
     */
    public List<GetSnapshotsSnapshot> snapshots() {
        return this.snapshots;
    }
    /**
     * @return The current state of the snapshot.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String fileSystemId;
        private @Nullable String filesystemSnapshotPolicyId;
        private @Nullable List<GetSnapshotsFilter> filters;
        private @Nullable String id;
        private List<GetSnapshotsSnapshot> snapshots;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetSnapshotsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.filesystemSnapshotPolicyId = defaults.filesystemSnapshotPolicyId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.snapshots = defaults.snapshots;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(@Nullable String fileSystemId) {

            this.fileSystemId = fileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder filesystemSnapshotPolicyId(@Nullable String filesystemSnapshotPolicyId) {

            this.filesystemSnapshotPolicyId = filesystemSnapshotPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSnapshotsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSnapshotsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder snapshots(List<GetSnapshotsSnapshot> snapshots) {
            if (snapshots == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsResult", "snapshots");
            }
            this.snapshots = snapshots;
            return this;
        }
        public Builder snapshots(GetSnapshotsSnapshot... snapshots) {
            return snapshots(List.of(snapshots));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetSnapshotsResult build() {
            final var _resultValue = new GetSnapshotsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.fileSystemId = fileSystemId;
            _resultValue.filesystemSnapshotPolicyId = filesystemSnapshotPolicyId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.snapshots = snapshots;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
