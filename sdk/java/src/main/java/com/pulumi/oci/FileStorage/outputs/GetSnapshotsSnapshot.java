// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FileStorage.outputs.GetSnapshotsSnapshotLock;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSnapshotsSnapshot {
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The time when this snapshot will be deleted.
     * 
     */
    private String expirationTime;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     * 
     */
    private String fileSystemId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that is used to create the snapshots.
     * 
     */
    private String filesystemSnapshotPolicyId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    private String id;
    /**
     * @return Specifies whether the snapshot has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
     * 
     */
    private Boolean isCloneSource;
    private Boolean isLockOverride;
    /**
     * @return Additional information about the current `lifecycleState`.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Locks associated with this resource.
     * 
     */
    private List<GetSnapshotsSnapshotLock> locks;
    /**
     * @return Name of the snapshot. This value is immutable.
     * 
     */
    private String name;
    /**
     * @return An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) identifying the parent from which this snapshot was cloned. If this snapshot was not cloned, then the `provenanceId` is the same as the snapshot `id` value. If this snapshot was cloned, then the `provenanceId` value is the parent&#39;s `provenanceId`. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
     * 
     */
    private String provenanceId;
    /**
     * @return The date and time the snapshot was taken, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. This value might be the same or different from `timeCreated` depending on the following factors:
     * * If the snapshot is created in the original file system directory.
     * * If the snapshot is cloned from a file system.
     * * If the snapshot is replicated from a file system.
     * 
     */
    private String snapshotTime;
    /**
     * @return Specifies the generation type of the snapshot.
     * 
     */
    private String snapshotType;
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. System tags are applied to resources by internal Oracle Cloud Infrastructure services.
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the snapshot was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;

    private GetSnapshotsSnapshot() {}
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The time when this snapshot will be deleted.
     * 
     */
    public String expirationTime() {
        return this.expirationTime;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     * 
     */
    public String fileSystemId() {
        return this.fileSystemId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system snapshot policy that is used to create the snapshots.
     * 
     */
    public String filesystemSnapshotPolicyId() {
        return this.filesystemSnapshotPolicyId;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Filter results by [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm). Must be an OCID of the correct type for the resouce type.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Specifies whether the snapshot has been cloned. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
     * 
     */
    public Boolean isCloneSource() {
        return this.isCloneSource;
    }
    public Boolean isLockOverride() {
        return this.isLockOverride;
    }
    /**
     * @return Additional information about the current `lifecycleState`.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Locks associated with this resource.
     * 
     */
    public List<GetSnapshotsSnapshotLock> locks() {
        return this.locks;
    }
    /**
     * @return Name of the snapshot. This value is immutable.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return An [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) identifying the parent from which this snapshot was cloned. If this snapshot was not cloned, then the `provenanceId` is the same as the snapshot `id` value. If this snapshot was cloned, then the `provenanceId` value is the parent&#39;s `provenanceId`. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningFS.htm).
     * 
     */
    public String provenanceId() {
        return this.provenanceId;
    }
    /**
     * @return The date and time the snapshot was taken, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. This value might be the same or different from `timeCreated` depending on the following factors:
     * * If the snapshot is created in the original file system directory.
     * * If the snapshot is cloned from a file system.
     * * If the snapshot is replicated from a file system.
     * 
     */
    public String snapshotTime() {
        return this.snapshotTime;
    }
    /**
     * @return Specifies the generation type of the snapshot.
     * 
     */
    public String snapshotType() {
        return this.snapshotType;
    }
    /**
     * @return Filter results by the specified lifecycle state. Must be a valid state for the resource type.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. System tags are applied to resources by internal Oracle Cloud Infrastructure services.
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the snapshot was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotsSnapshot defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> definedTags;
        private String expirationTime;
        private String fileSystemId;
        private String filesystemSnapshotPolicyId;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isCloneSource;
        private Boolean isLockOverride;
        private String lifecycleDetails;
        private List<GetSnapshotsSnapshotLock> locks;
        private String name;
        private String provenanceId;
        private String snapshotTime;
        private String snapshotType;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        public Builder() {}
        public Builder(GetSnapshotsSnapshot defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definedTags = defaults.definedTags;
    	      this.expirationTime = defaults.expirationTime;
    	      this.fileSystemId = defaults.fileSystemId;
    	      this.filesystemSnapshotPolicyId = defaults.filesystemSnapshotPolicyId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isCloneSource = defaults.isCloneSource;
    	      this.isLockOverride = defaults.isLockOverride;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.locks = defaults.locks;
    	      this.name = defaults.name;
    	      this.provenanceId = defaults.provenanceId;
    	      this.snapshotTime = defaults.snapshotTime;
    	      this.snapshotType = defaults.snapshotType;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder expirationTime(String expirationTime) {
            if (expirationTime == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "expirationTime");
            }
            this.expirationTime = expirationTime;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemId(String fileSystemId) {
            if (fileSystemId == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "fileSystemId");
            }
            this.fileSystemId = fileSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder filesystemSnapshotPolicyId(String filesystemSnapshotPolicyId) {
            if (filesystemSnapshotPolicyId == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "filesystemSnapshotPolicyId");
            }
            this.filesystemSnapshotPolicyId = filesystemSnapshotPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCloneSource(Boolean isCloneSource) {
            if (isCloneSource == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "isCloneSource");
            }
            this.isCloneSource = isCloneSource;
            return this;
        }
        @CustomType.Setter
        public Builder isLockOverride(Boolean isLockOverride) {
            if (isLockOverride == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "isLockOverride");
            }
            this.isLockOverride = isLockOverride;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder locks(List<GetSnapshotsSnapshotLock> locks) {
            if (locks == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "locks");
            }
            this.locks = locks;
            return this;
        }
        public Builder locks(GetSnapshotsSnapshotLock... locks) {
            return locks(List.of(locks));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder provenanceId(String provenanceId) {
            if (provenanceId == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "provenanceId");
            }
            this.provenanceId = provenanceId;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotTime(String snapshotTime) {
            if (snapshotTime == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "snapshotTime");
            }
            this.snapshotTime = snapshotTime;
            return this;
        }
        @CustomType.Setter
        public Builder snapshotType(String snapshotType) {
            if (snapshotType == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "snapshotType");
            }
            this.snapshotType = snapshotType;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetSnapshotsSnapshot", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetSnapshotsSnapshot build() {
            final var _resultValue = new GetSnapshotsSnapshot();
            _resultValue.definedTags = definedTags;
            _resultValue.expirationTime = expirationTime;
            _resultValue.fileSystemId = fileSystemId;
            _resultValue.filesystemSnapshotPolicyId = filesystemSnapshotPolicyId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isCloneSource = isCloneSource;
            _resultValue.isLockOverride = isLockOverride;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.locks = locks;
            _resultValue.name = name;
            _resultValue.provenanceId = provenanceId;
            _resultValue.snapshotTime = snapshotTime;
            _resultValue.snapshotType = snapshotType;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
