// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class OutboundConnectorEndpoint {
    /**
     * @return Name of the DNS server.
     * 
     */
    private String hostname;
    /**
     * @return Port of the DNS server.
     * 
     */
    private String port;

    private OutboundConnectorEndpoint() {}
    /**
     * @return Name of the DNS server.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return Port of the DNS server.
     * 
     */
    public String port() {
        return this.port;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OutboundConnectorEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String hostname;
        private String port;
        public Builder() {}
        public Builder(OutboundConnectorEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.port = defaults.port;
        }

        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("OutboundConnectorEndpoint", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder port(String port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("OutboundConnectorEndpoint", "port");
            }
            this.port = port;
            return this;
        }
        public OutboundConnectorEndpoint build() {
            final var _resultValue = new OutboundConnectorEndpoint();
            _resultValue.hostname = hostname;
            _resultValue.port = port;
            return _resultValue;
        }
    }
}
