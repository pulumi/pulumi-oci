// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.CompliancePolicyRulePatchSelectionArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.CompliancePolicyRuleProductVersionArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CompliancePolicyRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CompliancePolicyRuleArgs Empty = new CompliancePolicyRuleArgs();

    /**
     * Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
     * 
     */
    @Import(name="compliancePolicyId", required=true)
    private Output<String> compliancePolicyId;

    /**
     * @return Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
     * 
     */
    public Output<String> compliancePolicyId() {
        return this.compliancePolicyId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn&#39;t report the product as noncompliant when patch is not applied.
     * 
     */
    @Import(name="gracePeriod")
    private @Nullable Output<String> gracePeriod;

    /**
     * @return (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn&#39;t report the product as noncompliant when patch is not applied.
     * 
     */
    public Optional<Output<String>> gracePeriod() {
        return Optional.ofNullable(this.gracePeriod);
    }

    /**
     * (Updatable) Patch Selection Details
     * 
     */
    @Import(name="patchSelection", required=true)
    private Output<CompliancePolicyRulePatchSelectionArgs> patchSelection;

    /**
     * @return (Updatable) Patch Selection Details
     * 
     */
    public Output<CompliancePolicyRulePatchSelectionArgs> patchSelection() {
        return this.patchSelection;
    }

    /**
     * (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
     * 
     */
    @Import(name="patchTypeIds", required=true)
    private Output<List<String>> patchTypeIds;

    /**
     * @return (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
     * 
     */
    public Output<List<String>> patchTypeIds() {
        return this.patchTypeIds;
    }

    /**
     * (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
     * 
     */
    @Import(name="productVersion", required=true)
    private Output<CompliancePolicyRuleProductVersionArgs> productVersion;

    /**
     * @return (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
     * 
     */
    public Output<CompliancePolicyRuleProductVersionArgs> productVersion() {
        return this.productVersion;
    }

    /**
     * (Updatable) Severity to which this CompliancePolicyRule applies.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="severities")
    private @Nullable Output<List<String>> severities;

    /**
     * @return (Updatable) Severity to which this CompliancePolicyRule applies.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<List<String>>> severities() {
        return Optional.ofNullable(this.severities);
    }

    private CompliancePolicyRuleArgs() {}

    private CompliancePolicyRuleArgs(CompliancePolicyRuleArgs $) {
        this.compliancePolicyId = $.compliancePolicyId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.gracePeriod = $.gracePeriod;
        this.patchSelection = $.patchSelection;
        this.patchTypeIds = $.patchTypeIds;
        this.productVersion = $.productVersion;
        this.severities = $.severities;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CompliancePolicyRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CompliancePolicyRuleArgs $;

        public Builder() {
            $ = new CompliancePolicyRuleArgs();
        }

        public Builder(CompliancePolicyRuleArgs defaults) {
            $ = new CompliancePolicyRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compliancePolicyId Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
         * 
         * @return builder
         * 
         */
        public Builder compliancePolicyId(Output<String> compliancePolicyId) {
            $.compliancePolicyId = compliancePolicyId;
            return this;
        }

        /**
         * @param compliancePolicyId Unique OCID of the CompliancePolicy this CompliancePolicyRule belongs to.
         * 
         * @return builder
         * 
         */
        public Builder compliancePolicyId(String compliancePolicyId) {
            return compliancePolicyId(Output.of(compliancePolicyId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param gracePeriod (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn&#39;t report the product as noncompliant when patch is not applied.
         * 
         * @return builder
         * 
         */
        public Builder gracePeriod(@Nullable Output<String> gracePeriod) {
            $.gracePeriod = gracePeriod;
            return this;
        }

        /**
         * @param gracePeriod (Updatable) Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn&#39;t report the product as noncompliant when patch is not applied.
         * 
         * @return builder
         * 
         */
        public Builder gracePeriod(String gracePeriod) {
            return gracePeriod(Output.of(gracePeriod));
        }

        /**
         * @param patchSelection (Updatable) Patch Selection Details
         * 
         * @return builder
         * 
         */
        public Builder patchSelection(Output<CompliancePolicyRulePatchSelectionArgs> patchSelection) {
            $.patchSelection = patchSelection;
            return this;
        }

        /**
         * @param patchSelection (Updatable) Patch Selection Details
         * 
         * @return builder
         * 
         */
        public Builder patchSelection(CompliancePolicyRulePatchSelectionArgs patchSelection) {
            return patchSelection(Output.of(patchSelection));
        }

        /**
         * @param patchTypeIds (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
         * 
         * @return builder
         * 
         */
        public Builder patchTypeIds(Output<List<String>> patchTypeIds) {
            $.patchTypeIds = patchTypeIds;
            return this;
        }

        /**
         * @param patchTypeIds (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
         * 
         * @return builder
         * 
         */
        public Builder patchTypeIds(List<String> patchTypeIds) {
            return patchTypeIds(Output.of(patchTypeIds));
        }

        /**
         * @param patchTypeIds (Updatable) PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
         * 
         * @return builder
         * 
         */
        public Builder patchTypeIds(String... patchTypeIds) {
            return patchTypeIds(List.of(patchTypeIds));
        }

        /**
         * @param productVersion (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
         * 
         * @return builder
         * 
         */
        public Builder productVersion(Output<CompliancePolicyRuleProductVersionArgs> productVersion) {
            $.productVersion = productVersion;
            return this;
        }

        /**
         * @param productVersion (Updatable) A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
         * 
         * @return builder
         * 
         */
        public Builder productVersion(CompliancePolicyRuleProductVersionArgs productVersion) {
            return productVersion(Output.of(productVersion));
        }

        /**
         * @param severities (Updatable) Severity to which this CompliancePolicyRule applies.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder severities(@Nullable Output<List<String>> severities) {
            $.severities = severities;
            return this;
        }

        /**
         * @param severities (Updatable) Severity to which this CompliancePolicyRule applies.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder severities(List<String> severities) {
            return severities(Output.of(severities));
        }

        /**
         * @param severities (Updatable) Severity to which this CompliancePolicyRule applies.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder severities(String... severities) {
            return severities(List.of(severities));
        }

        public CompliancePolicyRuleArgs build() {
            if ($.compliancePolicyId == null) {
                throw new MissingRequiredPropertyException("CompliancePolicyRuleArgs", "compliancePolicyId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("CompliancePolicyRuleArgs", "displayName");
            }
            if ($.patchSelection == null) {
                throw new MissingRequiredPropertyException("CompliancePolicyRuleArgs", "patchSelection");
            }
            if ($.patchTypeIds == null) {
                throw new MissingRequiredPropertyException("CompliancePolicyRuleArgs", "patchTypeIds");
            }
            if ($.productVersion == null) {
                throw new MissingRequiredPropertyException("CompliancePolicyRuleArgs", "productVersion");
            }
            return $;
        }
    }

}
