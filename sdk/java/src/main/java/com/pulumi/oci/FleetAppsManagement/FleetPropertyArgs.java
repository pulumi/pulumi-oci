// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FleetPropertyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetPropertyArgs Empty = new FleetPropertyArgs();

    /**
     * Tenancy OCID
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return Tenancy OCID
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * Unique Fleet identifier.
     * 
     */
    @Import(name="fleetId", required=true)
    private Output<String> fleetId;

    /**
     * @return Unique Fleet identifier.
     * 
     */
    public Output<String> fleetId() {
        return this.fleetId;
    }

    /**
     * OCID referring to global level metadata property.
     * 
     */
    @Import(name="propertyId", required=true)
    private Output<String> propertyId;

    /**
     * @return OCID referring to global level metadata property.
     * 
     */
    public Output<String> propertyId() {
        return this.propertyId;
    }

    /**
     * (Updatable) Value of the Property.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) Value of the Property.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private FleetPropertyArgs() {}

    private FleetPropertyArgs(FleetPropertyArgs $) {
        this.compartmentId = $.compartmentId;
        this.fleetId = $.fleetId;
        this.propertyId = $.propertyId;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetPropertyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetPropertyArgs $;

        public Builder() {
            $ = new FleetPropertyArgs();
        }

        public Builder(FleetPropertyArgs defaults) {
            $ = new FleetPropertyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId Tenancy OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Tenancy OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param fleetId Unique Fleet identifier.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(Output<String> fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param fleetId Unique Fleet identifier.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            return fleetId(Output.of(fleetId));
        }

        /**
         * @param propertyId OCID referring to global level metadata property.
         * 
         * @return builder
         * 
         */
        public Builder propertyId(Output<String> propertyId) {
            $.propertyId = propertyId;
            return this;
        }

        /**
         * @param propertyId OCID referring to global level metadata property.
         * 
         * @return builder
         * 
         */
        public Builder propertyId(String propertyId) {
            return propertyId(Output.of(propertyId));
        }

        /**
         * @param value (Updatable) Value of the Property.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) Value of the Property.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public FleetPropertyArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("FleetPropertyArgs", "compartmentId");
            }
            if ($.fleetId == null) {
                throw new MissingRequiredPropertyException("FleetPropertyArgs", "fleetId");
            }
            if ($.propertyId == null) {
                throw new MissingRequiredPropertyException("FleetPropertyArgs", "propertyId");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("FleetPropertyArgs", "value");
            }
            return $;
        }
    }

}
