// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MaintenanceWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final MaintenanceWindowArgs Empty = new MaintenanceWindowArgs();

    /**
     * Compartment OCID
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return Compartment OCID
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Duration of the maintenance window. Specify how long the maintenance window remains open.
     * 
     */
    @Import(name="duration", required=true)
    private Output<String> duration;

    /**
     * @return (Updatable) Duration of the maintenance window. Specify how long the maintenance window remains open.
     * 
     */
    public Output<String> duration() {
        return this.duration;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Does the maintenenace window cause outage? An outage indicates whether a maintenance window can consider operations that require downtime. It means a period when the application is not accessible.
     * 
     */
    @Import(name="isOutage")
    private @Nullable Output<Boolean> isOutage;

    /**
     * @return (Updatable) Does the maintenenace window cause outage? An outage indicates whether a maintenance window can consider operations that require downtime. It means a period when the application is not accessible.
     * 
     */
    public Optional<Output<Boolean>> isOutage() {
        return Optional.ofNullable(this.isOutage);
    }

    /**
     * (Updatable) Is this a recurring maintenance window?
     * 
     */
    @Import(name="isRecurring")
    private @Nullable Output<Boolean> isRecurring;

    /**
     * @return (Updatable) Is this a recurring maintenance window?
     * 
     */
    public Optional<Output<Boolean>> isRecurring() {
        return Optional.ofNullable(this.isRecurring);
    }

    /**
     * (Updatable) Recurrence rule specification if maintenance window recurring. Specify the frequency of running the maintenance window.
     * 
     */
    @Import(name="recurrences")
    private @Nullable Output<String> recurrences;

    /**
     * @return (Updatable) Recurrence rule specification if maintenance window recurring. Specify the frequency of running the maintenance window.
     * 
     */
    public Optional<Output<String>> recurrences() {
        return Optional.ofNullable(this.recurrences);
    }

    /**
     * (Updatable) Specify the date and time of the day that the maintenance window starts.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timeScheduleStart", required=true)
    private Output<String> timeScheduleStart;

    /**
     * @return (Updatable) Specify the date and time of the day that the maintenance window starts.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> timeScheduleStart() {
        return this.timeScheduleStart;
    }

    private MaintenanceWindowArgs() {}

    private MaintenanceWindowArgs(MaintenanceWindowArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.duration = $.duration;
        this.freeformTags = $.freeformTags;
        this.isOutage = $.isOutage;
        this.isRecurring = $.isRecurring;
        this.recurrences = $.recurrences;
        this.timeScheduleStart = $.timeScheduleStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaintenanceWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaintenanceWindowArgs $;

        public Builder() {
            $ = new MaintenanceWindowArgs();
        }

        public Builder(MaintenanceWindowArgs defaults) {
            $ = new MaintenanceWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId Compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param duration (Updatable) Duration of the maintenance window. Specify how long the maintenance window remains open.
         * 
         * @return builder
         * 
         */
        public Builder duration(Output<String> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration (Updatable) Duration of the maintenance window. Specify how long the maintenance window remains open.
         * 
         * @return builder
         * 
         */
        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isOutage (Updatable) Does the maintenenace window cause outage? An outage indicates whether a maintenance window can consider operations that require downtime. It means a period when the application is not accessible.
         * 
         * @return builder
         * 
         */
        public Builder isOutage(@Nullable Output<Boolean> isOutage) {
            $.isOutage = isOutage;
            return this;
        }

        /**
         * @param isOutage (Updatable) Does the maintenenace window cause outage? An outage indicates whether a maintenance window can consider operations that require downtime. It means a period when the application is not accessible.
         * 
         * @return builder
         * 
         */
        public Builder isOutage(Boolean isOutage) {
            return isOutage(Output.of(isOutage));
        }

        /**
         * @param isRecurring (Updatable) Is this a recurring maintenance window?
         * 
         * @return builder
         * 
         */
        public Builder isRecurring(@Nullable Output<Boolean> isRecurring) {
            $.isRecurring = isRecurring;
            return this;
        }

        /**
         * @param isRecurring (Updatable) Is this a recurring maintenance window?
         * 
         * @return builder
         * 
         */
        public Builder isRecurring(Boolean isRecurring) {
            return isRecurring(Output.of(isRecurring));
        }

        /**
         * @param recurrences (Updatable) Recurrence rule specification if maintenance window recurring. Specify the frequency of running the maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder recurrences(@Nullable Output<String> recurrences) {
            $.recurrences = recurrences;
            return this;
        }

        /**
         * @param recurrences (Updatable) Recurrence rule specification if maintenance window recurring. Specify the frequency of running the maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder recurrences(String recurrences) {
            return recurrences(Output.of(recurrences));
        }

        /**
         * @param timeScheduleStart (Updatable) Specify the date and time of the day that the maintenance window starts.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeScheduleStart(Output<String> timeScheduleStart) {
            $.timeScheduleStart = timeScheduleStart;
            return this;
        }

        /**
         * @param timeScheduleStart (Updatable) Specify the date and time of the day that the maintenance window starts.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeScheduleStart(String timeScheduleStart) {
            return timeScheduleStart(Output.of(timeScheduleStart));
        }

        public MaintenanceWindowArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("MaintenanceWindowArgs", "compartmentId");
            }
            if ($.duration == null) {
                throw new MissingRequiredPropertyException("MaintenanceWindowArgs", "duration");
            }
            if ($.timeScheduleStart == null) {
                throw new MissingRequiredPropertyException("MaintenanceWindowArgs", "timeScheduleStart");
            }
            return $;
        }
    }

}
