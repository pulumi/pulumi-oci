// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookAssociationsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RunbookArgs extends com.pulumi.resources.ResourceArgs {

    public static final RunbookArgs Empty = new RunbookArgs();

    /**
     * (Updatable) Associations for the runbook.
     * 
     */
    @Import(name="associations", required=true)
    private Output<RunbookAssociationsArgs> associations;

    /**
     * @return (Updatable) Associations for the runbook.
     * 
     */
    public Output<RunbookAssociationsArgs> associations() {
        return this.associations;
    }

    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Estimated time to successfully complete the runbook execution
     * 
     */
    @Import(name="estimatedTime")
    private @Nullable Output<String> estimatedTime;

    /**
     * @return (Updatable) Estimated time to successfully complete the runbook execution
     * 
     */
    public Optional<Output<String>> estimatedTime() {
        return Optional.ofNullable(this.estimatedTime);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Is the runbook default?
     * 
     */
    @Import(name="isDefault")
    private @Nullable Output<Boolean> isDefault;

    /**
     * @return (Updatable) Is the runbook default?
     * 
     */
    public Optional<Output<Boolean>> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }

    /**
     * (Updatable) The lifecycle operation performed by the task.
     * 
     */
    @Import(name="operation", required=true)
    private Output<String> operation;

    /**
     * @return (Updatable) The lifecycle operation performed by the task.
     * 
     */
    public Output<String> operation() {
        return this.operation;
    }

    /**
     * (Updatable) The OS type for the runbook.
     * 
     */
    @Import(name="osType", required=true)
    private Output<String> osType;

    /**
     * @return (Updatable) The OS type for the runbook.
     * 
     */
    public Output<String> osType() {
        return this.osType;
    }

    /**
     * (Updatable) The platform of the runbook.
     * 
     */
    @Import(name="platform")
    private @Nullable Output<String> platform;

    /**
     * @return (Updatable) The platform of the runbook.
     * 
     */
    public Optional<Output<String>> platform() {
        return Optional.ofNullable(this.platform);
    }

    /**
     * (Updatable) Type of runbook structure.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="runbookRelevance", required=true)
    private Output<String> runbookRelevance;

    /**
     * @return (Updatable) Type of runbook structure.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> runbookRelevance() {
        return this.runbookRelevance;
    }

    private RunbookArgs() {}

    private RunbookArgs(RunbookArgs $) {
        this.associations = $.associations;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.estimatedTime = $.estimatedTime;
        this.freeformTags = $.freeformTags;
        this.isDefault = $.isDefault;
        this.operation = $.operation;
        this.osType = $.osType;
        this.platform = $.platform;
        this.runbookRelevance = $.runbookRelevance;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunbookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunbookArgs $;

        public Builder() {
            $ = new RunbookArgs();
        }

        public Builder(RunbookArgs defaults) {
            $ = new RunbookArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param associations (Updatable) Associations for the runbook.
         * 
         * @return builder
         * 
         */
        public Builder associations(Output<RunbookAssociationsArgs> associations) {
            $.associations = associations;
            return this;
        }

        /**
         * @param associations (Updatable) Associations for the runbook.
         * 
         * @return builder
         * 
         */
        public Builder associations(RunbookAssociationsArgs associations) {
            return associations(Output.of(associations));
        }

        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param estimatedTime (Updatable) Estimated time to successfully complete the runbook execution
         * 
         * @return builder
         * 
         */
        public Builder estimatedTime(@Nullable Output<String> estimatedTime) {
            $.estimatedTime = estimatedTime;
            return this;
        }

        /**
         * @param estimatedTime (Updatable) Estimated time to successfully complete the runbook execution
         * 
         * @return builder
         * 
         */
        public Builder estimatedTime(String estimatedTime) {
            return estimatedTime(Output.of(estimatedTime));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isDefault (Updatable) Is the runbook default?
         * 
         * @return builder
         * 
         */
        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param isDefault (Updatable) Is the runbook default?
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        /**
         * @param operation (Updatable) The lifecycle operation performed by the task.
         * 
         * @return builder
         * 
         */
        public Builder operation(Output<String> operation) {
            $.operation = operation;
            return this;
        }

        /**
         * @param operation (Updatable) The lifecycle operation performed by the task.
         * 
         * @return builder
         * 
         */
        public Builder operation(String operation) {
            return operation(Output.of(operation));
        }

        /**
         * @param osType (Updatable) The OS type for the runbook.
         * 
         * @return builder
         * 
         */
        public Builder osType(Output<String> osType) {
            $.osType = osType;
            return this;
        }

        /**
         * @param osType (Updatable) The OS type for the runbook.
         * 
         * @return builder
         * 
         */
        public Builder osType(String osType) {
            return osType(Output.of(osType));
        }

        /**
         * @param platform (Updatable) The platform of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder platform(@Nullable Output<String> platform) {
            $.platform = platform;
            return this;
        }

        /**
         * @param platform (Updatable) The platform of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder platform(String platform) {
            return platform(Output.of(platform));
        }

        /**
         * @param runbookRelevance (Updatable) Type of runbook structure.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder runbookRelevance(Output<String> runbookRelevance) {
            $.runbookRelevance = runbookRelevance;
            return this;
        }

        /**
         * @param runbookRelevance (Updatable) Type of runbook structure.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder runbookRelevance(String runbookRelevance) {
            return runbookRelevance(Output.of(runbookRelevance));
        }

        public RunbookArgs build() {
            if ($.associations == null) {
                throw new MissingRequiredPropertyException("RunbookArgs", "associations");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("RunbookArgs", "compartmentId");
            }
            if ($.operation == null) {
                throw new MissingRequiredPropertyException("RunbookArgs", "operation");
            }
            if ($.osType == null) {
                throw new MissingRequiredPropertyException("RunbookArgs", "osType");
            }
            if ($.runbookRelevance == null) {
                throw new MissingRequiredPropertyException("RunbookArgs", "runbookRelevance");
            }
            return $;
        }
    }

}
