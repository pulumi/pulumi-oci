// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookVersionExecutionWorkflowDetailsArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookVersionGroupArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookVersionRollbackWorkflowDetailsArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookVersionTaskArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RunbookVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RunbookVersionArgs Empty = new RunbookVersionArgs();

    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. Example:
     * `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example:
     * `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Execution Workflow details.
     * 
     */
    @Import(name="executionWorkflowDetails", required=true)
    private Output<RunbookVersionExecutionWorkflowDetailsArgs> executionWorkflowDetails;

    /**
     * @return (Updatable) Execution Workflow details.
     * 
     */
    public Output<RunbookVersionExecutionWorkflowDetailsArgs> executionWorkflowDetails() {
        return this.executionWorkflowDetails;
    }

    /**
     * Simple key-value pair that is applied without any predefined name, type or scope. Exists
     * for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists
     * for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The groups of the runbook.
     * 
     */
    @Import(name="groups", required=true)
    private Output<List<RunbookVersionGroupArgs>> groups;

    /**
     * @return (Updatable) The groups of the runbook.
     * 
     */
    public Output<List<RunbookVersionGroupArgs>> groups() {
        return this.groups;
    }

    /**
     * (Updatable) Rollback Workflow details.
     * 
     */
    @Import(name="rollbackWorkflowDetails")
    private @Nullable Output<RunbookVersionRollbackWorkflowDetailsArgs> rollbackWorkflowDetails;

    /**
     * @return (Updatable) Rollback Workflow details.
     * 
     */
    public Optional<Output<RunbookVersionRollbackWorkflowDetailsArgs>> rollbackWorkflowDetails() {
        return Optional.ofNullable(this.rollbackWorkflowDetails);
    }

    /**
     * The OCID of the resource.
     * 
     */
    @Import(name="runbookId", required=true)
    private Output<String> runbookId;

    /**
     * @return The OCID of the resource.
     * 
     */
    public Output<String> runbookId() {
        return this.runbookId;
    }

    /**
     * (Updatable) A set of tasks to execute in the runbook.
     * 
     */
    @Import(name="tasks", required=true)
    private Output<List<RunbookVersionTaskArgs>> tasks;

    /**
     * @return (Updatable) A set of tasks to execute in the runbook.
     * 
     */
    public Output<List<RunbookVersionTaskArgs>> tasks() {
        return this.tasks;
    }

    private RunbookVersionArgs() {}

    private RunbookVersionArgs(RunbookVersionArgs $) {
        this.definedTags = $.definedTags;
        this.executionWorkflowDetails = $.executionWorkflowDetails;
        this.freeformTags = $.freeformTags;
        this.groups = $.groups;
        this.rollbackWorkflowDetails = $.rollbackWorkflowDetails;
        this.runbookId = $.runbookId;
        this.tasks = $.tasks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunbookVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunbookVersionArgs $;

        public Builder() {
            $ = new RunbookVersionArgs();
        }

        public Builder(RunbookVersionArgs defaults) {
            $ = new RunbookVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param definedTags Defined tags for this resource. Each key is predefined and scoped to a namespace. Example:
         * `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags Defined tags for this resource. Each key is predefined and scoped to a namespace. Example:
         * `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param executionWorkflowDetails (Updatable) Execution Workflow details.
         * 
         * @return builder
         * 
         */
        public Builder executionWorkflowDetails(Output<RunbookVersionExecutionWorkflowDetailsArgs> executionWorkflowDetails) {
            $.executionWorkflowDetails = executionWorkflowDetails;
            return this;
        }

        /**
         * @param executionWorkflowDetails (Updatable) Execution Workflow details.
         * 
         * @return builder
         * 
         */
        public Builder executionWorkflowDetails(RunbookVersionExecutionWorkflowDetailsArgs executionWorkflowDetails) {
            return executionWorkflowDetails(Output.of(executionWorkflowDetails));
        }

        /**
         * @param freeformTags Simple key-value pair that is applied without any predefined name, type or scope. Exists
         * for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags Simple key-value pair that is applied without any predefined name, type or scope. Exists
         * for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param groups (Updatable) The groups of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder groups(Output<List<RunbookVersionGroupArgs>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups (Updatable) The groups of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder groups(List<RunbookVersionGroupArgs> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups (Updatable) The groups of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder groups(RunbookVersionGroupArgs... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param rollbackWorkflowDetails (Updatable) Rollback Workflow details.
         * 
         * @return builder
         * 
         */
        public Builder rollbackWorkflowDetails(@Nullable Output<RunbookVersionRollbackWorkflowDetailsArgs> rollbackWorkflowDetails) {
            $.rollbackWorkflowDetails = rollbackWorkflowDetails;
            return this;
        }

        /**
         * @param rollbackWorkflowDetails (Updatable) Rollback Workflow details.
         * 
         * @return builder
         * 
         */
        public Builder rollbackWorkflowDetails(RunbookVersionRollbackWorkflowDetailsArgs rollbackWorkflowDetails) {
            return rollbackWorkflowDetails(Output.of(rollbackWorkflowDetails));
        }

        /**
         * @param runbookId The OCID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder runbookId(Output<String> runbookId) {
            $.runbookId = runbookId;
            return this;
        }

        /**
         * @param runbookId The OCID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder runbookId(String runbookId) {
            return runbookId(Output.of(runbookId));
        }

        /**
         * @param tasks (Updatable) A set of tasks to execute in the runbook.
         * 
         * @return builder
         * 
         */
        public Builder tasks(Output<List<RunbookVersionTaskArgs>> tasks) {
            $.tasks = tasks;
            return this;
        }

        /**
         * @param tasks (Updatable) A set of tasks to execute in the runbook.
         * 
         * @return builder
         * 
         */
        public Builder tasks(List<RunbookVersionTaskArgs> tasks) {
            return tasks(Output.of(tasks));
        }

        /**
         * @param tasks (Updatable) A set of tasks to execute in the runbook.
         * 
         * @return builder
         * 
         */
        public Builder tasks(RunbookVersionTaskArgs... tasks) {
            return tasks(List.of(tasks));
        }

        public RunbookVersionArgs build() {
            if ($.executionWorkflowDetails == null) {
                throw new MissingRequiredPropertyException("RunbookVersionArgs", "executionWorkflowDetails");
            }
            if ($.groups == null) {
                throw new MissingRequiredPropertyException("RunbookVersionArgs", "groups");
            }
            if ($.runbookId == null) {
                throw new MissingRequiredPropertyException("RunbookVersionArgs", "runbookId");
            }
            if ($.tasks == null) {
                throw new MissingRequiredPropertyException("RunbookVersionArgs", "tasks");
            }
            return $;
        }
    }

}
