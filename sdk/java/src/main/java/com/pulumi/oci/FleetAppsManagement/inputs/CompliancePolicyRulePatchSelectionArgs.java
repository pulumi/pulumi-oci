// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CompliancePolicyRulePatchSelectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final CompliancePolicyRulePatchSelectionArgs Empty = new CompliancePolicyRulePatchSelectionArgs();

    /**
     * (Updatable) Days passed since patch release.
     * 
     */
    @Import(name="daysSinceRelease")
    private @Nullable Output<Integer> daysSinceRelease;

    /**
     * @return (Updatable) Days passed since patch release.
     * 
     */
    public Optional<Output<Integer>> daysSinceRelease() {
        return Optional.ofNullable(this.daysSinceRelease);
    }

    /**
     * (Updatable) Patch Name.
     * 
     */
    @Import(name="patchLevel")
    private @Nullable Output<String> patchLevel;

    /**
     * @return (Updatable) Patch Name.
     * 
     */
    public Optional<Output<String>> patchLevel() {
        return Optional.ofNullable(this.patchLevel);
    }

    /**
     * (Updatable) Patch Name.
     * 
     */
    @Import(name="patchName")
    private @Nullable Output<String> patchName;

    /**
     * @return (Updatable) Patch Name.
     * 
     */
    public Optional<Output<String>> patchName() {
        return Optional.ofNullable(this.patchName);
    }

    /**
     * (Updatable) Selection type for the Patch.
     * 
     */
    @Import(name="selectionType", required=true)
    private Output<String> selectionType;

    /**
     * @return (Updatable) Selection type for the Patch.
     * 
     */
    public Output<String> selectionType() {
        return this.selectionType;
    }

    private CompliancePolicyRulePatchSelectionArgs() {}

    private CompliancePolicyRulePatchSelectionArgs(CompliancePolicyRulePatchSelectionArgs $) {
        this.daysSinceRelease = $.daysSinceRelease;
        this.patchLevel = $.patchLevel;
        this.patchName = $.patchName;
        this.selectionType = $.selectionType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CompliancePolicyRulePatchSelectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CompliancePolicyRulePatchSelectionArgs $;

        public Builder() {
            $ = new CompliancePolicyRulePatchSelectionArgs();
        }

        public Builder(CompliancePolicyRulePatchSelectionArgs defaults) {
            $ = new CompliancePolicyRulePatchSelectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param daysSinceRelease (Updatable) Days passed since patch release.
         * 
         * @return builder
         * 
         */
        public Builder daysSinceRelease(@Nullable Output<Integer> daysSinceRelease) {
            $.daysSinceRelease = daysSinceRelease;
            return this;
        }

        /**
         * @param daysSinceRelease (Updatable) Days passed since patch release.
         * 
         * @return builder
         * 
         */
        public Builder daysSinceRelease(Integer daysSinceRelease) {
            return daysSinceRelease(Output.of(daysSinceRelease));
        }

        /**
         * @param patchLevel (Updatable) Patch Name.
         * 
         * @return builder
         * 
         */
        public Builder patchLevel(@Nullable Output<String> patchLevel) {
            $.patchLevel = patchLevel;
            return this;
        }

        /**
         * @param patchLevel (Updatable) Patch Name.
         * 
         * @return builder
         * 
         */
        public Builder patchLevel(String patchLevel) {
            return patchLevel(Output.of(patchLevel));
        }

        /**
         * @param patchName (Updatable) Patch Name.
         * 
         * @return builder
         * 
         */
        public Builder patchName(@Nullable Output<String> patchName) {
            $.patchName = patchName;
            return this;
        }

        /**
         * @param patchName (Updatable) Patch Name.
         * 
         * @return builder
         * 
         */
        public Builder patchName(String patchName) {
            return patchName(Output.of(patchName));
        }

        /**
         * @param selectionType (Updatable) Selection type for the Patch.
         * 
         * @return builder
         * 
         */
        public Builder selectionType(Output<String> selectionType) {
            $.selectionType = selectionType;
            return this;
        }

        /**
         * @param selectionType (Updatable) Selection type for the Patch.
         * 
         * @return builder
         * 
         */
        public Builder selectionType(String selectionType) {
            return selectionType(Output.of(selectionType));
        }

        public CompliancePolicyRulePatchSelectionArgs build() {
            if ($.selectionType == null) {
                throw new MissingRequiredPropertyException("CompliancePolicyRulePatchSelectionArgs", "selectionType");
            }
            return $;
        }
    }

}
