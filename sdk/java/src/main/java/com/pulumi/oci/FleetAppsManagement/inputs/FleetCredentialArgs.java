// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.FleetCredentialEntitySpecificsArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.FleetCredentialPasswordArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.FleetCredentialUserArgs;
import java.lang.String;
import java.util.Objects;


public final class FleetCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetCredentialArgs Empty = new FleetCredentialArgs();

    /**
     * (Updatable) Compartment OCID
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment OCID
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Credential specific Details.
     * 
     */
    @Import(name="entitySpecifics", required=true)
    private Output<FleetCredentialEntitySpecificsArgs> entitySpecifics;

    /**
     * @return Credential specific Details.
     * 
     */
    public Output<FleetCredentialEntitySpecificsArgs> entitySpecifics() {
        return this.entitySpecifics;
    }

    /**
     * Credential Details.
     * 
     */
    @Import(name="password", required=true)
    private Output<FleetCredentialPasswordArgs> password;

    /**
     * @return Credential Details.
     * 
     */
    public Output<FleetCredentialPasswordArgs> password() {
        return this.password;
    }

    /**
     * Credential Details.
     * 
     */
    @Import(name="user", required=true)
    private Output<FleetCredentialUserArgs> user;

    /**
     * @return Credential Details.
     * 
     */
    public Output<FleetCredentialUserArgs> user() {
        return this.user;
    }

    private FleetCredentialArgs() {}

    private FleetCredentialArgs(FleetCredentialArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.entitySpecifics = $.entitySpecifics;
        this.password = $.password;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetCredentialArgs $;

        public Builder() {
            $ = new FleetCredentialArgs();
        }

        public Builder(FleetCredentialArgs defaults) {
            $ = new FleetCredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) Compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param entitySpecifics Credential specific Details.
         * 
         * @return builder
         * 
         */
        public Builder entitySpecifics(Output<FleetCredentialEntitySpecificsArgs> entitySpecifics) {
            $.entitySpecifics = entitySpecifics;
            return this;
        }

        /**
         * @param entitySpecifics Credential specific Details.
         * 
         * @return builder
         * 
         */
        public Builder entitySpecifics(FleetCredentialEntitySpecificsArgs entitySpecifics) {
            return entitySpecifics(Output.of(entitySpecifics));
        }

        /**
         * @param password Credential Details.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<FleetCredentialPasswordArgs> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Credential Details.
         * 
         * @return builder
         * 
         */
        public Builder password(FleetCredentialPasswordArgs password) {
            return password(Output.of(password));
        }

        /**
         * @param user Credential Details.
         * 
         * @return builder
         * 
         */
        public Builder user(Output<FleetCredentialUserArgs> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user Credential Details.
         * 
         * @return builder
         * 
         */
        public Builder user(FleetCredentialUserArgs user) {
            return user(Output.of(user));
        }

        public FleetCredentialArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("FleetCredentialArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("FleetCredentialArgs", "displayName");
            }
            if ($.entitySpecifics == null) {
                throw new MissingRequiredPropertyException("FleetCredentialArgs", "entitySpecifics");
            }
            if ($.password == null) {
                throw new MissingRequiredPropertyException("FleetCredentialArgs", "password");
            }
            if ($.user == null) {
                throw new MissingRequiredPropertyException("FleetCredentialArgs", "user");
            }
            return $;
        }
    }

}
