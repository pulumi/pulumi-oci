// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FleetCredentialEntitySpecificsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetCredentialEntitySpecificsArgs Empty = new FleetCredentialEntitySpecificsArgs();

    /**
     * (Updatable) Credential Level.
     * 
     */
    @Import(name="credentialLevel", required=true)
    private Output<String> credentialLevel;

    /**
     * @return (Updatable) Credential Level.
     * 
     */
    public Output<String> credentialLevel() {
        return this.credentialLevel;
    }

    /**
     * (Updatable) OCID of the resource associated with the target for which credential is created
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return (Updatable) OCID of the resource associated with the target for which credential is created
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    /**
     * (Updatable) Target associated with the Credential
     * 
     */
    @Import(name="target", required=true)
    private Output<String> target;

    /**
     * @return (Updatable) Target associated with the Credential
     * 
     */
    public Output<String> target() {
        return this.target;
    }

    private FleetCredentialEntitySpecificsArgs() {}

    private FleetCredentialEntitySpecificsArgs(FleetCredentialEntitySpecificsArgs $) {
        this.credentialLevel = $.credentialLevel;
        this.resourceId = $.resourceId;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetCredentialEntitySpecificsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetCredentialEntitySpecificsArgs $;

        public Builder() {
            $ = new FleetCredentialEntitySpecificsArgs();
        }

        public Builder(FleetCredentialEntitySpecificsArgs defaults) {
            $ = new FleetCredentialEntitySpecificsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param credentialLevel (Updatable) Credential Level.
         * 
         * @return builder
         * 
         */
        public Builder credentialLevel(Output<String> credentialLevel) {
            $.credentialLevel = credentialLevel;
            return this;
        }

        /**
         * @param credentialLevel (Updatable) Credential Level.
         * 
         * @return builder
         * 
         */
        public Builder credentialLevel(String credentialLevel) {
            return credentialLevel(Output.of(credentialLevel));
        }

        /**
         * @param resourceId (Updatable) OCID of the resource associated with the target for which credential is created
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId (Updatable) OCID of the resource associated with the target for which credential is created
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param target (Updatable) Target associated with the Credential
         * 
         * @return builder
         * 
         */
        public Builder target(Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target (Updatable) Target associated with the Credential
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        public FleetCredentialEntitySpecificsArgs build() {
            if ($.credentialLevel == null) {
                throw new MissingRequiredPropertyException("FleetCredentialEntitySpecificsArgs", "credentialLevel");
            }
            if ($.resourceId == null) {
                throw new MissingRequiredPropertyException("FleetCredentialEntitySpecificsArgs", "resourceId");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("FleetCredentialEntitySpecificsArgs", "target");
            }
            return $;
        }
    }

}
