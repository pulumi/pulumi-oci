// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.FleetCredentialEntitySpecificsVariableArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetCredentialEntitySpecificsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetCredentialEntitySpecificsArgs Empty = new FleetCredentialEntitySpecificsArgs();

    /**
     * (Updatable) At what level the credential is provided?
     * 
     */
    @Import(name="credentialLevel", required=true)
    private Output<String> credentialLevel;

    /**
     * @return (Updatable) At what level the credential is provided?
     * 
     */
    public Output<String> credentialLevel() {
        return this.credentialLevel;
    }

    /**
     * (Updatable) OCID of the resource associated with the target for which the credential is created.
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return (Updatable) OCID of the resource associated with the target for which the credential is created.
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * (Updatable) Target name for which the credential is provided.
     * 
     */
    @Import(name="target")
    private @Nullable Output<String> target;

    /**
     * @return (Updatable) Target name for which the credential is provided.
     * 
     */
    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * (Updatable) List of fleet credential variables.
     * 
     */
    @Import(name="variables")
    private @Nullable Output<List<FleetCredentialEntitySpecificsVariableArgs>> variables;

    /**
     * @return (Updatable) List of fleet credential variables.
     * 
     */
    public Optional<Output<List<FleetCredentialEntitySpecificsVariableArgs>>> variables() {
        return Optional.ofNullable(this.variables);
    }

    private FleetCredentialEntitySpecificsArgs() {}

    private FleetCredentialEntitySpecificsArgs(FleetCredentialEntitySpecificsArgs $) {
        this.credentialLevel = $.credentialLevel;
        this.resourceId = $.resourceId;
        this.target = $.target;
        this.variables = $.variables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetCredentialEntitySpecificsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetCredentialEntitySpecificsArgs $;

        public Builder() {
            $ = new FleetCredentialEntitySpecificsArgs();
        }

        public Builder(FleetCredentialEntitySpecificsArgs defaults) {
            $ = new FleetCredentialEntitySpecificsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param credentialLevel (Updatable) At what level the credential is provided?
         * 
         * @return builder
         * 
         */
        public Builder credentialLevel(Output<String> credentialLevel) {
            $.credentialLevel = credentialLevel;
            return this;
        }

        /**
         * @param credentialLevel (Updatable) At what level the credential is provided?
         * 
         * @return builder
         * 
         */
        public Builder credentialLevel(String credentialLevel) {
            return credentialLevel(Output.of(credentialLevel));
        }

        /**
         * @param resourceId (Updatable) OCID of the resource associated with the target for which the credential is created.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId (Updatable) OCID of the resource associated with the target for which the credential is created.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param target (Updatable) Target name for which the credential is provided.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target (Updatable) Target name for which the credential is provided.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        /**
         * @param variables (Updatable) List of fleet credential variables.
         * 
         * @return builder
         * 
         */
        public Builder variables(@Nullable Output<List<FleetCredentialEntitySpecificsVariableArgs>> variables) {
            $.variables = variables;
            return this;
        }

        /**
         * @param variables (Updatable) List of fleet credential variables.
         * 
         * @return builder
         * 
         */
        public Builder variables(List<FleetCredentialEntitySpecificsVariableArgs> variables) {
            return variables(Output.of(variables));
        }

        /**
         * @param variables (Updatable) List of fleet credential variables.
         * 
         * @return builder
         * 
         */
        public Builder variables(FleetCredentialEntitySpecificsVariableArgs... variables) {
            return variables(List.of(variables));
        }

        public FleetCredentialEntitySpecificsArgs build() {
            if ($.credentialLevel == null) {
                throw new MissingRequiredPropertyException("FleetCredentialEntitySpecificsArgs", "credentialLevel");
            }
            return $;
        }
    }

}
