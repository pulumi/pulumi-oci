// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetNotificationPreferencePreferencesUpcomingScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetNotificationPreferencePreferencesUpcomingScheduleArgs Empty = new FleetNotificationPreferencePreferencesUpcomingScheduleArgs();

    /**
     * (Updatable) Specify when the notification should be sent.
     * 
     */
    @Import(name="notifyBefore")
    private @Nullable Output<String> notifyBefore;

    /**
     * @return (Updatable) Specify when the notification should be sent.
     * 
     */
    public Optional<Output<String>> notifyBefore() {
        return Optional.ofNullable(this.notifyBefore);
    }

    /**
     * (Updatable) Enables notification on upcoming schedule.
     * 
     */
    @Import(name="onUpcomingSchedule")
    private @Nullable Output<Boolean> onUpcomingSchedule;

    /**
     * @return (Updatable) Enables notification on upcoming schedule.
     * 
     */
    public Optional<Output<Boolean>> onUpcomingSchedule() {
        return Optional.ofNullable(this.onUpcomingSchedule);
    }

    private FleetNotificationPreferencePreferencesUpcomingScheduleArgs() {}

    private FleetNotificationPreferencePreferencesUpcomingScheduleArgs(FleetNotificationPreferencePreferencesUpcomingScheduleArgs $) {
        this.notifyBefore = $.notifyBefore;
        this.onUpcomingSchedule = $.onUpcomingSchedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetNotificationPreferencePreferencesUpcomingScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetNotificationPreferencePreferencesUpcomingScheduleArgs $;

        public Builder() {
            $ = new FleetNotificationPreferencePreferencesUpcomingScheduleArgs();
        }

        public Builder(FleetNotificationPreferencePreferencesUpcomingScheduleArgs defaults) {
            $ = new FleetNotificationPreferencePreferencesUpcomingScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param notifyBefore (Updatable) Specify when the notification should be sent.
         * 
         * @return builder
         * 
         */
        public Builder notifyBefore(@Nullable Output<String> notifyBefore) {
            $.notifyBefore = notifyBefore;
            return this;
        }

        /**
         * @param notifyBefore (Updatable) Specify when the notification should be sent.
         * 
         * @return builder
         * 
         */
        public Builder notifyBefore(String notifyBefore) {
            return notifyBefore(Output.of(notifyBefore));
        }

        /**
         * @param onUpcomingSchedule (Updatable) Enables notification on upcoming schedule.
         * 
         * @return builder
         * 
         */
        public Builder onUpcomingSchedule(@Nullable Output<Boolean> onUpcomingSchedule) {
            $.onUpcomingSchedule = onUpcomingSchedule;
            return this;
        }

        /**
         * @param onUpcomingSchedule (Updatable) Enables notification on upcoming schedule.
         * 
         * @return builder
         * 
         */
        public Builder onUpcomingSchedule(Boolean onUpcomingSchedule) {
            return onUpcomingSchedule(Output.of(onUpcomingSchedule));
        }

        public FleetNotificationPreferencePreferencesUpcomingScheduleArgs build() {
            return $;
        }
    }

}
