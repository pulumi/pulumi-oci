// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetPropertyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetPropertyArgs Empty = new FleetPropertyArgs();

    /**
     * (Updatable) compartment OCID
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) compartment OCID
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Type of the FleetProperty.
     * 
     */
    @Import(name="fleetPropertyType", required=true)
    private Output<String> fleetPropertyType;

    /**
     * @return Type of the FleetProperty.
     * 
     */
    public Output<String> fleetPropertyType() {
        return this.fleetPropertyType;
    }

    /**
     * Property is required or not.
     * 
     */
    @Import(name="isRequired")
    private @Nullable Output<Boolean> isRequired;

    /**
     * @return Property is required or not.
     * 
     */
    public Optional<Output<Boolean>> isRequired() {
        return Optional.ofNullable(this.isRequired);
    }

    /**
     * Value of the Property.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return Value of the Property.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private FleetPropertyArgs() {}

    private FleetPropertyArgs(FleetPropertyArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.fleetPropertyType = $.fleetPropertyType;
        this.isRequired = $.isRequired;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetPropertyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetPropertyArgs $;

        public Builder() {
            $ = new FleetPropertyArgs();
        }

        public Builder(FleetPropertyArgs defaults) {
            $ = new FleetPropertyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param fleetPropertyType Type of the FleetProperty.
         * 
         * @return builder
         * 
         */
        public Builder fleetPropertyType(Output<String> fleetPropertyType) {
            $.fleetPropertyType = fleetPropertyType;
            return this;
        }

        /**
         * @param fleetPropertyType Type of the FleetProperty.
         * 
         * @return builder
         * 
         */
        public Builder fleetPropertyType(String fleetPropertyType) {
            return fleetPropertyType(Output.of(fleetPropertyType));
        }

        /**
         * @param isRequired Property is required or not.
         * 
         * @return builder
         * 
         */
        public Builder isRequired(@Nullable Output<Boolean> isRequired) {
            $.isRequired = isRequired;
            return this;
        }

        /**
         * @param isRequired Property is required or not.
         * 
         * @return builder
         * 
         */
        public Builder isRequired(Boolean isRequired) {
            return isRequired(Output.of(isRequired));
        }

        /**
         * @param value Value of the Property.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Value of the Property.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public FleetPropertyArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("FleetPropertyArgs", "compartmentId");
            }
            if ($.fleetPropertyType == null) {
                throw new MissingRequiredPropertyException("FleetPropertyArgs", "fleetPropertyType");
            }
            return $;
        }
    }

}
