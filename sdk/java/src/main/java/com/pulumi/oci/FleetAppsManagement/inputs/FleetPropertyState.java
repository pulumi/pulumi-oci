// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetPropertyState extends com.pulumi.resources.ResourceArgs {

    public static final FleetPropertyState Empty = new FleetPropertyState();

    /**
     * Values of the property (must be a single value if selectionType = &#39;SINGLE_CHOICE&#39;).
     * 
     */
    @Import(name="allowedValues")
    private @Nullable Output<List<String>> allowedValues;

    /**
     * @return Values of the property (must be a single value if selectionType = &#39;SINGLE_CHOICE&#39;).
     * 
     */
    public Optional<Output<List<String>>> allowedValues() {
        return Optional.ofNullable(this.allowedValues);
    }

    /**
     * Compartment OCID
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return Compartment OCID
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Unique Fleet identifier.
     * 
     */
    @Import(name="fleetId")
    private @Nullable Output<String> fleetId;

    /**
     * @return Unique Fleet identifier.
     * 
     */
    public Optional<Output<String>> fleetId() {
        return Optional.ofNullable(this.fleetId);
    }

    /**
     * OCID referring to global level metadata property.
     * 
     */
    @Import(name="propertyId")
    private @Nullable Output<String> propertyId;

    /**
     * @return OCID referring to global level metadata property.
     * 
     */
    public Optional<Output<String>> propertyId() {
        return Optional.ofNullable(this.propertyId);
    }

    /**
     * Text selection of the property.
     * 
     */
    @Import(name="selectionType")
    private @Nullable Output<String> selectionType;

    /**
     * @return Text selection of the property.
     * 
     */
    public Optional<Output<String>> selectionType() {
        return Optional.ofNullable(this.selectionType);
    }

    /**
     * The current state of the FleetProperty.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the FleetProperty.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * (Updatable) Value of the Property.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return (Updatable) Value of the Property.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    /**
     * Format of the value.
     * 
     */
    @Import(name="valueType")
    private @Nullable Output<String> valueType;

    /**
     * @return Format of the value.
     * 
     */
    public Optional<Output<String>> valueType() {
        return Optional.ofNullable(this.valueType);
    }

    private FleetPropertyState() {}

    private FleetPropertyState(FleetPropertyState $) {
        this.allowedValues = $.allowedValues;
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.fleetId = $.fleetId;
        this.propertyId = $.propertyId;
        this.selectionType = $.selectionType;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.value = $.value;
        this.valueType = $.valueType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetPropertyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetPropertyState $;

        public Builder() {
            $ = new FleetPropertyState();
        }

        public Builder(FleetPropertyState defaults) {
            $ = new FleetPropertyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedValues Values of the property (must be a single value if selectionType = &#39;SINGLE_CHOICE&#39;).
         * 
         * @return builder
         * 
         */
        public Builder allowedValues(@Nullable Output<List<String>> allowedValues) {
            $.allowedValues = allowedValues;
            return this;
        }

        /**
         * @param allowedValues Values of the property (must be a single value if selectionType = &#39;SINGLE_CHOICE&#39;).
         * 
         * @return builder
         * 
         */
        public Builder allowedValues(List<String> allowedValues) {
            return allowedValues(Output.of(allowedValues));
        }

        /**
         * @param allowedValues Values of the property (must be a single value if selectionType = &#39;SINGLE_CHOICE&#39;).
         * 
         * @return builder
         * 
         */
        public Builder allowedValues(String... allowedValues) {
            return allowedValues(List.of(allowedValues));
        }

        /**
         * @param compartmentId Compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param fleetId Unique Fleet identifier.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(@Nullable Output<String> fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param fleetId Unique Fleet identifier.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            return fleetId(Output.of(fleetId));
        }

        /**
         * @param propertyId OCID referring to global level metadata property.
         * 
         * @return builder
         * 
         */
        public Builder propertyId(@Nullable Output<String> propertyId) {
            $.propertyId = propertyId;
            return this;
        }

        /**
         * @param propertyId OCID referring to global level metadata property.
         * 
         * @return builder
         * 
         */
        public Builder propertyId(String propertyId) {
            return propertyId(Output.of(propertyId));
        }

        /**
         * @param selectionType Text selection of the property.
         * 
         * @return builder
         * 
         */
        public Builder selectionType(@Nullable Output<String> selectionType) {
            $.selectionType = selectionType;
            return this;
        }

        /**
         * @param selectionType Text selection of the property.
         * 
         * @return builder
         * 
         */
        public Builder selectionType(String selectionType) {
            return selectionType(Output.of(selectionType));
        }

        /**
         * @param state The current state of the FleetProperty.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the FleetProperty.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time this resource was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time this resource was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time this resource was last updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time this resource was last updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param value (Updatable) Value of the Property.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) Value of the Property.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        /**
         * @param valueType Format of the value.
         * 
         * @return builder
         * 
         */
        public Builder valueType(@Nullable Output<String> valueType) {
            $.valueType = valueType;
            return this;
        }

        /**
         * @param valueType Format of the value.
         * 
         * @return builder
         * 
         */
        public Builder valueType(String valueType) {
            return valueType(Output.of(valueType));
        }

        public FleetPropertyState build() {
            return $;
        }
    }

}
