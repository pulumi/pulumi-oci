// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.FleetAppsManagement.inputs.FleetResourceSelectionRuleSelectionCriteriaRuleConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetResourceSelectionRuleSelectionCriteriaRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetResourceSelectionRuleSelectionCriteriaRuleArgs Empty = new FleetResourceSelectionRuleSelectionCriteriaRuleArgs();

    /**
     * (Updatable) Based on what the rule is created. It can be based on a resourceProperty or a tag.   If based on a tag, basis will be &#39;definedTagEquals&#39; If based on a resource property, basis will be &#39;inventoryProperties&#39;
     * 
     */
    @Import(name="basis")
    private @Nullable Output<String> basis;

    /**
     * @return (Updatable) Based on what the rule is created. It can be based on a resourceProperty or a tag.   If based on a tag, basis will be &#39;definedTagEquals&#39; If based on a resource property, basis will be &#39;inventoryProperties&#39;
     * 
     */
    public Optional<Output<String>> basis() {
        return Optional.ofNullable(this.basis);
    }

    /**
     * (Updatable) Compartment Id for which the rule is created.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Id for which the rule is created.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Rule Conditions
     * 
     */
    @Import(name="conditions")
    private @Nullable Output<List<FleetResourceSelectionRuleSelectionCriteriaRuleConditionArgs>> conditions;

    /**
     * @return (Updatable) Rule Conditions
     * 
     */
    public Optional<Output<List<FleetResourceSelectionRuleSelectionCriteriaRuleConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * (Updatable) The Compartment ID to dynamically search resources. Provide the compartment ID to which the rule is applicable.
     * 
     */
    @Import(name="resourceCompartmentId")
    private @Nullable Output<String> resourceCompartmentId;

    /**
     * @return (Updatable) The Compartment ID to dynamically search resources. Provide the compartment ID to which the rule is applicable.
     * 
     */
    public Optional<Output<String>> resourceCompartmentId() {
        return Optional.ofNullable(this.resourceCompartmentId);
    }

    private FleetResourceSelectionRuleSelectionCriteriaRuleArgs() {}

    private FleetResourceSelectionRuleSelectionCriteriaRuleArgs(FleetResourceSelectionRuleSelectionCriteriaRuleArgs $) {
        this.basis = $.basis;
        this.compartmentId = $.compartmentId;
        this.conditions = $.conditions;
        this.resourceCompartmentId = $.resourceCompartmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetResourceSelectionRuleSelectionCriteriaRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetResourceSelectionRuleSelectionCriteriaRuleArgs $;

        public Builder() {
            $ = new FleetResourceSelectionRuleSelectionCriteriaRuleArgs();
        }

        public Builder(FleetResourceSelectionRuleSelectionCriteriaRuleArgs defaults) {
            $ = new FleetResourceSelectionRuleSelectionCriteriaRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param basis (Updatable) Based on what the rule is created. It can be based on a resourceProperty or a tag.   If based on a tag, basis will be &#39;definedTagEquals&#39; If based on a resource property, basis will be &#39;inventoryProperties&#39;
         * 
         * @return builder
         * 
         */
        public Builder basis(@Nullable Output<String> basis) {
            $.basis = basis;
            return this;
        }

        /**
         * @param basis (Updatable) Based on what the rule is created. It can be based on a resourceProperty or a tag.   If based on a tag, basis will be &#39;definedTagEquals&#39; If based on a resource property, basis will be &#39;inventoryProperties&#39;
         * 
         * @return builder
         * 
         */
        public Builder basis(String basis) {
            return basis(Output.of(basis));
        }

        /**
         * @param compartmentId (Updatable) Compartment Id for which the rule is created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Id for which the rule is created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param conditions (Updatable) Rule Conditions
         * 
         * @return builder
         * 
         */
        public Builder conditions(@Nullable Output<List<FleetResourceSelectionRuleSelectionCriteriaRuleConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions (Updatable) Rule Conditions
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<FleetResourceSelectionRuleSelectionCriteriaRuleConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions (Updatable) Rule Conditions
         * 
         * @return builder
         * 
         */
        public Builder conditions(FleetResourceSelectionRuleSelectionCriteriaRuleConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param resourceCompartmentId (Updatable) The Compartment ID to dynamically search resources. Provide the compartment ID to which the rule is applicable.
         * 
         * @return builder
         * 
         */
        public Builder resourceCompartmentId(@Nullable Output<String> resourceCompartmentId) {
            $.resourceCompartmentId = resourceCompartmentId;
            return this;
        }

        /**
         * @param resourceCompartmentId (Updatable) The Compartment ID to dynamically search resources. Provide the compartment ID to which the rule is applicable.
         * 
         * @return builder
         * 
         */
        public Builder resourceCompartmentId(String resourceCompartmentId) {
            return resourceCompartmentId(Output.of(resourceCompartmentId));
        }

        public FleetResourceSelectionRuleSelectionCriteriaRuleArgs build() {
            return $;
        }
    }

}
