// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.FleetRuleSelectionCriteriaRuleConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetRuleSelectionCriteriaRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetRuleSelectionCriteriaRuleArgs Empty = new FleetRuleSelectionCriteriaRuleArgs();

    /**
     * (Updatable) Rule to be be applied on.
     * 
     */
    @Import(name="basis")
    private @Nullable Output<String> basis;

    /**
     * @return (Updatable) Rule to be be applied on.
     * 
     */
    public Optional<Output<String>> basis() {
        return Optional.ofNullable(this.basis);
    }

    /**
     * (Updatable) Please provide the root compartmentId (TenancyId).
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Please provide the root compartmentId (TenancyId).
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Rule Conditions
     * 
     */
    @Import(name="conditions", required=true)
    private Output<List<FleetRuleSelectionCriteriaRuleConditionArgs>> conditions;

    /**
     * @return (Updatable) Rule Conditions
     * 
     */
    public Output<List<FleetRuleSelectionCriteriaRuleConditionArgs>> conditions() {
        return this.conditions;
    }

    /**
     * (Updatable) Resource Compartment Id.Provide the compartmentId the resource belongs to.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="resourceCompartmentId", required=true)
    private Output<String> resourceCompartmentId;

    /**
     * @return (Updatable) Resource Compartment Id.Provide the compartmentId the resource belongs to.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> resourceCompartmentId() {
        return this.resourceCompartmentId;
    }

    private FleetRuleSelectionCriteriaRuleArgs() {}

    private FleetRuleSelectionCriteriaRuleArgs(FleetRuleSelectionCriteriaRuleArgs $) {
        this.basis = $.basis;
        this.compartmentId = $.compartmentId;
        this.conditions = $.conditions;
        this.resourceCompartmentId = $.resourceCompartmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetRuleSelectionCriteriaRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetRuleSelectionCriteriaRuleArgs $;

        public Builder() {
            $ = new FleetRuleSelectionCriteriaRuleArgs();
        }

        public Builder(FleetRuleSelectionCriteriaRuleArgs defaults) {
            $ = new FleetRuleSelectionCriteriaRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param basis (Updatable) Rule to be be applied on.
         * 
         * @return builder
         * 
         */
        public Builder basis(@Nullable Output<String> basis) {
            $.basis = basis;
            return this;
        }

        /**
         * @param basis (Updatable) Rule to be be applied on.
         * 
         * @return builder
         * 
         */
        public Builder basis(String basis) {
            return basis(Output.of(basis));
        }

        /**
         * @param compartmentId (Updatable) Please provide the root compartmentId (TenancyId).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Please provide the root compartmentId (TenancyId).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param conditions (Updatable) Rule Conditions
         * 
         * @return builder
         * 
         */
        public Builder conditions(Output<List<FleetRuleSelectionCriteriaRuleConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        /**
         * @param conditions (Updatable) Rule Conditions
         * 
         * @return builder
         * 
         */
        public Builder conditions(List<FleetRuleSelectionCriteriaRuleConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        /**
         * @param conditions (Updatable) Rule Conditions
         * 
         * @return builder
         * 
         */
        public Builder conditions(FleetRuleSelectionCriteriaRuleConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param resourceCompartmentId (Updatable) Resource Compartment Id.Provide the compartmentId the resource belongs to.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder resourceCompartmentId(Output<String> resourceCompartmentId) {
            $.resourceCompartmentId = resourceCompartmentId;
            return this;
        }

        /**
         * @param resourceCompartmentId (Updatable) Resource Compartment Id.Provide the compartmentId the resource belongs to.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder resourceCompartmentId(String resourceCompartmentId) {
            return resourceCompartmentId(Output.of(resourceCompartmentId));
        }

        public FleetRuleSelectionCriteriaRuleArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("FleetRuleSelectionCriteriaRuleArgs", "compartmentId");
            }
            if ($.conditions == null) {
                throw new MissingRequiredPropertyException("FleetRuleSelectionCriteriaRuleArgs", "conditions");
            }
            if ($.resourceCompartmentId == null) {
                throw new MissingRequiredPropertyException("FleetRuleSelectionCriteriaRuleArgs", "resourceCompartmentId");
            }
            return $;
        }
    }

}
