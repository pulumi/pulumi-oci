// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.FleetAppsManagement.inputs.FleetNotificationPreferencesArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.FleetRuleSelectionCriteriaArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetState extends com.pulumi.resources.ResourceArgs {

    public static final FleetState Empty = new FleetState();

    /**
     * Application Type associated with the Fleet.Applicable for Environment fleet types.
     * 
     */
    @Import(name="applicationType")
    private @Nullable Output<String> applicationType;

    /**
     * @return Application Type associated with the Fleet.Applicable for Environment fleet types.
     * 
     */
    public Optional<Output<String>> applicationType() {
        return Optional.ofNullable(this.applicationType);
    }

    /**
     * Tenancy OCID
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return Tenancy OCID
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Environment Type associated with the Fleet.Applicable for Environment fleet types.
     * 
     */
    @Import(name="environmentType")
    private @Nullable Output<String> environmentType;

    /**
     * @return Environment Type associated with the Fleet.Applicable for Environment fleet types.
     * 
     */
    public Optional<Output<String>> environmentType() {
        return Optional.ofNullable(this.environmentType);
    }

    /**
     * Type of the Fleet
     * 
     */
    @Import(name="fleetType")
    private @Nullable Output<String> fleetType;

    /**
     * @return Type of the Fleet
     * 
     */
    public Optional<Output<String>> fleetType() {
        return Optional.ofNullable(this.fleetType);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Group Type associated with Group Fleet.Applicable for Group fleet types.
     * 
     */
    @Import(name="groupType")
    private @Nullable Output<String> groupType;

    /**
     * @return Group Type associated with Group Fleet.Applicable for Group fleet types.
     * 
     */
    public Optional<Output<String>> groupType() {
        return Optional.ofNullable(this.groupType);
    }

    /**
     * (Updatable) A value which represents if auto confirming of the targets can be enabled
     * 
     */
    @Import(name="isTargetAutoConfirm")
    private @Nullable Output<Boolean> isTargetAutoConfirm;

    /**
     * @return (Updatable) A value which represents if auto confirming of the targets can be enabled
     * 
     */
    public Optional<Output<Boolean>> isTargetAutoConfirm() {
        return Optional.ofNullable(this.isTargetAutoConfirm);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * (Updatable) Conditions when met to send notifications on the fleet activities
     * 
     */
    @Import(name="notificationPreferences")
    private @Nullable Output<FleetNotificationPreferencesArgs> notificationPreferences;

    /**
     * @return (Updatable) Conditions when met to send notifications on the fleet activities
     * 
     */
    public Optional<Output<FleetNotificationPreferencesArgs>> notificationPreferences() {
        return Optional.ofNullable(this.notificationPreferences);
    }

    /**
     * Products associated with the Fleet
     * 
     */
    @Import(name="products")
    private @Nullable Output<List<String>> products;

    /**
     * @return Products associated with the Fleet
     * 
     */
    public Optional<Output<List<String>>> products() {
        return Optional.ofNullable(this.products);
    }

    /**
     * Associated region
     * 
     */
    @Import(name="resourceRegion")
    private @Nullable Output<String> resourceRegion;

    /**
     * @return Associated region
     * 
     */
    public Optional<Output<String>> resourceRegion() {
        return Optional.ofNullable(this.resourceRegion);
    }

    /**
     * Type of resource selection in a fleet
     * 
     */
    @Import(name="resourceSelectionType")
    private @Nullable Output<String> resourceSelectionType;

    /**
     * @return Type of resource selection in a fleet
     * 
     */
    public Optional<Output<String>> resourceSelectionType() {
        return Optional.ofNullable(this.resourceSelectionType);
    }

    /**
     * (Updatable) Rule Selection Criteria
     * 
     */
    @Import(name="ruleSelectionCriteria")
    private @Nullable Output<FleetRuleSelectionCriteriaArgs> ruleSelectionCriteria;

    /**
     * @return (Updatable) Rule Selection Criteria
     * 
     */
    public Optional<Output<FleetRuleSelectionCriteriaArgs>> ruleSelectionCriteria() {
        return Optional.ofNullable(this.ruleSelectionCriteria);
    }

    /**
     * The lifecycle state of the Fleet.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The lifecycle state of the Fleet.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private FleetState() {}

    private FleetState(FleetState $) {
        this.applicationType = $.applicationType;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.environmentType = $.environmentType;
        this.fleetType = $.fleetType;
        this.freeformTags = $.freeformTags;
        this.groupType = $.groupType;
        this.isTargetAutoConfirm = $.isTargetAutoConfirm;
        this.lifecycleDetails = $.lifecycleDetails;
        this.notificationPreferences = $.notificationPreferences;
        this.products = $.products;
        this.resourceRegion = $.resourceRegion;
        this.resourceSelectionType = $.resourceSelectionType;
        this.ruleSelectionCriteria = $.ruleSelectionCriteria;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetState $;

        public Builder() {
            $ = new FleetState();
        }

        public Builder(FleetState defaults) {
            $ = new FleetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationType Application Type associated with the Fleet.Applicable for Environment fleet types.
         * 
         * @return builder
         * 
         */
        public Builder applicationType(@Nullable Output<String> applicationType) {
            $.applicationType = applicationType;
            return this;
        }

        /**
         * @param applicationType Application Type associated with the Fleet.Applicable for Environment fleet types.
         * 
         * @return builder
         * 
         */
        public Builder applicationType(String applicationType) {
            return applicationType(Output.of(applicationType));
        }

        /**
         * @param compartmentId Tenancy OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Tenancy OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param environmentType Environment Type associated with the Fleet.Applicable for Environment fleet types.
         * 
         * @return builder
         * 
         */
        public Builder environmentType(@Nullable Output<String> environmentType) {
            $.environmentType = environmentType;
            return this;
        }

        /**
         * @param environmentType Environment Type associated with the Fleet.Applicable for Environment fleet types.
         * 
         * @return builder
         * 
         */
        public Builder environmentType(String environmentType) {
            return environmentType(Output.of(environmentType));
        }

        /**
         * @param fleetType Type of the Fleet
         * 
         * @return builder
         * 
         */
        public Builder fleetType(@Nullable Output<String> fleetType) {
            $.fleetType = fleetType;
            return this;
        }

        /**
         * @param fleetType Type of the Fleet
         * 
         * @return builder
         * 
         */
        public Builder fleetType(String fleetType) {
            return fleetType(Output.of(fleetType));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param groupType Group Type associated with Group Fleet.Applicable for Group fleet types.
         * 
         * @return builder
         * 
         */
        public Builder groupType(@Nullable Output<String> groupType) {
            $.groupType = groupType;
            return this;
        }

        /**
         * @param groupType Group Type associated with Group Fleet.Applicable for Group fleet types.
         * 
         * @return builder
         * 
         */
        public Builder groupType(String groupType) {
            return groupType(Output.of(groupType));
        }

        /**
         * @param isTargetAutoConfirm (Updatable) A value which represents if auto confirming of the targets can be enabled
         * 
         * @return builder
         * 
         */
        public Builder isTargetAutoConfirm(@Nullable Output<Boolean> isTargetAutoConfirm) {
            $.isTargetAutoConfirm = isTargetAutoConfirm;
            return this;
        }

        /**
         * @param isTargetAutoConfirm (Updatable) A value which represents if auto confirming of the targets can be enabled
         * 
         * @return builder
         * 
         */
        public Builder isTargetAutoConfirm(Boolean isTargetAutoConfirm) {
            return isTargetAutoConfirm(Output.of(isTargetAutoConfirm));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param notificationPreferences (Updatable) Conditions when met to send notifications on the fleet activities
         * 
         * @return builder
         * 
         */
        public Builder notificationPreferences(@Nullable Output<FleetNotificationPreferencesArgs> notificationPreferences) {
            $.notificationPreferences = notificationPreferences;
            return this;
        }

        /**
         * @param notificationPreferences (Updatable) Conditions when met to send notifications on the fleet activities
         * 
         * @return builder
         * 
         */
        public Builder notificationPreferences(FleetNotificationPreferencesArgs notificationPreferences) {
            return notificationPreferences(Output.of(notificationPreferences));
        }

        /**
         * @param products Products associated with the Fleet
         * 
         * @return builder
         * 
         */
        public Builder products(@Nullable Output<List<String>> products) {
            $.products = products;
            return this;
        }

        /**
         * @param products Products associated with the Fleet
         * 
         * @return builder
         * 
         */
        public Builder products(List<String> products) {
            return products(Output.of(products));
        }

        /**
         * @param products Products associated with the Fleet
         * 
         * @return builder
         * 
         */
        public Builder products(String... products) {
            return products(List.of(products));
        }

        /**
         * @param resourceRegion Associated region
         * 
         * @return builder
         * 
         */
        public Builder resourceRegion(@Nullable Output<String> resourceRegion) {
            $.resourceRegion = resourceRegion;
            return this;
        }

        /**
         * @param resourceRegion Associated region
         * 
         * @return builder
         * 
         */
        public Builder resourceRegion(String resourceRegion) {
            return resourceRegion(Output.of(resourceRegion));
        }

        /**
         * @param resourceSelectionType Type of resource selection in a fleet
         * 
         * @return builder
         * 
         */
        public Builder resourceSelectionType(@Nullable Output<String> resourceSelectionType) {
            $.resourceSelectionType = resourceSelectionType;
            return this;
        }

        /**
         * @param resourceSelectionType Type of resource selection in a fleet
         * 
         * @return builder
         * 
         */
        public Builder resourceSelectionType(String resourceSelectionType) {
            return resourceSelectionType(Output.of(resourceSelectionType));
        }

        /**
         * @param ruleSelectionCriteria (Updatable) Rule Selection Criteria
         * 
         * @return builder
         * 
         */
        public Builder ruleSelectionCriteria(@Nullable Output<FleetRuleSelectionCriteriaArgs> ruleSelectionCriteria) {
            $.ruleSelectionCriteria = ruleSelectionCriteria;
            return this;
        }

        /**
         * @param ruleSelectionCriteria (Updatable) Rule Selection Criteria
         * 
         * @return builder
         * 
         */
        public Builder ruleSelectionCriteria(FleetRuleSelectionCriteriaArgs ruleSelectionCriteria) {
            return ruleSelectionCriteria(Output.of(ruleSelectionCriteria));
        }

        /**
         * @param state The lifecycle state of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The lifecycle state of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time this resource was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time this resource was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time this resource was last updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time this resource was last updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public FleetState build() {
            return $;
        }
    }

}
