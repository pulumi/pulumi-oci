// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.GetFleetCredentialsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFleetCredentialsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFleetCredentialsArgs Empty = new GetFleetCredentialsArgs();

    /**
     * Compartment OCID
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return Compartment OCID
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A filter to return only resources whose credentialLevel matches the given credentialLevel.
     * 
     */
    @Import(name="credentialLevel")
    private @Nullable Output<String> credentialLevel;

    /**
     * @return A filter to return only resources whose credentialLevel matches the given credentialLevel.
     * 
     */
    public Optional<Output<String>> credentialLevel() {
        return Optional.ofNullable(this.credentialLevel);
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetFleetCredentialsFilterArgs>> filters;

    public Optional<Output<List<GetFleetCredentialsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Unique Fleet identifier.
     * 
     */
    @Import(name="fleetId", required=true)
    private Output<String> fleetId;

    /**
     * @return Unique Fleet identifier.
     * 
     */
    public Output<String> fleetId() {
        return this.fleetId;
    }

    /**
     * A filter to return only resources whose credential identifier matches the given identifier.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return A filter to return only resources whose credential identifier matches the given identifier.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Resource Identifier
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return Resource Identifier
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * A filter to return only resources whose lifecycleState matches the given lifecycleState.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to return only resources whose lifecycleState matches the given lifecycleState.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter to return only resources whose target matches the given target name.
     * 
     */
    @Import(name="target")
    private @Nullable Output<String> target;

    /**
     * @return A filter to return only resources whose target matches the given target name.
     * 
     */
    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    private GetFleetCredentialsArgs() {}

    private GetFleetCredentialsArgs(GetFleetCredentialsArgs $) {
        this.compartmentId = $.compartmentId;
        this.credentialLevel = $.credentialLevel;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.fleetId = $.fleetId;
        this.id = $.id;
        this.resourceId = $.resourceId;
        this.state = $.state;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFleetCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFleetCredentialsArgs $;

        public Builder() {
            $ = new GetFleetCredentialsArgs();
        }

        public Builder(GetFleetCredentialsArgs defaults) {
            $ = new GetFleetCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId Compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Compartment OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param credentialLevel A filter to return only resources whose credentialLevel matches the given credentialLevel.
         * 
         * @return builder
         * 
         */
        public Builder credentialLevel(@Nullable Output<String> credentialLevel) {
            $.credentialLevel = credentialLevel;
            return this;
        }

        /**
         * @param credentialLevel A filter to return only resources whose credentialLevel matches the given credentialLevel.
         * 
         * @return builder
         * 
         */
        public Builder credentialLevel(String credentialLevel) {
            return credentialLevel(Output.of(credentialLevel));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetFleetCredentialsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetFleetCredentialsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetFleetCredentialsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fleetId Unique Fleet identifier.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(Output<String> fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param fleetId Unique Fleet identifier.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            return fleetId(Output.of(fleetId));
        }

        /**
         * @param id A filter to return only resources whose credential identifier matches the given identifier.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id A filter to return only resources whose credential identifier matches the given identifier.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param resourceId Resource Identifier
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId Resource Identifier
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param state A filter to return only resources whose lifecycleState matches the given lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only resources whose lifecycleState matches the given lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param target A filter to return only resources whose target matches the given target name.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target A filter to return only resources whose target matches the given target name.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        public GetFleetCredentialsArgs build() {
            if ($.fleetId == null) {
                throw new MissingRequiredPropertyException("GetFleetCredentialsArgs", "fleetId");
            }
            return $;
        }
    }

}
