// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetFleetPropertyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFleetPropertyArgs Empty = new GetFleetPropertyArgs();

    /**
     * unique Fleet identifier
     * 
     */
    @Import(name="fleetId", required=true)
    private Output<String> fleetId;

    /**
     * @return unique Fleet identifier
     * 
     */
    public Output<String> fleetId() {
        return this.fleetId;
    }

    /**
     * unique FleetProperty identifier
     * 
     */
    @Import(name="fleetPropertyId", required=true)
    private Output<String> fleetPropertyId;

    /**
     * @return unique FleetProperty identifier
     * 
     */
    public Output<String> fleetPropertyId() {
        return this.fleetPropertyId;
    }

    private GetFleetPropertyArgs() {}

    private GetFleetPropertyArgs(GetFleetPropertyArgs $) {
        this.fleetId = $.fleetId;
        this.fleetPropertyId = $.fleetPropertyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFleetPropertyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFleetPropertyArgs $;

        public Builder() {
            $ = new GetFleetPropertyArgs();
        }

        public Builder(GetFleetPropertyArgs defaults) {
            $ = new GetFleetPropertyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fleetId unique Fleet identifier
         * 
         * @return builder
         * 
         */
        public Builder fleetId(Output<String> fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param fleetId unique Fleet identifier
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            return fleetId(Output.of(fleetId));
        }

        /**
         * @param fleetPropertyId unique FleetProperty identifier
         * 
         * @return builder
         * 
         */
        public Builder fleetPropertyId(Output<String> fleetPropertyId) {
            $.fleetPropertyId = fleetPropertyId;
            return this;
        }

        /**
         * @param fleetPropertyId unique FleetProperty identifier
         * 
         * @return builder
         * 
         */
        public Builder fleetPropertyId(String fleetPropertyId) {
            return fleetPropertyId(Output.of(fleetPropertyId));
        }

        public GetFleetPropertyArgs build() {
            if ($.fleetId == null) {
                throw new MissingRequiredPropertyException("GetFleetPropertyArgs", "fleetId");
            }
            if ($.fleetPropertyId == null) {
                throw new MissingRequiredPropertyException("GetFleetPropertyArgs", "fleetPropertyId");
            }
            return $;
        }
    }

}
