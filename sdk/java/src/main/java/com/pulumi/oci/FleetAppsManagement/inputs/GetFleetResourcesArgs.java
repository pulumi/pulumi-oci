// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.GetFleetResourcesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFleetResourcesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFleetResourcesArgs Empty = new GetFleetResourcesArgs();

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetFleetResourcesFilterArgs>> filters;

    public Optional<Output<List<GetFleetResourcesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * unique Fleet identifier
     * 
     */
    @Import(name="fleetId", required=true)
    private Output<String> fleetId;

    /**
     * @return unique Fleet identifier
     * 
     */
    public Output<String> fleetId() {
        return this.fleetId;
    }

    /**
     * A filter to return resources that match the Type
     * 
     */
    @Import(name="fleetResourceType")
    private @Nullable Output<String> fleetResourceType;

    /**
     * @return A filter to return resources that match the Type
     * 
     */
    public Optional<Output<String>> fleetResourceType() {
        return Optional.ofNullable(this.fleetResourceType);
    }

    /**
     * unique FleetResource identifier
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return unique FleetResource identifier
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Resource Tenancy Id
     * 
     */
    @Import(name="tenancyId")
    private @Nullable Output<String> tenancyId;

    /**
     * @return Resource Tenancy Id
     * 
     */
    public Optional<Output<String>> tenancyId() {
        return Optional.ofNullable(this.tenancyId);
    }

    private GetFleetResourcesArgs() {}

    private GetFleetResourcesArgs(GetFleetResourcesArgs $) {
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.fleetId = $.fleetId;
        this.fleetResourceType = $.fleetResourceType;
        this.id = $.id;
        this.state = $.state;
        this.tenancyId = $.tenancyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFleetResourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFleetResourcesArgs $;

        public Builder() {
            $ = new GetFleetResourcesArgs();
        }

        public Builder(GetFleetResourcesArgs defaults) {
            $ = new GetFleetResourcesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetFleetResourcesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetFleetResourcesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetFleetResourcesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fleetId unique Fleet identifier
         * 
         * @return builder
         * 
         */
        public Builder fleetId(Output<String> fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param fleetId unique Fleet identifier
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            return fleetId(Output.of(fleetId));
        }

        /**
         * @param fleetResourceType A filter to return resources that match the Type
         * 
         * @return builder
         * 
         */
        public Builder fleetResourceType(@Nullable Output<String> fleetResourceType) {
            $.fleetResourceType = fleetResourceType;
            return this;
        }

        /**
         * @param fleetResourceType A filter to return resources that match the Type
         * 
         * @return builder
         * 
         */
        public Builder fleetResourceType(String fleetResourceType) {
            return fleetResourceType(Output.of(fleetResourceType));
        }

        /**
         * @param id unique FleetResource identifier
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id unique FleetResource identifier
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param state A filter to return only resources their lifecycleState matches the given lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only resources their lifecycleState matches the given lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param tenancyId Resource Tenancy Id
         * 
         * @return builder
         * 
         */
        public Builder tenancyId(@Nullable Output<String> tenancyId) {
            $.tenancyId = tenancyId;
            return this;
        }

        /**
         * @param tenancyId Resource Tenancy Id
         * 
         * @return builder
         * 
         */
        public Builder tenancyId(String tenancyId) {
            return tenancyId(Output.of(tenancyId));
        }

        public GetFleetResourcesArgs build() {
            if ($.fleetId == null) {
                throw new MissingRequiredPropertyException("GetFleetResourcesArgs", "fleetId");
            }
            return $;
        }
    }

}
