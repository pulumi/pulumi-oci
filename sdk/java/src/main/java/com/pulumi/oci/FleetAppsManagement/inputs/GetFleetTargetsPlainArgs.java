// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.GetFleetTargetsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFleetTargetsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFleetTargetsPlainArgs Empty = new GetFleetTargetsPlainArgs();

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetFleetTargetsFilter> filters;

    public Optional<List<GetFleetTargetsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Unique Fleet identifier.
     * 
     */
    @Import(name="fleetId", required=true)
    private String fleetId;

    /**
     * @return Unique Fleet identifier.
     * 
     */
    public String fleetId() {
        return this.fleetId;
    }

    /**
     * Product Name.
     * 
     */
    @Import(name="product")
    private @Nullable String product;

    /**
     * @return Product Name.
     * 
     */
    public Optional<String> product() {
        return Optional.ofNullable(this.product);
    }

    /**
     * Resource Display Name.
     * 
     */
    @Import(name="resourceDisplayName")
    private @Nullable String resourceDisplayName;

    /**
     * @return Resource Display Name.
     * 
     */
    public Optional<String> resourceDisplayName() {
        return Optional.ofNullable(this.resourceDisplayName);
    }

    /**
     * Resource Identifier
     * 
     */
    @Import(name="resourceId")
    private @Nullable String resourceId;

    /**
     * @return Resource Identifier
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    private GetFleetTargetsPlainArgs() {}

    private GetFleetTargetsPlainArgs(GetFleetTargetsPlainArgs $) {
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.fleetId = $.fleetId;
        this.product = $.product;
        this.resourceDisplayName = $.resourceDisplayName;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFleetTargetsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFleetTargetsPlainArgs $;

        public Builder() {
            $ = new GetFleetTargetsPlainArgs();
        }

        public Builder(GetFleetTargetsPlainArgs defaults) {
            $ = new GetFleetTargetsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetFleetTargetsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetFleetTargetsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fleetId Unique Fleet identifier.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param product Product Name.
         * 
         * @return builder
         * 
         */
        public Builder product(@Nullable String product) {
            $.product = product;
            return this;
        }

        /**
         * @param resourceDisplayName Resource Display Name.
         * 
         * @return builder
         * 
         */
        public Builder resourceDisplayName(@Nullable String resourceDisplayName) {
            $.resourceDisplayName = resourceDisplayName;
            return this;
        }

        /**
         * @param resourceId Resource Identifier
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public GetFleetTargetsPlainArgs build() {
            if ($.fleetId == null) {
                throw new MissingRequiredPropertyException("GetFleetTargetsPlainArgs", "fleetId");
            }
            return $;
        }
    }

}
