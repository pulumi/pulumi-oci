// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.GetInventoryRecordsFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInventoryRecordsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInventoryRecordsArgs Empty = new GetInventoryRecordsArgs();

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Output<Boolean> compartmentIdInSubtree;

    /**
     * @return If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
     * 
     */
    public Optional<Output<Boolean>> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetInventoryRecordsFilterArgs>> filters;

    public Optional<Output<List<GetInventoryRecordsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * unique Fleet identifier
     * 
     */
    @Import(name="fleetId")
    private @Nullable Output<String> fleetId;

    /**
     * @return unique Fleet identifier
     * 
     */
    public Optional<Output<String>> fleetId() {
        return Optional.ofNullable(this.fleetId);
    }

    /**
     * Resource Identifier
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return Resource Identifier
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    private GetInventoryRecordsArgs() {}

    private GetInventoryRecordsArgs(GetInventoryRecordsArgs $) {
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.filters = $.filters;
        this.fleetId = $.fleetId;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInventoryRecordsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInventoryRecordsArgs $;

        public Builder() {
            $ = new GetInventoryRecordsArgs();
        }

        public Builder(GetInventoryRecordsArgs defaults) {
            $ = new GetInventoryRecordsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param compartmentIdInSubtree If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Output<Boolean> compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param compartmentIdInSubtree If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            return compartmentIdInSubtree(Output.of(compartmentIdInSubtree));
        }

        public Builder filters(@Nullable Output<List<GetInventoryRecordsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetInventoryRecordsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetInventoryRecordsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fleetId unique Fleet identifier
         * 
         * @return builder
         * 
         */
        public Builder fleetId(@Nullable Output<String> fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param fleetId unique Fleet identifier
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            return fleetId(Output.of(fleetId));
        }

        /**
         * @param resourceId Resource Identifier
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId Resource Identifier
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        public GetInventoryRecordsArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetInventoryRecordsArgs", "compartmentId");
            }
            return $;
        }
    }

}
