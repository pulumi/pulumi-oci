// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.GetInventoryRecordsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInventoryRecordsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInventoryRecordsPlainArgs Empty = new GetInventoryRecordsPlainArgs();

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Boolean compartmentIdInSubtree;

    /**
     * @return If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
     * 
     */
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    @Import(name="filters")
    private @Nullable List<GetInventoryRecordsFilter> filters;

    public Optional<List<GetInventoryRecordsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * unique Fleet identifier
     * 
     */
    @Import(name="fleetId")
    private @Nullable String fleetId;

    /**
     * @return unique Fleet identifier
     * 
     */
    public Optional<String> fleetId() {
        return Optional.ofNullable(this.fleetId);
    }

    /**
     * Resource Identifier
     * 
     */
    @Import(name="resourceId")
    private @Nullable String resourceId;

    /**
     * @return Resource Identifier
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    private GetInventoryRecordsPlainArgs() {}

    private GetInventoryRecordsPlainArgs(GetInventoryRecordsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.filters = $.filters;
        this.fleetId = $.fleetId;
        this.resourceId = $.resourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInventoryRecordsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInventoryRecordsPlainArgs $;

        public Builder() {
            $ = new GetInventoryRecordsPlainArgs();
        }

        public Builder(GetInventoryRecordsPlainArgs defaults) {
            $ = new GetInventoryRecordsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentIdInSubtree If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        public Builder filters(@Nullable List<GetInventoryRecordsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetInventoryRecordsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fleetId unique Fleet identifier
         * 
         * @return builder
         * 
         */
        public Builder fleetId(@Nullable String fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param resourceId Resource Identifier
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        public GetInventoryRecordsPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetInventoryRecordsPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
