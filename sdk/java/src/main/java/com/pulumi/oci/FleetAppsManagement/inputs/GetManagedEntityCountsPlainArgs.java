// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.FleetAppsManagement.inputs.GetManagedEntityCountsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedEntityCountsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedEntityCountsPlainArgs Empty = new GetManagedEntityCountsPlainArgs();

    /**
     * The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Boolean compartmentIdInSubtree;

    /**
     * @return If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
     * 
     */
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    @Import(name="filters")
    private @Nullable List<GetManagedEntityCountsFilter> filters;

    public Optional<List<GetManagedEntityCountsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetManagedEntityCountsPlainArgs() {}

    private GetManagedEntityCountsPlainArgs(GetManagedEntityCountsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedEntityCountsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedEntityCountsPlainArgs $;

        public Builder() {
            $ = new GetManagedEntityCountsPlainArgs();
        }

        public Builder(GetManagedEntityCountsPlainArgs defaults) {
            $ = new GetManagedEntityCountsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentIdInSubtree If set to true, resources will be returned for not only the provided compartment, but all compartments which descend from it. Which resources are returned and their field contents depends on the value of accessLevel.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        public Builder filters(@Nullable List<GetManagedEntityCountsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetManagedEntityCountsFilter... filters) {
            return filters(List.of(filters));
        }

        public GetManagedEntityCountsPlainArgs build() {
            return $;
        }
    }

}
