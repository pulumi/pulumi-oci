// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.FleetAppsManagement.inputs.GetSchedulerExecutionsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSchedulerExecutionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSchedulerExecutionsArgs Empty = new GetSchedulerExecutionsArgs();

    /**
     * The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetSchedulerExecutionsFilterArgs>> filters;

    public Optional<Output<List<GetSchedulerExecutionsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * ResourceId filter (Example FleetId)
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return ResourceId filter (Example FleetId)
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
     * 
     */
    @Import(name="runbookId")
    private @Nullable Output<String> runbookId;

    /**
     * @return A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
     * 
     */
    public Optional<Output<String>> runbookId() {
        return Optional.ofNullable(this.runbookId);
    }

    /**
     * RunbookVersion Name filter
     * 
     */
    @Import(name="runbookVersionName")
    private @Nullable Output<String> runbookVersionName;

    /**
     * @return RunbookVersion Name filter
     * 
     */
    public Optional<Output<String>> runbookVersionName() {
        return Optional.ofNullable(this.runbookVersionName);
    }

    /**
     * SchedulerDefinition identifier
     * 
     */
    @Import(name="schedulerDefintionId")
    private @Nullable Output<String> schedulerDefintionId;

    /**
     * @return SchedulerDefinition identifier
     * 
     */
    public Optional<Output<String>> schedulerDefintionId() {
        return Optional.ofNullable(this.schedulerDefintionId);
    }

    /**
     * SchedulerJob identifier filter
     * 
     */
    @Import(name="schedulerJobId")
    private @Nullable Output<String> schedulerJobId;

    /**
     * @return SchedulerJob identifier filter
     * 
     */
    public Optional<Output<String>> schedulerJobId() {
        return Optional.ofNullable(this.schedulerJobId);
    }

    /**
     * A filter to return only resources their subState matches the given subState.
     * 
     */
    @Import(name="substate")
    private @Nullable Output<String> substate;

    /**
     * @return A filter to return only resources their subState matches the given subState.
     * 
     */
    public Optional<Output<String>> substate() {
        return Optional.ofNullable(this.substate);
    }

    /**
     * Scheduled Time
     * 
     */
    @Import(name="timeScheduledGreaterThanOrEqualTo")
    private @Nullable Output<String> timeScheduledGreaterThanOrEqualTo;

    /**
     * @return Scheduled Time
     * 
     */
    public Optional<Output<String>> timeScheduledGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeScheduledGreaterThanOrEqualTo);
    }

    /**
     * Scheduled Time
     * 
     */
    @Import(name="timeScheduledLessThan")
    private @Nullable Output<String> timeScheduledLessThan;

    /**
     * @return Scheduled Time
     * 
     */
    public Optional<Output<String>> timeScheduledLessThan() {
        return Optional.ofNullable(this.timeScheduledLessThan);
    }

    private GetSchedulerExecutionsArgs() {}

    private GetSchedulerExecutionsArgs(GetSchedulerExecutionsArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.resourceId = $.resourceId;
        this.runbookId = $.runbookId;
        this.runbookVersionName = $.runbookVersionName;
        this.schedulerDefintionId = $.schedulerDefintionId;
        this.schedulerJobId = $.schedulerJobId;
        this.substate = $.substate;
        this.timeScheduledGreaterThanOrEqualTo = $.timeScheduledGreaterThanOrEqualTo;
        this.timeScheduledLessThan = $.timeScheduledLessThan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchedulerExecutionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchedulerExecutionsArgs $;

        public Builder() {
            $ = new GetSchedulerExecutionsArgs();
        }

        public Builder(GetSchedulerExecutionsArgs defaults) {
            $ = new GetSchedulerExecutionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetSchedulerExecutionsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetSchedulerExecutionsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSchedulerExecutionsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param resourceId ResourceId filter (Example FleetId)
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId ResourceId filter (Example FleetId)
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param runbookId A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
         * 
         * @return builder
         * 
         */
        public Builder runbookId(@Nullable Output<String> runbookId) {
            $.runbookId = runbookId;
            return this;
        }

        /**
         * @param runbookId A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
         * 
         * @return builder
         * 
         */
        public Builder runbookId(String runbookId) {
            return runbookId(Output.of(runbookId));
        }

        /**
         * @param runbookVersionName RunbookVersion Name filter
         * 
         * @return builder
         * 
         */
        public Builder runbookVersionName(@Nullable Output<String> runbookVersionName) {
            $.runbookVersionName = runbookVersionName;
            return this;
        }

        /**
         * @param runbookVersionName RunbookVersion Name filter
         * 
         * @return builder
         * 
         */
        public Builder runbookVersionName(String runbookVersionName) {
            return runbookVersionName(Output.of(runbookVersionName));
        }

        /**
         * @param schedulerDefintionId SchedulerDefinition identifier
         * 
         * @return builder
         * 
         */
        public Builder schedulerDefintionId(@Nullable Output<String> schedulerDefintionId) {
            $.schedulerDefintionId = schedulerDefintionId;
            return this;
        }

        /**
         * @param schedulerDefintionId SchedulerDefinition identifier
         * 
         * @return builder
         * 
         */
        public Builder schedulerDefintionId(String schedulerDefintionId) {
            return schedulerDefintionId(Output.of(schedulerDefintionId));
        }

        /**
         * @param schedulerJobId SchedulerJob identifier filter
         * 
         * @return builder
         * 
         */
        public Builder schedulerJobId(@Nullable Output<String> schedulerJobId) {
            $.schedulerJobId = schedulerJobId;
            return this;
        }

        /**
         * @param schedulerJobId SchedulerJob identifier filter
         * 
         * @return builder
         * 
         */
        public Builder schedulerJobId(String schedulerJobId) {
            return schedulerJobId(Output.of(schedulerJobId));
        }

        /**
         * @param substate A filter to return only resources their subState matches the given subState.
         * 
         * @return builder
         * 
         */
        public Builder substate(@Nullable Output<String> substate) {
            $.substate = substate;
            return this;
        }

        /**
         * @param substate A filter to return only resources their subState matches the given subState.
         * 
         * @return builder
         * 
         */
        public Builder substate(String substate) {
            return substate(Output.of(substate));
        }

        /**
         * @param timeScheduledGreaterThanOrEqualTo Scheduled Time
         * 
         * @return builder
         * 
         */
        public Builder timeScheduledGreaterThanOrEqualTo(@Nullable Output<String> timeScheduledGreaterThanOrEqualTo) {
            $.timeScheduledGreaterThanOrEqualTo = timeScheduledGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeScheduledGreaterThanOrEqualTo Scheduled Time
         * 
         * @return builder
         * 
         */
        public Builder timeScheduledGreaterThanOrEqualTo(String timeScheduledGreaterThanOrEqualTo) {
            return timeScheduledGreaterThanOrEqualTo(Output.of(timeScheduledGreaterThanOrEqualTo));
        }

        /**
         * @param timeScheduledLessThan Scheduled Time
         * 
         * @return builder
         * 
         */
        public Builder timeScheduledLessThan(@Nullable Output<String> timeScheduledLessThan) {
            $.timeScheduledLessThan = timeScheduledLessThan;
            return this;
        }

        /**
         * @param timeScheduledLessThan Scheduled Time
         * 
         * @return builder
         * 
         */
        public Builder timeScheduledLessThan(String timeScheduledLessThan) {
            return timeScheduledLessThan(Output.of(timeScheduledLessThan));
        }

        public GetSchedulerExecutionsArgs build() {
            return $;
        }
    }

}
