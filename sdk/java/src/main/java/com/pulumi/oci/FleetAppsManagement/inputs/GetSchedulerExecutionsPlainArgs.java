// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.FleetAppsManagement.inputs.GetSchedulerExecutionsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSchedulerExecutionsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSchedulerExecutionsPlainArgs Empty = new GetSchedulerExecutionsPlainArgs();

    /**
     * The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetSchedulerExecutionsFilter> filters;

    public Optional<List<GetSchedulerExecutionsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * ResourceId filter (Example FleetId)
     * 
     */
    @Import(name="resourceId")
    private @Nullable String resourceId;

    /**
     * @return ResourceId filter (Example FleetId)
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
     * 
     */
    @Import(name="runbookId")
    private @Nullable String runbookId;

    /**
     * @return A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
     * 
     */
    public Optional<String> runbookId() {
        return Optional.ofNullable(this.runbookId);
    }

    /**
     * RunbookVersion Name filter
     * 
     */
    @Import(name="runbookVersionName")
    private @Nullable String runbookVersionName;

    /**
     * @return RunbookVersion Name filter
     * 
     */
    public Optional<String> runbookVersionName() {
        return Optional.ofNullable(this.runbookVersionName);
    }

    /**
     * SchedulerDefinition identifier
     * 
     */
    @Import(name="schedulerDefintionId")
    private @Nullable String schedulerDefintionId;

    /**
     * @return SchedulerDefinition identifier
     * 
     */
    public Optional<String> schedulerDefintionId() {
        return Optional.ofNullable(this.schedulerDefintionId);
    }

    /**
     * SchedulerJob identifier filter
     * 
     */
    @Import(name="schedulerJobId")
    private @Nullable String schedulerJobId;

    /**
     * @return SchedulerJob identifier filter
     * 
     */
    public Optional<String> schedulerJobId() {
        return Optional.ofNullable(this.schedulerJobId);
    }

    /**
     * A filter to return only resources their subState matches the given subState.
     * 
     */
    @Import(name="substate")
    private @Nullable String substate;

    /**
     * @return A filter to return only resources their subState matches the given subState.
     * 
     */
    public Optional<String> substate() {
        return Optional.ofNullable(this.substate);
    }

    /**
     * Scheduled Time
     * 
     */
    @Import(name="timeScheduledGreaterThanOrEqualTo")
    private @Nullable String timeScheduledGreaterThanOrEqualTo;

    /**
     * @return Scheduled Time
     * 
     */
    public Optional<String> timeScheduledGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeScheduledGreaterThanOrEqualTo);
    }

    /**
     * Scheduled Time
     * 
     */
    @Import(name="timeScheduledLessThan")
    private @Nullable String timeScheduledLessThan;

    /**
     * @return Scheduled Time
     * 
     */
    public Optional<String> timeScheduledLessThan() {
        return Optional.ofNullable(this.timeScheduledLessThan);
    }

    private GetSchedulerExecutionsPlainArgs() {}

    private GetSchedulerExecutionsPlainArgs(GetSchedulerExecutionsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.resourceId = $.resourceId;
        this.runbookId = $.runbookId;
        this.runbookVersionName = $.runbookVersionName;
        this.schedulerDefintionId = $.schedulerDefintionId;
        this.schedulerJobId = $.schedulerJobId;
        this.substate = $.substate;
        this.timeScheduledGreaterThanOrEqualTo = $.timeScheduledGreaterThanOrEqualTo;
        this.timeScheduledLessThan = $.timeScheduledLessThan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchedulerExecutionsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchedulerExecutionsPlainArgs $;

        public Builder() {
            $ = new GetSchedulerExecutionsPlainArgs();
        }

        public Builder(GetSchedulerExecutionsPlainArgs defaults) {
            $ = new GetSchedulerExecutionsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetSchedulerExecutionsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetSchedulerExecutionsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param resourceId ResourceId filter (Example FleetId)
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable String resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param runbookId A filter to return only schedule definitions whose associated runbookId matches the given runbookId.
         * 
         * @return builder
         * 
         */
        public Builder runbookId(@Nullable String runbookId) {
            $.runbookId = runbookId;
            return this;
        }

        /**
         * @param runbookVersionName RunbookVersion Name filter
         * 
         * @return builder
         * 
         */
        public Builder runbookVersionName(@Nullable String runbookVersionName) {
            $.runbookVersionName = runbookVersionName;
            return this;
        }

        /**
         * @param schedulerDefintionId SchedulerDefinition identifier
         * 
         * @return builder
         * 
         */
        public Builder schedulerDefintionId(@Nullable String schedulerDefintionId) {
            $.schedulerDefintionId = schedulerDefintionId;
            return this;
        }

        /**
         * @param schedulerJobId SchedulerJob identifier filter
         * 
         * @return builder
         * 
         */
        public Builder schedulerJobId(@Nullable String schedulerJobId) {
            $.schedulerJobId = schedulerJobId;
            return this;
        }

        /**
         * @param substate A filter to return only resources their subState matches the given subState.
         * 
         * @return builder
         * 
         */
        public Builder substate(@Nullable String substate) {
            $.substate = substate;
            return this;
        }

        /**
         * @param timeScheduledGreaterThanOrEqualTo Scheduled Time
         * 
         * @return builder
         * 
         */
        public Builder timeScheduledGreaterThanOrEqualTo(@Nullable String timeScheduledGreaterThanOrEqualTo) {
            $.timeScheduledGreaterThanOrEqualTo = timeScheduledGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeScheduledLessThan Scheduled Time
         * 
         * @return builder
         * 
         */
        public Builder timeScheduledLessThan(@Nullable String timeScheduledLessThan) {
            $.timeScheduledLessThan = timeScheduledLessThan;
            return this;
        }

        public GetSchedulerExecutionsPlainArgs build() {
            return $;
        }
    }

}
