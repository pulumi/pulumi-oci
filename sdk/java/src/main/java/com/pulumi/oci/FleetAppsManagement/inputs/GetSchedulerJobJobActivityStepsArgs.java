// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.GetSchedulerJobJobActivityStepsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSchedulerJobJobActivityStepsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSchedulerJobJobActivityStepsArgs Empty = new GetSchedulerJobJobActivityStepsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetSchedulerJobJobActivityStepsFilterArgs>> filters;

    public Optional<Output<List<GetSchedulerJobJobActivityStepsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * unique jobActivity identifier
     * 
     */
    @Import(name="jobActivityId", required=true)
    private Output<String> jobActivityId;

    /**
     * @return unique jobActivity identifier
     * 
     */
    public Output<String> jobActivityId() {
        return this.jobActivityId;
    }

    /**
     * Task Id
     * 
     */
    @Import(name="resourceTaskId")
    private @Nullable Output<String> resourceTaskId;

    /**
     * @return Task Id
     * 
     */
    public Optional<Output<String>> resourceTaskId() {
        return Optional.ofNullable(this.resourceTaskId);
    }

    /**
     * unique SchedulerJob identifier
     * 
     */
    @Import(name="schedulerJobId", required=true)
    private Output<String> schedulerJobId;

    /**
     * @return unique SchedulerJob identifier
     * 
     */
    public Output<String> schedulerJobId() {
        return this.schedulerJobId;
    }

    /**
     * Task Order Sequence
     * 
     */
    @Import(name="sequence")
    private @Nullable Output<String> sequence;

    /**
     * @return Task Order Sequence
     * 
     */
    public Optional<Output<String>> sequence() {
        return Optional.ofNullable(this.sequence);
    }

    /**
     * Unique step name
     * 
     */
    @Import(name="stepName")
    private @Nullable Output<String> stepName;

    /**
     * @return Unique step name
     * 
     */
    public Optional<Output<String>> stepName() {
        return Optional.ofNullable(this.stepName);
    }

    /**
     * Unique target name
     * 
     */
    @Import(name="targetName")
    private @Nullable Output<String> targetName;

    /**
     * @return Unique target name
     * 
     */
    public Optional<Output<String>> targetName() {
        return Optional.ofNullable(this.targetName);
    }

    private GetSchedulerJobJobActivityStepsArgs() {}

    private GetSchedulerJobJobActivityStepsArgs(GetSchedulerJobJobActivityStepsArgs $) {
        this.filters = $.filters;
        this.jobActivityId = $.jobActivityId;
        this.resourceTaskId = $.resourceTaskId;
        this.schedulerJobId = $.schedulerJobId;
        this.sequence = $.sequence;
        this.stepName = $.stepName;
        this.targetName = $.targetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSchedulerJobJobActivityStepsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSchedulerJobJobActivityStepsArgs $;

        public Builder() {
            $ = new GetSchedulerJobJobActivityStepsArgs();
        }

        public Builder(GetSchedulerJobJobActivityStepsArgs defaults) {
            $ = new GetSchedulerJobJobActivityStepsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetSchedulerJobJobActivityStepsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetSchedulerJobJobActivityStepsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSchedulerJobJobActivityStepsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param jobActivityId unique jobActivity identifier
         * 
         * @return builder
         * 
         */
        public Builder jobActivityId(Output<String> jobActivityId) {
            $.jobActivityId = jobActivityId;
            return this;
        }

        /**
         * @param jobActivityId unique jobActivity identifier
         * 
         * @return builder
         * 
         */
        public Builder jobActivityId(String jobActivityId) {
            return jobActivityId(Output.of(jobActivityId));
        }

        /**
         * @param resourceTaskId Task Id
         * 
         * @return builder
         * 
         */
        public Builder resourceTaskId(@Nullable Output<String> resourceTaskId) {
            $.resourceTaskId = resourceTaskId;
            return this;
        }

        /**
         * @param resourceTaskId Task Id
         * 
         * @return builder
         * 
         */
        public Builder resourceTaskId(String resourceTaskId) {
            return resourceTaskId(Output.of(resourceTaskId));
        }

        /**
         * @param schedulerJobId unique SchedulerJob identifier
         * 
         * @return builder
         * 
         */
        public Builder schedulerJobId(Output<String> schedulerJobId) {
            $.schedulerJobId = schedulerJobId;
            return this;
        }

        /**
         * @param schedulerJobId unique SchedulerJob identifier
         * 
         * @return builder
         * 
         */
        public Builder schedulerJobId(String schedulerJobId) {
            return schedulerJobId(Output.of(schedulerJobId));
        }

        /**
         * @param sequence Task Order Sequence
         * 
         * @return builder
         * 
         */
        public Builder sequence(@Nullable Output<String> sequence) {
            $.sequence = sequence;
            return this;
        }

        /**
         * @param sequence Task Order Sequence
         * 
         * @return builder
         * 
         */
        public Builder sequence(String sequence) {
            return sequence(Output.of(sequence));
        }

        /**
         * @param stepName Unique step name
         * 
         * @return builder
         * 
         */
        public Builder stepName(@Nullable Output<String> stepName) {
            $.stepName = stepName;
            return this;
        }

        /**
         * @param stepName Unique step name
         * 
         * @return builder
         * 
         */
        public Builder stepName(String stepName) {
            return stepName(Output.of(stepName));
        }

        /**
         * @param targetName Unique target name
         * 
         * @return builder
         * 
         */
        public Builder targetName(@Nullable Output<String> targetName) {
            $.targetName = targetName;
            return this;
        }

        /**
         * @param targetName Unique target name
         * 
         * @return builder
         * 
         */
        public Builder targetName(String targetName) {
            return targetName(Output.of(targetName));
        }

        public GetSchedulerJobJobActivityStepsArgs build() {
            if ($.jobActivityId == null) {
                throw new MissingRequiredPropertyException("GetSchedulerJobJobActivityStepsArgs", "jobActivityId");
            }
            if ($.schedulerJobId == null) {
                throw new MissingRequiredPropertyException("GetSchedulerJobJobActivityStepsArgs", "schedulerJobId");
            }
            return $;
        }
    }

}
