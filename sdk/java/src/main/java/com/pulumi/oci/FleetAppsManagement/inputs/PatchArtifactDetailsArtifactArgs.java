// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.FleetAppsManagement.inputs.PatchArtifactDetailsArtifactContentArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PatchArtifactDetailsArtifactArgs extends com.pulumi.resources.ResourceArgs {

    public static final PatchArtifactDetailsArtifactArgs Empty = new PatchArtifactDetailsArtifactArgs();

    /**
     * (Updatable) System architecture.
     * 
     */
    @Import(name="architecture")
    private @Nullable Output<String> architecture;

    /**
     * @return (Updatable) System architecture.
     * 
     */
    public Optional<Output<String>> architecture() {
        return Optional.ofNullable(this.architecture);
    }

    /**
     * (Updatable) Content Source details.
     * 
     */
    @Import(name="content")
    private @Nullable Output<PatchArtifactDetailsArtifactContentArgs> content;

    /**
     * @return (Updatable) Content Source details.
     * 
     */
    public Optional<Output<PatchArtifactDetailsArtifactContentArgs>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * (Updatable) The OS type the patch is applicable for.
     * 
     */
    @Import(name="osType")
    private @Nullable Output<String> osType;

    /**
     * @return (Updatable) The OS type the patch is applicable for.
     * 
     */
    public Optional<Output<String>> osType() {
        return Optional.ofNullable(this.osType);
    }

    private PatchArtifactDetailsArtifactArgs() {}

    private PatchArtifactDetailsArtifactArgs(PatchArtifactDetailsArtifactArgs $) {
        this.architecture = $.architecture;
        this.content = $.content;
        this.osType = $.osType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PatchArtifactDetailsArtifactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PatchArtifactDetailsArtifactArgs $;

        public Builder() {
            $ = new PatchArtifactDetailsArtifactArgs();
        }

        public Builder(PatchArtifactDetailsArtifactArgs defaults) {
            $ = new PatchArtifactDetailsArtifactArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param architecture (Updatable) System architecture.
         * 
         * @return builder
         * 
         */
        public Builder architecture(@Nullable Output<String> architecture) {
            $.architecture = architecture;
            return this;
        }

        /**
         * @param architecture (Updatable) System architecture.
         * 
         * @return builder
         * 
         */
        public Builder architecture(String architecture) {
            return architecture(Output.of(architecture));
        }

        /**
         * @param content (Updatable) Content Source details.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<PatchArtifactDetailsArtifactContentArgs> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content (Updatable) Content Source details.
         * 
         * @return builder
         * 
         */
        public Builder content(PatchArtifactDetailsArtifactContentArgs content) {
            return content(Output.of(content));
        }

        /**
         * @param osType (Updatable) The OS type the patch is applicable for.
         * 
         * @return builder
         * 
         */
        public Builder osType(@Nullable Output<String> osType) {
            $.osType = osType;
            return this;
        }

        /**
         * @param osType (Updatable) The OS type the patch is applicable for.
         * 
         * @return builder
         * 
         */
        public Builder osType(String osType) {
            return osType(Output.of(osType));
        }

        public PatchArtifactDetailsArtifactArgs build() {
            return $;
        }
    }

}
