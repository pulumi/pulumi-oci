// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PatchProductArgs extends com.pulumi.resources.ResourceArgs {

    public static final PatchProductArgs Empty = new PatchProductArgs();

    /**
     * (Updatable) PlatformConfiguration Id corresponding to the Product
     * 
     */
    @Import(name="platformConfigurationId", required=true)
    private Output<String> platformConfigurationId;

    /**
     * @return (Updatable) PlatformConfiguration Id corresponding to the Product
     * 
     */
    public Output<String> platformConfigurationId() {
        return this.platformConfigurationId;
    }

    /**
     * (Updatable) product version.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return (Updatable) product version.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    private PatchProductArgs() {}

    private PatchProductArgs(PatchProductArgs $) {
        this.platformConfigurationId = $.platformConfigurationId;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PatchProductArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PatchProductArgs $;

        public Builder() {
            $ = new PatchProductArgs();
        }

        public Builder(PatchProductArgs defaults) {
            $ = new PatchProductArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param platformConfigurationId (Updatable) PlatformConfiguration Id corresponding to the Product
         * 
         * @return builder
         * 
         */
        public Builder platformConfigurationId(Output<String> platformConfigurationId) {
            $.platformConfigurationId = platformConfigurationId;
            return this;
        }

        /**
         * @param platformConfigurationId (Updatable) PlatformConfiguration Id corresponding to the Product
         * 
         * @return builder
         * 
         */
        public Builder platformConfigurationId(String platformConfigurationId) {
            return platformConfigurationId(Output.of(platformConfigurationId));
        }

        /**
         * @param version (Updatable) product version.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version (Updatable) product version.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public PatchProductArgs build() {
            if ($.platformConfigurationId == null) {
                throw new MissingRequiredPropertyException("PatchProductArgs", "platformConfigurationId");
            }
            if ($.version == null) {
                throw new MissingRequiredPropertyException("PatchProductArgs", "version");
            }
            return $;
        }
    }

}
