// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.PlatformConfigurationConfigCategoryDetailsCompatibleProductArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.PlatformConfigurationConfigCategoryDetailsCredentialArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.PlatformConfigurationConfigCategoryDetailsPatchTypeArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.PlatformConfigurationConfigCategoryDetailsProductArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PlatformConfigurationConfigCategoryDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PlatformConfigurationConfigCategoryDetailsArgs Empty = new PlatformConfigurationConfigCategoryDetailsArgs();

    /**
     * (Updatable) Products compatible with this Product. Provide products from the list of other products you have created that are compatible with the present one
     * 
     */
    @Import(name="compatibleProducts")
    private @Nullable Output<List<PlatformConfigurationConfigCategoryDetailsCompatibleProductArgs>> compatibleProducts;

    /**
     * @return (Updatable) Products compatible with this Product. Provide products from the list of other products you have created that are compatible with the present one
     * 
     */
    public Optional<Output<List<PlatformConfigurationConfigCategoryDetailsCompatibleProductArgs>>> compatibleProducts() {
        return Optional.ofNullable(this.compatibleProducts);
    }

    /**
     * (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
     * 
     */
    @Import(name="components")
    private @Nullable Output<List<String>> components;

    /**
     * @return (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
     * 
     */
    public Optional<Output<List<String>>> components() {
        return Optional.ofNullable(this.components);
    }

    /**
     * (Updatable) Category of configuration
     * 
     */
    @Import(name="configCategory", required=true)
    private Output<String> configCategory;

    /**
     * @return (Updatable) Category of configuration
     * 
     */
    public Output<String> configCategory() {
        return this.configCategory;
    }

    /**
     * (Updatable) OCID for the Credential name to be associated with the Product. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
     * 
     */
    @Import(name="credentials")
    private @Nullable Output<List<PlatformConfigurationConfigCategoryDetailsCredentialArgs>> credentials;

    /**
     * @return (Updatable) OCID for the Credential name to be associated with the Product. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
     * 
     */
    public Optional<Output<List<PlatformConfigurationConfigCategoryDetailsCredentialArgs>>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * (Updatable) The OCID of the resource.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return (Updatable) The OCID of the resource.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    @Import(name="instanceName")
    private @Nullable Output<String> instanceName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Optional<Output<String>> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }

    /**
     * (Updatable) Patch Types associated with this Product.
     * 
     */
    @Import(name="patchTypes")
    private @Nullable Output<List<PlatformConfigurationConfigCategoryDetailsPatchTypeArgs>> patchTypes;

    /**
     * @return (Updatable) Patch Types associated with this Product.
     * 
     */
    public Optional<Output<List<PlatformConfigurationConfigCategoryDetailsPatchTypeArgs>>> patchTypes() {
        return Optional.ofNullable(this.patchTypes);
    }

    /**
     * (Updatable) Products that belong to the stack. For example, Oracle WebLogic and Java for the Oracle Fusion Middleware product stack.
     * 
     */
    @Import(name="products")
    private @Nullable Output<List<PlatformConfigurationConfigCategoryDetailsProductArgs>> products;

    /**
     * @return (Updatable) Products that belong to the stack. For example, Oracle WebLogic and Java for the Oracle Fusion Middleware product stack.
     * 
     */
    public Optional<Output<List<PlatformConfigurationConfigCategoryDetailsProductArgs>>> products() {
        return Optional.ofNullable(this.products);
    }

    /**
     * (Updatable) ProductStack Config Category Details.
     * 
     */
    @Import(name="subCategoryDetails")
    private @Nullable Output<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs> subCategoryDetails;

    /**
     * @return (Updatable) ProductStack Config Category Details.
     * 
     */
    public Optional<Output<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs>> subCategoryDetails() {
        return Optional.ofNullable(this.subCategoryDetails);
    }

    /**
     * (Updatable) Versions associated with the PRODUCT .
     * 
     */
    @Import(name="versions")
    private @Nullable Output<List<String>> versions;

    /**
     * @return (Updatable) Versions associated with the PRODUCT .
     * 
     */
    public Optional<Output<List<String>>> versions() {
        return Optional.ofNullable(this.versions);
    }

    private PlatformConfigurationConfigCategoryDetailsArgs() {}

    private PlatformConfigurationConfigCategoryDetailsArgs(PlatformConfigurationConfigCategoryDetailsArgs $) {
        this.compatibleProducts = $.compatibleProducts;
        this.components = $.components;
        this.configCategory = $.configCategory;
        this.credentials = $.credentials;
        this.instanceId = $.instanceId;
        this.instanceName = $.instanceName;
        this.patchTypes = $.patchTypes;
        this.products = $.products;
        this.subCategoryDetails = $.subCategoryDetails;
        this.versions = $.versions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlatformConfigurationConfigCategoryDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlatformConfigurationConfigCategoryDetailsArgs $;

        public Builder() {
            $ = new PlatformConfigurationConfigCategoryDetailsArgs();
        }

        public Builder(PlatformConfigurationConfigCategoryDetailsArgs defaults) {
            $ = new PlatformConfigurationConfigCategoryDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compatibleProducts (Updatable) Products compatible with this Product. Provide products from the list of other products you have created that are compatible with the present one
         * 
         * @return builder
         * 
         */
        public Builder compatibleProducts(@Nullable Output<List<PlatformConfigurationConfigCategoryDetailsCompatibleProductArgs>> compatibleProducts) {
            $.compatibleProducts = compatibleProducts;
            return this;
        }

        /**
         * @param compatibleProducts (Updatable) Products compatible with this Product. Provide products from the list of other products you have created that are compatible with the present one
         * 
         * @return builder
         * 
         */
        public Builder compatibleProducts(List<PlatformConfigurationConfigCategoryDetailsCompatibleProductArgs> compatibleProducts) {
            return compatibleProducts(Output.of(compatibleProducts));
        }

        /**
         * @param compatibleProducts (Updatable) Products compatible with this Product. Provide products from the list of other products you have created that are compatible with the present one
         * 
         * @return builder
         * 
         */
        public Builder compatibleProducts(PlatformConfigurationConfigCategoryDetailsCompatibleProductArgs... compatibleProducts) {
            return compatibleProducts(List.of(compatibleProducts));
        }

        /**
         * @param components (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
         * 
         * @return builder
         * 
         */
        public Builder components(@Nullable Output<List<String>> components) {
            $.components = components;
            return this;
        }

        /**
         * @param components (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
         * 
         * @return builder
         * 
         */
        public Builder components(List<String> components) {
            return components(Output.of(components));
        }

        /**
         * @param components (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
         * 
         * @return builder
         * 
         */
        public Builder components(String... components) {
            return components(List.of(components));
        }

        /**
         * @param configCategory (Updatable) Category of configuration
         * 
         * @return builder
         * 
         */
        public Builder configCategory(Output<String> configCategory) {
            $.configCategory = configCategory;
            return this;
        }

        /**
         * @param configCategory (Updatable) Category of configuration
         * 
         * @return builder
         * 
         */
        public Builder configCategory(String configCategory) {
            return configCategory(Output.of(configCategory));
        }

        /**
         * @param credentials (Updatable) OCID for the Credential name to be associated with the Product. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
         * 
         * @return builder
         * 
         */
        public Builder credentials(@Nullable Output<List<PlatformConfigurationConfigCategoryDetailsCredentialArgs>> credentials) {
            $.credentials = credentials;
            return this;
        }

        /**
         * @param credentials (Updatable) OCID for the Credential name to be associated with the Product. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
         * 
         * @return builder
         * 
         */
        public Builder credentials(List<PlatformConfigurationConfigCategoryDetailsCredentialArgs> credentials) {
            return credentials(Output.of(credentials));
        }

        /**
         * @param credentials (Updatable) OCID for the Credential name to be associated with the Product. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
         * 
         * @return builder
         * 
         */
        public Builder credentials(PlatformConfigurationConfigCategoryDetailsCredentialArgs... credentials) {
            return credentials(List.of(credentials));
        }

        /**
         * @param instanceId (Updatable) The OCID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId (Updatable) The OCID of the resource.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param instanceName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder instanceName(@Nullable Output<String> instanceName) {
            $.instanceName = instanceName;
            return this;
        }

        /**
         * @param instanceName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
         * 
         * @return builder
         * 
         */
        public Builder instanceName(String instanceName) {
            return instanceName(Output.of(instanceName));
        }

        /**
         * @param patchTypes (Updatable) Patch Types associated with this Product.
         * 
         * @return builder
         * 
         */
        public Builder patchTypes(@Nullable Output<List<PlatformConfigurationConfigCategoryDetailsPatchTypeArgs>> patchTypes) {
            $.patchTypes = patchTypes;
            return this;
        }

        /**
         * @param patchTypes (Updatable) Patch Types associated with this Product.
         * 
         * @return builder
         * 
         */
        public Builder patchTypes(List<PlatformConfigurationConfigCategoryDetailsPatchTypeArgs> patchTypes) {
            return patchTypes(Output.of(patchTypes));
        }

        /**
         * @param patchTypes (Updatable) Patch Types associated with this Product.
         * 
         * @return builder
         * 
         */
        public Builder patchTypes(PlatformConfigurationConfigCategoryDetailsPatchTypeArgs... patchTypes) {
            return patchTypes(List.of(patchTypes));
        }

        /**
         * @param products (Updatable) Products that belong to the stack. For example, Oracle WebLogic and Java for the Oracle Fusion Middleware product stack.
         * 
         * @return builder
         * 
         */
        public Builder products(@Nullable Output<List<PlatformConfigurationConfigCategoryDetailsProductArgs>> products) {
            $.products = products;
            return this;
        }

        /**
         * @param products (Updatable) Products that belong to the stack. For example, Oracle WebLogic and Java for the Oracle Fusion Middleware product stack.
         * 
         * @return builder
         * 
         */
        public Builder products(List<PlatformConfigurationConfigCategoryDetailsProductArgs> products) {
            return products(Output.of(products));
        }

        /**
         * @param products (Updatable) Products that belong to the stack. For example, Oracle WebLogic and Java for the Oracle Fusion Middleware product stack.
         * 
         * @return builder
         * 
         */
        public Builder products(PlatformConfigurationConfigCategoryDetailsProductArgs... products) {
            return products(List.of(products));
        }

        /**
         * @param subCategoryDetails (Updatable) ProductStack Config Category Details.
         * 
         * @return builder
         * 
         */
        public Builder subCategoryDetails(@Nullable Output<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs> subCategoryDetails) {
            $.subCategoryDetails = subCategoryDetails;
            return this;
        }

        /**
         * @param subCategoryDetails (Updatable) ProductStack Config Category Details.
         * 
         * @return builder
         * 
         */
        public Builder subCategoryDetails(PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs subCategoryDetails) {
            return subCategoryDetails(Output.of(subCategoryDetails));
        }

        /**
         * @param versions (Updatable) Versions associated with the PRODUCT .
         * 
         * @return builder
         * 
         */
        public Builder versions(@Nullable Output<List<String>> versions) {
            $.versions = versions;
            return this;
        }

        /**
         * @param versions (Updatable) Versions associated with the PRODUCT .
         * 
         * @return builder
         * 
         */
        public Builder versions(List<String> versions) {
            return versions(Output.of(versions));
        }

        /**
         * @param versions (Updatable) Versions associated with the PRODUCT .
         * 
         * @return builder
         * 
         */
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }

        public PlatformConfigurationConfigCategoryDetailsArgs build() {
            if ($.configCategory == null) {
                throw new MissingRequiredPropertyException("PlatformConfigurationConfigCategoryDetailsArgs", "configCategory");
            }
            return $;
        }
    }

}
