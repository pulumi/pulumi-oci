// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredentialArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchTypeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs Empty = new PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs();

    /**
     * (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
     * 
     */
    @Import(name="components")
    private @Nullable Output<List<String>> components;

    /**
     * @return (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
     * 
     */
    public Optional<Output<List<String>>> components() {
        return Optional.ofNullable(this.components);
    }

    /**
     * (Updatable) OCID for the Credential name to be associated with the Product Stack. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
     * 
     */
    @Import(name="credentials")
    private @Nullable Output<List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredentialArgs>> credentials;

    /**
     * @return (Updatable) OCID for the Credential name to be associated with the Product Stack. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
     * 
     */
    public Optional<Output<List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredentialArgs>>> credentials() {
        return Optional.ofNullable(this.credentials);
    }

    /**
     * (Updatable) Patch Types associated with this Product Stack which will be considered as Product.
     * 
     */
    @Import(name="patchTypes")
    private @Nullable Output<List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchTypeArgs>> patchTypes;

    /**
     * @return (Updatable) Patch Types associated with this Product Stack which will be considered as Product.
     * 
     */
    public Optional<Output<List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchTypeArgs>>> patchTypes() {
        return Optional.ofNullable(this.patchTypes);
    }

    /**
     * (Updatable) SubCategory of Product Stack.
     * 
     */
    @Import(name="subCategory", required=true)
    private Output<String> subCategory;

    /**
     * @return (Updatable) SubCategory of Product Stack.
     * 
     */
    public Output<String> subCategory() {
        return this.subCategory;
    }

    /**
     * (Updatable) Versions associated with the PRODUCT .
     * 
     */
    @Import(name="versions")
    private @Nullable Output<List<String>> versions;

    /**
     * @return (Updatable) Versions associated with the PRODUCT .
     * 
     */
    public Optional<Output<List<String>>> versions() {
        return Optional.ofNullable(this.versions);
    }

    private PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs() {}

    private PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs(PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs $) {
        this.components = $.components;
        this.credentials = $.credentials;
        this.patchTypes = $.patchTypes;
        this.subCategory = $.subCategory;
        this.versions = $.versions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs $;

        public Builder() {
            $ = new PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs();
        }

        public Builder(PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs defaults) {
            $ = new PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param components (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
         * 
         * @return builder
         * 
         */
        public Builder components(@Nullable Output<List<String>> components) {
            $.components = components;
            return this;
        }

        /**
         * @param components (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
         * 
         * @return builder
         * 
         */
        public Builder components(List<String> components) {
            return components(Output.of(components));
        }

        /**
         * @param components (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
         * 
         * @return builder
         * 
         */
        public Builder components(String... components) {
            return components(List.of(components));
        }

        /**
         * @param credentials (Updatable) OCID for the Credential name to be associated with the Product Stack. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
         * 
         * @return builder
         * 
         */
        public Builder credentials(@Nullable Output<List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredentialArgs>> credentials) {
            $.credentials = credentials;
            return this;
        }

        /**
         * @param credentials (Updatable) OCID for the Credential name to be associated with the Product Stack. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
         * 
         * @return builder
         * 
         */
        public Builder credentials(List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredentialArgs> credentials) {
            return credentials(Output.of(credentials));
        }

        /**
         * @param credentials (Updatable) OCID for the Credential name to be associated with the Product Stack. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
         * 
         * @return builder
         * 
         */
        public Builder credentials(PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredentialArgs... credentials) {
            return credentials(List.of(credentials));
        }

        /**
         * @param patchTypes (Updatable) Patch Types associated with this Product Stack which will be considered as Product.
         * 
         * @return builder
         * 
         */
        public Builder patchTypes(@Nullable Output<List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchTypeArgs>> patchTypes) {
            $.patchTypes = patchTypes;
            return this;
        }

        /**
         * @param patchTypes (Updatable) Patch Types associated with this Product Stack which will be considered as Product.
         * 
         * @return builder
         * 
         */
        public Builder patchTypes(List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchTypeArgs> patchTypes) {
            return patchTypes(Output.of(patchTypes));
        }

        /**
         * @param patchTypes (Updatable) Patch Types associated with this Product Stack which will be considered as Product.
         * 
         * @return builder
         * 
         */
        public Builder patchTypes(PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchTypeArgs... patchTypes) {
            return patchTypes(List.of(patchTypes));
        }

        /**
         * @param subCategory (Updatable) SubCategory of Product Stack.
         * 
         * @return builder
         * 
         */
        public Builder subCategory(Output<String> subCategory) {
            $.subCategory = subCategory;
            return this;
        }

        /**
         * @param subCategory (Updatable) SubCategory of Product Stack.
         * 
         * @return builder
         * 
         */
        public Builder subCategory(String subCategory) {
            return subCategory(Output.of(subCategory));
        }

        /**
         * @param versions (Updatable) Versions associated with the PRODUCT .
         * 
         * @return builder
         * 
         */
        public Builder versions(@Nullable Output<List<String>> versions) {
            $.versions = versions;
            return this;
        }

        /**
         * @param versions (Updatable) Versions associated with the PRODUCT .
         * 
         * @return builder
         * 
         */
        public Builder versions(List<String> versions) {
            return versions(Output.of(versions));
        }

        /**
         * @param versions (Updatable) Versions associated with the PRODUCT .
         * 
         * @return builder
         * 
         */
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }

        public PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs build() {
            if ($.subCategory == null) {
                throw new MissingRequiredPropertyException("PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsArgs", "subCategory");
            }
            return $;
        }
    }

}
