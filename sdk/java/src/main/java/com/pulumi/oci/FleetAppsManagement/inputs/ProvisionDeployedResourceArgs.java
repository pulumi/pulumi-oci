// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.FleetAppsManagement.inputs.ProvisionDeployedResourceResourceInstanceListArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProvisionDeployedResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProvisionDeployedResourceArgs Empty = new ProvisionDeployedResourceArgs();

    /**
     * The mode of the resource. Example: &#34;managed&#34;
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return The mode of the resource. Example: &#34;managed&#34;
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * Collection of InstanceSummary
     * 
     */
    @Import(name="resourceInstanceLists")
    private @Nullable Output<List<ProvisionDeployedResourceResourceInstanceListArgs>> resourceInstanceLists;

    /**
     * @return Collection of InstanceSummary
     * 
     */
    public Optional<Output<List<ProvisionDeployedResourceResourceInstanceListArgs>>> resourceInstanceLists() {
        return Optional.ofNullable(this.resourceInstanceLists);
    }

    /**
     * The name of the resource
     * 
     */
    @Import(name="resourceName")
    private @Nullable Output<String> resourceName;

    /**
     * @return The name of the resource
     * 
     */
    public Optional<Output<String>> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }

    /**
     * The name of the Provider
     * 
     */
    @Import(name="resourceProvider")
    private @Nullable Output<String> resourceProvider;

    /**
     * @return The name of the Provider
     * 
     */
    public Optional<Output<String>> resourceProvider() {
        return Optional.ofNullable(this.resourceProvider);
    }

    /**
     * The provider resource type. Must be supported by the Oracle Cloud Infrastructure provider. Example: oci.Core.Instance
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The provider resource type. Must be supported by the Oracle Cloud Infrastructure provider. Example: oci.Core.Instance
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    private ProvisionDeployedResourceArgs() {}

    private ProvisionDeployedResourceArgs(ProvisionDeployedResourceArgs $) {
        this.mode = $.mode;
        this.resourceInstanceLists = $.resourceInstanceLists;
        this.resourceName = $.resourceName;
        this.resourceProvider = $.resourceProvider;
        this.resourceType = $.resourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProvisionDeployedResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProvisionDeployedResourceArgs $;

        public Builder() {
            $ = new ProvisionDeployedResourceArgs();
        }

        public Builder(ProvisionDeployedResourceArgs defaults) {
            $ = new ProvisionDeployedResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mode The mode of the resource. Example: &#34;managed&#34;
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The mode of the resource. Example: &#34;managed&#34;
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param resourceInstanceLists Collection of InstanceSummary
         * 
         * @return builder
         * 
         */
        public Builder resourceInstanceLists(@Nullable Output<List<ProvisionDeployedResourceResourceInstanceListArgs>> resourceInstanceLists) {
            $.resourceInstanceLists = resourceInstanceLists;
            return this;
        }

        /**
         * @param resourceInstanceLists Collection of InstanceSummary
         * 
         * @return builder
         * 
         */
        public Builder resourceInstanceLists(List<ProvisionDeployedResourceResourceInstanceListArgs> resourceInstanceLists) {
            return resourceInstanceLists(Output.of(resourceInstanceLists));
        }

        /**
         * @param resourceInstanceLists Collection of InstanceSummary
         * 
         * @return builder
         * 
         */
        public Builder resourceInstanceLists(ProvisionDeployedResourceResourceInstanceListArgs... resourceInstanceLists) {
            return resourceInstanceLists(List.of(resourceInstanceLists));
        }

        /**
         * @param resourceName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder resourceName(@Nullable Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param resourceName The name of the resource
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        /**
         * @param resourceProvider The name of the Provider
         * 
         * @return builder
         * 
         */
        public Builder resourceProvider(@Nullable Output<String> resourceProvider) {
            $.resourceProvider = resourceProvider;
            return this;
        }

        /**
         * @param resourceProvider The name of the Provider
         * 
         * @return builder
         * 
         */
        public Builder resourceProvider(String resourceProvider) {
            return resourceProvider(Output.of(resourceProvider));
        }

        /**
         * @param resourceType The provider resource type. Must be supported by the Oracle Cloud Infrastructure provider. Example: oci.Core.Instance
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The provider resource type. Must be supported by the Oracle Cloud Infrastructure provider. Example: oci.Core.Instance
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        public ProvisionDeployedResourceArgs build() {
            return $;
        }
    }

}
