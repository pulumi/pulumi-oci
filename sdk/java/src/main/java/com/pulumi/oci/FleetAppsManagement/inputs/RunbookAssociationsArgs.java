// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookAssociationsExecutionWorkflowDetailsArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookAssociationsGroupArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookAssociationsRollbackWorkflowDetailsArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookAssociationsTaskArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RunbookAssociationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RunbookAssociationsArgs Empty = new RunbookAssociationsArgs();

    /**
     * (Updatable) Execution Workflow details.
     * 
     */
    @Import(name="executionWorkflowDetails", required=true)
    private Output<RunbookAssociationsExecutionWorkflowDetailsArgs> executionWorkflowDetails;

    /**
     * @return (Updatable) Execution Workflow details.
     * 
     */
    public Output<RunbookAssociationsExecutionWorkflowDetailsArgs> executionWorkflowDetails() {
        return this.executionWorkflowDetails;
    }

    /**
     * (Updatable) The groups of the runbook.
     * 
     */
    @Import(name="groups", required=true)
    private Output<List<RunbookAssociationsGroupArgs>> groups;

    /**
     * @return (Updatable) The groups of the runbook.
     * 
     */
    public Output<List<RunbookAssociationsGroupArgs>> groups() {
        return this.groups;
    }

    /**
     * (Updatable) Rollback Workflow details.
     * 
     */
    @Import(name="rollbackWorkflowDetails")
    private @Nullable Output<RunbookAssociationsRollbackWorkflowDetailsArgs> rollbackWorkflowDetails;

    /**
     * @return (Updatable) Rollback Workflow details.
     * 
     */
    public Optional<Output<RunbookAssociationsRollbackWorkflowDetailsArgs>> rollbackWorkflowDetails() {
        return Optional.ofNullable(this.rollbackWorkflowDetails);
    }

    /**
     * (Updatable) A set of tasks to execute in the runbook.
     * 
     */
    @Import(name="tasks", required=true)
    private Output<List<RunbookAssociationsTaskArgs>> tasks;

    /**
     * @return (Updatable) A set of tasks to execute in the runbook.
     * 
     */
    public Output<List<RunbookAssociationsTaskArgs>> tasks() {
        return this.tasks;
    }

    /**
     * (Updatable) The version of the runbook.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return (Updatable) The version of the runbook.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private RunbookAssociationsArgs() {}

    private RunbookAssociationsArgs(RunbookAssociationsArgs $) {
        this.executionWorkflowDetails = $.executionWorkflowDetails;
        this.groups = $.groups;
        this.rollbackWorkflowDetails = $.rollbackWorkflowDetails;
        this.tasks = $.tasks;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunbookAssociationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunbookAssociationsArgs $;

        public Builder() {
            $ = new RunbookAssociationsArgs();
        }

        public Builder(RunbookAssociationsArgs defaults) {
            $ = new RunbookAssociationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param executionWorkflowDetails (Updatable) Execution Workflow details.
         * 
         * @return builder
         * 
         */
        public Builder executionWorkflowDetails(Output<RunbookAssociationsExecutionWorkflowDetailsArgs> executionWorkflowDetails) {
            $.executionWorkflowDetails = executionWorkflowDetails;
            return this;
        }

        /**
         * @param executionWorkflowDetails (Updatable) Execution Workflow details.
         * 
         * @return builder
         * 
         */
        public Builder executionWorkflowDetails(RunbookAssociationsExecutionWorkflowDetailsArgs executionWorkflowDetails) {
            return executionWorkflowDetails(Output.of(executionWorkflowDetails));
        }

        /**
         * @param groups (Updatable) The groups of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder groups(Output<List<RunbookAssociationsGroupArgs>> groups) {
            $.groups = groups;
            return this;
        }

        /**
         * @param groups (Updatable) The groups of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder groups(List<RunbookAssociationsGroupArgs> groups) {
            return groups(Output.of(groups));
        }

        /**
         * @param groups (Updatable) The groups of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder groups(RunbookAssociationsGroupArgs... groups) {
            return groups(List.of(groups));
        }

        /**
         * @param rollbackWorkflowDetails (Updatable) Rollback Workflow details.
         * 
         * @return builder
         * 
         */
        public Builder rollbackWorkflowDetails(@Nullable Output<RunbookAssociationsRollbackWorkflowDetailsArgs> rollbackWorkflowDetails) {
            $.rollbackWorkflowDetails = rollbackWorkflowDetails;
            return this;
        }

        /**
         * @param rollbackWorkflowDetails (Updatable) Rollback Workflow details.
         * 
         * @return builder
         * 
         */
        public Builder rollbackWorkflowDetails(RunbookAssociationsRollbackWorkflowDetailsArgs rollbackWorkflowDetails) {
            return rollbackWorkflowDetails(Output.of(rollbackWorkflowDetails));
        }

        /**
         * @param tasks (Updatable) A set of tasks to execute in the runbook.
         * 
         * @return builder
         * 
         */
        public Builder tasks(Output<List<RunbookAssociationsTaskArgs>> tasks) {
            $.tasks = tasks;
            return this;
        }

        /**
         * @param tasks (Updatable) A set of tasks to execute in the runbook.
         * 
         * @return builder
         * 
         */
        public Builder tasks(List<RunbookAssociationsTaskArgs> tasks) {
            return tasks(Output.of(tasks));
        }

        /**
         * @param tasks (Updatable) A set of tasks to execute in the runbook.
         * 
         * @return builder
         * 
         */
        public Builder tasks(RunbookAssociationsTaskArgs... tasks) {
            return tasks(List.of(tasks));
        }

        /**
         * @param version (Updatable) The version of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version (Updatable) The version of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public RunbookAssociationsArgs build() {
            if ($.executionWorkflowDetails == null) {
                throw new MissingRequiredPropertyException("RunbookAssociationsArgs", "executionWorkflowDetails");
            }
            if ($.groups == null) {
                throw new MissingRequiredPropertyException("RunbookAssociationsArgs", "groups");
            }
            if ($.tasks == null) {
                throw new MissingRequiredPropertyException("RunbookAssociationsArgs", "tasks");
            }
            return $;
        }
    }

}
