// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs extends com.pulumi.resources.ResourceArgs {

    public static final RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs Empty = new RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs();

    /**
     * (Updatable) Enables notification on pause.
     * 
     */
    @Import(name="shouldNotifyOnPause")
    private @Nullable Output<Boolean> shouldNotifyOnPause;

    /**
     * @return (Updatable) Enables notification on pause.
     * 
     */
    public Optional<Output<Boolean>> shouldNotifyOnPause() {
        return Optional.ofNullable(this.shouldNotifyOnPause);
    }

    /**
     * (Updatable) Enables or disables notification on Task Failures.
     * 
     */
    @Import(name="shouldNotifyOnTaskFailure")
    private @Nullable Output<Boolean> shouldNotifyOnTaskFailure;

    /**
     * @return (Updatable) Enables or disables notification on Task Failures.
     * 
     */
    public Optional<Output<Boolean>> shouldNotifyOnTaskFailure() {
        return Optional.ofNullable(this.shouldNotifyOnTaskFailure);
    }

    /**
     * (Updatable) Enables or disables notification on Task Success.
     * 
     */
    @Import(name="shouldNotifyOnTaskSuccess")
    private @Nullable Output<Boolean> shouldNotifyOnTaskSuccess;

    /**
     * @return (Updatable) Enables or disables notification on Task Success.
     * 
     */
    public Optional<Output<Boolean>> shouldNotifyOnTaskSuccess() {
        return Optional.ofNullable(this.shouldNotifyOnTaskSuccess);
    }

    private RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs() {}

    private RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs(RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs $) {
        this.shouldNotifyOnPause = $.shouldNotifyOnPause;
        this.shouldNotifyOnTaskFailure = $.shouldNotifyOnTaskFailure;
        this.shouldNotifyOnTaskSuccess = $.shouldNotifyOnTaskSuccess;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs $;

        public Builder() {
            $ = new RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs();
        }

        public Builder(RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs defaults) {
            $ = new RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param shouldNotifyOnPause (Updatable) Enables notification on pause.
         * 
         * @return builder
         * 
         */
        public Builder shouldNotifyOnPause(@Nullable Output<Boolean> shouldNotifyOnPause) {
            $.shouldNotifyOnPause = shouldNotifyOnPause;
            return this;
        }

        /**
         * @param shouldNotifyOnPause (Updatable) Enables notification on pause.
         * 
         * @return builder
         * 
         */
        public Builder shouldNotifyOnPause(Boolean shouldNotifyOnPause) {
            return shouldNotifyOnPause(Output.of(shouldNotifyOnPause));
        }

        /**
         * @param shouldNotifyOnTaskFailure (Updatable) Enables or disables notification on Task Failures.
         * 
         * @return builder
         * 
         */
        public Builder shouldNotifyOnTaskFailure(@Nullable Output<Boolean> shouldNotifyOnTaskFailure) {
            $.shouldNotifyOnTaskFailure = shouldNotifyOnTaskFailure;
            return this;
        }

        /**
         * @param shouldNotifyOnTaskFailure (Updatable) Enables or disables notification on Task Failures.
         * 
         * @return builder
         * 
         */
        public Builder shouldNotifyOnTaskFailure(Boolean shouldNotifyOnTaskFailure) {
            return shouldNotifyOnTaskFailure(Output.of(shouldNotifyOnTaskFailure));
        }

        /**
         * @param shouldNotifyOnTaskSuccess (Updatable) Enables or disables notification on Task Success.
         * 
         * @return builder
         * 
         */
        public Builder shouldNotifyOnTaskSuccess(@Nullable Output<Boolean> shouldNotifyOnTaskSuccess) {
            $.shouldNotifyOnTaskSuccess = shouldNotifyOnTaskSuccess;
            return this;
        }

        /**
         * @param shouldNotifyOnTaskSuccess (Updatable) Enables or disables notification on Task Success.
         * 
         * @return builder
         * 
         */
        public Builder shouldNotifyOnTaskSuccess(Boolean shouldNotifyOnTaskSuccess) {
            return shouldNotifyOnTaskSuccess(Output.of(shouldNotifyOnTaskSuccess));
        }

        public RunbookAssociationsTaskStepPropertiesNotificationPreferencesArgs build() {
            return $;
        }
    }

}
