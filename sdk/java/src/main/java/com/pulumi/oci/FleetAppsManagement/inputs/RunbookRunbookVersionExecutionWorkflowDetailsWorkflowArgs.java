// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookRunbookVersionExecutionWorkflowDetailsWorkflowStepArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs extends com.pulumi.resources.ResourceArgs {

    public static final RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs Empty = new RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs();

    /**
     * Name of the group.
     * 
     */
    @Import(name="groupName", required=true)
    private Output<String> groupName;

    /**
     * @return Name of the group.
     * 
     */
    public Output<String> groupName() {
        return this.groupName;
    }

    /**
     * Steps within the Group.
     * 
     */
    @Import(name="steps", required=true)
    private Output<List<RunbookRunbookVersionExecutionWorkflowDetailsWorkflowStepArgs>> steps;

    /**
     * @return Steps within the Group.
     * 
     */
    public Output<List<RunbookRunbookVersionExecutionWorkflowDetailsWorkflowStepArgs>> steps() {
        return this.steps;
    }

    /**
     * Workflow Group  Details.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Workflow Group  Details.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs() {}

    private RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs(RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs $) {
        this.groupName = $.groupName;
        this.steps = $.steps;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs $;

        public Builder() {
            $ = new RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs();
        }

        public Builder(RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs defaults) {
            $ = new RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupName Name of the group.
         * 
         * @return builder
         * 
         */
        public Builder groupName(Output<String> groupName) {
            $.groupName = groupName;
            return this;
        }

        /**
         * @param groupName Name of the group.
         * 
         * @return builder
         * 
         */
        public Builder groupName(String groupName) {
            return groupName(Output.of(groupName));
        }

        /**
         * @param steps Steps within the Group.
         * 
         * @return builder
         * 
         */
        public Builder steps(Output<List<RunbookRunbookVersionExecutionWorkflowDetailsWorkflowStepArgs>> steps) {
            $.steps = steps;
            return this;
        }

        /**
         * @param steps Steps within the Group.
         * 
         * @return builder
         * 
         */
        public Builder steps(List<RunbookRunbookVersionExecutionWorkflowDetailsWorkflowStepArgs> steps) {
            return steps(Output.of(steps));
        }

        /**
         * @param steps Steps within the Group.
         * 
         * @return builder
         * 
         */
        public Builder steps(RunbookRunbookVersionExecutionWorkflowDetailsWorkflowStepArgs... steps) {
            return steps(List.of(steps));
        }

        /**
         * @param type Workflow Group  Details.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Workflow Group  Details.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs build() {
            if ($.groupName == null) {
                throw new MissingRequiredPropertyException("RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs", "groupName");
            }
            if ($.steps == null) {
                throw new MissingRequiredPropertyException("RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs", "steps");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("RunbookRunbookVersionExecutionWorkflowDetailsWorkflowArgs", "type");
            }
            return $;
        }
    }

}
