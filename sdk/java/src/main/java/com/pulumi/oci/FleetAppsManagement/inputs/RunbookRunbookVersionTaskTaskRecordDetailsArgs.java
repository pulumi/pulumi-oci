// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RunbookRunbookVersionTaskTaskRecordDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RunbookRunbookVersionTaskTaskRecordDetailsArgs Empty = new RunbookRunbookVersionTaskTaskRecordDetailsArgs();

    /**
     * The description of the task.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the task.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Execution details.
     * 
     */
    @Import(name="executionDetails")
    private @Nullable Output<RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsArgs> executionDetails;

    /**
     * @return Execution details.
     * 
     */
    public Optional<Output<RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsArgs>> executionDetails() {
        return Optional.ofNullable(this.executionDetails);
    }

    /**
     * Is this an Apply Subject Task? Ex. Patch Execution Task
     * 
     */
    @Import(name="isApplySubjectTask")
    private @Nullable Output<Boolean> isApplySubjectTask;

    /**
     * @return Is this an Apply Subject Task? Ex. Patch Execution Task
     * 
     */
    public Optional<Output<Boolean>> isApplySubjectTask() {
        return Optional.ofNullable(this.isApplySubjectTask);
    }

    /**
     * Make a copy of this task in Library
     * 
     */
    @Import(name="isCopyToLibraryEnabled")
    private @Nullable Output<Boolean> isCopyToLibraryEnabled;

    /**
     * @return Make a copy of this task in Library
     * 
     */
    public Optional<Output<Boolean>> isCopyToLibraryEnabled() {
        return Optional.ofNullable(this.isCopyToLibraryEnabled);
    }

    /**
     * Is this a discovery output task?
     * 
     */
    @Import(name="isDiscoveryOutputTask")
    private @Nullable Output<Boolean> isDiscoveryOutputTask;

    /**
     * @return Is this a discovery output task?
     * 
     */
    public Optional<Output<Boolean>> isDiscoveryOutputTask() {
        return Optional.ofNullable(this.isDiscoveryOutputTask);
    }

    /**
     * The name of the task
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the task
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The OS for the task.
     * 
     */
    @Import(name="osType")
    private @Nullable Output<String> osType;

    /**
     * @return The OS for the task.
     * 
     */
    public Optional<Output<String>> osType() {
        return Optional.ofNullable(this.osType);
    }

    /**
     * The platform of the runbook.
     * 
     */
    @Import(name="platform")
    private @Nullable Output<String> platform;

    /**
     * @return The platform of the runbook.
     * 
     */
    public Optional<Output<String>> platform() {
        return Optional.ofNullable(this.platform);
    }

    /**
     * The properties of the task.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs> properties;

    /**
     * @return The properties of the task.
     * 
     */
    public Optional<Output<RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The scope of the task.
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    /**
     * @return The scope of the task.
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    /**
     * The ID of taskRecord.
     * 
     */
    @Import(name="taskRecordId")
    private @Nullable Output<String> taskRecordId;

    /**
     * @return The ID of taskRecord.
     * 
     */
    public Optional<Output<String>> taskRecordId() {
        return Optional.ofNullable(this.taskRecordId);
    }

    private RunbookRunbookVersionTaskTaskRecordDetailsArgs() {}

    private RunbookRunbookVersionTaskTaskRecordDetailsArgs(RunbookRunbookVersionTaskTaskRecordDetailsArgs $) {
        this.description = $.description;
        this.executionDetails = $.executionDetails;
        this.isApplySubjectTask = $.isApplySubjectTask;
        this.isCopyToLibraryEnabled = $.isCopyToLibraryEnabled;
        this.isDiscoveryOutputTask = $.isDiscoveryOutputTask;
        this.name = $.name;
        this.osType = $.osType;
        this.platform = $.platform;
        this.properties = $.properties;
        this.scope = $.scope;
        this.taskRecordId = $.taskRecordId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunbookRunbookVersionTaskTaskRecordDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunbookRunbookVersionTaskTaskRecordDetailsArgs $;

        public Builder() {
            $ = new RunbookRunbookVersionTaskTaskRecordDetailsArgs();
        }

        public Builder(RunbookRunbookVersionTaskTaskRecordDetailsArgs defaults) {
            $ = new RunbookRunbookVersionTaskTaskRecordDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the task.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the task.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param executionDetails Execution details.
         * 
         * @return builder
         * 
         */
        public Builder executionDetails(@Nullable Output<RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsArgs> executionDetails) {
            $.executionDetails = executionDetails;
            return this;
        }

        /**
         * @param executionDetails Execution details.
         * 
         * @return builder
         * 
         */
        public Builder executionDetails(RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsArgs executionDetails) {
            return executionDetails(Output.of(executionDetails));
        }

        /**
         * @param isApplySubjectTask Is this an Apply Subject Task? Ex. Patch Execution Task
         * 
         * @return builder
         * 
         */
        public Builder isApplySubjectTask(@Nullable Output<Boolean> isApplySubjectTask) {
            $.isApplySubjectTask = isApplySubjectTask;
            return this;
        }

        /**
         * @param isApplySubjectTask Is this an Apply Subject Task? Ex. Patch Execution Task
         * 
         * @return builder
         * 
         */
        public Builder isApplySubjectTask(Boolean isApplySubjectTask) {
            return isApplySubjectTask(Output.of(isApplySubjectTask));
        }

        /**
         * @param isCopyToLibraryEnabled Make a copy of this task in Library
         * 
         * @return builder
         * 
         */
        public Builder isCopyToLibraryEnabled(@Nullable Output<Boolean> isCopyToLibraryEnabled) {
            $.isCopyToLibraryEnabled = isCopyToLibraryEnabled;
            return this;
        }

        /**
         * @param isCopyToLibraryEnabled Make a copy of this task in Library
         * 
         * @return builder
         * 
         */
        public Builder isCopyToLibraryEnabled(Boolean isCopyToLibraryEnabled) {
            return isCopyToLibraryEnabled(Output.of(isCopyToLibraryEnabled));
        }

        /**
         * @param isDiscoveryOutputTask Is this a discovery output task?
         * 
         * @return builder
         * 
         */
        public Builder isDiscoveryOutputTask(@Nullable Output<Boolean> isDiscoveryOutputTask) {
            $.isDiscoveryOutputTask = isDiscoveryOutputTask;
            return this;
        }

        /**
         * @param isDiscoveryOutputTask Is this a discovery output task?
         * 
         * @return builder
         * 
         */
        public Builder isDiscoveryOutputTask(Boolean isDiscoveryOutputTask) {
            return isDiscoveryOutputTask(Output.of(isDiscoveryOutputTask));
        }

        /**
         * @param name The name of the task
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the task
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param osType The OS for the task.
         * 
         * @return builder
         * 
         */
        public Builder osType(@Nullable Output<String> osType) {
            $.osType = osType;
            return this;
        }

        /**
         * @param osType The OS for the task.
         * 
         * @return builder
         * 
         */
        public Builder osType(String osType) {
            return osType(Output.of(osType));
        }

        /**
         * @param platform The platform of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder platform(@Nullable Output<String> platform) {
            $.platform = platform;
            return this;
        }

        /**
         * @param platform The platform of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder platform(String platform) {
            return platform(Output.of(platform));
        }

        /**
         * @param properties The properties of the task.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties The properties of the task.
         * 
         * @return builder
         * 
         */
        public Builder properties(RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param scope The scope of the task.
         * 
         * @return builder
         * 
         */
        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope of the task.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param taskRecordId The ID of taskRecord.
         * 
         * @return builder
         * 
         */
        public Builder taskRecordId(@Nullable Output<String> taskRecordId) {
            $.taskRecordId = taskRecordId;
            return this;
        }

        /**
         * @param taskRecordId The ID of taskRecord.
         * 
         * @return builder
         * 
         */
        public Builder taskRecordId(String taskRecordId) {
            return taskRecordId(Output.of(taskRecordId));
        }

        public RunbookRunbookVersionTaskTaskRecordDetailsArgs build() {
            if ($.scope == null) {
                throw new MissingRequiredPropertyException("RunbookRunbookVersionTaskTaskRecordDetailsArgs", "scope");
            }
            return $;
        }
    }

}
