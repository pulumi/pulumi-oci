// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs Empty = new RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs();

    /**
     * The number of retries allowed.
     * 
     */
    @Import(name="numRetries")
    private @Nullable Output<Integer> numRetries;

    /**
     * @return The number of retries allowed.
     * 
     */
    public Optional<Output<Integer>> numRetries() {
        return Optional.ofNullable(this.numRetries);
    }

    /**
     * The timeout in seconds for the task.
     * 
     */
    @Import(name="timeoutInSeconds")
    private @Nullable Output<Integer> timeoutInSeconds;

    /**
     * @return The timeout in seconds for the task.
     * 
     */
    public Optional<Output<Integer>> timeoutInSeconds() {
        return Optional.ofNullable(this.timeoutInSeconds);
    }

    private RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs() {}

    private RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs(RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs $) {
        this.numRetries = $.numRetries;
        this.timeoutInSeconds = $.timeoutInSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs $;

        public Builder() {
            $ = new RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs();
        }

        public Builder(RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs defaults) {
            $ = new RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param numRetries The number of retries allowed.
         * 
         * @return builder
         * 
         */
        public Builder numRetries(@Nullable Output<Integer> numRetries) {
            $.numRetries = numRetries;
            return this;
        }

        /**
         * @param numRetries The number of retries allowed.
         * 
         * @return builder
         * 
         */
        public Builder numRetries(Integer numRetries) {
            return numRetries(Output.of(numRetries));
        }

        /**
         * @param timeoutInSeconds The timeout in seconds for the task.
         * 
         * @return builder
         * 
         */
        public Builder timeoutInSeconds(@Nullable Output<Integer> timeoutInSeconds) {
            $.timeoutInSeconds = timeoutInSeconds;
            return this;
        }

        /**
         * @param timeoutInSeconds The timeout in seconds for the task.
         * 
         * @return builder
         * 
         */
        public Builder timeoutInSeconds(Integer timeoutInSeconds) {
            return timeoutInSeconds(Output.of(timeoutInSeconds));
        }

        public RunbookRunbookVersionTaskTaskRecordDetailsPropertiesArgs build() {
            return $;
        }
    }

}
