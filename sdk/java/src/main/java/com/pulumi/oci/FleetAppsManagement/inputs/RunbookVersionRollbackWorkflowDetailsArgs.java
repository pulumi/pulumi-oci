// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.RunbookVersionRollbackWorkflowDetailsWorkflowArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RunbookVersionRollbackWorkflowDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RunbookVersionRollbackWorkflowDetailsArgs Empty = new RunbookVersionRollbackWorkflowDetailsArgs();

    /**
     * (Updatable) rollback Scope
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    /**
     * @return (Updatable) rollback Scope
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    /**
     * (Updatable) Rollback Workflow for the runbook.
     * 
     */
    @Import(name="workflows", required=true)
    private Output<List<RunbookVersionRollbackWorkflowDetailsWorkflowArgs>> workflows;

    /**
     * @return (Updatable) Rollback Workflow for the runbook.
     * 
     */
    public Output<List<RunbookVersionRollbackWorkflowDetailsWorkflowArgs>> workflows() {
        return this.workflows;
    }

    private RunbookVersionRollbackWorkflowDetailsArgs() {}

    private RunbookVersionRollbackWorkflowDetailsArgs(RunbookVersionRollbackWorkflowDetailsArgs $) {
        this.scope = $.scope;
        this.workflows = $.workflows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RunbookVersionRollbackWorkflowDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RunbookVersionRollbackWorkflowDetailsArgs $;

        public Builder() {
            $ = new RunbookVersionRollbackWorkflowDetailsArgs();
        }

        public Builder(RunbookVersionRollbackWorkflowDetailsArgs defaults) {
            $ = new RunbookVersionRollbackWorkflowDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param scope (Updatable) rollback Scope
         * 
         * @return builder
         * 
         */
        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope (Updatable) rollback Scope
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param workflows (Updatable) Rollback Workflow for the runbook.
         * 
         * @return builder
         * 
         */
        public Builder workflows(Output<List<RunbookVersionRollbackWorkflowDetailsWorkflowArgs>> workflows) {
            $.workflows = workflows;
            return this;
        }

        /**
         * @param workflows (Updatable) Rollback Workflow for the runbook.
         * 
         * @return builder
         * 
         */
        public Builder workflows(List<RunbookVersionRollbackWorkflowDetailsWorkflowArgs> workflows) {
            return workflows(Output.of(workflows));
        }

        /**
         * @param workflows (Updatable) Rollback Workflow for the runbook.
         * 
         * @return builder
         * 
         */
        public Builder workflows(RunbookVersionRollbackWorkflowDetailsWorkflowArgs... workflows) {
            return workflows(List.of(workflows));
        }

        public RunbookVersionRollbackWorkflowDetailsArgs build() {
            if ($.scope == null) {
                throw new MissingRequiredPropertyException("RunbookVersionRollbackWorkflowDetailsArgs", "scope");
            }
            if ($.workflows == null) {
                throw new MissingRequiredPropertyException("RunbookVersionRollbackWorkflowDetailsArgs", "workflows");
            }
            return $;
        }
    }

}
