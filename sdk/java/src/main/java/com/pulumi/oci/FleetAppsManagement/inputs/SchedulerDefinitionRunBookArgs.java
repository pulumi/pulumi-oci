// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.SchedulerDefinitionRunBookInputParameterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SchedulerDefinitionRunBookArgs extends com.pulumi.resources.ResourceArgs {

    public static final SchedulerDefinitionRunBookArgs Empty = new SchedulerDefinitionRunBookArgs();

    /**
     * (Updatable) Input Parameters for the Task
     * 
     */
    @Import(name="inputParameters")
    private @Nullable Output<List<SchedulerDefinitionRunBookInputParameterArgs>> inputParameters;

    /**
     * @return (Updatable) Input Parameters for the Task
     * 
     */
    public Optional<Output<List<SchedulerDefinitionRunBookInputParameterArgs>>> inputParameters() {
        return Optional.ofNullable(this.inputParameters);
    }

    /**
     * (Updatable) The ID of the Runbook
     * 
     */
    @Import(name="runbookId", required=true)
    private Output<String> runbookId;

    /**
     * @return (Updatable) The ID of the Runbook
     * 
     */
    public Output<String> runbookId() {
        return this.runbookId;
    }

    /**
     * (Updatable) The runbook version name
     * 
     */
    @Import(name="runbookVersionName", required=true)
    private Output<String> runbookVersionName;

    /**
     * @return (Updatable) The runbook version name
     * 
     */
    public Output<String> runbookVersionName() {
        return this.runbookVersionName;
    }

    private SchedulerDefinitionRunBookArgs() {}

    private SchedulerDefinitionRunBookArgs(SchedulerDefinitionRunBookArgs $) {
        this.inputParameters = $.inputParameters;
        this.runbookId = $.runbookId;
        this.runbookVersionName = $.runbookVersionName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchedulerDefinitionRunBookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchedulerDefinitionRunBookArgs $;

        public Builder() {
            $ = new SchedulerDefinitionRunBookArgs();
        }

        public Builder(SchedulerDefinitionRunBookArgs defaults) {
            $ = new SchedulerDefinitionRunBookArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param inputParameters (Updatable) Input Parameters for the Task
         * 
         * @return builder
         * 
         */
        public Builder inputParameters(@Nullable Output<List<SchedulerDefinitionRunBookInputParameterArgs>> inputParameters) {
            $.inputParameters = inputParameters;
            return this;
        }

        /**
         * @param inputParameters (Updatable) Input Parameters for the Task
         * 
         * @return builder
         * 
         */
        public Builder inputParameters(List<SchedulerDefinitionRunBookInputParameterArgs> inputParameters) {
            return inputParameters(Output.of(inputParameters));
        }

        /**
         * @param inputParameters (Updatable) Input Parameters for the Task
         * 
         * @return builder
         * 
         */
        public Builder inputParameters(SchedulerDefinitionRunBookInputParameterArgs... inputParameters) {
            return inputParameters(List.of(inputParameters));
        }

        /**
         * @param runbookId (Updatable) The ID of the Runbook
         * 
         * @return builder
         * 
         */
        public Builder runbookId(Output<String> runbookId) {
            $.runbookId = runbookId;
            return this;
        }

        /**
         * @param runbookId (Updatable) The ID of the Runbook
         * 
         * @return builder
         * 
         */
        public Builder runbookId(String runbookId) {
            return runbookId(Output.of(runbookId));
        }

        /**
         * @param runbookVersionName (Updatable) The runbook version name
         * 
         * @return builder
         * 
         */
        public Builder runbookVersionName(Output<String> runbookVersionName) {
            $.runbookVersionName = runbookVersionName;
            return this;
        }

        /**
         * @param runbookVersionName (Updatable) The runbook version name
         * 
         * @return builder
         * 
         */
        public Builder runbookVersionName(String runbookVersionName) {
            return runbookVersionName(Output.of(runbookVersionName));
        }

        public SchedulerDefinitionRunBookArgs build() {
            if ($.runbookId == null) {
                throw new MissingRequiredPropertyException("SchedulerDefinitionRunBookArgs", "runbookId");
            }
            if ($.runbookVersionName == null) {
                throw new MissingRequiredPropertyException("SchedulerDefinitionRunBookArgs", "runbookVersionName");
            }
            return $;
        }
    }

}
