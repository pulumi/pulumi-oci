// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SchedulerDefinitionScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SchedulerDefinitionScheduleArgs Empty = new SchedulerDefinitionScheduleArgs();

    /**
     * (Updatable) Duration of the schedule.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<String> duration;

    /**
     * @return (Updatable) Duration of the schedule.
     * 
     */
    public Optional<Output<String>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * (Updatable) Start Date for the schedule. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="executionStartdate", required=true)
    private Output<String> executionStartdate;

    /**
     * @return (Updatable) Start Date for the schedule. An RFC3339 formatted datetime string
     * 
     */
    public Output<String> executionStartdate() {
        return this.executionStartdate;
    }

    /**
     * (Updatable) Provide MaintenanceWindowId
     * 
     */
    @Import(name="maintenanceWindowId")
    private @Nullable Output<String> maintenanceWindowId;

    /**
     * @return (Updatable) Provide MaintenanceWindowId
     * 
     */
    public Optional<Output<String>> maintenanceWindowId() {
        return Optional.ofNullable(this.maintenanceWindowId);
    }

    /**
     * (Updatable) Recurrence rule specification if recurring
     * 
     */
    @Import(name="recurrences")
    private @Nullable Output<String> recurrences;

    /**
     * @return (Updatable) Recurrence rule specification if recurring
     * 
     */
    public Optional<Output<String>> recurrences() {
        return Optional.ofNullable(this.recurrences);
    }

    /**
     * (Updatable) Schedule Type
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Schedule Type
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private SchedulerDefinitionScheduleArgs() {}

    private SchedulerDefinitionScheduleArgs(SchedulerDefinitionScheduleArgs $) {
        this.duration = $.duration;
        this.executionStartdate = $.executionStartdate;
        this.maintenanceWindowId = $.maintenanceWindowId;
        this.recurrences = $.recurrences;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SchedulerDefinitionScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchedulerDefinitionScheduleArgs $;

        public Builder() {
            $ = new SchedulerDefinitionScheduleArgs();
        }

        public Builder(SchedulerDefinitionScheduleArgs defaults) {
            $ = new SchedulerDefinitionScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param duration (Updatable) Duration of the schedule.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<String> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration (Updatable) Duration of the schedule.
         * 
         * @return builder
         * 
         */
        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param executionStartdate (Updatable) Start Date for the schedule. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder executionStartdate(Output<String> executionStartdate) {
            $.executionStartdate = executionStartdate;
            return this;
        }

        /**
         * @param executionStartdate (Updatable) Start Date for the schedule. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder executionStartdate(String executionStartdate) {
            return executionStartdate(Output.of(executionStartdate));
        }

        /**
         * @param maintenanceWindowId (Updatable) Provide MaintenanceWindowId
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindowId(@Nullable Output<String> maintenanceWindowId) {
            $.maintenanceWindowId = maintenanceWindowId;
            return this;
        }

        /**
         * @param maintenanceWindowId (Updatable) Provide MaintenanceWindowId
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindowId(String maintenanceWindowId) {
            return maintenanceWindowId(Output.of(maintenanceWindowId));
        }

        /**
         * @param recurrences (Updatable) Recurrence rule specification if recurring
         * 
         * @return builder
         * 
         */
        public Builder recurrences(@Nullable Output<String> recurrences) {
            $.recurrences = recurrences;
            return this;
        }

        /**
         * @param recurrences (Updatable) Recurrence rule specification if recurring
         * 
         * @return builder
         * 
         */
        public Builder recurrences(String recurrences) {
            return recurrences(Output.of(recurrences));
        }

        /**
         * @param type (Updatable) Schedule Type
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Schedule Type
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SchedulerDefinitionScheduleArgs build() {
            if ($.executionStartdate == null) {
                throw new MissingRequiredPropertyException("SchedulerDefinitionScheduleArgs", "executionStartdate");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("SchedulerDefinitionScheduleArgs", "type");
            }
            return $;
        }
    }

}
