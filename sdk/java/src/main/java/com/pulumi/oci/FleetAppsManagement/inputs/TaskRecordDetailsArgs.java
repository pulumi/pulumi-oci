// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.inputs.TaskRecordDetailsExecutionDetailsArgs;
import com.pulumi.oci.FleetAppsManagement.inputs.TaskRecordDetailsPropertiesArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskRecordDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskRecordDetailsArgs Empty = new TaskRecordDetailsArgs();

    /**
     * (Updatable) Execution details.
     * 
     */
    @Import(name="executionDetails", required=true)
    private Output<TaskRecordDetailsExecutionDetailsArgs> executionDetails;

    /**
     * @return (Updatable) Execution details.
     * 
     */
    public Output<TaskRecordDetailsExecutionDetailsArgs> executionDetails() {
        return this.executionDetails;
    }

    /**
     * (Updatable) Is this an Apply Subject Task?  Set this to true for a Patch Execution Task which applies patches(subjects) on a target.
     * 
     */
    @Import(name="isApplySubjectTask")
    private @Nullable Output<Boolean> isApplySubjectTask;

    /**
     * @return (Updatable) Is this an Apply Subject Task?  Set this to true for a Patch Execution Task which applies patches(subjects) on a target.
     * 
     */
    public Optional<Output<Boolean>> isApplySubjectTask() {
        return Optional.ofNullable(this.isApplySubjectTask);
    }

    /**
     * (Updatable) Is this a discovery output task?
     * 
     */
    @Import(name="isDiscoveryOutputTask")
    private @Nullable Output<Boolean> isDiscoveryOutputTask;

    /**
     * @return (Updatable) Is this a discovery output task?
     * 
     */
    public Optional<Output<Boolean>> isDiscoveryOutputTask() {
        return Optional.ofNullable(this.isDiscoveryOutputTask);
    }

    /**
     * (Updatable) The OS for the task
     * 
     */
    @Import(name="osType", required=true)
    private Output<String> osType;

    /**
     * @return (Updatable) The OS for the task
     * 
     */
    public Output<String> osType() {
        return this.osType;
    }

    /**
     * (Updatable) The platform of the runbook.
     * 
     */
    @Import(name="platform")
    private @Nullable Output<String> platform;

    /**
     * @return (Updatable) The platform of the runbook.
     * 
     */
    public Optional<Output<String>> platform() {
        return Optional.ofNullable(this.platform);
    }

    /**
     * (Updatable) The properties of the task.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<TaskRecordDetailsPropertiesArgs> properties;

    /**
     * @return (Updatable) The properties of the task.
     * 
     */
    public Optional<Output<TaskRecordDetailsPropertiesArgs>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * (Updatable) The scope of the task
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    /**
     * @return (Updatable) The scope of the task
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    private TaskRecordDetailsArgs() {}

    private TaskRecordDetailsArgs(TaskRecordDetailsArgs $) {
        this.executionDetails = $.executionDetails;
        this.isApplySubjectTask = $.isApplySubjectTask;
        this.isDiscoveryOutputTask = $.isDiscoveryOutputTask;
        this.osType = $.osType;
        this.platform = $.platform;
        this.properties = $.properties;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskRecordDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskRecordDetailsArgs $;

        public Builder() {
            $ = new TaskRecordDetailsArgs();
        }

        public Builder(TaskRecordDetailsArgs defaults) {
            $ = new TaskRecordDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param executionDetails (Updatable) Execution details.
         * 
         * @return builder
         * 
         */
        public Builder executionDetails(Output<TaskRecordDetailsExecutionDetailsArgs> executionDetails) {
            $.executionDetails = executionDetails;
            return this;
        }

        /**
         * @param executionDetails (Updatable) Execution details.
         * 
         * @return builder
         * 
         */
        public Builder executionDetails(TaskRecordDetailsExecutionDetailsArgs executionDetails) {
            return executionDetails(Output.of(executionDetails));
        }

        /**
         * @param isApplySubjectTask (Updatable) Is this an Apply Subject Task?  Set this to true for a Patch Execution Task which applies patches(subjects) on a target.
         * 
         * @return builder
         * 
         */
        public Builder isApplySubjectTask(@Nullable Output<Boolean> isApplySubjectTask) {
            $.isApplySubjectTask = isApplySubjectTask;
            return this;
        }

        /**
         * @param isApplySubjectTask (Updatable) Is this an Apply Subject Task?  Set this to true for a Patch Execution Task which applies patches(subjects) on a target.
         * 
         * @return builder
         * 
         */
        public Builder isApplySubjectTask(Boolean isApplySubjectTask) {
            return isApplySubjectTask(Output.of(isApplySubjectTask));
        }

        /**
         * @param isDiscoveryOutputTask (Updatable) Is this a discovery output task?
         * 
         * @return builder
         * 
         */
        public Builder isDiscoveryOutputTask(@Nullable Output<Boolean> isDiscoveryOutputTask) {
            $.isDiscoveryOutputTask = isDiscoveryOutputTask;
            return this;
        }

        /**
         * @param isDiscoveryOutputTask (Updatable) Is this a discovery output task?
         * 
         * @return builder
         * 
         */
        public Builder isDiscoveryOutputTask(Boolean isDiscoveryOutputTask) {
            return isDiscoveryOutputTask(Output.of(isDiscoveryOutputTask));
        }

        /**
         * @param osType (Updatable) The OS for the task
         * 
         * @return builder
         * 
         */
        public Builder osType(Output<String> osType) {
            $.osType = osType;
            return this;
        }

        /**
         * @param osType (Updatable) The OS for the task
         * 
         * @return builder
         * 
         */
        public Builder osType(String osType) {
            return osType(Output.of(osType));
        }

        /**
         * @param platform (Updatable) The platform of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder platform(@Nullable Output<String> platform) {
            $.platform = platform;
            return this;
        }

        /**
         * @param platform (Updatable) The platform of the runbook.
         * 
         * @return builder
         * 
         */
        public Builder platform(String platform) {
            return platform(Output.of(platform));
        }

        /**
         * @param properties (Updatable) The properties of the task.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<TaskRecordDetailsPropertiesArgs> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties (Updatable) The properties of the task.
         * 
         * @return builder
         * 
         */
        public Builder properties(TaskRecordDetailsPropertiesArgs properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param scope (Updatable) The scope of the task
         * 
         * @return builder
         * 
         */
        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope (Updatable) The scope of the task
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public TaskRecordDetailsArgs build() {
            if ($.executionDetails == null) {
                throw new MissingRequiredPropertyException("TaskRecordDetailsArgs", "executionDetails");
            }
            if ($.osType == null) {
                throw new MissingRequiredPropertyException("TaskRecordDetailsArgs", "osType");
            }
            if ($.scope == null) {
                throw new MissingRequiredPropertyException("TaskRecordDetailsArgs", "scope");
            }
            return $;
        }
    }

}
