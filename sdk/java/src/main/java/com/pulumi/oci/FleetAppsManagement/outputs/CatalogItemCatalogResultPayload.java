// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CatalogItemCatalogResultPayload {
    /**
     * @return branch Name
     * 
     */
    private @Nullable String branchName;
    /**
     * @return config result type.
     * 
     */
    private @Nullable String configResultType;
    /**
     * @return configuration Source Provider [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    private @Nullable String configurationSourceProviderId;
    /**
     * @return package url
     * 
     */
    private @Nullable String packageUrl;
    /**
     * @return repository Url
     * 
     */
    private @Nullable String repositoryUrl;
    /**
     * @return template id
     * 
     */
    private @Nullable String templateId;
    /**
     * @return The date and time expires, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeExpires;
    private @Nullable String workingDirectory;

    private CatalogItemCatalogResultPayload() {}
    /**
     * @return branch Name
     * 
     */
    public Optional<String> branchName() {
        return Optional.ofNullable(this.branchName);
    }
    /**
     * @return config result type.
     * 
     */
    public Optional<String> configResultType() {
        return Optional.ofNullable(this.configResultType);
    }
    /**
     * @return configuration Source Provider [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public Optional<String> configurationSourceProviderId() {
        return Optional.ofNullable(this.configurationSourceProviderId);
    }
    /**
     * @return package url
     * 
     */
    public Optional<String> packageUrl() {
        return Optional.ofNullable(this.packageUrl);
    }
    /**
     * @return repository Url
     * 
     */
    public Optional<String> repositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }
    /**
     * @return template id
     * 
     */
    public Optional<String> templateId() {
        return Optional.ofNullable(this.templateId);
    }
    /**
     * @return The date and time expires, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeExpires() {
        return Optional.ofNullable(this.timeExpires);
    }
    public Optional<String> workingDirectory() {
        return Optional.ofNullable(this.workingDirectory);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CatalogItemCatalogResultPayload defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String branchName;
        private @Nullable String configResultType;
        private @Nullable String configurationSourceProviderId;
        private @Nullable String packageUrl;
        private @Nullable String repositoryUrl;
        private @Nullable String templateId;
        private @Nullable String timeExpires;
        private @Nullable String workingDirectory;
        public Builder() {}
        public Builder(CatalogItemCatalogResultPayload defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchName = defaults.branchName;
    	      this.configResultType = defaults.configResultType;
    	      this.configurationSourceProviderId = defaults.configurationSourceProviderId;
    	      this.packageUrl = defaults.packageUrl;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.templateId = defaults.templateId;
    	      this.timeExpires = defaults.timeExpires;
    	      this.workingDirectory = defaults.workingDirectory;
        }

        @CustomType.Setter
        public Builder branchName(@Nullable String branchName) {

            this.branchName = branchName;
            return this;
        }
        @CustomType.Setter
        public Builder configResultType(@Nullable String configResultType) {

            this.configResultType = configResultType;
            return this;
        }
        @CustomType.Setter
        public Builder configurationSourceProviderId(@Nullable String configurationSourceProviderId) {

            this.configurationSourceProviderId = configurationSourceProviderId;
            return this;
        }
        @CustomType.Setter
        public Builder packageUrl(@Nullable String packageUrl) {

            this.packageUrl = packageUrl;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryUrl(@Nullable String repositoryUrl) {

            this.repositoryUrl = repositoryUrl;
            return this;
        }
        @CustomType.Setter
        public Builder templateId(@Nullable String templateId) {

            this.templateId = templateId;
            return this;
        }
        @CustomType.Setter
        public Builder timeExpires(@Nullable String timeExpires) {

            this.timeExpires = timeExpires;
            return this;
        }
        @CustomType.Setter
        public Builder workingDirectory(@Nullable String workingDirectory) {

            this.workingDirectory = workingDirectory;
            return this;
        }
        public CatalogItemCatalogResultPayload build() {
            final var _resultValue = new CatalogItemCatalogResultPayload();
            _resultValue.branchName = branchName;
            _resultValue.configResultType = configResultType;
            _resultValue.configurationSourceProviderId = configurationSourceProviderId;
            _resultValue.packageUrl = packageUrl;
            _resultValue.repositoryUrl = repositoryUrl;
            _resultValue.templateId = templateId;
            _resultValue.timeExpires = timeExpires;
            _resultValue.workingDirectory = workingDirectory;
            return _resultValue;
        }
    }
}
