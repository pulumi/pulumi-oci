// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CatalogItemCatalogSourcePayload {
    /**
     * @return access uri
     * 
     */
    private @Nullable String accessUri;
    /**
     * @return branch Name
     * 
     */
    private @Nullable String branchName;
    /**
     * @return bucket name
     * 
     */
    private @Nullable String bucket;
    /**
     * @return config source type.
     * 
     */
    private String configSourceType;
    /**
     * @return configuration Source Provider [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    private @Nullable String configurationSourceProviderId;
    /**
     * @return Template Description
     * 
     */
    private @Nullable String description;
    /**
     * @return This listing Id parameter of Payload.
     * 
     */
    private @Nullable String listingId;
    /**
     * @return Template Long Description
     * 
     */
    private @Nullable String longDescription;
    /**
     * @return nameSpace
     * 
     */
    private @Nullable String namespace;
    /**
     * @return object name
     * 
     */
    private @Nullable String object;
    /**
     * @return repository Url
     * 
     */
    private @Nullable String repositoryUrl;
    /**
     * @return Template Display Name
     * 
     */
    private @Nullable String templateDisplayName;
    /**
     * @return The date and time expires, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeExpires;
    /**
     * @return This version parameter of Payload.
     * 
     */
    private @Nullable String version;
    private @Nullable String workingDirectory;
    /**
     * @return The Base64 encoded template. This payload will trigger CreateTemplate API, where the parameter will be passed.
     * 
     */
    private @Nullable String zipFileBase64encoded;

    private CatalogItemCatalogSourcePayload() {}
    /**
     * @return access uri
     * 
     */
    public Optional<String> accessUri() {
        return Optional.ofNullable(this.accessUri);
    }
    /**
     * @return branch Name
     * 
     */
    public Optional<String> branchName() {
        return Optional.ofNullable(this.branchName);
    }
    /**
     * @return bucket name
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return config source type.
     * 
     */
    public String configSourceType() {
        return this.configSourceType;
    }
    /**
     * @return configuration Source Provider [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public Optional<String> configurationSourceProviderId() {
        return Optional.ofNullable(this.configurationSourceProviderId);
    }
    /**
     * @return Template Description
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return This listing Id parameter of Payload.
     * 
     */
    public Optional<String> listingId() {
        return Optional.ofNullable(this.listingId);
    }
    /**
     * @return Template Long Description
     * 
     */
    public Optional<String> longDescription() {
        return Optional.ofNullable(this.longDescription);
    }
    /**
     * @return nameSpace
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return object name
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }
    /**
     * @return repository Url
     * 
     */
    public Optional<String> repositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }
    /**
     * @return Template Display Name
     * 
     */
    public Optional<String> templateDisplayName() {
        return Optional.ofNullable(this.templateDisplayName);
    }
    /**
     * @return The date and time expires, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeExpires() {
        return Optional.ofNullable(this.timeExpires);
    }
    /**
     * @return This version parameter of Payload.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }
    public Optional<String> workingDirectory() {
        return Optional.ofNullable(this.workingDirectory);
    }
    /**
     * @return The Base64 encoded template. This payload will trigger CreateTemplate API, where the parameter will be passed.
     * 
     */
    public Optional<String> zipFileBase64encoded() {
        return Optional.ofNullable(this.zipFileBase64encoded);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CatalogItemCatalogSourcePayload defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accessUri;
        private @Nullable String branchName;
        private @Nullable String bucket;
        private String configSourceType;
        private @Nullable String configurationSourceProviderId;
        private @Nullable String description;
        private @Nullable String listingId;
        private @Nullable String longDescription;
        private @Nullable String namespace;
        private @Nullable String object;
        private @Nullable String repositoryUrl;
        private @Nullable String templateDisplayName;
        private @Nullable String timeExpires;
        private @Nullable String version;
        private @Nullable String workingDirectory;
        private @Nullable String zipFileBase64encoded;
        public Builder() {}
        public Builder(CatalogItemCatalogSourcePayload defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessUri = defaults.accessUri;
    	      this.branchName = defaults.branchName;
    	      this.bucket = defaults.bucket;
    	      this.configSourceType = defaults.configSourceType;
    	      this.configurationSourceProviderId = defaults.configurationSourceProviderId;
    	      this.description = defaults.description;
    	      this.listingId = defaults.listingId;
    	      this.longDescription = defaults.longDescription;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.templateDisplayName = defaults.templateDisplayName;
    	      this.timeExpires = defaults.timeExpires;
    	      this.version = defaults.version;
    	      this.workingDirectory = defaults.workingDirectory;
    	      this.zipFileBase64encoded = defaults.zipFileBase64encoded;
        }

        @CustomType.Setter
        public Builder accessUri(@Nullable String accessUri) {

            this.accessUri = accessUri;
            return this;
        }
        @CustomType.Setter
        public Builder branchName(@Nullable String branchName) {

            this.branchName = branchName;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {

            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder configSourceType(String configSourceType) {
            if (configSourceType == null) {
              throw new MissingRequiredPropertyException("CatalogItemCatalogSourcePayload", "configSourceType");
            }
            this.configSourceType = configSourceType;
            return this;
        }
        @CustomType.Setter
        public Builder configurationSourceProviderId(@Nullable String configurationSourceProviderId) {

            this.configurationSourceProviderId = configurationSourceProviderId;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder listingId(@Nullable String listingId) {

            this.listingId = listingId;
            return this;
        }
        @CustomType.Setter
        public Builder longDescription(@Nullable String longDescription) {

            this.longDescription = longDescription;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder object(@Nullable String object) {

            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder repositoryUrl(@Nullable String repositoryUrl) {

            this.repositoryUrl = repositoryUrl;
            return this;
        }
        @CustomType.Setter
        public Builder templateDisplayName(@Nullable String templateDisplayName) {

            this.templateDisplayName = templateDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder timeExpires(@Nullable String timeExpires) {

            this.timeExpires = timeExpires;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        @CustomType.Setter
        public Builder workingDirectory(@Nullable String workingDirectory) {

            this.workingDirectory = workingDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder zipFileBase64encoded(@Nullable String zipFileBase64encoded) {

            this.zipFileBase64encoded = zipFileBase64encoded;
            return this;
        }
        public CatalogItemCatalogSourcePayload build() {
            final var _resultValue = new CatalogItemCatalogSourcePayload();
            _resultValue.accessUri = accessUri;
            _resultValue.branchName = branchName;
            _resultValue.bucket = bucket;
            _resultValue.configSourceType = configSourceType;
            _resultValue.configurationSourceProviderId = configurationSourceProviderId;
            _resultValue.description = description;
            _resultValue.listingId = listingId;
            _resultValue.longDescription = longDescription;
            _resultValue.namespace = namespace;
            _resultValue.object = object;
            _resultValue.repositoryUrl = repositoryUrl;
            _resultValue.templateDisplayName = templateDisplayName;
            _resultValue.timeExpires = timeExpires;
            _resultValue.version = version;
            _resultValue.workingDirectory = workingDirectory;
            _resultValue.zipFileBase64encoded = zipFileBase64encoded;
            return _resultValue;
        }
    }
}
