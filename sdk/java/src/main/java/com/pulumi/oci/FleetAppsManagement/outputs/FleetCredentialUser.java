// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FleetCredentialUser {
    /**
     * @return (Updatable) Credential Type.
     * 
     */
    private String credentialType;
    /**
     * @return (Updatable) OCID for the Vault Key that will be used to encrypt/decrypt the value given.
     * 
     */
    private @Nullable String keyId;
    /**
     * @return (Updatable) The Vault Key version.
     * 
     */
    private @Nullable String keyVersion;
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret.
     * 
     */
    private @Nullable String secretId;
    /**
     * @return (Updatable) The secret version.
     * 
     */
    private @Nullable String secretVersion;
    /**
     * @return (Updatable) The value corresponding to the credential.
     * 
     */
    private @Nullable String value;
    /**
     * @return (Updatable) OCID for the Vault that will be used to fetch the key to encrypt/decrypt the value given.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable String vaultId;

    private FleetCredentialUser() {}
    /**
     * @return (Updatable) Credential Type.
     * 
     */
    public String credentialType() {
        return this.credentialType;
    }
    /**
     * @return (Updatable) OCID for the Vault Key that will be used to encrypt/decrypt the value given.
     * 
     */
    public Optional<String> keyId() {
        return Optional.ofNullable(this.keyId);
    }
    /**
     * @return (Updatable) The Vault Key version.
     * 
     */
    public Optional<String> keyVersion() {
        return Optional.ofNullable(this.keyVersion);
    }
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret.
     * 
     */
    public Optional<String> secretId() {
        return Optional.ofNullable(this.secretId);
    }
    /**
     * @return (Updatable) The secret version.
     * 
     */
    public Optional<String> secretVersion() {
        return Optional.ofNullable(this.secretVersion);
    }
    /**
     * @return (Updatable) The value corresponding to the credential.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }
    /**
     * @return (Updatable) OCID for the Vault that will be used to fetch the key to encrypt/decrypt the value given.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<String> vaultId() {
        return Optional.ofNullable(this.vaultId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FleetCredentialUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String credentialType;
        private @Nullable String keyId;
        private @Nullable String keyVersion;
        private @Nullable String secretId;
        private @Nullable String secretVersion;
        private @Nullable String value;
        private @Nullable String vaultId;
        public Builder() {}
        public Builder(FleetCredentialUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentialType = defaults.credentialType;
    	      this.keyId = defaults.keyId;
    	      this.keyVersion = defaults.keyVersion;
    	      this.secretId = defaults.secretId;
    	      this.secretVersion = defaults.secretVersion;
    	      this.value = defaults.value;
    	      this.vaultId = defaults.vaultId;
        }

        @CustomType.Setter
        public Builder credentialType(String credentialType) {
            if (credentialType == null) {
              throw new MissingRequiredPropertyException("FleetCredentialUser", "credentialType");
            }
            this.credentialType = credentialType;
            return this;
        }
        @CustomType.Setter
        public Builder keyId(@Nullable String keyId) {

            this.keyId = keyId;
            return this;
        }
        @CustomType.Setter
        public Builder keyVersion(@Nullable String keyVersion) {

            this.keyVersion = keyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder secretId(@Nullable String secretId) {

            this.secretId = secretId;
            return this;
        }
        @CustomType.Setter
        public Builder secretVersion(@Nullable String secretVersion) {

            this.secretVersion = secretVersion;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {

            this.value = value;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(@Nullable String vaultId) {

            this.vaultId = vaultId;
            return this;
        }
        public FleetCredentialUser build() {
            final var _resultValue = new FleetCredentialUser();
            _resultValue.credentialType = credentialType;
            _resultValue.keyId = keyId;
            _resultValue.keyVersion = keyVersion;
            _resultValue.secretId = secretId;
            _resultValue.secretVersion = secretVersion;
            _resultValue.value = value;
            _resultValue.vaultId = vaultId;
            return _resultValue;
        }
    }
}
