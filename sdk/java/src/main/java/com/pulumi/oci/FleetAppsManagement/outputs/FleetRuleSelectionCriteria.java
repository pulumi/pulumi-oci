// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.FleetRuleSelectionCriteriaRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class FleetRuleSelectionCriteria {
    /**
     * @return (Updatable) Match condition for the rule selection. Include resources that match all rules or any of the rules.
     * 
     */
    private String matchCondition;
    /**
     * @return (Updatable) Rules.
     * 
     */
    private List<FleetRuleSelectionCriteriaRule> rules;

    private FleetRuleSelectionCriteria() {}
    /**
     * @return (Updatable) Match condition for the rule selection. Include resources that match all rules or any of the rules.
     * 
     */
    public String matchCondition() {
        return this.matchCondition;
    }
    /**
     * @return (Updatable) Rules.
     * 
     */
    public List<FleetRuleSelectionCriteriaRule> rules() {
        return this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FleetRuleSelectionCriteria defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String matchCondition;
        private List<FleetRuleSelectionCriteriaRule> rules;
        public Builder() {}
        public Builder(FleetRuleSelectionCriteria defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.matchCondition = defaults.matchCondition;
    	      this.rules = defaults.rules;
        }

        @CustomType.Setter
        public Builder matchCondition(String matchCondition) {
            if (matchCondition == null) {
              throw new MissingRequiredPropertyException("FleetRuleSelectionCriteria", "matchCondition");
            }
            this.matchCondition = matchCondition;
            return this;
        }
        @CustomType.Setter
        public Builder rules(List<FleetRuleSelectionCriteriaRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("FleetRuleSelectionCriteria", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(FleetRuleSelectionCriteriaRule... rules) {
            return rules(List.of(rules));
        }
        public FleetRuleSelectionCriteria build() {
            final var _resultValue = new FleetRuleSelectionCriteria();
            _resultValue.matchCondition = matchCondition;
            _resultValue.rules = rules;
            return _resultValue;
        }
    }
}
