// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetCompliancePolicyRulePatchSelection;
import com.pulumi.oci.FleetAppsManagement.outputs.GetCompliancePolicyRuleProductVersion;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCompliancePolicyRuleResult {
    /**
     * @return The OCID of the compartment the CompliancePolicyRule belongs to.
     * 
     */
    private String compartmentId;
    /**
     * @return Unique OCID of the CompliancePolicy.
     * 
     */
    private String compliancePolicyId;
    private String compliancePolicyRuleId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn&#39;t report the product as noncompliant when patch is not applied.
     * 
     */
    private String gracePeriod;
    /**
     * @return Unique OCID of the CompliancePolicyRule.
     * 
     */
    private String id;
    /**
     * @return A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Patch Selection Details
     * 
     */
    private List<GetCompliancePolicyRulePatchSelection> patchSelections;
    /**
     * @return PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
     * 
     */
    private List<String> patchTypeIds;
    /**
     * @return A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
     * 
     */
    private List<GetCompliancePolicyRuleProductVersion> productVersions;
    /**
     * @return Severity to which this CompliancePolicyRule applies.
     * 
     */
    private List<String> severities;
    /**
     * @return The current state of the CompliancePolicyRule.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeUpdated;

    private GetCompliancePolicyRuleResult() {}
    /**
     * @return The OCID of the compartment the CompliancePolicyRule belongs to.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Unique OCID of the CompliancePolicy.
     * 
     */
    public String compliancePolicyId() {
        return this.compliancePolicyId;
    }
    public String compliancePolicyRuleId() {
        return this.compliancePolicyRuleId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Grace period in days,weeks,months or years the exemption is applicable for the rule. This enables a grace period when Fleet Application Management doesn&#39;t report the product as noncompliant when patch is not applied.
     * 
     */
    public String gracePeriod() {
        return this.gracePeriod;
    }
    /**
     * @return Unique OCID of the CompliancePolicyRule.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message that describes the current state of the CompliancePolicyRule in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Patch Selection Details
     * 
     */
    public List<GetCompliancePolicyRulePatchSelection> patchSelections() {
        return this.patchSelections;
    }
    /**
     * @return PlatformConfiguration OCID for the patch type to which this CompliancePolicyRule applies.
     * 
     */
    public List<String> patchTypeIds() {
        return this.patchTypeIds;
    }
    /**
     * @return A specific product version or a specific version and succeeding. Example: 12.1 or 12.1 and above for Oracle WebLogic Application server. The policy applies to the next version only, and not to other versions such as, 12.1.x.
     * 
     */
    public List<GetCompliancePolicyRuleProductVersion> productVersions() {
        return this.productVersions;
    }
    /**
     * @return Severity to which this CompliancePolicyRule applies.
     * 
     */
    public List<String> severities() {
        return this.severities;
    }
    /**
     * @return The current state of the CompliancePolicyRule.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the CompliancePolicyRule was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the CompliancePolicyRule was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCompliancePolicyRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String compliancePolicyId;
        private String compliancePolicyRuleId;
        private Map<String,String> definedTags;
        private String displayName;
        private Map<String,String> freeformTags;
        private String gracePeriod;
        private String id;
        private String lifecycleDetails;
        private List<GetCompliancePolicyRulePatchSelection> patchSelections;
        private List<String> patchTypeIds;
        private List<GetCompliancePolicyRuleProductVersion> productVersions;
        private List<String> severities;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetCompliancePolicyRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compliancePolicyId = defaults.compliancePolicyId;
    	      this.compliancePolicyRuleId = defaults.compliancePolicyRuleId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.gracePeriod = defaults.gracePeriod;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.patchSelections = defaults.patchSelections;
    	      this.patchTypeIds = defaults.patchTypeIds;
    	      this.productVersions = defaults.productVersions;
    	      this.severities = defaults.severities;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compliancePolicyId(String compliancePolicyId) {
            if (compliancePolicyId == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "compliancePolicyId");
            }
            this.compliancePolicyId = compliancePolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder compliancePolicyRuleId(String compliancePolicyRuleId) {
            if (compliancePolicyRuleId == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "compliancePolicyRuleId");
            }
            this.compliancePolicyRuleId = compliancePolicyRuleId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder gracePeriod(String gracePeriod) {
            if (gracePeriod == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "gracePeriod");
            }
            this.gracePeriod = gracePeriod;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder patchSelections(List<GetCompliancePolicyRulePatchSelection> patchSelections) {
            if (patchSelections == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "patchSelections");
            }
            this.patchSelections = patchSelections;
            return this;
        }
        public Builder patchSelections(GetCompliancePolicyRulePatchSelection... patchSelections) {
            return patchSelections(List.of(patchSelections));
        }
        @CustomType.Setter
        public Builder patchTypeIds(List<String> patchTypeIds) {
            if (patchTypeIds == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "patchTypeIds");
            }
            this.patchTypeIds = patchTypeIds;
            return this;
        }
        public Builder patchTypeIds(String... patchTypeIds) {
            return patchTypeIds(List.of(patchTypeIds));
        }
        @CustomType.Setter
        public Builder productVersions(List<GetCompliancePolicyRuleProductVersion> productVersions) {
            if (productVersions == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "productVersions");
            }
            this.productVersions = productVersions;
            return this;
        }
        public Builder productVersions(GetCompliancePolicyRuleProductVersion... productVersions) {
            return productVersions(List.of(productVersions));
        }
        @CustomType.Setter
        public Builder severities(List<String> severities) {
            if (severities == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "severities");
            }
            this.severities = severities;
            return this;
        }
        public Builder severities(String... severities) {
            return severities(List.of(severities));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetCompliancePolicyRuleResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetCompliancePolicyRuleResult build() {
            final var _resultValue = new GetCompliancePolicyRuleResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.compliancePolicyId = compliancePolicyId;
            _resultValue.compliancePolicyRuleId = compliancePolicyRuleId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.gracePeriod = gracePeriod;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.patchSelections = patchSelections;
            _resultValue.patchTypeIds = patchTypeIds;
            _resultValue.productVersions = productVersions;
            _resultValue.severities = severities;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
