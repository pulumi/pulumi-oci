// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetComplianceRecordsComplianceRecordCollectionItemPatch;
import com.pulumi.oci.FleetAppsManagement.outputs.GetComplianceRecordsComplianceRecordCollectionItemPolicy;
import com.pulumi.oci.FleetAppsManagement.outputs.GetComplianceRecordsComplianceRecordCollectionItemResource;
import com.pulumi.oci.FleetAppsManagement.outputs.GetComplianceRecordsComplianceRecordCollectionItemTarget;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetComplianceRecordsComplianceRecordCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Target Compliance State.
     * 
     */
    private String complianceState;
    /**
     * @return The displayName of the entity for which the compliance is calculated.Ex.DisplayName for the Fleet
     * 
     */
    private String entityDisplayName;
    /**
     * @return Entity identifier.Ex:FleetId
     * 
     */
    private String entityId;
    /**
     * @return The OCID of the ComplianceRecord.
     * 
     */
    private String id;
    /**
     * @return Details of the Patch
     * 
     */
    private List<GetComplianceRecordsComplianceRecordCollectionItemPatch> patches;
    /**
     * @return Details of the Policy associated
     * 
     */
    private List<GetComplianceRecordsComplianceRecordCollectionItemPolicy> policies;
    /**
     * @return Details of the Resource
     * 
     */
    private List<GetComplianceRecordsComplianceRecordCollectionItemResource> resources;
    /**
     * @return The current state of the ComplianceRecord.
     * 
     */
    private String state;
    /**
     * @return Details of the Target
     * 
     */
    private List<GetComplianceRecordsComplianceRecordCollectionItemTarget> targets;
    /**
     * @return The date and time the ComplianceRecord was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the ComplianceRecord was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeUpdated;

    private GetComplianceRecordsComplianceRecordCollectionItem() {}
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Target Compliance State.
     * 
     */
    public String complianceState() {
        return this.complianceState;
    }
    /**
     * @return The displayName of the entity for which the compliance is calculated.Ex.DisplayName for the Fleet
     * 
     */
    public String entityDisplayName() {
        return this.entityDisplayName;
    }
    /**
     * @return Entity identifier.Ex:FleetId
     * 
     */
    public String entityId() {
        return this.entityId;
    }
    /**
     * @return The OCID of the ComplianceRecord.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Details of the Patch
     * 
     */
    public List<GetComplianceRecordsComplianceRecordCollectionItemPatch> patches() {
        return this.patches;
    }
    /**
     * @return Details of the Policy associated
     * 
     */
    public List<GetComplianceRecordsComplianceRecordCollectionItemPolicy> policies() {
        return this.policies;
    }
    /**
     * @return Details of the Resource
     * 
     */
    public List<GetComplianceRecordsComplianceRecordCollectionItemResource> resources() {
        return this.resources;
    }
    /**
     * @return The current state of the ComplianceRecord.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Details of the Target
     * 
     */
    public List<GetComplianceRecordsComplianceRecordCollectionItemTarget> targets() {
        return this.targets;
    }
    /**
     * @return The date and time the ComplianceRecord was created, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the ComplianceRecord was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComplianceRecordsComplianceRecordCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String complianceState;
        private String entityDisplayName;
        private String entityId;
        private String id;
        private List<GetComplianceRecordsComplianceRecordCollectionItemPatch> patches;
        private List<GetComplianceRecordsComplianceRecordCollectionItemPolicy> policies;
        private List<GetComplianceRecordsComplianceRecordCollectionItemResource> resources;
        private String state;
        private List<GetComplianceRecordsComplianceRecordCollectionItemTarget> targets;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetComplianceRecordsComplianceRecordCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.complianceState = defaults.complianceState;
    	      this.entityDisplayName = defaults.entityDisplayName;
    	      this.entityId = defaults.entityId;
    	      this.id = defaults.id;
    	      this.patches = defaults.patches;
    	      this.policies = defaults.policies;
    	      this.resources = defaults.resources;
    	      this.state = defaults.state;
    	      this.targets = defaults.targets;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder complianceState(String complianceState) {
            if (complianceState == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "complianceState");
            }
            this.complianceState = complianceState;
            return this;
        }
        @CustomType.Setter
        public Builder entityDisplayName(String entityDisplayName) {
            if (entityDisplayName == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "entityDisplayName");
            }
            this.entityDisplayName = entityDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder entityId(String entityId) {
            if (entityId == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "entityId");
            }
            this.entityId = entityId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder patches(List<GetComplianceRecordsComplianceRecordCollectionItemPatch> patches) {
            if (patches == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "patches");
            }
            this.patches = patches;
            return this;
        }
        public Builder patches(GetComplianceRecordsComplianceRecordCollectionItemPatch... patches) {
            return patches(List.of(patches));
        }
        @CustomType.Setter
        public Builder policies(List<GetComplianceRecordsComplianceRecordCollectionItemPolicy> policies) {
            if (policies == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "policies");
            }
            this.policies = policies;
            return this;
        }
        public Builder policies(GetComplianceRecordsComplianceRecordCollectionItemPolicy... policies) {
            return policies(List.of(policies));
        }
        @CustomType.Setter
        public Builder resources(List<GetComplianceRecordsComplianceRecordCollectionItemResource> resources) {
            if (resources == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "resources");
            }
            this.resources = resources;
            return this;
        }
        public Builder resources(GetComplianceRecordsComplianceRecordCollectionItemResource... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targets(List<GetComplianceRecordsComplianceRecordCollectionItemTarget> targets) {
            if (targets == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "targets");
            }
            this.targets = targets;
            return this;
        }
        public Builder targets(GetComplianceRecordsComplianceRecordCollectionItemTarget... targets) {
            return targets(List.of(targets));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetComplianceRecordsComplianceRecordCollectionItem build() {
            final var _resultValue = new GetComplianceRecordsComplianceRecordCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.complianceState = complianceState;
            _resultValue.entityDisplayName = entityDisplayName;
            _resultValue.entityId = entityId;
            _resultValue.id = id;
            _resultValue.patches = patches;
            _resultValue.policies = policies;
            _resultValue.resources = resources;
            _resultValue.state = state;
            _resultValue.targets = targets;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
