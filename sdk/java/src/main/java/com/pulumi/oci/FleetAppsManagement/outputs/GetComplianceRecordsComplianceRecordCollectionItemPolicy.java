// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetComplianceRecordsComplianceRecordCollectionItemPolicyPatchSelection;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetComplianceRecordsComplianceRecordCollectionItemPolicy {
    /**
     * @return Compliane Policy DisplayName
     * 
     */
    private String compliancePolicyDisplayName;
    /**
     * @return Compliance Policy Id
     * 
     */
    private String compliancePolicyId;
    /**
     * @return Product Name
     * 
     */
    private String compliancePolicyRuleDisplayName;
    /**
     * @return Compliane Policy Rule Id
     * 
     */
    private String compliancePolicyRuleId;
    /**
     * @return Grace period in days,weeks,months or years the exemption is applicable for the rule.
     * 
     */
    private String gracePeriod;
    /**
     * @return Patch Selection Details
     * 
     */
    private List<GetComplianceRecordsComplianceRecordCollectionItemPolicyPatchSelection> patchSelections;

    private GetComplianceRecordsComplianceRecordCollectionItemPolicy() {}
    /**
     * @return Compliane Policy DisplayName
     * 
     */
    public String compliancePolicyDisplayName() {
        return this.compliancePolicyDisplayName;
    }
    /**
     * @return Compliance Policy Id
     * 
     */
    public String compliancePolicyId() {
        return this.compliancePolicyId;
    }
    /**
     * @return Product Name
     * 
     */
    public String compliancePolicyRuleDisplayName() {
        return this.compliancePolicyRuleDisplayName;
    }
    /**
     * @return Compliane Policy Rule Id
     * 
     */
    public String compliancePolicyRuleId() {
        return this.compliancePolicyRuleId;
    }
    /**
     * @return Grace period in days,weeks,months or years the exemption is applicable for the rule.
     * 
     */
    public String gracePeriod() {
        return this.gracePeriod;
    }
    /**
     * @return Patch Selection Details
     * 
     */
    public List<GetComplianceRecordsComplianceRecordCollectionItemPolicyPatchSelection> patchSelections() {
        return this.patchSelections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComplianceRecordsComplianceRecordCollectionItemPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compliancePolicyDisplayName;
        private String compliancePolicyId;
        private String compliancePolicyRuleDisplayName;
        private String compliancePolicyRuleId;
        private String gracePeriod;
        private List<GetComplianceRecordsComplianceRecordCollectionItemPolicyPatchSelection> patchSelections;
        public Builder() {}
        public Builder(GetComplianceRecordsComplianceRecordCollectionItemPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compliancePolicyDisplayName = defaults.compliancePolicyDisplayName;
    	      this.compliancePolicyId = defaults.compliancePolicyId;
    	      this.compliancePolicyRuleDisplayName = defaults.compliancePolicyRuleDisplayName;
    	      this.compliancePolicyRuleId = defaults.compliancePolicyRuleId;
    	      this.gracePeriod = defaults.gracePeriod;
    	      this.patchSelections = defaults.patchSelections;
        }

        @CustomType.Setter
        public Builder compliancePolicyDisplayName(String compliancePolicyDisplayName) {
            if (compliancePolicyDisplayName == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItemPolicy", "compliancePolicyDisplayName");
            }
            this.compliancePolicyDisplayName = compliancePolicyDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder compliancePolicyId(String compliancePolicyId) {
            if (compliancePolicyId == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItemPolicy", "compliancePolicyId");
            }
            this.compliancePolicyId = compliancePolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder compliancePolicyRuleDisplayName(String compliancePolicyRuleDisplayName) {
            if (compliancePolicyRuleDisplayName == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItemPolicy", "compliancePolicyRuleDisplayName");
            }
            this.compliancePolicyRuleDisplayName = compliancePolicyRuleDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder compliancePolicyRuleId(String compliancePolicyRuleId) {
            if (compliancePolicyRuleId == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItemPolicy", "compliancePolicyRuleId");
            }
            this.compliancePolicyRuleId = compliancePolicyRuleId;
            return this;
        }
        @CustomType.Setter
        public Builder gracePeriod(String gracePeriod) {
            if (gracePeriod == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItemPolicy", "gracePeriod");
            }
            this.gracePeriod = gracePeriod;
            return this;
        }
        @CustomType.Setter
        public Builder patchSelections(List<GetComplianceRecordsComplianceRecordCollectionItemPolicyPatchSelection> patchSelections) {
            if (patchSelections == null) {
              throw new MissingRequiredPropertyException("GetComplianceRecordsComplianceRecordCollectionItemPolicy", "patchSelections");
            }
            this.patchSelections = patchSelections;
            return this;
        }
        public Builder patchSelections(GetComplianceRecordsComplianceRecordCollectionItemPolicyPatchSelection... patchSelections) {
            return patchSelections(List.of(patchSelections));
        }
        public GetComplianceRecordsComplianceRecordCollectionItemPolicy build() {
            final var _resultValue = new GetComplianceRecordsComplianceRecordCollectionItemPolicy();
            _resultValue.compliancePolicyDisplayName = compliancePolicyDisplayName;
            _resultValue.compliancePolicyId = compliancePolicyId;
            _resultValue.compliancePolicyRuleDisplayName = compliancePolicyRuleDisplayName;
            _resultValue.compliancePolicyRuleId = compliancePolicyRuleId;
            _resultValue.gracePeriod = gracePeriod;
            _resultValue.patchSelections = patchSelections;
            return _resultValue;
        }
    }
}
