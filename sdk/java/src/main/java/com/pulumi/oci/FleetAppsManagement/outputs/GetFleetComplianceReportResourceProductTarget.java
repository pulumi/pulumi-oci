// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetComplianceReportResourceProductTargetInstalledPatch;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetComplianceReportResourceProductTargetRecommendedPatch;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFleetComplianceReportResourceProductTarget {
    /**
     * @return The last known compliance state of the target.
     * 
     */
    private String complianceState;
    /**
     * @return Installed Patches for the Target.
     * 
     */
    private List<GetFleetComplianceReportResourceProductTargetInstalledPatch> installedPatches;
    /**
     * @return Recommended Patches for the Target.
     * 
     */
    private List<GetFleetComplianceReportResourceProductTargetRecommendedPatch> recommendedPatches;
    /**
     * @return Target Identifier.Can be the target name if a separate ID is not available.
     * 
     */
    private String targetId;
    /**
     * @return Target Name.
     * 
     */
    private String targetName;
    /**
     * @return Current version of the target.
     * 
     */
    private String version;

    private GetFleetComplianceReportResourceProductTarget() {}
    /**
     * @return The last known compliance state of the target.
     * 
     */
    public String complianceState() {
        return this.complianceState;
    }
    /**
     * @return Installed Patches for the Target.
     * 
     */
    public List<GetFleetComplianceReportResourceProductTargetInstalledPatch> installedPatches() {
        return this.installedPatches;
    }
    /**
     * @return Recommended Patches for the Target.
     * 
     */
    public List<GetFleetComplianceReportResourceProductTargetRecommendedPatch> recommendedPatches() {
        return this.recommendedPatches;
    }
    /**
     * @return Target Identifier.Can be the target name if a separate ID is not available.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return Target Name.
     * 
     */
    public String targetName() {
        return this.targetName;
    }
    /**
     * @return Current version of the target.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetComplianceReportResourceProductTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String complianceState;
        private List<GetFleetComplianceReportResourceProductTargetInstalledPatch> installedPatches;
        private List<GetFleetComplianceReportResourceProductTargetRecommendedPatch> recommendedPatches;
        private String targetId;
        private String targetName;
        private String version;
        public Builder() {}
        public Builder(GetFleetComplianceReportResourceProductTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.complianceState = defaults.complianceState;
    	      this.installedPatches = defaults.installedPatches;
    	      this.recommendedPatches = defaults.recommendedPatches;
    	      this.targetId = defaults.targetId;
    	      this.targetName = defaults.targetName;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder complianceState(String complianceState) {
            if (complianceState == null) {
              throw new MissingRequiredPropertyException("GetFleetComplianceReportResourceProductTarget", "complianceState");
            }
            this.complianceState = complianceState;
            return this;
        }
        @CustomType.Setter
        public Builder installedPatches(List<GetFleetComplianceReportResourceProductTargetInstalledPatch> installedPatches) {
            if (installedPatches == null) {
              throw new MissingRequiredPropertyException("GetFleetComplianceReportResourceProductTarget", "installedPatches");
            }
            this.installedPatches = installedPatches;
            return this;
        }
        public Builder installedPatches(GetFleetComplianceReportResourceProductTargetInstalledPatch... installedPatches) {
            return installedPatches(List.of(installedPatches));
        }
        @CustomType.Setter
        public Builder recommendedPatches(List<GetFleetComplianceReportResourceProductTargetRecommendedPatch> recommendedPatches) {
            if (recommendedPatches == null) {
              throw new MissingRequiredPropertyException("GetFleetComplianceReportResourceProductTarget", "recommendedPatches");
            }
            this.recommendedPatches = recommendedPatches;
            return this;
        }
        public Builder recommendedPatches(GetFleetComplianceReportResourceProductTargetRecommendedPatch... recommendedPatches) {
            return recommendedPatches(List.of(recommendedPatches));
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetFleetComplianceReportResourceProductTarget", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder targetName(String targetName) {
            if (targetName == null) {
              throw new MissingRequiredPropertyException("GetFleetComplianceReportResourceProductTarget", "targetName");
            }
            this.targetName = targetName;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetFleetComplianceReportResourceProductTarget", "version");
            }
            this.version = version;
            return this;
        }
        public GetFleetComplianceReportResourceProductTarget build() {
            final var _resultValue = new GetFleetComplianceReportResourceProductTarget();
            _resultValue.complianceState = complianceState;
            _resultValue.installedPatches = installedPatches;
            _resultValue.recommendedPatches = recommendedPatches;
            _resultValue.targetId = targetId;
            _resultValue.targetName = targetName;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
