// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFleetCredentialUser {
    /**
     * @return Credential Type
     * 
     */
    private String credentialType;
    /**
     * @return OCID for the Vault Key that will be used to encrypt/decrypt the value given.
     * 
     */
    private String keyId;
    /**
     * @return The Vault Key version.
     * 
     */
    private String keyVersion;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret.
     * 
     */
    private String secretId;
    /**
     * @return The secret version.
     * 
     */
    private String secretVersion;
    /**
     * @return The value corresponding to the credential
     * 
     */
    private String value;
    /**
     * @return OCID for the Vault that will be used to fetch key to encrypt/decrypt the value given.
     * 
     */
    private String vaultId;

    private GetFleetCredentialUser() {}
    /**
     * @return Credential Type
     * 
     */
    public String credentialType() {
        return this.credentialType;
    }
    /**
     * @return OCID for the Vault Key that will be used to encrypt/decrypt the value given.
     * 
     */
    public String keyId() {
        return this.keyId;
    }
    /**
     * @return The Vault Key version.
     * 
     */
    public String keyVersion() {
        return this.keyVersion;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the secret.
     * 
     */
    public String secretId() {
        return this.secretId;
    }
    /**
     * @return The secret version.
     * 
     */
    public String secretVersion() {
        return this.secretVersion;
    }
    /**
     * @return The value corresponding to the credential
     * 
     */
    public String value() {
        return this.value;
    }
    /**
     * @return OCID for the Vault that will be used to fetch key to encrypt/decrypt the value given.
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetCredentialUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String credentialType;
        private String keyId;
        private String keyVersion;
        private String secretId;
        private String secretVersion;
        private String value;
        private String vaultId;
        public Builder() {}
        public Builder(GetFleetCredentialUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentialType = defaults.credentialType;
    	      this.keyId = defaults.keyId;
    	      this.keyVersion = defaults.keyVersion;
    	      this.secretId = defaults.secretId;
    	      this.secretVersion = defaults.secretVersion;
    	      this.value = defaults.value;
    	      this.vaultId = defaults.vaultId;
        }

        @CustomType.Setter
        public Builder credentialType(String credentialType) {
            if (credentialType == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialUser", "credentialType");
            }
            this.credentialType = credentialType;
            return this;
        }
        @CustomType.Setter
        public Builder keyId(String keyId) {
            if (keyId == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialUser", "keyId");
            }
            this.keyId = keyId;
            return this;
        }
        @CustomType.Setter
        public Builder keyVersion(String keyVersion) {
            if (keyVersion == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialUser", "keyVersion");
            }
            this.keyVersion = keyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder secretId(String secretId) {
            if (secretId == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialUser", "secretId");
            }
            this.secretId = secretId;
            return this;
        }
        @CustomType.Setter
        public Builder secretVersion(String secretVersion) {
            if (secretVersion == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialUser", "secretVersion");
            }
            this.secretVersion = secretVersion;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialUser", "value");
            }
            this.value = value;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(String vaultId) {
            if (vaultId == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialUser", "vaultId");
            }
            this.vaultId = vaultId;
            return this;
        }
        public GetFleetCredentialUser build() {
            final var _resultValue = new GetFleetCredentialUser();
            _resultValue.credentialType = credentialType;
            _resultValue.keyId = keyId;
            _resultValue.keyVersion = keyVersion;
            _resultValue.secretId = secretId;
            _resultValue.secretVersion = secretVersion;
            _resultValue.value = value;
            _resultValue.vaultId = vaultId;
            return _resultValue;
        }
    }
}
