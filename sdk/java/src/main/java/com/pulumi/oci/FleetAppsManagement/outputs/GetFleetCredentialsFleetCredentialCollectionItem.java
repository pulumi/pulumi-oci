// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetCredentialsFleetCredentialCollectionItemEntitySpecific;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetCredentialsFleetCredentialCollectionItemPassword;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetCredentialsFleetCredentialCollectionItemUser;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFleetCredentialsFleetCredentialCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Credential Details
     * 
     */
    private List<GetFleetCredentialsFleetCredentialCollectionItemEntitySpecific> entitySpecifics;
    /**
     * @return unique Fleet identifier
     * 
     */
    private String fleetId;
    /**
     * @return unique FleetCredential identifier
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Credential Details
     * 
     */
    private List<GetFleetCredentialsFleetCredentialCollectionItemPassword> passwords;
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;
    /**
     * @return Credential Details
     * 
     */
    private List<GetFleetCredentialsFleetCredentialCollectionItemUser> users;

    private GetFleetCredentialsFleetCredentialCollectionItem() {}
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Credential Details
     * 
     */
    public List<GetFleetCredentialsFleetCredentialCollectionItemEntitySpecific> entitySpecifics() {
        return this.entitySpecifics;
    }
    /**
     * @return unique Fleet identifier
     * 
     */
    public String fleetId() {
        return this.fleetId;
    }
    /**
     * @return unique FleetCredential identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Credential Details
     * 
     */
    public List<GetFleetCredentialsFleetCredentialCollectionItemPassword> passwords() {
        return this.passwords;
    }
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Credential Details
     * 
     */
    public List<GetFleetCredentialsFleetCredentialCollectionItemUser> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetCredentialsFleetCredentialCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String displayName;
        private List<GetFleetCredentialsFleetCredentialCollectionItemEntitySpecific> entitySpecifics;
        private String fleetId;
        private String id;
        private String lifecycleDetails;
        private List<GetFleetCredentialsFleetCredentialCollectionItemPassword> passwords;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private List<GetFleetCredentialsFleetCredentialCollectionItemUser> users;
        public Builder() {}
        public Builder(GetFleetCredentialsFleetCredentialCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.entitySpecifics = defaults.entitySpecifics;
    	      this.fleetId = defaults.fleetId;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.passwords = defaults.passwords;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder entitySpecifics(List<GetFleetCredentialsFleetCredentialCollectionItemEntitySpecific> entitySpecifics) {
            if (entitySpecifics == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "entitySpecifics");
            }
            this.entitySpecifics = entitySpecifics;
            return this;
        }
        public Builder entitySpecifics(GetFleetCredentialsFleetCredentialCollectionItemEntitySpecific... entitySpecifics) {
            return entitySpecifics(List.of(entitySpecifics));
        }
        @CustomType.Setter
        public Builder fleetId(String fleetId) {
            if (fleetId == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "fleetId");
            }
            this.fleetId = fleetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder passwords(List<GetFleetCredentialsFleetCredentialCollectionItemPassword> passwords) {
            if (passwords == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "passwords");
            }
            this.passwords = passwords;
            return this;
        }
        public Builder passwords(GetFleetCredentialsFleetCredentialCollectionItemPassword... passwords) {
            return passwords(List.of(passwords));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder users(List<GetFleetCredentialsFleetCredentialCollectionItemUser> users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsFleetCredentialCollectionItem", "users");
            }
            this.users = users;
            return this;
        }
        public Builder users(GetFleetCredentialsFleetCredentialCollectionItemUser... users) {
            return users(List.of(users));
        }
        public GetFleetCredentialsFleetCredentialCollectionItem build() {
            final var _resultValue = new GetFleetCredentialsFleetCredentialCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.entitySpecifics = entitySpecifics;
            _resultValue.fleetId = fleetId;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.passwords = passwords;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
