// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetCredentialsFilter;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetCredentialsFleetCredentialCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFleetCredentialsResult {
    /**
     * @return Compartment OCID
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return At what level the credential is provided?
     * 
     */
    private @Nullable String credentialLevel;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetFleetCredentialsFilter> filters;
    /**
     * @return The list of fleet_credential_collection.
     * 
     */
    private List<GetFleetCredentialsFleetCredentialCollection> fleetCredentialCollections;
    private String fleetId;
    /**
     * @return The unique id of the resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return OCID of the resource associated with the target for which the credential is created.
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return The current state of the FleetCredential.
     * 
     */
    private @Nullable String state;
    /**
     * @return Target name for which the credential is provided.
     * 
     */
    private @Nullable String target;

    private GetFleetCredentialsResult() {}
    /**
     * @return Compartment OCID
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return At what level the credential is provided?
     * 
     */
    public Optional<String> credentialLevel() {
        return Optional.ofNullable(this.credentialLevel);
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetFleetCredentialsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The list of fleet_credential_collection.
     * 
     */
    public List<GetFleetCredentialsFleetCredentialCollection> fleetCredentialCollections() {
        return this.fleetCredentialCollections;
    }
    public String fleetId() {
        return this.fleetId;
    }
    /**
     * @return The unique id of the resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return OCID of the resource associated with the target for which the credential is created.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return The current state of the FleetCredential.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Target name for which the credential is provided.
     * 
     */
    public Optional<String> target() {
        return Optional.ofNullable(this.target);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetCredentialsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String credentialLevel;
        private @Nullable String displayName;
        private @Nullable List<GetFleetCredentialsFilter> filters;
        private List<GetFleetCredentialsFleetCredentialCollection> fleetCredentialCollections;
        private String fleetId;
        private @Nullable String id;
        private @Nullable String resourceId;
        private @Nullable String state;
        private @Nullable String target;
        public Builder() {}
        public Builder(GetFleetCredentialsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.credentialLevel = defaults.credentialLevel;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.fleetCredentialCollections = defaults.fleetCredentialCollections;
    	      this.fleetId = defaults.fleetId;
    	      this.id = defaults.id;
    	      this.resourceId = defaults.resourceId;
    	      this.state = defaults.state;
    	      this.target = defaults.target;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder credentialLevel(@Nullable String credentialLevel) {

            this.credentialLevel = credentialLevel;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetFleetCredentialsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetFleetCredentialsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder fleetCredentialCollections(List<GetFleetCredentialsFleetCredentialCollection> fleetCredentialCollections) {
            if (fleetCredentialCollections == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsResult", "fleetCredentialCollections");
            }
            this.fleetCredentialCollections = fleetCredentialCollections;
            return this;
        }
        public Builder fleetCredentialCollections(GetFleetCredentialsFleetCredentialCollection... fleetCredentialCollections) {
            return fleetCredentialCollections(List.of(fleetCredentialCollections));
        }
        @CustomType.Setter
        public Builder fleetId(String fleetId) {
            if (fleetId == null) {
              throw new MissingRequiredPropertyException("GetFleetCredentialsResult", "fleetId");
            }
            this.fleetId = fleetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {

            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder target(@Nullable String target) {

            this.target = target;
            return this;
        }
        public GetFleetCredentialsResult build() {
            final var _resultValue = new GetFleetCredentialsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.credentialLevel = credentialLevel;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.fleetCredentialCollections = fleetCredentialCollections;
            _resultValue.fleetId = fleetId;
            _resultValue.id = id;
            _resultValue.resourceId = resourceId;
            _resultValue.state = state;
            _resultValue.target = target;
            return _resultValue;
        }
    }
}
