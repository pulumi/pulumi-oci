// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFleetPropertiesFleetPropertyCollectionItem {
    /**
     * @return Values of the property (must be a single value if selectionType = &#39;SINGLE_CHOICE&#39;).
     * 
     */
    private List<String> allowedValues;
    /**
     * @return Compartment OCID
     * 
     */
    private String compartmentId;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Unique Fleet identifier.
     * 
     */
    private String fleetId;
    /**
     * @return A filter to return only resources whose fleetProperty identifier matches the given identifier.
     * 
     */
    private String id;
    /**
     * @return OCID referring to global level metadata property.
     * 
     */
    private String propertyId;
    /**
     * @return Text selection of the property.
     * 
     */
    private String selectionType;
    /**
     * @return A filter to return only resources whose lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;
    /**
     * @return Value of the Property.
     * 
     */
    private String value;
    /**
     * @return Format of the value.
     * 
     */
    private String valueType;

    private GetFleetPropertiesFleetPropertyCollectionItem() {}
    /**
     * @return Values of the property (must be a single value if selectionType = &#39;SINGLE_CHOICE&#39;).
     * 
     */
    public List<String> allowedValues() {
        return this.allowedValues;
    }
    /**
     * @return Compartment OCID
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Unique Fleet identifier.
     * 
     */
    public String fleetId() {
        return this.fleetId;
    }
    /**
     * @return A filter to return only resources whose fleetProperty identifier matches the given identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return OCID referring to global level metadata property.
     * 
     */
    public String propertyId() {
        return this.propertyId;
    }
    /**
     * @return Text selection of the property.
     * 
     */
    public String selectionType() {
        return this.selectionType;
    }
    /**
     * @return A filter to return only resources whose lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Value of the Property.
     * 
     */
    public String value() {
        return this.value;
    }
    /**
     * @return Format of the value.
     * 
     */
    public String valueType() {
        return this.valueType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetPropertiesFleetPropertyCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedValues;
        private String compartmentId;
        private String displayName;
        private String fleetId;
        private String id;
        private String propertyId;
        private String selectionType;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String value;
        private String valueType;
        public Builder() {}
        public Builder(GetFleetPropertiesFleetPropertyCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedValues = defaults.allowedValues;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.fleetId = defaults.fleetId;
    	      this.id = defaults.id;
    	      this.propertyId = defaults.propertyId;
    	      this.selectionType = defaults.selectionType;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.value = defaults.value;
    	      this.valueType = defaults.valueType;
        }

        @CustomType.Setter
        public Builder allowedValues(List<String> allowedValues) {
            if (allowedValues == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "allowedValues");
            }
            this.allowedValues = allowedValues;
            return this;
        }
        public Builder allowedValues(String... allowedValues) {
            return allowedValues(List.of(allowedValues));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fleetId(String fleetId) {
            if (fleetId == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "fleetId");
            }
            this.fleetId = fleetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder propertyId(String propertyId) {
            if (propertyId == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "propertyId");
            }
            this.propertyId = propertyId;
            return this;
        }
        @CustomType.Setter
        public Builder selectionType(String selectionType) {
            if (selectionType == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "selectionType");
            }
            this.selectionType = selectionType;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "value");
            }
            this.value = value;
            return this;
        }
        @CustomType.Setter
        public Builder valueType(String valueType) {
            if (valueType == null) {
              throw new MissingRequiredPropertyException("GetFleetPropertiesFleetPropertyCollectionItem", "valueType");
            }
            this.valueType = valueType;
            return this;
        }
        public GetFleetPropertiesFleetPropertyCollectionItem build() {
            final var _resultValue = new GetFleetPropertiesFleetPropertyCollectionItem();
            _resultValue.allowedValues = allowedValues;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.fleetId = fleetId;
            _resultValue.id = id;
            _resultValue.propertyId = propertyId;
            _resultValue.selectionType = selectionType;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.value = value;
            _resultValue.valueType = valueType;
            return _resultValue;
        }
    }
}
