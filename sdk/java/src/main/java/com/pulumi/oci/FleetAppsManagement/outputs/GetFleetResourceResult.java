// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFleetResourceResult {
    /**
     * @return Resource Compartment name.
     * 
     */
    private String compartment;
    /**
     * @return OCID of the compartment to which the resource belongs to.
     * 
     */
    private String compartmentId;
    /**
     * @return Compliance State of the Resource.
     * 
     */
    private String complianceState;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    private String displayName;
    /**
     * @return Environment Type associated with the Fleet when the resource type is fleet. Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
     * 
     */
    private String environmentType;
    private String fleetId;
    private String fleetResourceId;
    /**
     * @return The unique id of the resource.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The compliance percentage.
     * 
     */
    private Double percentCompliant;
    /**
     * @return Product associated with the resource when the resource type is fleet. Will only be returned for PRODUCT fleets that are part of a GROUP Fleet.
     * 
     */
    private String product;
    /**
     * @return Count of products within the resource.
     * 
     */
    private Integer productCount;
    /**
     * @return The OCID of the resource.
     * 
     */
    private String resourceId;
    /**
     * @return Associated region
     * 
     */
    private String resourceRegion;
    /**
     * @return Type of the Resource.
     * 
     */
    private String resourceType;
    /**
     * @return The current state of the FleetResource.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Count of targets within the resource.
     * 
     */
    private Integer targetCount;
    /**
     * @return OCID of the tenancy to which the resource belongs to.
     * 
     */
    private String tenancyId;
    /**
     * @return Resource Tenancy Name.
     * 
     */
    private String tenancyName;
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetFleetResourceResult() {}
    /**
     * @return Resource Compartment name.
     * 
     */
    public String compartment() {
        return this.compartment;
    }
    /**
     * @return OCID of the compartment to which the resource belongs to.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Compliance State of the Resource.
     * 
     */
    public String complianceState() {
        return this.complianceState;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Environment Type associated with the Fleet when the resource type is fleet. Will only be returned for ENVIRONMENT fleets that are part of a GROUP Fleet.
     * 
     */
    public String environmentType() {
        return this.environmentType;
    }
    public String fleetId() {
        return this.fleetId;
    }
    public String fleetResourceId() {
        return this.fleetResourceId;
    }
    /**
     * @return The unique id of the resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The compliance percentage.
     * 
     */
    public Double percentCompliant() {
        return this.percentCompliant;
    }
    /**
     * @return Product associated with the resource when the resource type is fleet. Will only be returned for PRODUCT fleets that are part of a GROUP Fleet.
     * 
     */
    public String product() {
        return this.product;
    }
    /**
     * @return Count of products within the resource.
     * 
     */
    public Integer productCount() {
        return this.productCount;
    }
    /**
     * @return The OCID of the resource.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return Associated region
     * 
     */
    public String resourceRegion() {
        return this.resourceRegion;
    }
    /**
     * @return Type of the Resource.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The current state of the FleetResource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Count of targets within the resource.
     * 
     */
    public Integer targetCount() {
        return this.targetCount;
    }
    /**
     * @return OCID of the tenancy to which the resource belongs to.
     * 
     */
    public String tenancyId() {
        return this.tenancyId;
    }
    /**
     * @return Resource Tenancy Name.
     * 
     */
    public String tenancyName() {
        return this.tenancyName;
    }
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetResourceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartment;
        private String compartmentId;
        private String complianceState;
        private String displayName;
        private String environmentType;
        private String fleetId;
        private String fleetResourceId;
        private String id;
        private String lifecycleDetails;
        private Double percentCompliant;
        private String product;
        private Integer productCount;
        private String resourceId;
        private String resourceRegion;
        private String resourceType;
        private String state;
        private Map<String,String> systemTags;
        private Integer targetCount;
        private String tenancyId;
        private String tenancyName;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetFleetResourceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartment = defaults.compartment;
    	      this.compartmentId = defaults.compartmentId;
    	      this.complianceState = defaults.complianceState;
    	      this.displayName = defaults.displayName;
    	      this.environmentType = defaults.environmentType;
    	      this.fleetId = defaults.fleetId;
    	      this.fleetResourceId = defaults.fleetResourceId;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.percentCompliant = defaults.percentCompliant;
    	      this.product = defaults.product;
    	      this.productCount = defaults.productCount;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceRegion = defaults.resourceRegion;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetCount = defaults.targetCount;
    	      this.tenancyId = defaults.tenancyId;
    	      this.tenancyName = defaults.tenancyName;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartment(String compartment) {
            if (compartment == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "compartment");
            }
            this.compartment = compartment;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder complianceState(String complianceState) {
            if (complianceState == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "complianceState");
            }
            this.complianceState = complianceState;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder environmentType(String environmentType) {
            if (environmentType == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "environmentType");
            }
            this.environmentType = environmentType;
            return this;
        }
        @CustomType.Setter
        public Builder fleetId(String fleetId) {
            if (fleetId == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "fleetId");
            }
            this.fleetId = fleetId;
            return this;
        }
        @CustomType.Setter
        public Builder fleetResourceId(String fleetResourceId) {
            if (fleetResourceId == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "fleetResourceId");
            }
            this.fleetResourceId = fleetResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder percentCompliant(Double percentCompliant) {
            if (percentCompliant == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "percentCompliant");
            }
            this.percentCompliant = percentCompliant;
            return this;
        }
        @CustomType.Setter
        public Builder product(String product) {
            if (product == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "product");
            }
            this.product = product;
            return this;
        }
        @CustomType.Setter
        public Builder productCount(Integer productCount) {
            if (productCount == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "productCount");
            }
            this.productCount = productCount;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceRegion(String resourceRegion) {
            if (resourceRegion == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "resourceRegion");
            }
            this.resourceRegion = resourceRegion;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            if (resourceType == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "resourceType");
            }
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetCount(Integer targetCount) {
            if (targetCount == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "targetCount");
            }
            this.targetCount = targetCount;
            return this;
        }
        @CustomType.Setter
        public Builder tenancyId(String tenancyId) {
            if (tenancyId == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "tenancyId");
            }
            this.tenancyId = tenancyId;
            return this;
        }
        @CustomType.Setter
        public Builder tenancyName(String tenancyName) {
            if (tenancyName == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "tenancyName");
            }
            this.tenancyName = tenancyName;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetFleetResourceResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetFleetResourceResult build() {
            final var _resultValue = new GetFleetResourceResult();
            _resultValue.compartment = compartment;
            _resultValue.compartmentId = compartmentId;
            _resultValue.complianceState = complianceState;
            _resultValue.displayName = displayName;
            _resultValue.environmentType = environmentType;
            _resultValue.fleetId = fleetId;
            _resultValue.fleetResourceId = fleetResourceId;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.percentCompliant = percentCompliant;
            _resultValue.product = product;
            _resultValue.productCount = productCount;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceRegion = resourceRegion;
            _resultValue.resourceType = resourceType;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.targetCount = targetCount;
            _resultValue.tenancyId = tenancyId;
            _resultValue.tenancyName = tenancyName;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
