// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollectionItemCredential;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollectionItemNotificationPreference;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollectionItemRuleSelectionCriteria;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFleetsFleetCollectionItem {
    /**
     * @return A filter to return resources that match the Application Type/Product Stack given..
     * 
     */
    private String applicationType;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Credentials associated with the Fleet.
     * 
     */
    private List<GetFleetsFleetCollectionItemCredential> credentials;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return A filter to return resources that match the Environment Type given.
     * 
     */
    private String environmentType;
    /**
     * @return A filter to return fleets whose fleetType matches the given fleetType.
     * 
     */
    private String fleetType;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Group Type associated with Group Fleet. Applicable for GROUP fleet types.
     * 
     */
    private String groupType;
    /**
     * @return A filter to return fleets whose id matches the given Fleet identifier
     * 
     */
    private String id;
    /**
     * @return A value that represents if auto-confirming of the targets can be enabled. This will allow targets to be auto-confirmed in the fleet without manual intervention.
     * 
     */
    private Boolean isTargetAutoConfirm;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Notification information to get notified when the fleet status changes.
     * 
     */
    private List<GetFleetsFleetCollectionItemNotificationPreference> notificationPreferences;
    /**
     * @return Products associated with the Fleet.
     * 
     */
    private List<String> products;
    /**
     * @return Associated region
     * 
     */
    private String resourceRegion;
    /**
     * @return Type of resource selection in a Fleet. Select resources manually or select resources based on rules.
     * 
     */
    private String resourceSelectionType;
    /**
     * @return Rule Selection Criteria for DYNAMIC resource selection for a GENERIC fleet. Rules define what resources are members of this fleet. All resources that meet the criteria are added automatically.
     * 
     */
    private List<GetFleetsFleetCollectionItemRuleSelectionCriteria> ruleSelectionCriterias;
    /**
     * @return A filter to return fleets whose lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetFleetsFleetCollectionItem() {}
    /**
     * @return A filter to return resources that match the Application Type/Product Stack given..
     * 
     */
    public String applicationType() {
        return this.applicationType;
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Credentials associated with the Fleet.
     * 
     */
    public List<GetFleetsFleetCollectionItemCredential> credentials() {
        return this.credentials;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return A filter to return resources that match the Environment Type given.
     * 
     */
    public String environmentType() {
        return this.environmentType;
    }
    /**
     * @return A filter to return fleets whose fleetType matches the given fleetType.
     * 
     */
    public String fleetType() {
        return this.fleetType;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Group Type associated with Group Fleet. Applicable for GROUP fleet types.
     * 
     */
    public String groupType() {
        return this.groupType;
    }
    /**
     * @return A filter to return fleets whose id matches the given Fleet identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A value that represents if auto-confirming of the targets can be enabled. This will allow targets to be auto-confirmed in the fleet without manual intervention.
     * 
     */
    public Boolean isTargetAutoConfirm() {
        return this.isTargetAutoConfirm;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Notification information to get notified when the fleet status changes.
     * 
     */
    public List<GetFleetsFleetCollectionItemNotificationPreference> notificationPreferences() {
        return this.notificationPreferences;
    }
    /**
     * @return Products associated with the Fleet.
     * 
     */
    public List<String> products() {
        return this.products;
    }
    /**
     * @return Associated region
     * 
     */
    public String resourceRegion() {
        return this.resourceRegion;
    }
    /**
     * @return Type of resource selection in a Fleet. Select resources manually or select resources based on rules.
     * 
     */
    public String resourceSelectionType() {
        return this.resourceSelectionType;
    }
    /**
     * @return Rule Selection Criteria for DYNAMIC resource selection for a GENERIC fleet. Rules define what resources are members of this fleet. All resources that meet the criteria are added automatically.
     * 
     */
    public List<GetFleetsFleetCollectionItemRuleSelectionCriteria> ruleSelectionCriterias() {
        return this.ruleSelectionCriterias;
    }
    /**
     * @return A filter to return fleets whose lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetsFleetCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationType;
        private String compartmentId;
        private List<GetFleetsFleetCollectionItemCredential> credentials;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private String environmentType;
        private String fleetType;
        private Map<String,String> freeformTags;
        private String groupType;
        private String id;
        private Boolean isTargetAutoConfirm;
        private String lifecycleDetails;
        private List<GetFleetsFleetCollectionItemNotificationPreference> notificationPreferences;
        private List<String> products;
        private String resourceRegion;
        private String resourceSelectionType;
        private List<GetFleetsFleetCollectionItemRuleSelectionCriteria> ruleSelectionCriterias;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetFleetsFleetCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationType = defaults.applicationType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.credentials = defaults.credentials;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.environmentType = defaults.environmentType;
    	      this.fleetType = defaults.fleetType;
    	      this.freeformTags = defaults.freeformTags;
    	      this.groupType = defaults.groupType;
    	      this.id = defaults.id;
    	      this.isTargetAutoConfirm = defaults.isTargetAutoConfirm;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.notificationPreferences = defaults.notificationPreferences;
    	      this.products = defaults.products;
    	      this.resourceRegion = defaults.resourceRegion;
    	      this.resourceSelectionType = defaults.resourceSelectionType;
    	      this.ruleSelectionCriterias = defaults.ruleSelectionCriterias;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder applicationType(String applicationType) {
            if (applicationType == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "applicationType");
            }
            this.applicationType = applicationType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder credentials(List<GetFleetsFleetCollectionItemCredential> credentials) {
            if (credentials == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "credentials");
            }
            this.credentials = credentials;
            return this;
        }
        public Builder credentials(GetFleetsFleetCollectionItemCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder environmentType(String environmentType) {
            if (environmentType == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "environmentType");
            }
            this.environmentType = environmentType;
            return this;
        }
        @CustomType.Setter
        public Builder fleetType(String fleetType) {
            if (fleetType == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "fleetType");
            }
            this.fleetType = fleetType;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder groupType(String groupType) {
            if (groupType == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "groupType");
            }
            this.groupType = groupType;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isTargetAutoConfirm(Boolean isTargetAutoConfirm) {
            if (isTargetAutoConfirm == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "isTargetAutoConfirm");
            }
            this.isTargetAutoConfirm = isTargetAutoConfirm;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder notificationPreferences(List<GetFleetsFleetCollectionItemNotificationPreference> notificationPreferences) {
            if (notificationPreferences == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "notificationPreferences");
            }
            this.notificationPreferences = notificationPreferences;
            return this;
        }
        public Builder notificationPreferences(GetFleetsFleetCollectionItemNotificationPreference... notificationPreferences) {
            return notificationPreferences(List.of(notificationPreferences));
        }
        @CustomType.Setter
        public Builder products(List<String> products) {
            if (products == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "products");
            }
            this.products = products;
            return this;
        }
        public Builder products(String... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder resourceRegion(String resourceRegion) {
            if (resourceRegion == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "resourceRegion");
            }
            this.resourceRegion = resourceRegion;
            return this;
        }
        @CustomType.Setter
        public Builder resourceSelectionType(String resourceSelectionType) {
            if (resourceSelectionType == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "resourceSelectionType");
            }
            this.resourceSelectionType = resourceSelectionType;
            return this;
        }
        @CustomType.Setter
        public Builder ruleSelectionCriterias(List<GetFleetsFleetCollectionItemRuleSelectionCriteria> ruleSelectionCriterias) {
            if (ruleSelectionCriterias == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "ruleSelectionCriterias");
            }
            this.ruleSelectionCriterias = ruleSelectionCriterias;
            return this;
        }
        public Builder ruleSelectionCriterias(GetFleetsFleetCollectionItemRuleSelectionCriteria... ruleSelectionCriterias) {
            return ruleSelectionCriterias(List.of(ruleSelectionCriterias));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetFleetsFleetCollectionItem build() {
            final var _resultValue = new GetFleetsFleetCollectionItem();
            _resultValue.applicationType = applicationType;
            _resultValue.compartmentId = compartmentId;
            _resultValue.credentials = credentials;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.environmentType = environmentType;
            _resultValue.fleetType = fleetType;
            _resultValue.freeformTags = freeformTags;
            _resultValue.groupType = groupType;
            _resultValue.id = id;
            _resultValue.isTargetAutoConfirm = isTargetAutoConfirm;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.notificationPreferences = notificationPreferences;
            _resultValue.products = products;
            _resultValue.resourceRegion = resourceRegion;
            _resultValue.resourceSelectionType = resourceSelectionType;
            _resultValue.ruleSelectionCriterias = ruleSelectionCriterias;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
