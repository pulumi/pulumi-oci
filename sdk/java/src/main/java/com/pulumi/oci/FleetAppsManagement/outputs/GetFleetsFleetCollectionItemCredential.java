// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollectionItemCredentialEntitySpecific;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollectionItemCredentialPassword;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollectionItemCredentialUser;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFleetsFleetCollectionItemCredential {
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    private String compartmentId;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Credential specific Details.
     * 
     */
    private List<GetFleetsFleetCollectionItemCredentialEntitySpecific> entitySpecifics;
    /**
     * @return Credential Details.
     * 
     */
    private List<GetFleetsFleetCollectionItemCredentialPassword> passwords;
    /**
     * @return Credential Details.
     * 
     */
    private List<GetFleetsFleetCollectionItemCredentialUser> users;

    private GetFleetsFleetCollectionItemCredential() {}
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Credential specific Details.
     * 
     */
    public List<GetFleetsFleetCollectionItemCredentialEntitySpecific> entitySpecifics() {
        return this.entitySpecifics;
    }
    /**
     * @return Credential Details.
     * 
     */
    public List<GetFleetsFleetCollectionItemCredentialPassword> passwords() {
        return this.passwords;
    }
    /**
     * @return Credential Details.
     * 
     */
    public List<GetFleetsFleetCollectionItemCredentialUser> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetsFleetCollectionItemCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String displayName;
        private List<GetFleetsFleetCollectionItemCredentialEntitySpecific> entitySpecifics;
        private List<GetFleetsFleetCollectionItemCredentialPassword> passwords;
        private List<GetFleetsFleetCollectionItemCredentialUser> users;
        public Builder() {}
        public Builder(GetFleetsFleetCollectionItemCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.entitySpecifics = defaults.entitySpecifics;
    	      this.passwords = defaults.passwords;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemCredential", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemCredential", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder entitySpecifics(List<GetFleetsFleetCollectionItemCredentialEntitySpecific> entitySpecifics) {
            if (entitySpecifics == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemCredential", "entitySpecifics");
            }
            this.entitySpecifics = entitySpecifics;
            return this;
        }
        public Builder entitySpecifics(GetFleetsFleetCollectionItemCredentialEntitySpecific... entitySpecifics) {
            return entitySpecifics(List.of(entitySpecifics));
        }
        @CustomType.Setter
        public Builder passwords(List<GetFleetsFleetCollectionItemCredentialPassword> passwords) {
            if (passwords == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemCredential", "passwords");
            }
            this.passwords = passwords;
            return this;
        }
        public Builder passwords(GetFleetsFleetCollectionItemCredentialPassword... passwords) {
            return passwords(List.of(passwords));
        }
        @CustomType.Setter
        public Builder users(List<GetFleetsFleetCollectionItemCredentialUser> users) {
            if (users == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemCredential", "users");
            }
            this.users = users;
            return this;
        }
        public Builder users(GetFleetsFleetCollectionItemCredentialUser... users) {
            return users(List.of(users));
        }
        public GetFleetsFleetCollectionItemCredential build() {
            final var _resultValue = new GetFleetsFleetCollectionItemCredential();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.entitySpecifics = entitySpecifics;
            _resultValue.passwords = passwords;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
