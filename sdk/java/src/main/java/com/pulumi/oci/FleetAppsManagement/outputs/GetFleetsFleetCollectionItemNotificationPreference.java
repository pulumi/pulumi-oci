// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollectionItemNotificationPreferencePreference;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFleetsFleetCollectionItemNotificationPreference {
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    private String compartmentId;
    /**
     * @return Preferences to send notifications on the fleet activities.
     * 
     */
    private List<GetFleetsFleetCollectionItemNotificationPreferencePreference> preferences;
    /**
     * @return Topic Id where the notifications will be directed. A topic is a communication channel for sending messages on chosen events to subscriptions.
     * 
     */
    private String topicId;

    private GetFleetsFleetCollectionItemNotificationPreference() {}
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Preferences to send notifications on the fleet activities.
     * 
     */
    public List<GetFleetsFleetCollectionItemNotificationPreferencePreference> preferences() {
        return this.preferences;
    }
    /**
     * @return Topic Id where the notifications will be directed. A topic is a communication channel for sending messages on chosen events to subscriptions.
     * 
     */
    public String topicId() {
        return this.topicId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetsFleetCollectionItemNotificationPreference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetFleetsFleetCollectionItemNotificationPreferencePreference> preferences;
        private String topicId;
        public Builder() {}
        public Builder(GetFleetsFleetCollectionItemNotificationPreference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.preferences = defaults.preferences;
    	      this.topicId = defaults.topicId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreference", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder preferences(List<GetFleetsFleetCollectionItemNotificationPreferencePreference> preferences) {
            if (preferences == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreference", "preferences");
            }
            this.preferences = preferences;
            return this;
        }
        public Builder preferences(GetFleetsFleetCollectionItemNotificationPreferencePreference... preferences) {
            return preferences(List.of(preferences));
        }
        @CustomType.Setter
        public Builder topicId(String topicId) {
            if (topicId == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreference", "topicId");
            }
            this.topicId = topicId;
            return this;
        }
        public GetFleetsFleetCollectionItemNotificationPreference build() {
            final var _resultValue = new GetFleetsFleetCollectionItemNotificationPreference();
            _resultValue.compartmentId = compartmentId;
            _resultValue.preferences = preferences;
            _resultValue.topicId = topicId;
            return _resultValue;
        }
    }
}
