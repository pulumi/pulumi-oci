// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFleetsFleetCollectionItemNotificationPreferencePreference {
    /**
     * @return Enables or disables notification on Job Failures.
     * 
     */
    private Boolean onJobFailure;
    /**
     * @return Enables or disables notification when fleet resource becomes non compliant.
     * 
     */
    private Boolean onResourceNonCompliance;
    /**
     * @return Enables or disables notification when a newer version of runbook associated with a fleet is available
     * 
     */
    private Boolean onRunbookNewerVersion;
    /**
     * @return Enables or disables notification on task failure.
     * 
     */
    private Boolean onTaskFailure;
    /**
     * @return Enables or disables notification when a task is paused.
     * 
     */
    private Boolean onTaskPause;
    /**
     * @return Enables or disables notification on task success.
     * 
     */
    private Boolean onTaskSuccess;
    /**
     * @return Enables or disables notification on Environment Fleet Topology Modification.
     * 
     */
    private Boolean onTopologyModification;
    /**
     * @return Enables notification on upcoming schedule.
     * 
     */
    private List<GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule> upcomingSchedules;

    private GetFleetsFleetCollectionItemNotificationPreferencePreference() {}
    /**
     * @return Enables or disables notification on Job Failures.
     * 
     */
    public Boolean onJobFailure() {
        return this.onJobFailure;
    }
    /**
     * @return Enables or disables notification when fleet resource becomes non compliant.
     * 
     */
    public Boolean onResourceNonCompliance() {
        return this.onResourceNonCompliance;
    }
    /**
     * @return Enables or disables notification when a newer version of runbook associated with a fleet is available
     * 
     */
    public Boolean onRunbookNewerVersion() {
        return this.onRunbookNewerVersion;
    }
    /**
     * @return Enables or disables notification on task failure.
     * 
     */
    public Boolean onTaskFailure() {
        return this.onTaskFailure;
    }
    /**
     * @return Enables or disables notification when a task is paused.
     * 
     */
    public Boolean onTaskPause() {
        return this.onTaskPause;
    }
    /**
     * @return Enables or disables notification on task success.
     * 
     */
    public Boolean onTaskSuccess() {
        return this.onTaskSuccess;
    }
    /**
     * @return Enables or disables notification on Environment Fleet Topology Modification.
     * 
     */
    public Boolean onTopologyModification() {
        return this.onTopologyModification;
    }
    /**
     * @return Enables notification on upcoming schedule.
     * 
     */
    public List<GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule> upcomingSchedules() {
        return this.upcomingSchedules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetsFleetCollectionItemNotificationPreferencePreference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean onJobFailure;
        private Boolean onResourceNonCompliance;
        private Boolean onRunbookNewerVersion;
        private Boolean onTaskFailure;
        private Boolean onTaskPause;
        private Boolean onTaskSuccess;
        private Boolean onTopologyModification;
        private List<GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule> upcomingSchedules;
        public Builder() {}
        public Builder(GetFleetsFleetCollectionItemNotificationPreferencePreference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.onJobFailure = defaults.onJobFailure;
    	      this.onResourceNonCompliance = defaults.onResourceNonCompliance;
    	      this.onRunbookNewerVersion = defaults.onRunbookNewerVersion;
    	      this.onTaskFailure = defaults.onTaskFailure;
    	      this.onTaskPause = defaults.onTaskPause;
    	      this.onTaskSuccess = defaults.onTaskSuccess;
    	      this.onTopologyModification = defaults.onTopologyModification;
    	      this.upcomingSchedules = defaults.upcomingSchedules;
        }

        @CustomType.Setter
        public Builder onJobFailure(Boolean onJobFailure) {
            if (onJobFailure == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreferencePreference", "onJobFailure");
            }
            this.onJobFailure = onJobFailure;
            return this;
        }
        @CustomType.Setter
        public Builder onResourceNonCompliance(Boolean onResourceNonCompliance) {
            if (onResourceNonCompliance == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreferencePreference", "onResourceNonCompliance");
            }
            this.onResourceNonCompliance = onResourceNonCompliance;
            return this;
        }
        @CustomType.Setter
        public Builder onRunbookNewerVersion(Boolean onRunbookNewerVersion) {
            if (onRunbookNewerVersion == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreferencePreference", "onRunbookNewerVersion");
            }
            this.onRunbookNewerVersion = onRunbookNewerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder onTaskFailure(Boolean onTaskFailure) {
            if (onTaskFailure == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreferencePreference", "onTaskFailure");
            }
            this.onTaskFailure = onTaskFailure;
            return this;
        }
        @CustomType.Setter
        public Builder onTaskPause(Boolean onTaskPause) {
            if (onTaskPause == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreferencePreference", "onTaskPause");
            }
            this.onTaskPause = onTaskPause;
            return this;
        }
        @CustomType.Setter
        public Builder onTaskSuccess(Boolean onTaskSuccess) {
            if (onTaskSuccess == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreferencePreference", "onTaskSuccess");
            }
            this.onTaskSuccess = onTaskSuccess;
            return this;
        }
        @CustomType.Setter
        public Builder onTopologyModification(Boolean onTopologyModification) {
            if (onTopologyModification == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreferencePreference", "onTopologyModification");
            }
            this.onTopologyModification = onTopologyModification;
            return this;
        }
        @CustomType.Setter
        public Builder upcomingSchedules(List<GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule> upcomingSchedules) {
            if (upcomingSchedules == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreferencePreference", "upcomingSchedules");
            }
            this.upcomingSchedules = upcomingSchedules;
            return this;
        }
        public Builder upcomingSchedules(GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule... upcomingSchedules) {
            return upcomingSchedules(List.of(upcomingSchedules));
        }
        public GetFleetsFleetCollectionItemNotificationPreferencePreference build() {
            final var _resultValue = new GetFleetsFleetCollectionItemNotificationPreferencePreference();
            _resultValue.onJobFailure = onJobFailure;
            _resultValue.onResourceNonCompliance = onResourceNonCompliance;
            _resultValue.onRunbookNewerVersion = onRunbookNewerVersion;
            _resultValue.onTaskFailure = onTaskFailure;
            _resultValue.onTaskPause = onTaskPause;
            _resultValue.onTaskSuccess = onTaskSuccess;
            _resultValue.onTopologyModification = onTopologyModification;
            _resultValue.upcomingSchedules = upcomingSchedules;
            return _resultValue;
        }
    }
}
