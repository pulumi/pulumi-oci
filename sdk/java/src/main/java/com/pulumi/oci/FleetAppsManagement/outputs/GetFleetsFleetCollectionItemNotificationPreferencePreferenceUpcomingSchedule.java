// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule {
    /**
     * @return Specify when the notification should be sent.
     * 
     */
    private String notifyBefore;
    /**
     * @return Enables notification on upcoming schedule.
     * 
     */
    private Boolean onUpcomingSchedule;

    private GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule() {}
    /**
     * @return Specify when the notification should be sent.
     * 
     */
    public String notifyBefore() {
        return this.notifyBefore;
    }
    /**
     * @return Enables notification on upcoming schedule.
     * 
     */
    public Boolean onUpcomingSchedule() {
        return this.onUpcomingSchedule;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String notifyBefore;
        private Boolean onUpcomingSchedule;
        public Builder() {}
        public Builder(GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.notifyBefore = defaults.notifyBefore;
    	      this.onUpcomingSchedule = defaults.onUpcomingSchedule;
        }

        @CustomType.Setter
        public Builder notifyBefore(String notifyBefore) {
            if (notifyBefore == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule", "notifyBefore");
            }
            this.notifyBefore = notifyBefore;
            return this;
        }
        @CustomType.Setter
        public Builder onUpcomingSchedule(Boolean onUpcomingSchedule) {
            if (onUpcomingSchedule == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule", "onUpcomingSchedule");
            }
            this.onUpcomingSchedule = onUpcomingSchedule;
            return this;
        }
        public GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule build() {
            final var _resultValue = new GetFleetsFleetCollectionItemNotificationPreferencePreferenceUpcomingSchedule();
            _resultValue.notifyBefore = notifyBefore;
            _resultValue.onUpcomingSchedule = onUpcomingSchedule;
            return _resultValue;
        }
    }
}
