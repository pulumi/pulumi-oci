// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFleetsFleetCollectionItemProperty {
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    private String compartmentId;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Type of the FleetProperty.
     * 
     */
    private String fleetPropertyType;
    /**
     * @return Property is required or not.
     * 
     */
    private Boolean isRequired;
    /**
     * @return Value of the Property.
     * 
     */
    private String value;

    private GetFleetsFleetCollectionItemProperty() {}
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Type of the FleetProperty.
     * 
     */
    public String fleetPropertyType() {
        return this.fleetPropertyType;
    }
    /**
     * @return Property is required or not.
     * 
     */
    public Boolean isRequired() {
        return this.isRequired;
    }
    /**
     * @return Value of the Property.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetsFleetCollectionItemProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String displayName;
        private String fleetPropertyType;
        private Boolean isRequired;
        private String value;
        public Builder() {}
        public Builder(GetFleetsFleetCollectionItemProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.fleetPropertyType = defaults.fleetPropertyType;
    	      this.isRequired = defaults.isRequired;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemProperty", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemProperty", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fleetPropertyType(String fleetPropertyType) {
            if (fleetPropertyType == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemProperty", "fleetPropertyType");
            }
            this.fleetPropertyType = fleetPropertyType;
            return this;
        }
        @CustomType.Setter
        public Builder isRequired(Boolean isRequired) {
            if (isRequired == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemProperty", "isRequired");
            }
            this.isRequired = isRequired;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemProperty", "value");
            }
            this.value = value;
            return this;
        }
        public GetFleetsFleetCollectionItemProperty build() {
            final var _resultValue = new GetFleetsFleetCollectionItemProperty();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.fleetPropertyType = fleetPropertyType;
            _resultValue.isRequired = isRequired;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
