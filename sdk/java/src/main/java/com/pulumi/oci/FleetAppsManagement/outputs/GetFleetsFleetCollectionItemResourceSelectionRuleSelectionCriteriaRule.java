// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRuleCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRule {
    /**
     * @return Based on what the rule is created. It can be based on a resourceProperty or a tag.   If based on a tag, basis will be &#39;definedTagEquals&#39; If based on a resource property, basis will be &#39;inventoryProperties&#39;
     * 
     */
    private String basis;
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    private String compartmentId;
    /**
     * @return Rule Conditions
     * 
     */
    private List<GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRuleCondition> conditions;
    /**
     * @return The Compartment ID to dynamically search resources. Provide the compartment ID to which the rule is applicable.
     * 
     */
    private String resourceCompartmentId;

    private GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRule() {}
    /**
     * @return Based on what the rule is created. It can be based on a resourceProperty or a tag.   If based on a tag, basis will be &#39;definedTagEquals&#39; If based on a resource property, basis will be &#39;inventoryProperties&#39;
     * 
     */
    public String basis() {
        return this.basis;
    }
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Rule Conditions
     * 
     */
    public List<GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRuleCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return The Compartment ID to dynamically search resources. Provide the compartment ID to which the rule is applicable.
     * 
     */
    public String resourceCompartmentId() {
        return this.resourceCompartmentId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String basis;
        private String compartmentId;
        private List<GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRuleCondition> conditions;
        private String resourceCompartmentId;
        public Builder() {}
        public Builder(GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basis = defaults.basis;
    	      this.compartmentId = defaults.compartmentId;
    	      this.conditions = defaults.conditions;
    	      this.resourceCompartmentId = defaults.resourceCompartmentId;
        }

        @CustomType.Setter
        public Builder basis(String basis) {
            if (basis == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRule", "basis");
            }
            this.basis = basis;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRule", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder conditions(List<GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRuleCondition> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRule", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder resourceCompartmentId(String resourceCompartmentId) {
            if (resourceCompartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRule", "resourceCompartmentId");
            }
            this.resourceCompartmentId = resourceCompartmentId;
            return this;
        }
        public GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRule build() {
            final var _resultValue = new GetFleetsFleetCollectionItemResourceSelectionRuleSelectionCriteriaRule();
            _resultValue.basis = basis;
            _resultValue.compartmentId = compartmentId;
            _resultValue.conditions = conditions;
            _resultValue.resourceCompartmentId = resourceCompartmentId;
            return _resultValue;
        }
    }
}
