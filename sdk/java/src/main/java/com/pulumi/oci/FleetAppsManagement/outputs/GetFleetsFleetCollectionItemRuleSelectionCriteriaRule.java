// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollectionItemRuleSelectionCriteriaRuleCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFleetsFleetCollectionItemRuleSelectionCriteriaRule {
    /**
     * @return Rule to be be applied on.
     * 
     */
    private String basis;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Rule Conditions
     * 
     */
    private List<GetFleetsFleetCollectionItemRuleSelectionCriteriaRuleCondition> conditions;
    /**
     * @return Resource Compartment Id.Provide the compartmentId the resource belongs to.
     * 
     */
    private String resourceCompartmentId;

    private GetFleetsFleetCollectionItemRuleSelectionCriteriaRule() {}
    /**
     * @return Rule to be be applied on.
     * 
     */
    public String basis() {
        return this.basis;
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Rule Conditions
     * 
     */
    public List<GetFleetsFleetCollectionItemRuleSelectionCriteriaRuleCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return Resource Compartment Id.Provide the compartmentId the resource belongs to.
     * 
     */
    public String resourceCompartmentId() {
        return this.resourceCompartmentId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetsFleetCollectionItemRuleSelectionCriteriaRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String basis;
        private String compartmentId;
        private List<GetFleetsFleetCollectionItemRuleSelectionCriteriaRuleCondition> conditions;
        private String resourceCompartmentId;
        public Builder() {}
        public Builder(GetFleetsFleetCollectionItemRuleSelectionCriteriaRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basis = defaults.basis;
    	      this.compartmentId = defaults.compartmentId;
    	      this.conditions = defaults.conditions;
    	      this.resourceCompartmentId = defaults.resourceCompartmentId;
        }

        @CustomType.Setter
        public Builder basis(String basis) {
            if (basis == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemRuleSelectionCriteriaRule", "basis");
            }
            this.basis = basis;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemRuleSelectionCriteriaRule", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder conditions(List<GetFleetsFleetCollectionItemRuleSelectionCriteriaRuleCondition> conditions) {
            if (conditions == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemRuleSelectionCriteriaRule", "conditions");
            }
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(GetFleetsFleetCollectionItemRuleSelectionCriteriaRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder resourceCompartmentId(String resourceCompartmentId) {
            if (resourceCompartmentId == null) {
              throw new MissingRequiredPropertyException("GetFleetsFleetCollectionItemRuleSelectionCriteriaRule", "resourceCompartmentId");
            }
            this.resourceCompartmentId = resourceCompartmentId;
            return this;
        }
        public GetFleetsFleetCollectionItemRuleSelectionCriteriaRule build() {
            final var _resultValue = new GetFleetsFleetCollectionItemRuleSelectionCriteriaRule();
            _resultValue.basis = basis;
            _resultValue.compartmentId = compartmentId;
            _resultValue.conditions = conditions;
            _resultValue.resourceCompartmentId = resourceCompartmentId;
            return _resultValue;
        }
    }
}
