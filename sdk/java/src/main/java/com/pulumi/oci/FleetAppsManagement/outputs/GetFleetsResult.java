// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFilter;
import com.pulumi.oci.FleetAppsManagement.outputs.GetFleetsFleetCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFleetsResult {
    private @Nullable String applicationType;
    /**
     * @return Compartment Identifier[OCID].
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
     * 
     */
    private @Nullable String environmentType;
    private @Nullable List<GetFleetsFilter> filters;
    /**
     * @return The list of fleet_collection.
     * 
     */
    private List<GetFleetsFleetCollection> fleetCollections;
    /**
     * @return Type of the Fleet. PRODUCT - A fleet of product-specific resources for a product type. ENVIRONMENT - A fleet of environment-specific resources for a product stack. GROUP - A fleet of a fleet of either environment or product fleets. GENERIC - A fleet of resources selected dynamically or manually for reporting purposes
     * 
     */
    private @Nullable String fleetType;
    /**
     * @return The OCID of the resource.
     * 
     */
    private @Nullable String id;
    private @Nullable String product;
    /**
     * @return The lifecycle state of the Fleet.
     * 
     */
    private @Nullable String state;

    private GetFleetsResult() {}
    public Optional<String> applicationType() {
        return Optional.ofNullable(this.applicationType);
    }
    /**
     * @return Compartment Identifier[OCID].
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Environment Type associated with the Fleet. Applicable for ENVIRONMENT fleet types.
     * 
     */
    public Optional<String> environmentType() {
        return Optional.ofNullable(this.environmentType);
    }
    public List<GetFleetsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The list of fleet_collection.
     * 
     */
    public List<GetFleetsFleetCollection> fleetCollections() {
        return this.fleetCollections;
    }
    /**
     * @return Type of the Fleet. PRODUCT - A fleet of product-specific resources for a product type. ENVIRONMENT - A fleet of environment-specific resources for a product stack. GROUP - A fleet of a fleet of either environment or product fleets. GENERIC - A fleet of resources selected dynamically or manually for reporting purposes
     * 
     */
    public Optional<String> fleetType() {
        return Optional.ofNullable(this.fleetType);
    }
    /**
     * @return The OCID of the resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> product() {
        return Optional.ofNullable(this.product);
    }
    /**
     * @return The lifecycle state of the Fleet.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationType;
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable String environmentType;
        private @Nullable List<GetFleetsFilter> filters;
        private List<GetFleetsFleetCollection> fleetCollections;
        private @Nullable String fleetType;
        private @Nullable String id;
        private @Nullable String product;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetFleetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationType = defaults.applicationType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.environmentType = defaults.environmentType;
    	      this.filters = defaults.filters;
    	      this.fleetCollections = defaults.fleetCollections;
    	      this.fleetType = defaults.fleetType;
    	      this.id = defaults.id;
    	      this.product = defaults.product;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder applicationType(@Nullable String applicationType) {

            this.applicationType = applicationType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder environmentType(@Nullable String environmentType) {

            this.environmentType = environmentType;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetFleetsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetFleetsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder fleetCollections(List<GetFleetsFleetCollection> fleetCollections) {
            if (fleetCollections == null) {
              throw new MissingRequiredPropertyException("GetFleetsResult", "fleetCollections");
            }
            this.fleetCollections = fleetCollections;
            return this;
        }
        public Builder fleetCollections(GetFleetsFleetCollection... fleetCollections) {
            return fleetCollections(List.of(fleetCollections));
        }
        @CustomType.Setter
        public Builder fleetType(@Nullable String fleetType) {

            this.fleetType = fleetType;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder product(@Nullable String product) {

            this.product = product;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetFleetsResult build() {
            final var _resultValue = new GetFleetsResult();
            _resultValue.applicationType = applicationType;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.environmentType = environmentType;
            _resultValue.filters = filters;
            _resultValue.fleetCollections = fleetCollections;
            _resultValue.fleetType = fleetType;
            _resultValue.id = id;
            _resultValue.product = product;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
