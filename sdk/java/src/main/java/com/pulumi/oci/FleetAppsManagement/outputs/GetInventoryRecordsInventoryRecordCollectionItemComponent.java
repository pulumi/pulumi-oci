// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetInventoryRecordsInventoryRecordCollectionItemComponentProperty;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInventoryRecordsInventoryRecordCollectionItemComponent {
    /**
     * @return Name of the target component
     * 
     */
    private String componentName;
    /**
     * @return Path of the component
     * 
     */
    private String componentPath;
    /**
     * @return Version of the target component
     * 
     */
    private String componentVersion;
    /**
     * @return List of target properties
     * 
     */
    private List<GetInventoryRecordsInventoryRecordCollectionItemComponentProperty> properties;

    private GetInventoryRecordsInventoryRecordCollectionItemComponent() {}
    /**
     * @return Name of the target component
     * 
     */
    public String componentName() {
        return this.componentName;
    }
    /**
     * @return Path of the component
     * 
     */
    public String componentPath() {
        return this.componentPath;
    }
    /**
     * @return Version of the target component
     * 
     */
    public String componentVersion() {
        return this.componentVersion;
    }
    /**
     * @return List of target properties
     * 
     */
    public List<GetInventoryRecordsInventoryRecordCollectionItemComponentProperty> properties() {
        return this.properties;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInventoryRecordsInventoryRecordCollectionItemComponent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String componentName;
        private String componentPath;
        private String componentVersion;
        private List<GetInventoryRecordsInventoryRecordCollectionItemComponentProperty> properties;
        public Builder() {}
        public Builder(GetInventoryRecordsInventoryRecordCollectionItemComponent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.componentName = defaults.componentName;
    	      this.componentPath = defaults.componentPath;
    	      this.componentVersion = defaults.componentVersion;
    	      this.properties = defaults.properties;
        }

        @CustomType.Setter
        public Builder componentName(String componentName) {
            if (componentName == null) {
              throw new MissingRequiredPropertyException("GetInventoryRecordsInventoryRecordCollectionItemComponent", "componentName");
            }
            this.componentName = componentName;
            return this;
        }
        @CustomType.Setter
        public Builder componentPath(String componentPath) {
            if (componentPath == null) {
              throw new MissingRequiredPropertyException("GetInventoryRecordsInventoryRecordCollectionItemComponent", "componentPath");
            }
            this.componentPath = componentPath;
            return this;
        }
        @CustomType.Setter
        public Builder componentVersion(String componentVersion) {
            if (componentVersion == null) {
              throw new MissingRequiredPropertyException("GetInventoryRecordsInventoryRecordCollectionItemComponent", "componentVersion");
            }
            this.componentVersion = componentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder properties(List<GetInventoryRecordsInventoryRecordCollectionItemComponentProperty> properties) {
            if (properties == null) {
              throw new MissingRequiredPropertyException("GetInventoryRecordsInventoryRecordCollectionItemComponent", "properties");
            }
            this.properties = properties;
            return this;
        }
        public Builder properties(GetInventoryRecordsInventoryRecordCollectionItemComponentProperty... properties) {
            return properties(List.of(properties));
        }
        public GetInventoryRecordsInventoryRecordCollectionItemComponent build() {
            final var _resultValue = new GetInventoryRecordsInventoryRecordCollectionItemComponent();
            _resultValue.componentName = componentName;
            _resultValue.componentPath = componentPath;
            _resultValue.componentVersion = componentVersion;
            _resultValue.properties = properties;
            return _resultValue;
        }
    }
}
