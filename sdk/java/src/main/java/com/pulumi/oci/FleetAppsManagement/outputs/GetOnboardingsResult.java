// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetOnboardingsFilter;
import com.pulumi.oci.FleetAppsManagement.outputs.GetOnboardingsOnboardingCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOnboardingsResult {
    /**
     * @return Tenancy OCID
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable List<GetOnboardingsFilter> filters;
    /**
     * @return The unique id of the resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The list of onboarding_collection.
     * 
     */
    private List<GetOnboardingsOnboardingCollection> onboardingCollections;
    /**
     * @return The current state of the Onboarding.
     * 
     */
    private @Nullable String state;

    private GetOnboardingsResult() {}
    /**
     * @return Tenancy OCID
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public List<GetOnboardingsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The unique id of the resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The list of onboarding_collection.
     * 
     */
    public List<GetOnboardingsOnboardingCollection> onboardingCollections() {
        return this.onboardingCollections;
    }
    /**
     * @return The current state of the Onboarding.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOnboardingsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable List<GetOnboardingsFilter> filters;
        private @Nullable String id;
        private List<GetOnboardingsOnboardingCollection> onboardingCollections;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetOnboardingsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.onboardingCollections = defaults.onboardingCollections;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetOnboardingsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetOnboardingsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder onboardingCollections(List<GetOnboardingsOnboardingCollection> onboardingCollections) {
            if (onboardingCollections == null) {
              throw new MissingRequiredPropertyException("GetOnboardingsResult", "onboardingCollections");
            }
            this.onboardingCollections = onboardingCollections;
            return this;
        }
        public Builder onboardingCollections(GetOnboardingsOnboardingCollection... onboardingCollections) {
            return onboardingCollections(List.of(onboardingCollections));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetOnboardingsResult build() {
            final var _resultValue = new GetOnboardingsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.onboardingCollections = onboardingCollections;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
