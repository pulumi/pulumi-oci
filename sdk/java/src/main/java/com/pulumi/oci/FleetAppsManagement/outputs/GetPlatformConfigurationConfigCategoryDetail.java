// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetPlatformConfigurationConfigCategoryDetailCompatibleProduct;
import com.pulumi.oci.FleetAppsManagement.outputs.GetPlatformConfigurationConfigCategoryDetailCredential;
import com.pulumi.oci.FleetAppsManagement.outputs.GetPlatformConfigurationConfigCategoryDetailPatchType;
import com.pulumi.oci.FleetAppsManagement.outputs.GetPlatformConfigurationConfigCategoryDetailProduct;
import com.pulumi.oci.FleetAppsManagement.outputs.GetPlatformConfigurationConfigCategoryDetailSubCategoryDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPlatformConfigurationConfigCategoryDetail {
    /**
     * @return Products compatible with this Product. Provide products from the list of other products you have created that are compatible with the present one
     * 
     */
    private List<GetPlatformConfigurationConfigCategoryDetailCompatibleProduct> compatibleProducts;
    /**
     * @return Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
     * 
     */
    private List<String> components;
    /**
     * @return Category of configuration
     * 
     */
    private String configCategory;
    /**
     * @return OCID for the Credential name to be associated with the Product Stack. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
     * 
     */
    private List<GetPlatformConfigurationConfigCategoryDetailCredential> credentials;
    /**
     * @return The OCID of the resource.
     * 
     */
    private String instanceId;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    private String instanceName;
    /**
     * @return Patch Types associated with this Product Stack which will be considered as Product.
     * 
     */
    private List<GetPlatformConfigurationConfigCategoryDetailPatchType> patchTypes;
    /**
     * @return Products that belong to the stack. For example, Oracle WebLogic and Java for the Oracle Fusion Middleware product stack.
     * 
     */
    private List<GetPlatformConfigurationConfigCategoryDetailProduct> products;
    /**
     * @return ProductStack Config Category Details.
     * 
     */
    private List<GetPlatformConfigurationConfigCategoryDetailSubCategoryDetail> subCategoryDetails;
    /**
     * @return Versions associated with the PRODUCT .
     * 
     */
    private List<String> versions;

    private GetPlatformConfigurationConfigCategoryDetail() {}
    /**
     * @return Products compatible with this Product. Provide products from the list of other products you have created that are compatible with the present one
     * 
     */
    public List<GetPlatformConfigurationConfigCategoryDetailCompatibleProduct> compatibleProducts() {
        return this.compatibleProducts;
    }
    /**
     * @return Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
     * 
     */
    public List<String> components() {
        return this.components;
    }
    /**
     * @return Category of configuration
     * 
     */
    public String configCategory() {
        return this.configCategory;
    }
    /**
     * @return OCID for the Credential name to be associated with the Product Stack. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
     * 
     */
    public List<GetPlatformConfigurationConfigCategoryDetailCredential> credentials() {
        return this.credentials;
    }
    /**
     * @return The OCID of the resource.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public String instanceName() {
        return this.instanceName;
    }
    /**
     * @return Patch Types associated with this Product Stack which will be considered as Product.
     * 
     */
    public List<GetPlatformConfigurationConfigCategoryDetailPatchType> patchTypes() {
        return this.patchTypes;
    }
    /**
     * @return Products that belong to the stack. For example, Oracle WebLogic and Java for the Oracle Fusion Middleware product stack.
     * 
     */
    public List<GetPlatformConfigurationConfigCategoryDetailProduct> products() {
        return this.products;
    }
    /**
     * @return ProductStack Config Category Details.
     * 
     */
    public List<GetPlatformConfigurationConfigCategoryDetailSubCategoryDetail> subCategoryDetails() {
        return this.subCategoryDetails;
    }
    /**
     * @return Versions associated with the PRODUCT .
     * 
     */
    public List<String> versions() {
        return this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPlatformConfigurationConfigCategoryDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetPlatformConfigurationConfigCategoryDetailCompatibleProduct> compatibleProducts;
        private List<String> components;
        private String configCategory;
        private List<GetPlatformConfigurationConfigCategoryDetailCredential> credentials;
        private String instanceId;
        private String instanceName;
        private List<GetPlatformConfigurationConfigCategoryDetailPatchType> patchTypes;
        private List<GetPlatformConfigurationConfigCategoryDetailProduct> products;
        private List<GetPlatformConfigurationConfigCategoryDetailSubCategoryDetail> subCategoryDetails;
        private List<String> versions;
        public Builder() {}
        public Builder(GetPlatformConfigurationConfigCategoryDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compatibleProducts = defaults.compatibleProducts;
    	      this.components = defaults.components;
    	      this.configCategory = defaults.configCategory;
    	      this.credentials = defaults.credentials;
    	      this.instanceId = defaults.instanceId;
    	      this.instanceName = defaults.instanceName;
    	      this.patchTypes = defaults.patchTypes;
    	      this.products = defaults.products;
    	      this.subCategoryDetails = defaults.subCategoryDetails;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder compatibleProducts(List<GetPlatformConfigurationConfigCategoryDetailCompatibleProduct> compatibleProducts) {
            if (compatibleProducts == null) {
              throw new MissingRequiredPropertyException("GetPlatformConfigurationConfigCategoryDetail", "compatibleProducts");
            }
            this.compatibleProducts = compatibleProducts;
            return this;
        }
        public Builder compatibleProducts(GetPlatformConfigurationConfigCategoryDetailCompatibleProduct... compatibleProducts) {
            return compatibleProducts(List.of(compatibleProducts));
        }
        @CustomType.Setter
        public Builder components(List<String> components) {
            if (components == null) {
              throw new MissingRequiredPropertyException("GetPlatformConfigurationConfigCategoryDetail", "components");
            }
            this.components = components;
            return this;
        }
        public Builder components(String... components) {
            return components(List.of(components));
        }
        @CustomType.Setter
        public Builder configCategory(String configCategory) {
            if (configCategory == null) {
              throw new MissingRequiredPropertyException("GetPlatformConfigurationConfigCategoryDetail", "configCategory");
            }
            this.configCategory = configCategory;
            return this;
        }
        @CustomType.Setter
        public Builder credentials(List<GetPlatformConfigurationConfigCategoryDetailCredential> credentials) {
            if (credentials == null) {
              throw new MissingRequiredPropertyException("GetPlatformConfigurationConfigCategoryDetail", "credentials");
            }
            this.credentials = credentials;
            return this;
        }
        public Builder credentials(GetPlatformConfigurationConfigCategoryDetailCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder instanceId(String instanceId) {
            if (instanceId == null) {
              throw new MissingRequiredPropertyException("GetPlatformConfigurationConfigCategoryDetail", "instanceId");
            }
            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(String instanceName) {
            if (instanceName == null) {
              throw new MissingRequiredPropertyException("GetPlatformConfigurationConfigCategoryDetail", "instanceName");
            }
            this.instanceName = instanceName;
            return this;
        }
        @CustomType.Setter
        public Builder patchTypes(List<GetPlatformConfigurationConfigCategoryDetailPatchType> patchTypes) {
            if (patchTypes == null) {
              throw new MissingRequiredPropertyException("GetPlatformConfigurationConfigCategoryDetail", "patchTypes");
            }
            this.patchTypes = patchTypes;
            return this;
        }
        public Builder patchTypes(GetPlatformConfigurationConfigCategoryDetailPatchType... patchTypes) {
            return patchTypes(List.of(patchTypes));
        }
        @CustomType.Setter
        public Builder products(List<GetPlatformConfigurationConfigCategoryDetailProduct> products) {
            if (products == null) {
              throw new MissingRequiredPropertyException("GetPlatformConfigurationConfigCategoryDetail", "products");
            }
            this.products = products;
            return this;
        }
        public Builder products(GetPlatformConfigurationConfigCategoryDetailProduct... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder subCategoryDetails(List<GetPlatformConfigurationConfigCategoryDetailSubCategoryDetail> subCategoryDetails) {
            if (subCategoryDetails == null) {
              throw new MissingRequiredPropertyException("GetPlatformConfigurationConfigCategoryDetail", "subCategoryDetails");
            }
            this.subCategoryDetails = subCategoryDetails;
            return this;
        }
        public Builder subCategoryDetails(GetPlatformConfigurationConfigCategoryDetailSubCategoryDetail... subCategoryDetails) {
            return subCategoryDetails(List.of(subCategoryDetails));
        }
        @CustomType.Setter
        public Builder versions(List<String> versions) {
            if (versions == null) {
              throw new MissingRequiredPropertyException("GetPlatformConfigurationConfigCategoryDetail", "versions");
            }
            this.versions = versions;
            return this;
        }
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }
        public GetPlatformConfigurationConfigCategoryDetail build() {
            final var _resultValue = new GetPlatformConfigurationConfigCategoryDetail();
            _resultValue.compatibleProducts = compatibleProducts;
            _resultValue.components = components;
            _resultValue.configCategory = configCategory;
            _resultValue.credentials = credentials;
            _resultValue.instanceId = instanceId;
            _resultValue.instanceName = instanceName;
            _resultValue.patchTypes = patchTypes;
            _resultValue.products = products;
            _resultValue.subCategoryDetails = subCategoryDetails;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
