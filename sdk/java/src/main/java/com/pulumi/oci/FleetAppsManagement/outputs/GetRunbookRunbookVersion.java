// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetRunbookRunbookVersionExecutionWorkflowDetail;
import com.pulumi.oci.FleetAppsManagement.outputs.GetRunbookRunbookVersionGroup;
import com.pulumi.oci.FleetAppsManagement.outputs.GetRunbookRunbookVersionRollbackWorkflowDetail;
import com.pulumi.oci.FleetAppsManagement.outputs.GetRunbookRunbookVersionTask;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRunbookRunbookVersion {
    /**
     * @return Execution Workflow details.
     * 
     */
    private List<GetRunbookRunbookVersionExecutionWorkflowDetail> executionWorkflowDetails;
    /**
     * @return The groups of the runbook.
     * 
     */
    private List<GetRunbookRunbookVersionGroup> groups;
    /**
     * @return Is this version the latest?
     * 
     */
    private Boolean isLatest;
    /**
     * @return Rollback Workflow details.
     * 
     */
    private List<GetRunbookRunbookVersionRollbackWorkflowDetail> rollbackWorkflowDetails;
    /**
     * @return A set of tasks to execute in the runbook.
     * 
     */
    private List<GetRunbookRunbookVersionTask> tasks;
    /**
     * @return The version of the runbook.
     * 
     */
    private String version;

    private GetRunbookRunbookVersion() {}
    /**
     * @return Execution Workflow details.
     * 
     */
    public List<GetRunbookRunbookVersionExecutionWorkflowDetail> executionWorkflowDetails() {
        return this.executionWorkflowDetails;
    }
    /**
     * @return The groups of the runbook.
     * 
     */
    public List<GetRunbookRunbookVersionGroup> groups() {
        return this.groups;
    }
    /**
     * @return Is this version the latest?
     * 
     */
    public Boolean isLatest() {
        return this.isLatest;
    }
    /**
     * @return Rollback Workflow details.
     * 
     */
    public List<GetRunbookRunbookVersionRollbackWorkflowDetail> rollbackWorkflowDetails() {
        return this.rollbackWorkflowDetails;
    }
    /**
     * @return A set of tasks to execute in the runbook.
     * 
     */
    public List<GetRunbookRunbookVersionTask> tasks() {
        return this.tasks;
    }
    /**
     * @return The version of the runbook.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRunbookRunbookVersion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRunbookRunbookVersionExecutionWorkflowDetail> executionWorkflowDetails;
        private List<GetRunbookRunbookVersionGroup> groups;
        private Boolean isLatest;
        private List<GetRunbookRunbookVersionRollbackWorkflowDetail> rollbackWorkflowDetails;
        private List<GetRunbookRunbookVersionTask> tasks;
        private String version;
        public Builder() {}
        public Builder(GetRunbookRunbookVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.executionWorkflowDetails = defaults.executionWorkflowDetails;
    	      this.groups = defaults.groups;
    	      this.isLatest = defaults.isLatest;
    	      this.rollbackWorkflowDetails = defaults.rollbackWorkflowDetails;
    	      this.tasks = defaults.tasks;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder executionWorkflowDetails(List<GetRunbookRunbookVersionExecutionWorkflowDetail> executionWorkflowDetails) {
            if (executionWorkflowDetails == null) {
              throw new MissingRequiredPropertyException("GetRunbookRunbookVersion", "executionWorkflowDetails");
            }
            this.executionWorkflowDetails = executionWorkflowDetails;
            return this;
        }
        public Builder executionWorkflowDetails(GetRunbookRunbookVersionExecutionWorkflowDetail... executionWorkflowDetails) {
            return executionWorkflowDetails(List.of(executionWorkflowDetails));
        }
        @CustomType.Setter
        public Builder groups(List<GetRunbookRunbookVersionGroup> groups) {
            if (groups == null) {
              throw new MissingRequiredPropertyException("GetRunbookRunbookVersion", "groups");
            }
            this.groups = groups;
            return this;
        }
        public Builder groups(GetRunbookRunbookVersionGroup... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder isLatest(Boolean isLatest) {
            if (isLatest == null) {
              throw new MissingRequiredPropertyException("GetRunbookRunbookVersion", "isLatest");
            }
            this.isLatest = isLatest;
            return this;
        }
        @CustomType.Setter
        public Builder rollbackWorkflowDetails(List<GetRunbookRunbookVersionRollbackWorkflowDetail> rollbackWorkflowDetails) {
            if (rollbackWorkflowDetails == null) {
              throw new MissingRequiredPropertyException("GetRunbookRunbookVersion", "rollbackWorkflowDetails");
            }
            this.rollbackWorkflowDetails = rollbackWorkflowDetails;
            return this;
        }
        public Builder rollbackWorkflowDetails(GetRunbookRunbookVersionRollbackWorkflowDetail... rollbackWorkflowDetails) {
            return rollbackWorkflowDetails(List.of(rollbackWorkflowDetails));
        }
        @CustomType.Setter
        public Builder tasks(List<GetRunbookRunbookVersionTask> tasks) {
            if (tasks == null) {
              throw new MissingRequiredPropertyException("GetRunbookRunbookVersion", "tasks");
            }
            this.tasks = tasks;
            return this;
        }
        public Builder tasks(GetRunbookRunbookVersionTask... tasks) {
            return tasks(List.of(tasks));
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetRunbookRunbookVersion", "version");
            }
            this.version = version;
            return this;
        }
        public GetRunbookRunbookVersion build() {
            final var _resultValue = new GetRunbookRunbookVersion();
            _resultValue.executionWorkflowDetails = executionWorkflowDetails;
            _resultValue.groups = groups;
            _resultValue.isLatest = isLatest;
            _resultValue.rollbackWorkflowDetails = rollbackWorkflowDetails;
            _resultValue.tasks = tasks;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
