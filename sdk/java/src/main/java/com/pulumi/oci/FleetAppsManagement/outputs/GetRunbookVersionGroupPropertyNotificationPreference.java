// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetRunbookVersionGroupPropertyNotificationPreference {
    /**
     * @return Enables notification on pause.
     * 
     */
    private Boolean shouldNotifyOnPause;
    /**
     * @return Enables or disables notification on Task Failures.
     * 
     */
    private Boolean shouldNotifyOnTaskFailure;
    /**
     * @return Enables or disables notification on Task Success.
     * 
     */
    private Boolean shouldNotifyOnTaskSuccess;

    private GetRunbookVersionGroupPropertyNotificationPreference() {}
    /**
     * @return Enables notification on pause.
     * 
     */
    public Boolean shouldNotifyOnPause() {
        return this.shouldNotifyOnPause;
    }
    /**
     * @return Enables or disables notification on Task Failures.
     * 
     */
    public Boolean shouldNotifyOnTaskFailure() {
        return this.shouldNotifyOnTaskFailure;
    }
    /**
     * @return Enables or disables notification on Task Success.
     * 
     */
    public Boolean shouldNotifyOnTaskSuccess() {
        return this.shouldNotifyOnTaskSuccess;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRunbookVersionGroupPropertyNotificationPreference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean shouldNotifyOnPause;
        private Boolean shouldNotifyOnTaskFailure;
        private Boolean shouldNotifyOnTaskSuccess;
        public Builder() {}
        public Builder(GetRunbookVersionGroupPropertyNotificationPreference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.shouldNotifyOnPause = defaults.shouldNotifyOnPause;
    	      this.shouldNotifyOnTaskFailure = defaults.shouldNotifyOnTaskFailure;
    	      this.shouldNotifyOnTaskSuccess = defaults.shouldNotifyOnTaskSuccess;
        }

        @CustomType.Setter
        public Builder shouldNotifyOnPause(Boolean shouldNotifyOnPause) {
            if (shouldNotifyOnPause == null) {
              throw new MissingRequiredPropertyException("GetRunbookVersionGroupPropertyNotificationPreference", "shouldNotifyOnPause");
            }
            this.shouldNotifyOnPause = shouldNotifyOnPause;
            return this;
        }
        @CustomType.Setter
        public Builder shouldNotifyOnTaskFailure(Boolean shouldNotifyOnTaskFailure) {
            if (shouldNotifyOnTaskFailure == null) {
              throw new MissingRequiredPropertyException("GetRunbookVersionGroupPropertyNotificationPreference", "shouldNotifyOnTaskFailure");
            }
            this.shouldNotifyOnTaskFailure = shouldNotifyOnTaskFailure;
            return this;
        }
        @CustomType.Setter
        public Builder shouldNotifyOnTaskSuccess(Boolean shouldNotifyOnTaskSuccess) {
            if (shouldNotifyOnTaskSuccess == null) {
              throw new MissingRequiredPropertyException("GetRunbookVersionGroupPropertyNotificationPreference", "shouldNotifyOnTaskSuccess");
            }
            this.shouldNotifyOnTaskSuccess = shouldNotifyOnTaskSuccess;
            return this;
        }
        public GetRunbookVersionGroupPropertyNotificationPreference build() {
            final var _resultValue = new GetRunbookVersionGroupPropertyNotificationPreference();
            _resultValue.shouldNotifyOnPause = shouldNotifyOnPause;
            _resultValue.shouldNotifyOnTaskFailure = shouldNotifyOnTaskFailure;
            _resultValue.shouldNotifyOnTaskSuccess = shouldNotifyOnTaskSuccess;
            return _resultValue;
        }
    }
}
