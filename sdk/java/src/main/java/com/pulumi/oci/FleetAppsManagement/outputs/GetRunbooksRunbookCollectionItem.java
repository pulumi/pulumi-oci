// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetRunbooksRunbookCollectionItemRunbookVersion;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRunbooksRunbookCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The description of the argument.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Estimated time to successfully complete the runbook execution.
     * 
     */
    private String estimatedTime;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Does this runbook has draft versions?
     * 
     */
    private Boolean hasDraftVersion;
    /**
     * @return Unique identifier or OCID for listing a single Runbook by id. Either compartmentId or id must be provided.
     * 
     */
    private String id;
    /**
     * @return Is the runbook default? Sets this runbook as the default for the chosen product/product stack for the specified lifecycle operation.
     * 
     */
    private Boolean isDefault;
    /**
     * @return Does this runbook need SUDO access to execute?
     * 
     */
    private Boolean isSudoAccessNeeded;
    /**
     * @return Latest runbook version
     * 
     */
    private String latestVersion;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return A filter to return runbooks whose operation matches the given lifecycle operation.
     * 
     */
    private String operation;
    /**
     * @return The OS for the task.
     * 
     */
    private String osType;
    /**
     * @return A filter to return runbooks whose platform matches the given platform.
     * 
     */
    private String platform;
    /**
     * @return Associated region
     * 
     */
    private String resourceRegion;
    /**
     * @return Version for the runbook.
     * 
     */
    private List<GetRunbooksRunbookCollectionItemRunbookVersion> runbookVersions;
    /**
     * @return A filter to return only resources whose lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;
    /**
     * @return A filter to return runbooks whose type matches the given type.
     * 
     */
    private String type;

    private GetRunbooksRunbookCollectionItem() {}
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the argument.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Estimated time to successfully complete the runbook execution.
     * 
     */
    public String estimatedTime() {
        return this.estimatedTime;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Does this runbook has draft versions?
     * 
     */
    public Boolean hasDraftVersion() {
        return this.hasDraftVersion;
    }
    /**
     * @return Unique identifier or OCID for listing a single Runbook by id. Either compartmentId or id must be provided.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Is the runbook default? Sets this runbook as the default for the chosen product/product stack for the specified lifecycle operation.
     * 
     */
    public Boolean isDefault() {
        return this.isDefault;
    }
    /**
     * @return Does this runbook need SUDO access to execute?
     * 
     */
    public Boolean isSudoAccessNeeded() {
        return this.isSudoAccessNeeded;
    }
    /**
     * @return Latest runbook version
     * 
     */
    public String latestVersion() {
        return this.latestVersion;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return A filter to return runbooks whose operation matches the given lifecycle operation.
     * 
     */
    public String operation() {
        return this.operation;
    }
    /**
     * @return The OS for the task.
     * 
     */
    public String osType() {
        return this.osType;
    }
    /**
     * @return A filter to return runbooks whose platform matches the given platform.
     * 
     */
    public String platform() {
        return this.platform;
    }
    /**
     * @return Associated region
     * 
     */
    public String resourceRegion() {
        return this.resourceRegion;
    }
    /**
     * @return Version for the runbook.
     * 
     */
    public List<GetRunbooksRunbookCollectionItemRunbookVersion> runbookVersions() {
        return this.runbookVersions;
    }
    /**
     * @return A filter to return only resources whose lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return A filter to return runbooks whose type matches the given type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRunbooksRunbookCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private String estimatedTime;
        private Map<String,String> freeformTags;
        private Boolean hasDraftVersion;
        private String id;
        private Boolean isDefault;
        private Boolean isSudoAccessNeeded;
        private String latestVersion;
        private String lifecycleDetails;
        private String operation;
        private String osType;
        private String platform;
        private String resourceRegion;
        private List<GetRunbooksRunbookCollectionItemRunbookVersion> runbookVersions;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String type;
        public Builder() {}
        public Builder(GetRunbooksRunbookCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.estimatedTime = defaults.estimatedTime;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hasDraftVersion = defaults.hasDraftVersion;
    	      this.id = defaults.id;
    	      this.isDefault = defaults.isDefault;
    	      this.isSudoAccessNeeded = defaults.isSudoAccessNeeded;
    	      this.latestVersion = defaults.latestVersion;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.operation = defaults.operation;
    	      this.osType = defaults.osType;
    	      this.platform = defaults.platform;
    	      this.resourceRegion = defaults.resourceRegion;
    	      this.runbookVersions = defaults.runbookVersions;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder estimatedTime(String estimatedTime) {
            if (estimatedTime == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "estimatedTime");
            }
            this.estimatedTime = estimatedTime;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hasDraftVersion(Boolean hasDraftVersion) {
            if (hasDraftVersion == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "hasDraftVersion");
            }
            this.hasDraftVersion = hasDraftVersion;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDefault(Boolean isDefault) {
            if (isDefault == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "isDefault");
            }
            this.isDefault = isDefault;
            return this;
        }
        @CustomType.Setter
        public Builder isSudoAccessNeeded(Boolean isSudoAccessNeeded) {
            if (isSudoAccessNeeded == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "isSudoAccessNeeded");
            }
            this.isSudoAccessNeeded = isSudoAccessNeeded;
            return this;
        }
        @CustomType.Setter
        public Builder latestVersion(String latestVersion) {
            if (latestVersion == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "latestVersion");
            }
            this.latestVersion = latestVersion;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder operation(String operation) {
            if (operation == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "operation");
            }
            this.operation = operation;
            return this;
        }
        @CustomType.Setter
        public Builder osType(String osType) {
            if (osType == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "osType");
            }
            this.osType = osType;
            return this;
        }
        @CustomType.Setter
        public Builder platform(String platform) {
            if (platform == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "platform");
            }
            this.platform = platform;
            return this;
        }
        @CustomType.Setter
        public Builder resourceRegion(String resourceRegion) {
            if (resourceRegion == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "resourceRegion");
            }
            this.resourceRegion = resourceRegion;
            return this;
        }
        @CustomType.Setter
        public Builder runbookVersions(List<GetRunbooksRunbookCollectionItemRunbookVersion> runbookVersions) {
            if (runbookVersions == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "runbookVersions");
            }
            this.runbookVersions = runbookVersions;
            return this;
        }
        public Builder runbookVersions(GetRunbooksRunbookCollectionItemRunbookVersion... runbookVersions) {
            return runbookVersions(List.of(runbookVersions));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItem", "type");
            }
            this.type = type;
            return this;
        }
        public GetRunbooksRunbookCollectionItem build() {
            final var _resultValue = new GetRunbooksRunbookCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.estimatedTime = estimatedTime;
            _resultValue.freeformTags = freeformTags;
            _resultValue.hasDraftVersion = hasDraftVersion;
            _resultValue.id = id;
            _resultValue.isDefault = isDefault;
            _resultValue.isSudoAccessNeeded = isSudoAccessNeeded;
            _resultValue.latestVersion = latestVersion;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.operation = operation;
            _resultValue.osType = osType;
            _resultValue.platform = platform;
            _resultValue.resourceRegion = resourceRegion;
            _resultValue.runbookVersions = runbookVersions;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
