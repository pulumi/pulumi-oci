// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetRunbooksRunbookCollectionItemAssociationExecutionWorkflowDetail;
import com.pulumi.oci.FleetAppsManagement.outputs.GetRunbooksRunbookCollectionItemAssociationGroup;
import com.pulumi.oci.FleetAppsManagement.outputs.GetRunbooksRunbookCollectionItemAssociationTask;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRunbooksRunbookCollectionItemAssociation {
    /**
     * @return Execution Workflow.
     * 
     */
    private List<GetRunbooksRunbookCollectionItemAssociationExecutionWorkflowDetail> executionWorkflowDetails;
    /**
     * @return The groups of the runbook
     * 
     */
    private List<GetRunbooksRunbookCollectionItemAssociationGroup> groups;
    /**
     * @return A set of tasks to execute in the runbook
     * 
     */
    private List<GetRunbooksRunbookCollectionItemAssociationTask> tasks;
    /**
     * @return The version of the runbook.
     * 
     */
    private String version;

    private GetRunbooksRunbookCollectionItemAssociation() {}
    /**
     * @return Execution Workflow.
     * 
     */
    public List<GetRunbooksRunbookCollectionItemAssociationExecutionWorkflowDetail> executionWorkflowDetails() {
        return this.executionWorkflowDetails;
    }
    /**
     * @return The groups of the runbook
     * 
     */
    public List<GetRunbooksRunbookCollectionItemAssociationGroup> groups() {
        return this.groups;
    }
    /**
     * @return A set of tasks to execute in the runbook
     * 
     */
    public List<GetRunbooksRunbookCollectionItemAssociationTask> tasks() {
        return this.tasks;
    }
    /**
     * @return The version of the runbook.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRunbooksRunbookCollectionItemAssociation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetRunbooksRunbookCollectionItemAssociationExecutionWorkflowDetail> executionWorkflowDetails;
        private List<GetRunbooksRunbookCollectionItemAssociationGroup> groups;
        private List<GetRunbooksRunbookCollectionItemAssociationTask> tasks;
        private String version;
        public Builder() {}
        public Builder(GetRunbooksRunbookCollectionItemAssociation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.executionWorkflowDetails = defaults.executionWorkflowDetails;
    	      this.groups = defaults.groups;
    	      this.tasks = defaults.tasks;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder executionWorkflowDetails(List<GetRunbooksRunbookCollectionItemAssociationExecutionWorkflowDetail> executionWorkflowDetails) {
            if (executionWorkflowDetails == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItemAssociation", "executionWorkflowDetails");
            }
            this.executionWorkflowDetails = executionWorkflowDetails;
            return this;
        }
        public Builder executionWorkflowDetails(GetRunbooksRunbookCollectionItemAssociationExecutionWorkflowDetail... executionWorkflowDetails) {
            return executionWorkflowDetails(List.of(executionWorkflowDetails));
        }
        @CustomType.Setter
        public Builder groups(List<GetRunbooksRunbookCollectionItemAssociationGroup> groups) {
            if (groups == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItemAssociation", "groups");
            }
            this.groups = groups;
            return this;
        }
        public Builder groups(GetRunbooksRunbookCollectionItemAssociationGroup... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder tasks(List<GetRunbooksRunbookCollectionItemAssociationTask> tasks) {
            if (tasks == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItemAssociation", "tasks");
            }
            this.tasks = tasks;
            return this;
        }
        public Builder tasks(GetRunbooksRunbookCollectionItemAssociationTask... tasks) {
            return tasks(List.of(tasks));
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetRunbooksRunbookCollectionItemAssociation", "version");
            }
            this.version = version;
            return this;
        }
        public GetRunbooksRunbookCollectionItemAssociation build() {
            final var _resultValue = new GetRunbooksRunbookCollectionItemAssociation();
            _resultValue.executionWorkflowDetails = executionWorkflowDetails;
            _resultValue.groups = groups;
            _resultValue.tasks = tasks;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
