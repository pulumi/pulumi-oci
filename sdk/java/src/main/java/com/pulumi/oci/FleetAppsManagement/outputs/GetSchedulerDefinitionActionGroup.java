// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSchedulerDefinitionActionGroup {
    /**
     * @return Application Type associated. Only applicable if type is ENVIRONMENT.
     * 
     */
    private String applicationType;
    /**
     * @return LifeCycle Operation
     * 
     */
    private String lifecycleOperation;
    /**
     * @return Product associated. Only applicable if type is PRODUCT.
     * 
     */
    private String product;
    /**
     * @return Provide the ID of the resource; Ex- fleetId.
     * 
     */
    private String resourceId;
    /**
     * @return ID of the runbook
     * 
     */
    private String runbookId;
    /**
     * @return Provide subjects that need to be considered for the schedule.
     * 
     */
    private List<String> subjects;
    /**
     * @return Provide the target if schedule is created against the target
     * 
     */
    private String targetId;
    /**
     * @return Schedule Type
     * 
     */
    private String type;

    private GetSchedulerDefinitionActionGroup() {}
    /**
     * @return Application Type associated. Only applicable if type is ENVIRONMENT.
     * 
     */
    public String applicationType() {
        return this.applicationType;
    }
    /**
     * @return LifeCycle Operation
     * 
     */
    public String lifecycleOperation() {
        return this.lifecycleOperation;
    }
    /**
     * @return Product associated. Only applicable if type is PRODUCT.
     * 
     */
    public String product() {
        return this.product;
    }
    /**
     * @return Provide the ID of the resource; Ex- fleetId.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return ID of the runbook
     * 
     */
    public String runbookId() {
        return this.runbookId;
    }
    /**
     * @return Provide subjects that need to be considered for the schedule.
     * 
     */
    public List<String> subjects() {
        return this.subjects;
    }
    /**
     * @return Provide the target if schedule is created against the target
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return Schedule Type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulerDefinitionActionGroup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationType;
        private String lifecycleOperation;
        private String product;
        private String resourceId;
        private String runbookId;
        private List<String> subjects;
        private String targetId;
        private String type;
        public Builder() {}
        public Builder(GetSchedulerDefinitionActionGroup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationType = defaults.applicationType;
    	      this.lifecycleOperation = defaults.lifecycleOperation;
    	      this.product = defaults.product;
    	      this.resourceId = defaults.resourceId;
    	      this.runbookId = defaults.runbookId;
    	      this.subjects = defaults.subjects;
    	      this.targetId = defaults.targetId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder applicationType(String applicationType) {
            if (applicationType == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionActionGroup", "applicationType");
            }
            this.applicationType = applicationType;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleOperation(String lifecycleOperation) {
            if (lifecycleOperation == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionActionGroup", "lifecycleOperation");
            }
            this.lifecycleOperation = lifecycleOperation;
            return this;
        }
        @CustomType.Setter
        public Builder product(String product) {
            if (product == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionActionGroup", "product");
            }
            this.product = product;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionActionGroup", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder runbookId(String runbookId) {
            if (runbookId == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionActionGroup", "runbookId");
            }
            this.runbookId = runbookId;
            return this;
        }
        @CustomType.Setter
        public Builder subjects(List<String> subjects) {
            if (subjects == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionActionGroup", "subjects");
            }
            this.subjects = subjects;
            return this;
        }
        public Builder subjects(String... subjects) {
            return subjects(List.of(subjects));
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionActionGroup", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionActionGroup", "type");
            }
            this.type = type;
            return this;
        }
        public GetSchedulerDefinitionActionGroup build() {
            final var _resultValue = new GetSchedulerDefinitionActionGroup();
            _resultValue.applicationType = applicationType;
            _resultValue.lifecycleOperation = lifecycleOperation;
            _resultValue.product = product;
            _resultValue.resourceId = resourceId;
            _resultValue.runbookId = runbookId;
            _resultValue.subjects = subjects;
            _resultValue.targetId = targetId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
