// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetSchedulerDefinitionActionGroup;
import com.pulumi.oci.FleetAppsManagement.outputs.GetSchedulerDefinitionRunBook;
import com.pulumi.oci.FleetAppsManagement.outputs.GetSchedulerDefinitionSchedule;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSchedulerDefinitionResult {
    /**
     * @return All ActionGroup Types that are part of the schedule.
     * 
     */
    private List<String> actionGroupTypes;
    /**
     * @return Action Groups associated with the Schedule.
     * 
     */
    private List<GetSchedulerDefinitionActionGroup> actionGroups;
    /**
     * @return Activity Initiation Cut Off.
     * 
     */
    private Integer activityInitiationCutOff;
    /**
     * @return All application types that are part of the schedule for ENVIRONMENT ActionGroup Type.
     * 
     */
    private List<String> applicationTypes;
    /**
     * @return Tenancy OCID
     * 
     */
    private String compartmentId;
    /**
     * @return Count of Action Groups affected by the Schedule.
     * 
     */
    private Integer countOfAffectedActionGroups;
    /**
     * @return Count of Resources affected by the Schedule.
     * 
     */
    private Integer countOfAffectedResources;
    /**
     * @return Count of Targets affected by the Schedule.
     * 
     */
    private Integer countOfAffectedTargets;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    private String description;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The ID of the Runbook
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return All LifeCycle Operations that are part of the schedule.
     * 
     */
    private List<String> lifecycleOperations;
    /**
     * @return All products that are part of the schedule for PRODUCT ActionGroup Type.
     * 
     */
    private List<String> products;
    /**
     * @return Associated region
     * 
     */
    private String resourceRegion;
    /**
     * @return Runbooks.
     * 
     */
    private List<GetSchedulerDefinitionRunBook> runBooks;
    private String schedulerDefinitionId;
    /**
     * @return Schedule Information.
     * 
     */
    private List<GetSchedulerDefinitionSchedule> schedules;
    /**
     * @return The current state of the SchedulerDefinition.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The scheduled date for the next run of the Job.
     * 
     */
    private String timeOfNextRun;
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetSchedulerDefinitionResult() {}
    /**
     * @return All ActionGroup Types that are part of the schedule.
     * 
     */
    public List<String> actionGroupTypes() {
        return this.actionGroupTypes;
    }
    /**
     * @return Action Groups associated with the Schedule.
     * 
     */
    public List<GetSchedulerDefinitionActionGroup> actionGroups() {
        return this.actionGroups;
    }
    /**
     * @return Activity Initiation Cut Off.
     * 
     */
    public Integer activityInitiationCutOff() {
        return this.activityInitiationCutOff;
    }
    /**
     * @return All application types that are part of the schedule for ENVIRONMENT ActionGroup Type.
     * 
     */
    public List<String> applicationTypes() {
        return this.applicationTypes;
    }
    /**
     * @return Tenancy OCID
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Count of Action Groups affected by the Schedule.
     * 
     */
    public Integer countOfAffectedActionGroups() {
        return this.countOfAffectedActionGroups;
    }
    /**
     * @return Count of Resources affected by the Schedule.
     * 
     */
    public Integer countOfAffectedResources() {
        return this.countOfAffectedResources;
    }
    /**
     * @return Count of Targets affected by the Schedule.
     * 
     */
    public Integer countOfAffectedTargets() {
        return this.countOfAffectedTargets;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The ID of the Runbook
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return All LifeCycle Operations that are part of the schedule.
     * 
     */
    public List<String> lifecycleOperations() {
        return this.lifecycleOperations;
    }
    /**
     * @return All products that are part of the schedule for PRODUCT ActionGroup Type.
     * 
     */
    public List<String> products() {
        return this.products;
    }
    /**
     * @return Associated region
     * 
     */
    public String resourceRegion() {
        return this.resourceRegion;
    }
    /**
     * @return Runbooks.
     * 
     */
    public List<GetSchedulerDefinitionRunBook> runBooks() {
        return this.runBooks;
    }
    public String schedulerDefinitionId() {
        return this.schedulerDefinitionId;
    }
    /**
     * @return Schedule Information.
     * 
     */
    public List<GetSchedulerDefinitionSchedule> schedules() {
        return this.schedules;
    }
    /**
     * @return The current state of the SchedulerDefinition.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The scheduled date for the next run of the Job.
     * 
     */
    public String timeOfNextRun() {
        return this.timeOfNextRun;
    }
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulerDefinitionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> actionGroupTypes;
        private List<GetSchedulerDefinitionActionGroup> actionGroups;
        private Integer activityInitiationCutOff;
        private List<String> applicationTypes;
        private String compartmentId;
        private Integer countOfAffectedActionGroups;
        private Integer countOfAffectedResources;
        private Integer countOfAffectedTargets;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private List<String> lifecycleOperations;
        private List<String> products;
        private String resourceRegion;
        private List<GetSchedulerDefinitionRunBook> runBooks;
        private String schedulerDefinitionId;
        private List<GetSchedulerDefinitionSchedule> schedules;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeOfNextRun;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetSchedulerDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionGroupTypes = defaults.actionGroupTypes;
    	      this.actionGroups = defaults.actionGroups;
    	      this.activityInitiationCutOff = defaults.activityInitiationCutOff;
    	      this.applicationTypes = defaults.applicationTypes;
    	      this.compartmentId = defaults.compartmentId;
    	      this.countOfAffectedActionGroups = defaults.countOfAffectedActionGroups;
    	      this.countOfAffectedResources = defaults.countOfAffectedResources;
    	      this.countOfAffectedTargets = defaults.countOfAffectedTargets;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lifecycleOperations = defaults.lifecycleOperations;
    	      this.products = defaults.products;
    	      this.resourceRegion = defaults.resourceRegion;
    	      this.runBooks = defaults.runBooks;
    	      this.schedulerDefinitionId = defaults.schedulerDefinitionId;
    	      this.schedules = defaults.schedules;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfNextRun = defaults.timeOfNextRun;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder actionGroupTypes(List<String> actionGroupTypes) {
            if (actionGroupTypes == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "actionGroupTypes");
            }
            this.actionGroupTypes = actionGroupTypes;
            return this;
        }
        public Builder actionGroupTypes(String... actionGroupTypes) {
            return actionGroupTypes(List.of(actionGroupTypes));
        }
        @CustomType.Setter
        public Builder actionGroups(List<GetSchedulerDefinitionActionGroup> actionGroups) {
            if (actionGroups == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "actionGroups");
            }
            this.actionGroups = actionGroups;
            return this;
        }
        public Builder actionGroups(GetSchedulerDefinitionActionGroup... actionGroups) {
            return actionGroups(List.of(actionGroups));
        }
        @CustomType.Setter
        public Builder activityInitiationCutOff(Integer activityInitiationCutOff) {
            if (activityInitiationCutOff == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "activityInitiationCutOff");
            }
            this.activityInitiationCutOff = activityInitiationCutOff;
            return this;
        }
        @CustomType.Setter
        public Builder applicationTypes(List<String> applicationTypes) {
            if (applicationTypes == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "applicationTypes");
            }
            this.applicationTypes = applicationTypes;
            return this;
        }
        public Builder applicationTypes(String... applicationTypes) {
            return applicationTypes(List.of(applicationTypes));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder countOfAffectedActionGroups(Integer countOfAffectedActionGroups) {
            if (countOfAffectedActionGroups == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "countOfAffectedActionGroups");
            }
            this.countOfAffectedActionGroups = countOfAffectedActionGroups;
            return this;
        }
        @CustomType.Setter
        public Builder countOfAffectedResources(Integer countOfAffectedResources) {
            if (countOfAffectedResources == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "countOfAffectedResources");
            }
            this.countOfAffectedResources = countOfAffectedResources;
            return this;
        }
        @CustomType.Setter
        public Builder countOfAffectedTargets(Integer countOfAffectedTargets) {
            if (countOfAffectedTargets == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "countOfAffectedTargets");
            }
            this.countOfAffectedTargets = countOfAffectedTargets;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleOperations(List<String> lifecycleOperations) {
            if (lifecycleOperations == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "lifecycleOperations");
            }
            this.lifecycleOperations = lifecycleOperations;
            return this;
        }
        public Builder lifecycleOperations(String... lifecycleOperations) {
            return lifecycleOperations(List.of(lifecycleOperations));
        }
        @CustomType.Setter
        public Builder products(List<String> products) {
            if (products == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "products");
            }
            this.products = products;
            return this;
        }
        public Builder products(String... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder resourceRegion(String resourceRegion) {
            if (resourceRegion == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "resourceRegion");
            }
            this.resourceRegion = resourceRegion;
            return this;
        }
        @CustomType.Setter
        public Builder runBooks(List<GetSchedulerDefinitionRunBook> runBooks) {
            if (runBooks == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "runBooks");
            }
            this.runBooks = runBooks;
            return this;
        }
        public Builder runBooks(GetSchedulerDefinitionRunBook... runBooks) {
            return runBooks(List.of(runBooks));
        }
        @CustomType.Setter
        public Builder schedulerDefinitionId(String schedulerDefinitionId) {
            if (schedulerDefinitionId == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "schedulerDefinitionId");
            }
            this.schedulerDefinitionId = schedulerDefinitionId;
            return this;
        }
        @CustomType.Setter
        public Builder schedules(List<GetSchedulerDefinitionSchedule> schedules) {
            if (schedules == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "schedules");
            }
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(GetSchedulerDefinitionSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfNextRun(String timeOfNextRun) {
            if (timeOfNextRun == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "timeOfNextRun");
            }
            this.timeOfNextRun = timeOfNextRun;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetSchedulerDefinitionResult build() {
            final var _resultValue = new GetSchedulerDefinitionResult();
            _resultValue.actionGroupTypes = actionGroupTypes;
            _resultValue.actionGroups = actionGroups;
            _resultValue.activityInitiationCutOff = activityInitiationCutOff;
            _resultValue.applicationTypes = applicationTypes;
            _resultValue.compartmentId = compartmentId;
            _resultValue.countOfAffectedActionGroups = countOfAffectedActionGroups;
            _resultValue.countOfAffectedResources = countOfAffectedResources;
            _resultValue.countOfAffectedTargets = countOfAffectedTargets;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.lifecycleOperations = lifecycleOperations;
            _resultValue.products = products;
            _resultValue.resourceRegion = resourceRegion;
            _resultValue.runBooks = runBooks;
            _resultValue.schedulerDefinitionId = schedulerDefinitionId;
            _resultValue.schedules = schedules;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeOfNextRun = timeOfNextRun;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
