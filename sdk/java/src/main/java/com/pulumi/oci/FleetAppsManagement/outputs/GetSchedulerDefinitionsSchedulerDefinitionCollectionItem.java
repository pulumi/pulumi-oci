// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetSchedulerDefinitionsSchedulerDefinitionCollectionItemActionGroup;
import com.pulumi.oci.FleetAppsManagement.outputs.GetSchedulerDefinitionsSchedulerDefinitionCollectionItemRunBook;
import com.pulumi.oci.FleetAppsManagement.outputs.GetSchedulerDefinitionsSchedulerDefinitionCollectionItemSchedule;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSchedulerDefinitionsSchedulerDefinitionCollectionItem {
    /**
     * @return Action Groups associated with the Schedule.
     * 
     */
    private List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemActionGroup> actionGroups;
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    private String compartmentId;
    /**
     * @return Count of Action Groups affected by the Schedule.
     * 
     */
    private Integer countOfAffectedActionGroups;
    /**
     * @return Count of Resources affected by the Schedule.
     * 
     */
    private Integer countOfAffectedResources;
    /**
     * @return Count of Targets affected by the Schedule.
     * 
     */
    private Integer countOfAffectedTargets;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Unique identifier or OCID for listing a single Schedule Definition by id. Either compartmentId or id must be provided.
     * 
     */
    private String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return All LifeCycle Operations that are part of the schedule.
     * 
     */
    private List<String> lifecycleOperations;
    /**
     * @return All products that are part of the schedule for PRODUCT ActionGroup Type.
     * 
     */
    private List<String> products;
    /**
     * @return Associated region
     * 
     */
    private String resourceRegion;
    /**
     * @return Runbooks.
     * 
     */
    private List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemRunBook> runBooks;
    /**
     * @return Schedule Information.
     * 
     */
    private List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemSchedule> schedules;
    /**
     * @return A filter to return only scheduleDefinitions whose lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The scheduled date for the next run of the Job.
     * 
     */
    private String timeOfNextRun;
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetSchedulerDefinitionsSchedulerDefinitionCollectionItem() {}
    /**
     * @return Action Groups associated with the Schedule.
     * 
     */
    public List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemActionGroup> actionGroups() {
        return this.actionGroups;
    }
    /**
     * @return The ID of the compartment in which to list resources. Empty only if the resource OCID query param is not specified.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Count of Action Groups affected by the Schedule.
     * 
     */
    public Integer countOfAffectedActionGroups() {
        return this.countOfAffectedActionGroups;
    }
    /**
     * @return Count of Resources affected by the Schedule.
     * 
     */
    public Integer countOfAffectedResources() {
        return this.countOfAffectedResources;
    }
    /**
     * @return Count of Targets affected by the Schedule.
     * 
     */
    public Integer countOfAffectedTargets() {
        return this.countOfAffectedTargets;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly description. To provide some insight about the resource. Avoid entering confidential information.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier or OCID for listing a single Schedule Definition by id. Either compartmentId or id must be provided.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return All LifeCycle Operations that are part of the schedule.
     * 
     */
    public List<String> lifecycleOperations() {
        return this.lifecycleOperations;
    }
    /**
     * @return All products that are part of the schedule for PRODUCT ActionGroup Type.
     * 
     */
    public List<String> products() {
        return this.products;
    }
    /**
     * @return Associated region
     * 
     */
    public String resourceRegion() {
        return this.resourceRegion;
    }
    /**
     * @return Runbooks.
     * 
     */
    public List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemRunBook> runBooks() {
        return this.runBooks;
    }
    /**
     * @return Schedule Information.
     * 
     */
    public List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemSchedule> schedules() {
        return this.schedules;
    }
    /**
     * @return A filter to return only scheduleDefinitions whose lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time this resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The scheduled date for the next run of the Job.
     * 
     */
    public String timeOfNextRun() {
        return this.timeOfNextRun;
    }
    /**
     * @return The time this resource was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulerDefinitionsSchedulerDefinitionCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemActionGroup> actionGroups;
        private String compartmentId;
        private Integer countOfAffectedActionGroups;
        private Integer countOfAffectedResources;
        private Integer countOfAffectedTargets;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleDetails;
        private List<String> lifecycleOperations;
        private List<String> products;
        private String resourceRegion;
        private List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemRunBook> runBooks;
        private List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemSchedule> schedules;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeOfNextRun;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetSchedulerDefinitionsSchedulerDefinitionCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionGroups = defaults.actionGroups;
    	      this.compartmentId = defaults.compartmentId;
    	      this.countOfAffectedActionGroups = defaults.countOfAffectedActionGroups;
    	      this.countOfAffectedResources = defaults.countOfAffectedResources;
    	      this.countOfAffectedTargets = defaults.countOfAffectedTargets;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lifecycleOperations = defaults.lifecycleOperations;
    	      this.products = defaults.products;
    	      this.resourceRegion = defaults.resourceRegion;
    	      this.runBooks = defaults.runBooks;
    	      this.schedules = defaults.schedules;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfNextRun = defaults.timeOfNextRun;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder actionGroups(List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemActionGroup> actionGroups) {
            if (actionGroups == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "actionGroups");
            }
            this.actionGroups = actionGroups;
            return this;
        }
        public Builder actionGroups(GetSchedulerDefinitionsSchedulerDefinitionCollectionItemActionGroup... actionGroups) {
            return actionGroups(List.of(actionGroups));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder countOfAffectedActionGroups(Integer countOfAffectedActionGroups) {
            if (countOfAffectedActionGroups == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "countOfAffectedActionGroups");
            }
            this.countOfAffectedActionGroups = countOfAffectedActionGroups;
            return this;
        }
        @CustomType.Setter
        public Builder countOfAffectedResources(Integer countOfAffectedResources) {
            if (countOfAffectedResources == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "countOfAffectedResources");
            }
            this.countOfAffectedResources = countOfAffectedResources;
            return this;
        }
        @CustomType.Setter
        public Builder countOfAffectedTargets(Integer countOfAffectedTargets) {
            if (countOfAffectedTargets == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "countOfAffectedTargets");
            }
            this.countOfAffectedTargets = countOfAffectedTargets;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleOperations(List<String> lifecycleOperations) {
            if (lifecycleOperations == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "lifecycleOperations");
            }
            this.lifecycleOperations = lifecycleOperations;
            return this;
        }
        public Builder lifecycleOperations(String... lifecycleOperations) {
            return lifecycleOperations(List.of(lifecycleOperations));
        }
        @CustomType.Setter
        public Builder products(List<String> products) {
            if (products == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "products");
            }
            this.products = products;
            return this;
        }
        public Builder products(String... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder resourceRegion(String resourceRegion) {
            if (resourceRegion == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "resourceRegion");
            }
            this.resourceRegion = resourceRegion;
            return this;
        }
        @CustomType.Setter
        public Builder runBooks(List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemRunBook> runBooks) {
            if (runBooks == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "runBooks");
            }
            this.runBooks = runBooks;
            return this;
        }
        public Builder runBooks(GetSchedulerDefinitionsSchedulerDefinitionCollectionItemRunBook... runBooks) {
            return runBooks(List.of(runBooks));
        }
        @CustomType.Setter
        public Builder schedules(List<GetSchedulerDefinitionsSchedulerDefinitionCollectionItemSchedule> schedules) {
            if (schedules == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "schedules");
            }
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(GetSchedulerDefinitionsSchedulerDefinitionCollectionItemSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfNextRun(String timeOfNextRun) {
            if (timeOfNextRun == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "timeOfNextRun");
            }
            this.timeOfNextRun = timeOfNextRun;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetSchedulerDefinitionsSchedulerDefinitionCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetSchedulerDefinitionsSchedulerDefinitionCollectionItem build() {
            final var _resultValue = new GetSchedulerDefinitionsSchedulerDefinitionCollectionItem();
            _resultValue.actionGroups = actionGroups;
            _resultValue.compartmentId = compartmentId;
            _resultValue.countOfAffectedActionGroups = countOfAffectedActionGroups;
            _resultValue.countOfAffectedResources = countOfAffectedResources;
            _resultValue.countOfAffectedTargets = countOfAffectedTargets;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.lifecycleOperations = lifecycleOperations;
            _resultValue.products = products;
            _resultValue.resourceRegion = resourceRegion;
            _resultValue.runBooks = runBooks;
            _resultValue.schedules = schedules;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeOfNextRun = timeOfNextRun;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
