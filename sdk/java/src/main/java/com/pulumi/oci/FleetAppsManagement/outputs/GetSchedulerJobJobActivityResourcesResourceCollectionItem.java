// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetSchedulerJobJobActivityResourcesResourceCollectionItemTarget;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSchedulerJobJobActivityResourcesResourceCollectionItem {
    /**
     * @return Description of the Execution status. If there are any errors, this can also include a short error message.
     * 
     */
    private String description;
    /**
     * @return Resource Display Name.
     * 
     */
    private String resourceDisplayName;
    /**
     * @return Resource Identifier associated with the Work Request.
     * 
     */
    private String resourceId;
    /**
     * @return Task Order Sequence
     * 
     */
    private String sequence;
    /**
     * @return Status of the Job at target Level.
     * 
     */
    private String status;
    /**
     * @return Targets associated with the resource.
     * 
     */
    private List<GetSchedulerJobJobActivityResourcesResourceCollectionItemTarget> targets;
    /**
     * @return The time the task ended for the resource. An RFC3339 formatted datetime string
     * 
     */
    private String timeEnded;
    /**
     * @return The time the task started for the resource. An RFC3339 formatted datetime string
     * 
     */
    private String timeStarted;

    private GetSchedulerJobJobActivityResourcesResourceCollectionItem() {}
    /**
     * @return Description of the Execution status. If there are any errors, this can also include a short error message.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Resource Display Name.
     * 
     */
    public String resourceDisplayName() {
        return this.resourceDisplayName;
    }
    /**
     * @return Resource Identifier associated with the Work Request.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return Task Order Sequence
     * 
     */
    public String sequence() {
        return this.sequence;
    }
    /**
     * @return Status of the Job at target Level.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Targets associated with the resource.
     * 
     */
    public List<GetSchedulerJobJobActivityResourcesResourceCollectionItemTarget> targets() {
        return this.targets;
    }
    /**
     * @return The time the task ended for the resource. An RFC3339 formatted datetime string
     * 
     */
    public String timeEnded() {
        return this.timeEnded;
    }
    /**
     * @return The time the task started for the resource. An RFC3339 formatted datetime string
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSchedulerJobJobActivityResourcesResourceCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String resourceDisplayName;
        private String resourceId;
        private String sequence;
        private String status;
        private List<GetSchedulerJobJobActivityResourcesResourceCollectionItemTarget> targets;
        private String timeEnded;
        private String timeStarted;
        public Builder() {}
        public Builder(GetSchedulerJobJobActivityResourcesResourceCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.resourceDisplayName = defaults.resourceDisplayName;
    	      this.resourceId = defaults.resourceId;
    	      this.sequence = defaults.sequence;
    	      this.status = defaults.status;
    	      this.targets = defaults.targets;
    	      this.timeEnded = defaults.timeEnded;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSchedulerJobJobActivityResourcesResourceCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder resourceDisplayName(String resourceDisplayName) {
            if (resourceDisplayName == null) {
              throw new MissingRequiredPropertyException("GetSchedulerJobJobActivityResourcesResourceCollectionItem", "resourceDisplayName");
            }
            this.resourceDisplayName = resourceDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetSchedulerJobJobActivityResourcesResourceCollectionItem", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder sequence(String sequence) {
            if (sequence == null) {
              throw new MissingRequiredPropertyException("GetSchedulerJobJobActivityResourcesResourceCollectionItem", "sequence");
            }
            this.sequence = sequence;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetSchedulerJobJobActivityResourcesResourceCollectionItem", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder targets(List<GetSchedulerJobJobActivityResourcesResourceCollectionItemTarget> targets) {
            if (targets == null) {
              throw new MissingRequiredPropertyException("GetSchedulerJobJobActivityResourcesResourceCollectionItem", "targets");
            }
            this.targets = targets;
            return this;
        }
        public Builder targets(GetSchedulerJobJobActivityResourcesResourceCollectionItemTarget... targets) {
            return targets(List.of(targets));
        }
        @CustomType.Setter
        public Builder timeEnded(String timeEnded) {
            if (timeEnded == null) {
              throw new MissingRequiredPropertyException("GetSchedulerJobJobActivityResourcesResourceCollectionItem", "timeEnded");
            }
            this.timeEnded = timeEnded;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            if (timeStarted == null) {
              throw new MissingRequiredPropertyException("GetSchedulerJobJobActivityResourcesResourceCollectionItem", "timeStarted");
            }
            this.timeStarted = timeStarted;
            return this;
        }
        public GetSchedulerJobJobActivityResourcesResourceCollectionItem build() {
            final var _resultValue = new GetSchedulerJobJobActivityResourcesResourceCollectionItem();
            _resultValue.description = description;
            _resultValue.resourceDisplayName = resourceDisplayName;
            _resultValue.resourceId = resourceId;
            _resultValue.sequence = sequence;
            _resultValue.status = status;
            _resultValue.targets = targets;
            _resultValue.timeEnded = timeEnded;
            _resultValue.timeStarted = timeStarted;
            return _resultValue;
        }
    }
}
