// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.GetTaskRecordDetailExecutionDetailContent;
import com.pulumi.oci.FleetAppsManagement.outputs.GetTaskRecordDetailExecutionDetailCredential;
import com.pulumi.oci.FleetAppsManagement.outputs.GetTaskRecordDetailExecutionDetailVariable;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTaskRecordDetailExecutionDetail {
    /**
     * @return Optional command to execute the content. You can provide any commands/arguments that can&#39;t be part of the script.
     * 
     */
    private String command;
    /**
     * @return Content Source details.
     * 
     */
    private List<GetTaskRecordDetailExecutionDetailContent> contents;
    /**
     * @return Credentials required for executing the task.
     * 
     */
    private List<GetTaskRecordDetailExecutionDetailCredential> credentials;
    /**
     * @return Endpoint to be invoked.
     * 
     */
    private String endpoint;
    /**
     * @return The action type of the task
     * 
     */
    private String executionType;
    /**
     * @return The variable of the task. At least one of the dynamicArguments or output needs to be provided.
     * 
     */
    private List<GetTaskRecordDetailExecutionDetailVariable> variables;

    private GetTaskRecordDetailExecutionDetail() {}
    /**
     * @return Optional command to execute the content. You can provide any commands/arguments that can&#39;t be part of the script.
     * 
     */
    public String command() {
        return this.command;
    }
    /**
     * @return Content Source details.
     * 
     */
    public List<GetTaskRecordDetailExecutionDetailContent> contents() {
        return this.contents;
    }
    /**
     * @return Credentials required for executing the task.
     * 
     */
    public List<GetTaskRecordDetailExecutionDetailCredential> credentials() {
        return this.credentials;
    }
    /**
     * @return Endpoint to be invoked.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return The action type of the task
     * 
     */
    public String executionType() {
        return this.executionType;
    }
    /**
     * @return The variable of the task. At least one of the dynamicArguments or output needs to be provided.
     * 
     */
    public List<GetTaskRecordDetailExecutionDetailVariable> variables() {
        return this.variables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTaskRecordDetailExecutionDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String command;
        private List<GetTaskRecordDetailExecutionDetailContent> contents;
        private List<GetTaskRecordDetailExecutionDetailCredential> credentials;
        private String endpoint;
        private String executionType;
        private List<GetTaskRecordDetailExecutionDetailVariable> variables;
        public Builder() {}
        public Builder(GetTaskRecordDetailExecutionDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.command = defaults.command;
    	      this.contents = defaults.contents;
    	      this.credentials = defaults.credentials;
    	      this.endpoint = defaults.endpoint;
    	      this.executionType = defaults.executionType;
    	      this.variables = defaults.variables;
        }

        @CustomType.Setter
        public Builder command(String command) {
            if (command == null) {
              throw new MissingRequiredPropertyException("GetTaskRecordDetailExecutionDetail", "command");
            }
            this.command = command;
            return this;
        }
        @CustomType.Setter
        public Builder contents(List<GetTaskRecordDetailExecutionDetailContent> contents) {
            if (contents == null) {
              throw new MissingRequiredPropertyException("GetTaskRecordDetailExecutionDetail", "contents");
            }
            this.contents = contents;
            return this;
        }
        public Builder contents(GetTaskRecordDetailExecutionDetailContent... contents) {
            return contents(List.of(contents));
        }
        @CustomType.Setter
        public Builder credentials(List<GetTaskRecordDetailExecutionDetailCredential> credentials) {
            if (credentials == null) {
              throw new MissingRequiredPropertyException("GetTaskRecordDetailExecutionDetail", "credentials");
            }
            this.credentials = credentials;
            return this;
        }
        public Builder credentials(GetTaskRecordDetailExecutionDetailCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            if (endpoint == null) {
              throw new MissingRequiredPropertyException("GetTaskRecordDetailExecutionDetail", "endpoint");
            }
            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder executionType(String executionType) {
            if (executionType == null) {
              throw new MissingRequiredPropertyException("GetTaskRecordDetailExecutionDetail", "executionType");
            }
            this.executionType = executionType;
            return this;
        }
        @CustomType.Setter
        public Builder variables(List<GetTaskRecordDetailExecutionDetailVariable> variables) {
            if (variables == null) {
              throw new MissingRequiredPropertyException("GetTaskRecordDetailExecutionDetail", "variables");
            }
            this.variables = variables;
            return this;
        }
        public Builder variables(GetTaskRecordDetailExecutionDetailVariable... variables) {
            return variables(List.of(variables));
        }
        public GetTaskRecordDetailExecutionDetail build() {
            final var _resultValue = new GetTaskRecordDetailExecutionDetail();
            _resultValue.command = command;
            _resultValue.contents = contents;
            _resultValue.credentials = credentials;
            _resultValue.endpoint = endpoint;
            _resultValue.executionType = executionType;
            _resultValue.variables = variables;
            return _resultValue;
        }
    }
}
