// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.PlatformConfigurationConfigCategoryDetailsCompatibleProduct;
import com.pulumi.oci.FleetAppsManagement.outputs.PlatformConfigurationConfigCategoryDetailsCredential;
import com.pulumi.oci.FleetAppsManagement.outputs.PlatformConfigurationConfigCategoryDetailsPatchType;
import com.pulumi.oci.FleetAppsManagement.outputs.PlatformConfigurationConfigCategoryDetailsProduct;
import com.pulumi.oci.FleetAppsManagement.outputs.PlatformConfigurationConfigCategoryDetailsSubCategoryDetails;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PlatformConfigurationConfigCategoryDetails {
    /**
     * @return (Updatable) Products compatible with this Product. Provide products from the list of other products you have created that are compatible with the present one
     * 
     */
    private @Nullable List<PlatformConfigurationConfigCategoryDetailsCompatibleProduct> compatibleProducts;
    /**
     * @return (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
     * 
     */
    private @Nullable List<String> components;
    /**
     * @return (Updatable) Category of configuration
     * 
     */
    private String configCategory;
    /**
     * @return (Updatable) OCID for the Credential name to be associated with the Product. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
     * 
     */
    private @Nullable List<PlatformConfigurationConfigCategoryDetailsCredential> credentials;
    /**
     * @return (Updatable) The OCID of the resource.
     * 
     */
    private @Nullable String instanceId;
    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    private @Nullable String instanceName;
    /**
     * @return (Updatable) Patch Types associated with this Product.
     * 
     */
    private @Nullable List<PlatformConfigurationConfigCategoryDetailsPatchType> patchTypes;
    /**
     * @return (Updatable) Products that belong to the stack. For example, Oracle WebLogic and Java for the Oracle Fusion Middleware product stack.
     * 
     */
    private @Nullable List<PlatformConfigurationConfigCategoryDetailsProduct> products;
    /**
     * @return (Updatable) ProductStack Config Category Details.
     * 
     */
    private @Nullable PlatformConfigurationConfigCategoryDetailsSubCategoryDetails subCategoryDetails;
    /**
     * @return (Updatable) Versions associated with the PRODUCT .
     * 
     */
    private @Nullable List<String> versions;

    private PlatformConfigurationConfigCategoryDetails() {}
    /**
     * @return (Updatable) Products compatible with this Product. Provide products from the list of other products you have created that are compatible with the present one
     * 
     */
    public List<PlatformConfigurationConfigCategoryDetailsCompatibleProduct> compatibleProducts() {
        return this.compatibleProducts == null ? List.of() : this.compatibleProducts;
    }
    /**
     * @return (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
     * 
     */
    public List<String> components() {
        return this.components == null ? List.of() : this.components;
    }
    /**
     * @return (Updatable) Category of configuration
     * 
     */
    public String configCategory() {
        return this.configCategory;
    }
    /**
     * @return (Updatable) OCID for the Credential name to be associated with the Product. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
     * 
     */
    public List<PlatformConfigurationConfigCategoryDetailsCredential> credentials() {
        return this.credentials == null ? List.of() : this.credentials;
    }
    /**
     * @return (Updatable) The OCID of the resource.
     * 
     */
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }
    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.  Example: `My new resource`
     * 
     */
    public Optional<String> instanceName() {
        return Optional.ofNullable(this.instanceName);
    }
    /**
     * @return (Updatable) Patch Types associated with this Product.
     * 
     */
    public List<PlatformConfigurationConfigCategoryDetailsPatchType> patchTypes() {
        return this.patchTypes == null ? List.of() : this.patchTypes;
    }
    /**
     * @return (Updatable) Products that belong to the stack. For example, Oracle WebLogic and Java for the Oracle Fusion Middleware product stack.
     * 
     */
    public List<PlatformConfigurationConfigCategoryDetailsProduct> products() {
        return this.products == null ? List.of() : this.products;
    }
    /**
     * @return (Updatable) ProductStack Config Category Details.
     * 
     */
    public Optional<PlatformConfigurationConfigCategoryDetailsSubCategoryDetails> subCategoryDetails() {
        return Optional.ofNullable(this.subCategoryDetails);
    }
    /**
     * @return (Updatable) Versions associated with the PRODUCT .
     * 
     */
    public List<String> versions() {
        return this.versions == null ? List.of() : this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PlatformConfigurationConfigCategoryDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<PlatformConfigurationConfigCategoryDetailsCompatibleProduct> compatibleProducts;
        private @Nullable List<String> components;
        private String configCategory;
        private @Nullable List<PlatformConfigurationConfigCategoryDetailsCredential> credentials;
        private @Nullable String instanceId;
        private @Nullable String instanceName;
        private @Nullable List<PlatformConfigurationConfigCategoryDetailsPatchType> patchTypes;
        private @Nullable List<PlatformConfigurationConfigCategoryDetailsProduct> products;
        private @Nullable PlatformConfigurationConfigCategoryDetailsSubCategoryDetails subCategoryDetails;
        private @Nullable List<String> versions;
        public Builder() {}
        public Builder(PlatformConfigurationConfigCategoryDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compatibleProducts = defaults.compatibleProducts;
    	      this.components = defaults.components;
    	      this.configCategory = defaults.configCategory;
    	      this.credentials = defaults.credentials;
    	      this.instanceId = defaults.instanceId;
    	      this.instanceName = defaults.instanceName;
    	      this.patchTypes = defaults.patchTypes;
    	      this.products = defaults.products;
    	      this.subCategoryDetails = defaults.subCategoryDetails;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder compatibleProducts(@Nullable List<PlatformConfigurationConfigCategoryDetailsCompatibleProduct> compatibleProducts) {

            this.compatibleProducts = compatibleProducts;
            return this;
        }
        public Builder compatibleProducts(PlatformConfigurationConfigCategoryDetailsCompatibleProduct... compatibleProducts) {
            return compatibleProducts(List.of(compatibleProducts));
        }
        @CustomType.Setter
        public Builder components(@Nullable List<String> components) {

            this.components = components;
            return this;
        }
        public Builder components(String... components) {
            return components(List.of(components));
        }
        @CustomType.Setter
        public Builder configCategory(String configCategory) {
            if (configCategory == null) {
              throw new MissingRequiredPropertyException("PlatformConfigurationConfigCategoryDetails", "configCategory");
            }
            this.configCategory = configCategory;
            return this;
        }
        @CustomType.Setter
        public Builder credentials(@Nullable List<PlatformConfigurationConfigCategoryDetailsCredential> credentials) {

            this.credentials = credentials;
            return this;
        }
        public Builder credentials(PlatformConfigurationConfigCategoryDetailsCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder instanceId(@Nullable String instanceId) {

            this.instanceId = instanceId;
            return this;
        }
        @CustomType.Setter
        public Builder instanceName(@Nullable String instanceName) {

            this.instanceName = instanceName;
            return this;
        }
        @CustomType.Setter
        public Builder patchTypes(@Nullable List<PlatformConfigurationConfigCategoryDetailsPatchType> patchTypes) {

            this.patchTypes = patchTypes;
            return this;
        }
        public Builder patchTypes(PlatformConfigurationConfigCategoryDetailsPatchType... patchTypes) {
            return patchTypes(List.of(patchTypes));
        }
        @CustomType.Setter
        public Builder products(@Nullable List<PlatformConfigurationConfigCategoryDetailsProduct> products) {

            this.products = products;
            return this;
        }
        public Builder products(PlatformConfigurationConfigCategoryDetailsProduct... products) {
            return products(List.of(products));
        }
        @CustomType.Setter
        public Builder subCategoryDetails(@Nullable PlatformConfigurationConfigCategoryDetailsSubCategoryDetails subCategoryDetails) {

            this.subCategoryDetails = subCategoryDetails;
            return this;
        }
        @CustomType.Setter
        public Builder versions(@Nullable List<String> versions) {

            this.versions = versions;
            return this;
        }
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }
        public PlatformConfigurationConfigCategoryDetails build() {
            final var _resultValue = new PlatformConfigurationConfigCategoryDetails();
            _resultValue.compatibleProducts = compatibleProducts;
            _resultValue.components = components;
            _resultValue.configCategory = configCategory;
            _resultValue.credentials = credentials;
            _resultValue.instanceId = instanceId;
            _resultValue.instanceName = instanceName;
            _resultValue.patchTypes = patchTypes;
            _resultValue.products = products;
            _resultValue.subCategoryDetails = subCategoryDetails;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
