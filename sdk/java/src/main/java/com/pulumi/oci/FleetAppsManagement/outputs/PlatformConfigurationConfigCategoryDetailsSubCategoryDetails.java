// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredential;
import com.pulumi.oci.FleetAppsManagement.outputs.PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class PlatformConfigurationConfigCategoryDetailsSubCategoryDetails {
    /**
     * @return (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
     * 
     */
    private @Nullable List<String> components;
    /**
     * @return (Updatable) OCID for the Credential name to be associated with the Product Stack. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
     * 
     */
    private @Nullable List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredential> credentials;
    /**
     * @return (Updatable) Patch Types associated with this Product Stack which will be considered as Product.
     * 
     */
    private @Nullable List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchType> patchTypes;
    /**
     * @return (Updatable) SubCategory of Product Stack.
     * 
     */
    private String subCategory;
    /**
     * @return (Updatable) Versions associated with the PRODUCT .
     * 
     */
    private @Nullable List<String> versions;

    private PlatformConfigurationConfigCategoryDetailsSubCategoryDetails() {}
    /**
     * @return (Updatable) Various components of the Product. For example:The administration server or node manager can be the components of the Oracle WebLogic Application server. Forms server or concurrent manager can be the components of the Oracle E-Business Suite.
     * 
     */
    public List<String> components() {
        return this.components == null ? List.of() : this.components;
    }
    /**
     * @return (Updatable) OCID for the Credential name to be associated with the Product Stack. These are useful for target discovery or lifecycle management activities, for example, Oracle WebLogic admin credentials for Oracle WebLogic Application server.
     * 
     */
    public List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredential> credentials() {
        return this.credentials == null ? List.of() : this.credentials;
    }
    /**
     * @return (Updatable) Patch Types associated with this Product Stack which will be considered as Product.
     * 
     */
    public List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchType> patchTypes() {
        return this.patchTypes == null ? List.of() : this.patchTypes;
    }
    /**
     * @return (Updatable) SubCategory of Product Stack.
     * 
     */
    public String subCategory() {
        return this.subCategory;
    }
    /**
     * @return (Updatable) Versions associated with the PRODUCT .
     * 
     */
    public List<String> versions() {
        return this.versions == null ? List.of() : this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PlatformConfigurationConfigCategoryDetailsSubCategoryDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> components;
        private @Nullable List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredential> credentials;
        private @Nullable List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchType> patchTypes;
        private String subCategory;
        private @Nullable List<String> versions;
        public Builder() {}
        public Builder(PlatformConfigurationConfigCategoryDetailsSubCategoryDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.components = defaults.components;
    	      this.credentials = defaults.credentials;
    	      this.patchTypes = defaults.patchTypes;
    	      this.subCategory = defaults.subCategory;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder components(@Nullable List<String> components) {

            this.components = components;
            return this;
        }
        public Builder components(String... components) {
            return components(List.of(components));
        }
        @CustomType.Setter
        public Builder credentials(@Nullable List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredential> credentials) {

            this.credentials = credentials;
            return this;
        }
        public Builder credentials(PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder patchTypes(@Nullable List<PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchType> patchTypes) {

            this.patchTypes = patchTypes;
            return this;
        }
        public Builder patchTypes(PlatformConfigurationConfigCategoryDetailsSubCategoryDetailsPatchType... patchTypes) {
            return patchTypes(List.of(patchTypes));
        }
        @CustomType.Setter
        public Builder subCategory(String subCategory) {
            if (subCategory == null) {
              throw new MissingRequiredPropertyException("PlatformConfigurationConfigCategoryDetailsSubCategoryDetails", "subCategory");
            }
            this.subCategory = subCategory;
            return this;
        }
        @CustomType.Setter
        public Builder versions(@Nullable List<String> versions) {

            this.versions = versions;
            return this;
        }
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }
        public PlatformConfigurationConfigCategoryDetailsSubCategoryDetails build() {
            final var _resultValue = new PlatformConfigurationConfigCategoryDetailsSubCategoryDetails();
            _resultValue.components = components;
            _resultValue.credentials = credentials;
            _resultValue.patchTypes = patchTypes;
            _resultValue.subCategory = subCategory;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
