// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.FleetAppsManagement.outputs.ProvisionDeployedResourceResourceInstanceList;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProvisionDeployedResource {
    /**
     * @return The mode of the resource. Example: &#34;managed&#34;
     * 
     */
    private @Nullable String mode;
    /**
     * @return Collection of InstanceSummary
     * 
     */
    private @Nullable List<ProvisionDeployedResourceResourceInstanceList> resourceInstanceLists;
    /**
     * @return The name of the resource
     * 
     */
    private @Nullable String resourceName;
    /**
     * @return The name of the Provider
     * 
     */
    private @Nullable String resourceProvider;
    /**
     * @return The provider resource type. Must be supported by the Oracle Cloud Infrastructure provider. Example: oci.Core.Instance
     * 
     */
    private @Nullable String resourceType;

    private ProvisionDeployedResource() {}
    /**
     * @return The mode of the resource. Example: &#34;managed&#34;
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return Collection of InstanceSummary
     * 
     */
    public List<ProvisionDeployedResourceResourceInstanceList> resourceInstanceLists() {
        return this.resourceInstanceLists == null ? List.of() : this.resourceInstanceLists;
    }
    /**
     * @return The name of the resource
     * 
     */
    public Optional<String> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }
    /**
     * @return The name of the Provider
     * 
     */
    public Optional<String> resourceProvider() {
        return Optional.ofNullable(this.resourceProvider);
    }
    /**
     * @return The provider resource type. Must be supported by the Oracle Cloud Infrastructure provider. Example: oci.Core.Instance
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProvisionDeployedResource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String mode;
        private @Nullable List<ProvisionDeployedResourceResourceInstanceList> resourceInstanceLists;
        private @Nullable String resourceName;
        private @Nullable String resourceProvider;
        private @Nullable String resourceType;
        public Builder() {}
        public Builder(ProvisionDeployedResource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.resourceInstanceLists = defaults.resourceInstanceLists;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceProvider = defaults.resourceProvider;
    	      this.resourceType = defaults.resourceType;
        }

        @CustomType.Setter
        public Builder mode(@Nullable String mode) {

            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder resourceInstanceLists(@Nullable List<ProvisionDeployedResourceResourceInstanceList> resourceInstanceLists) {

            this.resourceInstanceLists = resourceInstanceLists;
            return this;
        }
        public Builder resourceInstanceLists(ProvisionDeployedResourceResourceInstanceList... resourceInstanceLists) {
            return resourceInstanceLists(List.of(resourceInstanceLists));
        }
        @CustomType.Setter
        public Builder resourceName(@Nullable String resourceName) {

            this.resourceName = resourceName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceProvider(@Nullable String resourceProvider) {

            this.resourceProvider = resourceProvider;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {

            this.resourceType = resourceType;
            return this;
        }
        public ProvisionDeployedResource build() {
            final var _resultValue = new ProvisionDeployedResource();
            _resultValue.mode = mode;
            _resultValue.resourceInstanceLists = resourceInstanceLists;
            _resultValue.resourceName = resourceName;
            _resultValue.resourceProvider = resourceProvider;
            _resultValue.resourceType = resourceType;
            return _resultValue;
        }
    }
}
