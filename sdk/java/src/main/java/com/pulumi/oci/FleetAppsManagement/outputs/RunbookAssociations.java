// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookAssociationsExecutionWorkflowDetails;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookAssociationsGroup;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookAssociationsRollbackWorkflowDetails;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookAssociationsTask;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RunbookAssociations {
    /**
     * @return (Updatable) Execution Workflow details.
     * 
     */
    private RunbookAssociationsExecutionWorkflowDetails executionWorkflowDetails;
    /**
     * @return (Updatable) The groups of the runbook.
     * 
     */
    private List<RunbookAssociationsGroup> groups;
    /**
     * @return (Updatable) Rollback Workflow details.
     * 
     */
    private @Nullable RunbookAssociationsRollbackWorkflowDetails rollbackWorkflowDetails;
    /**
     * @return (Updatable) A set of tasks to execute in the runbook.
     * 
     */
    private List<RunbookAssociationsTask> tasks;
    /**
     * @return (Updatable) The version of the runbook.
     * 
     */
    private @Nullable String version;

    private RunbookAssociations() {}
    /**
     * @return (Updatable) Execution Workflow details.
     * 
     */
    public RunbookAssociationsExecutionWorkflowDetails executionWorkflowDetails() {
        return this.executionWorkflowDetails;
    }
    /**
     * @return (Updatable) The groups of the runbook.
     * 
     */
    public List<RunbookAssociationsGroup> groups() {
        return this.groups;
    }
    /**
     * @return (Updatable) Rollback Workflow details.
     * 
     */
    public Optional<RunbookAssociationsRollbackWorkflowDetails> rollbackWorkflowDetails() {
        return Optional.ofNullable(this.rollbackWorkflowDetails);
    }
    /**
     * @return (Updatable) A set of tasks to execute in the runbook.
     * 
     */
    public List<RunbookAssociationsTask> tasks() {
        return this.tasks;
    }
    /**
     * @return (Updatable) The version of the runbook.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RunbookAssociations defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private RunbookAssociationsExecutionWorkflowDetails executionWorkflowDetails;
        private List<RunbookAssociationsGroup> groups;
        private @Nullable RunbookAssociationsRollbackWorkflowDetails rollbackWorkflowDetails;
        private List<RunbookAssociationsTask> tasks;
        private @Nullable String version;
        public Builder() {}
        public Builder(RunbookAssociations defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.executionWorkflowDetails = defaults.executionWorkflowDetails;
    	      this.groups = defaults.groups;
    	      this.rollbackWorkflowDetails = defaults.rollbackWorkflowDetails;
    	      this.tasks = defaults.tasks;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder executionWorkflowDetails(RunbookAssociationsExecutionWorkflowDetails executionWorkflowDetails) {
            if (executionWorkflowDetails == null) {
              throw new MissingRequiredPropertyException("RunbookAssociations", "executionWorkflowDetails");
            }
            this.executionWorkflowDetails = executionWorkflowDetails;
            return this;
        }
        @CustomType.Setter
        public Builder groups(List<RunbookAssociationsGroup> groups) {
            if (groups == null) {
              throw new MissingRequiredPropertyException("RunbookAssociations", "groups");
            }
            this.groups = groups;
            return this;
        }
        public Builder groups(RunbookAssociationsGroup... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder rollbackWorkflowDetails(@Nullable RunbookAssociationsRollbackWorkflowDetails rollbackWorkflowDetails) {

            this.rollbackWorkflowDetails = rollbackWorkflowDetails;
            return this;
        }
        @CustomType.Setter
        public Builder tasks(List<RunbookAssociationsTask> tasks) {
            if (tasks == null) {
              throw new MissingRequiredPropertyException("RunbookAssociations", "tasks");
            }
            this.tasks = tasks;
            return this;
        }
        public Builder tasks(RunbookAssociationsTask... tasks) {
            return tasks(List.of(tasks));
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public RunbookAssociations build() {
            final var _resultValue = new RunbookAssociations();
            _resultValue.executionWorkflowDetails = executionWorkflowDetails;
            _resultValue.groups = groups;
            _resultValue.rollbackWorkflowDetails = rollbackWorkflowDetails;
            _resultValue.tasks = tasks;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
