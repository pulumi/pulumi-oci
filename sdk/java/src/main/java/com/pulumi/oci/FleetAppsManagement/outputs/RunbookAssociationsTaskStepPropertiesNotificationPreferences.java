// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RunbookAssociationsTaskStepPropertiesNotificationPreferences {
    /**
     * @return (Updatable) Enables notification on pause.
     * 
     */
    private @Nullable Boolean shouldNotifyOnPause;
    /**
     * @return (Updatable) Enables or disables notification on Task Failures.
     * 
     */
    private @Nullable Boolean shouldNotifyOnTaskFailure;
    /**
     * @return (Updatable) Enables or disables notification on Task Success.
     * 
     */
    private @Nullable Boolean shouldNotifyOnTaskSuccess;

    private RunbookAssociationsTaskStepPropertiesNotificationPreferences() {}
    /**
     * @return (Updatable) Enables notification on pause.
     * 
     */
    public Optional<Boolean> shouldNotifyOnPause() {
        return Optional.ofNullable(this.shouldNotifyOnPause);
    }
    /**
     * @return (Updatable) Enables or disables notification on Task Failures.
     * 
     */
    public Optional<Boolean> shouldNotifyOnTaskFailure() {
        return Optional.ofNullable(this.shouldNotifyOnTaskFailure);
    }
    /**
     * @return (Updatable) Enables or disables notification on Task Success.
     * 
     */
    public Optional<Boolean> shouldNotifyOnTaskSuccess() {
        return Optional.ofNullable(this.shouldNotifyOnTaskSuccess);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RunbookAssociationsTaskStepPropertiesNotificationPreferences defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean shouldNotifyOnPause;
        private @Nullable Boolean shouldNotifyOnTaskFailure;
        private @Nullable Boolean shouldNotifyOnTaskSuccess;
        public Builder() {}
        public Builder(RunbookAssociationsTaskStepPropertiesNotificationPreferences defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.shouldNotifyOnPause = defaults.shouldNotifyOnPause;
    	      this.shouldNotifyOnTaskFailure = defaults.shouldNotifyOnTaskFailure;
    	      this.shouldNotifyOnTaskSuccess = defaults.shouldNotifyOnTaskSuccess;
        }

        @CustomType.Setter
        public Builder shouldNotifyOnPause(@Nullable Boolean shouldNotifyOnPause) {

            this.shouldNotifyOnPause = shouldNotifyOnPause;
            return this;
        }
        @CustomType.Setter
        public Builder shouldNotifyOnTaskFailure(@Nullable Boolean shouldNotifyOnTaskFailure) {

            this.shouldNotifyOnTaskFailure = shouldNotifyOnTaskFailure;
            return this;
        }
        @CustomType.Setter
        public Builder shouldNotifyOnTaskSuccess(@Nullable Boolean shouldNotifyOnTaskSuccess) {

            this.shouldNotifyOnTaskSuccess = shouldNotifyOnTaskSuccess;
            return this;
        }
        public RunbookAssociationsTaskStepPropertiesNotificationPreferences build() {
            final var _resultValue = new RunbookAssociationsTaskStepPropertiesNotificationPreferences();
            _resultValue.shouldNotifyOnPause = shouldNotifyOnPause;
            _resultValue.shouldNotifyOnTaskFailure = shouldNotifyOnTaskFailure;
            _resultValue.shouldNotifyOnTaskSuccess = shouldNotifyOnTaskSuccess;
            return _resultValue;
        }
    }
}
