// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookRunbookVersionExecutionWorkflowDetails;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookRunbookVersionGroup;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookRunbookVersionRollbackWorkflowDetails;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookRunbookVersionTask;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RunbookRunbookVersion {
    /**
     * @return Execution Workflow details.
     * 
     */
    private RunbookRunbookVersionExecutionWorkflowDetails executionWorkflowDetails;
    /**
     * @return The groups of the runbook.
     * 
     */
    private List<RunbookRunbookVersionGroup> groups;
    /**
     * @return Is this version the latest?
     * 
     */
    private @Nullable Boolean isLatest;
    /**
     * @return Rollback Workflow details.
     * 
     */
    private @Nullable RunbookRunbookVersionRollbackWorkflowDetails rollbackWorkflowDetails;
    /**
     * @return A set of tasks to execute in the runbook.
     * 
     */
    private List<RunbookRunbookVersionTask> tasks;
    /**
     * @return The version of the runbook.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable String version;

    private RunbookRunbookVersion() {}
    /**
     * @return Execution Workflow details.
     * 
     */
    public RunbookRunbookVersionExecutionWorkflowDetails executionWorkflowDetails() {
        return this.executionWorkflowDetails;
    }
    /**
     * @return The groups of the runbook.
     * 
     */
    public List<RunbookRunbookVersionGroup> groups() {
        return this.groups;
    }
    /**
     * @return Is this version the latest?
     * 
     */
    public Optional<Boolean> isLatest() {
        return Optional.ofNullable(this.isLatest);
    }
    /**
     * @return Rollback Workflow details.
     * 
     */
    public Optional<RunbookRunbookVersionRollbackWorkflowDetails> rollbackWorkflowDetails() {
        return Optional.ofNullable(this.rollbackWorkflowDetails);
    }
    /**
     * @return A set of tasks to execute in the runbook.
     * 
     */
    public List<RunbookRunbookVersionTask> tasks() {
        return this.tasks;
    }
    /**
     * @return The version of the runbook.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RunbookRunbookVersion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private RunbookRunbookVersionExecutionWorkflowDetails executionWorkflowDetails;
        private List<RunbookRunbookVersionGroup> groups;
        private @Nullable Boolean isLatest;
        private @Nullable RunbookRunbookVersionRollbackWorkflowDetails rollbackWorkflowDetails;
        private List<RunbookRunbookVersionTask> tasks;
        private @Nullable String version;
        public Builder() {}
        public Builder(RunbookRunbookVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.executionWorkflowDetails = defaults.executionWorkflowDetails;
    	      this.groups = defaults.groups;
    	      this.isLatest = defaults.isLatest;
    	      this.rollbackWorkflowDetails = defaults.rollbackWorkflowDetails;
    	      this.tasks = defaults.tasks;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder executionWorkflowDetails(RunbookRunbookVersionExecutionWorkflowDetails executionWorkflowDetails) {
            if (executionWorkflowDetails == null) {
              throw new MissingRequiredPropertyException("RunbookRunbookVersion", "executionWorkflowDetails");
            }
            this.executionWorkflowDetails = executionWorkflowDetails;
            return this;
        }
        @CustomType.Setter
        public Builder groups(List<RunbookRunbookVersionGroup> groups) {
            if (groups == null) {
              throw new MissingRequiredPropertyException("RunbookRunbookVersion", "groups");
            }
            this.groups = groups;
            return this;
        }
        public Builder groups(RunbookRunbookVersionGroup... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder isLatest(@Nullable Boolean isLatest) {

            this.isLatest = isLatest;
            return this;
        }
        @CustomType.Setter
        public Builder rollbackWorkflowDetails(@Nullable RunbookRunbookVersionRollbackWorkflowDetails rollbackWorkflowDetails) {

            this.rollbackWorkflowDetails = rollbackWorkflowDetails;
            return this;
        }
        @CustomType.Setter
        public Builder tasks(List<RunbookRunbookVersionTask> tasks) {
            if (tasks == null) {
              throw new MissingRequiredPropertyException("RunbookRunbookVersion", "tasks");
            }
            this.tasks = tasks;
            return this;
        }
        public Builder tasks(RunbookRunbookVersionTask... tasks) {
            return tasks(List.of(tasks));
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public RunbookRunbookVersion build() {
            final var _resultValue = new RunbookRunbookVersion();
            _resultValue.executionWorkflowDetails = executionWorkflowDetails;
            _resultValue.groups = groups;
            _resultValue.isLatest = isLatest;
            _resultValue.rollbackWorkflowDetails = rollbackWorkflowDetails;
            _resultValue.tasks = tasks;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
