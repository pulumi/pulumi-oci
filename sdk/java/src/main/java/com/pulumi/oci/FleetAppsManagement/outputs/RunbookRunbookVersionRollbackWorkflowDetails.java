// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookRunbookVersionRollbackWorkflowDetailsWorkflow;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class RunbookRunbookVersionRollbackWorkflowDetails {
    /**
     * @return rollback Scope
     * 
     */
    private String scope;
    /**
     * @return Rollback Workflow for the runbook.
     * 
     */
    private List<RunbookRunbookVersionRollbackWorkflowDetailsWorkflow> workflows;

    private RunbookRunbookVersionRollbackWorkflowDetails() {}
    /**
     * @return rollback Scope
     * 
     */
    public String scope() {
        return this.scope;
    }
    /**
     * @return Rollback Workflow for the runbook.
     * 
     */
    public List<RunbookRunbookVersionRollbackWorkflowDetailsWorkflow> workflows() {
        return this.workflows;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RunbookRunbookVersionRollbackWorkflowDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String scope;
        private List<RunbookRunbookVersionRollbackWorkflowDetailsWorkflow> workflows;
        public Builder() {}
        public Builder(RunbookRunbookVersionRollbackWorkflowDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scope = defaults.scope;
    	      this.workflows = defaults.workflows;
        }

        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("RunbookRunbookVersionRollbackWorkflowDetails", "scope");
            }
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder workflows(List<RunbookRunbookVersionRollbackWorkflowDetailsWorkflow> workflows) {
            if (workflows == null) {
              throw new MissingRequiredPropertyException("RunbookRunbookVersionRollbackWorkflowDetails", "workflows");
            }
            this.workflows = workflows;
            return this;
        }
        public Builder workflows(RunbookRunbookVersionRollbackWorkflowDetailsWorkflow... workflows) {
            return workflows(List.of(workflows));
        }
        public RunbookRunbookVersionRollbackWorkflowDetails build() {
            final var _resultValue = new RunbookRunbookVersionRollbackWorkflowDetails();
            _resultValue.scope = scope;
            _resultValue.workflows = workflows;
            return _resultValue;
        }
    }
}
