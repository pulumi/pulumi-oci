// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsContent {
    /**
     * @return Bucket Name.
     * 
     */
    private @Nullable String bucket;
    private @Nullable String catalogId;
    /**
     * @return md5 checksum of the artifact.
     * 
     */
    private @Nullable String checksum;
    /**
     * @return Namespace.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return Object Name.
     * 
     */
    private @Nullable String object;
    /**
     * @return Content Source type details.
     * 
     */
    private String sourceType;

    private RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsContent() {}
    /**
     * @return Bucket Name.
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    public Optional<String> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }
    /**
     * @return md5 checksum of the artifact.
     * 
     */
    public Optional<String> checksum() {
        return Optional.ofNullable(this.checksum);
    }
    /**
     * @return Namespace.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return Object Name.
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }
    /**
     * @return Content Source type details.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsContent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucket;
        private @Nullable String catalogId;
        private @Nullable String checksum;
        private @Nullable String namespace;
        private @Nullable String object;
        private String sourceType;
        public Builder() {}
        public Builder(RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsContent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.catalogId = defaults.catalogId;
    	      this.checksum = defaults.checksum;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.sourceType = defaults.sourceType;
        }

        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {

            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder catalogId(@Nullable String catalogId) {

            this.catalogId = catalogId;
            return this;
        }
        @CustomType.Setter
        public Builder checksum(@Nullable String checksum) {

            this.checksum = checksum;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {

            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder object(@Nullable String object) {

            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsContent", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        public RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsContent build() {
            final var _resultValue = new RunbookRunbookVersionTaskTaskRecordDetailsExecutionDetailsContent();
            _resultValue.bucket = bucket;
            _resultValue.catalogId = catalogId;
            _resultValue.checksum = checksum;
            _resultValue.namespace = namespace;
            _resultValue.object = object;
            _resultValue.sourceType = sourceType;
            return _resultValue;
        }
    }
}
