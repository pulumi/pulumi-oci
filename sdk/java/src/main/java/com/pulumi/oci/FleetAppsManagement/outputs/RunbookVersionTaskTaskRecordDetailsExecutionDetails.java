// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookVersionTaskTaskRecordDetailsExecutionDetailsContent;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookVersionTaskTaskRecordDetailsExecutionDetailsCredential;
import com.pulumi.oci.FleetAppsManagement.outputs.RunbookVersionTaskTaskRecordDetailsExecutionDetailsVariables;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RunbookVersionTaskTaskRecordDetailsExecutionDetails {
    private @Nullable String catalogId;
    /**
     * @return (Updatable) Optional command to execute the content.
     * You can provide any commands/arguments that can&#39;t be part of the script.
     * 
     */
    private @Nullable String command;
    /**
     * @return (Updatable) Catalog Id having config file.
     * 
     */
    private @Nullable String configFile;
    /**
     * @return (Updatable) Content Source details.
     * 
     */
    private @Nullable RunbookVersionTaskTaskRecordDetailsExecutionDetailsContent content;
    /**
     * @return (Updatable) Credentials required for executing the
     * task.
     * 
     */
    private @Nullable List<RunbookVersionTaskTaskRecordDetailsExecutionDetailsCredential> credentials;
    /**
     * @return (Updatable) Endpoint to be invoked.
     * 
     */
    private @Nullable String endpoint;
    /**
     * @return (Updatable) The action type of the task
     * 
     */
    private String executionType;
    /**
     * @return (Updatable) Is the Content an executable
     * file?
     * 
     */
    private @Nullable Boolean isExecutableContent;
    /**
     * @return (Updatable) Is the script locked to prevent changes
     * directly in Object Storage?
     * 
     */
    private @Nullable Boolean isLocked;
    /**
     * @return (Updatable) Is read output
     * variable enabled
     * 
     */
    private @Nullable Boolean isReadOutputVariableEnabled;
    /**
     * @return (Updatable) OCID of the compartment to
     * which the resource belongs to.
     * 
     */
    private @Nullable String targetCompartmentId;
    /**
     * @return (Updatable) The variable of the task. At least one
     * of the dynamicArguments or output needs to be provided.
     * 
     */
    private @Nullable RunbookVersionTaskTaskRecordDetailsExecutionDetailsVariables variables;

    private RunbookVersionTaskTaskRecordDetailsExecutionDetails() {}
    public Optional<String> catalogId() {
        return Optional.ofNullable(this.catalogId);
    }
    /**
     * @return (Updatable) Optional command to execute the content.
     * You can provide any commands/arguments that can&#39;t be part of the script.
     * 
     */
    public Optional<String> command() {
        return Optional.ofNullable(this.command);
    }
    /**
     * @return (Updatable) Catalog Id having config file.
     * 
     */
    public Optional<String> configFile() {
        return Optional.ofNullable(this.configFile);
    }
    /**
     * @return (Updatable) Content Source details.
     * 
     */
    public Optional<RunbookVersionTaskTaskRecordDetailsExecutionDetailsContent> content() {
        return Optional.ofNullable(this.content);
    }
    /**
     * @return (Updatable) Credentials required for executing the
     * task.
     * 
     */
    public List<RunbookVersionTaskTaskRecordDetailsExecutionDetailsCredential> credentials() {
        return this.credentials == null ? List.of() : this.credentials;
    }
    /**
     * @return (Updatable) Endpoint to be invoked.
     * 
     */
    public Optional<String> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }
    /**
     * @return (Updatable) The action type of the task
     * 
     */
    public String executionType() {
        return this.executionType;
    }
    /**
     * @return (Updatable) Is the Content an executable
     * file?
     * 
     */
    public Optional<Boolean> isExecutableContent() {
        return Optional.ofNullable(this.isExecutableContent);
    }
    /**
     * @return (Updatable) Is the script locked to prevent changes
     * directly in Object Storage?
     * 
     */
    public Optional<Boolean> isLocked() {
        return Optional.ofNullable(this.isLocked);
    }
    /**
     * @return (Updatable) Is read output
     * variable enabled
     * 
     */
    public Optional<Boolean> isReadOutputVariableEnabled() {
        return Optional.ofNullable(this.isReadOutputVariableEnabled);
    }
    /**
     * @return (Updatable) OCID of the compartment to
     * which the resource belongs to.
     * 
     */
    public Optional<String> targetCompartmentId() {
        return Optional.ofNullable(this.targetCompartmentId);
    }
    /**
     * @return (Updatable) The variable of the task. At least one
     * of the dynamicArguments or output needs to be provided.
     * 
     */
    public Optional<RunbookVersionTaskTaskRecordDetailsExecutionDetailsVariables> variables() {
        return Optional.ofNullable(this.variables);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RunbookVersionTaskTaskRecordDetailsExecutionDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String catalogId;
        private @Nullable String command;
        private @Nullable String configFile;
        private @Nullable RunbookVersionTaskTaskRecordDetailsExecutionDetailsContent content;
        private @Nullable List<RunbookVersionTaskTaskRecordDetailsExecutionDetailsCredential> credentials;
        private @Nullable String endpoint;
        private String executionType;
        private @Nullable Boolean isExecutableContent;
        private @Nullable Boolean isLocked;
        private @Nullable Boolean isReadOutputVariableEnabled;
        private @Nullable String targetCompartmentId;
        private @Nullable RunbookVersionTaskTaskRecordDetailsExecutionDetailsVariables variables;
        public Builder() {}
        public Builder(RunbookVersionTaskTaskRecordDetailsExecutionDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogId = defaults.catalogId;
    	      this.command = defaults.command;
    	      this.configFile = defaults.configFile;
    	      this.content = defaults.content;
    	      this.credentials = defaults.credentials;
    	      this.endpoint = defaults.endpoint;
    	      this.executionType = defaults.executionType;
    	      this.isExecutableContent = defaults.isExecutableContent;
    	      this.isLocked = defaults.isLocked;
    	      this.isReadOutputVariableEnabled = defaults.isReadOutputVariableEnabled;
    	      this.targetCompartmentId = defaults.targetCompartmentId;
    	      this.variables = defaults.variables;
        }

        @CustomType.Setter
        public Builder catalogId(@Nullable String catalogId) {

            this.catalogId = catalogId;
            return this;
        }
        @CustomType.Setter
        public Builder command(@Nullable String command) {

            this.command = command;
            return this;
        }
        @CustomType.Setter
        public Builder configFile(@Nullable String configFile) {

            this.configFile = configFile;
            return this;
        }
        @CustomType.Setter
        public Builder content(@Nullable RunbookVersionTaskTaskRecordDetailsExecutionDetailsContent content) {

            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder credentials(@Nullable List<RunbookVersionTaskTaskRecordDetailsExecutionDetailsCredential> credentials) {

            this.credentials = credentials;
            return this;
        }
        public Builder credentials(RunbookVersionTaskTaskRecordDetailsExecutionDetailsCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder endpoint(@Nullable String endpoint) {

            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder executionType(String executionType) {
            if (executionType == null) {
              throw new MissingRequiredPropertyException("RunbookVersionTaskTaskRecordDetailsExecutionDetails", "executionType");
            }
            this.executionType = executionType;
            return this;
        }
        @CustomType.Setter
        public Builder isExecutableContent(@Nullable Boolean isExecutableContent) {

            this.isExecutableContent = isExecutableContent;
            return this;
        }
        @CustomType.Setter
        public Builder isLocked(@Nullable Boolean isLocked) {

            this.isLocked = isLocked;
            return this;
        }
        @CustomType.Setter
        public Builder isReadOutputVariableEnabled(@Nullable Boolean isReadOutputVariableEnabled) {

            this.isReadOutputVariableEnabled = isReadOutputVariableEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder targetCompartmentId(@Nullable String targetCompartmentId) {

            this.targetCompartmentId = targetCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder variables(@Nullable RunbookVersionTaskTaskRecordDetailsExecutionDetailsVariables variables) {

            this.variables = variables;
            return this;
        }
        public RunbookVersionTaskTaskRecordDetailsExecutionDetails build() {
            final var _resultValue = new RunbookVersionTaskTaskRecordDetailsExecutionDetails();
            _resultValue.catalogId = catalogId;
            _resultValue.command = command;
            _resultValue.configFile = configFile;
            _resultValue.content = content;
            _resultValue.credentials = credentials;
            _resultValue.endpoint = endpoint;
            _resultValue.executionType = executionType;
            _resultValue.isExecutableContent = isExecutableContent;
            _resultValue.isLocked = isLocked;
            _resultValue.isReadOutputVariableEnabled = isReadOutputVariableEnabled;
            _resultValue.targetCompartmentId = targetCompartmentId;
            _resultValue.variables = variables;
            return _resultValue;
        }
    }
}
