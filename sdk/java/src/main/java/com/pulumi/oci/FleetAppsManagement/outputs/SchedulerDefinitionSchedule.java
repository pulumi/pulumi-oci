// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SchedulerDefinitionSchedule {
    /**
     * @return (Updatable) Duration of the schedule.
     * 
     */
    private @Nullable String duration;
    /**
     * @return (Updatable) Start Date for the schedule. An RFC3339 formatted datetime string
     * 
     */
    private String executionStartdate;
    /**
     * @return (Updatable) Provide MaintenanceWindowId
     * 
     */
    private @Nullable String maintenanceWindowId;
    /**
     * @return (Updatable) Recurrence rule specification if recurring
     * 
     */
    private @Nullable String recurrences;
    /**
     * @return (Updatable) Schedule Type
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private String type;

    private SchedulerDefinitionSchedule() {}
    /**
     * @return (Updatable) Duration of the schedule.
     * 
     */
    public Optional<String> duration() {
        return Optional.ofNullable(this.duration);
    }
    /**
     * @return (Updatable) Start Date for the schedule. An RFC3339 formatted datetime string
     * 
     */
    public String executionStartdate() {
        return this.executionStartdate;
    }
    /**
     * @return (Updatable) Provide MaintenanceWindowId
     * 
     */
    public Optional<String> maintenanceWindowId() {
        return Optional.ofNullable(this.maintenanceWindowId);
    }
    /**
     * @return (Updatable) Recurrence rule specification if recurring
     * 
     */
    public Optional<String> recurrences() {
        return Optional.ofNullable(this.recurrences);
    }
    /**
     * @return (Updatable) Schedule Type
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SchedulerDefinitionSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String duration;
        private String executionStartdate;
        private @Nullable String maintenanceWindowId;
        private @Nullable String recurrences;
        private String type;
        public Builder() {}
        public Builder(SchedulerDefinitionSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.executionStartdate = defaults.executionStartdate;
    	      this.maintenanceWindowId = defaults.maintenanceWindowId;
    	      this.recurrences = defaults.recurrences;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder duration(@Nullable String duration) {

            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder executionStartdate(String executionStartdate) {
            if (executionStartdate == null) {
              throw new MissingRequiredPropertyException("SchedulerDefinitionSchedule", "executionStartdate");
            }
            this.executionStartdate = executionStartdate;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindowId(@Nullable String maintenanceWindowId) {

            this.maintenanceWindowId = maintenanceWindowId;
            return this;
        }
        @CustomType.Setter
        public Builder recurrences(@Nullable String recurrences) {

            this.recurrences = recurrences;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("SchedulerDefinitionSchedule", "type");
            }
            this.type = type;
            return this;
        }
        public SchedulerDefinitionSchedule build() {
            final var _resultValue = new SchedulerDefinitionSchedule();
            _resultValue.duration = duration;
            _resultValue.executionStartdate = executionStartdate;
            _resultValue.maintenanceWindowId = maintenanceWindowId;
            _resultValue.recurrences = recurrences;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
