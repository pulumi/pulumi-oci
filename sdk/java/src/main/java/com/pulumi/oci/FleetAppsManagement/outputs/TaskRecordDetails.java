// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.TaskRecordDetailsExecutionDetails;
import com.pulumi.oci.FleetAppsManagement.outputs.TaskRecordDetailsProperties;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskRecordDetails {
    /**
     * @return (Updatable) Execution details.
     * 
     */
    private TaskRecordDetailsExecutionDetails executionDetails;
    /**
     * @return (Updatable) Is this an Apply Subject Task?  Set this to true for a Patch Execution Task which applies patches(subjects) on a target.
     * 
     */
    private @Nullable Boolean isApplySubjectTask;
    /**
     * @return (Updatable) Is this a discovery output task?
     * 
     */
    private @Nullable Boolean isDiscoveryOutputTask;
    /**
     * @return (Updatable) The OS for the task
     * 
     */
    private String osType;
    /**
     * @return (Updatable) The platform of the runbook.
     * 
     */
    private @Nullable String platform;
    /**
     * @return (Updatable) The properties of the task.
     * 
     */
    private @Nullable TaskRecordDetailsProperties properties;
    /**
     * @return (Updatable) The scope of the task
     * 
     */
    private String scope;

    private TaskRecordDetails() {}
    /**
     * @return (Updatable) Execution details.
     * 
     */
    public TaskRecordDetailsExecutionDetails executionDetails() {
        return this.executionDetails;
    }
    /**
     * @return (Updatable) Is this an Apply Subject Task?  Set this to true for a Patch Execution Task which applies patches(subjects) on a target.
     * 
     */
    public Optional<Boolean> isApplySubjectTask() {
        return Optional.ofNullable(this.isApplySubjectTask);
    }
    /**
     * @return (Updatable) Is this a discovery output task?
     * 
     */
    public Optional<Boolean> isDiscoveryOutputTask() {
        return Optional.ofNullable(this.isDiscoveryOutputTask);
    }
    /**
     * @return (Updatable) The OS for the task
     * 
     */
    public String osType() {
        return this.osType;
    }
    /**
     * @return (Updatable) The platform of the runbook.
     * 
     */
    public Optional<String> platform() {
        return Optional.ofNullable(this.platform);
    }
    /**
     * @return (Updatable) The properties of the task.
     * 
     */
    public Optional<TaskRecordDetailsProperties> properties() {
        return Optional.ofNullable(this.properties);
    }
    /**
     * @return (Updatable) The scope of the task
     * 
     */
    public String scope() {
        return this.scope;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskRecordDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private TaskRecordDetailsExecutionDetails executionDetails;
        private @Nullable Boolean isApplySubjectTask;
        private @Nullable Boolean isDiscoveryOutputTask;
        private String osType;
        private @Nullable String platform;
        private @Nullable TaskRecordDetailsProperties properties;
        private String scope;
        public Builder() {}
        public Builder(TaskRecordDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.executionDetails = defaults.executionDetails;
    	      this.isApplySubjectTask = defaults.isApplySubjectTask;
    	      this.isDiscoveryOutputTask = defaults.isDiscoveryOutputTask;
    	      this.osType = defaults.osType;
    	      this.platform = defaults.platform;
    	      this.properties = defaults.properties;
    	      this.scope = defaults.scope;
        }

        @CustomType.Setter
        public Builder executionDetails(TaskRecordDetailsExecutionDetails executionDetails) {
            if (executionDetails == null) {
              throw new MissingRequiredPropertyException("TaskRecordDetails", "executionDetails");
            }
            this.executionDetails = executionDetails;
            return this;
        }
        @CustomType.Setter
        public Builder isApplySubjectTask(@Nullable Boolean isApplySubjectTask) {

            this.isApplySubjectTask = isApplySubjectTask;
            return this;
        }
        @CustomType.Setter
        public Builder isDiscoveryOutputTask(@Nullable Boolean isDiscoveryOutputTask) {

            this.isDiscoveryOutputTask = isDiscoveryOutputTask;
            return this;
        }
        @CustomType.Setter
        public Builder osType(String osType) {
            if (osType == null) {
              throw new MissingRequiredPropertyException("TaskRecordDetails", "osType");
            }
            this.osType = osType;
            return this;
        }
        @CustomType.Setter
        public Builder platform(@Nullable String platform) {

            this.platform = platform;
            return this;
        }
        @CustomType.Setter
        public Builder properties(@Nullable TaskRecordDetailsProperties properties) {

            this.properties = properties;
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("TaskRecordDetails", "scope");
            }
            this.scope = scope;
            return this;
        }
        public TaskRecordDetails build() {
            final var _resultValue = new TaskRecordDetails();
            _resultValue.executionDetails = executionDetails;
            _resultValue.isApplySubjectTask = isApplySubjectTask;
            _resultValue.isDiscoveryOutputTask = isDiscoveryOutputTask;
            _resultValue.osType = osType;
            _resultValue.platform = platform;
            _resultValue.properties = properties;
            _resultValue.scope = scope;
            return _resultValue;
        }
    }
}
