// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetAppsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetAppsManagement.outputs.TaskRecordDetailsExecutionDetailsContent;
import com.pulumi.oci.FleetAppsManagement.outputs.TaskRecordDetailsExecutionDetailsCredential;
import com.pulumi.oci.FleetAppsManagement.outputs.TaskRecordDetailsExecutionDetailsVariables;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskRecordDetailsExecutionDetails {
    /**
     * @return (Updatable) Optional command to execute the content. You can provide any commands/arguments that can&#39;t be part of the script.
     * 
     */
    private @Nullable String command;
    /**
     * @return (Updatable) Content Source details.
     * 
     */
    private @Nullable TaskRecordDetailsExecutionDetailsContent content;
    /**
     * @return (Updatable) Credentials required for executing the task.
     * 
     */
    private @Nullable List<TaskRecordDetailsExecutionDetailsCredential> credentials;
    /**
     * @return (Updatable) Endpoint to be invoked.
     * 
     */
    private @Nullable String endpoint;
    /**
     * @return (Updatable) The action type of the task
     * 
     */
    private String executionType;
    /**
     * @return (Updatable) The variable of the task. At least one of the dynamicArguments or output needs to be provided.
     * 
     */
    private @Nullable TaskRecordDetailsExecutionDetailsVariables variables;

    private TaskRecordDetailsExecutionDetails() {}
    /**
     * @return (Updatable) Optional command to execute the content. You can provide any commands/arguments that can&#39;t be part of the script.
     * 
     */
    public Optional<String> command() {
        return Optional.ofNullable(this.command);
    }
    /**
     * @return (Updatable) Content Source details.
     * 
     */
    public Optional<TaskRecordDetailsExecutionDetailsContent> content() {
        return Optional.ofNullable(this.content);
    }
    /**
     * @return (Updatable) Credentials required for executing the task.
     * 
     */
    public List<TaskRecordDetailsExecutionDetailsCredential> credentials() {
        return this.credentials == null ? List.of() : this.credentials;
    }
    /**
     * @return (Updatable) Endpoint to be invoked.
     * 
     */
    public Optional<String> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }
    /**
     * @return (Updatable) The action type of the task
     * 
     */
    public String executionType() {
        return this.executionType;
    }
    /**
     * @return (Updatable) The variable of the task. At least one of the dynamicArguments or output needs to be provided.
     * 
     */
    public Optional<TaskRecordDetailsExecutionDetailsVariables> variables() {
        return Optional.ofNullable(this.variables);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskRecordDetailsExecutionDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String command;
        private @Nullable TaskRecordDetailsExecutionDetailsContent content;
        private @Nullable List<TaskRecordDetailsExecutionDetailsCredential> credentials;
        private @Nullable String endpoint;
        private String executionType;
        private @Nullable TaskRecordDetailsExecutionDetailsVariables variables;
        public Builder() {}
        public Builder(TaskRecordDetailsExecutionDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.command = defaults.command;
    	      this.content = defaults.content;
    	      this.credentials = defaults.credentials;
    	      this.endpoint = defaults.endpoint;
    	      this.executionType = defaults.executionType;
    	      this.variables = defaults.variables;
        }

        @CustomType.Setter
        public Builder command(@Nullable String command) {

            this.command = command;
            return this;
        }
        @CustomType.Setter
        public Builder content(@Nullable TaskRecordDetailsExecutionDetailsContent content) {

            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder credentials(@Nullable List<TaskRecordDetailsExecutionDetailsCredential> credentials) {

            this.credentials = credentials;
            return this;
        }
        public Builder credentials(TaskRecordDetailsExecutionDetailsCredential... credentials) {
            return credentials(List.of(credentials));
        }
        @CustomType.Setter
        public Builder endpoint(@Nullable String endpoint) {

            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder executionType(String executionType) {
            if (executionType == null) {
              throw new MissingRequiredPropertyException("TaskRecordDetailsExecutionDetails", "executionType");
            }
            this.executionType = executionType;
            return this;
        }
        @CustomType.Setter
        public Builder variables(@Nullable TaskRecordDetailsExecutionDetailsVariables variables) {

            this.variables = variables;
            return this;
        }
        public TaskRecordDetailsExecutionDetails build() {
            final var _resultValue = new TaskRecordDetailsExecutionDetails();
            _resultValue.command = command;
            _resultValue.content = content;
            _resultValue.credentials = credentials;
            _resultValue.endpoint = endpoint;
            _resultValue.executionType = executionType;
            _resultValue.variables = variables;
            return _resultValue;
        }
    }
}
