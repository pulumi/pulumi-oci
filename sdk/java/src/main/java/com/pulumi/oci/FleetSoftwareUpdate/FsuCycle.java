// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.FleetSoftwareUpdate.FsuCycleArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleState;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.FsuCycleApplyActionSchedule;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.FsuCycleBatchingStrategy;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.FsuCycleDiagnosticsCollection;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.FsuCycleGoalVersionDetails;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.FsuCycleNextActionToExecute;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.FsuCycleStageActionSchedule;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Fsu Cycle resource in Oracle Cloud Infrastructure Fleet Software Update service.
 * 
 * Creates a new Exadata Fleet Update Cycle.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.FleetSoftwareUpdate.FsuCycle;
 * import com.pulumi.oci.FleetSoftwareUpdate.FsuCycleArgs;
 * import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleGoalVersionDetailsArgs;
 * import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleApplyActionScheduleArgs;
 * import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleBatchingStrategyArgs;
 * import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleDiagnosticsCollectionArgs;
 * import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleStageActionScheduleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testFsuCycle = new FsuCycle("testFsuCycle", FsuCycleArgs.builder()
 *             .compartmentId(compartmentId)
 *             .fsuCollectionId(testFsuCollection.id())
 *             .goalVersionDetails(FsuCycleGoalVersionDetailsArgs.builder()
 *                 .type(fsuCycleGoalVersionDetailsType)
 *                 .homePolicy(fsuCycleGoalVersionDetailsHomePolicy)
 *                 .newHomePrefix(fsuCycleGoalVersionDetailsNewHomePrefix)
 *                 .softwareImageId(testImage.id())
 *                 .version(fsuCycleGoalVersionDetailsVersion)
 *                 .build())
 *             .type(fsuCycleType)
 *             .applyActionSchedule(FsuCycleApplyActionScheduleArgs.builder()
 *                 .timeToStart(fsuCycleApplyActionScheduleTimeToStart)
 *                 .type(fsuCycleApplyActionScheduleType)
 *                 .build())
 *             .batchingStrategy(FsuCycleBatchingStrategyArgs.builder()
 *                 .isForceRolling(fsuCycleBatchingStrategyIsForceRolling)
 *                 .isWaitForBatchResume(fsuCycleBatchingStrategyIsWaitForBatchResume)
 *                 .percentage(fsuCycleBatchingStrategyPercentage)
 *                 .type(fsuCycleBatchingStrategyType)
 *                 .build())
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .diagnosticsCollection(FsuCycleDiagnosticsCollectionArgs.builder()
 *                 .logCollectionMode(fsuCycleDiagnosticsCollectionLogCollectionMode)
 *                 .build())
 *             .displayName(fsuCycleDisplayName)
 *             .freeformTags(Map.of("bar-key", "value"))
 *             .isIgnoreMissingPatches(fsuCycleIsIgnoreMissingPatches)
 *             .isIgnorePatches(fsuCycleIsIgnorePatches)
 *             .isKeepPlacement(fsuCycleIsKeepPlacement)
 *             .maxDrainTimeoutInSeconds(fsuCycleMaxDrainTimeoutInSeconds)
 *             .stageActionSchedule(FsuCycleStageActionScheduleArgs.builder()
 *                 .timeToStart(fsuCycleStageActionScheduleTimeToStart)
 *                 .type(fsuCycleStageActionScheduleType)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * FsuCycles can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:FleetSoftwareUpdate/fsuCycle:FsuCycle test_fsu_cycle &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:FleetSoftwareUpdate/fsuCycle:FsuCycle")
public class FsuCycle extends com.pulumi.resources.CustomResource {
    /**
     * Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    @Export(name="applyActionSchedule", refs={FsuCycleApplyActionSchedule.class}, tree="[0]")
    private Output<FsuCycleApplyActionSchedule> applyActionSchedule;

    /**
     * @return Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    public Output<FsuCycleApplyActionSchedule> applyActionSchedule() {
        return this.applyActionSchedule;
    }
    /**
     * (Updatable) Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
     * 
     */
    @Export(name="batchingStrategy", refs={FsuCycleBatchingStrategy.class}, tree="[0]")
    private Output<FsuCycleBatchingStrategy> batchingStrategy;

    /**
     * @return (Updatable) Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
     * 
     */
    public Output<FsuCycleBatchingStrategy> batchingStrategy() {
        return this.batchingStrategy;
    }
    /**
     * Type of Collection this Exadata Fleet Update Cycle belongs to.
     * 
     */
    @Export(name="collectionType", refs={String.class}, tree="[0]")
    private Output<String> collectionType;

    /**
     * @return Type of Collection this Exadata Fleet Update Cycle belongs to.
     * 
     */
    public Output<String> collectionType() {
        return this.collectionType;
    }
    /**
     * (Updatable) Compartment Identifier.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
     * 
     */
    @Export(name="diagnosticsCollection", refs={FsuCycleDiagnosticsCollection.class}, tree="[0]")
    private Output<FsuCycleDiagnosticsCollection> diagnosticsCollection;

    /**
     * @return (Updatable) Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
     * 
     */
    public Output<FsuCycleDiagnosticsCollection> diagnosticsCollection() {
        return this.diagnosticsCollection;
    }
    /**
     * (Updatable) Exadata Fleet Update Cycle display name.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) Exadata Fleet Update Cycle display name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * OCID identifier for the Action that is currently in execution, if applicable.
     * 
     */
    @Export(name="executingFsuActionId", refs={String.class}, tree="[0]")
    private Output<String> executingFsuActionId;

    /**
     * @return OCID identifier for the Action that is currently in execution, if applicable.
     * 
     */
    public Output<String> executingFsuActionId() {
        return this.executingFsuActionId;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * OCID identifier for the Collection ID the Exadata Fleet Update Cycle will be assigned to.
     * 
     */
    @Export(name="fsuCollectionId", refs={String.class}, tree="[0]")
    private Output<String> fsuCollectionId;

    /**
     * @return OCID identifier for the Collection ID the Exadata Fleet Update Cycle will be assigned to.
     * 
     */
    public Output<String> fsuCollectionId() {
        return this.fsuCollectionId;
    }
    /**
     * (Updatable) Goal version or image details for the Exadata Fleet Update Cycle.
     * 
     */
    @Export(name="goalVersionDetails", refs={FsuCycleGoalVersionDetails.class}, tree="[0]")
    private Output<FsuCycleGoalVersionDetails> goalVersionDetails;

    /**
     * @return (Updatable) Goal version or image details for the Exadata Fleet Update Cycle.
     * 
     */
    public Output<FsuCycleGoalVersionDetails> goalVersionDetails() {
        return this.goalVersionDetails;
    }
    /**
     * (Updatable) List of patch IDs to ignore.
     * 
     */
    @Export(name="isIgnoreMissingPatches", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> isIgnoreMissingPatches;

    /**
     * @return (Updatable) List of patch IDs to ignore.
     * 
     */
    public Output<List<String>> isIgnoreMissingPatches() {
        return this.isIgnoreMissingPatches;
    }
    /**
     * (Updatable) Ignore all patches between the source and target homes during patching.
     * 
     */
    @Export(name="isIgnorePatches", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isIgnorePatches;

    /**
     * @return (Updatable) Ignore all patches between the source and target homes during patching.
     * 
     */
    public Output<Boolean> isIgnorePatches() {
        return this.isIgnorePatches;
    }
    /**
     * (Updatable) Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
     * 
     */
    @Export(name="isKeepPlacement", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isKeepPlacement;

    /**
     * @return (Updatable) Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
     * 
     */
    public Output<Boolean> isKeepPlacement() {
        return this.isKeepPlacement;
    }
    /**
     * The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
     * 
     */
    @Export(name="lastCompletedAction", refs={String.class}, tree="[0]")
    private Output<String> lastCompletedAction;

    /**
     * @return The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
     * 
     */
    public Output<String> lastCompletedAction() {
        return this.lastCompletedAction;
    }
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * (Updatable) Service drain timeout specified in seconds.
     * 
     */
    @Export(name="maxDrainTimeoutInSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxDrainTimeoutInSeconds;

    /**
     * @return (Updatable) Service drain timeout specified in seconds.
     * 
     */
    public Output<Integer> maxDrainTimeoutInSeconds() {
        return this.maxDrainTimeoutInSeconds;
    }
    /**
     * In this array all the possible actions will be listed. The first element is the suggested Action.
     * 
     */
    @Export(name="nextActionToExecutes", refs={List.class,FsuCycleNextActionToExecute.class}, tree="[0,1]")
    private Output<List<FsuCycleNextActionToExecute>> nextActionToExecutes;

    /**
     * @return In this array all the possible actions will be listed. The first element is the suggested Action.
     * 
     */
    public Output<List<FsuCycleNextActionToExecute>> nextActionToExecutes() {
        return this.nextActionToExecutes;
    }
    /**
     * Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    @Export(name="stageActionSchedule", refs={FsuCycleStageActionSchedule.class}, tree="[0]")
    private Output<FsuCycleStageActionSchedule> stageActionSchedule;

    /**
     * @return Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    public Output<FsuCycleStageActionSchedule> stageActionSchedule() {
        return this.stageActionSchedule;
    }
    /**
     * The current state of the Exadata Fleet Update Cycle.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the Exadata Fleet Update Cycle.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,String>> systemTags() {
        return this.systemTags;
    }
    /**
     * The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    @Export(name="timeFinished", refs={String.class}, tree="[0]")
    private Output<String> timeFinished;

    /**
     * @return The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    public Output<String> timeFinished() {
        return this.timeFinished;
    }
    /**
     * The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * (Updatable) Type of Exadata Fleet Update Cycle.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return (Updatable) Type of Exadata Fleet Update Cycle.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FsuCycle(java.lang.String name) {
        this(name, FsuCycleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FsuCycle(java.lang.String name, FsuCycleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FsuCycle(java.lang.String name, FsuCycleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:FleetSoftwareUpdate/fsuCycle:FsuCycle", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FsuCycle(java.lang.String name, Output<java.lang.String> id, @Nullable FsuCycleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:FleetSoftwareUpdate/fsuCycle:FsuCycle", name, state, makeResourceOptions(options, id), false);
    }

    private static FsuCycleArgs makeArgs(FsuCycleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FsuCycleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FsuCycle get(java.lang.String name, Output<java.lang.String> id, @Nullable FsuCycleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FsuCycle(name, id, state, options);
    }
}
