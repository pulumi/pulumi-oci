// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleApplyActionScheduleArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleBatchingStrategyArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleDiagnosticsCollectionArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleGoalVersionDetailsArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleStageActionScheduleArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleUpgradeDetailsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FsuCycleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FsuCycleArgs Empty = new FsuCycleArgs();

    /**
     * Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    @Import(name="applyActionSchedule")
    private @Nullable Output<FsuCycleApplyActionScheduleArgs> applyActionSchedule;

    /**
     * @return Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    public Optional<Output<FsuCycleApplyActionScheduleArgs>> applyActionSchedule() {
        return Optional.ofNullable(this.applyActionSchedule);
    }

    /**
     * (Updatable) Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
     * 
     */
    @Import(name="batchingStrategy")
    private @Nullable Output<FsuCycleBatchingStrategyArgs> batchingStrategy;

    /**
     * @return (Updatable) Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
     * 
     */
    public Optional<Output<FsuCycleBatchingStrategyArgs>> batchingStrategy() {
        return Optional.ofNullable(this.batchingStrategy);
    }

    /**
     * (Updatable) Compartment Identifier.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
     * 
     */
    @Import(name="diagnosticsCollection")
    private @Nullable Output<FsuCycleDiagnosticsCollectionArgs> diagnosticsCollection;

    /**
     * @return (Updatable) Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
     * 
     */
    public Optional<Output<FsuCycleDiagnosticsCollectionArgs>> diagnosticsCollection() {
        return Optional.ofNullable(this.diagnosticsCollection);
    }

    /**
     * (Updatable) Exadata Fleet Update Cycle display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Exadata Fleet Update Cycle display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * OCID identifier for the Collection ID the Exadata Fleet Update Cycle will be assigned to.
     * 
     */
    @Import(name="fsuCollectionId", required=true)
    private Output<String> fsuCollectionId;

    /**
     * @return OCID identifier for the Collection ID the Exadata Fleet Update Cycle will be assigned to.
     * 
     */
    public Output<String> fsuCollectionId() {
        return this.fsuCollectionId;
    }

    /**
     * (Updatable) Goal version or image details for the Exadata Fleet Update Cycle.
     * 
     */
    @Import(name="goalVersionDetails", required=true)
    private Output<FsuCycleGoalVersionDetailsArgs> goalVersionDetails;

    /**
     * @return (Updatable) Goal version or image details for the Exadata Fleet Update Cycle.
     * 
     */
    public Output<FsuCycleGoalVersionDetailsArgs> goalVersionDetails() {
        return this.goalVersionDetails;
    }

    /**
     * (Updatable) List of patch IDs to ignore.
     * 
     */
    @Import(name="isIgnoreMissingPatches")
    private @Nullable Output<List<String>> isIgnoreMissingPatches;

    /**
     * @return (Updatable) List of patch IDs to ignore.
     * 
     */
    public Optional<Output<List<String>>> isIgnoreMissingPatches() {
        return Optional.ofNullable(this.isIgnoreMissingPatches);
    }

    /**
     * (Updatable) Ignore all patches between the source and target homes during patching.
     * 
     */
    @Import(name="isIgnorePatches")
    private @Nullable Output<Boolean> isIgnorePatches;

    /**
     * @return (Updatable) Ignore all patches between the source and target homes during patching.
     * 
     */
    public Optional<Output<Boolean>> isIgnorePatches() {
        return Optional.ofNullable(this.isIgnorePatches);
    }

    /**
     * (Updatable) Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
     * 
     */
    @Import(name="isKeepPlacement")
    private @Nullable Output<Boolean> isKeepPlacement;

    /**
     * @return (Updatable) Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
     * 
     */
    public Optional<Output<Boolean>> isKeepPlacement() {
        return Optional.ofNullable(this.isKeepPlacement);
    }

    /**
     * (Updatable) Service drain timeout specified in seconds.
     * 
     */
    @Import(name="maxDrainTimeoutInSeconds")
    private @Nullable Output<Integer> maxDrainTimeoutInSeconds;

    /**
     * @return (Updatable) Service drain timeout specified in seconds.
     * 
     */
    public Optional<Output<Integer>> maxDrainTimeoutInSeconds() {
        return Optional.ofNullable(this.maxDrainTimeoutInSeconds);
    }

    /**
     * Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    @Import(name="stageActionSchedule")
    private @Nullable Output<FsuCycleStageActionScheduleArgs> stageActionSchedule;

    /**
     * @return Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    public Optional<Output<FsuCycleStageActionScheduleArgs>> stageActionSchedule() {
        return Optional.ofNullable(this.stageActionSchedule);
    }

    /**
     * (Updatable) Type of Exadata Fleet Update Cycle.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Type of Exadata Fleet Update Cycle.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * (Updatable) Details of supported upgrade options for DB or GI collection.
     * 
     */
    @Import(name="upgradeDetails")
    private @Nullable Output<FsuCycleUpgradeDetailsArgs> upgradeDetails;

    /**
     * @return (Updatable) Details of supported upgrade options for DB or GI collection.
     * 
     */
    public Optional<Output<FsuCycleUpgradeDetailsArgs>> upgradeDetails() {
        return Optional.ofNullable(this.upgradeDetails);
    }

    private FsuCycleArgs() {}

    private FsuCycleArgs(FsuCycleArgs $) {
        this.applyActionSchedule = $.applyActionSchedule;
        this.batchingStrategy = $.batchingStrategy;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.diagnosticsCollection = $.diagnosticsCollection;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.fsuCollectionId = $.fsuCollectionId;
        this.goalVersionDetails = $.goalVersionDetails;
        this.isIgnoreMissingPatches = $.isIgnoreMissingPatches;
        this.isIgnorePatches = $.isIgnorePatches;
        this.isKeepPlacement = $.isKeepPlacement;
        this.maxDrainTimeoutInSeconds = $.maxDrainTimeoutInSeconds;
        this.stageActionSchedule = $.stageActionSchedule;
        this.type = $.type;
        this.upgradeDetails = $.upgradeDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FsuCycleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FsuCycleArgs $;

        public Builder() {
            $ = new FsuCycleArgs();
        }

        public Builder(FsuCycleArgs defaults) {
            $ = new FsuCycleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applyActionSchedule Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
         * 
         * @return builder
         * 
         */
        public Builder applyActionSchedule(@Nullable Output<FsuCycleApplyActionScheduleArgs> applyActionSchedule) {
            $.applyActionSchedule = applyActionSchedule;
            return this;
        }

        /**
         * @param applyActionSchedule Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
         * 
         * @return builder
         * 
         */
        public Builder applyActionSchedule(FsuCycleApplyActionScheduleArgs applyActionSchedule) {
            return applyActionSchedule(Output.of(applyActionSchedule));
        }

        /**
         * @param batchingStrategy (Updatable) Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
         * 
         * @return builder
         * 
         */
        public Builder batchingStrategy(@Nullable Output<FsuCycleBatchingStrategyArgs> batchingStrategy) {
            $.batchingStrategy = batchingStrategy;
            return this;
        }

        /**
         * @param batchingStrategy (Updatable) Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
         * 
         * @return builder
         * 
         */
        public Builder batchingStrategy(FsuCycleBatchingStrategyArgs batchingStrategy) {
            return batchingStrategy(Output.of(batchingStrategy));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param diagnosticsCollection (Updatable) Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
         * 
         * @return builder
         * 
         */
        public Builder diagnosticsCollection(@Nullable Output<FsuCycleDiagnosticsCollectionArgs> diagnosticsCollection) {
            $.diagnosticsCollection = diagnosticsCollection;
            return this;
        }

        /**
         * @param diagnosticsCollection (Updatable) Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
         * 
         * @return builder
         * 
         */
        public Builder diagnosticsCollection(FsuCycleDiagnosticsCollectionArgs diagnosticsCollection) {
            return diagnosticsCollection(Output.of(diagnosticsCollection));
        }

        /**
         * @param displayName (Updatable) Exadata Fleet Update Cycle display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Exadata Fleet Update Cycle display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param fsuCollectionId OCID identifier for the Collection ID the Exadata Fleet Update Cycle will be assigned to.
         * 
         * @return builder
         * 
         */
        public Builder fsuCollectionId(Output<String> fsuCollectionId) {
            $.fsuCollectionId = fsuCollectionId;
            return this;
        }

        /**
         * @param fsuCollectionId OCID identifier for the Collection ID the Exadata Fleet Update Cycle will be assigned to.
         * 
         * @return builder
         * 
         */
        public Builder fsuCollectionId(String fsuCollectionId) {
            return fsuCollectionId(Output.of(fsuCollectionId));
        }

        /**
         * @param goalVersionDetails (Updatable) Goal version or image details for the Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder goalVersionDetails(Output<FsuCycleGoalVersionDetailsArgs> goalVersionDetails) {
            $.goalVersionDetails = goalVersionDetails;
            return this;
        }

        /**
         * @param goalVersionDetails (Updatable) Goal version or image details for the Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder goalVersionDetails(FsuCycleGoalVersionDetailsArgs goalVersionDetails) {
            return goalVersionDetails(Output.of(goalVersionDetails));
        }

        /**
         * @param isIgnoreMissingPatches (Updatable) List of patch IDs to ignore.
         * 
         * @return builder
         * 
         */
        public Builder isIgnoreMissingPatches(@Nullable Output<List<String>> isIgnoreMissingPatches) {
            $.isIgnoreMissingPatches = isIgnoreMissingPatches;
            return this;
        }

        /**
         * @param isIgnoreMissingPatches (Updatable) List of patch IDs to ignore.
         * 
         * @return builder
         * 
         */
        public Builder isIgnoreMissingPatches(List<String> isIgnoreMissingPatches) {
            return isIgnoreMissingPatches(Output.of(isIgnoreMissingPatches));
        }

        /**
         * @param isIgnoreMissingPatches (Updatable) List of patch IDs to ignore.
         * 
         * @return builder
         * 
         */
        public Builder isIgnoreMissingPatches(String... isIgnoreMissingPatches) {
            return isIgnoreMissingPatches(List.of(isIgnoreMissingPatches));
        }

        /**
         * @param isIgnorePatches (Updatable) Ignore all patches between the source and target homes during patching.
         * 
         * @return builder
         * 
         */
        public Builder isIgnorePatches(@Nullable Output<Boolean> isIgnorePatches) {
            $.isIgnorePatches = isIgnorePatches;
            return this;
        }

        /**
         * @param isIgnorePatches (Updatable) Ignore all patches between the source and target homes during patching.
         * 
         * @return builder
         * 
         */
        public Builder isIgnorePatches(Boolean isIgnorePatches) {
            return isIgnorePatches(Output.of(isIgnorePatches));
        }

        /**
         * @param isKeepPlacement (Updatable) Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
         * 
         * @return builder
         * 
         */
        public Builder isKeepPlacement(@Nullable Output<Boolean> isKeepPlacement) {
            $.isKeepPlacement = isKeepPlacement;
            return this;
        }

        /**
         * @param isKeepPlacement (Updatable) Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
         * 
         * @return builder
         * 
         */
        public Builder isKeepPlacement(Boolean isKeepPlacement) {
            return isKeepPlacement(Output.of(isKeepPlacement));
        }

        /**
         * @param maxDrainTimeoutInSeconds (Updatable) Service drain timeout specified in seconds.
         * 
         * @return builder
         * 
         */
        public Builder maxDrainTimeoutInSeconds(@Nullable Output<Integer> maxDrainTimeoutInSeconds) {
            $.maxDrainTimeoutInSeconds = maxDrainTimeoutInSeconds;
            return this;
        }

        /**
         * @param maxDrainTimeoutInSeconds (Updatable) Service drain timeout specified in seconds.
         * 
         * @return builder
         * 
         */
        public Builder maxDrainTimeoutInSeconds(Integer maxDrainTimeoutInSeconds) {
            return maxDrainTimeoutInSeconds(Output.of(maxDrainTimeoutInSeconds));
        }

        /**
         * @param stageActionSchedule Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
         * 
         * @return builder
         * 
         */
        public Builder stageActionSchedule(@Nullable Output<FsuCycleStageActionScheduleArgs> stageActionSchedule) {
            $.stageActionSchedule = stageActionSchedule;
            return this;
        }

        /**
         * @param stageActionSchedule Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
         * 
         * @return builder
         * 
         */
        public Builder stageActionSchedule(FsuCycleStageActionScheduleArgs stageActionSchedule) {
            return stageActionSchedule(Output.of(stageActionSchedule));
        }

        /**
         * @param type (Updatable) Type of Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Type of Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param upgradeDetails (Updatable) Details of supported upgrade options for DB or GI collection.
         * 
         * @return builder
         * 
         */
        public Builder upgradeDetails(@Nullable Output<FsuCycleUpgradeDetailsArgs> upgradeDetails) {
            $.upgradeDetails = upgradeDetails;
            return this;
        }

        /**
         * @param upgradeDetails (Updatable) Details of supported upgrade options for DB or GI collection.
         * 
         * @return builder
         * 
         */
        public Builder upgradeDetails(FsuCycleUpgradeDetailsArgs upgradeDetails) {
            return upgradeDetails(Output.of(upgradeDetails));
        }

        public FsuCycleArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("FsuCycleArgs", "compartmentId");
            }
            if ($.fsuCollectionId == null) {
                throw new MissingRequiredPropertyException("FsuCycleArgs", "fsuCollectionId");
            }
            if ($.goalVersionDetails == null) {
                throw new MissingRequiredPropertyException("FsuCycleArgs", "goalVersionDetails");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("FsuCycleArgs", "type");
            }
            return $;
        }
    }

}
