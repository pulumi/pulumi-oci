// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCollectionFleetDiscoveryFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FsuCollectionFleetDiscoveryArgs extends com.pulumi.resources.ResourceArgs {

    public static final FsuCollectionFleetDiscoveryArgs Empty = new FsuCollectionFleetDiscoveryArgs();

    @Import(name="filters")
    private @Nullable Output<List<FsuCollectionFleetDiscoveryFilterArgs>> filters;

    public Optional<Output<List<FsuCollectionFleetDiscoveryFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="fsuDiscoveryId")
    private @Nullable Output<String> fsuDiscoveryId;

    public Optional<Output<String>> fsuDiscoveryId() {
        return Optional.ofNullable(this.fsuDiscoveryId);
    }

    @Import(name="query")
    private @Nullable Output<String> query;

    public Optional<Output<String>> query() {
        return Optional.ofNullable(this.query);
    }

    @Import(name="strategy", required=true)
    private Output<String> strategy;

    public Output<String> strategy() {
        return this.strategy;
    }

    @Import(name="targets")
    private @Nullable Output<List<String>> targets;

    public Optional<Output<List<String>>> targets() {
        return Optional.ofNullable(this.targets);
    }

    private FsuCollectionFleetDiscoveryArgs() {}

    private FsuCollectionFleetDiscoveryArgs(FsuCollectionFleetDiscoveryArgs $) {
        this.filters = $.filters;
        this.fsuDiscoveryId = $.fsuDiscoveryId;
        this.query = $.query;
        this.strategy = $.strategy;
        this.targets = $.targets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FsuCollectionFleetDiscoveryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FsuCollectionFleetDiscoveryArgs $;

        public Builder() {
            $ = new FsuCollectionFleetDiscoveryArgs();
        }

        public Builder(FsuCollectionFleetDiscoveryArgs defaults) {
            $ = new FsuCollectionFleetDiscoveryArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<FsuCollectionFleetDiscoveryFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<FsuCollectionFleetDiscoveryFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(FsuCollectionFleetDiscoveryFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder fsuDiscoveryId(@Nullable Output<String> fsuDiscoveryId) {
            $.fsuDiscoveryId = fsuDiscoveryId;
            return this;
        }

        public Builder fsuDiscoveryId(String fsuDiscoveryId) {
            return fsuDiscoveryId(Output.of(fsuDiscoveryId));
        }

        public Builder query(@Nullable Output<String> query) {
            $.query = query;
            return this;
        }

        public Builder query(String query) {
            return query(Output.of(query));
        }

        public Builder strategy(Output<String> strategy) {
            $.strategy = strategy;
            return this;
        }

        public Builder strategy(String strategy) {
            return strategy(Output.of(strategy));
        }

        public Builder targets(@Nullable Output<List<String>> targets) {
            $.targets = targets;
            return this;
        }

        public Builder targets(List<String> targets) {
            return targets(Output.of(targets));
        }

        public Builder targets(String... targets) {
            return targets(List.of(targets));
        }

        public FsuCollectionFleetDiscoveryArgs build() {
            if ($.strategy == null) {
                throw new MissingRequiredPropertyException("FsuCollectionFleetDiscoveryArgs", "strategy");
            }
            return $;
        }
    }

}
