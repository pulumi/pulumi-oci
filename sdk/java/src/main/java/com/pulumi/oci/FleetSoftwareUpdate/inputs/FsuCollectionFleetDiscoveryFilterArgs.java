// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCollectionFleetDiscoveryFilterTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FsuCollectionFleetDiscoveryFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final FsuCollectionFleetDiscoveryFilterArgs Empty = new FsuCollectionFleetDiscoveryFilterArgs();

    @Import(name="entityType")
    private @Nullable Output<String> entityType;

    public Optional<Output<String>> entityType() {
        return Optional.ofNullable(this.entityType);
    }

    @Import(name="identifiers")
    private @Nullable Output<List<String>> identifiers;

    public Optional<Output<List<String>>> identifiers() {
        return Optional.ofNullable(this.identifiers);
    }

    @Import(name="mode")
    private @Nullable Output<String> mode;

    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="names")
    private @Nullable Output<List<String>> names;

    public Optional<Output<List<String>>> names() {
        return Optional.ofNullable(this.names);
    }

    @Import(name="operator")
    private @Nullable Output<String> operator;

    public Optional<Output<String>> operator() {
        return Optional.ofNullable(this.operator);
    }

    @Import(name="tags")
    private @Nullable Output<List<FsuCollectionFleetDiscoveryFilterTagArgs>> tags;

    public Optional<Output<List<FsuCollectionFleetDiscoveryFilterTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="versions")
    private @Nullable Output<List<String>> versions;

    public Optional<Output<List<String>>> versions() {
        return Optional.ofNullable(this.versions);
    }

    private FsuCollectionFleetDiscoveryFilterArgs() {}

    private FsuCollectionFleetDiscoveryFilterArgs(FsuCollectionFleetDiscoveryFilterArgs $) {
        this.entityType = $.entityType;
        this.identifiers = $.identifiers;
        this.mode = $.mode;
        this.names = $.names;
        this.operator = $.operator;
        this.tags = $.tags;
        this.type = $.type;
        this.versions = $.versions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FsuCollectionFleetDiscoveryFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FsuCollectionFleetDiscoveryFilterArgs $;

        public Builder() {
            $ = new FsuCollectionFleetDiscoveryFilterArgs();
        }

        public Builder(FsuCollectionFleetDiscoveryFilterArgs defaults) {
            $ = new FsuCollectionFleetDiscoveryFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder entityType(@Nullable Output<String> entityType) {
            $.entityType = entityType;
            return this;
        }

        public Builder entityType(String entityType) {
            return entityType(Output.of(entityType));
        }

        public Builder identifiers(@Nullable Output<List<String>> identifiers) {
            $.identifiers = identifiers;
            return this;
        }

        public Builder identifiers(List<String> identifiers) {
            return identifiers(Output.of(identifiers));
        }

        public Builder identifiers(String... identifiers) {
            return identifiers(List.of(identifiers));
        }

        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public Builder names(@Nullable Output<List<String>> names) {
            $.names = names;
            return this;
        }

        public Builder names(List<String> names) {
            return names(Output.of(names));
        }

        public Builder names(String... names) {
            return names(List.of(names));
        }

        public Builder operator(@Nullable Output<String> operator) {
            $.operator = operator;
            return this;
        }

        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        public Builder tags(@Nullable Output<List<FsuCollectionFleetDiscoveryFilterTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<FsuCollectionFleetDiscoveryFilterTagArgs> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(FsuCollectionFleetDiscoveryFilterTagArgs... tags) {
            return tags(List.of(tags));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder versions(@Nullable Output<List<String>> versions) {
            $.versions = versions;
            return this;
        }

        public Builder versions(List<String> versions) {
            return versions(Output.of(versions));
        }

        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }

        public FsuCollectionFleetDiscoveryFilterArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("FsuCollectionFleetDiscoveryFilterArgs", "type");
            }
            return $;
        }
    }

}
