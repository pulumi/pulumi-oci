// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FsuCycleDiagnosticsCollectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FsuCycleDiagnosticsCollectionArgs Empty = new FsuCycleDiagnosticsCollectionArgs();

    /**
     * (Updatable) Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
     * 
     */
    @Import(name="logCollectionMode")
    private @Nullable Output<String> logCollectionMode;

    /**
     * @return (Updatable) Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
     * 
     */
    public Optional<Output<String>> logCollectionMode() {
        return Optional.ofNullable(this.logCollectionMode);
    }

    private FsuCycleDiagnosticsCollectionArgs() {}

    private FsuCycleDiagnosticsCollectionArgs(FsuCycleDiagnosticsCollectionArgs $) {
        this.logCollectionMode = $.logCollectionMode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FsuCycleDiagnosticsCollectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FsuCycleDiagnosticsCollectionArgs $;

        public Builder() {
            $ = new FsuCycleDiagnosticsCollectionArgs();
        }

        public Builder(FsuCycleDiagnosticsCollectionArgs defaults) {
            $ = new FsuCycleDiagnosticsCollectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logCollectionMode (Updatable) Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
         * 
         * @return builder
         * 
         */
        public Builder logCollectionMode(@Nullable Output<String> logCollectionMode) {
            $.logCollectionMode = logCollectionMode;
            return this;
        }

        /**
         * @param logCollectionMode (Updatable) Enable incident logs and trace collection.  Allow Oracle to collect incident logs and traces to enable fault diagnosis and issue resolution according to the selected mode.
         * 
         * @return builder
         * 
         */
        public Builder logCollectionMode(String logCollectionMode) {
            return logCollectionMode(Output.of(logCollectionMode));
        }

        public FsuCycleDiagnosticsCollectionArgs build() {
            return $;
        }
    }

}
