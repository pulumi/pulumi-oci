// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleApplyActionScheduleArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleBatchingStrategyArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleDiagnosticsCollectionArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleGoalVersionDetailsArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleNextActionToExecuteArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleStageActionScheduleArgs;
import com.pulumi.oci.FleetSoftwareUpdate.inputs.FsuCycleUpgradeDetailsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FsuCycleState extends com.pulumi.resources.ResourceArgs {

    public static final FsuCycleState Empty = new FsuCycleState();

    /**
     * Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    @Import(name="applyActionSchedule")
    private @Nullable Output<FsuCycleApplyActionScheduleArgs> applyActionSchedule;

    /**
     * @return Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    public Optional<Output<FsuCycleApplyActionScheduleArgs>> applyActionSchedule() {
        return Optional.ofNullable(this.applyActionSchedule);
    }

    /**
     * (Updatable) Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
     * 
     */
    @Import(name="batchingStrategy")
    private @Nullable Output<FsuCycleBatchingStrategyArgs> batchingStrategy;

    /**
     * @return (Updatable) Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
     * 
     */
    public Optional<Output<FsuCycleBatchingStrategyArgs>> batchingStrategy() {
        return Optional.ofNullable(this.batchingStrategy);
    }

    /**
     * Type of Exadata Fleet Update collection being upgraded.
     * 
     */
    @Import(name="collectionType")
    private @Nullable Output<String> collectionType;

    /**
     * @return Type of Exadata Fleet Update collection being upgraded.
     * 
     */
    public Optional<Output<String>> collectionType() {
        return Optional.ofNullable(this.collectionType);
    }

    /**
     * (Updatable) Compartment Identifier.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
     * 
     */
    @Import(name="diagnosticsCollection")
    private @Nullable Output<FsuCycleDiagnosticsCollectionArgs> diagnosticsCollection;

    /**
     * @return (Updatable) Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
     * 
     */
    public Optional<Output<FsuCycleDiagnosticsCollectionArgs>> diagnosticsCollection() {
        return Optional.ofNullable(this.diagnosticsCollection);
    }

    /**
     * (Updatable) Exadata Fleet Update Cycle display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Exadata Fleet Update Cycle display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * OCID identifier for the Action that is currently in execution, if applicable.
     * 
     */
    @Import(name="executingFsuActionId")
    private @Nullable Output<String> executingFsuActionId;

    /**
     * @return OCID identifier for the Action that is currently in execution, if applicable.
     * 
     */
    public Optional<Output<String>> executingFsuActionId() {
        return Optional.ofNullable(this.executingFsuActionId);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * OCID identifier for the Collection ID the Exadata Fleet Update Cycle will be assigned to.
     * 
     */
    @Import(name="fsuCollectionId")
    private @Nullable Output<String> fsuCollectionId;

    /**
     * @return OCID identifier for the Collection ID the Exadata Fleet Update Cycle will be assigned to.
     * 
     */
    public Optional<Output<String>> fsuCollectionId() {
        return Optional.ofNullable(this.fsuCollectionId);
    }

    /**
     * (Updatable) Goal version or image details for the Exadata Fleet Update Cycle.
     * 
     */
    @Import(name="goalVersionDetails")
    private @Nullable Output<FsuCycleGoalVersionDetailsArgs> goalVersionDetails;

    /**
     * @return (Updatable) Goal version or image details for the Exadata Fleet Update Cycle.
     * 
     */
    public Optional<Output<FsuCycleGoalVersionDetailsArgs>> goalVersionDetails() {
        return Optional.ofNullable(this.goalVersionDetails);
    }

    /**
     * (Updatable) List of patch IDs to ignore.
     * 
     */
    @Import(name="isIgnoreMissingPatches")
    private @Nullable Output<List<String>> isIgnoreMissingPatches;

    /**
     * @return (Updatable) List of patch IDs to ignore.
     * 
     */
    public Optional<Output<List<String>>> isIgnoreMissingPatches() {
        return Optional.ofNullable(this.isIgnoreMissingPatches);
    }

    /**
     * (Updatable) Ignore all patches between the source and target homes during patching.
     * 
     */
    @Import(name="isIgnorePatches")
    private @Nullable Output<Boolean> isIgnorePatches;

    /**
     * @return (Updatable) Ignore all patches between the source and target homes during patching.
     * 
     */
    public Optional<Output<Boolean>> isIgnorePatches() {
        return Optional.ofNullable(this.isIgnorePatches);
    }

    /**
     * (Updatable) Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
     * 
     */
    @Import(name="isKeepPlacement")
    private @Nullable Output<Boolean> isKeepPlacement;

    /**
     * @return (Updatable) Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
     * 
     */
    public Optional<Output<Boolean>> isKeepPlacement() {
        return Optional.ofNullable(this.isKeepPlacement);
    }

    /**
     * The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
     * 
     */
    @Import(name="lastCompletedAction")
    private @Nullable Output<String> lastCompletedAction;

    /**
     * @return The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
     * 
     */
    public Optional<Output<String>> lastCompletedAction() {
        return Optional.ofNullable(this.lastCompletedAction);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the latest Action  in the Exadata Fleet Update Cycle.
     * 
     */
    @Import(name="lastCompletedActionId")
    private @Nullable Output<String> lastCompletedActionId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the latest Action  in the Exadata Fleet Update Cycle.
     * 
     */
    public Optional<Output<String>> lastCompletedActionId() {
        return Optional.ofNullable(this.lastCompletedActionId);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * (Updatable) Service drain timeout specified in seconds.
     * 
     */
    @Import(name="maxDrainTimeoutInSeconds")
    private @Nullable Output<Integer> maxDrainTimeoutInSeconds;

    /**
     * @return (Updatable) Service drain timeout specified in seconds.
     * 
     */
    public Optional<Output<Integer>> maxDrainTimeoutInSeconds() {
        return Optional.ofNullable(this.maxDrainTimeoutInSeconds);
    }

    /**
     * In this array all the possible actions will be listed. The first element is the suggested Action.
     * 
     */
    @Import(name="nextActionToExecutes")
    private @Nullable Output<List<FsuCycleNextActionToExecuteArgs>> nextActionToExecutes;

    /**
     * @return In this array all the possible actions will be listed. The first element is the suggested Action.
     * 
     */
    public Optional<Output<List<FsuCycleNextActionToExecuteArgs>>> nextActionToExecutes() {
        return Optional.ofNullable(this.nextActionToExecutes);
    }

    /**
     * Current rollback cycle state if rollback maintenance cycle action has been attempted. No value would indicate that the Cycle has not run a rollback maintenance cycle action before.
     * 
     */
    @Import(name="rollbackCycleState")
    private @Nullable Output<String> rollbackCycleState;

    /**
     * @return Current rollback cycle state if rollback maintenance cycle action has been attempted. No value would indicate that the Cycle has not run a rollback maintenance cycle action before.
     * 
     */
    public Optional<Output<String>> rollbackCycleState() {
        return Optional.ofNullable(this.rollbackCycleState);
    }

    /**
     * Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    @Import(name="stageActionSchedule")
    private @Nullable Output<FsuCycleStageActionScheduleArgs> stageActionSchedule;

    /**
     * @return Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
     * 
     */
    public Optional<Output<FsuCycleStageActionScheduleArgs>> stageActionSchedule() {
        return Optional.ofNullable(this.stageActionSchedule);
    }

    /**
     * The current state of the Exadata Fleet Update Cycle.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the Exadata Fleet Update Cycle.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    @Import(name="timeFinished")
    private @Nullable Output<String> timeFinished;

    /**
     * @return The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    public Optional<Output<String>> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }

    /**
     * The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * (Updatable) Type of Exadata Fleet Update Cycle.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return (Updatable) Type of Exadata Fleet Update Cycle.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * (Updatable) Details of supported upgrade options for DB or GI collection.
     * 
     */
    @Import(name="upgradeDetails")
    private @Nullable Output<FsuCycleUpgradeDetailsArgs> upgradeDetails;

    /**
     * @return (Updatable) Details of supported upgrade options for DB or GI collection.
     * 
     */
    public Optional<Output<FsuCycleUpgradeDetailsArgs>> upgradeDetails() {
        return Optional.ofNullable(this.upgradeDetails);
    }

    private FsuCycleState() {}

    private FsuCycleState(FsuCycleState $) {
        this.applyActionSchedule = $.applyActionSchedule;
        this.batchingStrategy = $.batchingStrategy;
        this.collectionType = $.collectionType;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.diagnosticsCollection = $.diagnosticsCollection;
        this.displayName = $.displayName;
        this.executingFsuActionId = $.executingFsuActionId;
        this.freeformTags = $.freeformTags;
        this.fsuCollectionId = $.fsuCollectionId;
        this.goalVersionDetails = $.goalVersionDetails;
        this.isIgnoreMissingPatches = $.isIgnoreMissingPatches;
        this.isIgnorePatches = $.isIgnorePatches;
        this.isKeepPlacement = $.isKeepPlacement;
        this.lastCompletedAction = $.lastCompletedAction;
        this.lastCompletedActionId = $.lastCompletedActionId;
        this.lifecycleDetails = $.lifecycleDetails;
        this.maxDrainTimeoutInSeconds = $.maxDrainTimeoutInSeconds;
        this.nextActionToExecutes = $.nextActionToExecutes;
        this.rollbackCycleState = $.rollbackCycleState;
        this.stageActionSchedule = $.stageActionSchedule;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeFinished = $.timeFinished;
        this.timeUpdated = $.timeUpdated;
        this.type = $.type;
        this.upgradeDetails = $.upgradeDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FsuCycleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FsuCycleState $;

        public Builder() {
            $ = new FsuCycleState();
        }

        public Builder(FsuCycleState defaults) {
            $ = new FsuCycleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applyActionSchedule Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
         * 
         * @return builder
         * 
         */
        public Builder applyActionSchedule(@Nullable Output<FsuCycleApplyActionScheduleArgs> applyActionSchedule) {
            $.applyActionSchedule = applyActionSchedule;
            return this;
        }

        /**
         * @param applyActionSchedule Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
         * 
         * @return builder
         * 
         */
        public Builder applyActionSchedule(FsuCycleApplyActionScheduleArgs applyActionSchedule) {
            return applyActionSchedule(Output.of(applyActionSchedule));
        }

        /**
         * @param batchingStrategy (Updatable) Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
         * 
         * @return builder
         * 
         */
        public Builder batchingStrategy(@Nullable Output<FsuCycleBatchingStrategyArgs> batchingStrategy) {
            $.batchingStrategy = batchingStrategy;
            return this;
        }

        /**
         * @param batchingStrategy (Updatable) Batching strategy details to use during PRECHECK and APPLY Cycle Actions.
         * 
         * @return builder
         * 
         */
        public Builder batchingStrategy(FsuCycleBatchingStrategyArgs batchingStrategy) {
            return batchingStrategy(Output.of(batchingStrategy));
        }

        /**
         * @param collectionType Type of Exadata Fleet Update collection being upgraded.
         * 
         * @return builder
         * 
         */
        public Builder collectionType(@Nullable Output<String> collectionType) {
            $.collectionType = collectionType;
            return this;
        }

        /**
         * @param collectionType Type of Exadata Fleet Update collection being upgraded.
         * 
         * @return builder
         * 
         */
        public Builder collectionType(String collectionType) {
            return collectionType(Output.of(collectionType));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param diagnosticsCollection (Updatable) Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
         * 
         * @return builder
         * 
         */
        public Builder diagnosticsCollection(@Nullable Output<FsuCycleDiagnosticsCollectionArgs> diagnosticsCollection) {
            $.diagnosticsCollection = diagnosticsCollection;
            return this;
        }

        /**
         * @param diagnosticsCollection (Updatable) Details to configure diagnostics collection for targets affected by this Exadata Fleet Update Maintenance Cycle.
         * 
         * @return builder
         * 
         */
        public Builder diagnosticsCollection(FsuCycleDiagnosticsCollectionArgs diagnosticsCollection) {
            return diagnosticsCollection(Output.of(diagnosticsCollection));
        }

        /**
         * @param displayName (Updatable) Exadata Fleet Update Cycle display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Exadata Fleet Update Cycle display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param executingFsuActionId OCID identifier for the Action that is currently in execution, if applicable.
         * 
         * @return builder
         * 
         */
        public Builder executingFsuActionId(@Nullable Output<String> executingFsuActionId) {
            $.executingFsuActionId = executingFsuActionId;
            return this;
        }

        /**
         * @param executingFsuActionId OCID identifier for the Action that is currently in execution, if applicable.
         * 
         * @return builder
         * 
         */
        public Builder executingFsuActionId(String executingFsuActionId) {
            return executingFsuActionId(Output.of(executingFsuActionId));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param fsuCollectionId OCID identifier for the Collection ID the Exadata Fleet Update Cycle will be assigned to.
         * 
         * @return builder
         * 
         */
        public Builder fsuCollectionId(@Nullable Output<String> fsuCollectionId) {
            $.fsuCollectionId = fsuCollectionId;
            return this;
        }

        /**
         * @param fsuCollectionId OCID identifier for the Collection ID the Exadata Fleet Update Cycle will be assigned to.
         * 
         * @return builder
         * 
         */
        public Builder fsuCollectionId(String fsuCollectionId) {
            return fsuCollectionId(Output.of(fsuCollectionId));
        }

        /**
         * @param goalVersionDetails (Updatable) Goal version or image details for the Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder goalVersionDetails(@Nullable Output<FsuCycleGoalVersionDetailsArgs> goalVersionDetails) {
            $.goalVersionDetails = goalVersionDetails;
            return this;
        }

        /**
         * @param goalVersionDetails (Updatable) Goal version or image details for the Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder goalVersionDetails(FsuCycleGoalVersionDetailsArgs goalVersionDetails) {
            return goalVersionDetails(Output.of(goalVersionDetails));
        }

        /**
         * @param isIgnoreMissingPatches (Updatable) List of patch IDs to ignore.
         * 
         * @return builder
         * 
         */
        public Builder isIgnoreMissingPatches(@Nullable Output<List<String>> isIgnoreMissingPatches) {
            $.isIgnoreMissingPatches = isIgnoreMissingPatches;
            return this;
        }

        /**
         * @param isIgnoreMissingPatches (Updatable) List of patch IDs to ignore.
         * 
         * @return builder
         * 
         */
        public Builder isIgnoreMissingPatches(List<String> isIgnoreMissingPatches) {
            return isIgnoreMissingPatches(Output.of(isIgnoreMissingPatches));
        }

        /**
         * @param isIgnoreMissingPatches (Updatable) List of patch IDs to ignore.
         * 
         * @return builder
         * 
         */
        public Builder isIgnoreMissingPatches(String... isIgnoreMissingPatches) {
            return isIgnoreMissingPatches(List.of(isIgnoreMissingPatches));
        }

        /**
         * @param isIgnorePatches (Updatable) Ignore all patches between the source and target homes during patching.
         * 
         * @return builder
         * 
         */
        public Builder isIgnorePatches(@Nullable Output<Boolean> isIgnorePatches) {
            $.isIgnorePatches = isIgnorePatches;
            return this;
        }

        /**
         * @param isIgnorePatches (Updatable) Ignore all patches between the source and target homes during patching.
         * 
         * @return builder
         * 
         */
        public Builder isIgnorePatches(Boolean isIgnorePatches) {
            return isIgnorePatches(Output.of(isIgnorePatches));
        }

        /**
         * @param isKeepPlacement (Updatable) Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
         * 
         * @return builder
         * 
         */
        public Builder isKeepPlacement(@Nullable Output<Boolean> isKeepPlacement) {
            $.isKeepPlacement = isKeepPlacement;
            return this;
        }

        /**
         * @param isKeepPlacement (Updatable) Ensure that services of administrator-managed Oracle RAC or Oracle RAC One databases are running on the same instances before and after the move operation.
         * 
         * @return builder
         * 
         */
        public Builder isKeepPlacement(Boolean isKeepPlacement) {
            return isKeepPlacement(Output.of(isKeepPlacement));
        }

        /**
         * @param lastCompletedAction The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
         * 
         * @return builder
         * 
         */
        public Builder lastCompletedAction(@Nullable Output<String> lastCompletedAction) {
            $.lastCompletedAction = lastCompletedAction;
            return this;
        }

        /**
         * @param lastCompletedAction The latest Action type that was completed in the Exadata Fleet Update Cycle. No value would indicate that the Cycle has not completed any Action yet.
         * 
         * @return builder
         * 
         */
        public Builder lastCompletedAction(String lastCompletedAction) {
            return lastCompletedAction(Output.of(lastCompletedAction));
        }

        /**
         * @param lastCompletedActionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the latest Action  in the Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder lastCompletedActionId(@Nullable Output<String> lastCompletedActionId) {
            $.lastCompletedActionId = lastCompletedActionId;
            return this;
        }

        /**
         * @param lastCompletedActionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the latest Action  in the Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder lastCompletedActionId(String lastCompletedActionId) {
            return lastCompletedActionId(Output.of(lastCompletedActionId));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param maxDrainTimeoutInSeconds (Updatable) Service drain timeout specified in seconds.
         * 
         * @return builder
         * 
         */
        public Builder maxDrainTimeoutInSeconds(@Nullable Output<Integer> maxDrainTimeoutInSeconds) {
            $.maxDrainTimeoutInSeconds = maxDrainTimeoutInSeconds;
            return this;
        }

        /**
         * @param maxDrainTimeoutInSeconds (Updatable) Service drain timeout specified in seconds.
         * 
         * @return builder
         * 
         */
        public Builder maxDrainTimeoutInSeconds(Integer maxDrainTimeoutInSeconds) {
            return maxDrainTimeoutInSeconds(Output.of(maxDrainTimeoutInSeconds));
        }

        /**
         * @param nextActionToExecutes In this array all the possible actions will be listed. The first element is the suggested Action.
         * 
         * @return builder
         * 
         */
        public Builder nextActionToExecutes(@Nullable Output<List<FsuCycleNextActionToExecuteArgs>> nextActionToExecutes) {
            $.nextActionToExecutes = nextActionToExecutes;
            return this;
        }

        /**
         * @param nextActionToExecutes In this array all the possible actions will be listed. The first element is the suggested Action.
         * 
         * @return builder
         * 
         */
        public Builder nextActionToExecutes(List<FsuCycleNextActionToExecuteArgs> nextActionToExecutes) {
            return nextActionToExecutes(Output.of(nextActionToExecutes));
        }

        /**
         * @param nextActionToExecutes In this array all the possible actions will be listed. The first element is the suggested Action.
         * 
         * @return builder
         * 
         */
        public Builder nextActionToExecutes(FsuCycleNextActionToExecuteArgs... nextActionToExecutes) {
            return nextActionToExecutes(List.of(nextActionToExecutes));
        }

        /**
         * @param rollbackCycleState Current rollback cycle state if rollback maintenance cycle action has been attempted. No value would indicate that the Cycle has not run a rollback maintenance cycle action before.
         * 
         * @return builder
         * 
         */
        public Builder rollbackCycleState(@Nullable Output<String> rollbackCycleState) {
            $.rollbackCycleState = rollbackCycleState;
            return this;
        }

        /**
         * @param rollbackCycleState Current rollback cycle state if rollback maintenance cycle action has been attempted. No value would indicate that the Cycle has not run a rollback maintenance cycle action before.
         * 
         * @return builder
         * 
         */
        public Builder rollbackCycleState(String rollbackCycleState) {
            return rollbackCycleState(Output.of(rollbackCycleState));
        }

        /**
         * @param stageActionSchedule Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
         * 
         * @return builder
         * 
         */
        public Builder stageActionSchedule(@Nullable Output<FsuCycleStageActionScheduleArgs> stageActionSchedule) {
            $.stageActionSchedule = stageActionSchedule;
            return this;
        }

        /**
         * @param stageActionSchedule Scheduling related details for the Exadata Fleet Update Action during create operations. The specified time should not conflict with existing Exadata Infrastructure maintenance windows. Null scheduleDetails for Stage and Apply Actions in Exadata Fleet Update Cycle creation would not create Actions. Null scheduleDetails for CreateAction would execute the Exadata Fleet Update Action as soon as possible.
         * 
         * @return builder
         * 
         */
        public Builder stageActionSchedule(FsuCycleStageActionScheduleArgs stageActionSchedule) {
            return stageActionSchedule(Output.of(stageActionSchedule));
        }

        /**
         * @param state The current state of the Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the Exadata Fleet Update Cycle was created, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeFinished The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeFinished(@Nullable Output<String> timeFinished) {
            $.timeFinished = timeFinished;
            return this;
        }

        /**
         * @param timeFinished The date and time the Exadata Fleet Update Cycle was finished, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeFinished(String timeFinished) {
            return timeFinished(Output.of(timeFinished));
        }

        /**
         * @param timeUpdated The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the Exadata Fleet Update Cycle was updated, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param type (Updatable) Type of Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Type of Exadata Fleet Update Cycle.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param upgradeDetails (Updatable) Details of supported upgrade options for DB or GI collection.
         * 
         * @return builder
         * 
         */
        public Builder upgradeDetails(@Nullable Output<FsuCycleUpgradeDetailsArgs> upgradeDetails) {
            $.upgradeDetails = upgradeDetails;
            return this;
        }

        /**
         * @param upgradeDetails (Updatable) Details of supported upgrade options for DB or GI collection.
         * 
         * @return builder
         * 
         */
        public Builder upgradeDetails(FsuCycleUpgradeDetailsArgs upgradeDetails) {
            return upgradeDetails(Output.of(upgradeDetails));
        }

        public FsuCycleState build() {
            return $;
        }
    }

}
