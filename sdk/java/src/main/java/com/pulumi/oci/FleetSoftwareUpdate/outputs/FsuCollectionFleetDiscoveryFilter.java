// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.FsuCollectionFleetDiscoveryFilterTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FsuCollectionFleetDiscoveryFilter {
    private @Nullable String entityType;
    private @Nullable List<String> identifiers;
    private @Nullable String mode;
    private @Nullable List<String> names;
    private @Nullable String operator;
    private @Nullable List<FsuCollectionFleetDiscoveryFilterTag> tags;
    private String type;
    private @Nullable List<String> versions;

    private FsuCollectionFleetDiscoveryFilter() {}
    public Optional<String> entityType() {
        return Optional.ofNullable(this.entityType);
    }
    public List<String> identifiers() {
        return this.identifiers == null ? List.of() : this.identifiers;
    }
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    public List<String> names() {
        return this.names == null ? List.of() : this.names;
    }
    public Optional<String> operator() {
        return Optional.ofNullable(this.operator);
    }
    public List<FsuCollectionFleetDiscoveryFilterTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public String type() {
        return this.type;
    }
    public List<String> versions() {
        return this.versions == null ? List.of() : this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FsuCollectionFleetDiscoveryFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String entityType;
        private @Nullable List<String> identifiers;
        private @Nullable String mode;
        private @Nullable List<String> names;
        private @Nullable String operator;
        private @Nullable List<FsuCollectionFleetDiscoveryFilterTag> tags;
        private String type;
        private @Nullable List<String> versions;
        public Builder() {}
        public Builder(FsuCollectionFleetDiscoveryFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityType = defaults.entityType;
    	      this.identifiers = defaults.identifiers;
    	      this.mode = defaults.mode;
    	      this.names = defaults.names;
    	      this.operator = defaults.operator;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder entityType(@Nullable String entityType) {

            this.entityType = entityType;
            return this;
        }
        @CustomType.Setter
        public Builder identifiers(@Nullable List<String> identifiers) {

            this.identifiers = identifiers;
            return this;
        }
        public Builder identifiers(String... identifiers) {
            return identifiers(List.of(identifiers));
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {

            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder names(@Nullable List<String> names) {

            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder operator(@Nullable String operator) {

            this.operator = operator;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<FsuCollectionFleetDiscoveryFilterTag> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(FsuCollectionFleetDiscoveryFilterTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("FsuCollectionFleetDiscoveryFilter", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder versions(@Nullable List<String> versions) {

            this.versions = versions;
            return this;
        }
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }
        public FsuCollectionFleetDiscoveryFilter build() {
            final var _resultValue = new FsuCollectionFleetDiscoveryFilter();
            _resultValue.entityType = entityType;
            _resultValue.identifiers = identifiers;
            _resultValue.mode = mode;
            _resultValue.names = names;
            _resultValue.operator = operator;
            _resultValue.tags = tags;
            _resultValue.type = type;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
