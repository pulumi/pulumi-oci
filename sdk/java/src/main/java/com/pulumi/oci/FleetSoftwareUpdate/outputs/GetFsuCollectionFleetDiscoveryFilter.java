// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.GetFsuCollectionFleetDiscoveryFilterTag;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFsuCollectionFleetDiscoveryFilter {
    /**
     * @return Type of resource to match in the discovery.
     * 
     */
    private String entityType;
    /**
     * @return Related resource Ids to include in the discovery.  All must match the specified entityType.
     * 
     */
    private List<String> identifiers;
    /**
     * @return INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for &#39;FSUCOLLECTION&#39; RESOURCE_ID filter only.
     * 
     */
    private String mode;
    /**
     * @return List of Database unique names to include in the discovery.
     * 
     */
    private List<String> names;
    /**
     * @return Type of join for each element in this filter.
     * 
     */
    private String operator;
    /**
     * @return Freeform tags to include in the discovery.
     * 
     */
    private List<GetFsuCollectionFleetDiscoveryFilterTag> tags;
    /**
     * @return Exadata Fleet Update Collection type.
     * 
     */
    private String type;
    /**
     * @return List of Versions strings to include in the discovery.
     * 
     */
    private List<String> versions;

    private GetFsuCollectionFleetDiscoveryFilter() {}
    /**
     * @return Type of resource to match in the discovery.
     * 
     */
    public String entityType() {
        return this.entityType;
    }
    /**
     * @return Related resource Ids to include in the discovery.  All must match the specified entityType.
     * 
     */
    public List<String> identifiers() {
        return this.identifiers;
    }
    /**
     * @return INCLUDE or EXCLUDE the filter results in the discovery for DB targets. Supported for &#39;FSUCOLLECTION&#39; RESOURCE_ID filter only.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return List of Database unique names to include in the discovery.
     * 
     */
    public List<String> names() {
        return this.names;
    }
    /**
     * @return Type of join for each element in this filter.
     * 
     */
    public String operator() {
        return this.operator;
    }
    /**
     * @return Freeform tags to include in the discovery.
     * 
     */
    public List<GetFsuCollectionFleetDiscoveryFilterTag> tags() {
        return this.tags;
    }
    /**
     * @return Exadata Fleet Update Collection type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return List of Versions strings to include in the discovery.
     * 
     */
    public List<String> versions() {
        return this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFsuCollectionFleetDiscoveryFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String entityType;
        private List<String> identifiers;
        private String mode;
        private List<String> names;
        private String operator;
        private List<GetFsuCollectionFleetDiscoveryFilterTag> tags;
        private String type;
        private List<String> versions;
        public Builder() {}
        public Builder(GetFsuCollectionFleetDiscoveryFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityType = defaults.entityType;
    	      this.identifiers = defaults.identifiers;
    	      this.mode = defaults.mode;
    	      this.names = defaults.names;
    	      this.operator = defaults.operator;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder entityType(String entityType) {
            if (entityType == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionFleetDiscoveryFilter", "entityType");
            }
            this.entityType = entityType;
            return this;
        }
        @CustomType.Setter
        public Builder identifiers(List<String> identifiers) {
            if (identifiers == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionFleetDiscoveryFilter", "identifiers");
            }
            this.identifiers = identifiers;
            return this;
        }
        public Builder identifiers(String... identifiers) {
            return identifiers(List.of(identifiers));
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionFleetDiscoveryFilter", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder names(List<String> names) {
            if (names == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionFleetDiscoveryFilter", "names");
            }
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            if (operator == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionFleetDiscoveryFilter", "operator");
            }
            this.operator = operator;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetFsuCollectionFleetDiscoveryFilterTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionFleetDiscoveryFilter", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetFsuCollectionFleetDiscoveryFilterTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionFleetDiscoveryFilter", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder versions(List<String> versions) {
            if (versions == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionFleetDiscoveryFilter", "versions");
            }
            this.versions = versions;
            return this;
        }
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }
        public GetFsuCollectionFleetDiscoveryFilter build() {
            final var _resultValue = new GetFsuCollectionFleetDiscoveryFilter();
            _resultValue.entityType = entityType;
            _resultValue.identifiers = identifiers;
            _resultValue.mode = mode;
            _resultValue.names = names;
            _resultValue.operator = operator;
            _resultValue.tags = tags;
            _resultValue.type = type;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
