// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.GetFsuCollectionActiveFsuCycle;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.GetFsuCollectionFleetDiscovery;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFsuCollectionResult {
    /**
     * @return Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
     * 
     */
    private List<GetFsuCollectionActiveFsuCycle> activeFsuCycles;
    /**
     * @return Compartment Identifier
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Exadata Fleet Update Collection resource display name.
     * 
     */
    private String displayName;
    /**
     * @return Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
     * 
     */
    private List<GetFsuCollectionFleetDiscovery> fleetDiscoveries;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    private String fsuCollectionId;
    /**
     * @return OCID identifier for the Exadata Fleet Update Collection.
     * 
     */
    private String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of last completed FSU Cycle.
     * 
     */
    private String lastCompletedFsuCycleId;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Exadata service type for the target resource members.
     * 
     */
    private String serviceType;
    /**
     * @return Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
     * 
     */
    private String sourceMajorVersion;
    /**
     * @return The current state of the Exadata Fleet Update Collection.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return Number of targets that are members of this Collection.
     * 
     */
    private Integer targetCount;
    /**
     * @return The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;
    /**
     * @return Exadata Fleet Update Collection type.
     * 
     */
    private String type;

    private GetFsuCollectionResult() {}
    /**
     * @return Active Exadata Fleet Update Cycle resource for this Collection. Object would be null if there is no active Cycle.
     * 
     */
    public List<GetFsuCollectionActiveFsuCycle> activeFsuCycles() {
        return this.activeFsuCycles;
    }
    /**
     * @return Compartment Identifier
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Exadata Fleet Update Collection resource display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Supported fleet discovery strategies for DB Collections. If specified on an Update Collection request, this will re-discover the targets of the Collection.
     * 
     */
    public List<GetFsuCollectionFleetDiscovery> fleetDiscoveries() {
        return this.fleetDiscoveries;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    public String fsuCollectionId() {
        return this.fsuCollectionId;
    }
    /**
     * @return OCID identifier for the Exadata Fleet Update Collection.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of last completed FSU Cycle.
     * 
     */
    public String lastCompletedFsuCycleId() {
        return this.lastCompletedFsuCycleId;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Exadata service type for the target resource members.
     * 
     */
    public String serviceType() {
        return this.serviceType;
    }
    /**
     * @return Database Major Version of targets to be included in the Exadata Fleet Update Collection. https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/DbVersionSummary/ListDbVersions Only Database targets that match the version specified in this value would be added to the Exadata Fleet Update Collection.
     * 
     */
    public String sourceMajorVersion() {
        return this.sourceMajorVersion;
    }
    /**
     * @return The current state of the Exadata Fleet Update Collection.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Number of targets that are members of this Collection.
     * 
     */
    public Integer targetCount() {
        return this.targetCount;
    }
    /**
     * @return The time the Exadata Fleet Update Collection was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the Exadata Fleet Update Collection was updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Exadata Fleet Update Collection type.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFsuCollectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetFsuCollectionActiveFsuCycle> activeFsuCycles;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private List<GetFsuCollectionFleetDiscovery> fleetDiscoveries;
        private Map<String,String> freeformTags;
        private String fsuCollectionId;
        private String id;
        private String lastCompletedFsuCycleId;
        private String lifecycleDetails;
        private String serviceType;
        private String sourceMajorVersion;
        private String state;
        private Map<String,String> systemTags;
        private Integer targetCount;
        private String timeCreated;
        private String timeUpdated;
        private String type;
        public Builder() {}
        public Builder(GetFsuCollectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeFsuCycles = defaults.activeFsuCycles;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.fleetDiscoveries = defaults.fleetDiscoveries;
    	      this.freeformTags = defaults.freeformTags;
    	      this.fsuCollectionId = defaults.fsuCollectionId;
    	      this.id = defaults.id;
    	      this.lastCompletedFsuCycleId = defaults.lastCompletedFsuCycleId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.serviceType = defaults.serviceType;
    	      this.sourceMajorVersion = defaults.sourceMajorVersion;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetCount = defaults.targetCount;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder activeFsuCycles(List<GetFsuCollectionActiveFsuCycle> activeFsuCycles) {
            if (activeFsuCycles == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "activeFsuCycles");
            }
            this.activeFsuCycles = activeFsuCycles;
            return this;
        }
        public Builder activeFsuCycles(GetFsuCollectionActiveFsuCycle... activeFsuCycles) {
            return activeFsuCycles(List.of(activeFsuCycles));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fleetDiscoveries(List<GetFsuCollectionFleetDiscovery> fleetDiscoveries) {
            if (fleetDiscoveries == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "fleetDiscoveries");
            }
            this.fleetDiscoveries = fleetDiscoveries;
            return this;
        }
        public Builder fleetDiscoveries(GetFsuCollectionFleetDiscovery... fleetDiscoveries) {
            return fleetDiscoveries(List.of(fleetDiscoveries));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder fsuCollectionId(String fsuCollectionId) {
            if (fsuCollectionId == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "fsuCollectionId");
            }
            this.fsuCollectionId = fsuCollectionId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastCompletedFsuCycleId(String lastCompletedFsuCycleId) {
            if (lastCompletedFsuCycleId == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "lastCompletedFsuCycleId");
            }
            this.lastCompletedFsuCycleId = lastCompletedFsuCycleId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder serviceType(String serviceType) {
            if (serviceType == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "serviceType");
            }
            this.serviceType = serviceType;
            return this;
        }
        @CustomType.Setter
        public Builder sourceMajorVersion(String sourceMajorVersion) {
            if (sourceMajorVersion == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "sourceMajorVersion");
            }
            this.sourceMajorVersion = sourceMajorVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetCount(Integer targetCount) {
            if (targetCount == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "targetCount");
            }
            this.targetCount = targetCount;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetFsuCollectionResult build() {
            final var _resultValue = new GetFsuCollectionResult();
            _resultValue.activeFsuCycles = activeFsuCycles;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.fleetDiscoveries = fleetDiscoveries;
            _resultValue.freeformTags = freeformTags;
            _resultValue.fsuCollectionId = fsuCollectionId;
            _resultValue.id = id;
            _resultValue.lastCompletedFsuCycleId = lastCompletedFsuCycleId;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.serviceType = serviceType;
            _resultValue.sourceMajorVersion = sourceMajorVersion;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.targetCount = targetCount;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
