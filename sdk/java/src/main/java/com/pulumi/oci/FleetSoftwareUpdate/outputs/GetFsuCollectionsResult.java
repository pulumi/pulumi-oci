// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.GetFsuCollectionsFilter;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.GetFsuCollectionsFsuCollectionSummaryCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFsuCollectionsResult {
    private String compartmentId;
    private @Nullable String displayName;
    private @Nullable List<GetFsuCollectionsFilter> filters;
    private List<GetFsuCollectionsFsuCollectionSummaryCollection> fsuCollectionSummaryCollections;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String state;
    private @Nullable String type;

    private GetFsuCollectionsResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetFsuCollectionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public List<GetFsuCollectionsFsuCollectionSummaryCollection> fsuCollectionSummaryCollections() {
        return this.fsuCollectionSummaryCollections;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFsuCollectionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetFsuCollectionsFilter> filters;
        private List<GetFsuCollectionsFsuCollectionSummaryCollection> fsuCollectionSummaryCollections;
        private String id;
        private @Nullable String state;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetFsuCollectionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.fsuCollectionSummaryCollections = defaults.fsuCollectionSummaryCollections;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetFsuCollectionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetFsuCollectionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder fsuCollectionSummaryCollections(List<GetFsuCollectionsFsuCollectionSummaryCollection> fsuCollectionSummaryCollections) {
            if (fsuCollectionSummaryCollections == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionsResult", "fsuCollectionSummaryCollections");
            }
            this.fsuCollectionSummaryCollections = fsuCollectionSummaryCollections;
            return this;
        }
        public Builder fsuCollectionSummaryCollections(GetFsuCollectionsFsuCollectionSummaryCollection... fsuCollectionSummaryCollections) {
            return fsuCollectionSummaryCollections(List.of(fsuCollectionSummaryCollections));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFsuCollectionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public GetFsuCollectionsResult build() {
            final var _resultValue = new GetFsuCollectionsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.fsuCollectionSummaryCollections = fsuCollectionSummaryCollections;
            _resultValue.id = id;
            _resultValue.state = state;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
