// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail {
    /**
     * @return Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
     * 
     */
    private String homePolicy;
    /**
     * @return Prefix name used for new DB home resources created as part of the Stage Action. Format: &lt;specified_prefix&gt;_&lt;timestamp&gt; If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
     * 
     */
    private String newHomePrefix;
    /**
     * @return Target database software image OCID.
     * 
     */
    private String softwareImageId;
    /**
     * @return Type of Exadata Fleet Update Cycle.
     * 
     */
    private String type;
    /**
     * @return Target DB or GI version string for the Exadata Fleet Update Cycle.
     * 
     */
    private String version;

    private GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail() {}
    /**
     * @return Goal home policy to use when Staging the Goal Version during patching. CREATE_NEW: Create a new DBHome (for Database Collections) for the specified image or version. USE_EXISTING: All database targets in the same VMCluster or CloudVmCluster will be moved to a shared database home.  If an existing home for the selected image or version is not found in the VM Cluster for a target database, then a new home will be created.  If more than one existing home for the selected image is found, then the home with the least number of databases will be used.  If multiple homes have the least number of databases, then a home will be selected at random.
     * 
     */
    public String homePolicy() {
        return this.homePolicy;
    }
    /**
     * @return Prefix name used for new DB home resources created as part of the Stage Action. Format: &lt;specified_prefix&gt;_&lt;timestamp&gt; If not specified, a default Oracle Cloud Infrastructure DB home resource will be generated for the new DB home resources created.
     * 
     */
    public String newHomePrefix() {
        return this.newHomePrefix;
    }
    /**
     * @return Target database software image OCID.
     * 
     */
    public String softwareImageId() {
        return this.softwareImageId;
    }
    /**
     * @return Type of Exadata Fleet Update Cycle.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Target DB or GI version string for the Exadata Fleet Update Cycle.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String homePolicy;
        private String newHomePrefix;
        private String softwareImageId;
        private String type;
        private String version;
        public Builder() {}
        public Builder(GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.homePolicy = defaults.homePolicy;
    	      this.newHomePrefix = defaults.newHomePrefix;
    	      this.softwareImageId = defaults.softwareImageId;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder homePolicy(String homePolicy) {
            if (homePolicy == null) {
              throw new MissingRequiredPropertyException("GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail", "homePolicy");
            }
            this.homePolicy = homePolicy;
            return this;
        }
        @CustomType.Setter
        public Builder newHomePrefix(String newHomePrefix) {
            if (newHomePrefix == null) {
              throw new MissingRequiredPropertyException("GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail", "newHomePrefix");
            }
            this.newHomePrefix = newHomePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder softwareImageId(String softwareImageId) {
            if (softwareImageId == null) {
              throw new MissingRequiredPropertyException("GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail", "softwareImageId");
            }
            this.softwareImageId = softwareImageId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail", "version");
            }
            this.version = version;
            return this;
        }
        public GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail build() {
            final var _resultValue = new GetFsuCyclesFsuCycleSummaryCollectionItemGoalVersionDetail();
            _resultValue.homePolicy = homePolicy;
            _resultValue.newHomePrefix = newHomePrefix;
            _resultValue.softwareImageId = softwareImageId;
            _resultValue.type = type;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
