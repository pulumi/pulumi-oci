// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FleetSoftwareUpdate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.GetFsuCyclesFilter;
import com.pulumi.oci.FleetSoftwareUpdate.outputs.GetFsuCyclesFsuCycleSummaryCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFsuCyclesResult {
    /**
     * @return Type of Exadata Fleet Update collection being upgraded.
     * 
     */
    private @Nullable String collectionType;
    /**
     * @return Compartment Identifier.
     * 
     */
    private String compartmentId;
    /**
     * @return Exadata Fleet Update Cycle display name.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetFsuCyclesFilter> filters;
    /**
     * @return OCID identifier for the Collection ID the Exadata Fleet Update Cycle is assigned to.
     * 
     */
    private @Nullable String fsuCollectionId;
    /**
     * @return The list of fsu_cycle_summary_collection.
     * 
     */
    private List<GetFsuCyclesFsuCycleSummaryCollection> fsuCycleSummaryCollections;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The current state of the Exadata Fleet Update Cycle.
     * 
     */
    private @Nullable String state;
    private @Nullable String targetVersion;

    private GetFsuCyclesResult() {}
    /**
     * @return Type of Exadata Fleet Update collection being upgraded.
     * 
     */
    public Optional<String> collectionType() {
        return Optional.ofNullable(this.collectionType);
    }
    /**
     * @return Compartment Identifier.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Exadata Fleet Update Cycle display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetFsuCyclesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return OCID identifier for the Collection ID the Exadata Fleet Update Cycle is assigned to.
     * 
     */
    public Optional<String> fsuCollectionId() {
        return Optional.ofNullable(this.fsuCollectionId);
    }
    /**
     * @return The list of fsu_cycle_summary_collection.
     * 
     */
    public List<GetFsuCyclesFsuCycleSummaryCollection> fsuCycleSummaryCollections() {
        return this.fsuCycleSummaryCollections;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of the Exadata Fleet Update Cycle.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> targetVersion() {
        return Optional.ofNullable(this.targetVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFsuCyclesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String collectionType;
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetFsuCyclesFilter> filters;
        private @Nullable String fsuCollectionId;
        private List<GetFsuCyclesFsuCycleSummaryCollection> fsuCycleSummaryCollections;
        private String id;
        private @Nullable String state;
        private @Nullable String targetVersion;
        public Builder() {}
        public Builder(GetFsuCyclesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collectionType = defaults.collectionType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.fsuCollectionId = defaults.fsuCollectionId;
    	      this.fsuCycleSummaryCollections = defaults.fsuCycleSummaryCollections;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.targetVersion = defaults.targetVersion;
        }

        @CustomType.Setter
        public Builder collectionType(@Nullable String collectionType) {

            this.collectionType = collectionType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFsuCyclesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetFsuCyclesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetFsuCyclesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder fsuCollectionId(@Nullable String fsuCollectionId) {

            this.fsuCollectionId = fsuCollectionId;
            return this;
        }
        @CustomType.Setter
        public Builder fsuCycleSummaryCollections(List<GetFsuCyclesFsuCycleSummaryCollection> fsuCycleSummaryCollections) {
            if (fsuCycleSummaryCollections == null) {
              throw new MissingRequiredPropertyException("GetFsuCyclesResult", "fsuCycleSummaryCollections");
            }
            this.fsuCycleSummaryCollections = fsuCycleSummaryCollections;
            return this;
        }
        public Builder fsuCycleSummaryCollections(GetFsuCyclesFsuCycleSummaryCollection... fsuCycleSummaryCollections) {
            return fsuCycleSummaryCollections(List.of(fsuCycleSummaryCollections));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFsuCyclesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targetVersion(@Nullable String targetVersion) {

            this.targetVersion = targetVersion;
            return this;
        }
        public GetFsuCyclesResult build() {
            final var _resultValue = new GetFsuCyclesResult();
            _resultValue.collectionType = collectionType;
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.fsuCollectionId = fsuCollectionId;
            _resultValue.fsuCycleSummaryCollections = fsuCycleSummaryCollections;
            _resultValue.id = id;
            _resultValue.state = state;
            _resultValue.targetVersion = targetVersion;
            return _resultValue;
        }
    }
}
