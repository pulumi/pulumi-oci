// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Functions.InvokeFunctionArgs;
import com.pulumi.oci.Functions.inputs.InvokeFunctionState;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Invoke Function resource in Oracle Cloud Infrastructure Functions service.
 * 
 * Invokes a function
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Functions.InvokeFunction;
 * import com.pulumi.oci.Functions.InvokeFunctionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testInvokeFunction = new InvokeFunction(&#34;testInvokeFunction&#34;, InvokeFunctionArgs.builder()        
 *             .functionId(oci_functions_function.test_function().id())
 *             .invokeFunctionBody(var_.invoke_function_invoke_function_body())
 *             .fnIntent(var_.invoke_function_fn_intent())
 *             .fnInvokeType(var_.invoke_function_fn_invoke_type())
 *             .base64EncodeContent(false)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Import is not supported for this resource.
 * 
 */
@ResourceType(type="oci:Functions/invokeFunction:InvokeFunction")
public class InvokeFunction extends com.pulumi.resources.CustomResource {
    @Export(name="base64EncodeContent", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> base64EncodeContent;

    public Output<Optional<Boolean>> base64EncodeContent() {
        return Codegen.optional(this.base64EncodeContent);
    }
    /**
     * Content of the response string, if any. If `base64_encode_content` is set to `true`, then this content will be base64 encoded.
     * 
     */
    @Export(name="content", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> content;

    /**
     * @return Content of the response string, if any. If `base64_encode_content` is set to `true`, then this content will be base64 encoded.
     * 
     */
    public Output<Optional<String>> content() {
        return Codegen.optional(this.content);
    }
    /**
     * An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. &#39;httprequest&#39;, &#39;cloudevent&#39;.
     * 
     */
    @Export(name="fnIntent", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> fnIntent;

    /**
     * @return An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. &#39;httprequest&#39;, &#39;cloudevent&#39;.
     * 
     */
    public Output<Optional<String>> fnIntent() {
        return Codegen.optional(this.fnIntent);
    }
    /**
     * Indicates whether Oracle Functions should execute the request and return the result (&#39;sync&#39;) of the execution,  or whether Oracle Functions should return as soon as processing has begun (&#39;detached&#39;) and leave result handling to the function.
     * 
     */
    @Export(name="fnInvokeType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> fnInvokeType;

    /**
     * @return Indicates whether Oracle Functions should execute the request and return the result (&#39;sync&#39;) of the execution,  or whether Oracle Functions should return as soon as processing has begun (&#39;detached&#39;) and leave result handling to the function.
     * 
     */
    public Output<Optional<String>> fnInvokeType() {
        return Codegen.optional(this.fnInvokeType);
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
     * 
     */
    @Export(name="functionId", refs={String.class}, tree="[0]")
    private Output<String> functionId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
     * 
     */
    public Output<String> functionId() {
        return this.functionId;
    }
    /**
     * An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invoke_function_body` or `invoke_function_body_base64_encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="inputBodySourcePath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> inputBodySourcePath;

    /**
     * @return An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invoke_function_body` or `invoke_function_body_base64_encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Optional<String>> inputBodySourcePath() {
        return Codegen.optional(this.inputBodySourcePath);
    }
    @Export(name="invokeEndpoint", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> invokeEndpoint;

    public Output<Optional<String>> invokeEndpoint() {
        return Codegen.optional(this.invokeEndpoint);
    }
    /**
     * The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `input_body_source_path` or `invoke_function_body_base64_encoded` is defined.
     * 
     */
    @Export(name="invokeFunctionBody", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> invokeFunctionBody;

    /**
     * @return The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `input_body_source_path` or `invoke_function_body_base64_encoded` is defined.
     * 
     */
    public Output<Optional<String>> invokeFunctionBody() {
        return Codegen.optional(this.invokeFunctionBody);
    }
    @Export(name="invokeFunctionBodyBase64Encoded", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> invokeFunctionBodyBase64Encoded;

    public Output<Optional<String>> invokeFunctionBodyBase64Encoded() {
        return Codegen.optional(this.invokeFunctionBodyBase64Encoded);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public InvokeFunction(String name) {
        this(name, InvokeFunctionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public InvokeFunction(String name, InvokeFunctionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public InvokeFunction(String name, InvokeFunctionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Functions/invokeFunction:InvokeFunction", name, args == null ? InvokeFunctionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private InvokeFunction(String name, Output<String> id, @Nullable InvokeFunctionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Functions/invokeFunction:InvokeFunction", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static InvokeFunction get(String name, Output<String> id, @Nullable InvokeFunctionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new InvokeFunction(name, id, state, options);
    }
}
