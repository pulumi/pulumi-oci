// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Functions.inputs.GetFusionEnvironmentRefreshActivitiesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFusionEnvironmentRefreshActivitiesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFusionEnvironmentRefreshActivitiesPlainArgs Empty = new GetFusionEnvironmentRefreshActivitiesPlainArgs();

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetFusionEnvironmentRefreshActivitiesFilter> filters;

    public Optional<List<GetFusionEnvironmentRefreshActivitiesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * unique FusionEnvironment identifier
     * 
     */
    @Import(name="fusionEnvironmentId", required=true)
    private String fusionEnvironmentId;

    /**
     * @return unique FusionEnvironment identifier
     * 
     */
    public String fusionEnvironmentId() {
        return this.fusionEnvironmentId;
    }

    /**
     * A filter that returns all resources that match the specified status
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter that returns all resources that match the specified status
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter that returns all resources that end before this date
     * 
     */
    @Import(name="timeExpectedFinishLessThanOrEqualTo")
    private @Nullable String timeExpectedFinishLessThanOrEqualTo;

    /**
     * @return A filter that returns all resources that end before this date
     * 
     */
    public Optional<String> timeExpectedFinishLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeExpectedFinishLessThanOrEqualTo);
    }

    /**
     * A filter that returns all resources that are scheduled after this date
     * 
     */
    @Import(name="timeScheduledStartGreaterThanOrEqualTo")
    private @Nullable String timeScheduledStartGreaterThanOrEqualTo;

    /**
     * @return A filter that returns all resources that are scheduled after this date
     * 
     */
    public Optional<String> timeScheduledStartGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeScheduledStartGreaterThanOrEqualTo);
    }

    private GetFusionEnvironmentRefreshActivitiesPlainArgs() {}

    private GetFusionEnvironmentRefreshActivitiesPlainArgs(GetFusionEnvironmentRefreshActivitiesPlainArgs $) {
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.fusionEnvironmentId = $.fusionEnvironmentId;
        this.state = $.state;
        this.timeExpectedFinishLessThanOrEqualTo = $.timeExpectedFinishLessThanOrEqualTo;
        this.timeScheduledStartGreaterThanOrEqualTo = $.timeScheduledStartGreaterThanOrEqualTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFusionEnvironmentRefreshActivitiesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFusionEnvironmentRefreshActivitiesPlainArgs $;

        public Builder() {
            $ = new GetFusionEnvironmentRefreshActivitiesPlainArgs();
        }

        public Builder(GetFusionEnvironmentRefreshActivitiesPlainArgs defaults) {
            $ = new GetFusionEnvironmentRefreshActivitiesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetFusionEnvironmentRefreshActivitiesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetFusionEnvironmentRefreshActivitiesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fusionEnvironmentId unique FusionEnvironment identifier
         * 
         * @return builder
         * 
         */
        public Builder fusionEnvironmentId(String fusionEnvironmentId) {
            $.fusionEnvironmentId = fusionEnvironmentId;
            return this;
        }

        /**
         * @param state A filter that returns all resources that match the specified status
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param timeExpectedFinishLessThanOrEqualTo A filter that returns all resources that end before this date
         * 
         * @return builder
         * 
         */
        public Builder timeExpectedFinishLessThanOrEqualTo(@Nullable String timeExpectedFinishLessThanOrEqualTo) {
            $.timeExpectedFinishLessThanOrEqualTo = timeExpectedFinishLessThanOrEqualTo;
            return this;
        }

        /**
         * @param timeScheduledStartGreaterThanOrEqualTo A filter that returns all resources that are scheduled after this date
         * 
         * @return builder
         * 
         */
        public Builder timeScheduledStartGreaterThanOrEqualTo(@Nullable String timeScheduledStartGreaterThanOrEqualTo) {
            $.timeScheduledStartGreaterThanOrEqualTo = timeScheduledStartGreaterThanOrEqualTo;
            return this;
        }

        public GetFusionEnvironmentRefreshActivitiesPlainArgs build() {
            if ($.fusionEnvironmentId == null) {
                throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivitiesPlainArgs", "fusionEnvironmentId");
            }
            return $;
        }
    }

}
