// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Functions.inputs.GetFusionEnvironmentScheduledActivitiesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFusionEnvironmentScheduledActivitiesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFusionEnvironmentScheduledActivitiesArgs Empty = new GetFusionEnvironmentScheduledActivitiesArgs();

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetFusionEnvironmentScheduledActivitiesFilterArgs>> filters;

    public Optional<Output<List<GetFusionEnvironmentScheduledActivitiesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * unique FusionEnvironment identifier
     * 
     */
    @Import(name="fusionEnvironmentId", required=true)
    private Output<String> fusionEnvironmentId;

    /**
     * @return unique FusionEnvironment identifier
     * 
     */
    public Output<String> fusionEnvironmentId() {
        return this.fusionEnvironmentId;
    }

    /**
     * A filter that returns all resources that match the specified run cycle.
     * 
     */
    @Import(name="runCycle")
    private @Nullable Output<String> runCycle;

    /**
     * @return A filter that returns all resources that match the specified run cycle.
     * 
     */
    public Optional<Output<String>> runCycle() {
        return Optional.ofNullable(this.runCycle);
    }

    /**
     * A filter that returns all resources that match the specified status
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter that returns all resources that match the specified status
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter that returns all resources that end before this date
     * 
     */
    @Import(name="timeExpectedFinishLessThanOrEqualTo")
    private @Nullable Output<String> timeExpectedFinishLessThanOrEqualTo;

    /**
     * @return A filter that returns all resources that end before this date
     * 
     */
    public Optional<Output<String>> timeExpectedFinishLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeExpectedFinishLessThanOrEqualTo);
    }

    /**
     * A filter that returns all resources that are scheduled after this date
     * 
     */
    @Import(name="timeScheduledStartGreaterThanOrEqualTo")
    private @Nullable Output<String> timeScheduledStartGreaterThanOrEqualTo;

    /**
     * @return A filter that returns all resources that are scheduled after this date
     * 
     */
    public Optional<Output<String>> timeScheduledStartGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeScheduledStartGreaterThanOrEqualTo);
    }

    private GetFusionEnvironmentScheduledActivitiesArgs() {}

    private GetFusionEnvironmentScheduledActivitiesArgs(GetFusionEnvironmentScheduledActivitiesArgs $) {
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.fusionEnvironmentId = $.fusionEnvironmentId;
        this.runCycle = $.runCycle;
        this.state = $.state;
        this.timeExpectedFinishLessThanOrEqualTo = $.timeExpectedFinishLessThanOrEqualTo;
        this.timeScheduledStartGreaterThanOrEqualTo = $.timeScheduledStartGreaterThanOrEqualTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFusionEnvironmentScheduledActivitiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFusionEnvironmentScheduledActivitiesArgs $;

        public Builder() {
            $ = new GetFusionEnvironmentScheduledActivitiesArgs();
        }

        public Builder(GetFusionEnvironmentScheduledActivitiesArgs defaults) {
            $ = new GetFusionEnvironmentScheduledActivitiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetFusionEnvironmentScheduledActivitiesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetFusionEnvironmentScheduledActivitiesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetFusionEnvironmentScheduledActivitiesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fusionEnvironmentId unique FusionEnvironment identifier
         * 
         * @return builder
         * 
         */
        public Builder fusionEnvironmentId(Output<String> fusionEnvironmentId) {
            $.fusionEnvironmentId = fusionEnvironmentId;
            return this;
        }

        /**
         * @param fusionEnvironmentId unique FusionEnvironment identifier
         * 
         * @return builder
         * 
         */
        public Builder fusionEnvironmentId(String fusionEnvironmentId) {
            return fusionEnvironmentId(Output.of(fusionEnvironmentId));
        }

        /**
         * @param runCycle A filter that returns all resources that match the specified run cycle.
         * 
         * @return builder
         * 
         */
        public Builder runCycle(@Nullable Output<String> runCycle) {
            $.runCycle = runCycle;
            return this;
        }

        /**
         * @param runCycle A filter that returns all resources that match the specified run cycle.
         * 
         * @return builder
         * 
         */
        public Builder runCycle(String runCycle) {
            return runCycle(Output.of(runCycle));
        }

        /**
         * @param state A filter that returns all resources that match the specified status
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter that returns all resources that match the specified status
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeExpectedFinishLessThanOrEqualTo A filter that returns all resources that end before this date
         * 
         * @return builder
         * 
         */
        public Builder timeExpectedFinishLessThanOrEqualTo(@Nullable Output<String> timeExpectedFinishLessThanOrEqualTo) {
            $.timeExpectedFinishLessThanOrEqualTo = timeExpectedFinishLessThanOrEqualTo;
            return this;
        }

        /**
         * @param timeExpectedFinishLessThanOrEqualTo A filter that returns all resources that end before this date
         * 
         * @return builder
         * 
         */
        public Builder timeExpectedFinishLessThanOrEqualTo(String timeExpectedFinishLessThanOrEqualTo) {
            return timeExpectedFinishLessThanOrEqualTo(Output.of(timeExpectedFinishLessThanOrEqualTo));
        }

        /**
         * @param timeScheduledStartGreaterThanOrEqualTo A filter that returns all resources that are scheduled after this date
         * 
         * @return builder
         * 
         */
        public Builder timeScheduledStartGreaterThanOrEqualTo(@Nullable Output<String> timeScheduledStartGreaterThanOrEqualTo) {
            $.timeScheduledStartGreaterThanOrEqualTo = timeScheduledStartGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeScheduledStartGreaterThanOrEqualTo A filter that returns all resources that are scheduled after this date
         * 
         * @return builder
         * 
         */
        public Builder timeScheduledStartGreaterThanOrEqualTo(String timeScheduledStartGreaterThanOrEqualTo) {
            return timeScheduledStartGreaterThanOrEqualTo(Output.of(timeScheduledStartGreaterThanOrEqualTo));
        }

        public GetFusionEnvironmentScheduledActivitiesArgs build() {
            if ($.fusionEnvironmentId == null) {
                throw new MissingRequiredPropertyException("GetFusionEnvironmentScheduledActivitiesArgs", "fusionEnvironmentId");
            }
            return $;
        }
    }

}
