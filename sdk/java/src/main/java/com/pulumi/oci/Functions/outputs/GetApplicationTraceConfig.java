// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApplicationTraceConfig {
    /**
     * @return The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
     * 
     */
    private String domainId;
    /**
     * @return Define if tracing is enabled for the resource.
     * 
     */
    private Boolean isEnabled;

    private GetApplicationTraceConfig() {}
    /**
     * @return The OCID of the collector (e.g. an APM Domain) trace events will be sent to.
     * 
     */
    public String domainId() {
        return this.domainId;
    }
    /**
     * @return Define if tracing is enabled for the resource.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationTraceConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domainId;
        private Boolean isEnabled;
        public Builder() {}
        public Builder(GetApplicationTraceConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainId = defaults.domainId;
    	      this.isEnabled = defaults.isEnabled;
        }

        @CustomType.Setter
        public Builder domainId(String domainId) {
            if (domainId == null) {
              throw new MissingRequiredPropertyException("GetApplicationTraceConfig", "domainId");
            }
            this.domainId = domainId;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("GetApplicationTraceConfig", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        public GetApplicationTraceConfig build() {
            final var _resultValue = new GetApplicationTraceConfig();
            _resultValue.domainId = domainId;
            _resultValue.isEnabled = isEnabled;
            return _resultValue;
        }
    }
}
