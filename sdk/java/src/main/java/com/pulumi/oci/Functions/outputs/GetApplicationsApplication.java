// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Functions.outputs.GetApplicationsApplicationImagePolicyConfig;
import com.pulumi.oci.Functions.outputs.GetApplicationsApplicationTraceConfig;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetApplicationsApplication {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
     * 
     */
    private String compartmentId;
    /**
     * @return Application configuration for functions in this application (passed as environment variables). Can be overridden by function configuration. Keys must be ASCII strings consisting solely of letters, digits, and the &#39;_&#39; (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{&#34;MY_FUNCTION_CONFIG&#34;: &#34;ConfVal&#34;}`
     * 
     */
    private Map<String,Object> config;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only applications with display names that match the display name string. Matching is exact.
     * 
     */
    private String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return A filter to return only applications with the specified OCID.
     * 
     */
    private String id;
    /**
     * @return Define the image signature verification policy for an application.
     * 
     */
    private List<GetApplicationsApplicationImagePolicyConfig> imagePolicyConfigs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the Network Security Groups to add the application to.
     * 
     */
    private List<String> networkSecurityGroupIds;
    /**
     * @return Valid values are `GENERIC_X86`, `GENERIC_ARM` and `GENERIC_X86_ARM`. Default is `GENERIC_X86`. Setting this to `GENERIC_X86`, will run the functions in the application on X86 processor architecture. Setting this to `GENERIC_ARM`, will run the functions in the application on ARM processor architecture. When set to `GENERIC_X86_ARM`, functions in the application are run on either X86 or ARM processor architecture. Accepted values are: `GENERIC_X86`, `GENERIC_ARM`, `GENERIC_X86_ARM`
     * 
     */
    private String shape;
    /**
     * @return A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
     * 
     */
    private String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
     * 
     */
    private List<String> subnetIds;
    /**
     * @return A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
     * 
     */
    private String syslogUrl;
    /**
     * @return The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
     * 
     */
    private String timeUpdated;
    /**
     * @return Define the tracing configuration for an application.
     * 
     */
    private List<GetApplicationsApplicationTraceConfig> traceConfigs;

    private GetApplicationsApplication() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this resource belongs.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Application configuration for functions in this application (passed as environment variables). Can be overridden by function configuration. Keys must be ASCII strings consisting solely of letters, digits, and the &#39;_&#39; (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{&#34;MY_FUNCTION_CONFIG&#34;: &#34;ConfVal&#34;}`
     * 
     */
    public Map<String,Object> config() {
        return this.config;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only applications with display names that match the display name string. Matching is exact.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return A filter to return only applications with the specified OCID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Define the image signature verification policy for an application.
     * 
     */
    public List<GetApplicationsApplicationImagePolicyConfig> imagePolicyConfigs() {
        return this.imagePolicyConfigs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the Network Security Groups to add the application to.
     * 
     */
    public List<String> networkSecurityGroupIds() {
        return this.networkSecurityGroupIds;
    }
    /**
     * @return Valid values are `GENERIC_X86`, `GENERIC_ARM` and `GENERIC_X86_ARM`. Default is `GENERIC_X86`. Setting this to `GENERIC_X86`, will run the functions in the application on X86 processor architecture. Setting this to `GENERIC_ARM`, will run the functions in the application on ARM processor architecture. When set to `GENERIC_X86_ARM`, functions in the application are run on either X86 or ARM processor architecture. Accepted values are: `GENERIC_X86`, `GENERIC_ARM`, `GENERIC_X86_ARM`
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return A filter to return only applications that match the lifecycle state in this parameter. Example: `Creating`
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds;
    }
    /**
     * @return A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
     * 
     */
    public String syslogUrl() {
        return this.syslogUrl;
    }
    /**
     * @return The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Define the tracing configuration for an application.
     * 
     */
    public List<GetApplicationsApplicationTraceConfig> traceConfigs() {
        return this.traceConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationsApplication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> config;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private List<GetApplicationsApplicationImagePolicyConfig> imagePolicyConfigs;
        private List<String> networkSecurityGroupIds;
        private String shape;
        private String state;
        private List<String> subnetIds;
        private String syslogUrl;
        private String timeCreated;
        private String timeUpdated;
        private List<GetApplicationsApplicationTraceConfig> traceConfigs;
        public Builder() {}
        public Builder(GetApplicationsApplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.config = defaults.config;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.imagePolicyConfigs = defaults.imagePolicyConfigs;
    	      this.networkSecurityGroupIds = defaults.networkSecurityGroupIds;
    	      this.shape = defaults.shape;
    	      this.state = defaults.state;
    	      this.subnetIds = defaults.subnetIds;
    	      this.syslogUrl = defaults.syslogUrl;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.traceConfigs = defaults.traceConfigs;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder config(Map<String,Object> config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder imagePolicyConfigs(List<GetApplicationsApplicationImagePolicyConfig> imagePolicyConfigs) {
            this.imagePolicyConfigs = Objects.requireNonNull(imagePolicyConfigs);
            return this;
        }
        public Builder imagePolicyConfigs(GetApplicationsApplicationImagePolicyConfig... imagePolicyConfigs) {
            return imagePolicyConfigs(List.of(imagePolicyConfigs));
        }
        @CustomType.Setter
        public Builder networkSecurityGroupIds(List<String> networkSecurityGroupIds) {
            this.networkSecurityGroupIds = Objects.requireNonNull(networkSecurityGroupIds);
            return this;
        }
        public Builder networkSecurityGroupIds(String... networkSecurityGroupIds) {
            return networkSecurityGroupIds(List.of(networkSecurityGroupIds));
        }
        @CustomType.Setter
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subnetIds(List<String> subnetIds) {
            this.subnetIds = Objects.requireNonNull(subnetIds);
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        @CustomType.Setter
        public Builder syslogUrl(String syslogUrl) {
            this.syslogUrl = Objects.requireNonNull(syslogUrl);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder traceConfigs(List<GetApplicationsApplicationTraceConfig> traceConfigs) {
            this.traceConfigs = Objects.requireNonNull(traceConfigs);
            return this;
        }
        public Builder traceConfigs(GetApplicationsApplicationTraceConfig... traceConfigs) {
            return traceConfigs(List.of(traceConfigs));
        }
        public GetApplicationsApplication build() {
            final var o = new GetApplicationsApplication();
            o.compartmentId = compartmentId;
            o.config = config;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.imagePolicyConfigs = imagePolicyConfigs;
            o.networkSecurityGroupIds = networkSecurityGroupIds;
            o.shape = shape;
            o.state = state;
            o.subnetIds = subnetIds;
            o.syslogUrl = syslogUrl;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.traceConfigs = traceConfigs;
            return o;
        }
    }
}
