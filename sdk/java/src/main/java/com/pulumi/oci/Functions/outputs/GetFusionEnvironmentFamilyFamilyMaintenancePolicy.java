// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFusionEnvironmentFamilyFamilyMaintenancePolicy {
    /**
     * @return Option to upgrade both production and non-production environments at the same time. When set to PROD both types of environnments are upgraded on the production schedule. When set to NON_PROD both types of environments are upgraded on the non-production schedule.
     * 
     */
    private String concurrentMaintenance;
    /**
     * @return When True, monthly patching is enabled for the environment family.
     * 
     */
    private Boolean isMonthlyPatchingEnabled;
    /**
     * @return The quarterly maintenance month group schedule of the Fusion environment family.
     * 
     */
    private String quarterlyUpgradeBeginTimes;

    private GetFusionEnvironmentFamilyFamilyMaintenancePolicy() {}
    /**
     * @return Option to upgrade both production and non-production environments at the same time. When set to PROD both types of environnments are upgraded on the production schedule. When set to NON_PROD both types of environments are upgraded on the non-production schedule.
     * 
     */
    public String concurrentMaintenance() {
        return this.concurrentMaintenance;
    }
    /**
     * @return When True, monthly patching is enabled for the environment family.
     * 
     */
    public Boolean isMonthlyPatchingEnabled() {
        return this.isMonthlyPatchingEnabled;
    }
    /**
     * @return The quarterly maintenance month group schedule of the Fusion environment family.
     * 
     */
    public String quarterlyUpgradeBeginTimes() {
        return this.quarterlyUpgradeBeginTimes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFusionEnvironmentFamilyFamilyMaintenancePolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String concurrentMaintenance;
        private Boolean isMonthlyPatchingEnabled;
        private String quarterlyUpgradeBeginTimes;
        public Builder() {}
        public Builder(GetFusionEnvironmentFamilyFamilyMaintenancePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.concurrentMaintenance = defaults.concurrentMaintenance;
    	      this.isMonthlyPatchingEnabled = defaults.isMonthlyPatchingEnabled;
    	      this.quarterlyUpgradeBeginTimes = defaults.quarterlyUpgradeBeginTimes;
        }

        @CustomType.Setter
        public Builder concurrentMaintenance(String concurrentMaintenance) {
            if (concurrentMaintenance == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentFamilyFamilyMaintenancePolicy", "concurrentMaintenance");
            }
            this.concurrentMaintenance = concurrentMaintenance;
            return this;
        }
        @CustomType.Setter
        public Builder isMonthlyPatchingEnabled(Boolean isMonthlyPatchingEnabled) {
            if (isMonthlyPatchingEnabled == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentFamilyFamilyMaintenancePolicy", "isMonthlyPatchingEnabled");
            }
            this.isMonthlyPatchingEnabled = isMonthlyPatchingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder quarterlyUpgradeBeginTimes(String quarterlyUpgradeBeginTimes) {
            if (quarterlyUpgradeBeginTimes == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentFamilyFamilyMaintenancePolicy", "quarterlyUpgradeBeginTimes");
            }
            this.quarterlyUpgradeBeginTimes = quarterlyUpgradeBeginTimes;
            return this;
        }
        public GetFusionEnvironmentFamilyFamilyMaintenancePolicy build() {
            final var _resultValue = new GetFusionEnvironmentFamilyFamilyMaintenancePolicy();
            _resultValue.concurrentMaintenance = concurrentMaintenance;
            _resultValue.isMonthlyPatchingEnabled = isMonthlyPatchingEnabled;
            _resultValue.quarterlyUpgradeBeginTimes = quarterlyUpgradeBeginTimes;
            return _resultValue;
        }
    }
}
