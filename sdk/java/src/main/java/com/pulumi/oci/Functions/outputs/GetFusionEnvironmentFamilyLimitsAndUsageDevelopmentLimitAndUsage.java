// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetFusionEnvironmentFamilyLimitsAndUsageDevelopmentLimitAndUsage {
    private Integer limit;
    /**
     * @return The usage of current environment.
     * 
     */
    private Integer usage;

    private GetFusionEnvironmentFamilyLimitsAndUsageDevelopmentLimitAndUsage() {}
    public Integer limit() {
        return this.limit;
    }
    /**
     * @return The usage of current environment.
     * 
     */
    public Integer usage() {
        return this.usage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFusionEnvironmentFamilyLimitsAndUsageDevelopmentLimitAndUsage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer limit;
        private Integer usage;
        public Builder() {}
        public Builder(GetFusionEnvironmentFamilyLimitsAndUsageDevelopmentLimitAndUsage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.limit = defaults.limit;
    	      this.usage = defaults.usage;
        }

        @CustomType.Setter
        public Builder limit(Integer limit) {
            if (limit == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentFamilyLimitsAndUsageDevelopmentLimitAndUsage", "limit");
            }
            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder usage(Integer usage) {
            if (usage == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentFamilyLimitsAndUsageDevelopmentLimitAndUsage", "usage");
            }
            this.usage = usage;
            return this;
        }
        public GetFusionEnvironmentFamilyLimitsAndUsageDevelopmentLimitAndUsage build() {
            final var _resultValue = new GetFusionEnvironmentFamilyLimitsAndUsageDevelopmentLimitAndUsage();
            _resultValue.limit = limit;
            _resultValue.usage = usage;
            return _resultValue;
        }
    }
}
