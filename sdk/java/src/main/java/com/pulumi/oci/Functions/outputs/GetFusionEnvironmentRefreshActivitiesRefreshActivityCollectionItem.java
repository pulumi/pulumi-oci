// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Functions.outputs.GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItemRefreshIssueDetailsList;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItem {
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return unique FusionEnvironment identifier
     * 
     */
    private @Nullable String fusionEnvironmentId;
    /**
     * @return The unique identifier (OCID) of the refresh activity. Can&#39;t be changed after creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String lifecycleDetails;
    private @Nullable String refreshActivityId;
    /**
     * @return Details of refresh investigation information, each item represents a different issue.
     * 
     */
    private @Nullable List<GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItemRefreshIssueDetailsList> refreshIssueDetailsLists;
    /**
     * @return Service availability / impact during refresh activity execution up down
     * 
     */
    private @Nullable String serviceAvailability;
    /**
     * @return The OCID of the Fusion environment that is the source environment for the refresh.
     * 
     */
    private @Nullable String sourceFusionEnvironmentId;
    /**
     * @return A filter that returns all resources that match the specified status
     * 
     */
    private @Nullable String state;
    /**
     * @return The time the refresh activity record was created. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeAccepted;
    /**
     * @return The time the refresh activity is scheduled to end. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeExpectedFinish;
    /**
     * @return The time the refresh activity actually completed / cancelled / failed. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeFinished;
    /**
     * @return The date and time of the most recent source environment backup used for the environment refresh.
     * 
     */
    private @Nullable String timeOfRestorationPoint;
    /**
     * @return The time the refresh activity record was updated. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;

    private GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItem() {}
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return unique FusionEnvironment identifier
     * 
     */
    public Optional<String> fusionEnvironmentId() {
        return Optional.ofNullable(this.fusionEnvironmentId);
    }
    /**
     * @return The unique identifier (OCID) of the refresh activity. Can&#39;t be changed after creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    public Optional<String> refreshActivityId() {
        return Optional.ofNullable(this.refreshActivityId);
    }
    /**
     * @return Details of refresh investigation information, each item represents a different issue.
     * 
     */
    public List<GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItemRefreshIssueDetailsList> refreshIssueDetailsLists() {
        return this.refreshIssueDetailsLists == null ? List.of() : this.refreshIssueDetailsLists;
    }
    /**
     * @return Service availability / impact during refresh activity execution up down
     * 
     */
    public Optional<String> serviceAvailability() {
        return Optional.ofNullable(this.serviceAvailability);
    }
    /**
     * @return The OCID of the Fusion environment that is the source environment for the refresh.
     * 
     */
    public Optional<String> sourceFusionEnvironmentId() {
        return Optional.ofNullable(this.sourceFusionEnvironmentId);
    }
    /**
     * @return A filter that returns all resources that match the specified status
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The time the refresh activity record was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeAccepted() {
        return Optional.ofNullable(this.timeAccepted);
    }
    /**
     * @return The time the refresh activity is scheduled to end. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeExpectedFinish() {
        return Optional.ofNullable(this.timeExpectedFinish);
    }
    /**
     * @return The time the refresh activity actually completed / cancelled / failed. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }
    /**
     * @return The date and time of the most recent source environment backup used for the environment refresh.
     * 
     */
    public Optional<String> timeOfRestorationPoint() {
        return Optional.ofNullable(this.timeOfRestorationPoint);
    }
    /**
     * @return The time the refresh activity record was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String displayName;
        private @Nullable String fusionEnvironmentId;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String refreshActivityId;
        private @Nullable List<GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItemRefreshIssueDetailsList> refreshIssueDetailsLists;
        private @Nullable String serviceAvailability;
        private @Nullable String sourceFusionEnvironmentId;
        private @Nullable String state;
        private @Nullable String timeAccepted;
        private @Nullable String timeExpectedFinish;
        private @Nullable String timeFinished;
        private @Nullable String timeOfRestorationPoint;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.fusionEnvironmentId = defaults.fusionEnvironmentId;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.refreshActivityId = defaults.refreshActivityId;
    	      this.refreshIssueDetailsLists = defaults.refreshIssueDetailsLists;
    	      this.serviceAvailability = defaults.serviceAvailability;
    	      this.sourceFusionEnvironmentId = defaults.sourceFusionEnvironmentId;
    	      this.state = defaults.state;
    	      this.timeAccepted = defaults.timeAccepted;
    	      this.timeExpectedFinish = defaults.timeExpectedFinish;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeOfRestorationPoint = defaults.timeOfRestorationPoint;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fusionEnvironmentId(@Nullable String fusionEnvironmentId) {
            this.fusionEnvironmentId = fusionEnvironmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder refreshActivityId(@Nullable String refreshActivityId) {
            this.refreshActivityId = refreshActivityId;
            return this;
        }
        @CustomType.Setter
        public Builder refreshIssueDetailsLists(@Nullable List<GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItemRefreshIssueDetailsList> refreshIssueDetailsLists) {
            this.refreshIssueDetailsLists = refreshIssueDetailsLists;
            return this;
        }
        public Builder refreshIssueDetailsLists(GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItemRefreshIssueDetailsList... refreshIssueDetailsLists) {
            return refreshIssueDetailsLists(List.of(refreshIssueDetailsLists));
        }
        @CustomType.Setter
        public Builder serviceAvailability(@Nullable String serviceAvailability) {
            this.serviceAvailability = serviceAvailability;
            return this;
        }
        @CustomType.Setter
        public Builder sourceFusionEnvironmentId(@Nullable String sourceFusionEnvironmentId) {
            this.sourceFusionEnvironmentId = sourceFusionEnvironmentId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeAccepted(@Nullable String timeAccepted) {
            this.timeAccepted = timeAccepted;
            return this;
        }
        @CustomType.Setter
        public Builder timeExpectedFinish(@Nullable String timeExpectedFinish) {
            this.timeExpectedFinish = timeExpectedFinish;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(@Nullable String timeFinished) {
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfRestorationPoint(@Nullable String timeOfRestorationPoint) {
            this.timeOfRestorationPoint = timeOfRestorationPoint;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItem build() {
            final var o = new GetFusionEnvironmentRefreshActivitiesRefreshActivityCollectionItem();
            o.displayName = displayName;
            o.fusionEnvironmentId = fusionEnvironmentId;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.refreshActivityId = refreshActivityId;
            o.refreshIssueDetailsLists = refreshIssueDetailsLists;
            o.serviceAvailability = serviceAvailability;
            o.sourceFusionEnvironmentId = sourceFusionEnvironmentId;
            o.state = state;
            o.timeAccepted = timeAccepted;
            o.timeExpectedFinish = timeExpectedFinish;
            o.timeFinished = timeFinished;
            o.timeOfRestorationPoint = timeOfRestorationPoint;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
