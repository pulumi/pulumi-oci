// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Functions.outputs.GetFusionEnvironmentRefreshActivityRefreshIssueDetailsList;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFusionEnvironmentRefreshActivityResult {
    /**
     * @return A friendly name for the refresh activity. Can be changed later.
     * 
     */
    private String displayName;
    private String fusionEnvironmentId;
    /**
     * @return The unique identifier (OCID) of the refresh activity. Can&#39;t be changed after creation.
     * 
     */
    private String id;
    /**
     * @return Represents if the customer opted for Data Masking or not during refreshActivity.
     * 
     */
    private Boolean isDataMaskingOpted;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    private String refreshActivityId;
    /**
     * @return Details of refresh investigation information, each item represents a different issue.
     * 
     */
    private List<GetFusionEnvironmentRefreshActivityRefreshIssueDetailsList> refreshIssueDetailsLists;
    /**
     * @return Service availability / impact during refresh activity execution up down
     * 
     */
    private String serviceAvailability;
    /**
     * @return The OCID of the Fusion environment that is the source environment for the refresh.
     * 
     */
    private String sourceFusionEnvironmentId;
    /**
     * @return The current state of the refreshActivity.
     * 
     */
    private String state;
    /**
     * @return The time the refresh activity record was created. An RFC3339 formatted datetime string.
     * 
     */
    private String timeAccepted;
    /**
     * @return The time the refresh activity is scheduled to end. An RFC3339 formatted datetime string.
     * 
     */
    private String timeExpectedFinish;
    /**
     * @return The time the refresh activity actually completed / cancelled / failed. An RFC3339 formatted datetime string.
     * 
     */
    private String timeFinished;
    /**
     * @return The date and time of the most recent source environment backup used for the environment refresh.
     * 
     */
    private String timeOfRestorationPoint;
    /**
     * @return The time the refresh activity record was updated. An RFC3339 formatted datetime string.
     * 
     */
    private String timeUpdated;

    private GetFusionEnvironmentRefreshActivityResult() {}
    /**
     * @return A friendly name for the refresh activity. Can be changed later.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public String fusionEnvironmentId() {
        return this.fusionEnvironmentId;
    }
    /**
     * @return The unique identifier (OCID) of the refresh activity. Can&#39;t be changed after creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Represents if the customer opted for Data Masking or not during refreshActivity.
     * 
     */
    public Boolean isDataMaskingOpted() {
        return this.isDataMaskingOpted;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public String refreshActivityId() {
        return this.refreshActivityId;
    }
    /**
     * @return Details of refresh investigation information, each item represents a different issue.
     * 
     */
    public List<GetFusionEnvironmentRefreshActivityRefreshIssueDetailsList> refreshIssueDetailsLists() {
        return this.refreshIssueDetailsLists;
    }
    /**
     * @return Service availability / impact during refresh activity execution up down
     * 
     */
    public String serviceAvailability() {
        return this.serviceAvailability;
    }
    /**
     * @return The OCID of the Fusion environment that is the source environment for the refresh.
     * 
     */
    public String sourceFusionEnvironmentId() {
        return this.sourceFusionEnvironmentId;
    }
    /**
     * @return The current state of the refreshActivity.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time the refresh activity record was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeAccepted() {
        return this.timeAccepted;
    }
    /**
     * @return The time the refresh activity is scheduled to end. An RFC3339 formatted datetime string.
     * 
     */
    public String timeExpectedFinish() {
        return this.timeExpectedFinish;
    }
    /**
     * @return The time the refresh activity actually completed / cancelled / failed. An RFC3339 formatted datetime string.
     * 
     */
    public String timeFinished() {
        return this.timeFinished;
    }
    /**
     * @return The date and time of the most recent source environment backup used for the environment refresh.
     * 
     */
    public String timeOfRestorationPoint() {
        return this.timeOfRestorationPoint;
    }
    /**
     * @return The time the refresh activity record was updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFusionEnvironmentRefreshActivityResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String fusionEnvironmentId;
        private String id;
        private Boolean isDataMaskingOpted;
        private String lifecycleDetails;
        private String refreshActivityId;
        private List<GetFusionEnvironmentRefreshActivityRefreshIssueDetailsList> refreshIssueDetailsLists;
        private String serviceAvailability;
        private String sourceFusionEnvironmentId;
        private String state;
        private String timeAccepted;
        private String timeExpectedFinish;
        private String timeFinished;
        private String timeOfRestorationPoint;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetFusionEnvironmentRefreshActivityResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.fusionEnvironmentId = defaults.fusionEnvironmentId;
    	      this.id = defaults.id;
    	      this.isDataMaskingOpted = defaults.isDataMaskingOpted;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.refreshActivityId = defaults.refreshActivityId;
    	      this.refreshIssueDetailsLists = defaults.refreshIssueDetailsLists;
    	      this.serviceAvailability = defaults.serviceAvailability;
    	      this.sourceFusionEnvironmentId = defaults.sourceFusionEnvironmentId;
    	      this.state = defaults.state;
    	      this.timeAccepted = defaults.timeAccepted;
    	      this.timeExpectedFinish = defaults.timeExpectedFinish;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeOfRestorationPoint = defaults.timeOfRestorationPoint;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fusionEnvironmentId(String fusionEnvironmentId) {
            if (fusionEnvironmentId == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "fusionEnvironmentId");
            }
            this.fusionEnvironmentId = fusionEnvironmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDataMaskingOpted(Boolean isDataMaskingOpted) {
            if (isDataMaskingOpted == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "isDataMaskingOpted");
            }
            this.isDataMaskingOpted = isDataMaskingOpted;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder refreshActivityId(String refreshActivityId) {
            if (refreshActivityId == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "refreshActivityId");
            }
            this.refreshActivityId = refreshActivityId;
            return this;
        }
        @CustomType.Setter
        public Builder refreshIssueDetailsLists(List<GetFusionEnvironmentRefreshActivityRefreshIssueDetailsList> refreshIssueDetailsLists) {
            if (refreshIssueDetailsLists == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "refreshIssueDetailsLists");
            }
            this.refreshIssueDetailsLists = refreshIssueDetailsLists;
            return this;
        }
        public Builder refreshIssueDetailsLists(GetFusionEnvironmentRefreshActivityRefreshIssueDetailsList... refreshIssueDetailsLists) {
            return refreshIssueDetailsLists(List.of(refreshIssueDetailsLists));
        }
        @CustomType.Setter
        public Builder serviceAvailability(String serviceAvailability) {
            if (serviceAvailability == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "serviceAvailability");
            }
            this.serviceAvailability = serviceAvailability;
            return this;
        }
        @CustomType.Setter
        public Builder sourceFusionEnvironmentId(String sourceFusionEnvironmentId) {
            if (sourceFusionEnvironmentId == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "sourceFusionEnvironmentId");
            }
            this.sourceFusionEnvironmentId = sourceFusionEnvironmentId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeAccepted(String timeAccepted) {
            if (timeAccepted == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "timeAccepted");
            }
            this.timeAccepted = timeAccepted;
            return this;
        }
        @CustomType.Setter
        public Builder timeExpectedFinish(String timeExpectedFinish) {
            if (timeExpectedFinish == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "timeExpectedFinish");
            }
            this.timeExpectedFinish = timeExpectedFinish;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(String timeFinished) {
            if (timeFinished == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "timeFinished");
            }
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfRestorationPoint(String timeOfRestorationPoint) {
            if (timeOfRestorationPoint == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "timeOfRestorationPoint");
            }
            this.timeOfRestorationPoint = timeOfRestorationPoint;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetFusionEnvironmentRefreshActivityResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetFusionEnvironmentRefreshActivityResult build() {
            final var _resultValue = new GetFusionEnvironmentRefreshActivityResult();
            _resultValue.displayName = displayName;
            _resultValue.fusionEnvironmentId = fusionEnvironmentId;
            _resultValue.id = id;
            _resultValue.isDataMaskingOpted = isDataMaskingOpted;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.refreshActivityId = refreshActivityId;
            _resultValue.refreshIssueDetailsLists = refreshIssueDetailsLists;
            _resultValue.serviceAvailability = serviceAvailability;
            _resultValue.sourceFusionEnvironmentId = sourceFusionEnvironmentId;
            _resultValue.state = state;
            _resultValue.timeAccepted = timeAccepted;
            _resultValue.timeExpectedFinish = timeExpectedFinish;
            _resultValue.timeFinished = timeFinished;
            _resultValue.timeOfRestorationPoint = timeOfRestorationPoint;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
