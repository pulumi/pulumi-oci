// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Functions.outputs.GetFusionEnvironmentCreateFusionEnvironmentAdminUserDetail;
import com.pulumi.oci.Functions.outputs.GetFusionEnvironmentKmsKeyInfo;
import com.pulumi.oci.Functions.outputs.GetFusionEnvironmentMaintenancePolicy;
import com.pulumi.oci.Functions.outputs.GetFusionEnvironmentRefresh;
import com.pulumi.oci.Functions.outputs.GetFusionEnvironmentRule;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFusionEnvironmentResult {
    /**
     * @return Language packs
     * 
     */
    private List<String> additionalLanguagePacks;
    /**
     * @return Patch bundle names
     * 
     */
    private List<String> appliedPatchBundles;
    /**
     * @return Compartment Identifier
     * 
     */
    private String compartmentId;
    private List<GetFusionEnvironmentCreateFusionEnvironmentAdminUserDetail> createFusionEnvironmentAdminUserDetails;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return FusionEnvironment Identifier, can be renamed
     * 
     */
    private String displayName;
    /**
     * @return DNS prefix
     * 
     */
    private String dnsPrefix;
    /**
     * @return The IDCS domain created for the fusion instance
     * 
     */
    private String domainId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return FusionEnvironmentFamily Identifier
     * 
     */
    private String fusionEnvironmentFamilyId;
    private String fusionEnvironmentId;
    /**
     * @return Type of the FusionEnvironment.
     * 
     */
    private String fusionEnvironmentType;
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    private String id;
    /**
     * @return The IDCS Domain URL
     * 
     */
    private String idcsDomainUrl;
    /**
     * @return If it&#39;s true, then the Break Glass feature is enabled
     * 
     */
    private Boolean isBreakGlassEnabled;
    /**
     * @return BYOK key id
     * 
     */
    private String kmsKeyId;
    /**
     * @return BYOK key info
     * 
     */
    private List<GetFusionEnvironmentKmsKeyInfo> kmsKeyInfos;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The lockbox Id of this fusion environment. If there&#39;s no lockbox id, this field will be null
     * 
     */
    private String lockboxId;
    /**
     * @return The policy that specifies the maintenance and upgrade preferences for an environment. For more information about the options, see [Understanding Environment Maintenance](https://docs.cloud.oracle.com/iaas/Content/fusion-applications/plan-environment-family.htm#about-env-maintenance).
     * 
     */
    private List<GetFusionEnvironmentMaintenancePolicy> maintenancePolicies;
    /**
     * @return Public URL
     * 
     */
    private String publicUrl;
    /**
     * @return Describes a refresh of a fusion environment
     * 
     */
    private List<GetFusionEnvironmentRefresh> refreshes;
    /**
     * @return Network Access Control Rules
     * 
     */
    private List<GetFusionEnvironmentRule> rules;
    /**
     * @return The current state of the ServiceInstance.
     * 
     */
    private String state;
    /**
     * @return List of subscription IDs.
     * 
     */
    private List<String> subscriptionIds;
    /**
     * @return Environment Specific Guid/ System Name
     * 
     */
    private String systemName;
    /**
     * @return The time the the FusionEnvironment was created. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;
    /**
     * @return The next maintenance for this environment
     * 
     */
    private String timeUpcomingMaintenance;
    /**
     * @return The time the FusionEnvironment was updated. An RFC3339 formatted datetime string
     * 
     */
    private String timeUpdated;
    /**
     * @return Version of Fusion Apps used by this environment
     * 
     */
    private String version;

    private GetFusionEnvironmentResult() {}
    /**
     * @return Language packs
     * 
     */
    public List<String> additionalLanguagePacks() {
        return this.additionalLanguagePacks;
    }
    /**
     * @return Patch bundle names
     * 
     */
    public List<String> appliedPatchBundles() {
        return this.appliedPatchBundles;
    }
    /**
     * @return Compartment Identifier
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetFusionEnvironmentCreateFusionEnvironmentAdminUserDetail> createFusionEnvironmentAdminUserDetails() {
        return this.createFusionEnvironmentAdminUserDetails;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return FusionEnvironment Identifier, can be renamed
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return DNS prefix
     * 
     */
    public String dnsPrefix() {
        return this.dnsPrefix;
    }
    /**
     * @return The IDCS domain created for the fusion instance
     * 
     */
    public String domainId() {
        return this.domainId;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return FusionEnvironmentFamily Identifier
     * 
     */
    public String fusionEnvironmentFamilyId() {
        return this.fusionEnvironmentFamilyId;
    }
    public String fusionEnvironmentId() {
        return this.fusionEnvironmentId;
    }
    /**
     * @return Type of the FusionEnvironment.
     * 
     */
    public String fusionEnvironmentType() {
        return this.fusionEnvironmentType;
    }
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IDCS Domain URL
     * 
     */
    public String idcsDomainUrl() {
        return this.idcsDomainUrl;
    }
    /**
     * @return If it&#39;s true, then the Break Glass feature is enabled
     * 
     */
    public Boolean isBreakGlassEnabled() {
        return this.isBreakGlassEnabled;
    }
    /**
     * @return BYOK key id
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return BYOK key info
     * 
     */
    public List<GetFusionEnvironmentKmsKeyInfo> kmsKeyInfos() {
        return this.kmsKeyInfos;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The lockbox Id of this fusion environment. If there&#39;s no lockbox id, this field will be null
     * 
     */
    public String lockboxId() {
        return this.lockboxId;
    }
    /**
     * @return The policy that specifies the maintenance and upgrade preferences for an environment. For more information about the options, see [Understanding Environment Maintenance](https://docs.cloud.oracle.com/iaas/Content/fusion-applications/plan-environment-family.htm#about-env-maintenance).
     * 
     */
    public List<GetFusionEnvironmentMaintenancePolicy> maintenancePolicies() {
        return this.maintenancePolicies;
    }
    /**
     * @return Public URL
     * 
     */
    public String publicUrl() {
        return this.publicUrl;
    }
    /**
     * @return Describes a refresh of a fusion environment
     * 
     */
    public List<GetFusionEnvironmentRefresh> refreshes() {
        return this.refreshes;
    }
    /**
     * @return Network Access Control Rules
     * 
     */
    public List<GetFusionEnvironmentRule> rules() {
        return this.rules;
    }
    /**
     * @return The current state of the ServiceInstance.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return List of subscription IDs.
     * 
     */
    public List<String> subscriptionIds() {
        return this.subscriptionIds;
    }
    /**
     * @return Environment Specific Guid/ System Name
     * 
     */
    public String systemName() {
        return this.systemName;
    }
    /**
     * @return The time the the FusionEnvironment was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The next maintenance for this environment
     * 
     */
    public String timeUpcomingMaintenance() {
        return this.timeUpcomingMaintenance;
    }
    /**
     * @return The time the FusionEnvironment was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Version of Fusion Apps used by this environment
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFusionEnvironmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> additionalLanguagePacks;
        private List<String> appliedPatchBundles;
        private String compartmentId;
        private List<GetFusionEnvironmentCreateFusionEnvironmentAdminUserDetail> createFusionEnvironmentAdminUserDetails;
        private Map<String,Object> definedTags;
        private String displayName;
        private String dnsPrefix;
        private String domainId;
        private Map<String,Object> freeformTags;
        private String fusionEnvironmentFamilyId;
        private String fusionEnvironmentId;
        private String fusionEnvironmentType;
        private String id;
        private String idcsDomainUrl;
        private Boolean isBreakGlassEnabled;
        private String kmsKeyId;
        private List<GetFusionEnvironmentKmsKeyInfo> kmsKeyInfos;
        private String lifecycleDetails;
        private String lockboxId;
        private List<GetFusionEnvironmentMaintenancePolicy> maintenancePolicies;
        private String publicUrl;
        private List<GetFusionEnvironmentRefresh> refreshes;
        private List<GetFusionEnvironmentRule> rules;
        private String state;
        private List<String> subscriptionIds;
        private String systemName;
        private String timeCreated;
        private String timeUpcomingMaintenance;
        private String timeUpdated;
        private String version;
        public Builder() {}
        public Builder(GetFusionEnvironmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalLanguagePacks = defaults.additionalLanguagePacks;
    	      this.appliedPatchBundles = defaults.appliedPatchBundles;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createFusionEnvironmentAdminUserDetails = defaults.createFusionEnvironmentAdminUserDetails;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.dnsPrefix = defaults.dnsPrefix;
    	      this.domainId = defaults.domainId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.fusionEnvironmentFamilyId = defaults.fusionEnvironmentFamilyId;
    	      this.fusionEnvironmentId = defaults.fusionEnvironmentId;
    	      this.fusionEnvironmentType = defaults.fusionEnvironmentType;
    	      this.id = defaults.id;
    	      this.idcsDomainUrl = defaults.idcsDomainUrl;
    	      this.isBreakGlassEnabled = defaults.isBreakGlassEnabled;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.kmsKeyInfos = defaults.kmsKeyInfos;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lockboxId = defaults.lockboxId;
    	      this.maintenancePolicies = defaults.maintenancePolicies;
    	      this.publicUrl = defaults.publicUrl;
    	      this.refreshes = defaults.refreshes;
    	      this.rules = defaults.rules;
    	      this.state = defaults.state;
    	      this.subscriptionIds = defaults.subscriptionIds;
    	      this.systemName = defaults.systemName;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpcomingMaintenance = defaults.timeUpcomingMaintenance;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder additionalLanguagePacks(List<String> additionalLanguagePacks) {
            this.additionalLanguagePacks = Objects.requireNonNull(additionalLanguagePacks);
            return this;
        }
        public Builder additionalLanguagePacks(String... additionalLanguagePacks) {
            return additionalLanguagePacks(List.of(additionalLanguagePacks));
        }
        @CustomType.Setter
        public Builder appliedPatchBundles(List<String> appliedPatchBundles) {
            this.appliedPatchBundles = Objects.requireNonNull(appliedPatchBundles);
            return this;
        }
        public Builder appliedPatchBundles(String... appliedPatchBundles) {
            return appliedPatchBundles(List.of(appliedPatchBundles));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder createFusionEnvironmentAdminUserDetails(List<GetFusionEnvironmentCreateFusionEnvironmentAdminUserDetail> createFusionEnvironmentAdminUserDetails) {
            this.createFusionEnvironmentAdminUserDetails = Objects.requireNonNull(createFusionEnvironmentAdminUserDetails);
            return this;
        }
        public Builder createFusionEnvironmentAdminUserDetails(GetFusionEnvironmentCreateFusionEnvironmentAdminUserDetail... createFusionEnvironmentAdminUserDetails) {
            return createFusionEnvironmentAdminUserDetails(List.of(createFusionEnvironmentAdminUserDetails));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder dnsPrefix(String dnsPrefix) {
            this.dnsPrefix = Objects.requireNonNull(dnsPrefix);
            return this;
        }
        @CustomType.Setter
        public Builder domainId(String domainId) {
            this.domainId = Objects.requireNonNull(domainId);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder fusionEnvironmentFamilyId(String fusionEnvironmentFamilyId) {
            this.fusionEnvironmentFamilyId = Objects.requireNonNull(fusionEnvironmentFamilyId);
            return this;
        }
        @CustomType.Setter
        public Builder fusionEnvironmentId(String fusionEnvironmentId) {
            this.fusionEnvironmentId = Objects.requireNonNull(fusionEnvironmentId);
            return this;
        }
        @CustomType.Setter
        public Builder fusionEnvironmentType(String fusionEnvironmentType) {
            this.fusionEnvironmentType = Objects.requireNonNull(fusionEnvironmentType);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idcsDomainUrl(String idcsDomainUrl) {
            this.idcsDomainUrl = Objects.requireNonNull(idcsDomainUrl);
            return this;
        }
        @CustomType.Setter
        public Builder isBreakGlassEnabled(Boolean isBreakGlassEnabled) {
            this.isBreakGlassEnabled = Objects.requireNonNull(isBreakGlassEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyInfos(List<GetFusionEnvironmentKmsKeyInfo> kmsKeyInfos) {
            this.kmsKeyInfos = Objects.requireNonNull(kmsKeyInfos);
            return this;
        }
        public Builder kmsKeyInfos(GetFusionEnvironmentKmsKeyInfo... kmsKeyInfos) {
            return kmsKeyInfos(List.of(kmsKeyInfos));
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder lockboxId(String lockboxId) {
            this.lockboxId = Objects.requireNonNull(lockboxId);
            return this;
        }
        @CustomType.Setter
        public Builder maintenancePolicies(List<GetFusionEnvironmentMaintenancePolicy> maintenancePolicies) {
            this.maintenancePolicies = Objects.requireNonNull(maintenancePolicies);
            return this;
        }
        public Builder maintenancePolicies(GetFusionEnvironmentMaintenancePolicy... maintenancePolicies) {
            return maintenancePolicies(List.of(maintenancePolicies));
        }
        @CustomType.Setter
        public Builder publicUrl(String publicUrl) {
            this.publicUrl = Objects.requireNonNull(publicUrl);
            return this;
        }
        @CustomType.Setter
        public Builder refreshes(List<GetFusionEnvironmentRefresh> refreshes) {
            this.refreshes = Objects.requireNonNull(refreshes);
            return this;
        }
        public Builder refreshes(GetFusionEnvironmentRefresh... refreshes) {
            return refreshes(List.of(refreshes));
        }
        @CustomType.Setter
        public Builder rules(List<GetFusionEnvironmentRule> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(GetFusionEnvironmentRule... rules) {
            return rules(List.of(rules));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionIds(List<String> subscriptionIds) {
            this.subscriptionIds = Objects.requireNonNull(subscriptionIds);
            return this;
        }
        public Builder subscriptionIds(String... subscriptionIds) {
            return subscriptionIds(List.of(subscriptionIds));
        }
        @CustomType.Setter
        public Builder systemName(String systemName) {
            this.systemName = Objects.requireNonNull(systemName);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpcomingMaintenance(String timeUpcomingMaintenance) {
            this.timeUpcomingMaintenance = Objects.requireNonNull(timeUpcomingMaintenance);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetFusionEnvironmentResult build() {
            final var _resultValue = new GetFusionEnvironmentResult();
            _resultValue.additionalLanguagePacks = additionalLanguagePacks;
            _resultValue.appliedPatchBundles = appliedPatchBundles;
            _resultValue.compartmentId = compartmentId;
            _resultValue.createFusionEnvironmentAdminUserDetails = createFusionEnvironmentAdminUserDetails;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.dnsPrefix = dnsPrefix;
            _resultValue.domainId = domainId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.fusionEnvironmentFamilyId = fusionEnvironmentFamilyId;
            _resultValue.fusionEnvironmentId = fusionEnvironmentId;
            _resultValue.fusionEnvironmentType = fusionEnvironmentType;
            _resultValue.id = id;
            _resultValue.idcsDomainUrl = idcsDomainUrl;
            _resultValue.isBreakGlassEnabled = isBreakGlassEnabled;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.kmsKeyInfos = kmsKeyInfos;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.lockboxId = lockboxId;
            _resultValue.maintenancePolicies = maintenancePolicies;
            _resultValue.publicUrl = publicUrl;
            _resultValue.refreshes = refreshes;
            _resultValue.rules = rules;
            _resultValue.state = state;
            _resultValue.subscriptionIds = subscriptionIds;
            _resultValue.systemName = systemName;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpcomingMaintenance = timeUpcomingMaintenance;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
