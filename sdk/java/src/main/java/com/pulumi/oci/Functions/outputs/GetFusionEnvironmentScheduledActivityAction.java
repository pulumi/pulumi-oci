// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFusionEnvironmentScheduledActivityAction {
    /**
     * @return Type of action
     * 
     */
    private @Nullable String actionType;
    /**
     * @return patch that delivered the vertex update prerequisite
     * 
     */
    private @Nullable String artifact;
    /**
     * @return patch artifact category
     * 
     */
    private @Nullable String category;
    /**
     * @return A string that describes the details of the action. It does not have to be unique, and you can change it. Avoid entering confidential information.
     * 
     */
    private @Nullable String description;
    /**
     * @return A string that describeds whether the change is applied hot or cold
     * 
     */
    private @Nullable String mode;
    /**
     * @return month qualifier
     * 
     */
    private @Nullable String qualifier;
    /**
     * @return Unique identifier of the object that represents the action
     * 
     */
    private @Nullable String referenceKey;
    /**
     * @return The current state of the scheduledActivity.
     * 
     */
    private @Nullable String state;
    /**
     * @return name of the repo
     * 
     */
    private @Nullable String version;

    private GetFusionEnvironmentScheduledActivityAction() {}
    /**
     * @return Type of action
     * 
     */
    public Optional<String> actionType() {
        return Optional.ofNullable(this.actionType);
    }
    /**
     * @return patch that delivered the vertex update prerequisite
     * 
     */
    public Optional<String> artifact() {
        return Optional.ofNullable(this.artifact);
    }
    /**
     * @return patch artifact category
     * 
     */
    public Optional<String> category() {
        return Optional.ofNullable(this.category);
    }
    /**
     * @return A string that describes the details of the action. It does not have to be unique, and you can change it. Avoid entering confidential information.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A string that describeds whether the change is applied hot or cold
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return month qualifier
     * 
     */
    public Optional<String> qualifier() {
        return Optional.ofNullable(this.qualifier);
    }
    /**
     * @return Unique identifier of the object that represents the action
     * 
     */
    public Optional<String> referenceKey() {
        return Optional.ofNullable(this.referenceKey);
    }
    /**
     * @return The current state of the scheduledActivity.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return name of the repo
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFusionEnvironmentScheduledActivityAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String actionType;
        private @Nullable String artifact;
        private @Nullable String category;
        private @Nullable String description;
        private @Nullable String mode;
        private @Nullable String qualifier;
        private @Nullable String referenceKey;
        private @Nullable String state;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetFusionEnvironmentScheduledActivityAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionType = defaults.actionType;
    	      this.artifact = defaults.artifact;
    	      this.category = defaults.category;
    	      this.description = defaults.description;
    	      this.mode = defaults.mode;
    	      this.qualifier = defaults.qualifier;
    	      this.referenceKey = defaults.referenceKey;
    	      this.state = defaults.state;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder actionType(@Nullable String actionType) {
            this.actionType = actionType;
            return this;
        }
        @CustomType.Setter
        public Builder artifact(@Nullable String artifact) {
            this.artifact = artifact;
            return this;
        }
        @CustomType.Setter
        public Builder category(@Nullable String category) {
            this.category = category;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder qualifier(@Nullable String qualifier) {
            this.qualifier = qualifier;
            return this;
        }
        @CustomType.Setter
        public Builder referenceKey(@Nullable String referenceKey) {
            this.referenceKey = referenceKey;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetFusionEnvironmentScheduledActivityAction build() {
            final var o = new GetFusionEnvironmentScheduledActivityAction();
            o.actionType = actionType;
            o.artifact = artifact;
            o.category = category;
            o.description = description;
            o.mode = mode;
            o.qualifier = qualifier;
            o.referenceKey = referenceKey;
            o.state = state;
            o.version = version;
            return o;
        }
    }
}
