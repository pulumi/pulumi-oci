// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFusionEnvironmentServiceAttachmentResult {
    /**
     * @return Compartment Identifier
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Service Attachment Display name, can be renamed
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    private String fusionEnvironmentId;
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether this service is provisioned due to the customer being subscribed to a specific SKU
     * 
     */
    private @Nullable Boolean isSkuBased;
    private String serviceAttachmentId;
    /**
     * @return The ID of the service instance created that can be used to identify this on the service control plane
     * 
     */
    private @Nullable String serviceInstanceId;
    /**
     * @return Type of the serviceInstance.
     * 
     */
    private @Nullable String serviceInstanceType;
    /**
     * @return Public URL
     * 
     */
    private @Nullable String serviceUrl;
    /**
     * @return The current state of the ServiceInstance.
     * 
     */
    private @Nullable String state;
    /**
     * @return The time the the ServiceInstance was created. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the ServiceInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeUpdated;

    private GetFusionEnvironmentServiceAttachmentResult() {}
    /**
     * @return Compartment Identifier
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Service Attachment Display name, can be renamed
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    public String fusionEnvironmentId() {
        return this.fusionEnvironmentId;
    }
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether this service is provisioned due to the customer being subscribed to a specific SKU
     * 
     */
    public Optional<Boolean> isSkuBased() {
        return Optional.ofNullable(this.isSkuBased);
    }
    public String serviceAttachmentId() {
        return this.serviceAttachmentId;
    }
    /**
     * @return The ID of the service instance created that can be used to identify this on the service control plane
     * 
     */
    public Optional<String> serviceInstanceId() {
        return Optional.ofNullable(this.serviceInstanceId);
    }
    /**
     * @return Type of the serviceInstance.
     * 
     */
    public Optional<String> serviceInstanceType() {
        return Optional.ofNullable(this.serviceInstanceType);
    }
    /**
     * @return Public URL
     * 
     */
    public Optional<String> serviceUrl() {
        return Optional.ofNullable(this.serviceUrl);
    }
    /**
     * @return The current state of the ServiceInstance.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The time the the ServiceInstance was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the ServiceInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFusionEnvironmentServiceAttachmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private String fusionEnvironmentId;
        private @Nullable String id;
        private @Nullable Boolean isSkuBased;
        private String serviceAttachmentId;
        private @Nullable String serviceInstanceId;
        private @Nullable String serviceInstanceType;
        private @Nullable String serviceUrl;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetFusionEnvironmentServiceAttachmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.fusionEnvironmentId = defaults.fusionEnvironmentId;
    	      this.id = defaults.id;
    	      this.isSkuBased = defaults.isSkuBased;
    	      this.serviceAttachmentId = defaults.serviceAttachmentId;
    	      this.serviceInstanceId = defaults.serviceInstanceId;
    	      this.serviceInstanceType = defaults.serviceInstanceType;
    	      this.serviceUrl = defaults.serviceUrl;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder fusionEnvironmentId(String fusionEnvironmentId) {
            this.fusionEnvironmentId = Objects.requireNonNull(fusionEnvironmentId);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isSkuBased(@Nullable Boolean isSkuBased) {
            this.isSkuBased = isSkuBased;
            return this;
        }
        @CustomType.Setter
        public Builder serviceAttachmentId(String serviceAttachmentId) {
            this.serviceAttachmentId = Objects.requireNonNull(serviceAttachmentId);
            return this;
        }
        @CustomType.Setter
        public Builder serviceInstanceId(@Nullable String serviceInstanceId) {
            this.serviceInstanceId = serviceInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceInstanceType(@Nullable String serviceInstanceType) {
            this.serviceInstanceType = serviceInstanceType;
            return this;
        }
        @CustomType.Setter
        public Builder serviceUrl(@Nullable String serviceUrl) {
            this.serviceUrl = serviceUrl;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetFusionEnvironmentServiceAttachmentResult build() {
            final var o = new GetFusionEnvironmentServiceAttachmentResult();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.fusionEnvironmentId = fusionEnvironmentId;
            o.id = id;
            o.isSkuBased = isSkuBased;
            o.serviceAttachmentId = serviceAttachmentId;
            o.serviceInstanceId = serviceInstanceId;
            o.serviceInstanceType = serviceInstanceType;
            o.serviceUrl = serviceUrl;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
