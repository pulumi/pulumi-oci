// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFusionEnvironmentServiceAttachmentsServiceAttachmentCollectionItem {
    /**
     * @return Action
     * 
     */
    private String action;
    /**
     * @return Compartment Identifier
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    private String id;
    /**
     * @return Whether this service is provisioned due to the customer being subscribed to a specific SKU
     * 
     */
    private Boolean isSkuBased;
    /**
     * @return The ID of the service instance created that can be used to identify this on the service control plane
     * 
     */
    private String serviceInstanceId;
    /**
     * @return A filter that returns all resources that match the specified lifecycle state.
     * 
     */
    private String serviceInstanceType;
    /**
     * @return Public URL
     * 
     */
    private String serviceUrl;
    /**
     * @return A filter that returns all resources that match the specified lifecycle state.
     * 
     */
    private String state;
    /**
     * @return The time the the ServiceInstance was created. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;
    /**
     * @return The time the ServiceInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    private String timeUpdated;

    private GetFusionEnvironmentServiceAttachmentsServiceAttachmentCollectionItem() {}
    /**
     * @return Action
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Compartment Identifier
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether this service is provisioned due to the customer being subscribed to a specific SKU
     * 
     */
    public Boolean isSkuBased() {
        return this.isSkuBased;
    }
    /**
     * @return The ID of the service instance created that can be used to identify this on the service control plane
     * 
     */
    public String serviceInstanceId() {
        return this.serviceInstanceId;
    }
    /**
     * @return A filter that returns all resources that match the specified lifecycle state.
     * 
     */
    public String serviceInstanceType() {
        return this.serviceInstanceType;
    }
    /**
     * @return Public URL
     * 
     */
    public String serviceUrl() {
        return this.serviceUrl;
    }
    /**
     * @return A filter that returns all resources that match the specified lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time the the ServiceInstance was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the ServiceInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFusionEnvironmentServiceAttachmentsServiceAttachmentCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isSkuBased;
        private String serviceInstanceId;
        private String serviceInstanceType;
        private String serviceUrl;
        private String state;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetFusionEnvironmentServiceAttachmentsServiceAttachmentCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isSkuBased = defaults.isSkuBased;
    	      this.serviceInstanceId = defaults.serviceInstanceId;
    	      this.serviceInstanceType = defaults.serviceInstanceType;
    	      this.serviceUrl = defaults.serviceUrl;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isSkuBased(Boolean isSkuBased) {
            this.isSkuBased = Objects.requireNonNull(isSkuBased);
            return this;
        }
        @CustomType.Setter
        public Builder serviceInstanceId(String serviceInstanceId) {
            this.serviceInstanceId = Objects.requireNonNull(serviceInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder serviceInstanceType(String serviceInstanceType) {
            this.serviceInstanceType = Objects.requireNonNull(serviceInstanceType);
            return this;
        }
        @CustomType.Setter
        public Builder serviceUrl(String serviceUrl) {
            this.serviceUrl = Objects.requireNonNull(serviceUrl);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public GetFusionEnvironmentServiceAttachmentsServiceAttachmentCollectionItem build() {
            final var o = new GetFusionEnvironmentServiceAttachmentsServiceAttachmentCollectionItem();
            o.action = action;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isSkuBased = isSkuBased;
            o.serviceInstanceId = serviceInstanceId;
            o.serviceInstanceType = serviceInstanceType;
            o.serviceUrl = serviceUrl;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
