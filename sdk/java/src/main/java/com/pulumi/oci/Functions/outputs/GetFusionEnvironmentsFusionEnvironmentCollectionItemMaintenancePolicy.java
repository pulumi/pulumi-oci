// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Functions.outputs.GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicyQuarterlyUpgradeBeginTime;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicy {
    /**
     * @return User choice to upgrade both production and non-production environments at the same time. Overrides the Fusion environment family setting.
     * 
     */
    private String environmentMaintenanceOverride;
    /**
     * @return Whether the Fusion environment will be updated monthly or updated on the quarterly cycle. This setting overrides the monthly patching setting of its Fusion environment family.
     * 
     */
    private String monthlyPatchingOverride;
    /**
     * @return Determines the quarterly upgrade begin times (monthly maintenance group schedule ) of the Fusion environment.
     * 
     */
    private List<GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicyQuarterlyUpgradeBeginTime> quarterlyUpgradeBeginTimes;

    private GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicy() {}
    /**
     * @return User choice to upgrade both production and non-production environments at the same time. Overrides the Fusion environment family setting.
     * 
     */
    public String environmentMaintenanceOverride() {
        return this.environmentMaintenanceOverride;
    }
    /**
     * @return Whether the Fusion environment will be updated monthly or updated on the quarterly cycle. This setting overrides the monthly patching setting of its Fusion environment family.
     * 
     */
    public String monthlyPatchingOverride() {
        return this.monthlyPatchingOverride;
    }
    /**
     * @return Determines the quarterly upgrade begin times (monthly maintenance group schedule ) of the Fusion environment.
     * 
     */
    public List<GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicyQuarterlyUpgradeBeginTime> quarterlyUpgradeBeginTimes() {
        return this.quarterlyUpgradeBeginTimes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String environmentMaintenanceOverride;
        private String monthlyPatchingOverride;
        private List<GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicyQuarterlyUpgradeBeginTime> quarterlyUpgradeBeginTimes;
        public Builder() {}
        public Builder(GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentMaintenanceOverride = defaults.environmentMaintenanceOverride;
    	      this.monthlyPatchingOverride = defaults.monthlyPatchingOverride;
    	      this.quarterlyUpgradeBeginTimes = defaults.quarterlyUpgradeBeginTimes;
        }

        @CustomType.Setter
        public Builder environmentMaintenanceOverride(String environmentMaintenanceOverride) {
            this.environmentMaintenanceOverride = Objects.requireNonNull(environmentMaintenanceOverride);
            return this;
        }
        @CustomType.Setter
        public Builder monthlyPatchingOverride(String monthlyPatchingOverride) {
            this.monthlyPatchingOverride = Objects.requireNonNull(monthlyPatchingOverride);
            return this;
        }
        @CustomType.Setter
        public Builder quarterlyUpgradeBeginTimes(List<GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicyQuarterlyUpgradeBeginTime> quarterlyUpgradeBeginTimes) {
            this.quarterlyUpgradeBeginTimes = Objects.requireNonNull(quarterlyUpgradeBeginTimes);
            return this;
        }
        public Builder quarterlyUpgradeBeginTimes(GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicyQuarterlyUpgradeBeginTime... quarterlyUpgradeBeginTimes) {
            return quarterlyUpgradeBeginTimes(List.of(quarterlyUpgradeBeginTimes));
        }
        public GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicy build() {
            final var _resultValue = new GetFusionEnvironmentsFusionEnvironmentCollectionItemMaintenancePolicy();
            _resultValue.environmentMaintenanceOverride = environmentMaintenanceOverride;
            _resultValue.monthlyPatchingOverride = monthlyPatchingOverride;
            _resultValue.quarterlyUpgradeBeginTimes = quarterlyUpgradeBeginTimes;
            return _resultValue;
        }
    }
}
