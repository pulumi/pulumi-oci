// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPbfListingVersionConfig {
    /**
     * @return Details about why this policy is required and what it will be used for.
     * 
     */
    private String description;
    /**
     * @return Is this a required config or an optional one. Requests with required config params missing will be rejected.
     * 
     */
    private Boolean isOptional;
    /**
     * @return The key name of the config param.
     * 
     */
    private String key;

    private GetPbfListingVersionConfig() {}
    /**
     * @return Details about why this policy is required and what it will be used for.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Is this a required config or an optional one. Requests with required config params missing will be rejected.
     * 
     */
    public Boolean isOptional() {
        return this.isOptional;
    }
    /**
     * @return The key name of the config param.
     * 
     */
    public String key() {
        return this.key;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPbfListingVersionConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private Boolean isOptional;
        private String key;
        public Builder() {}
        public Builder(GetPbfListingVersionConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.isOptional = defaults.isOptional;
    	      this.key = defaults.key;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPbfListingVersionConfig", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder isOptional(Boolean isOptional) {
            if (isOptional == null) {
              throw new MissingRequiredPropertyException("GetPbfListingVersionConfig", "isOptional");
            }
            this.isOptional = isOptional;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetPbfListingVersionConfig", "key");
            }
            this.key = key;
            return this;
        }
        public GetPbfListingVersionConfig build() {
            final var _resultValue = new GetPbfListingVersionConfig();
            _resultValue.description = description;
            _resultValue.isOptional = isOptional;
            _resultValue.key = key;
            return _resultValue;
        }
    }
}
