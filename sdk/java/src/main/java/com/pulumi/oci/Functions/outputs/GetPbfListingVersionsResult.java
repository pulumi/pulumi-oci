// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Functions.outputs.GetPbfListingVersionsFilter;
import com.pulumi.oci.Functions.outputs.GetPbfListingVersionsPbfListingVersionsCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPbfListingVersionsResult {
    private @Nullable List<GetPbfListingVersionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean isCurrentVersion;
    /**
     * @return A brief descriptive name for the PBF trigger.
     * 
     */
    private @Nullable String name;
    /**
     * @return The OCID of the PbfListing this resource version belongs to.
     * 
     */
    private String pbfListingId;
    private @Nullable String pbfListingVersionId;
    /**
     * @return The list of pbf_listing_versions_collection.
     * 
     */
    private List<GetPbfListingVersionsPbfListingVersionsCollection> pbfListingVersionsCollections;
    /**
     * @return The current state of the PBF resource.
     * 
     */
    private @Nullable String state;

    private GetPbfListingVersionsResult() {}
    public List<GetPbfListingVersionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> isCurrentVersion() {
        return Optional.ofNullable(this.isCurrentVersion);
    }
    /**
     * @return A brief descriptive name for the PBF trigger.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The OCID of the PbfListing this resource version belongs to.
     * 
     */
    public String pbfListingId() {
        return this.pbfListingId;
    }
    public Optional<String> pbfListingVersionId() {
        return Optional.ofNullable(this.pbfListingVersionId);
    }
    /**
     * @return The list of pbf_listing_versions_collection.
     * 
     */
    public List<GetPbfListingVersionsPbfListingVersionsCollection> pbfListingVersionsCollections() {
        return this.pbfListingVersionsCollections;
    }
    /**
     * @return The current state of the PBF resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPbfListingVersionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetPbfListingVersionsFilter> filters;
        private String id;
        private @Nullable Boolean isCurrentVersion;
        private @Nullable String name;
        private String pbfListingId;
        private @Nullable String pbfListingVersionId;
        private List<GetPbfListingVersionsPbfListingVersionsCollection> pbfListingVersionsCollections;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetPbfListingVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isCurrentVersion = defaults.isCurrentVersion;
    	      this.name = defaults.name;
    	      this.pbfListingId = defaults.pbfListingId;
    	      this.pbfListingVersionId = defaults.pbfListingVersionId;
    	      this.pbfListingVersionsCollections = defaults.pbfListingVersionsCollections;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetPbfListingVersionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetPbfListingVersionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPbfListingVersionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCurrentVersion(@Nullable Boolean isCurrentVersion) {

            this.isCurrentVersion = isCurrentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder pbfListingId(String pbfListingId) {
            if (pbfListingId == null) {
              throw new MissingRequiredPropertyException("GetPbfListingVersionsResult", "pbfListingId");
            }
            this.pbfListingId = pbfListingId;
            return this;
        }
        @CustomType.Setter
        public Builder pbfListingVersionId(@Nullable String pbfListingVersionId) {

            this.pbfListingVersionId = pbfListingVersionId;
            return this;
        }
        @CustomType.Setter
        public Builder pbfListingVersionsCollections(List<GetPbfListingVersionsPbfListingVersionsCollection> pbfListingVersionsCollections) {
            if (pbfListingVersionsCollections == null) {
              throw new MissingRequiredPropertyException("GetPbfListingVersionsResult", "pbfListingVersionsCollections");
            }
            this.pbfListingVersionsCollections = pbfListingVersionsCollections;
            return this;
        }
        public Builder pbfListingVersionsCollections(GetPbfListingVersionsPbfListingVersionsCollection... pbfListingVersionsCollections) {
            return pbfListingVersionsCollections(List.of(pbfListingVersionsCollections));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetPbfListingVersionsResult build() {
            final var _resultValue = new GetPbfListingVersionsResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isCurrentVersion = isCurrentVersion;
            _resultValue.name = name;
            _resultValue.pbfListingId = pbfListingId;
            _resultValue.pbfListingVersionId = pbfListingVersionId;
            _resultValue.pbfListingVersionsCollections = pbfListingVersionsCollections;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
