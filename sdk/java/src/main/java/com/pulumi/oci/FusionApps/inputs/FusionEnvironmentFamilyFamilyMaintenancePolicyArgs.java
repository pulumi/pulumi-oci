// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FusionApps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FusionEnvironmentFamilyFamilyMaintenancePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FusionEnvironmentFamilyFamilyMaintenancePolicyArgs Empty = new FusionEnvironmentFamilyFamilyMaintenancePolicyArgs();

    /**
     * (Updatable) Option to upgrade both production and non-production environments at the same time. When set to PROD both types of environnments are upgraded on the production schedule. When set to NON_PROD both types of environments are upgraded on the non-production schedule.
     * 
     */
    @Import(name="concurrentMaintenance")
    private @Nullable Output<String> concurrentMaintenance;

    /**
     * @return (Updatable) Option to upgrade both production and non-production environments at the same time. When set to PROD both types of environnments are upgraded on the production schedule. When set to NON_PROD both types of environments are upgraded on the non-production schedule.
     * 
     */
    public Optional<Output<String>> concurrentMaintenance() {
        return Optional.ofNullable(this.concurrentMaintenance);
    }

    /**
     * (Updatable) When True, monthly patching is enabled for the environment family.
     * 
     */
    @Import(name="isMonthlyPatchingEnabled")
    private @Nullable Output<Boolean> isMonthlyPatchingEnabled;

    /**
     * @return (Updatable) When True, monthly patching is enabled for the environment family.
     * 
     */
    public Optional<Output<Boolean>> isMonthlyPatchingEnabled() {
        return Optional.ofNullable(this.isMonthlyPatchingEnabled);
    }

    /**
     * The quarterly maintenance month group schedule of the Fusion environment family.
     * 
     */
    @Import(name="quarterlyUpgradeBeginTimes")
    private @Nullable Output<String> quarterlyUpgradeBeginTimes;

    /**
     * @return The quarterly maintenance month group schedule of the Fusion environment family.
     * 
     */
    public Optional<Output<String>> quarterlyUpgradeBeginTimes() {
        return Optional.ofNullable(this.quarterlyUpgradeBeginTimes);
    }

    private FusionEnvironmentFamilyFamilyMaintenancePolicyArgs() {}

    private FusionEnvironmentFamilyFamilyMaintenancePolicyArgs(FusionEnvironmentFamilyFamilyMaintenancePolicyArgs $) {
        this.concurrentMaintenance = $.concurrentMaintenance;
        this.isMonthlyPatchingEnabled = $.isMonthlyPatchingEnabled;
        this.quarterlyUpgradeBeginTimes = $.quarterlyUpgradeBeginTimes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FusionEnvironmentFamilyFamilyMaintenancePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FusionEnvironmentFamilyFamilyMaintenancePolicyArgs $;

        public Builder() {
            $ = new FusionEnvironmentFamilyFamilyMaintenancePolicyArgs();
        }

        public Builder(FusionEnvironmentFamilyFamilyMaintenancePolicyArgs defaults) {
            $ = new FusionEnvironmentFamilyFamilyMaintenancePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param concurrentMaintenance (Updatable) Option to upgrade both production and non-production environments at the same time. When set to PROD both types of environnments are upgraded on the production schedule. When set to NON_PROD both types of environments are upgraded on the non-production schedule.
         * 
         * @return builder
         * 
         */
        public Builder concurrentMaintenance(@Nullable Output<String> concurrentMaintenance) {
            $.concurrentMaintenance = concurrentMaintenance;
            return this;
        }

        /**
         * @param concurrentMaintenance (Updatable) Option to upgrade both production and non-production environments at the same time. When set to PROD both types of environnments are upgraded on the production schedule. When set to NON_PROD both types of environments are upgraded on the non-production schedule.
         * 
         * @return builder
         * 
         */
        public Builder concurrentMaintenance(String concurrentMaintenance) {
            return concurrentMaintenance(Output.of(concurrentMaintenance));
        }

        /**
         * @param isMonthlyPatchingEnabled (Updatable) When True, monthly patching is enabled for the environment family.
         * 
         * @return builder
         * 
         */
        public Builder isMonthlyPatchingEnabled(@Nullable Output<Boolean> isMonthlyPatchingEnabled) {
            $.isMonthlyPatchingEnabled = isMonthlyPatchingEnabled;
            return this;
        }

        /**
         * @param isMonthlyPatchingEnabled (Updatable) When True, monthly patching is enabled for the environment family.
         * 
         * @return builder
         * 
         */
        public Builder isMonthlyPatchingEnabled(Boolean isMonthlyPatchingEnabled) {
            return isMonthlyPatchingEnabled(Output.of(isMonthlyPatchingEnabled));
        }

        /**
         * @param quarterlyUpgradeBeginTimes The quarterly maintenance month group schedule of the Fusion environment family.
         * 
         * @return builder
         * 
         */
        public Builder quarterlyUpgradeBeginTimes(@Nullable Output<String> quarterlyUpgradeBeginTimes) {
            $.quarterlyUpgradeBeginTimes = quarterlyUpgradeBeginTimes;
            return this;
        }

        /**
         * @param quarterlyUpgradeBeginTimes The quarterly maintenance month group schedule of the Fusion environment family.
         * 
         * @return builder
         * 
         */
        public Builder quarterlyUpgradeBeginTimes(String quarterlyUpgradeBeginTimes) {
            return quarterlyUpgradeBeginTimes(Output.of(quarterlyUpgradeBeginTimes));
        }

        public FusionEnvironmentFamilyFamilyMaintenancePolicyArgs build() {
            return $;
        }
    }

}
