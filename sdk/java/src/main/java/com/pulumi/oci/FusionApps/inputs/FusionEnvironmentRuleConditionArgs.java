// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FusionApps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class FusionEnvironmentRuleConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FusionEnvironmentRuleConditionArgs Empty = new FusionEnvironmentRuleConditionArgs();

    /**
     * (Updatable) RuleCondition type
     * 
     */
    @Import(name="attributeName", required=true)
    private Output<String> attributeName;

    /**
     * @return (Updatable) RuleCondition type
     * 
     */
    public Output<String> attributeName() {
        return this.attributeName;
    }

    /**
     * (Updatable) The OCID of the originating VCN that an incoming packet must match. You can use this condition in conjunction with `SourceVcnIpAddressCondition`. **NOTE:** If you define this condition for a rule without a `SourceVcnIpAddressCondition`, this condition matches all incoming traffic in the specified VCN.
     * 
     */
    @Import(name="attributeValue", required=true)
    private Output<String> attributeValue;

    /**
     * @return (Updatable) The OCID of the originating VCN that an incoming packet must match. You can use this condition in conjunction with `SourceVcnIpAddressCondition`. **NOTE:** If you define this condition for a rule without a `SourceVcnIpAddressCondition`, this condition matches all incoming traffic in the specified VCN.
     * 
     */
    public Output<String> attributeValue() {
        return this.attributeValue;
    }

    private FusionEnvironmentRuleConditionArgs() {}

    private FusionEnvironmentRuleConditionArgs(FusionEnvironmentRuleConditionArgs $) {
        this.attributeName = $.attributeName;
        this.attributeValue = $.attributeValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FusionEnvironmentRuleConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FusionEnvironmentRuleConditionArgs $;

        public Builder() {
            $ = new FusionEnvironmentRuleConditionArgs();
        }

        public Builder(FusionEnvironmentRuleConditionArgs defaults) {
            $ = new FusionEnvironmentRuleConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributeName (Updatable) RuleCondition type
         * 
         * @return builder
         * 
         */
        public Builder attributeName(Output<String> attributeName) {
            $.attributeName = attributeName;
            return this;
        }

        /**
         * @param attributeName (Updatable) RuleCondition type
         * 
         * @return builder
         * 
         */
        public Builder attributeName(String attributeName) {
            return attributeName(Output.of(attributeName));
        }

        /**
         * @param attributeValue (Updatable) The OCID of the originating VCN that an incoming packet must match. You can use this condition in conjunction with `SourceVcnIpAddressCondition`. **NOTE:** If you define this condition for a rule without a `SourceVcnIpAddressCondition`, this condition matches all incoming traffic in the specified VCN.
         * 
         * @return builder
         * 
         */
        public Builder attributeValue(Output<String> attributeValue) {
            $.attributeValue = attributeValue;
            return this;
        }

        /**
         * @param attributeValue (Updatable) The OCID of the originating VCN that an incoming packet must match. You can use this condition in conjunction with `SourceVcnIpAddressCondition`. **NOTE:** If you define this condition for a rule without a `SourceVcnIpAddressCondition`, this condition matches all incoming traffic in the specified VCN.
         * 
         * @return builder
         * 
         */
        public Builder attributeValue(String attributeValue) {
            return attributeValue(Output.of(attributeValue));
        }

        public FusionEnvironmentRuleConditionArgs build() {
            $.attributeName = Objects.requireNonNull($.attributeName, "expected parameter 'attributeName' to be non-null");
            $.attributeValue = Objects.requireNonNull($.attributeValue, "expected parameter 'attributeValue' to be non-null");
            return $;
        }
    }

}
