// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GenerativeAi.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AgentToolToolConfigApiSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final AgentToolToolConfigApiSchemaArgs Empty = new AgentToolToolConfigApiSchemaArgs();

    /**
     * (Updatable) Type of Api Schema InputLocation. The allowed values are:
     * * `INLINE`: The Api schema input location is inline.
     * * `OBJECT_STORAGE_LOCATION`: The Api schema input location is object storage.
     * 
     */
    @Import(name="apiSchemaInputLocationType", required=true)
    private Output<String> apiSchemaInputLocationType;

    /**
     * @return (Updatable) Type of Api Schema InputLocation. The allowed values are:
     * * `INLINE`: The Api schema input location is inline.
     * * `OBJECT_STORAGE_LOCATION`: The Api schema input location is object storage.
     * 
     */
    public Output<String> apiSchemaInputLocationType() {
        return this.apiSchemaInputLocationType;
    }

    /**
     * (Updatable) The bucket name of an object.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return (Updatable) The bucket name of an object.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * (Updatable) Inline content as input.
     * 
     */
    @Import(name="content")
    private @Nullable Output<String> content;

    /**
     * @return (Updatable) Inline content as input.
     * 
     */
    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * (Updatable) The namespace name of an object.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return (Updatable) The namespace name of an object.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * (Updatable) The location/name of object.
     * 
     */
    @Import(name="object")
    private @Nullable Output<String> object;

    /**
     * @return (Updatable) The location/name of object.
     * 
     */
    public Optional<Output<String>> object() {
        return Optional.ofNullable(this.object);
    }

    private AgentToolToolConfigApiSchemaArgs() {}

    private AgentToolToolConfigApiSchemaArgs(AgentToolToolConfigApiSchemaArgs $) {
        this.apiSchemaInputLocationType = $.apiSchemaInputLocationType;
        this.bucket = $.bucket;
        this.content = $.content;
        this.namespace = $.namespace;
        this.object = $.object;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AgentToolToolConfigApiSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AgentToolToolConfigApiSchemaArgs $;

        public Builder() {
            $ = new AgentToolToolConfigApiSchemaArgs();
        }

        public Builder(AgentToolToolConfigApiSchemaArgs defaults) {
            $ = new AgentToolToolConfigApiSchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiSchemaInputLocationType (Updatable) Type of Api Schema InputLocation. The allowed values are:
         * * `INLINE`: The Api schema input location is inline.
         * * `OBJECT_STORAGE_LOCATION`: The Api schema input location is object storage.
         * 
         * @return builder
         * 
         */
        public Builder apiSchemaInputLocationType(Output<String> apiSchemaInputLocationType) {
            $.apiSchemaInputLocationType = apiSchemaInputLocationType;
            return this;
        }

        /**
         * @param apiSchemaInputLocationType (Updatable) Type of Api Schema InputLocation. The allowed values are:
         * * `INLINE`: The Api schema input location is inline.
         * * `OBJECT_STORAGE_LOCATION`: The Api schema input location is object storage.
         * 
         * @return builder
         * 
         */
        public Builder apiSchemaInputLocationType(String apiSchemaInputLocationType) {
            return apiSchemaInputLocationType(Output.of(apiSchemaInputLocationType));
        }

        /**
         * @param bucket (Updatable) The bucket name of an object.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket (Updatable) The bucket name of an object.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param content (Updatable) Inline content as input.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content (Updatable) Inline content as input.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param namespace (Updatable) The namespace name of an object.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace (Updatable) The namespace name of an object.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param object (Updatable) The location/name of object.
         * 
         * @return builder
         * 
         */
        public Builder object(@Nullable Output<String> object) {
            $.object = object;
            return this;
        }

        /**
         * @param object (Updatable) The location/name of object.
         * 
         * @return builder
         * 
         */
        public Builder object(String object) {
            return object(Output.of(object));
        }

        public AgentToolToolConfigApiSchemaArgs build() {
            if ($.apiSchemaInputLocationType == null) {
                throw new MissingRequiredPropertyException("AgentToolToolConfigApiSchemaArgs", "apiSchemaInputLocationType");
            }
            return $;
        }
    }

}
