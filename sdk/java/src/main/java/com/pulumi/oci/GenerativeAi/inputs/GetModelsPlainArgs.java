// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GenerativeAi.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GenerativeAi.inputs.GetModelsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetModelsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetModelsPlainArgs Empty = new GetModelsPlainArgs();

    /**
     * A filter to return only resources their capability matches the given capability.
     * 
     */
    @Import(name="capabilities")
    private @Nullable List<String> capabilities;

    /**
     * @return A filter to return only resources their capability matches the given capability.
     * 
     */
    public Optional<List<String>> capabilities() {
        return Optional.ofNullable(this.capabilities);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only resources that match the given display name exactly.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetModelsFilter> filters;

    public Optional<List<GetModelsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The ID of the model.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The ID of the model.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter to return only resources that match the entire vendor given.
     * 
     */
    @Import(name="vendor")
    private @Nullable String vendor;

    /**
     * @return A filter to return only resources that match the entire vendor given.
     * 
     */
    public Optional<String> vendor() {
        return Optional.ofNullable(this.vendor);
    }

    private GetModelsPlainArgs() {}

    private GetModelsPlainArgs(GetModelsPlainArgs $) {
        this.capabilities = $.capabilities;
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.id = $.id;
        this.state = $.state;
        this.vendor = $.vendor;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetModelsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetModelsPlainArgs $;

        public Builder() {
            $ = new GetModelsPlainArgs();
        }

        public Builder(GetModelsPlainArgs defaults) {
            $ = new GetModelsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capabilities A filter to return only resources their capability matches the given capability.
         * 
         * @return builder
         * 
         */
        public Builder capabilities(@Nullable List<String> capabilities) {
            $.capabilities = capabilities;
            return this;
        }

        /**
         * @param capabilities A filter to return only resources their capability matches the given capability.
         * 
         * @return builder
         * 
         */
        public Builder capabilities(String... capabilities) {
            return capabilities(List.of(capabilities));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the given display name exactly.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetModelsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetModelsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id The ID of the model.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param state A filter to return only resources their lifecycleState matches the given lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param vendor A filter to return only resources that match the entire vendor given.
         * 
         * @return builder
         * 
         */
        public Builder vendor(@Nullable String vendor) {
            $.vendor = vendor;
            return this;
        }

        public GetModelsPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetModelsPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
