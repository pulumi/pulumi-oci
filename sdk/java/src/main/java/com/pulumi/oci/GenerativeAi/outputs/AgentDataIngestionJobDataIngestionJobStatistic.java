// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GenerativeAi.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentDataIngestionJobDataIngestionJobStatistic {
    /**
     * @return The duration of this ingestion job.
     * 
     */
    private @Nullable Integer durationInSeconds;
    /**
     * @return The number of files that have failed during the ingestion.
     * 
     */
    private @Nullable Integer numberOfFailedFiles;
    /**
     * @return The number of files that have been ignored during the ingestion.
     * 
     */
    private @Nullable Integer numberOfIgnoredFiles;
    /**
     * @return The number of files that have been successfully ingested during the ingestion.
     * 
     */
    private @Nullable Integer numberOfIngestedFiles;

    private AgentDataIngestionJobDataIngestionJobStatistic() {}
    /**
     * @return The duration of this ingestion job.
     * 
     */
    public Optional<Integer> durationInSeconds() {
        return Optional.ofNullable(this.durationInSeconds);
    }
    /**
     * @return The number of files that have failed during the ingestion.
     * 
     */
    public Optional<Integer> numberOfFailedFiles() {
        return Optional.ofNullable(this.numberOfFailedFiles);
    }
    /**
     * @return The number of files that have been ignored during the ingestion.
     * 
     */
    public Optional<Integer> numberOfIgnoredFiles() {
        return Optional.ofNullable(this.numberOfIgnoredFiles);
    }
    /**
     * @return The number of files that have been successfully ingested during the ingestion.
     * 
     */
    public Optional<Integer> numberOfIngestedFiles() {
        return Optional.ofNullable(this.numberOfIngestedFiles);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentDataIngestionJobDataIngestionJobStatistic defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer durationInSeconds;
        private @Nullable Integer numberOfFailedFiles;
        private @Nullable Integer numberOfIgnoredFiles;
        private @Nullable Integer numberOfIngestedFiles;
        public Builder() {}
        public Builder(AgentDataIngestionJobDataIngestionJobStatistic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.durationInSeconds = defaults.durationInSeconds;
    	      this.numberOfFailedFiles = defaults.numberOfFailedFiles;
    	      this.numberOfIgnoredFiles = defaults.numberOfIgnoredFiles;
    	      this.numberOfIngestedFiles = defaults.numberOfIngestedFiles;
        }

        @CustomType.Setter
        public Builder durationInSeconds(@Nullable Integer durationInSeconds) {

            this.durationInSeconds = durationInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder numberOfFailedFiles(@Nullable Integer numberOfFailedFiles) {

            this.numberOfFailedFiles = numberOfFailedFiles;
            return this;
        }
        @CustomType.Setter
        public Builder numberOfIgnoredFiles(@Nullable Integer numberOfIgnoredFiles) {

            this.numberOfIgnoredFiles = numberOfIgnoredFiles;
            return this;
        }
        @CustomType.Setter
        public Builder numberOfIngestedFiles(@Nullable Integer numberOfIngestedFiles) {

            this.numberOfIngestedFiles = numberOfIngestedFiles;
            return this;
        }
        public AgentDataIngestionJobDataIngestionJobStatistic build() {
            final var _resultValue = new AgentDataIngestionJobDataIngestionJobStatistic();
            _resultValue.durationInSeconds = durationInSeconds;
            _resultValue.numberOfFailedFiles = numberOfFailedFiles;
            _resultValue.numberOfIgnoredFiles = numberOfIgnoredFiles;
            _resultValue.numberOfIngestedFiles = numberOfIngestedFiles;
            return _resultValue;
        }
    }
}
