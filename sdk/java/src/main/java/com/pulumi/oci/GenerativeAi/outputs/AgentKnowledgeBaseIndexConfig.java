// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GenerativeAi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GenerativeAi.outputs.AgentKnowledgeBaseIndexConfigDatabaseConnection;
import com.pulumi.oci.GenerativeAi.outputs.AgentKnowledgeBaseIndexConfigDatabaseFunction;
import com.pulumi.oci.GenerativeAi.outputs.AgentKnowledgeBaseIndexConfigIndex;
import com.pulumi.oci.GenerativeAi.outputs.AgentKnowledgeBaseIndexConfigSecretDetail;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AgentKnowledgeBaseIndexConfig {
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OpenSearch Cluster.
     * 
     */
    private @Nullable String clusterId;
    /**
     * @return (Updatable) The connection type for Databases.
     * 
     */
    private @Nullable AgentKnowledgeBaseIndexConfigDatabaseConnection databaseConnection;
    /**
     * @return (Updatable) Array of Database functions to be used.
     * 
     */
    private @Nullable List<AgentKnowledgeBaseIndexConfigDatabaseFunction> databaseFunctions;
    /**
     * @return (Updatable) The type of index.
     * 
     */
    private String indexConfigType;
    /**
     * @return (Updatable) Index configuration for open search.
     * 
     */
    private @Nullable List<AgentKnowledgeBaseIndexConfigIndex> indexes;
    /**
     * @return (Updatable) The details of configured security configuration on OpenSearch.
     * 
     */
    private @Nullable AgentKnowledgeBaseIndexConfigSecretDetail secretDetail;
    /**
     * @return (Updatable) Whether to enable Hybrid search in service managed OpenSearch.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable Boolean shouldEnableHybridSearch;

    private AgentKnowledgeBaseIndexConfig() {}
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OpenSearch Cluster.
     * 
     */
    public Optional<String> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }
    /**
     * @return (Updatable) The connection type for Databases.
     * 
     */
    public Optional<AgentKnowledgeBaseIndexConfigDatabaseConnection> databaseConnection() {
        return Optional.ofNullable(this.databaseConnection);
    }
    /**
     * @return (Updatable) Array of Database functions to be used.
     * 
     */
    public List<AgentKnowledgeBaseIndexConfigDatabaseFunction> databaseFunctions() {
        return this.databaseFunctions == null ? List.of() : this.databaseFunctions;
    }
    /**
     * @return (Updatable) The type of index.
     * 
     */
    public String indexConfigType() {
        return this.indexConfigType;
    }
    /**
     * @return (Updatable) Index configuration for open search.
     * 
     */
    public List<AgentKnowledgeBaseIndexConfigIndex> indexes() {
        return this.indexes == null ? List.of() : this.indexes;
    }
    /**
     * @return (Updatable) The details of configured security configuration on OpenSearch.
     * 
     */
    public Optional<AgentKnowledgeBaseIndexConfigSecretDetail> secretDetail() {
        return Optional.ofNullable(this.secretDetail);
    }
    /**
     * @return (Updatable) Whether to enable Hybrid search in service managed OpenSearch.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Boolean> shouldEnableHybridSearch() {
        return Optional.ofNullable(this.shouldEnableHybridSearch);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AgentKnowledgeBaseIndexConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clusterId;
        private @Nullable AgentKnowledgeBaseIndexConfigDatabaseConnection databaseConnection;
        private @Nullable List<AgentKnowledgeBaseIndexConfigDatabaseFunction> databaseFunctions;
        private String indexConfigType;
        private @Nullable List<AgentKnowledgeBaseIndexConfigIndex> indexes;
        private @Nullable AgentKnowledgeBaseIndexConfigSecretDetail secretDetail;
        private @Nullable Boolean shouldEnableHybridSearch;
        public Builder() {}
        public Builder(AgentKnowledgeBaseIndexConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.databaseConnection = defaults.databaseConnection;
    	      this.databaseFunctions = defaults.databaseFunctions;
    	      this.indexConfigType = defaults.indexConfigType;
    	      this.indexes = defaults.indexes;
    	      this.secretDetail = defaults.secretDetail;
    	      this.shouldEnableHybridSearch = defaults.shouldEnableHybridSearch;
        }

        @CustomType.Setter
        public Builder clusterId(@Nullable String clusterId) {

            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder databaseConnection(@Nullable AgentKnowledgeBaseIndexConfigDatabaseConnection databaseConnection) {

            this.databaseConnection = databaseConnection;
            return this;
        }
        @CustomType.Setter
        public Builder databaseFunctions(@Nullable List<AgentKnowledgeBaseIndexConfigDatabaseFunction> databaseFunctions) {

            this.databaseFunctions = databaseFunctions;
            return this;
        }
        public Builder databaseFunctions(AgentKnowledgeBaseIndexConfigDatabaseFunction... databaseFunctions) {
            return databaseFunctions(List.of(databaseFunctions));
        }
        @CustomType.Setter
        public Builder indexConfigType(String indexConfigType) {
            if (indexConfigType == null) {
              throw new MissingRequiredPropertyException("AgentKnowledgeBaseIndexConfig", "indexConfigType");
            }
            this.indexConfigType = indexConfigType;
            return this;
        }
        @CustomType.Setter
        public Builder indexes(@Nullable List<AgentKnowledgeBaseIndexConfigIndex> indexes) {

            this.indexes = indexes;
            return this;
        }
        public Builder indexes(AgentKnowledgeBaseIndexConfigIndex... indexes) {
            return indexes(List.of(indexes));
        }
        @CustomType.Setter
        public Builder secretDetail(@Nullable AgentKnowledgeBaseIndexConfigSecretDetail secretDetail) {

            this.secretDetail = secretDetail;
            return this;
        }
        @CustomType.Setter
        public Builder shouldEnableHybridSearch(@Nullable Boolean shouldEnableHybridSearch) {

            this.shouldEnableHybridSearch = shouldEnableHybridSearch;
            return this;
        }
        public AgentKnowledgeBaseIndexConfig build() {
            final var _resultValue = new AgentKnowledgeBaseIndexConfig();
            _resultValue.clusterId = clusterId;
            _resultValue.databaseConnection = databaseConnection;
            _resultValue.databaseFunctions = databaseFunctions;
            _resultValue.indexConfigType = indexConfigType;
            _resultValue.indexes = indexes;
            _resultValue.secretDetail = secretDetail;
            _resultValue.shouldEnableHybridSearch = shouldEnableHybridSearch;
            return _resultValue;
        }
    }
}
