// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GenerativeAi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GenerativeAi.outputs.GetAgentToolsToolCollectionItemToolConfigApiSchema;
import com.pulumi.oci.GenerativeAi.outputs.GetAgentToolsToolCollectionItemToolConfigDatabaseConnection;
import com.pulumi.oci.GenerativeAi.outputs.GetAgentToolsToolCollectionItemToolConfigDatabaseSchema;
import com.pulumi.oci.GenerativeAi.outputs.GetAgentToolsToolCollectionItemToolConfigFunction;
import com.pulumi.oci.GenerativeAi.outputs.GetAgentToolsToolCollectionItemToolConfigGenerationLlmCustomization;
import com.pulumi.oci.GenerativeAi.outputs.GetAgentToolsToolCollectionItemToolConfigHttpEndpointAuthConfig;
import com.pulumi.oci.GenerativeAi.outputs.GetAgentToolsToolCollectionItemToolConfigIclExample;
import com.pulumi.oci.GenerativeAi.outputs.GetAgentToolsToolCollectionItemToolConfigKnowledgeBaseConfig;
import com.pulumi.oci.GenerativeAi.outputs.GetAgentToolsToolCollectionItemToolConfigTableAndColumnDescription;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAgentToolsToolCollectionItemToolConfig {
    /**
     * @return The AgentEndpoint OCID to be used as a tool in this agent.
     * 
     */
    private String agentEndpointId;
    /**
     * @return The input location definition for Api schema.
     * 
     */
    private List<GetAgentToolsToolCollectionItemToolConfigApiSchema> apiSchemas;
    /**
     * @return The connection type for Databases.
     * 
     */
    private List<GetAgentToolsToolCollectionItemToolConfigDatabaseConnection> databaseConnections;
    /**
     * @return The input location definition.
     * 
     */
    private List<GetAgentToolsToolCollectionItemToolConfigDatabaseSchema> databaseSchemas;
    /**
     * @return Dialect to be used for SQL generation.
     * 
     */
    private String dialect;
    /**
     * @return Details of Function for Function calling tool.
     * 
     */
    private List<GetAgentToolsToolCollectionItemToolConfigFunction> functions;
    /**
     * @return Configuration to customize LLM.
     * 
     */
    private List<GetAgentToolsToolCollectionItemToolConfigGenerationLlmCustomization> generationLlmCustomizations;
    /**
     * @return Authentication configuration used for HTTP Endpoint tools. Defines the type of authentication and the source of credentials.
     * 
     */
    private List<GetAgentToolsToolCollectionItemToolConfigHttpEndpointAuthConfig> httpEndpointAuthConfigs;
    /**
     * @return The input location definition.
     * 
     */
    private List<GetAgentToolsToolCollectionItemToolConfigIclExample> iclExamples;
    /**
     * @return The KnowledgeBase configurations that this RAG Tool uses
     * 
     */
    private List<GetAgentToolsToolCollectionItemToolConfigKnowledgeBaseConfig> knowledgeBaseConfigs;
    /**
     * @return Size of the model.
     * 
     */
    private String modelSize;
    /**
     * @return To enable/disable self correction.
     * 
     */
    private Boolean shouldEnableSelfCorrection;
    /**
     * @return To enable/disable SQL execution.
     * 
     */
    private Boolean shouldEnableSqlExecution;
    /**
     * @return The subnet ID from agent developer tenancy through which the egress is going to be routed.
     * 
     */
    private String subnetId;
    /**
     * @return The input location definition.
     * 
     */
    private List<GetAgentToolsToolCollectionItemToolConfigTableAndColumnDescription> tableAndColumnDescriptions;
    /**
     * @return The type of the Tool config. The allowed values are:
     * * `SQL_TOOL_CONFIG`: The config for sql Tool.
     * * `RAG_TOOL_CONFIG`: The config for rag Tool.
     * * FUNCTION_CALLING_TOOL_CONFIG: The config for Function calling Tool.
     * 
     */
    private String toolConfigType;

    private GetAgentToolsToolCollectionItemToolConfig() {}
    /**
     * @return The AgentEndpoint OCID to be used as a tool in this agent.
     * 
     */
    public String agentEndpointId() {
        return this.agentEndpointId;
    }
    /**
     * @return The input location definition for Api schema.
     * 
     */
    public List<GetAgentToolsToolCollectionItemToolConfigApiSchema> apiSchemas() {
        return this.apiSchemas;
    }
    /**
     * @return The connection type for Databases.
     * 
     */
    public List<GetAgentToolsToolCollectionItemToolConfigDatabaseConnection> databaseConnections() {
        return this.databaseConnections;
    }
    /**
     * @return The input location definition.
     * 
     */
    public List<GetAgentToolsToolCollectionItemToolConfigDatabaseSchema> databaseSchemas() {
        return this.databaseSchemas;
    }
    /**
     * @return Dialect to be used for SQL generation.
     * 
     */
    public String dialect() {
        return this.dialect;
    }
    /**
     * @return Details of Function for Function calling tool.
     * 
     */
    public List<GetAgentToolsToolCollectionItemToolConfigFunction> functions() {
        return this.functions;
    }
    /**
     * @return Configuration to customize LLM.
     * 
     */
    public List<GetAgentToolsToolCollectionItemToolConfigGenerationLlmCustomization> generationLlmCustomizations() {
        return this.generationLlmCustomizations;
    }
    /**
     * @return Authentication configuration used for HTTP Endpoint tools. Defines the type of authentication and the source of credentials.
     * 
     */
    public List<GetAgentToolsToolCollectionItemToolConfigHttpEndpointAuthConfig> httpEndpointAuthConfigs() {
        return this.httpEndpointAuthConfigs;
    }
    /**
     * @return The input location definition.
     * 
     */
    public List<GetAgentToolsToolCollectionItemToolConfigIclExample> iclExamples() {
        return this.iclExamples;
    }
    /**
     * @return The KnowledgeBase configurations that this RAG Tool uses
     * 
     */
    public List<GetAgentToolsToolCollectionItemToolConfigKnowledgeBaseConfig> knowledgeBaseConfigs() {
        return this.knowledgeBaseConfigs;
    }
    /**
     * @return Size of the model.
     * 
     */
    public String modelSize() {
        return this.modelSize;
    }
    /**
     * @return To enable/disable self correction.
     * 
     */
    public Boolean shouldEnableSelfCorrection() {
        return this.shouldEnableSelfCorrection;
    }
    /**
     * @return To enable/disable SQL execution.
     * 
     */
    public Boolean shouldEnableSqlExecution() {
        return this.shouldEnableSqlExecution;
    }
    /**
     * @return The subnet ID from agent developer tenancy through which the egress is going to be routed.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The input location definition.
     * 
     */
    public List<GetAgentToolsToolCollectionItemToolConfigTableAndColumnDescription> tableAndColumnDescriptions() {
        return this.tableAndColumnDescriptions;
    }
    /**
     * @return The type of the Tool config. The allowed values are:
     * * `SQL_TOOL_CONFIG`: The config for sql Tool.
     * * `RAG_TOOL_CONFIG`: The config for rag Tool.
     * * FUNCTION_CALLING_TOOL_CONFIG: The config for Function calling Tool.
     * 
     */
    public String toolConfigType() {
        return this.toolConfigType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAgentToolsToolCollectionItemToolConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String agentEndpointId;
        private List<GetAgentToolsToolCollectionItemToolConfigApiSchema> apiSchemas;
        private List<GetAgentToolsToolCollectionItemToolConfigDatabaseConnection> databaseConnections;
        private List<GetAgentToolsToolCollectionItemToolConfigDatabaseSchema> databaseSchemas;
        private String dialect;
        private List<GetAgentToolsToolCollectionItemToolConfigFunction> functions;
        private List<GetAgentToolsToolCollectionItemToolConfigGenerationLlmCustomization> generationLlmCustomizations;
        private List<GetAgentToolsToolCollectionItemToolConfigHttpEndpointAuthConfig> httpEndpointAuthConfigs;
        private List<GetAgentToolsToolCollectionItemToolConfigIclExample> iclExamples;
        private List<GetAgentToolsToolCollectionItemToolConfigKnowledgeBaseConfig> knowledgeBaseConfigs;
        private String modelSize;
        private Boolean shouldEnableSelfCorrection;
        private Boolean shouldEnableSqlExecution;
        private String subnetId;
        private List<GetAgentToolsToolCollectionItemToolConfigTableAndColumnDescription> tableAndColumnDescriptions;
        private String toolConfigType;
        public Builder() {}
        public Builder(GetAgentToolsToolCollectionItemToolConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentEndpointId = defaults.agentEndpointId;
    	      this.apiSchemas = defaults.apiSchemas;
    	      this.databaseConnections = defaults.databaseConnections;
    	      this.databaseSchemas = defaults.databaseSchemas;
    	      this.dialect = defaults.dialect;
    	      this.functions = defaults.functions;
    	      this.generationLlmCustomizations = defaults.generationLlmCustomizations;
    	      this.httpEndpointAuthConfigs = defaults.httpEndpointAuthConfigs;
    	      this.iclExamples = defaults.iclExamples;
    	      this.knowledgeBaseConfigs = defaults.knowledgeBaseConfigs;
    	      this.modelSize = defaults.modelSize;
    	      this.shouldEnableSelfCorrection = defaults.shouldEnableSelfCorrection;
    	      this.shouldEnableSqlExecution = defaults.shouldEnableSqlExecution;
    	      this.subnetId = defaults.subnetId;
    	      this.tableAndColumnDescriptions = defaults.tableAndColumnDescriptions;
    	      this.toolConfigType = defaults.toolConfigType;
        }

        @CustomType.Setter
        public Builder agentEndpointId(String agentEndpointId) {
            if (agentEndpointId == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "agentEndpointId");
            }
            this.agentEndpointId = agentEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder apiSchemas(List<GetAgentToolsToolCollectionItemToolConfigApiSchema> apiSchemas) {
            if (apiSchemas == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "apiSchemas");
            }
            this.apiSchemas = apiSchemas;
            return this;
        }
        public Builder apiSchemas(GetAgentToolsToolCollectionItemToolConfigApiSchema... apiSchemas) {
            return apiSchemas(List.of(apiSchemas));
        }
        @CustomType.Setter
        public Builder databaseConnections(List<GetAgentToolsToolCollectionItemToolConfigDatabaseConnection> databaseConnections) {
            if (databaseConnections == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "databaseConnections");
            }
            this.databaseConnections = databaseConnections;
            return this;
        }
        public Builder databaseConnections(GetAgentToolsToolCollectionItemToolConfigDatabaseConnection... databaseConnections) {
            return databaseConnections(List.of(databaseConnections));
        }
        @CustomType.Setter
        public Builder databaseSchemas(List<GetAgentToolsToolCollectionItemToolConfigDatabaseSchema> databaseSchemas) {
            if (databaseSchemas == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "databaseSchemas");
            }
            this.databaseSchemas = databaseSchemas;
            return this;
        }
        public Builder databaseSchemas(GetAgentToolsToolCollectionItemToolConfigDatabaseSchema... databaseSchemas) {
            return databaseSchemas(List.of(databaseSchemas));
        }
        @CustomType.Setter
        public Builder dialect(String dialect) {
            if (dialect == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "dialect");
            }
            this.dialect = dialect;
            return this;
        }
        @CustomType.Setter
        public Builder functions(List<GetAgentToolsToolCollectionItemToolConfigFunction> functions) {
            if (functions == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "functions");
            }
            this.functions = functions;
            return this;
        }
        public Builder functions(GetAgentToolsToolCollectionItemToolConfigFunction... functions) {
            return functions(List.of(functions));
        }
        @CustomType.Setter
        public Builder generationLlmCustomizations(List<GetAgentToolsToolCollectionItemToolConfigGenerationLlmCustomization> generationLlmCustomizations) {
            if (generationLlmCustomizations == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "generationLlmCustomizations");
            }
            this.generationLlmCustomizations = generationLlmCustomizations;
            return this;
        }
        public Builder generationLlmCustomizations(GetAgentToolsToolCollectionItemToolConfigGenerationLlmCustomization... generationLlmCustomizations) {
            return generationLlmCustomizations(List.of(generationLlmCustomizations));
        }
        @CustomType.Setter
        public Builder httpEndpointAuthConfigs(List<GetAgentToolsToolCollectionItemToolConfigHttpEndpointAuthConfig> httpEndpointAuthConfigs) {
            if (httpEndpointAuthConfigs == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "httpEndpointAuthConfigs");
            }
            this.httpEndpointAuthConfigs = httpEndpointAuthConfigs;
            return this;
        }
        public Builder httpEndpointAuthConfigs(GetAgentToolsToolCollectionItemToolConfigHttpEndpointAuthConfig... httpEndpointAuthConfigs) {
            return httpEndpointAuthConfigs(List.of(httpEndpointAuthConfigs));
        }
        @CustomType.Setter
        public Builder iclExamples(List<GetAgentToolsToolCollectionItemToolConfigIclExample> iclExamples) {
            if (iclExamples == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "iclExamples");
            }
            this.iclExamples = iclExamples;
            return this;
        }
        public Builder iclExamples(GetAgentToolsToolCollectionItemToolConfigIclExample... iclExamples) {
            return iclExamples(List.of(iclExamples));
        }
        @CustomType.Setter
        public Builder knowledgeBaseConfigs(List<GetAgentToolsToolCollectionItemToolConfigKnowledgeBaseConfig> knowledgeBaseConfigs) {
            if (knowledgeBaseConfigs == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "knowledgeBaseConfigs");
            }
            this.knowledgeBaseConfigs = knowledgeBaseConfigs;
            return this;
        }
        public Builder knowledgeBaseConfigs(GetAgentToolsToolCollectionItemToolConfigKnowledgeBaseConfig... knowledgeBaseConfigs) {
            return knowledgeBaseConfigs(List.of(knowledgeBaseConfigs));
        }
        @CustomType.Setter
        public Builder modelSize(String modelSize) {
            if (modelSize == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "modelSize");
            }
            this.modelSize = modelSize;
            return this;
        }
        @CustomType.Setter
        public Builder shouldEnableSelfCorrection(Boolean shouldEnableSelfCorrection) {
            if (shouldEnableSelfCorrection == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "shouldEnableSelfCorrection");
            }
            this.shouldEnableSelfCorrection = shouldEnableSelfCorrection;
            return this;
        }
        @CustomType.Setter
        public Builder shouldEnableSqlExecution(Boolean shouldEnableSqlExecution) {
            if (shouldEnableSqlExecution == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "shouldEnableSqlExecution");
            }
            this.shouldEnableSqlExecution = shouldEnableSqlExecution;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder tableAndColumnDescriptions(List<GetAgentToolsToolCollectionItemToolConfigTableAndColumnDescription> tableAndColumnDescriptions) {
            if (tableAndColumnDescriptions == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "tableAndColumnDescriptions");
            }
            this.tableAndColumnDescriptions = tableAndColumnDescriptions;
            return this;
        }
        public Builder tableAndColumnDescriptions(GetAgentToolsToolCollectionItemToolConfigTableAndColumnDescription... tableAndColumnDescriptions) {
            return tableAndColumnDescriptions(List.of(tableAndColumnDescriptions));
        }
        @CustomType.Setter
        public Builder toolConfigType(String toolConfigType) {
            if (toolConfigType == null) {
              throw new MissingRequiredPropertyException("GetAgentToolsToolCollectionItemToolConfig", "toolConfigType");
            }
            this.toolConfigType = toolConfigType;
            return this;
        }
        public GetAgentToolsToolCollectionItemToolConfig build() {
            final var _resultValue = new GetAgentToolsToolCollectionItemToolConfig();
            _resultValue.agentEndpointId = agentEndpointId;
            _resultValue.apiSchemas = apiSchemas;
            _resultValue.databaseConnections = databaseConnections;
            _resultValue.databaseSchemas = databaseSchemas;
            _resultValue.dialect = dialect;
            _resultValue.functions = functions;
            _resultValue.generationLlmCustomizations = generationLlmCustomizations;
            _resultValue.httpEndpointAuthConfigs = httpEndpointAuthConfigs;
            _resultValue.iclExamples = iclExamples;
            _resultValue.knowledgeBaseConfigs = knowledgeBaseConfigs;
            _resultValue.modelSize = modelSize;
            _resultValue.shouldEnableSelfCorrection = shouldEnableSelfCorrection;
            _resultValue.shouldEnableSqlExecution = shouldEnableSqlExecution;
            _resultValue.subnetId = subnetId;
            _resultValue.tableAndColumnDescriptions = tableAndColumnDescriptions;
            _resultValue.toolConfigType = toolConfigType;
            return _resultValue;
        }
    }
}
