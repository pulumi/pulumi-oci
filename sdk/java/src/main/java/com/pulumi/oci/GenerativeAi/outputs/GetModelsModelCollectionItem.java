// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GenerativeAi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GenerativeAi.outputs.GetModelsModelCollectionItemFineTuneDetail;
import com.pulumi.oci.GenerativeAi.outputs.GetModelsModelCollectionItemModelMetric;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetModelsModelCollectionItem {
    /**
     * @return The OCID of the base model that&#39;s used for fine-tuning. For pretrained models, the value is null.
     * 
     */
    private String baseModelId;
    /**
     * @return Describes what this model can be used for.
     * 
     */
    private List<String> capabilities;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    private Map<String,String> definedTags;
    /**
     * @return An optional description of the model.
     * 
     */
    private String description;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private String displayName;
    /**
     * @return Details about fine-tuning a custom model.
     * 
     */
    private List<GetModelsModelCollectionItemFineTuneDetail> fineTuneDetails;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The ID of the model.
     * 
     */
    private String id;
    /**
     * @return Whether a model is supported long-term. Only applicable to base models.
     * 
     */
    private Boolean isLongTermSupported;
    /**
     * @return A message describing the current state of the model in more detail that can provide actionable information.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Model metrics during the creation of a new model.
     * 
     */
    private List<GetModelsModelCollectionItemModelMetric> modelMetrics;
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    private String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time that the model was created in the format of an RFC3339 datetime string.
     * 
     */
    private String timeCreated;
    /**
     * @return Corresponds to the time when the custom model and its associated foundation model will be deprecated.
     * 
     */
    private String timeDeprecated;
    /**
     * @return The date and time that the model was updated in the format of an RFC3339 datetime string.
     * 
     */
    private String timeUpdated;
    private String type;
    /**
     * @return A filter to return only resources that match the entire vendor given.
     * 
     */
    private String vendor;
    /**
     * @return The version of the model.
     * 
     */
    private String version;

    private GetModelsModelCollectionItem() {}
    /**
     * @return The OCID of the base model that&#39;s used for fine-tuning. For pretrained models, the value is null.
     * 
     */
    public String baseModelId() {
        return this.baseModelId;
    }
    /**
     * @return Describes what this model can be used for.
     * 
     */
    public List<String> capabilities() {
        return this.capabilities;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return An optional description of the model.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Details about fine-tuning a custom model.
     * 
     */
    public List<GetModelsModelCollectionItemFineTuneDetail> fineTuneDetails() {
        return this.fineTuneDetails;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The ID of the model.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether a model is supported long-term. Only applicable to base models.
     * 
     */
    public Boolean isLongTermSupported() {
        return this.isLongTermSupported;
    }
    /**
     * @return A message describing the current state of the model in more detail that can provide actionable information.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Model metrics during the creation of a new model.
     * 
     */
    public List<GetModelsModelCollectionItemModelMetric> modelMetrics() {
        return this.modelMetrics;
    }
    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time that the model was created in the format of an RFC3339 datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Corresponds to the time when the custom model and its associated foundation model will be deprecated.
     * 
     */
    public String timeDeprecated() {
        return this.timeDeprecated;
    }
    /**
     * @return The date and time that the model was updated in the format of an RFC3339 datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    public String type() {
        return this.type;
    }
    /**
     * @return A filter to return only resources that match the entire vendor given.
     * 
     */
    public String vendor() {
        return this.vendor;
    }
    /**
     * @return The version of the model.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelsModelCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String baseModelId;
        private List<String> capabilities;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private List<GetModelsModelCollectionItemFineTuneDetail> fineTuneDetails;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isLongTermSupported;
        private String lifecycleDetails;
        private List<GetModelsModelCollectionItemModelMetric> modelMetrics;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeDeprecated;
        private String timeUpdated;
        private String type;
        private String vendor;
        private String version;
        public Builder() {}
        public Builder(GetModelsModelCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseModelId = defaults.baseModelId;
    	      this.capabilities = defaults.capabilities;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.fineTuneDetails = defaults.fineTuneDetails;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isLongTermSupported = defaults.isLongTermSupported;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.modelMetrics = defaults.modelMetrics;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeDeprecated = defaults.timeDeprecated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
    	      this.vendor = defaults.vendor;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder baseModelId(String baseModelId) {
            if (baseModelId == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "baseModelId");
            }
            this.baseModelId = baseModelId;
            return this;
        }
        @CustomType.Setter
        public Builder capabilities(List<String> capabilities) {
            if (capabilities == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "capabilities");
            }
            this.capabilities = capabilities;
            return this;
        }
        public Builder capabilities(String... capabilities) {
            return capabilities(List.of(capabilities));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fineTuneDetails(List<GetModelsModelCollectionItemFineTuneDetail> fineTuneDetails) {
            if (fineTuneDetails == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "fineTuneDetails");
            }
            this.fineTuneDetails = fineTuneDetails;
            return this;
        }
        public Builder fineTuneDetails(GetModelsModelCollectionItemFineTuneDetail... fineTuneDetails) {
            return fineTuneDetails(List.of(fineTuneDetails));
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isLongTermSupported(Boolean isLongTermSupported) {
            if (isLongTermSupported == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "isLongTermSupported");
            }
            this.isLongTermSupported = isLongTermSupported;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder modelMetrics(List<GetModelsModelCollectionItemModelMetric> modelMetrics) {
            if (modelMetrics == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "modelMetrics");
            }
            this.modelMetrics = modelMetrics;
            return this;
        }
        public Builder modelMetrics(GetModelsModelCollectionItemModelMetric... modelMetrics) {
            return modelMetrics(List.of(modelMetrics));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeDeprecated(String timeDeprecated) {
            if (timeDeprecated == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "timeDeprecated");
            }
            this.timeDeprecated = timeDeprecated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vendor(String vendor) {
            if (vendor == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "vendor");
            }
            this.vendor = vendor;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetModelsModelCollectionItem", "version");
            }
            this.version = version;
            return this;
        }
        public GetModelsModelCollectionItem build() {
            final var _resultValue = new GetModelsModelCollectionItem();
            _resultValue.baseModelId = baseModelId;
            _resultValue.capabilities = capabilities;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.fineTuneDetails = fineTuneDetails;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isLongTermSupported = isLongTermSupported;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.modelMetrics = modelMetrics;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeDeprecated = timeDeprecated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.type = type;
            _resultValue.vendor = vendor;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
