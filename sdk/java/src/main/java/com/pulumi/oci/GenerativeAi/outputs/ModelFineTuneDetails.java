// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GenerativeAi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GenerativeAi.outputs.ModelFineTuneDetailsTrainingConfig;
import com.pulumi.oci.GenerativeAi.outputs.ModelFineTuneDetailsTrainingDataset;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelFineTuneDetails {
    /**
     * @return The OCID of the dedicated AI cluster this fine-tuning runs on.
     * 
     */
    private String dedicatedAiClusterId;
    /**
     * @return The fine-tuning method and hyperparameters used for fine-tuning a custom model.
     * 
     */
    private @Nullable ModelFineTuneDetailsTrainingConfig trainingConfig;
    /**
     * @return The dataset used to fine-tune the model.
     * 
     * Only one dataset is allowed per custom model, which is split 90-10 for training and validating. You must provide the dataset in a JSON Lines (JSONL) file. Each line in the JSONL file must have the format: `{&#34;prompt&#34;: &#34;&lt;first prompt&gt;&#34;, &#34;completion&#34;: &#34;&lt;expected completion given first prompt&gt;&#34;}`
     * 
     */
    private ModelFineTuneDetailsTrainingDataset trainingDataset;

    private ModelFineTuneDetails() {}
    /**
     * @return The OCID of the dedicated AI cluster this fine-tuning runs on.
     * 
     */
    public String dedicatedAiClusterId() {
        return this.dedicatedAiClusterId;
    }
    /**
     * @return The fine-tuning method and hyperparameters used for fine-tuning a custom model.
     * 
     */
    public Optional<ModelFineTuneDetailsTrainingConfig> trainingConfig() {
        return Optional.ofNullable(this.trainingConfig);
    }
    /**
     * @return The dataset used to fine-tune the model.
     * 
     * Only one dataset is allowed per custom model, which is split 90-10 for training and validating. You must provide the dataset in a JSON Lines (JSONL) file. Each line in the JSONL file must have the format: `{&#34;prompt&#34;: &#34;&lt;first prompt&gt;&#34;, &#34;completion&#34;: &#34;&lt;expected completion given first prompt&gt;&#34;}`
     * 
     */
    public ModelFineTuneDetailsTrainingDataset trainingDataset() {
        return this.trainingDataset;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelFineTuneDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dedicatedAiClusterId;
        private @Nullable ModelFineTuneDetailsTrainingConfig trainingConfig;
        private ModelFineTuneDetailsTrainingDataset trainingDataset;
        public Builder() {}
        public Builder(ModelFineTuneDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dedicatedAiClusterId = defaults.dedicatedAiClusterId;
    	      this.trainingConfig = defaults.trainingConfig;
    	      this.trainingDataset = defaults.trainingDataset;
        }

        @CustomType.Setter
        public Builder dedicatedAiClusterId(String dedicatedAiClusterId) {
            if (dedicatedAiClusterId == null) {
              throw new MissingRequiredPropertyException("ModelFineTuneDetails", "dedicatedAiClusterId");
            }
            this.dedicatedAiClusterId = dedicatedAiClusterId;
            return this;
        }
        @CustomType.Setter
        public Builder trainingConfig(@Nullable ModelFineTuneDetailsTrainingConfig trainingConfig) {

            this.trainingConfig = trainingConfig;
            return this;
        }
        @CustomType.Setter
        public Builder trainingDataset(ModelFineTuneDetailsTrainingDataset trainingDataset) {
            if (trainingDataset == null) {
              throw new MissingRequiredPropertyException("ModelFineTuneDetails", "trainingDataset");
            }
            this.trainingDataset = trainingDataset;
            return this;
        }
        public ModelFineTuneDetails build() {
            final var _resultValue = new ModelFineTuneDetails();
            _resultValue.dedicatedAiClusterId = dedicatedAiClusterId;
            _resultValue.trainingConfig = trainingConfig;
            _resultValue.trainingDataset = trainingDataset;
            return _resultValue;
        }
    }
}
