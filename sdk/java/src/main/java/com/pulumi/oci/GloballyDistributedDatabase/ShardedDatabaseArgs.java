// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GloballyDistributedDatabase;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GloballyDistributedDatabase.inputs.ShardedDatabaseCatalogDetailArgs;
import com.pulumi.oci.GloballyDistributedDatabase.inputs.ShardedDatabasePatchOperationArgs;
import com.pulumi.oci.GloballyDistributedDatabase.inputs.ShardedDatabaseShardDetailArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ShardedDatabaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final ShardedDatabaseArgs Empty = new ShardedDatabaseArgs();

    /**
     * Collection of ATP-Dedicated catalogs that needs to be created.
     * 
     */
    @Import(name="catalogDetails", required=true)
    private Output<List<ShardedDatabaseCatalogDetailArgs>> catalogDetails;

    /**
     * @return Collection of ATP-Dedicated catalogs that needs to be created.
     * 
     */
    public Output<List<ShardedDatabaseCatalogDetailArgs>> catalogDetails() {
        return this.catalogDetails;
    }

    /**
     * The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
     * 
     */
    @Import(name="characterSet", required=true)
    private Output<String> characterSet;

    /**
     * @return The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
     * 
     */
    public Output<String> characterSet() {
        return this.characterSet;
    }

    /**
     * The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
     * 
     */
    @Import(name="chunks")
    private @Nullable Output<Integer> chunks;

    /**
     * @return The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
     * 
     */
    public Optional<Output<Integer>> chunks() {
        return Optional.ofNullable(this.chunks);
    }

    /**
     * The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
     * 
     */
    @Import(name="clusterCertificateCommonName")
    private @Nullable Output<String> clusterCertificateCommonName;

    /**
     * @return The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
     * 
     */
    public Optional<Output<String>> clusterCertificateCommonName() {
        return Optional.ofNullable(this.clusterCertificateCommonName);
    }

    /**
     * (Updatable) Identifier of the compartment where sharded database is to be created.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Identifier of the compartment where sharded database is to be created.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
     * 
     */
    @Import(name="configureShardingTrigger")
    private @Nullable Output<Integer> configureShardingTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> configureShardingTrigger() {
        return Optional.ofNullable(this.configureShardingTrigger);
    }

    /**
     * The database deployment type.
     * 
     */
    @Import(name="dbDeploymentType", required=true)
    private Output<String> dbDeploymentType;

    /**
     * @return The database deployment type.
     * 
     */
    public Output<String> dbDeploymentType() {
        return this.dbDeploymentType;
    }

    /**
     * Oracle Database version of the Autonomous Container Database.
     * 
     */
    @Import(name="dbVersion", required=true)
    private Output<String> dbVersion;

    /**
     * @return Oracle Database version of the Autonomous Container Database.
     * 
     */
    public Output<String> dbVersion() {
        return this.dbVersion;
    }

    /**
     * Possible workload types.
     * 
     */
    @Import(name="dbWorkload", required=true)
    private Output<String> dbWorkload;

    /**
     * @return Possible workload types.
     * 
     */
    public Output<String> dbWorkload() {
        return this.dbWorkload;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Oracle sharded database display name.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) Oracle sharded database display name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
     * 
     */
    @Import(name="downloadGsmCertificateSigningRequestTrigger")
    private @Nullable Output<Integer> downloadGsmCertificateSigningRequestTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> downloadGsmCertificateSigningRequestTrigger() {
        return Optional.ofNullable(this.downloadGsmCertificateSigningRequestTrigger);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
     * 
     */
    @Import(name="generateGsmCertificateSigningRequestTrigger")
    private @Nullable Output<Integer> generateGsmCertificateSigningRequestTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> generateGsmCertificateSigningRequestTrigger() {
        return Optional.ofNullable(this.generateGsmCertificateSigningRequestTrigger);
    }

    /**
     * (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
     * 
     */
    @Import(name="getConnectionStringTrigger")
    private @Nullable Output<Integer> getConnectionStringTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> getConnectionStringTrigger() {
        return Optional.ofNullable(this.getConnectionStringTrigger);
    }

    /**
     * The listener port number for sharded database.
     * 
     */
    @Import(name="listenerPort", required=true)
    private Output<Integer> listenerPort;

    /**
     * @return The listener port number for sharded database.
     * 
     */
    public Output<Integer> listenerPort() {
        return this.listenerPort;
    }

    /**
     * The TLS listener port number for sharded database.
     * 
     */
    @Import(name="listenerPortTls", required=true)
    private Output<Integer> listenerPortTls;

    /**
     * @return The TLS listener port number for sharded database.
     * 
     */
    public Output<Integer> listenerPortTls() {
        return this.listenerPortTls;
    }

    /**
     * The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
     * 
     */
    @Import(name="ncharacterSet", required=true)
    private Output<String> ncharacterSet;

    /**
     * @return The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
     * 
     */
    public Output<String> ncharacterSet() {
        return this.ncharacterSet;
    }

    /**
     * Ons port local for sharded database.
     * 
     */
    @Import(name="onsPortLocal", required=true)
    private Output<Integer> onsPortLocal;

    /**
     * @return Ons port local for sharded database.
     * 
     */
    public Output<Integer> onsPortLocal() {
        return this.onsPortLocal;
    }

    /**
     * Ons remote port for sharded database.
     * 
     */
    @Import(name="onsPortRemote", required=true)
    private Output<Integer> onsPortRemote;

    /**
     * @return Ons remote port for sharded database.
     * 
     */
    public Output<Integer> onsPortRemote() {
        return this.onsPortRemote;
    }

    /**
     * (Updatable)
     * 
     */
    @Import(name="patchOperations")
    private @Nullable Output<List<ShardedDatabasePatchOperationArgs>> patchOperations;

    /**
     * @return (Updatable)
     * 
     */
    public Optional<Output<List<ShardedDatabasePatchOperationArgs>>> patchOperations() {
        return Optional.ofNullable(this.patchOperations);
    }

    /**
     * Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
     * 
     */
    @Import(name="prefix", required=true)
    private Output<String> prefix;

    /**
     * @return Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
     * 
     */
    public Output<String> prefix() {
        return this.prefix;
    }

    /**
     * Collection of ATP-Dedicated shards that needs to be created.
     * 
     */
    @Import(name="shardDetails", required=true)
    private Output<List<ShardedDatabaseShardDetailArgs>> shardDetails;

    /**
     * @return Collection of ATP-Dedicated shards that needs to be created.
     * 
     */
    public Output<List<ShardedDatabaseShardDetailArgs>> shardDetails() {
        return this.shardDetails;
    }

    /**
     * Sharding Method.
     * 
     */
    @Import(name="shardingMethod", required=true)
    private Output<String> shardingMethod;

    /**
     * @return Sharding Method.
     * 
     */
    public Output<String> shardingMethod() {
        return this.shardingMethod;
    }

    /**
     * (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
     * 
     */
    @Import(name="startDatabaseTrigger")
    private @Nullable Output<Integer> startDatabaseTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> startDatabaseTrigger() {
        return Optional.ofNullable(this.startDatabaseTrigger);
    }

    /**
     * (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
     * 
     */
    @Import(name="stopDatabaseTrigger")
    private @Nullable Output<Integer> stopDatabaseTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> stopDatabaseTrigger() {
        return Optional.ofNullable(this.stopDatabaseTrigger);
    }

    /**
     * (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="validateNetworkTrigger")
    private @Nullable Output<Integer> validateNetworkTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Integer>> validateNetworkTrigger() {
        return Optional.ofNullable(this.validateNetworkTrigger);
    }

    private ShardedDatabaseArgs() {}

    private ShardedDatabaseArgs(ShardedDatabaseArgs $) {
        this.catalogDetails = $.catalogDetails;
        this.characterSet = $.characterSet;
        this.chunks = $.chunks;
        this.clusterCertificateCommonName = $.clusterCertificateCommonName;
        this.compartmentId = $.compartmentId;
        this.configureShardingTrigger = $.configureShardingTrigger;
        this.dbDeploymentType = $.dbDeploymentType;
        this.dbVersion = $.dbVersion;
        this.dbWorkload = $.dbWorkload;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.downloadGsmCertificateSigningRequestTrigger = $.downloadGsmCertificateSigningRequestTrigger;
        this.freeformTags = $.freeformTags;
        this.generateGsmCertificateSigningRequestTrigger = $.generateGsmCertificateSigningRequestTrigger;
        this.getConnectionStringTrigger = $.getConnectionStringTrigger;
        this.listenerPort = $.listenerPort;
        this.listenerPortTls = $.listenerPortTls;
        this.ncharacterSet = $.ncharacterSet;
        this.onsPortLocal = $.onsPortLocal;
        this.onsPortRemote = $.onsPortRemote;
        this.patchOperations = $.patchOperations;
        this.prefix = $.prefix;
        this.shardDetails = $.shardDetails;
        this.shardingMethod = $.shardingMethod;
        this.startDatabaseTrigger = $.startDatabaseTrigger;
        this.stopDatabaseTrigger = $.stopDatabaseTrigger;
        this.validateNetworkTrigger = $.validateNetworkTrigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShardedDatabaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShardedDatabaseArgs $;

        public Builder() {
            $ = new ShardedDatabaseArgs();
        }

        public Builder(ShardedDatabaseArgs defaults) {
            $ = new ShardedDatabaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogDetails Collection of ATP-Dedicated catalogs that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder catalogDetails(Output<List<ShardedDatabaseCatalogDetailArgs>> catalogDetails) {
            $.catalogDetails = catalogDetails;
            return this;
        }

        /**
         * @param catalogDetails Collection of ATP-Dedicated catalogs that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder catalogDetails(List<ShardedDatabaseCatalogDetailArgs> catalogDetails) {
            return catalogDetails(Output.of(catalogDetails));
        }

        /**
         * @param catalogDetails Collection of ATP-Dedicated catalogs that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder catalogDetails(ShardedDatabaseCatalogDetailArgs... catalogDetails) {
            return catalogDetails(List.of(catalogDetails));
        }

        /**
         * @param characterSet The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
         * 
         * @return builder
         * 
         */
        public Builder characterSet(Output<String> characterSet) {
            $.characterSet = characterSet;
            return this;
        }

        /**
         * @param characterSet The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
         * 
         * @return builder
         * 
         */
        public Builder characterSet(String characterSet) {
            return characterSet(Output.of(characterSet));
        }

        /**
         * @param chunks The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
         * 
         * @return builder
         * 
         */
        public Builder chunks(@Nullable Output<Integer> chunks) {
            $.chunks = chunks;
            return this;
        }

        /**
         * @param chunks The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
         * 
         * @return builder
         * 
         */
        public Builder chunks(Integer chunks) {
            return chunks(Output.of(chunks));
        }

        /**
         * @param clusterCertificateCommonName The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
         * 
         * @return builder
         * 
         */
        public Builder clusterCertificateCommonName(@Nullable Output<String> clusterCertificateCommonName) {
            $.clusterCertificateCommonName = clusterCertificateCommonName;
            return this;
        }

        /**
         * @param clusterCertificateCommonName The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
         * 
         * @return builder
         * 
         */
        public Builder clusterCertificateCommonName(String clusterCertificateCommonName) {
            return clusterCertificateCommonName(Output.of(clusterCertificateCommonName));
        }

        /**
         * @param compartmentId (Updatable) Identifier of the compartment where sharded database is to be created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Identifier of the compartment where sharded database is to be created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param configureShardingTrigger (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder configureShardingTrigger(@Nullable Output<Integer> configureShardingTrigger) {
            $.configureShardingTrigger = configureShardingTrigger;
            return this;
        }

        /**
         * @param configureShardingTrigger (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder configureShardingTrigger(Integer configureShardingTrigger) {
            return configureShardingTrigger(Output.of(configureShardingTrigger));
        }

        /**
         * @param dbDeploymentType The database deployment type.
         * 
         * @return builder
         * 
         */
        public Builder dbDeploymentType(Output<String> dbDeploymentType) {
            $.dbDeploymentType = dbDeploymentType;
            return this;
        }

        /**
         * @param dbDeploymentType The database deployment type.
         * 
         * @return builder
         * 
         */
        public Builder dbDeploymentType(String dbDeploymentType) {
            return dbDeploymentType(Output.of(dbDeploymentType));
        }

        /**
         * @param dbVersion Oracle Database version of the Autonomous Container Database.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(Output<String> dbVersion) {
            $.dbVersion = dbVersion;
            return this;
        }

        /**
         * @param dbVersion Oracle Database version of the Autonomous Container Database.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(String dbVersion) {
            return dbVersion(Output.of(dbVersion));
        }

        /**
         * @param dbWorkload Possible workload types.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(Output<String> dbWorkload) {
            $.dbWorkload = dbWorkload;
            return this;
        }

        /**
         * @param dbWorkload Possible workload types.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(String dbWorkload) {
            return dbWorkload(Output.of(dbWorkload));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Oracle sharded database display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Oracle sharded database display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param downloadGsmCertificateSigningRequestTrigger (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder downloadGsmCertificateSigningRequestTrigger(@Nullable Output<Integer> downloadGsmCertificateSigningRequestTrigger) {
            $.downloadGsmCertificateSigningRequestTrigger = downloadGsmCertificateSigningRequestTrigger;
            return this;
        }

        /**
         * @param downloadGsmCertificateSigningRequestTrigger (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder downloadGsmCertificateSigningRequestTrigger(Integer downloadGsmCertificateSigningRequestTrigger) {
            return downloadGsmCertificateSigningRequestTrigger(Output.of(downloadGsmCertificateSigningRequestTrigger));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param generateGsmCertificateSigningRequestTrigger (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder generateGsmCertificateSigningRequestTrigger(@Nullable Output<Integer> generateGsmCertificateSigningRequestTrigger) {
            $.generateGsmCertificateSigningRequestTrigger = generateGsmCertificateSigningRequestTrigger;
            return this;
        }

        /**
         * @param generateGsmCertificateSigningRequestTrigger (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder generateGsmCertificateSigningRequestTrigger(Integer generateGsmCertificateSigningRequestTrigger) {
            return generateGsmCertificateSigningRequestTrigger(Output.of(generateGsmCertificateSigningRequestTrigger));
        }

        /**
         * @param getConnectionStringTrigger (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder getConnectionStringTrigger(@Nullable Output<Integer> getConnectionStringTrigger) {
            $.getConnectionStringTrigger = getConnectionStringTrigger;
            return this;
        }

        /**
         * @param getConnectionStringTrigger (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder getConnectionStringTrigger(Integer getConnectionStringTrigger) {
            return getConnectionStringTrigger(Output.of(getConnectionStringTrigger));
        }

        /**
         * @param listenerPort The listener port number for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder listenerPort(Output<Integer> listenerPort) {
            $.listenerPort = listenerPort;
            return this;
        }

        /**
         * @param listenerPort The listener port number for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder listenerPort(Integer listenerPort) {
            return listenerPort(Output.of(listenerPort));
        }

        /**
         * @param listenerPortTls The TLS listener port number for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder listenerPortTls(Output<Integer> listenerPortTls) {
            $.listenerPortTls = listenerPortTls;
            return this;
        }

        /**
         * @param listenerPortTls The TLS listener port number for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder listenerPortTls(Integer listenerPortTls) {
            return listenerPortTls(Output.of(listenerPortTls));
        }

        /**
         * @param ncharacterSet The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
         * 
         * @return builder
         * 
         */
        public Builder ncharacterSet(Output<String> ncharacterSet) {
            $.ncharacterSet = ncharacterSet;
            return this;
        }

        /**
         * @param ncharacterSet The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
         * 
         * @return builder
         * 
         */
        public Builder ncharacterSet(String ncharacterSet) {
            return ncharacterSet(Output.of(ncharacterSet));
        }

        /**
         * @param onsPortLocal Ons port local for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder onsPortLocal(Output<Integer> onsPortLocal) {
            $.onsPortLocal = onsPortLocal;
            return this;
        }

        /**
         * @param onsPortLocal Ons port local for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder onsPortLocal(Integer onsPortLocal) {
            return onsPortLocal(Output.of(onsPortLocal));
        }

        /**
         * @param onsPortRemote Ons remote port for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder onsPortRemote(Output<Integer> onsPortRemote) {
            $.onsPortRemote = onsPortRemote;
            return this;
        }

        /**
         * @param onsPortRemote Ons remote port for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder onsPortRemote(Integer onsPortRemote) {
            return onsPortRemote(Output.of(onsPortRemote));
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(@Nullable Output<List<ShardedDatabasePatchOperationArgs>> patchOperations) {
            $.patchOperations = patchOperations;
            return this;
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(List<ShardedDatabasePatchOperationArgs> patchOperations) {
            return patchOperations(Output.of(patchOperations));
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(ShardedDatabasePatchOperationArgs... patchOperations) {
            return patchOperations(List.of(patchOperations));
        }

        /**
         * @param prefix Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
         * 
         * @return builder
         * 
         */
        public Builder prefix(Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param shardDetails Collection of ATP-Dedicated shards that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder shardDetails(Output<List<ShardedDatabaseShardDetailArgs>> shardDetails) {
            $.shardDetails = shardDetails;
            return this;
        }

        /**
         * @param shardDetails Collection of ATP-Dedicated shards that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder shardDetails(List<ShardedDatabaseShardDetailArgs> shardDetails) {
            return shardDetails(Output.of(shardDetails));
        }

        /**
         * @param shardDetails Collection of ATP-Dedicated shards that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder shardDetails(ShardedDatabaseShardDetailArgs... shardDetails) {
            return shardDetails(List.of(shardDetails));
        }

        /**
         * @param shardingMethod Sharding Method.
         * 
         * @return builder
         * 
         */
        public Builder shardingMethod(Output<String> shardingMethod) {
            $.shardingMethod = shardingMethod;
            return this;
        }

        /**
         * @param shardingMethod Sharding Method.
         * 
         * @return builder
         * 
         */
        public Builder shardingMethod(String shardingMethod) {
            return shardingMethod(Output.of(shardingMethod));
        }

        /**
         * @param startDatabaseTrigger (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder startDatabaseTrigger(@Nullable Output<Integer> startDatabaseTrigger) {
            $.startDatabaseTrigger = startDatabaseTrigger;
            return this;
        }

        /**
         * @param startDatabaseTrigger (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder startDatabaseTrigger(Integer startDatabaseTrigger) {
            return startDatabaseTrigger(Output.of(startDatabaseTrigger));
        }

        /**
         * @param stopDatabaseTrigger (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder stopDatabaseTrigger(@Nullable Output<Integer> stopDatabaseTrigger) {
            $.stopDatabaseTrigger = stopDatabaseTrigger;
            return this;
        }

        /**
         * @param stopDatabaseTrigger (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder stopDatabaseTrigger(Integer stopDatabaseTrigger) {
            return stopDatabaseTrigger(Output.of(stopDatabaseTrigger));
        }

        /**
         * @param validateNetworkTrigger (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder validateNetworkTrigger(@Nullable Output<Integer> validateNetworkTrigger) {
            $.validateNetworkTrigger = validateNetworkTrigger;
            return this;
        }

        /**
         * @param validateNetworkTrigger (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder validateNetworkTrigger(Integer validateNetworkTrigger) {
            return validateNetworkTrigger(Output.of(validateNetworkTrigger));
        }

        public ShardedDatabaseArgs build() {
            if ($.catalogDetails == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "catalogDetails");
            }
            if ($.characterSet == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "characterSet");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "compartmentId");
            }
            if ($.dbDeploymentType == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "dbDeploymentType");
            }
            if ($.dbVersion == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "dbVersion");
            }
            if ($.dbWorkload == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "dbWorkload");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "displayName");
            }
            if ($.listenerPort == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "listenerPort");
            }
            if ($.listenerPortTls == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "listenerPortTls");
            }
            if ($.ncharacterSet == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "ncharacterSet");
            }
            if ($.onsPortLocal == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "onsPortLocal");
            }
            if ($.onsPortRemote == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "onsPortRemote");
            }
            if ($.prefix == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "prefix");
            }
            if ($.shardDetails == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "shardDetails");
            }
            if ($.shardingMethod == null) {
                throw new MissingRequiredPropertyException("ShardedDatabaseArgs", "shardingMethod");
            }
            return $;
        }
    }

}
