// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GloballyDistributedDatabase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetShardedDatabaseArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetShardedDatabaseArgs Empty = new GetShardedDatabaseArgs();

    /**
     * Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<String> metadata;

    /**
     * @return Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
     * 
     */
    public Optional<Output<String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * Sharded Database identifier
     * 
     */
    @Import(name="shardedDatabaseId", required=true)
    private Output<String> shardedDatabaseId;

    /**
     * @return Sharded Database identifier
     * 
     */
    public Output<String> shardedDatabaseId() {
        return this.shardedDatabaseId;
    }

    private GetShardedDatabaseArgs() {}

    private GetShardedDatabaseArgs(GetShardedDatabaseArgs $) {
        this.metadata = $.metadata;
        this.shardedDatabaseId = $.shardedDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetShardedDatabaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetShardedDatabaseArgs $;

        public Builder() {
            $ = new GetShardedDatabaseArgs();
        }

        public Builder(GetShardedDatabaseArgs defaults) {
            $ = new GetShardedDatabaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metadata Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata Comma separated names of argument corresponding to which metadata need to be retrived, namely VM_CLUSTER_INFO, ADDITIONAL_RESOURCE_INFO. An example is metadata=VM_CLUSTER_INFO,ADDITIONAL_RESOURCE_INFO.
         * 
         * @return builder
         * 
         */
        public Builder metadata(String metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param shardedDatabaseId Sharded Database identifier
         * 
         * @return builder
         * 
         */
        public Builder shardedDatabaseId(Output<String> shardedDatabaseId) {
            $.shardedDatabaseId = shardedDatabaseId;
            return this;
        }

        /**
         * @param shardedDatabaseId Sharded Database identifier
         * 
         * @return builder
         * 
         */
        public Builder shardedDatabaseId(String shardedDatabaseId) {
            return shardedDatabaseId(Output.of(shardedDatabaseId));
        }

        public GetShardedDatabaseArgs build() {
            if ($.shardedDatabaseId == null) {
                throw new MissingRequiredPropertyException("GetShardedDatabaseArgs", "shardedDatabaseId");
            }
            return $;
        }
    }

}
