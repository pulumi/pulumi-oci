// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GloballyDistributedDatabase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.GloballyDistributedDatabase.inputs.ShardedDatabaseCatalogDetailArgs;
import com.pulumi.oci.GloballyDistributedDatabase.inputs.ShardedDatabaseConnectionStringArgs;
import com.pulumi.oci.GloballyDistributedDatabase.inputs.ShardedDatabaseGsmArgs;
import com.pulumi.oci.GloballyDistributedDatabase.inputs.ShardedDatabasePatchOperationArgs;
import com.pulumi.oci.GloballyDistributedDatabase.inputs.ShardedDatabaseShardDetailArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ShardedDatabaseState extends com.pulumi.resources.ResourceArgs {

    public static final ShardedDatabaseState Empty = new ShardedDatabaseState();

    /**
     * Collection of ATP-Dedicated catalogs that needs to be created.
     * 
     */
    @Import(name="catalogDetails")
    private @Nullable Output<List<ShardedDatabaseCatalogDetailArgs>> catalogDetails;

    /**
     * @return Collection of ATP-Dedicated catalogs that needs to be created.
     * 
     */
    public Optional<Output<List<ShardedDatabaseCatalogDetailArgs>>> catalogDetails() {
        return Optional.ofNullable(this.catalogDetails);
    }

    /**
     * The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
     * 
     */
    @Import(name="characterSet")
    private @Nullable Output<String> characterSet;

    /**
     * @return The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
     * 
     */
    public Optional<Output<String>> characterSet() {
        return Optional.ofNullable(this.characterSet);
    }

    /**
     * The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
     * 
     */
    @Import(name="chunks")
    private @Nullable Output<Integer> chunks;

    /**
     * @return The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
     * 
     */
    public Optional<Output<Integer>> chunks() {
        return Optional.ofNullable(this.chunks);
    }

    /**
     * The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
     * 
     */
    @Import(name="clusterCertificateCommonName")
    private @Nullable Output<String> clusterCertificateCommonName;

    /**
     * @return The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
     * 
     */
    public Optional<Output<String>> clusterCertificateCommonName() {
        return Optional.ofNullable(this.clusterCertificateCommonName);
    }

    /**
     * (Updatable) Identifier of the compartment where sharded database is to be created.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Identifier of the compartment where sharded database is to be created.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) An optional property when incremented triggers Configure Gsms. Could be set to any integer value.
     * 
     */
    @Import(name="configureGsmsTrigger")
    private @Nullable Output<Integer> configureGsmsTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Configure Gsms. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> configureGsmsTrigger() {
        return Optional.ofNullable(this.configureGsmsTrigger);
    }

    /**
     * (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
     * 
     */
    @Import(name="configureShardingTrigger")
    private @Nullable Output<Integer> configureShardingTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> configureShardingTrigger() {
        return Optional.ofNullable(this.configureShardingTrigger);
    }

    /**
     * Details of sharded database connection String.
     * 
     */
    @Import(name="connectionStrings")
    private @Nullable Output<List<ShardedDatabaseConnectionStringArgs>> connectionStrings;

    /**
     * @return Details of sharded database connection String.
     * 
     */
    public Optional<Output<List<ShardedDatabaseConnectionStringArgs>>> connectionStrings() {
        return Optional.ofNullable(this.connectionStrings);
    }

    /**
     * The database deployment type.
     * 
     */
    @Import(name="dbDeploymentType")
    private @Nullable Output<String> dbDeploymentType;

    /**
     * @return The database deployment type.
     * 
     */
    public Optional<Output<String>> dbDeploymentType() {
        return Optional.ofNullable(this.dbDeploymentType);
    }

    /**
     * Oracle Database version of the Autonomous Container Database.
     * 
     */
    @Import(name="dbVersion")
    private @Nullable Output<String> dbVersion;

    /**
     * @return Oracle Database version of the Autonomous Container Database.
     * 
     */
    public Optional<Output<String>> dbVersion() {
        return Optional.ofNullable(this.dbVersion);
    }

    /**
     * Possible workload types.
     * 
     */
    @Import(name="dbWorkload")
    private @Nullable Output<String> dbWorkload;

    /**
     * @return Possible workload types.
     * 
     */
    public Optional<Output<String>> dbWorkload() {
        return Optional.ofNullable(this.dbWorkload);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Oracle sharded database display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Oracle sharded database display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
     * 
     */
    @Import(name="downloadGsmCertificateSigningRequestTrigger")
    private @Nullable Output<Integer> downloadGsmCertificateSigningRequestTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> downloadGsmCertificateSigningRequestTrigger() {
        return Optional.ofNullable(this.downloadGsmCertificateSigningRequestTrigger);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
     * 
     */
    @Import(name="generateGsmCertificateSigningRequestTrigger")
    private @Nullable Output<Integer> generateGsmCertificateSigningRequestTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> generateGsmCertificateSigningRequestTrigger() {
        return Optional.ofNullable(this.generateGsmCertificateSigningRequestTrigger);
    }

    /**
     * (Updatable) An optional property when incremented triggers Generate Wallet. Could be set to any integer value.
     * 
     */
    @Import(name="generateWalletTrigger")
    private @Nullable Output<Integer> generateWalletTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Generate Wallet. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> generateWalletTrigger() {
        return Optional.ofNullable(this.generateWalletTrigger);
    }

    /**
     * (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
     * 
     */
    @Import(name="getConnectionStringTrigger")
    private @Nullable Output<Integer> getConnectionStringTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> getConnectionStringTrigger() {
        return Optional.ofNullable(this.getConnectionStringTrigger);
    }

    /**
     * Details of GSM instances for the sharded database.
     * 
     */
    @Import(name="gsms")
    private @Nullable Output<List<ShardedDatabaseGsmArgs>> gsms;

    /**
     * @return Details of GSM instances for the sharded database.
     * 
     */
    public Optional<Output<List<ShardedDatabaseGsmArgs>>> gsms() {
        return Optional.ofNullable(this.gsms);
    }

    @Import(name="lifecycleState")
    private @Nullable Output<String> lifecycleState;

    public Optional<Output<String>> lifecycleState() {
        return Optional.ofNullable(this.lifecycleState);
    }

    /**
     * Detailed message for the lifecycle state.
     * 
     */
    @Import(name="lifecycleStateDetails")
    private @Nullable Output<String> lifecycleStateDetails;

    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    public Optional<Output<String>> lifecycleStateDetails() {
        return Optional.ofNullable(this.lifecycleStateDetails);
    }

    /**
     * The listener port number for sharded database.
     * 
     */
    @Import(name="listenerPort")
    private @Nullable Output<Integer> listenerPort;

    /**
     * @return The listener port number for sharded database.
     * 
     */
    public Optional<Output<Integer>> listenerPort() {
        return Optional.ofNullable(this.listenerPort);
    }

    /**
     * The TLS listener port number for sharded database.
     * 
     */
    @Import(name="listenerPortTls")
    private @Nullable Output<Integer> listenerPortTls;

    /**
     * @return The TLS listener port number for sharded database.
     * 
     */
    public Optional<Output<Integer>> listenerPortTls() {
        return Optional.ofNullable(this.listenerPortTls);
    }

    /**
     * The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
     * 
     */
    @Import(name="ncharacterSet")
    private @Nullable Output<String> ncharacterSet;

    /**
     * @return The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
     * 
     */
    public Optional<Output<String>> ncharacterSet() {
        return Optional.ofNullable(this.ncharacterSet);
    }

    /**
     * Ons port local for sharded database.
     * 
     */
    @Import(name="onsPortLocal")
    private @Nullable Output<Integer> onsPortLocal;

    /**
     * @return Ons port local for sharded database.
     * 
     */
    public Optional<Output<Integer>> onsPortLocal() {
        return Optional.ofNullable(this.onsPortLocal);
    }

    /**
     * Ons remote port for sharded database.
     * 
     */
    @Import(name="onsPortRemote")
    private @Nullable Output<Integer> onsPortRemote;

    /**
     * @return Ons remote port for sharded database.
     * 
     */
    public Optional<Output<Integer>> onsPortRemote() {
        return Optional.ofNullable(this.onsPortRemote);
    }

    /**
     * (Updatable)
     * 
     */
    @Import(name="patchOperations")
    private @Nullable Output<List<ShardedDatabasePatchOperationArgs>> patchOperations;

    /**
     * @return (Updatable)
     * 
     */
    public Optional<Output<List<ShardedDatabasePatchOperationArgs>>> patchOperations() {
        return Optional.ofNullable(this.patchOperations);
    }

    /**
     * Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * The OCID of private endpoint being used by the sharded database.
     * 
     */
    @Import(name="privateEndpoint")
    private @Nullable Output<String> privateEndpoint;

    /**
     * @return The OCID of private endpoint being used by the sharded database.
     * 
     */
    public Optional<Output<String>> privateEndpoint() {
        return Optional.ofNullable(this.privateEndpoint);
    }

    /**
     * Collection of ATP-Dedicated shards that needs to be created.
     * 
     */
    @Import(name="shardDetails")
    private @Nullable Output<List<ShardedDatabaseShardDetailArgs>> shardDetails;

    /**
     * @return Collection of ATP-Dedicated shards that needs to be created.
     * 
     */
    public Optional<Output<List<ShardedDatabaseShardDetailArgs>>> shardDetails() {
        return Optional.ofNullable(this.shardDetails);
    }

    @Import(name="shardedDatabaseId")
    private @Nullable Output<String> shardedDatabaseId;

    public Optional<Output<String>> shardedDatabaseId() {
        return Optional.ofNullable(this.shardedDatabaseId);
    }

    /**
     * Sharding Method.
     * 
     */
    @Import(name="shardingMethod")
    private @Nullable Output<String> shardingMethod;

    /**
     * @return Sharding Method.
     * 
     */
    public Optional<Output<String>> shardingMethod() {
        return Optional.ofNullable(this.shardingMethod);
    }

    /**
     * (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
     * 
     */
    @Import(name="startDatabaseTrigger")
    private @Nullable Output<Integer> startDatabaseTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> startDatabaseTrigger() {
        return Optional.ofNullable(this.startDatabaseTrigger);
    }

    /**
     * Lifecycle states for sharded databases.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Lifecycle states for sharded databases.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
     * 
     */
    @Import(name="stopDatabaseTrigger")
    private @Nullable Output<Integer> stopDatabaseTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> stopDatabaseTrigger() {
        return Optional.ofNullable(this.stopDatabaseTrigger);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time the the Sharded Database was created. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the the Sharded Database was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the Sharded Database was last updated. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the Sharded Database was last updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * Timezone associated with the sharded database.
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return Timezone associated with the sharded database.
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    /**
     * (Updatable) An optional property when incremented triggers Upload Signed Certificate And Generate Wallet. Could be set to any integer value.
     * 
     */
    @Import(name="uploadSignedCertificateAndGenerateWalletTrigger")
    private @Nullable Output<Integer> uploadSignedCertificateAndGenerateWalletTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Upload Signed Certificate And Generate Wallet. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> uploadSignedCertificateAndGenerateWalletTrigger() {
        return Optional.ofNullable(this.uploadSignedCertificateAndGenerateWalletTrigger);
    }

    /**
     * (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="validateNetworkTrigger")
    private @Nullable Output<Integer> validateNetworkTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Integer>> validateNetworkTrigger() {
        return Optional.ofNullable(this.validateNetworkTrigger);
    }

    private ShardedDatabaseState() {}

    private ShardedDatabaseState(ShardedDatabaseState $) {
        this.catalogDetails = $.catalogDetails;
        this.characterSet = $.characterSet;
        this.chunks = $.chunks;
        this.clusterCertificateCommonName = $.clusterCertificateCommonName;
        this.compartmentId = $.compartmentId;
        this.configureGsmsTrigger = $.configureGsmsTrigger;
        this.configureShardingTrigger = $.configureShardingTrigger;
        this.connectionStrings = $.connectionStrings;
        this.dbDeploymentType = $.dbDeploymentType;
        this.dbVersion = $.dbVersion;
        this.dbWorkload = $.dbWorkload;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.downloadGsmCertificateSigningRequestTrigger = $.downloadGsmCertificateSigningRequestTrigger;
        this.freeformTags = $.freeformTags;
        this.generateGsmCertificateSigningRequestTrigger = $.generateGsmCertificateSigningRequestTrigger;
        this.generateWalletTrigger = $.generateWalletTrigger;
        this.getConnectionStringTrigger = $.getConnectionStringTrigger;
        this.gsms = $.gsms;
        this.lifecycleState = $.lifecycleState;
        this.lifecycleStateDetails = $.lifecycleStateDetails;
        this.listenerPort = $.listenerPort;
        this.listenerPortTls = $.listenerPortTls;
        this.ncharacterSet = $.ncharacterSet;
        this.onsPortLocal = $.onsPortLocal;
        this.onsPortRemote = $.onsPortRemote;
        this.patchOperations = $.patchOperations;
        this.prefix = $.prefix;
        this.privateEndpoint = $.privateEndpoint;
        this.shardDetails = $.shardDetails;
        this.shardedDatabaseId = $.shardedDatabaseId;
        this.shardingMethod = $.shardingMethod;
        this.startDatabaseTrigger = $.startDatabaseTrigger;
        this.state = $.state;
        this.stopDatabaseTrigger = $.stopDatabaseTrigger;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.timeZone = $.timeZone;
        this.uploadSignedCertificateAndGenerateWalletTrigger = $.uploadSignedCertificateAndGenerateWalletTrigger;
        this.validateNetworkTrigger = $.validateNetworkTrigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShardedDatabaseState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShardedDatabaseState $;

        public Builder() {
            $ = new ShardedDatabaseState();
        }

        public Builder(ShardedDatabaseState defaults) {
            $ = new ShardedDatabaseState(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogDetails Collection of ATP-Dedicated catalogs that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder catalogDetails(@Nullable Output<List<ShardedDatabaseCatalogDetailArgs>> catalogDetails) {
            $.catalogDetails = catalogDetails;
            return this;
        }

        /**
         * @param catalogDetails Collection of ATP-Dedicated catalogs that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder catalogDetails(List<ShardedDatabaseCatalogDetailArgs> catalogDetails) {
            return catalogDetails(Output.of(catalogDetails));
        }

        /**
         * @param catalogDetails Collection of ATP-Dedicated catalogs that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder catalogDetails(ShardedDatabaseCatalogDetailArgs... catalogDetails) {
            return catalogDetails(List.of(catalogDetails));
        }

        /**
         * @param characterSet The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
         * 
         * @return builder
         * 
         */
        public Builder characterSet(@Nullable Output<String> characterSet) {
            $.characterSet = characterSet;
            return this;
        }

        /**
         * @param characterSet The character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
         * 
         * @return builder
         * 
         */
        public Builder characterSet(String characterSet) {
            return characterSet(Output.of(characterSet));
        }

        /**
         * @param chunks The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
         * 
         * @return builder
         * 
         */
        public Builder chunks(@Nullable Output<Integer> chunks) {
            $.chunks = chunks;
            return this;
        }

        /**
         * @param chunks The default number of unique chunks in a shardspace. The value of chunks must be greater than 2 times the size of the largest shardgroup in any shardspace.
         * 
         * @return builder
         * 
         */
        public Builder chunks(Integer chunks) {
            return chunks(Output.of(chunks));
        }

        /**
         * @param clusterCertificateCommonName The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
         * 
         * @return builder
         * 
         */
        public Builder clusterCertificateCommonName(@Nullable Output<String> clusterCertificateCommonName) {
            $.clusterCertificateCommonName = clusterCertificateCommonName;
            return this;
        }

        /**
         * @param clusterCertificateCommonName The certificate common name used in all cloudAutonomousVmClusters for the sharded database topology. Eg. Production. All the clusters used in one sharded database topology shall have same CABundle setup. Valid characterset for clusterCertificateCommonName include uppercase or lowercase letters, numbers, hyphens, underscores, and period.
         * 
         * @return builder
         * 
         */
        public Builder clusterCertificateCommonName(String clusterCertificateCommonName) {
            return clusterCertificateCommonName(Output.of(clusterCertificateCommonName));
        }

        /**
         * @param compartmentId (Updatable) Identifier of the compartment where sharded database is to be created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Identifier of the compartment where sharded database is to be created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param configureGsmsTrigger (Updatable) An optional property when incremented triggers Configure Gsms. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder configureGsmsTrigger(@Nullable Output<Integer> configureGsmsTrigger) {
            $.configureGsmsTrigger = configureGsmsTrigger;
            return this;
        }

        /**
         * @param configureGsmsTrigger (Updatable) An optional property when incremented triggers Configure Gsms. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder configureGsmsTrigger(Integer configureGsmsTrigger) {
            return configureGsmsTrigger(Output.of(configureGsmsTrigger));
        }

        /**
         * @param configureShardingTrigger (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder configureShardingTrigger(@Nullable Output<Integer> configureShardingTrigger) {
            $.configureShardingTrigger = configureShardingTrigger;
            return this;
        }

        /**
         * @param configureShardingTrigger (Updatable) An optional property when incremented triggers Configure Sharding. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder configureShardingTrigger(Integer configureShardingTrigger) {
            return configureShardingTrigger(Output.of(configureShardingTrigger));
        }

        /**
         * @param connectionStrings Details of sharded database connection String.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(@Nullable Output<List<ShardedDatabaseConnectionStringArgs>> connectionStrings) {
            $.connectionStrings = connectionStrings;
            return this;
        }

        /**
         * @param connectionStrings Details of sharded database connection String.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(List<ShardedDatabaseConnectionStringArgs> connectionStrings) {
            return connectionStrings(Output.of(connectionStrings));
        }

        /**
         * @param connectionStrings Details of sharded database connection String.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(ShardedDatabaseConnectionStringArgs... connectionStrings) {
            return connectionStrings(List.of(connectionStrings));
        }

        /**
         * @param dbDeploymentType The database deployment type.
         * 
         * @return builder
         * 
         */
        public Builder dbDeploymentType(@Nullable Output<String> dbDeploymentType) {
            $.dbDeploymentType = dbDeploymentType;
            return this;
        }

        /**
         * @param dbDeploymentType The database deployment type.
         * 
         * @return builder
         * 
         */
        public Builder dbDeploymentType(String dbDeploymentType) {
            return dbDeploymentType(Output.of(dbDeploymentType));
        }

        /**
         * @param dbVersion Oracle Database version of the Autonomous Container Database.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(@Nullable Output<String> dbVersion) {
            $.dbVersion = dbVersion;
            return this;
        }

        /**
         * @param dbVersion Oracle Database version of the Autonomous Container Database.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(String dbVersion) {
            return dbVersion(Output.of(dbVersion));
        }

        /**
         * @param dbWorkload Possible workload types.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(@Nullable Output<String> dbWorkload) {
            $.dbWorkload = dbWorkload;
            return this;
        }

        /**
         * @param dbWorkload Possible workload types.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(String dbWorkload) {
            return dbWorkload(Output.of(dbWorkload));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Oracle sharded database display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Oracle sharded database display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param downloadGsmCertificateSigningRequestTrigger (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder downloadGsmCertificateSigningRequestTrigger(@Nullable Output<Integer> downloadGsmCertificateSigningRequestTrigger) {
            $.downloadGsmCertificateSigningRequestTrigger = downloadGsmCertificateSigningRequestTrigger;
            return this;
        }

        /**
         * @param downloadGsmCertificateSigningRequestTrigger (Updatable) An optional property when incremented triggers Download Gsm Certificate Signing Request. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder downloadGsmCertificateSigningRequestTrigger(Integer downloadGsmCertificateSigningRequestTrigger) {
            return downloadGsmCertificateSigningRequestTrigger(Output.of(downloadGsmCertificateSigningRequestTrigger));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param generateGsmCertificateSigningRequestTrigger (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder generateGsmCertificateSigningRequestTrigger(@Nullable Output<Integer> generateGsmCertificateSigningRequestTrigger) {
            $.generateGsmCertificateSigningRequestTrigger = generateGsmCertificateSigningRequestTrigger;
            return this;
        }

        /**
         * @param generateGsmCertificateSigningRequestTrigger (Updatable) An optional property when incremented triggers Generate Gsm Certificate Signing Request. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder generateGsmCertificateSigningRequestTrigger(Integer generateGsmCertificateSigningRequestTrigger) {
            return generateGsmCertificateSigningRequestTrigger(Output.of(generateGsmCertificateSigningRequestTrigger));
        }

        /**
         * @param generateWalletTrigger (Updatable) An optional property when incremented triggers Generate Wallet. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder generateWalletTrigger(@Nullable Output<Integer> generateWalletTrigger) {
            $.generateWalletTrigger = generateWalletTrigger;
            return this;
        }

        /**
         * @param generateWalletTrigger (Updatable) An optional property when incremented triggers Generate Wallet. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder generateWalletTrigger(Integer generateWalletTrigger) {
            return generateWalletTrigger(Output.of(generateWalletTrigger));
        }

        /**
         * @param getConnectionStringTrigger (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder getConnectionStringTrigger(@Nullable Output<Integer> getConnectionStringTrigger) {
            $.getConnectionStringTrigger = getConnectionStringTrigger;
            return this;
        }

        /**
         * @param getConnectionStringTrigger (Updatable) An optional property when incremented triggers Get Connection String. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder getConnectionStringTrigger(Integer getConnectionStringTrigger) {
            return getConnectionStringTrigger(Output.of(getConnectionStringTrigger));
        }

        /**
         * @param gsms Details of GSM instances for the sharded database.
         * 
         * @return builder
         * 
         */
        public Builder gsms(@Nullable Output<List<ShardedDatabaseGsmArgs>> gsms) {
            $.gsms = gsms;
            return this;
        }

        /**
         * @param gsms Details of GSM instances for the sharded database.
         * 
         * @return builder
         * 
         */
        public Builder gsms(List<ShardedDatabaseGsmArgs> gsms) {
            return gsms(Output.of(gsms));
        }

        /**
         * @param gsms Details of GSM instances for the sharded database.
         * 
         * @return builder
         * 
         */
        public Builder gsms(ShardedDatabaseGsmArgs... gsms) {
            return gsms(List.of(gsms));
        }

        public Builder lifecycleState(@Nullable Output<String> lifecycleState) {
            $.lifecycleState = lifecycleState;
            return this;
        }

        public Builder lifecycleState(String lifecycleState) {
            return lifecycleState(Output.of(lifecycleState));
        }

        /**
         * @param lifecycleStateDetails Detailed message for the lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStateDetails(@Nullable Output<String> lifecycleStateDetails) {
            $.lifecycleStateDetails = lifecycleStateDetails;
            return this;
        }

        /**
         * @param lifecycleStateDetails Detailed message for the lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleStateDetails(String lifecycleStateDetails) {
            return lifecycleStateDetails(Output.of(lifecycleStateDetails));
        }

        /**
         * @param listenerPort The listener port number for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder listenerPort(@Nullable Output<Integer> listenerPort) {
            $.listenerPort = listenerPort;
            return this;
        }

        /**
         * @param listenerPort The listener port number for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder listenerPort(Integer listenerPort) {
            return listenerPort(Output.of(listenerPort));
        }

        /**
         * @param listenerPortTls The TLS listener port number for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder listenerPortTls(@Nullable Output<Integer> listenerPortTls) {
            $.listenerPortTls = listenerPortTls;
            return this;
        }

        /**
         * @param listenerPortTls The TLS listener port number for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder listenerPortTls(Integer listenerPortTls) {
            return listenerPortTls(Output.of(listenerPortTls));
        }

        /**
         * @param ncharacterSet The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
         * 
         * @return builder
         * 
         */
        public Builder ncharacterSet(@Nullable Output<String> ncharacterSet) {
            $.ncharacterSet = ncharacterSet;
            return this;
        }

        /**
         * @param ncharacterSet The national character set for the new shard database being created. Use database api ListAutonomousDatabaseCharacterSets to get the list of allowed national character set for autonomous dedicated database. See documentation: https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/AutonomousDatabaseCharacterSets/ListAutonomousDatabaseCharacterSets
         * 
         * @return builder
         * 
         */
        public Builder ncharacterSet(String ncharacterSet) {
            return ncharacterSet(Output.of(ncharacterSet));
        }

        /**
         * @param onsPortLocal Ons port local for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder onsPortLocal(@Nullable Output<Integer> onsPortLocal) {
            $.onsPortLocal = onsPortLocal;
            return this;
        }

        /**
         * @param onsPortLocal Ons port local for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder onsPortLocal(Integer onsPortLocal) {
            return onsPortLocal(Output.of(onsPortLocal));
        }

        /**
         * @param onsPortRemote Ons remote port for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder onsPortRemote(@Nullable Output<Integer> onsPortRemote) {
            $.onsPortRemote = onsPortRemote;
            return this;
        }

        /**
         * @param onsPortRemote Ons remote port for sharded database.
         * 
         * @return builder
         * 
         */
        public Builder onsPortRemote(Integer onsPortRemote) {
            return onsPortRemote(Output.of(onsPortRemote));
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(@Nullable Output<List<ShardedDatabasePatchOperationArgs>> patchOperations) {
            $.patchOperations = patchOperations;
            return this;
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(List<ShardedDatabasePatchOperationArgs> patchOperations) {
            return patchOperations(Output.of(patchOperations));
        }

        /**
         * @param patchOperations (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder patchOperations(ShardedDatabasePatchOperationArgs... patchOperations) {
            return patchOperations(List.of(patchOperations));
        }

        /**
         * @param prefix Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Unique name prefix for the sharded databases. Only alpha-numeric values are allowed. First character has to be a letter followed by any combination of letter and number.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param privateEndpoint The OCID of private endpoint being used by the sharded database.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpoint(@Nullable Output<String> privateEndpoint) {
            $.privateEndpoint = privateEndpoint;
            return this;
        }

        /**
         * @param privateEndpoint The OCID of private endpoint being used by the sharded database.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpoint(String privateEndpoint) {
            return privateEndpoint(Output.of(privateEndpoint));
        }

        /**
         * @param shardDetails Collection of ATP-Dedicated shards that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder shardDetails(@Nullable Output<List<ShardedDatabaseShardDetailArgs>> shardDetails) {
            $.shardDetails = shardDetails;
            return this;
        }

        /**
         * @param shardDetails Collection of ATP-Dedicated shards that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder shardDetails(List<ShardedDatabaseShardDetailArgs> shardDetails) {
            return shardDetails(Output.of(shardDetails));
        }

        /**
         * @param shardDetails Collection of ATP-Dedicated shards that needs to be created.
         * 
         * @return builder
         * 
         */
        public Builder shardDetails(ShardedDatabaseShardDetailArgs... shardDetails) {
            return shardDetails(List.of(shardDetails));
        }

        public Builder shardedDatabaseId(@Nullable Output<String> shardedDatabaseId) {
            $.shardedDatabaseId = shardedDatabaseId;
            return this;
        }

        public Builder shardedDatabaseId(String shardedDatabaseId) {
            return shardedDatabaseId(Output.of(shardedDatabaseId));
        }

        /**
         * @param shardingMethod Sharding Method.
         * 
         * @return builder
         * 
         */
        public Builder shardingMethod(@Nullable Output<String> shardingMethod) {
            $.shardingMethod = shardingMethod;
            return this;
        }

        /**
         * @param shardingMethod Sharding Method.
         * 
         * @return builder
         * 
         */
        public Builder shardingMethod(String shardingMethod) {
            return shardingMethod(Output.of(shardingMethod));
        }

        /**
         * @param startDatabaseTrigger (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder startDatabaseTrigger(@Nullable Output<Integer> startDatabaseTrigger) {
            $.startDatabaseTrigger = startDatabaseTrigger;
            return this;
        }

        /**
         * @param startDatabaseTrigger (Updatable) An optional property when incremented triggers Start Database. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder startDatabaseTrigger(Integer startDatabaseTrigger) {
            return startDatabaseTrigger(Output.of(startDatabaseTrigger));
        }

        /**
         * @param state Lifecycle states for sharded databases.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Lifecycle states for sharded databases.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param stopDatabaseTrigger (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder stopDatabaseTrigger(@Nullable Output<Integer> stopDatabaseTrigger) {
            $.stopDatabaseTrigger = stopDatabaseTrigger;
            return this;
        }

        /**
         * @param stopDatabaseTrigger (Updatable) An optional property when incremented triggers Stop Database. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder stopDatabaseTrigger(Integer stopDatabaseTrigger) {
            return stopDatabaseTrigger(Output.of(stopDatabaseTrigger));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time the the Sharded Database was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the the Sharded Database was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the Sharded Database was last updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the Sharded Database was last updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param timeZone Timezone associated with the sharded database.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone Timezone associated with the sharded database.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        /**
         * @param uploadSignedCertificateAndGenerateWalletTrigger (Updatable) An optional property when incremented triggers Upload Signed Certificate And Generate Wallet. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder uploadSignedCertificateAndGenerateWalletTrigger(@Nullable Output<Integer> uploadSignedCertificateAndGenerateWalletTrigger) {
            $.uploadSignedCertificateAndGenerateWalletTrigger = uploadSignedCertificateAndGenerateWalletTrigger;
            return this;
        }

        /**
         * @param uploadSignedCertificateAndGenerateWalletTrigger (Updatable) An optional property when incremented triggers Upload Signed Certificate And Generate Wallet. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder uploadSignedCertificateAndGenerateWalletTrigger(Integer uploadSignedCertificateAndGenerateWalletTrigger) {
            return uploadSignedCertificateAndGenerateWalletTrigger(Output.of(uploadSignedCertificateAndGenerateWalletTrigger));
        }

        /**
         * @param validateNetworkTrigger (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder validateNetworkTrigger(@Nullable Output<Integer> validateNetworkTrigger) {
            $.validateNetworkTrigger = validateNetworkTrigger;
            return this;
        }

        /**
         * @param validateNetworkTrigger (Updatable) An optional property when incremented triggers Validate Network. Could be set to any integer value.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder validateNetworkTrigger(Integer validateNetworkTrigger) {
            return validateNetworkTrigger(Output.of(validateNetworkTrigger));
        }

        public ShardedDatabaseState build() {
            return $;
        }
    }

}
