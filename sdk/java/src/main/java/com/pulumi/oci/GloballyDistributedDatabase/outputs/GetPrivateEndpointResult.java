// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GloballyDistributedDatabase.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPrivateEndpointResult {
    /**
     * @return Identifier of the compartment in which private endpoint exists.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return PrivateEndpoint description.
     * 
     */
    private String description;
    /**
     * @return PrivateEndpoint display name.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The identifier of the Private Endpoint.
     * 
     */
    private String id;
    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    private String lifecycleStateDetails;
    /**
     * @return The OCIDs of the network security groups that the private endpoint belongs to.
     * 
     */
    private List<String> nsgIds;
    private String privateEndpointId;
    /**
     * @return IP address of the Private Endpoint.
     * 
     */
    private String privateIp;
    /**
     * @return The OCIDs of sharded databases that consumes the given private endpoint.
     * 
     */
    private List<String> shardedDatabases;
    /**
     * @return Lifecycle states for private endpoint.
     * 
     */
    private String state;
    /**
     * @return Identifier of the subnet in which private endpoint exists.
     * 
     */
    private String subnetId;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time the PrivateEndpoint was first created. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;
    /**
     * @return The time the Private Endpoint was last updated. An RFC3339 formatted datetime string
     * 
     */
    private String timeUpdated;
    /**
     * @return Identifier of the VCN in which subnet exists.
     * 
     */
    private String vcnId;

    private GetPrivateEndpointResult() {}
    /**
     * @return Identifier of the compartment in which private endpoint exists.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return PrivateEndpoint description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return PrivateEndpoint display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The identifier of the Private Endpoint.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    public String lifecycleStateDetails() {
        return this.lifecycleStateDetails;
    }
    /**
     * @return The OCIDs of the network security groups that the private endpoint belongs to.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    public String privateEndpointId() {
        return this.privateEndpointId;
    }
    /**
     * @return IP address of the Private Endpoint.
     * 
     */
    public String privateIp() {
        return this.privateIp;
    }
    /**
     * @return The OCIDs of sharded databases that consumes the given private endpoint.
     * 
     */
    public List<String> shardedDatabases() {
        return this.shardedDatabases;
    }
    /**
     * @return Lifecycle states for private endpoint.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Identifier of the subnet in which private endpoint exists.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the PrivateEndpoint was first created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the Private Endpoint was last updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Identifier of the VCN in which subnet exists.
     * 
     */
    public String vcnId() {
        return this.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateEndpointResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private String lifecycleStateDetails;
        private List<String> nsgIds;
        private String privateEndpointId;
        private String privateIp;
        private List<String> shardedDatabases;
        private String state;
        private String subnetId;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String vcnId;
        public Builder() {}
        public Builder(GetPrivateEndpointResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleStateDetails = defaults.lifecycleStateDetails;
    	      this.nsgIds = defaults.nsgIds;
    	      this.privateEndpointId = defaults.privateEndpointId;
    	      this.privateIp = defaults.privateIp;
    	      this.shardedDatabases = defaults.shardedDatabases;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vcnId = defaults.vcnId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleStateDetails(String lifecycleStateDetails) {
            if (lifecycleStateDetails == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "lifecycleStateDetails");
            }
            this.lifecycleStateDetails = lifecycleStateDetails;
            return this;
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            if (nsgIds == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "nsgIds");
            }
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder privateEndpointId(String privateEndpointId) {
            if (privateEndpointId == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "privateEndpointId");
            }
            this.privateEndpointId = privateEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder privateIp(String privateIp) {
            if (privateIp == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "privateIp");
            }
            this.privateIp = privateIp;
            return this;
        }
        @CustomType.Setter
        public Builder shardedDatabases(List<String> shardedDatabases) {
            if (shardedDatabases == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "shardedDatabases");
            }
            this.shardedDatabases = shardedDatabases;
            return this;
        }
        public Builder shardedDatabases(String... shardedDatabases) {
            return shardedDatabases(List.of(shardedDatabases));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder vcnId(String vcnId) {
            if (vcnId == null) {
              throw new MissingRequiredPropertyException("GetPrivateEndpointResult", "vcnId");
            }
            this.vcnId = vcnId;
            return this;
        }
        public GetPrivateEndpointResult build() {
            final var _resultValue = new GetPrivateEndpointResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleStateDetails = lifecycleStateDetails;
            _resultValue.nsgIds = nsgIds;
            _resultValue.privateEndpointId = privateEndpointId;
            _resultValue.privateIp = privateIp;
            _resultValue.shardedDatabases = shardedDatabases;
            _resultValue.state = state;
            _resultValue.subnetId = subnetId;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.vcnId = vcnId;
            return _resultValue;
        }
    }
}
