// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.GoldenGate.ConnectionArgs;
import com.pulumi.oci.GoldenGate.inputs.ConnectionState;
import com.pulumi.oci.GoldenGate.outputs.ConnectionAdditionalAttribute;
import com.pulumi.oci.GoldenGate.outputs.ConnectionBootstrapServer;
import com.pulumi.oci.GoldenGate.outputs.ConnectionIngressIp;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Connection resource in Oracle Cloud Infrastructure Golden Gate service.
 * 
 * Creates a new Connection.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.GoldenGate.Connection;
 * import com.pulumi.oci.GoldenGate.ConnectionArgs;
 * import com.pulumi.oci.GoldenGate.inputs.ConnectionAdditionalAttributeArgs;
 * import com.pulumi.oci.GoldenGate.inputs.ConnectionBootstrapServerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testConnection = new Connection("testConnection", ConnectionArgs.builder()        
 *             .compartmentId(compartmentId)
 *             .connectionType(connectionConnectionType)
 *             .displayName(connectionDisplayName)
 *             .technologyType(connectionTechnologyType)
 *             .accessKeyId(testKey.id())
 *             .accountKey(connectionAccountKey)
 *             .accountName(connectionAccountName)
 *             .additionalAttributes(ConnectionAdditionalAttributeArgs.builder()
 *                 .name(connectionAdditionalAttributesName)
 *                 .value(connectionAdditionalAttributesValue)
 *                 .build())
 *             .authenticationType(connectionAuthenticationType)
 *             .azureTenantId(testAzureTenant.id())
 *             .bootstrapServers(ConnectionBootstrapServerArgs.builder()
 *                 .host(connectionBootstrapServersHost)
 *                 .port(connectionBootstrapServersPort)
 *                 .privateIp(connectionBootstrapServersPrivateIp)
 *                 .build())
 *             .clientId(testClient.id())
 *             .clientSecret(connectionClientSecret)
 *             .connectionFactory(connectionConnectionFactory)
 *             .connectionString(connectionConnectionString)
 *             .connectionUrl(connectionConnectionUrl)
 *             .consumerProperties(connectionConsumerProperties)
 *             .coreSiteXml(connectionCoreSiteXml)
 *             .databaseId(testDatabase.id())
 *             .databaseName(testDatabase.name())
 *             .dbSystemId(testDbSystem.id())
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .deploymentId(testDeployment.id())
 *             .description(connectionDescription)
 *             .endpoint(connectionEndpoint)
 *             .fingerprint(connectionFingerprint)
 *             .freeformTags(Map.of("bar-key", "value"))
 *             .host(connectionHost)
 *             .jndiConnectionFactory(connectionJndiConnectionFactory)
 *             .jndiInitialContextFactory(connectionJndiInitialContextFactory)
 *             .jndiProviderUrl(connectionJndiProviderUrl)
 *             .jndiSecurityCredentials(connectionJndiSecurityCredentials)
 *             .jndiSecurityPrincipal(connectionJndiSecurityPrincipal)
 *             .keyId(testKey.id())
 *             .keyStore(connectionKeyStore)
 *             .keyStorePassword(connectionKeyStorePassword)
 *             .nsgIds(connectionNsgIds)
 *             .password(connectionPassword)
 *             .port(connectionPort)
 *             .privateIp(connectionPrivateIp)
 *             .privateKeyFile(connectionPrivateKeyFile)
 *             .privateKeyPassphrase(connectionPrivateKeyPassphrase)
 *             .producerProperties(connectionProducerProperties)
 *             .publicKeyFingerprint(connectionPublicKeyFingerprint)
 *             .region(connectionRegion)
 *             .routingMethod(connectionRoutingMethod)
 *             .sasToken(connectionSasToken)
 *             .secretAccessKey(connectionSecretAccessKey)
 *             .securityProtocol(connectionSecurityProtocol)
 *             .servers(connectionServers)
 *             .serviceAccountKeyFile(connectionServiceAccountKeyFile)
 *             .sessionMode(connectionSessionMode)
 *             .shouldUseJndi(connectionShouldUseJndi)
 *             .shouldValidateServerCertificate(connectionShouldValidateServerCertificate)
 *             .sslCa(connectionSslCa)
 *             .sslCert(connectionSslCert)
 *             .sslCrl(connectionSslCrl)
 *             .sslKey(connectionSslKey)
 *             .sslKeyPassword(connectionSslKeyPassword)
 *             .sslMode(connectionSslMode)
 *             .streamPoolId(testStreamPool.id())
 *             .subnetId(testSubnet.id())
 *             .tenancyId(testTenancy.id())
 *             .trustStore(connectionTrustStore)
 *             .trustStorePassword(connectionTrustStorePassword)
 *             .url(connectionUrl)
 *             .userId(testUser.id())
 *             .username(connectionUsername)
 *             .vaultId(testVault.id())
 *             .wallet(connectionWallet)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Connections can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:GoldenGate/connection:Connection test_connection &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:GoldenGate/connection:Connection")
public class Connection extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) Access key ID to access the Amazon S3 bucket. e.g.: &#34;this-is-not-the-secret&#34;
     * 
     */
    @Export(name="accessKeyId", refs={String.class}, tree="[0]")
    private Output<String> accessKeyId;

    /**
     * @return (Updatable) Access key ID to access the Amazon S3 bucket. e.g.: &#34;this-is-not-the-secret&#34;
     * 
     */
    public Output<String> accessKeyId() {
        return this.accessKeyId;
    }
    /**
     * (Updatable) Azure storage account key. This property is required when &#39;authenticationType&#39; is set to &#39;SHARED_KEY&#39;. e.g.: pa3WbhVATzj56xD4DH1VjOUhApRGEGHvOo58eQJVWIzX+j8j4CUVFcTjpIqDSRaSa1Wo2LbWY5at+AStEgLOIQ==
     * 
     */
    @Export(name="accountKey", refs={String.class}, tree="[0]")
    private Output<String> accountKey;

    /**
     * @return (Updatable) Azure storage account key. This property is required when &#39;authenticationType&#39; is set to &#39;SHARED_KEY&#39;. e.g.: pa3WbhVATzj56xD4DH1VjOUhApRGEGHvOo58eQJVWIzX+j8j4CUVFcTjpIqDSRaSa1Wo2LbWY5at+AStEgLOIQ==
     * 
     */
    public Output<String> accountKey() {
        return this.accountKey;
    }
    /**
     * (Updatable) Sets the Azure storage account name.
     * 
     */
    @Export(name="accountName", refs={String.class}, tree="[0]")
    private Output<String> accountName;

    /**
     * @return (Updatable) Sets the Azure storage account name.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }
    /**
     * (Updatable) An array of name-value pair attribute entries. Used as additional parameters in connection string.
     * 
     */
    @Export(name="additionalAttributes", refs={List.class,ConnectionAdditionalAttribute.class}, tree="[0,1]")
    private Output<List<ConnectionAdditionalAttribute>> additionalAttributes;

    /**
     * @return (Updatable) An array of name-value pair attribute entries. Used as additional parameters in connection string.
     * 
     */
    public Output<List<ConnectionAdditionalAttribute>> additionalAttributes() {
        return this.additionalAttributes;
    }
    /**
     * (Updatable) Authentication type for Java Message Service.  If not provided, default is NONE. Optional until 2024-06-27, in the release after it will be made required.
     * 
     */
    @Export(name="authenticationType", refs={String.class}, tree="[0]")
    private Output<String> authenticationType;

    /**
     * @return (Updatable) Authentication type for Java Message Service.  If not provided, default is NONE. Optional until 2024-06-27, in the release after it will be made required.
     * 
     */
    public Output<String> authenticationType() {
        return this.authenticationType;
    }
    /**
     * (Updatable) Azure tenant ID of the application. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
     * 
     */
    @Export(name="azureTenantId", refs={String.class}, tree="[0]")
    private Output<String> azureTenantId;

    /**
     * @return (Updatable) Azure tenant ID of the application. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
     * 
     */
    public Output<String> azureTenantId() {
        return this.azureTenantId;
    }
    /**
     * (Updatable) Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `&#34;server1.example.com:9092,server2.example.com:9092&#34;`
     * 
     */
    @Export(name="bootstrapServers", refs={List.class,ConnectionBootstrapServer.class}, tree="[0,1]")
    private Output<List<ConnectionBootstrapServer>> bootstrapServers;

    /**
     * @return (Updatable) Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `&#34;server1.example.com:9092,server2.example.com:9092&#34;`
     * 
     */
    public Output<List<ConnectionBootstrapServer>> bootstrapServers() {
        return this.bootstrapServers;
    }
    /**
     * (Updatable) Azure client ID of the application. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    /**
     * @return (Updatable) Azure client ID of the application. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * (Updatable) Azure client secret (aka application password) for authentication. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: dO29Q~F5-VwnA.lZdd11xFF_t5NAXCaGwDl9NbT1
     * 
     */
    @Export(name="clientSecret", refs={String.class}, tree="[0]")
    private Output<String> clientSecret;

    /**
     * @return (Updatable) Azure client secret (aka application password) for authentication. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: dO29Q~F5-VwnA.lZdd11xFF_t5NAXCaGwDl9NbT1
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) The of Java class implementing javax.jms.ConnectionFactory interface supplied by the Java Message Service provider. e.g.: &#39;com.stc.jmsjca.core.JConnectionFactoryXA&#39;
     * 
     */
    @Export(name="connectionFactory", refs={String.class}, tree="[0]")
    private Output<String> connectionFactory;

    /**
     * @return (Updatable) The of Java class implementing javax.jms.ConnectionFactory interface supplied by the Java Message Service provider. e.g.: &#39;com.stc.jmsjca.core.JConnectionFactoryXA&#39;
     * 
     */
    public Output<String> connectionFactory() {
        return this.connectionFactory;
    }
    /**
     * (Updatable) Connection string. AZURE_SYNAPSE_ANALYTICS e.g.: &#39;jdbc:sqlserver://&lt;synapse-workspace&gt;.sql.azuresynapse.net:1433;database=&lt;db-name&gt;;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;&#39;, MONGODB e.g.: &#39;mongodb://mongodb0.example.com:27017/recordsrecords&#39;.
     * 
     */
    @Export(name="connectionString", refs={String.class}, tree="[0]")
    private Output<String> connectionString;

    /**
     * @return (Updatable) Connection string. AZURE_SYNAPSE_ANALYTICS e.g.: &#39;jdbc:sqlserver://&lt;synapse-workspace&gt;.sql.azuresynapse.net:1433;database=&lt;db-name&gt;;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;&#39;, MONGODB e.g.: &#39;mongodb://mongodb0.example.com:27017/recordsrecords&#39;.
     * 
     */
    public Output<String> connectionString() {
        return this.connectionString;
    }
    /**
     * (Updatable) The connection type.
     * 
     */
    @Export(name="connectionType", refs={String.class}, tree="[0]")
    private Output<String> connectionType;

    /**
     * @return (Updatable) The connection type.
     * 
     */
    public Output<String> connectionType() {
        return this.connectionType;
    }
    /**
     * (Updatable) JDBC connection URL. e.g.: &#39;jdbc:snowflake://&lt;account_name&gt;.snowflakecomputing.com/?warehouse=&lt;warehouse-name&gt;&amp;db=&lt;db-name&gt;&#39;
     * 
     */
    @Export(name="connectionUrl", refs={String.class}, tree="[0]")
    private Output<String> connectionUrl;

    /**
     * @return (Updatable) JDBC connection URL. e.g.: &#39;jdbc:snowflake://&lt;account_name&gt;.snowflakecomputing.com/?warehouse=&lt;warehouse-name&gt;&amp;db=&lt;db-name&gt;&#39;
     * 
     */
    public Output<String> connectionUrl() {
        return this.connectionUrl;
    }
    /**
     * (Updatable) The base64 encoded content of the consumer.properties file.
     * 
     */
    @Export(name="consumerProperties", refs={String.class}, tree="[0]")
    private Output<String> consumerProperties;

    /**
     * @return (Updatable) The base64 encoded content of the consumer.properties file.
     * 
     */
    public Output<String> consumerProperties() {
        return this.consumerProperties;
    }
    /**
     * (Updatable) The base64 encoded content of the Hadoop Distributed File System configuration file (core-site.xml).
     * 
     */
    @Export(name="coreSiteXml", refs={String.class}, tree="[0]")
    private Output<String> coreSiteXml;

    /**
     * @return (Updatable) The base64 encoded content of the Hadoop Distributed File System configuration file (core-site.xml).
     * 
     */
    public Output<String> coreSiteXml() {
        return this.coreSiteXml;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Autonomous Json Database.
     * 
     */
    @Export(name="databaseId", refs={String.class}, tree="[0]")
    private Output<String> databaseId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Autonomous Json Database.
     * 
     */
    public Output<String> databaseId() {
        return this.databaseId;
    }
    /**
     * (Updatable) The name of the database.
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return (Updatable) The name of the database.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
     * 
     */
    @Export(name="dbSystemId", refs={String.class}, tree="[0]")
    private Output<String> dbSystemId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
     * 
     */
    public Output<String> dbSystemId() {
        return this.dbSystemId;
    }
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    @Export(name="deploymentId", refs={String.class}, tree="[0]")
    private Output<String> deploymentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public Output<String> deploymentId() {
        return this.deploymentId;
    }
    /**
     * (Updatable) Metadata about this specific object.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) Metadata about this specific object.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) An object&#39;s Display Name.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) An object&#39;s Display Name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Azure Storage service endpoint. e.g: https://test.blob.core.windows.net
     * 
     */
    @Export(name="endpoint", refs={String.class}, tree="[0]")
    private Output<String> endpoint;

    /**
     * @return (Updatable) Azure Storage service endpoint. e.g: https://test.blob.core.windows.net
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }
    /**
     * (Updatable) Fingerprint required by TLS security protocol. Eg.: &#39;6152b2dfbff200f973c5074a5b91d06ab3b472c07c09a1ea57bb7fd406cdce9c&#39;
     * 
     */
    @Export(name="fingerprint", refs={String.class}, tree="[0]")
    private Output<String> fingerprint;

    /**
     * @return (Updatable) Fingerprint required by TLS security protocol. Eg.: &#39;6152b2dfbff200f973c5074a5b91d06ab3b472c07c09a1ea57bb7fd406cdce9c&#39;
     * 
     */
    public Output<String> fingerprint() {
        return this.fingerprint;
    }
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) The name or address of a host. In case of Generic connection type host and port separated by colon. Example: `&#34;server.example.com:1234&#34;`
     * For multiple hosts, provide a comma separated list. Example: `&#34;server1.example.com:1000,server1.example.com:2000&#34;`
     * 
     */
    @Export(name="host", refs={String.class}, tree="[0]")
    private Output<String> host;

    /**
     * @return (Updatable) The name or address of a host. In case of Generic connection type host and port separated by colon. Example: `&#34;server.example.com:1234&#34;`
     * For multiple hosts, provide a comma separated list. Example: `&#34;server1.example.com:1000,server1.example.com:2000&#34;`
     * 
     */
    public Output<String> host() {
        return this.host;
    }
    /**
     * List of ingress IP addresses from where the GoldenGate deployment connects to this connection&#39;s privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
     * 
     */
    @Export(name="ingressIps", refs={List.class,ConnectionIngressIp.class}, tree="[0,1]")
    private Output<List<ConnectionIngressIp>> ingressIps;

    /**
     * @return List of ingress IP addresses from where the GoldenGate deployment connects to this connection&#39;s privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
     * 
     */
    public Output<List<ConnectionIngressIp>> ingressIps() {
        return this.ingressIps;
    }
    /**
     * (Updatable) The Connection Factory can be looked up using this name. e.g.: &#39;ConnectionFactory&#39;
     * 
     */
    @Export(name="jndiConnectionFactory", refs={String.class}, tree="[0]")
    private Output<String> jndiConnectionFactory;

    /**
     * @return (Updatable) The Connection Factory can be looked up using this name. e.g.: &#39;ConnectionFactory&#39;
     * 
     */
    public Output<String> jndiConnectionFactory() {
        return this.jndiConnectionFactory;
    }
    /**
     * (Updatable) The implementation of javax.naming.spi.InitialContextFactory interface that the client uses to obtain initial naming context. e.g.: &#39;org.apache.activemq.jndi.ActiveMQInitialContextFactory&#39;
     * 
     */
    @Export(name="jndiInitialContextFactory", refs={String.class}, tree="[0]")
    private Output<String> jndiInitialContextFactory;

    /**
     * @return (Updatable) The implementation of javax.naming.spi.InitialContextFactory interface that the client uses to obtain initial naming context. e.g.: &#39;org.apache.activemq.jndi.ActiveMQInitialContextFactory&#39;
     * 
     */
    public Output<String> jndiInitialContextFactory() {
        return this.jndiInitialContextFactory;
    }
    /**
     * (Updatable) The URL that Java Message Service will use to contact the JNDI provider. e.g.: &#39;tcp://myjms.host.domain:61616?jms.prefetchPolicy.all=1000&#39;
     * 
     */
    @Export(name="jndiProviderUrl", refs={String.class}, tree="[0]")
    private Output<String> jndiProviderUrl;

    /**
     * @return (Updatable) The URL that Java Message Service will use to contact the JNDI provider. e.g.: &#39;tcp://myjms.host.domain:61616?jms.prefetchPolicy.all=1000&#39;
     * 
     */
    public Output<String> jndiProviderUrl() {
        return this.jndiProviderUrl;
    }
    /**
     * (Updatable) The password associated to the principal.
     * 
     */
    @Export(name="jndiSecurityCredentials", refs={String.class}, tree="[0]")
    private Output<String> jndiSecurityCredentials;

    /**
     * @return (Updatable) The password associated to the principal.
     * 
     */
    public Output<String> jndiSecurityCredentials() {
        return this.jndiSecurityCredentials;
    }
    /**
     * (Updatable) Specifies the identity of the principal (user) to be authenticated. e.g.: &#39;admin2&#39;
     * 
     */
    @Export(name="jndiSecurityPrincipal", refs={String.class}, tree="[0]")
    private Output<String> jndiSecurityPrincipal;

    /**
     * @return (Updatable) Specifies the identity of the principal (user) to be authenticated. e.g.: &#39;admin2&#39;
     * 
     */
    public Output<String> jndiSecurityPrincipal() {
        return this.jndiSecurityPrincipal;
    }
    /**
     * (Updatable) Refers to the customer&#39;s master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
     * 
     */
    @Export(name="keyId", refs={String.class}, tree="[0]")
    private Output<String> keyId;

    /**
     * @return (Updatable) Refers to the customer&#39;s master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
     * 
     */
    public Output<String> keyId() {
        return this.keyId;
    }
    /**
     * (Updatable) The base64 encoded content of the KeyStore file.
     * 
     */
    @Export(name="keyStore", refs={String.class}, tree="[0]")
    private Output<String> keyStore;

    /**
     * @return (Updatable) The base64 encoded content of the KeyStore file.
     * 
     */
    public Output<String> keyStore() {
        return this.keyStore;
    }
    /**
     * (Updatable) The KeyStore password.
     * 
     */
    @Export(name="keyStorePassword", refs={String.class}, tree="[0]")
    private Output<String> keyStorePassword;

    /**
     * @return (Updatable) The KeyStore password.
     * 
     */
    public Output<String> keyStorePassword() {
        return this.keyStorePassword;
    }
    /**
     * Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     * 
     */
    @Export(name="nsgIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> nsgIds;

    /**
     * @return (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     * 
     */
    public Output<List<String>> nsgIds() {
        return this.nsgIds;
    }
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return (Updatable) The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * (Updatable) The port of an endpoint usually specified for a connection.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return (Updatable) The port of an endpoint usually specified for a connection.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * (Updatable) Deprecated: this field will be removed in future versions. Either specify the private IP in the connectionString or host  field, or make sure the host name is resolvable in the target VCN.
     * The private IP address of the connection&#39;s endpoint in the customer&#39;s VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
     * 
     */
    @Export(name="privateIp", refs={String.class}, tree="[0]")
    private Output<String> privateIp;

    /**
     * @return (Updatable) Deprecated: this field will be removed in future versions. Either specify the private IP in the connectionString or host  field, or make sure the host name is resolvable in the target VCN.
     * The private IP address of the connection&#39;s endpoint in the customer&#39;s VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
     * 
     */
    public Output<String> privateIp() {
        return this.privateIp;
    }
    /**
     * (Updatable) The base64 encoded content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     * 
     */
    @Export(name="privateKeyFile", refs={String.class}, tree="[0]")
    private Output<String> privateKeyFile;

    /**
     * @return (Updatable) The base64 encoded content of the private key file (PEM file) corresponding to the API key of the fingerprint. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     * 
     */
    public Output<String> privateKeyFile() {
        return this.privateKeyFile;
    }
    /**
     * (Updatable) Password if the private key file is encrypted.
     * 
     */
    @Export(name="privateKeyPassphrase", refs={String.class}, tree="[0]")
    private Output<String> privateKeyPassphrase;

    /**
     * @return (Updatable) Password if the private key file is encrypted.
     * 
     */
    public Output<String> privateKeyPassphrase() {
        return this.privateKeyPassphrase;
    }
    /**
     * (Updatable) The base64 encoded content of the producer.properties file.
     * 
     */
    @Export(name="producerProperties", refs={String.class}, tree="[0]")
    private Output<String> producerProperties;

    /**
     * @return (Updatable) The base64 encoded content of the producer.properties file.
     * 
     */
    public Output<String> producerProperties() {
        return this.producerProperties;
    }
    /**
     * (Updatable) The fingerprint of the API Key of the user specified by the userId. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     * 
     */
    @Export(name="publicKeyFingerprint", refs={String.class}, tree="[0]")
    private Output<String> publicKeyFingerprint;

    /**
     * @return (Updatable) The fingerprint of the API Key of the user specified by the userId. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     * 
     */
    public Output<String> publicKeyFingerprint() {
        return this.publicKeyFingerprint;
    }
    /**
     * (Updatable) The name of the region. e.g.: us-ashburn-1
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return (Updatable) The name of the region. e.g.: us-ashburn-1
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * (Updatable) Controls the network traffic direction to the target: SHARED_SERVICE_ENDPOINT: Traffic flows through the Goldengate Service&#39;s network to public hosts. Cannot be used for private targets.  SHARED_DEPLOYMENT_ENDPOINT: Network traffic flows from the assigned deployment&#39;s private endpoint through the deployment&#39;s subnet. DEDICATED_ENDPOINT: A dedicated private endpoint is created in the target VCN subnet for the connection. The subnetId is required when DEDICATED_ENDPOINT networking is selected.
     * 
     */
    @Export(name="routingMethod", refs={String.class}, tree="[0]")
    private Output<String> routingMethod;

    /**
     * @return (Updatable) Controls the network traffic direction to the target: SHARED_SERVICE_ENDPOINT: Traffic flows through the Goldengate Service&#39;s network to public hosts. Cannot be used for private targets.  SHARED_DEPLOYMENT_ENDPOINT: Network traffic flows from the assigned deployment&#39;s private endpoint through the deployment&#39;s subnet. DEDICATED_ENDPOINT: A dedicated private endpoint is created in the target VCN subnet for the connection. The subnetId is required when DEDICATED_ENDPOINT networking is selected.
     * 
     */
    public Output<String> routingMethod() {
        return this.routingMethod;
    }
    /**
     * (Updatable) Credential that uses a shared access signature (SAS) to authenticate to an Azure Service. This property is required when &#39;authenticationType&#39; is set to &#39;SHARED_ACCESS_SIGNATURE&#39;. e.g.: ?sv=2020-06-08&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupyx&amp;se=2020-09-10T20:27:28Z&amp;st=2022-08-05T12:27:28Z&amp;spr=https&amp;sig=C1IgHsiLBmTSStYkXXGLTP8it0xBrArcgCqOsZbXwIQ%3D
     * 
     */
    @Export(name="sasToken", refs={String.class}, tree="[0]")
    private Output<String> sasToken;

    /**
     * @return (Updatable) Credential that uses a shared access signature (SAS) to authenticate to an Azure Service. This property is required when &#39;authenticationType&#39; is set to &#39;SHARED_ACCESS_SIGNATURE&#39;. e.g.: ?sv=2020-06-08&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupyx&amp;se=2020-09-10T20:27:28Z&amp;st=2022-08-05T12:27:28Z&amp;spr=https&amp;sig=C1IgHsiLBmTSStYkXXGLTP8it0xBrArcgCqOsZbXwIQ%3D
     * 
     */
    public Output<String> sasToken() {
        return this.sasToken;
    }
    /**
     * (Updatable) Secret access key to access the Amazon S3 bucket. e.g.: &#34;this-is-not-the-secret&#34;
     * 
     */
    @Export(name="secretAccessKey", refs={String.class}, tree="[0]")
    private Output<String> secretAccessKey;

    /**
     * @return (Updatable) Secret access key to access the Amazon S3 bucket. e.g.: &#34;this-is-not-the-secret&#34;
     * 
     */
    public Output<String> secretAccessKey() {
        return this.secretAccessKey;
    }
    /**
     * (Updatable) Security protocol for Java Message Service. If not provided, default is PLAIN. Optional until 2024-06-27, in the release after it will be made required.
     * 
     */
    @Export(name="securityProtocol", refs={String.class}, tree="[0]")
    private Output<String> securityProtocol;

    /**
     * @return (Updatable) Security protocol for Java Message Service. If not provided, default is PLAIN. Optional until 2024-06-27, in the release after it will be made required.
     * 
     */
    public Output<String> securityProtocol() {
        return this.securityProtocol;
    }
    /**
     * (Updatable) Comma separated list of Elasticsearch server addresses, specified as host:port entries, where :port is optional.  If port is not specified, it defaults to 9200. Used for establishing the initial connection to the Elasticsearch cluster. Example: `&#34;server1.example.com:4000,server2.example.com:4000&#34;`
     * 
     */
    @Export(name="servers", refs={String.class}, tree="[0]")
    private Output<String> servers;

    /**
     * @return (Updatable) Comma separated list of Elasticsearch server addresses, specified as host:port entries, where :port is optional.  If port is not specified, it defaults to 9200. Used for establishing the initial connection to the Elasticsearch cluster. Example: `&#34;server1.example.com:4000,server2.example.com:4000&#34;`
     * 
     */
    public Output<String> servers() {
        return this.servers;
    }
    /**
     * (Updatable) The base64 encoded content of the service account key file containing the credentials required to use Google Cloud Storage.
     * 
     */
    @Export(name="serviceAccountKeyFile", refs={String.class}, tree="[0]")
    private Output<String> serviceAccountKeyFile;

    /**
     * @return (Updatable) The base64 encoded content of the service account key file containing the credentials required to use Google Cloud Storage.
     * 
     */
    public Output<String> serviceAccountKeyFile() {
        return this.serviceAccountKeyFile;
    }
    /**
     * (Updatable) The mode of the database connection session to be established by the data client. &#39;REDIRECT&#39; - for a RAC database, &#39;DIRECT&#39; - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
     * 
     */
    @Export(name="sessionMode", refs={String.class}, tree="[0]")
    private Output<String> sessionMode;

    /**
     * @return (Updatable) The mode of the database connection session to be established by the data client. &#39;REDIRECT&#39; - for a RAC database, &#39;DIRECT&#39; - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
     * 
     */
    public Output<String> sessionMode() {
        return this.sessionMode;
    }
    /**
     * (Updatable) If set to true, Java Naming and Directory Interface (JNDI) properties should be provided.
     * 
     */
    @Export(name="shouldUseJndi", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> shouldUseJndi;

    /**
     * @return (Updatable) If set to true, Java Naming and Directory Interface (JNDI) properties should be provided.
     * 
     */
    public Output<Boolean> shouldUseJndi() {
        return this.shouldUseJndi;
    }
    /**
     * (Updatable) If set to true, the driver validates the certificate that is sent by the database server.
     * 
     */
    @Export(name="shouldValidateServerCertificate", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> shouldValidateServerCertificate;

    /**
     * @return (Updatable) If set to true, the driver validates the certificate that is sent by the database server.
     * 
     */
    public Output<Boolean> shouldValidateServerCertificate() {
        return this.shouldValidateServerCertificate;
    }
    /**
     * (Updatable) Database Certificate - The base64 encoded content of pem file containing the server public key (for 1-way SSL).
     * 
     */
    @Export(name="sslCa", refs={String.class}, tree="[0]")
    private Output<String> sslCa;

    /**
     * @return (Updatable) Database Certificate - The base64 encoded content of pem file containing the server public key (for 1-way SSL).
     * 
     */
    public Output<String> sslCa() {
        return this.sslCa;
    }
    /**
     * (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
     * 
     */
    @Export(name="sslCert", refs={String.class}, tree="[0]")
    private Output<String> sslCert;

    /**
     * @return (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
     * 
     */
    public Output<String> sslCert() {
        return this.sslCert;
    }
    /**
     * (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
     * 
     */
    @Export(name="sslCrl", refs={String.class}, tree="[0]")
    private Output<String> sslCrl;

    /**
     * @return (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
     * 
     */
    public Output<String> sslCrl() {
        return this.sslCrl;
    }
    /**
     * (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
     * 
     */
    @Export(name="sslKey", refs={String.class}, tree="[0]")
    private Output<String> sslKey;

    /**
     * @return (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
     * 
     */
    public Output<String> sslKey() {
        return this.sslKey;
    }
    /**
     * (Updatable) The password for the cert inside of the KeyStore. In case it differs from the KeyStore password, it should be provided.
     * 
     */
    @Export(name="sslKeyPassword", refs={String.class}, tree="[0]")
    private Output<String> sslKeyPassword;

    /**
     * @return (Updatable) The password for the cert inside of the KeyStore. In case it differs from the KeyStore password, it should be provided.
     * 
     */
    public Output<String> sslKeyPassword() {
        return this.sslKeyPassword;
    }
    /**
     * (Updatable) SSL modes for PostgreSQL.
     * 
     */
    @Export(name="sslMode", refs={String.class}, tree="[0]")
    private Output<String> sslMode;

    /**
     * @return (Updatable) SSL modes for PostgreSQL.
     * 
     */
    public Output<String> sslMode() {
        return this.sslMode;
    }
    /**
     * Possible lifecycle states for connection.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Possible lifecycle states for connection.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
     * 
     */
    @Export(name="streamPoolId", refs={String.class}, tree="[0]")
    private Output<String> streamPoolId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
     * 
     */
    public Output<String> streamPoolId() {
        return this.streamPoolId;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the target subnet of the dedicated connection.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> systemTags;

    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Output<Map<String,Object>> systemTags() {
        return this.systemTags;
    }
    /**
     * The Kafka (e.g. Confluent) Schema Registry technology type.
     * 
     */
    @Export(name="technologyType", refs={String.class}, tree="[0]")
    private Output<String> technologyType;

    /**
     * @return The Kafka (e.g. Confluent) Schema Registry technology type.
     * 
     */
    public Output<String> technologyType() {
        return this.technologyType;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
     * 
     */
    @Export(name="tenancyId", refs={String.class}, tree="[0]")
    private Output<String> tenancyId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
     * 
     */
    public Output<String> tenancyId() {
        return this.tenancyId;
    }
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * (Updatable) The base64 encoded content of the TrustStore file.
     * 
     */
    @Export(name="trustStore", refs={String.class}, tree="[0]")
    private Output<String> trustStore;

    /**
     * @return (Updatable) The base64 encoded content of the TrustStore file.
     * 
     */
    public Output<String> trustStore() {
        return this.trustStore;
    }
    /**
     * (Updatable) The TrustStore password.
     * 
     */
    @Export(name="trustStorePassword", refs={String.class}, tree="[0]")
    private Output<String> trustStorePassword;

    /**
     * @return (Updatable) The TrustStore password.
     * 
     */
    public Output<String> trustStorePassword() {
        return this.trustStorePassword;
    }
    /**
     * (Updatable) Kafka Schema Registry URL. e.g.: &#39;https://server1.us.oracle.com:8081&#39;
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return (Updatable) Kafka Schema Registry URL. e.g.: &#39;https://server1.us.oracle.com:8081&#39;
     * 
     */
    public Output<String> url() {
        return this.url;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Oracle NoSQL database. The user must have write access to the table they want to connect to.
     * 
     */
    @Export(name="userId", refs={String.class}, tree="[0]")
    private Output<String> userId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Oracle NoSQL database. The user must have write access to the table they want to connect to.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivty requirments defined in it.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return (Updatable) The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivty requirments defined in it.
     * 
     */
    public Output<String> username() {
        return this.username;
    }
    /**
     * (Updatable) Refers to the customer&#39;s vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
     * 
     */
    @Export(name="vaultId", refs={String.class}, tree="[0]")
    private Output<String> vaultId;

    /**
     * @return (Updatable) Refers to the customer&#39;s vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database.  This attribute is expected to be base64 encoded.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="wallet", refs={String.class}, tree="[0]")
    private Output<String> wallet;

    /**
     * @return (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database.  This attribute is expected to be base64 encoded.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> wallet() {
        return this.wallet;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Connection(String name) {
        this(name, ConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Connection(String name, ConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Connection(String name, ConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:GoldenGate/connection:Connection", name, args == null ? ConnectionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Connection(String name, Output<String> id, @Nullable ConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:GoldenGate/connection:Connection", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "keyStorePassword",
                "password",
                "privateKeyFile",
                "privateKeyPassphrase",
                "sslKeyPassword",
                "trustStorePassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Connection get(String name, Output<String> id, @Nullable ConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Connection(name, id, state, options);
    }
}
