// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.GoldenGate.ConnectionArgs;
import com.pulumi.oci.GoldenGate.inputs.ConnectionState;
import com.pulumi.oci.GoldenGate.outputs.ConnectionAdditionalAttribute;
import com.pulumi.oci.GoldenGate.outputs.ConnectionBootstrapServer;
import com.pulumi.oci.GoldenGate.outputs.ConnectionIngressIp;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Connection resource in Oracle Cloud Infrastructure Golden Gate service.
 * 
 * Creates a new Connection.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.GoldenGate.Connection;
 * import com.pulumi.oci.GoldenGate.ConnectionArgs;
 * import com.pulumi.oci.GoldenGate.inputs.ConnectionAdditionalAttributeArgs;
 * import com.pulumi.oci.GoldenGate.inputs.ConnectionBootstrapServerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testConnection = new Connection(&#34;testConnection&#34;, ConnectionArgs.builder()        
 *             .compartmentId(var_.compartment_id())
 *             .connectionType(var_.connection_connection_type())
 *             .displayName(var_.connection_display_name())
 *             .technologyType(var_.connection_technology_type())
 *             .accessKeyId(oci_kms_key.test_key().id())
 *             .accountKey(var_.connection_account_key())
 *             .accountName(var_.connection_account_name())
 *             .additionalAttributes(ConnectionAdditionalAttributeArgs.builder()
 *                 .name(var_.connection_additional_attributes_name())
 *                 .value(var_.connection_additional_attributes_value())
 *                 .build())
 *             .authenticationType(var_.connection_authentication_type())
 *             .azureTenantId(oci_golden_gate_azure_tenant.test_azure_tenant().id())
 *             .bootstrapServers(ConnectionBootstrapServerArgs.builder()
 *                 .host(var_.connection_bootstrap_servers_host())
 *                 .port(var_.connection_bootstrap_servers_port())
 *                 .privateIp(var_.connection_bootstrap_servers_private_ip())
 *                 .build())
 *             .clientId(oci_golden_gate_client.test_client().id())
 *             .clientSecret(var_.connection_client_secret())
 *             .connectionFactory(var_.connection_connection_factory())
 *             .connectionString(var_.connection_connection_string())
 *             .connectionUrl(var_.connection_connection_url())
 *             .consumerProperties(var_.connection_consumer_properties())
 *             .coreSiteXml(var_.connection_core_site_xml())
 *             .databaseId(oci_database_database.test_database().id())
 *             .databaseName(oci_database_database.test_database().name())
 *             .dbSystemId(oci_database_db_system.test_db_system().id())
 *             .definedTags(Map.of(&#34;foo-namespace.bar-key&#34;, &#34;value&#34;))
 *             .deploymentId(oci_golden_gate_deployment.test_deployment().id())
 *             .description(var_.connection_description())
 *             .endpoint(var_.connection_endpoint())
 *             .freeformTags(Map.of(&#34;bar-key&#34;, &#34;value&#34;))
 *             .host(var_.connection_host())
 *             .jndiConnectionFactory(var_.connection_jndi_connection_factory())
 *             .jndiInitialContextFactory(var_.connection_jndi_initial_context_factory())
 *             .jndiProviderUrl(var_.connection_jndi_provider_url())
 *             .jndiSecurityCredentials(var_.connection_jndi_security_credentials())
 *             .jndiSecurityPrincipal(var_.connection_jndi_security_principal())
 *             .keyId(oci_kms_key.test_key().id())
 *             .keyStore(var_.connection_key_store())
 *             .keyStorePassword(var_.connection_key_store_password())
 *             .nsgIds(var_.connection_nsg_ids())
 *             .password(var_.connection_password())
 *             .port(var_.connection_port())
 *             .privateIp(var_.connection_private_ip())
 *             .privateKeyFile(var_.connection_private_key_file())
 *             .privateKeyPassphrase(var_.connection_private_key_passphrase())
 *             .producerProperties(var_.connection_producer_properties())
 *             .publicKeyFingerprint(var_.connection_public_key_fingerprint())
 *             .region(var_.connection_region())
 *             .sasToken(var_.connection_sas_token())
 *             .secretAccessKey(var_.connection_secret_access_key())
 *             .securityProtocol(var_.connection_security_protocol())
 *             .sessionMode(var_.connection_session_mode())
 *             .shouldUseJndi(var_.connection_should_use_jndi())
 *             .shouldValidateServerCertificate(var_.connection_should_validate_server_certificate())
 *             .sslCa(var_.connection_ssl_ca())
 *             .sslCert(var_.connection_ssl_cert())
 *             .sslCrl(var_.connection_ssl_crl())
 *             .sslKey(var_.connection_ssl_key())
 *             .sslKeyPassword(var_.connection_ssl_key_password())
 *             .sslMode(var_.connection_ssl_mode())
 *             .streamPoolId(oci_streaming_stream_pool.test_stream_pool().id())
 *             .subnetId(oci_core_subnet.test_subnet().id())
 *             .tenancyId(oci_identity_tenancy.test_tenancy().id())
 *             .trustStore(var_.connection_trust_store())
 *             .trustStorePassword(var_.connection_trust_store_password())
 *             .url(var_.connection_url())
 *             .userId(oci_identity_user.test_user().id())
 *             .username(var_.connection_username())
 *             .vaultId(oci_kms_vault.test_vault().id())
 *             .wallet(var_.connection_wallet())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Connections can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:GoldenGate/connection:Connection test_connection &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:GoldenGate/connection:Connection")
public class Connection extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) Access key ID to access the Amazon S3 bucket. e.g.: &#34;this-is-not-the-secret&#34;
     * 
     */
    @Export(name="accessKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accessKeyId;

    /**
     * @return (Updatable) Access key ID to access the Amazon S3 bucket. e.g.: &#34;this-is-not-the-secret&#34;
     * 
     */
    public Output<Optional<String>> accessKeyId() {
        return Codegen.optional(this.accessKeyId);
    }
    /**
     * (Updatable) Azure storage account key. This property is required when &#39;authenticationType&#39; is set to &#39;SHARED_KEY&#39;. e.g.: pa3WbhVATzj56xD4DH1VjOUhApRGEGHvOo58eQJVWIzX+j8j4CUVFcTjpIqDSRaSa1Wo2LbWY5at+AStEgLOIQ==
     * 
     */
    @Export(name="accountKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountKey;

    /**
     * @return (Updatable) Azure storage account key. This property is required when &#39;authenticationType&#39; is set to &#39;SHARED_KEY&#39;. e.g.: pa3WbhVATzj56xD4DH1VjOUhApRGEGHvOo58eQJVWIzX+j8j4CUVFcTjpIqDSRaSa1Wo2LbWY5at+AStEgLOIQ==
     * 
     */
    public Output<Optional<String>> accountKey() {
        return Codegen.optional(this.accountKey);
    }
    /**
     * (Updatable) Sets the Azure storage account name.
     * 
     */
    @Export(name="accountName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> accountName;

    /**
     * @return (Updatable) Sets the Azure storage account name.
     * 
     */
    public Output<Optional<String>> accountName() {
        return Codegen.optional(this.accountName);
    }
    /**
     * (Updatable) An array of name-value pair attribute entries. Used as additional parameters in connection string.
     * 
     */
    @Export(name="additionalAttributes", refs={List.class,ConnectionAdditionalAttribute.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConnectionAdditionalAttribute>> additionalAttributes;

    /**
     * @return (Updatable) An array of name-value pair attribute entries. Used as additional parameters in connection string.
     * 
     */
    public Output<Optional<List<ConnectionAdditionalAttribute>>> additionalAttributes() {
        return Codegen.optional(this.additionalAttributes);
    }
    /**
     * (Updatable) Used authentication mechanism.
     * 
     */
    @Export(name="authenticationType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> authenticationType;

    /**
     * @return (Updatable) Used authentication mechanism.
     * 
     */
    public Output<Optional<String>> authenticationType() {
        return Codegen.optional(this.authenticationType);
    }
    /**
     * (Updatable) Azure tenant ID of the application. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
     * 
     */
    @Export(name="azureTenantId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> azureTenantId;

    /**
     * @return (Updatable) Azure tenant ID of the application. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: 14593954-d337-4a61-a364-9f758c64f97f
     * 
     */
    public Output<Optional<String>> azureTenantId() {
        return Codegen.optional(this.azureTenantId);
    }
    /**
     * (Updatable) Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `&#34;server1.example.com:9092,server2.example.com:9092&#34;`
     * 
     */
    @Export(name="bootstrapServers", refs={List.class,ConnectionBootstrapServer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConnectionBootstrapServer>> bootstrapServers;

    /**
     * @return (Updatable) Kafka bootstrap. Equivalent of bootstrap.servers configuration property in Kafka: list of KafkaBootstrapServer objects specified by host/port. Used for establishing the initial connection to the Kafka cluster. Example: `&#34;server1.example.com:9092,server2.example.com:9092&#34;`
     * 
     */
    public Output<Optional<List<ConnectionBootstrapServer>>> bootstrapServers() {
        return Codegen.optional(this.bootstrapServers);
    }
    /**
     * (Updatable) Azure client ID of the application. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientId;

    /**
     * @return (Updatable) Azure client ID of the application. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: 06ecaabf-8b80-4ec8-a0ec-20cbf463703d
     * 
     */
    public Output<Optional<String>> clientId() {
        return Codegen.optional(this.clientId);
    }
    /**
     * (Updatable) Azure client secret (aka application password) for authentication. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: dO29Q~F5-VwnA.lZdd11xFF_t5NAXCaGwDl9NbT1
     * 
     */
    @Export(name="clientSecret", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientSecret;

    /**
     * @return (Updatable) Azure client secret (aka application password) for authentication. This property is required when &#39;authenticationType&#39; is set to &#39;AZURE_ACTIVE_DIRECTORY&#39;. e.g.: dO29Q~F5-VwnA.lZdd11xFF_t5NAXCaGwDl9NbT1
     * 
     */
    public Output<Optional<String>> clientSecret() {
        return Codegen.optional(this.clientSecret);
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) The of Java class implementing javax.jms.ConnectionFactory interface supplied by the Java Message Service provider. e.g.: &#39;com.stc.jmsjca.core.JConnectionFactoryXA&#39;
     * 
     */
    @Export(name="connectionFactory", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> connectionFactory;

    /**
     * @return (Updatable) The of Java class implementing javax.jms.ConnectionFactory interface supplied by the Java Message Service provider. e.g.: &#39;com.stc.jmsjca.core.JConnectionFactoryXA&#39;
     * 
     */
    public Output<Optional<String>> connectionFactory() {
        return Codegen.optional(this.connectionFactory);
    }
    /**
     * (Updatable) Connection string. AZURE_SYNAPSE_ANALYTICS e.g.: &#39;jdbc:sqlserver://&lt;synapse-workspace&gt;.sql.azuresynapse.net:1433;database=&lt;db-name&gt;;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;&#39;, MONGODB e.g.: &#39;mongodb://mongodb0.example.com:27017/recordsrecords&#39;.
     * 
     */
    @Export(name="connectionString", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> connectionString;

    /**
     * @return (Updatable) Connection string. AZURE_SYNAPSE_ANALYTICS e.g.: &#39;jdbc:sqlserver://&lt;synapse-workspace&gt;.sql.azuresynapse.net:1433;database=&lt;db-name&gt;;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.sql.azuresynapse.net;loginTimeout=300;&#39;, MONGODB e.g.: &#39;mongodb://mongodb0.example.com:27017/recordsrecords&#39;.
     * 
     */
    public Output<Optional<String>> connectionString() {
        return Codegen.optional(this.connectionString);
    }
    /**
     * (Updatable) The connection type.
     * 
     */
    @Export(name="connectionType", refs={String.class}, tree="[0]")
    private Output<String> connectionType;

    /**
     * @return (Updatable) The connection type.
     * 
     */
    public Output<String> connectionType() {
        return this.connectionType;
    }
    /**
     * (Updatable) JAVA_MESSAGE_SERVICE: Connection URL of the Java Message Service, specifying the protocol, host, and port. e.g.: &#39;mq://myjms.host.domain:7676&#39;, SNOWFLAKE: JDBC connection URL. e.g.: &#39;jdbc:snowflake://&lt;account_name&gt;.snowflakecomputing.com/?warehouse=&lt;warehouse-name&gt;&amp;db=&lt;db-name&gt;&#39;
     * 
     */
    @Export(name="connectionUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> connectionUrl;

    /**
     * @return (Updatable) JAVA_MESSAGE_SERVICE: Connection URL of the Java Message Service, specifying the protocol, host, and port. e.g.: &#39;mq://myjms.host.domain:7676&#39;, SNOWFLAKE: JDBC connection URL. e.g.: &#39;jdbc:snowflake://&lt;account_name&gt;.snowflakecomputing.com/?warehouse=&lt;warehouse-name&gt;&amp;db=&lt;db-name&gt;&#39;
     * 
     */
    public Output<Optional<String>> connectionUrl() {
        return Codegen.optional(this.connectionUrl);
    }
    /**
     * (Updatable) The base64 encoded content of the consumer.properties file.
     * 
     */
    @Export(name="consumerProperties", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> consumerProperties;

    /**
     * @return (Updatable) The base64 encoded content of the consumer.properties file.
     * 
     */
    public Output<Optional<String>> consumerProperties() {
        return Codegen.optional(this.consumerProperties);
    }
    /**
     * (Updatable) The base64 encoded content of the Hadoop Distributed File System configuration file (core-site.xml).
     * 
     */
    @Export(name="coreSiteXml", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> coreSiteXml;

    /**
     * @return (Updatable) The base64 encoded content of the Hadoop Distributed File System configuration file (core-site.xml).
     * 
     */
    public Output<Optional<String>> coreSiteXml() {
        return Codegen.optional(this.coreSiteXml);
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     * 
     */
    @Export(name="databaseId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> databaseId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database being referenced.
     * 
     */
    public Output<Optional<String>> databaseId() {
        return Codegen.optional(this.databaseId);
    }
    /**
     * (Updatable) The name of the database.
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> databaseName;

    /**
     * @return (Updatable) The name of the database.
     * 
     */
    public Output<Optional<String>> databaseName() {
        return Codegen.optional(this.databaseName);
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
     * 
     */
    @Export(name="dbSystemId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dbSystemId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database system being referenced.
     * 
     */
    public Output<Optional<String>> dbSystemId() {
        return Codegen.optional(this.dbSystemId);
    }
    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> definedTags() {
        return Codegen.optional(this.definedTags);
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    @Export(name="deploymentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deploymentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public Output<Optional<String>> deploymentId() {
        return Codegen.optional(this.deploymentId);
    }
    /**
     * (Updatable) Metadata about this specific object.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return (Updatable) Metadata about this specific object.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * (Updatable) An object&#39;s Display Name.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) An object&#39;s Display Name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Azure Storage service endpoint. e.g: https://test.blob.core.windows.net
     * 
     */
    @Export(name="endpoint", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> endpoint;

    /**
     * @return (Updatable) Azure Storage service endpoint. e.g: https://test.blob.core.windows.net
     * 
     */
    public Output<Optional<String>> endpoint() {
        return Codegen.optional(this.endpoint);
    }
    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> freeformTags() {
        return Codegen.optional(this.freeformTags);
    }
    /**
     * (Updatable) The name or address of a host.
     * 
     */
    @Export(name="host", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> host;

    /**
     * @return (Updatable) The name or address of a host.
     * 
     */
    public Output<Optional<String>> host() {
        return Codegen.optional(this.host);
    }
    /**
     * List of ingress IP addresses from where the GoldenGate deployment connects to this connection&#39;s privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
     * 
     */
    @Export(name="ingressIps", refs={List.class,ConnectionIngressIp.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConnectionIngressIp>> ingressIps;

    /**
     * @return List of ingress IP addresses from where the GoldenGate deployment connects to this connection&#39;s privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
     * 
     */
    public Output<Optional<List<ConnectionIngressIp>>> ingressIps() {
        return Codegen.optional(this.ingressIps);
    }
    /**
     * (Updatable) The Connection Factory can be looked up using this name. e.g.: &#39;ConnectionFactory&#39;
     * 
     */
    @Export(name="jndiConnectionFactory", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> jndiConnectionFactory;

    /**
     * @return (Updatable) The Connection Factory can be looked up using this name. e.g.: &#39;ConnectionFactory&#39;
     * 
     */
    public Output<Optional<String>> jndiConnectionFactory() {
        return Codegen.optional(this.jndiConnectionFactory);
    }
    /**
     * (Updatable) The implementation of javax.naming.spi.InitialContextFactory interface that the client uses to obtain initial naming context. e.g.: &#39;org.apache.activemq.jndi.ActiveMQInitialContextFactory&#39;
     * 
     */
    @Export(name="jndiInitialContextFactory", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> jndiInitialContextFactory;

    /**
     * @return (Updatable) The implementation of javax.naming.spi.InitialContextFactory interface that the client uses to obtain initial naming context. e.g.: &#39;org.apache.activemq.jndi.ActiveMQInitialContextFactory&#39;
     * 
     */
    public Output<Optional<String>> jndiInitialContextFactory() {
        return Codegen.optional(this.jndiInitialContextFactory);
    }
    /**
     * (Updatable) The URL that Java Message Service will use to contact the JNDI provider. e.g.: &#39;tcp://myjms.host.domain:61616?jms.prefetchPolicy.all=1000&#39;
     * 
     */
    @Export(name="jndiProviderUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> jndiProviderUrl;

    /**
     * @return (Updatable) The URL that Java Message Service will use to contact the JNDI provider. e.g.: &#39;tcp://myjms.host.domain:61616?jms.prefetchPolicy.all=1000&#39;
     * 
     */
    public Output<Optional<String>> jndiProviderUrl() {
        return Codegen.optional(this.jndiProviderUrl);
    }
    /**
     * (Updatable) The password associated to the principal.
     * 
     */
    @Export(name="jndiSecurityCredentials", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> jndiSecurityCredentials;

    /**
     * @return (Updatable) The password associated to the principal.
     * 
     */
    public Output<Optional<String>> jndiSecurityCredentials() {
        return Codegen.optional(this.jndiSecurityCredentials);
    }
    /**
     * (Updatable) Specifies the identity of the principal (user) to be authenticated. e.g.: &#39;admin2&#39;
     * 
     */
    @Export(name="jndiSecurityPrincipal", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> jndiSecurityPrincipal;

    /**
     * @return (Updatable) Specifies the identity of the principal (user) to be authenticated. e.g.: &#39;admin2&#39;
     * 
     */
    public Output<Optional<String>> jndiSecurityPrincipal() {
        return Codegen.optional(this.jndiSecurityPrincipal);
    }
    /**
     * (Updatable) Refers to the customer&#39;s master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
     * 
     */
    @Export(name="keyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyId;

    /**
     * @return (Updatable) Refers to the customer&#39;s master key OCID.  If provided, it references a key to manage secrets. Customers must add policies to permit GoldenGate to use this key.
     * 
     */
    public Output<Optional<String>> keyId() {
        return Codegen.optional(this.keyId);
    }
    /**
     * (Updatable) The base64 encoded content of the KeyStore file.
     * 
     */
    @Export(name="keyStore", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyStore;

    /**
     * @return (Updatable) The base64 encoded content of the KeyStore file.
     * 
     */
    public Output<Optional<String>> keyStore() {
        return Codegen.optional(this.keyStore);
    }
    /**
     * (Updatable) The KeyStore password.
     * 
     */
    @Export(name="keyStorePassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyStorePassword;

    /**
     * @return (Updatable) The KeyStore password.
     * 
     */
    public Output<Optional<String>> keyStorePassword() {
        return Codegen.optional(this.keyStorePassword);
    }
    /**
     * Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> lifecycleDetails;

    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public Output<Optional<String>> lifecycleDetails() {
        return Codegen.optional(this.lifecycleDetails);
    }
    /**
     * (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     * 
     */
    @Export(name="nsgIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> nsgIds;

    /**
     * @return (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     * 
     */
    public Output<Optional<List<String>>> nsgIds() {
        return Codegen.optional(this.nsgIds);
    }
    /**
     * (Updatable) The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> password;

    /**
     * @return (Updatable) The password Oracle GoldenGate uses to connect the associated system of the given technology. It must conform to the specific security requirements including length, case sensitivity, and so on.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * (Updatable) The port of an endpoint usually specified for a connection.
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> port;

    /**
     * @return (Updatable) The port of an endpoint usually specified for a connection.
     * 
     */
    public Output<Optional<Integer>> port() {
        return Codegen.optional(this.port);
    }
    /**
     * (Updatable) The private IP address of the connection&#39;s endpoint in the customer&#39;s VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
     * 
     */
    @Export(name="privateIp", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> privateIp;

    /**
     * @return (Updatable) The private IP address of the connection&#39;s endpoint in the customer&#39;s VCN, typically a database endpoint or a big data endpoint (e.g. Kafka bootstrap server). In case the privateIp is provided, the subnetId must also be provided. In case the privateIp (and the subnetId) is not provided it is assumed the datasource is publicly accessible. In case the connection is accessible only privately, the lack of privateIp will result in not being able to access the connection.
     * 
     */
    public Output<Optional<String>> privateIp() {
        return Codegen.optional(this.privateIp);
    }
    /**
     * (Updatable) The base64 encoded content of private key file in PEM format.
     * 
     */
    @Export(name="privateKeyFile", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> privateKeyFile;

    /**
     * @return (Updatable) The base64 encoded content of private key file in PEM format.
     * 
     */
    public Output<Optional<String>> privateKeyFile() {
        return Codegen.optional(this.privateKeyFile);
    }
    /**
     * (Updatable) Password if the private key file is encrypted.
     * 
     */
    @Export(name="privateKeyPassphrase", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> privateKeyPassphrase;

    /**
     * @return (Updatable) Password if the private key file is encrypted.
     * 
     */
    public Output<Optional<String>> privateKeyPassphrase() {
        return Codegen.optional(this.privateKeyPassphrase);
    }
    /**
     * (Updatable) The base64 encoded content of the producer.properties file.
     * 
     */
    @Export(name="producerProperties", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> producerProperties;

    /**
     * @return (Updatable) The base64 encoded content of the producer.properties file.
     * 
     */
    public Output<Optional<String>> producerProperties() {
        return Codegen.optional(this.producerProperties);
    }
    /**
     * (Updatable) The fingerprint of the API Key of the user specified by the userId. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     * 
     */
    @Export(name="publicKeyFingerprint", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> publicKeyFingerprint;

    /**
     * @return (Updatable) The fingerprint of the API Key of the user specified by the userId. See documentation: https://docs.oracle.com/en-us/iaas/Content/Identity/Tasks/managingcredentials.htm
     * 
     */
    public Output<Optional<String>> publicKeyFingerprint() {
        return Codegen.optional(this.publicKeyFingerprint);
    }
    /**
     * (Updatable) The name of the region. e.g.: us-ashburn-1
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> region;

    /**
     * @return (Updatable) The name of the region. e.g.: us-ashburn-1
     * 
     */
    public Output<Optional<String>> region() {
        return Codegen.optional(this.region);
    }
    /**
     * (Updatable) Credential that uses a shared access signature (SAS) to authenticate to an Azure Service. This property is required when &#39;authenticationType&#39; is set to &#39;SHARED_ACCESS_SIGNATURE&#39;. e.g.: ?sv=2020-06-08&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupyx&amp;se=2020-09-10T20:27:28Z&amp;st=2022-08-05T12:27:28Z&amp;spr=https&amp;sig=C1IgHsiLBmTSStYkXXGLTP8it0xBrArcgCqOsZbXwIQ%3D
     * 
     */
    @Export(name="sasToken", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sasToken;

    /**
     * @return (Updatable) Credential that uses a shared access signature (SAS) to authenticate to an Azure Service. This property is required when &#39;authenticationType&#39; is set to &#39;SHARED_ACCESS_SIGNATURE&#39;. e.g.: ?sv=2020-06-08&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupyx&amp;se=2020-09-10T20:27:28Z&amp;st=2022-08-05T12:27:28Z&amp;spr=https&amp;sig=C1IgHsiLBmTSStYkXXGLTP8it0xBrArcgCqOsZbXwIQ%3D
     * 
     */
    public Output<Optional<String>> sasToken() {
        return Codegen.optional(this.sasToken);
    }
    /**
     * (Updatable) Secret access key to access the Amazon S3 bucket. e.g.: &#34;this-is-not-the-secret&#34;
     * 
     */
    @Export(name="secretAccessKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secretAccessKey;

    /**
     * @return (Updatable) Secret access key to access the Amazon S3 bucket. e.g.: &#34;this-is-not-the-secret&#34;
     * 
     */
    public Output<Optional<String>> secretAccessKey() {
        return Codegen.optional(this.secretAccessKey);
    }
    /**
     * (Updatable) Security Protocol.
     * 
     */
    @Export(name="securityProtocol", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> securityProtocol;

    /**
     * @return (Updatable) Security Protocol.
     * 
     */
    public Output<Optional<String>> securityProtocol() {
        return Codegen.optional(this.securityProtocol);
    }
    /**
     * (Updatable) The mode of the database connection session to be established by the data client. &#39;REDIRECT&#39; - for a RAC database, &#39;DIRECT&#39; - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
     * 
     */
    @Export(name="sessionMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sessionMode;

    /**
     * @return (Updatable) The mode of the database connection session to be established by the data client. &#39;REDIRECT&#39; - for a RAC database, &#39;DIRECT&#39; - for a non-RAC database. Connection to a RAC database involves a redirection received from the SCAN listeners to the database node to connect to. By default the mode would be DIRECT.
     * 
     */
    public Output<Optional<String>> sessionMode() {
        return Codegen.optional(this.sessionMode);
    }
    /**
     * (Updatable) If set to true, Java Naming and Directory Interface (JNDI) properties should be provided.
     * 
     */
    @Export(name="shouldUseJndi", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shouldUseJndi;

    /**
     * @return (Updatable) If set to true, Java Naming and Directory Interface (JNDI) properties should be provided.
     * 
     */
    public Output<Optional<Boolean>> shouldUseJndi() {
        return Codegen.optional(this.shouldUseJndi);
    }
    /**
     * (Updatable) If set to true, the driver validates the certificate that is sent by the database server.
     * 
     */
    @Export(name="shouldValidateServerCertificate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shouldValidateServerCertificate;

    /**
     * @return (Updatable) If set to true, the driver validates the certificate that is sent by the database server.
     * 
     */
    public Output<Optional<Boolean>> shouldValidateServerCertificate() {
        return Codegen.optional(this.shouldValidateServerCertificate);
    }
    /**
     * (Updatable) Database Certificate - The base64 encoded content of pem file containing the server public key (for 1-way SSL).
     * 
     */
    @Export(name="sslCa", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sslCa;

    /**
     * @return (Updatable) Database Certificate - The base64 encoded content of pem file containing the server public key (for 1-way SSL).
     * 
     */
    public Output<Optional<String>> sslCa() {
        return Codegen.optional(this.sslCa);
    }
    /**
     * (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
     * 
     */
    @Export(name="sslCert", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sslCert;

    /**
     * @return (Updatable) Client Certificate - The base64 encoded content of client-cert.pem file  containing the client public key (for 2-way SSL).
     * 
     */
    public Output<Optional<String>> sslCert() {
        return Codegen.optional(this.sslCert);
    }
    /**
     * (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
     * 
     */
    @Export(name="sslCrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sslCrl;

    /**
     * @return (Updatable) Certificates revoked by certificate authorities (CA). Server certificate must not be on this list (for 1 and 2-way SSL). Note: This is an optional and that too only applicable if TLS/MTLS option is selected.
     * 
     */
    public Output<Optional<String>> sslCrl() {
        return Codegen.optional(this.sslCrl);
    }
    /**
     * (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
     * 
     */
    @Export(name="sslKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sslKey;

    /**
     * @return (Updatable) Client Key - The client-key.pem containing the client private key (for 2-way SSL).
     * 
     */
    public Output<Optional<String>> sslKey() {
        return Codegen.optional(this.sslKey);
    }
    /**
     * (Updatable) The password for the cert inside of the KeyStore. In case it differs from the KeyStore password, it should be provided.
     * 
     */
    @Export(name="sslKeyPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sslKeyPassword;

    /**
     * @return (Updatable) The password for the cert inside of the KeyStore. In case it differs from the KeyStore password, it should be provided.
     * 
     */
    public Output<Optional<String>> sslKeyPassword() {
        return Codegen.optional(this.sslKeyPassword);
    }
    /**
     * (Updatable) SSL modes for PostgreSQL.
     * 
     */
    @Export(name="sslMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sslMode;

    /**
     * @return (Updatable) SSL modes for PostgreSQL.
     * 
     */
    public Output<Optional<String>> sslMode() {
        return Codegen.optional(this.sslMode);
    }
    /**
     * Possible lifecycle states for connection.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return Possible lifecycle states for connection.
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
     * 
     */
    @Export(name="streamPoolId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> streamPoolId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the stream pool being referenced.
     * 
     */
    public Output<Optional<String>> streamPoolId() {
        return Codegen.optional(this.streamPoolId);
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subnetId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     * 
     */
    public Output<Optional<String>> subnetId() {
        return Codegen.optional(this.subnetId);
    }
    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> systemTags;

    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Output<Optional<Map<String,Object>>> systemTags() {
        return Codegen.optional(this.systemTags);
    }
    /**
     * The Kafka (e.g. Confluent) Schema Registry technology type.
     * 
     */
    @Export(name="technologyType", refs={String.class}, tree="[0]")
    private Output<String> technologyType;

    /**
     * @return The Kafka (e.g. Confluent) Schema Registry technology type.
     * 
     */
    public Output<String> technologyType() {
        return this.technologyType;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
     * 
     */
    @Export(name="tenancyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tenancyId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related Oracle Cloud Infrastructure tenancy.
     * 
     */
    public Output<Optional<String>> tenancyId() {
        return Codegen.optional(this.tenancyId);
    }
    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeCreated;

    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Output<Optional<String>> timeCreated() {
        return Codegen.optional(this.timeCreated);
    }
    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeUpdated;

    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Output<Optional<String>> timeUpdated() {
        return Codegen.optional(this.timeUpdated);
    }
    /**
     * (Updatable) The base64 encoded content of the TrustStore file.
     * 
     */
    @Export(name="trustStore", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> trustStore;

    /**
     * @return (Updatable) The base64 encoded content of the TrustStore file.
     * 
     */
    public Output<Optional<String>> trustStore() {
        return Codegen.optional(this.trustStore);
    }
    /**
     * (Updatable) The TrustStore password.
     * 
     */
    @Export(name="trustStorePassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> trustStorePassword;

    /**
     * @return (Updatable) The TrustStore password.
     * 
     */
    public Output<Optional<String>> trustStorePassword() {
        return Codegen.optional(this.trustStorePassword);
    }
    /**
     * (Updatable) Kafka Schema Registry URL. e.g.: &#39;https://server1.us.oracle.com:8081&#39;
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> url;

    /**
     * @return (Updatable) Kafka Schema Registry URL. e.g.: &#39;https://server1.us.oracle.com:8081&#39;
     * 
     */
    public Output<Optional<String>> url() {
        return Codegen.optional(this.url);
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Oracle NoSQL database/ Object Storage. The user must have write access.
     * 
     */
    @Export(name="userId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure user who will access the Oracle NoSQL database/ Object Storage. The user must have write access.
     * 
     */
    public Output<Optional<String>> userId() {
        return Codegen.optional(this.userId);
    }
    /**
     * (Updatable) The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivity requirements defined in it.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> username;

    /**
     * @return (Updatable) The username Oracle GoldenGate uses to connect the associated system of the given technology. This username must already exist and be available by the system/application to be connected to and must conform to the case sensitivity requirements defined in it.
     * 
     */
    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }
    /**
     * (Updatable) Refers to the customer&#39;s vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
     * 
     */
    @Export(name="vaultId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vaultId;

    /**
     * @return (Updatable) Refers to the customer&#39;s vault OCID.  If provided, it references a vault where GoldenGate can manage secrets. Customers must add policies to permit GoldenGate to manage secrets contained within this vault.
     * 
     */
    public Output<Optional<String>> vaultId() {
        return Codegen.optional(this.vaultId);
    }
    /**
     * (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database.  This attribute is expected to be base64 encoded.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="wallet", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> wallet;

    /**
     * @return (Updatable) The wallet contents Oracle GoldenGate uses to make connections to a database.  This attribute is expected to be base64 encoded.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Optional<String>> wallet() {
        return Codegen.optional(this.wallet);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Connection(String name) {
        this(name, ConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Connection(String name, ConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Connection(String name, ConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:GoldenGate/connection:Connection", name, args == null ? ConnectionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Connection(String name, Output<String> id, @Nullable ConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:GoldenGate/connection:Connection", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "keyStorePassword",
                "password",
                "privateKeyFile",
                "privateKeyPassphrase",
                "sslKeyPassword",
                "trustStorePassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Connection get(String name, Output<String> id, @Nullable ConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Connection(name, id, state, options);
    }
}
