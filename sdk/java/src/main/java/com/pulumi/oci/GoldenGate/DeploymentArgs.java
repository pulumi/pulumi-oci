// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.inputs.DeploymentBackupScheduleArgs;
import com.pulumi.oci.GoldenGate.inputs.DeploymentLockArgs;
import com.pulumi.oci.GoldenGate.inputs.DeploymentMaintenanceConfigurationArgs;
import com.pulumi.oci.GoldenGate.inputs.DeploymentMaintenanceWindowArgs;
import com.pulumi.oci.GoldenGate.inputs.DeploymentOggDataArgs;
import com.pulumi.oci.GoldenGate.inputs.DeploymentPlacementArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentArgs Empty = new DeploymentArgs();

    /**
     * The availability domain of a placement.
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable Output<String> availabilityDomain;

    /**
     * @return The availability domain of a placement.
     * 
     */
    public Optional<Output<String>> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * (Updatable) Defines the backup schedule details for create operation.
     * 
     */
    @Import(name="backupSchedule")
    private @Nullable Output<DeploymentBackupScheduleArgs> backupSchedule;

    /**
     * @return (Updatable) Defines the backup schedule details for create operation.
     * 
     */
    public Optional<Output<DeploymentBackupScheduleArgs>> backupSchedule() {
        return Optional.ofNullable(this.backupSchedule);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    @Import(name="cpuCoreCount")
    private @Nullable Output<Integer> cpuCoreCount;

    /**
     * @return (Updatable) The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    public Optional<Output<Integer>> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }

    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    @Import(name="deploymentBackupId")
    private @Nullable Output<String> deploymentBackupId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    public Optional<Output<String>> deploymentBackupId() {
        return Optional.ofNullable(this.deploymentBackupId);
    }

    /**
     * The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
     * 
     */
    @Import(name="deploymentType")
    private @Nullable Output<String> deploymentType;

    /**
     * @return The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
     * 
     */
    public Optional<Output<String>> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }

    /**
     * (Updatable) Metadata about this specific object.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Metadata about this specific object.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) An object&#39;s Display Name.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) An object&#39;s Display Name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Specifies whether the deployment is used in a production or development/testing environment.
     * 
     */
    @Import(name="environmentType")
    private @Nullable Output<String> environmentType;

    /**
     * @return (Updatable) Specifies whether the deployment is used in a production or development/testing environment.
     * 
     */
    public Optional<Output<String>> environmentType() {
        return Optional.ofNullable(this.environmentType);
    }

    /**
     * The fault domain of a placement.
     * 
     */
    @Import(name="faultDomain")
    private @Nullable Output<String> faultDomain;

    /**
     * @return The fault domain of a placement.
     * 
     */
    public Optional<Output<String>> faultDomain() {
        return Optional.ofNullable(this.faultDomain);
    }

    /**
     * (Updatable) A three-label Fully Qualified Domain Name (FQDN) for a resource.
     * 
     */
    @Import(name="fqdn")
    private @Nullable Output<String> fqdn;

    /**
     * @return (Updatable) A three-label Fully Qualified Domain Name (FQDN) for a resource.
     * 
     */
    public Optional<Output<String>> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }

    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    @Import(name="isAutoScalingEnabled")
    private @Nullable Output<Boolean> isAutoScalingEnabled;

    /**
     * @return (Updatable) Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    public Optional<Output<Boolean>> isAutoScalingEnabled() {
        return Optional.ofNullable(this.isAutoScalingEnabled);
    }

    @Import(name="isLockOverride")
    private @Nullable Output<Boolean> isLockOverride;

    public Optional<Output<Boolean>> isLockOverride() {
        return Optional.ofNullable(this.isLockOverride);
    }

    /**
     * (Updatable) True if this object is publicly available.
     * 
     */
    @Import(name="isPublic")
    private @Nullable Output<Boolean> isPublic;

    /**
     * @return (Updatable) True if this object is publicly available.
     * 
     */
    public Optional<Output<Boolean>> isPublic() {
        return Optional.ofNullable(this.isPublic);
    }

    /**
     * (Updatable) The Oracle license model that applies to a Deployment.
     * 
     */
    @Import(name="licenseModel")
    private @Nullable Output<String> licenseModel;

    /**
     * @return (Updatable) The Oracle license model that applies to a Deployment.
     * 
     */
    public Optional<Output<String>> licenseModel() {
        return Optional.ofNullable(this.licenseModel);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a public subnet in the customer tenancy. Can be provided only for public deployments. If provided, the loadbalancer will be created in this subnet instead of the service tenancy. For backward compatibility, this is an optional property. It will become mandatory for public deployments after October 1, 2024.
     * 
     */
    @Import(name="loadBalancerSubnetId")
    private @Nullable Output<String> loadBalancerSubnetId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a public subnet in the customer tenancy. Can be provided only for public deployments. If provided, the loadbalancer will be created in this subnet instead of the service tenancy. For backward compatibility, this is an optional property. It will become mandatory for public deployments after October 1, 2024.
     * 
     */
    public Optional<Output<String>> loadBalancerSubnetId() {
        return Optional.ofNullable(this.loadBalancerSubnetId);
    }

    /**
     * Locks associated with this resource.
     * 
     */
    @Import(name="locks")
    private @Nullable Output<List<DeploymentLockArgs>> locks;

    /**
     * @return Locks associated with this resource.
     * 
     */
    public Optional<Output<List<DeploymentLockArgs>>> locks() {
        return Optional.ofNullable(this.locks);
    }

    /**
     * (Updatable) Defines the maintenance configuration for create operation.
     * 
     */
    @Import(name="maintenanceConfiguration")
    private @Nullable Output<DeploymentMaintenanceConfigurationArgs> maintenanceConfiguration;

    /**
     * @return (Updatable) Defines the maintenance configuration for create operation.
     * 
     */
    public Optional<Output<DeploymentMaintenanceConfigurationArgs>> maintenanceConfiguration() {
        return Optional.ofNullable(this.maintenanceConfiguration);
    }

    /**
     * (Updatable) Defines the maintenance window for create operation, when automatic actions can be performed.
     * 
     */
    @Import(name="maintenanceWindow")
    private @Nullable Output<DeploymentMaintenanceWindowArgs> maintenanceWindow;

    /**
     * @return (Updatable) Defines the maintenance window for create operation, when automatic actions can be performed.
     * 
     */
    public Optional<Output<DeploymentMaintenanceWindowArgs>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     * 
     */
    @Import(name="nsgIds")
    private @Nullable Output<List<String>> nsgIds;

    /**
     * @return (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     * 
     */
    public Optional<Output<List<String>>> nsgIds() {
        return Optional.ofNullable(this.nsgIds);
    }

    /**
     * (Updatable) Deployment Data for creating an OggDeployment
     * 
     */
    @Import(name="oggData")
    private @Nullable Output<DeploymentOggDataArgs> oggData;

    /**
     * @return (Updatable) Deployment Data for creating an OggDeployment
     * 
     */
    public Optional<Output<DeploymentOggDataArgs>> oggData() {
        return Optional.ofNullable(this.oggData);
    }

    /**
     * (Updatable) An array of local peers of deployment
     * 
     */
    @Import(name="placements")
    private @Nullable Output<List<DeploymentPlacementArgs>> placements;

    /**
     * @return (Updatable) An array of local peers of deployment
     * 
     */
    public Optional<Output<List<DeploymentPlacementArgs>>> placements() {
        return Optional.ofNullable(this.placements);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    @Import(name="sourceDeploymentId")
    private @Nullable Output<String> sourceDeploymentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public Optional<Output<String>> sourceDeploymentId() {
        return Optional.ofNullable(this.sourceDeploymentId);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet of the deployment&#39;s private endpoint. The subnet must be a private subnet. For backward compatibility, public subnets are allowed until May 31 2025, after which the private subnet will be enforced.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet of the deployment&#39;s private endpoint. The subnet must be a private subnet. For backward compatibility, public subnets are allowed until May 31 2025, after which the private subnet will be enforced.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private DeploymentArgs() {}

    private DeploymentArgs(DeploymentArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.backupSchedule = $.backupSchedule;
        this.compartmentId = $.compartmentId;
        this.cpuCoreCount = $.cpuCoreCount;
        this.definedTags = $.definedTags;
        this.deploymentBackupId = $.deploymentBackupId;
        this.deploymentType = $.deploymentType;
        this.description = $.description;
        this.displayName = $.displayName;
        this.environmentType = $.environmentType;
        this.faultDomain = $.faultDomain;
        this.fqdn = $.fqdn;
        this.freeformTags = $.freeformTags;
        this.isAutoScalingEnabled = $.isAutoScalingEnabled;
        this.isLockOverride = $.isLockOverride;
        this.isPublic = $.isPublic;
        this.licenseModel = $.licenseModel;
        this.loadBalancerSubnetId = $.loadBalancerSubnetId;
        this.locks = $.locks;
        this.maintenanceConfiguration = $.maintenanceConfiguration;
        this.maintenanceWindow = $.maintenanceWindow;
        this.nsgIds = $.nsgIds;
        this.oggData = $.oggData;
        this.placements = $.placements;
        this.sourceDeploymentId = $.sourceDeploymentId;
        this.state = $.state;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentArgs $;

        public Builder() {
            $ = new DeploymentArgs();
        }

        public Builder(DeploymentArgs defaults) {
            $ = new DeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain The availability domain of a placement.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain The availability domain of a placement.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param backupSchedule (Updatable) Defines the backup schedule details for create operation.
         * 
         * @return builder
         * 
         */
        public Builder backupSchedule(@Nullable Output<DeploymentBackupScheduleArgs> backupSchedule) {
            $.backupSchedule = backupSchedule;
            return this;
        }

        /**
         * @param backupSchedule (Updatable) Defines the backup schedule details for create operation.
         * 
         * @return builder
         * 
         */
        public Builder backupSchedule(DeploymentBackupScheduleArgs backupSchedule) {
            return backupSchedule(Output.of(backupSchedule));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param cpuCoreCount (Updatable) The Minimum number of OCPUs to be made available for this Deployment.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(@Nullable Output<Integer> cpuCoreCount) {
            $.cpuCoreCount = cpuCoreCount;
            return this;
        }

        /**
         * @param cpuCoreCount (Updatable) The Minimum number of OCPUs to be made available for this Deployment.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            return cpuCoreCount(Output.of(cpuCoreCount));
        }

        /**
         * @param definedTags (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param deploymentBackupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
         * 
         * @return builder
         * 
         */
        public Builder deploymentBackupId(@Nullable Output<String> deploymentBackupId) {
            $.deploymentBackupId = deploymentBackupId;
            return this;
        }

        /**
         * @param deploymentBackupId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
         * 
         * @return builder
         * 
         */
        public Builder deploymentBackupId(String deploymentBackupId) {
            return deploymentBackupId(Output.of(deploymentBackupId));
        }

        /**
         * @param deploymentType The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(@Nullable Output<String> deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        /**
         * @param deploymentType The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(String deploymentType) {
            return deploymentType(Output.of(deploymentType));
        }

        /**
         * @param description (Updatable) Metadata about this specific object.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Metadata about this specific object.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) An object&#39;s Display Name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) An object&#39;s Display Name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param environmentType (Updatable) Specifies whether the deployment is used in a production or development/testing environment.
         * 
         * @return builder
         * 
         */
        public Builder environmentType(@Nullable Output<String> environmentType) {
            $.environmentType = environmentType;
            return this;
        }

        /**
         * @param environmentType (Updatable) Specifies whether the deployment is used in a production or development/testing environment.
         * 
         * @return builder
         * 
         */
        public Builder environmentType(String environmentType) {
            return environmentType(Output.of(environmentType));
        }

        /**
         * @param faultDomain The fault domain of a placement.
         * 
         * @return builder
         * 
         */
        public Builder faultDomain(@Nullable Output<String> faultDomain) {
            $.faultDomain = faultDomain;
            return this;
        }

        /**
         * @param faultDomain The fault domain of a placement.
         * 
         * @return builder
         * 
         */
        public Builder faultDomain(String faultDomain) {
            return faultDomain(Output.of(faultDomain));
        }

        /**
         * @param fqdn (Updatable) A three-label Fully Qualified Domain Name (FQDN) for a resource.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(@Nullable Output<String> fqdn) {
            $.fqdn = fqdn;
            return this;
        }

        /**
         * @param fqdn (Updatable) A three-label Fully Qualified Domain Name (FQDN) for a resource.
         * 
         * @return builder
         * 
         */
        public Builder fqdn(String fqdn) {
            return fqdn(Output.of(fqdn));
        }

        /**
         * @param freeformTags (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isAutoScalingEnabled (Updatable) Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
         * 
         * @return builder
         * 
         */
        public Builder isAutoScalingEnabled(@Nullable Output<Boolean> isAutoScalingEnabled) {
            $.isAutoScalingEnabled = isAutoScalingEnabled;
            return this;
        }

        /**
         * @param isAutoScalingEnabled (Updatable) Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
         * 
         * @return builder
         * 
         */
        public Builder isAutoScalingEnabled(Boolean isAutoScalingEnabled) {
            return isAutoScalingEnabled(Output.of(isAutoScalingEnabled));
        }

        public Builder isLockOverride(@Nullable Output<Boolean> isLockOverride) {
            $.isLockOverride = isLockOverride;
            return this;
        }

        public Builder isLockOverride(Boolean isLockOverride) {
            return isLockOverride(Output.of(isLockOverride));
        }

        /**
         * @param isPublic (Updatable) True if this object is publicly available.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(@Nullable Output<Boolean> isPublic) {
            $.isPublic = isPublic;
            return this;
        }

        /**
         * @param isPublic (Updatable) True if this object is publicly available.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(Boolean isPublic) {
            return isPublic(Output.of(isPublic));
        }

        /**
         * @param licenseModel (Updatable) The Oracle license model that applies to a Deployment.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(@Nullable Output<String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        /**
         * @param licenseModel (Updatable) The Oracle license model that applies to a Deployment.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param loadBalancerSubnetId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a public subnet in the customer tenancy. Can be provided only for public deployments. If provided, the loadbalancer will be created in this subnet instead of the service tenancy. For backward compatibility, this is an optional property. It will become mandatory for public deployments after October 1, 2024.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerSubnetId(@Nullable Output<String> loadBalancerSubnetId) {
            $.loadBalancerSubnetId = loadBalancerSubnetId;
            return this;
        }

        /**
         * @param loadBalancerSubnetId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a public subnet in the customer tenancy. Can be provided only for public deployments. If provided, the loadbalancer will be created in this subnet instead of the service tenancy. For backward compatibility, this is an optional property. It will become mandatory for public deployments after October 1, 2024.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerSubnetId(String loadBalancerSubnetId) {
            return loadBalancerSubnetId(Output.of(loadBalancerSubnetId));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(@Nullable Output<List<DeploymentLockArgs>> locks) {
            $.locks = locks;
            return this;
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(List<DeploymentLockArgs> locks) {
            return locks(Output.of(locks));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(DeploymentLockArgs... locks) {
            return locks(List.of(locks));
        }

        /**
         * @param maintenanceConfiguration (Updatable) Defines the maintenance configuration for create operation.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceConfiguration(@Nullable Output<DeploymentMaintenanceConfigurationArgs> maintenanceConfiguration) {
            $.maintenanceConfiguration = maintenanceConfiguration;
            return this;
        }

        /**
         * @param maintenanceConfiguration (Updatable) Defines the maintenance configuration for create operation.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceConfiguration(DeploymentMaintenanceConfigurationArgs maintenanceConfiguration) {
            return maintenanceConfiguration(Output.of(maintenanceConfiguration));
        }

        /**
         * @param maintenanceWindow (Updatable) Defines the maintenance window for create operation, when automatic actions can be performed.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(@Nullable Output<DeploymentMaintenanceWindowArgs> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        /**
         * @param maintenanceWindow (Updatable) Defines the maintenance window for create operation, when automatic actions can be performed.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(DeploymentMaintenanceWindowArgs maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        /**
         * @param nsgIds (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(@Nullable Output<List<String>> nsgIds) {
            $.nsgIds = nsgIds;
            return this;
        }

        /**
         * @param nsgIds (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(List<String> nsgIds) {
            return nsgIds(Output.of(nsgIds));
        }

        /**
         * @param nsgIds (Updatable) An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }

        /**
         * @param oggData (Updatable) Deployment Data for creating an OggDeployment
         * 
         * @return builder
         * 
         */
        public Builder oggData(@Nullable Output<DeploymentOggDataArgs> oggData) {
            $.oggData = oggData;
            return this;
        }

        /**
         * @param oggData (Updatable) Deployment Data for creating an OggDeployment
         * 
         * @return builder
         * 
         */
        public Builder oggData(DeploymentOggDataArgs oggData) {
            return oggData(Output.of(oggData));
        }

        /**
         * @param placements (Updatable) An array of local peers of deployment
         * 
         * @return builder
         * 
         */
        public Builder placements(@Nullable Output<List<DeploymentPlacementArgs>> placements) {
            $.placements = placements;
            return this;
        }

        /**
         * @param placements (Updatable) An array of local peers of deployment
         * 
         * @return builder
         * 
         */
        public Builder placements(List<DeploymentPlacementArgs> placements) {
            return placements(Output.of(placements));
        }

        /**
         * @param placements (Updatable) An array of local peers of deployment
         * 
         * @return builder
         * 
         */
        public Builder placements(DeploymentPlacementArgs... placements) {
            return placements(List.of(placements));
        }

        /**
         * @param sourceDeploymentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder sourceDeploymentId(@Nullable Output<String> sourceDeploymentId) {
            $.sourceDeploymentId = sourceDeploymentId;
            return this;
        }

        /**
         * @param sourceDeploymentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder sourceDeploymentId(String sourceDeploymentId) {
            return sourceDeploymentId(Output.of(sourceDeploymentId));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param subnetId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet of the deployment&#39;s private endpoint. The subnet must be a private subnet. For backward compatibility, public subnets are allowed until May 31 2025, after which the private subnet will be enforced.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet of the deployment&#39;s private endpoint. The subnet must be a private subnet. For backward compatibility, public subnets are allowed until May 31 2025, after which the private subnet will be enforced.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public DeploymentArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("DeploymentArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("DeploymentArgs", "displayName");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("DeploymentArgs", "subnetId");
            }
            return $;
        }
    }

}
