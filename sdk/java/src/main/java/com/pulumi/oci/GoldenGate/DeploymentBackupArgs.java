// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.inputs.DeploymentBackupLockArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentBackupArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentBackupArgs Empty = new DeploymentBackupArgs();

    /**
     * Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    @Import(name="deploymentId", required=true)
    private Output<String> deploymentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public Output<String> deploymentId() {
        return this.deploymentId;
    }

    /**
     * An object&#39;s Display Name.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return An object&#39;s Display Name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    @Import(name="isLockOverride")
    private @Nullable Output<Boolean> isLockOverride;

    public Optional<Output<Boolean>> isLockOverride() {
        return Optional.ofNullable(this.isLockOverride);
    }

    /**
     * Parameter to allow users to create backup without trails
     * 
     */
    @Import(name="isMetadataOnly")
    private @Nullable Output<Boolean> isMetadataOnly;

    /**
     * @return Parameter to allow users to create backup without trails
     * 
     */
    public Optional<Output<Boolean>> isMetadataOnly() {
        return Optional.ofNullable(this.isMetadataOnly);
    }

    /**
     * Locks associated with this resource.
     * 
     */
    @Import(name="locks")
    private @Nullable Output<List<DeploymentBackupLockArgs>> locks;

    /**
     * @return Locks associated with this resource.
     * 
     */
    public Optional<Output<List<DeploymentBackupLockArgs>>> locks() {
        return Optional.ofNullable(this.locks);
    }

    /**
     * Name of namespace that serves as a container for all of your buckets
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return Name of namespace that serves as a container for all of your buckets
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * Name of the object to be uploaded to object storage
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="object", required=true)
    private Output<String> object;

    /**
     * @return Name of the object to be uploaded to object storage
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> object() {
        return this.object;
    }

    private DeploymentBackupArgs() {}

    private DeploymentBackupArgs(DeploymentBackupArgs $) {
        this.bucket = $.bucket;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.deploymentId = $.deploymentId;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isLockOverride = $.isLockOverride;
        this.isMetadataOnly = $.isMetadataOnly;
        this.locks = $.locks;
        this.namespace = $.namespace;
        this.object = $.object;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentBackupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentBackupArgs $;

        public Builder() {
            $ = new DeploymentBackupArgs();
        }

        public Builder(DeploymentBackupArgs defaults) {
            $ = new DeploymentBackupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Name of the bucket where the object is to be uploaded in the object storage
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Name of the bucket where the object is to be uploaded in the object storage
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param deploymentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder deploymentId(Output<String> deploymentId) {
            $.deploymentId = deploymentId;
            return this;
        }

        /**
         * @param deploymentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder deploymentId(String deploymentId) {
            return deploymentId(Output.of(deploymentId));
        }

        /**
         * @param displayName An object&#39;s Display Name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName An object&#39;s Display Name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        public Builder isLockOverride(@Nullable Output<Boolean> isLockOverride) {
            $.isLockOverride = isLockOverride;
            return this;
        }

        public Builder isLockOverride(Boolean isLockOverride) {
            return isLockOverride(Output.of(isLockOverride));
        }

        /**
         * @param isMetadataOnly Parameter to allow users to create backup without trails
         * 
         * @return builder
         * 
         */
        public Builder isMetadataOnly(@Nullable Output<Boolean> isMetadataOnly) {
            $.isMetadataOnly = isMetadataOnly;
            return this;
        }

        /**
         * @param isMetadataOnly Parameter to allow users to create backup without trails
         * 
         * @return builder
         * 
         */
        public Builder isMetadataOnly(Boolean isMetadataOnly) {
            return isMetadataOnly(Output.of(isMetadataOnly));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(@Nullable Output<List<DeploymentBackupLockArgs>> locks) {
            $.locks = locks;
            return this;
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(List<DeploymentBackupLockArgs> locks) {
            return locks(Output.of(locks));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(DeploymentBackupLockArgs... locks) {
            return locks(List.of(locks));
        }

        /**
         * @param namespace Name of namespace that serves as a container for all of your buckets
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace Name of namespace that serves as a container for all of your buckets
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param object Name of the object to be uploaded to object storage
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder object(Output<String> object) {
            $.object = object;
            return this;
        }

        /**
         * @param object Name of the object to be uploaded to object storage
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder object(String object) {
            return object(Output.of(object));
        }

        public DeploymentBackupArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupArgs", "bucket");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupArgs", "compartmentId");
            }
            if ($.deploymentId == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupArgs", "deploymentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupArgs", "displayName");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupArgs", "namespace");
            }
            if ($.object == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupArgs", "object");
            }
            return $;
        }
    }

}
