// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.inputs.PipelineLockArgs;
import com.pulumi.oci.GoldenGate.inputs.PipelineProcessOptionsArgs;
import com.pulumi.oci.GoldenGate.inputs.PipelineSourceConnectionDetailsArgs;
import com.pulumi.oci.GoldenGate.inputs.PipelineTargetConnectionDetailsArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineArgs Empty = new PipelineArgs();

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Metadata about this specific object.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Metadata about this specific object.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) An object&#39;s Display Name.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) An object&#39;s Display Name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The Oracle license model that applies to a Deployment.
     * 
     */
    @Import(name="licenseModel", required=true)
    private Output<String> licenseModel;

    /**
     * @return (Updatable) The Oracle license model that applies to a Deployment.
     * 
     */
    public Output<String> licenseModel() {
        return this.licenseModel;
    }

    /**
     * Locks associated with this resource.
     * 
     */
    @Import(name="locks")
    private @Nullable Output<List<PipelineLockArgs>> locks;

    /**
     * @return Locks associated with this resource.
     * 
     */
    public Optional<Output<List<PipelineLockArgs>>> locks() {
        return Optional.ofNullable(this.locks);
    }

    /**
     * (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
     * 
     */
    @Import(name="processOptions")
    private @Nullable Output<PipelineProcessOptionsArgs> processOptions;

    /**
     * @return (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
     * 
     */
    public Optional<Output<PipelineProcessOptionsArgs>> processOptions() {
        return Optional.ofNullable(this.processOptions);
    }

    /**
     * (Updatable) The type of the recipe
     * 
     */
    @Import(name="recipeType", required=true)
    private Output<String> recipeType;

    /**
     * @return (Updatable) The type of the recipe
     * 
     */
    public Output<String> recipeType() {
        return this.recipeType;
    }

    /**
     * The source connection details for creating a pipeline.
     * 
     */
    @Import(name="sourceConnectionDetails", required=true)
    private Output<PipelineSourceConnectionDetailsArgs> sourceConnectionDetails;

    /**
     * @return The source connection details for creating a pipeline.
     * 
     */
    public Output<PipelineSourceConnectionDetailsArgs> sourceConnectionDetails() {
        return this.sourceConnectionDetails;
    }

    /**
     * The target connection details for creating a pipeline.
     * 
     */
    @Import(name="targetConnectionDetails", required=true)
    private Output<PipelineTargetConnectionDetailsArgs> targetConnectionDetails;

    /**
     * @return The target connection details for creating a pipeline.
     * 
     */
    public Output<PipelineTargetConnectionDetailsArgs> targetConnectionDetails() {
        return this.targetConnectionDetails;
    }

    private PipelineArgs() {}

    private PipelineArgs(PipelineArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.licenseModel = $.licenseModel;
        this.locks = $.locks;
        this.processOptions = $.processOptions;
        this.recipeType = $.recipeType;
        this.sourceConnectionDetails = $.sourceConnectionDetails;
        this.targetConnectionDetails = $.targetConnectionDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineArgs $;

        public Builder() {
            $ = new PipelineArgs();
        }

        public Builder(PipelineArgs defaults) {
            $ = new PipelineArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Metadata about this specific object.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Metadata about this specific object.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) An object&#39;s Display Name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) An object&#39;s Display Name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param licenseModel (Updatable) The Oracle license model that applies to a Deployment.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(Output<String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        /**
         * @param licenseModel (Updatable) The Oracle license model that applies to a Deployment.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(@Nullable Output<List<PipelineLockArgs>> locks) {
            $.locks = locks;
            return this;
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(List<PipelineLockArgs> locks) {
            return locks(Output.of(locks));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(PipelineLockArgs... locks) {
            return locks(List.of(locks));
        }

        /**
         * @param processOptions (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
         * 
         * @return builder
         * 
         */
        public Builder processOptions(@Nullable Output<PipelineProcessOptionsArgs> processOptions) {
            $.processOptions = processOptions;
            return this;
        }

        /**
         * @param processOptions (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
         * 
         * @return builder
         * 
         */
        public Builder processOptions(PipelineProcessOptionsArgs processOptions) {
            return processOptions(Output.of(processOptions));
        }

        /**
         * @param recipeType (Updatable) The type of the recipe
         * 
         * @return builder
         * 
         */
        public Builder recipeType(Output<String> recipeType) {
            $.recipeType = recipeType;
            return this;
        }

        /**
         * @param recipeType (Updatable) The type of the recipe
         * 
         * @return builder
         * 
         */
        public Builder recipeType(String recipeType) {
            return recipeType(Output.of(recipeType));
        }

        /**
         * @param sourceConnectionDetails The source connection details for creating a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder sourceConnectionDetails(Output<PipelineSourceConnectionDetailsArgs> sourceConnectionDetails) {
            $.sourceConnectionDetails = sourceConnectionDetails;
            return this;
        }

        /**
         * @param sourceConnectionDetails The source connection details for creating a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder sourceConnectionDetails(PipelineSourceConnectionDetailsArgs sourceConnectionDetails) {
            return sourceConnectionDetails(Output.of(sourceConnectionDetails));
        }

        /**
         * @param targetConnectionDetails The target connection details for creating a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder targetConnectionDetails(Output<PipelineTargetConnectionDetailsArgs> targetConnectionDetails) {
            $.targetConnectionDetails = targetConnectionDetails;
            return this;
        }

        /**
         * @param targetConnectionDetails The target connection details for creating a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder targetConnectionDetails(PipelineTargetConnectionDetailsArgs targetConnectionDetails) {
            return targetConnectionDetails(Output.of(targetConnectionDetails));
        }

        public PipelineArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("PipelineArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("PipelineArgs", "displayName");
            }
            if ($.licenseModel == null) {
                throw new MissingRequiredPropertyException("PipelineArgs", "licenseModel");
            }
            if ($.recipeType == null) {
                throw new MissingRequiredPropertyException("PipelineArgs", "recipeType");
            }
            if ($.sourceConnectionDetails == null) {
                throw new MissingRequiredPropertyException("PipelineArgs", "sourceConnectionDetails");
            }
            if ($.targetConnectionDetails == null) {
                throw new MissingRequiredPropertyException("PipelineArgs", "targetConnectionDetails");
            }
            return $;
        }
    }

}
