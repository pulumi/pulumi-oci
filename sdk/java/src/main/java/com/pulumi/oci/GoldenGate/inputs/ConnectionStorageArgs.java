// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionStorageArgs Empty = new ConnectionStorageArgs();

    /**
     * (Updatable) Access key ID to access the Amazon S3 bucket.
     * 
     */
    @Import(name="accessKeyId")
    private @Nullable Output<String> accessKeyId;

    /**
     * @return (Updatable) Access key ID to access the Amazon S3 bucket.
     * 
     */
    public Optional<Output<String>> accessKeyId() {
        return Optional.ofNullable(this.accessKeyId);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the account key is stored.
     * 
     */
    @Import(name="accountKeySecretId")
    private @Nullable Output<String> accountKeySecretId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the account key is stored.
     * 
     */
    public Optional<Output<String>> accountKeySecretId() {
        return Optional.ofNullable(this.accountKeySecretId);
    }

    /**
     * (Updatable) Sets the Azure storage account name.
     * 
     */
    @Import(name="accountName")
    private @Nullable Output<String> accountName;

    /**
     * @return (Updatable) Sets the Azure storage account name.
     * 
     */
    public Optional<Output<String>> accountName() {
        return Optional.ofNullable(this.accountName);
    }

    /**
     * (Updatable) Google Cloud Storage bucket where Iceberg stores metadata and data files.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return (Updatable) Google Cloud Storage bucket where Iceberg stores metadata and data files.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * (Updatable) The Azure Blob Storage container where Iceberg tables are stored.
     * 
     */
    @Import(name="container")
    private @Nullable Output<String> container;

    /**
     * @return (Updatable) The Azure Blob Storage container where Iceberg tables are stored.
     * 
     */
    public Optional<Output<String>> container() {
        return Optional.ofNullable(this.container);
    }

    /**
     * (Updatable) The Azure Blob Storage endpoint where Iceberg data is stored. e.g.: &#39;https://my-azure-storage-account.blob.core.windows.net&#39;
     * 
     */
    @Import(name="endpoint")
    private @Nullable Output<String> endpoint;

    /**
     * @return (Updatable) The Azure Blob Storage endpoint where Iceberg data is stored. e.g.: &#39;https://my-azure-storage-account.blob.core.windows.net&#39;
     * 
     */
    public Optional<Output<String>> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * (Updatable) The Google Cloud Project where the bucket exists.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return (Updatable) The Google Cloud Project where the bucket exists.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * (Updatable) The AMAZON region where the S3 bucket is hosted. e.g.: &#39;us-east-2&#39;
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return (Updatable) The AMAZON region where the S3 bucket is hosted. e.g.: &#39;us-east-2&#39;
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * (Updatable) The scheme of the storage.
     * 
     */
    @Import(name="schemeType")
    private @Nullable Output<String> schemeType;

    /**
     * @return (Updatable) The scheme of the storage.
     * 
     */
    public Optional<Output<String>> schemeType() {
        return Optional.ofNullable(this.schemeType);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the Secret Access Key is stored.
     * 
     */
    @Import(name="secretAccessKeySecretId")
    private @Nullable Output<String> secretAccessKeySecretId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the Secret Access Key is stored.
     * 
     */
    public Optional<Output<String>> secretAccessKeySecretId() {
        return Optional.ofNullable(this.secretAccessKeySecretId);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the service account key file is stored, which contains the credentials required to use Google Cloud Storage.
     * 
     */
    @Import(name="serviceAccountKeyFileSecretId")
    private @Nullable Output<String> serviceAccountKeyFileSecretId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the service account key file is stored, which contains the credentials required to use Google Cloud Storage.
     * 
     */
    public Optional<Output<String>> serviceAccountKeyFileSecretId() {
        return Optional.ofNullable(this.serviceAccountKeyFileSecretId);
    }

    /**
     * (Updatable) The storage type used in the Iceberg connection.
     * 
     */
    @Import(name="storageType", required=true)
    private Output<String> storageType;

    /**
     * @return (Updatable) The storage type used in the Iceberg connection.
     * 
     */
    public Output<String> storageType() {
        return this.storageType;
    }

    private ConnectionStorageArgs() {}

    private ConnectionStorageArgs(ConnectionStorageArgs $) {
        this.accessKeyId = $.accessKeyId;
        this.accountKeySecretId = $.accountKeySecretId;
        this.accountName = $.accountName;
        this.bucket = $.bucket;
        this.container = $.container;
        this.endpoint = $.endpoint;
        this.projectId = $.projectId;
        this.region = $.region;
        this.schemeType = $.schemeType;
        this.secretAccessKeySecretId = $.secretAccessKeySecretId;
        this.serviceAccountKeyFileSecretId = $.serviceAccountKeyFileSecretId;
        this.storageType = $.storageType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionStorageArgs $;

        public Builder() {
            $ = new ConnectionStorageArgs();
        }

        public Builder(ConnectionStorageArgs defaults) {
            $ = new ConnectionStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKeyId (Updatable) Access key ID to access the Amazon S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(@Nullable Output<String> accessKeyId) {
            $.accessKeyId = accessKeyId;
            return this;
        }

        /**
         * @param accessKeyId (Updatable) Access key ID to access the Amazon S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder accessKeyId(String accessKeyId) {
            return accessKeyId(Output.of(accessKeyId));
        }

        /**
         * @param accountKeySecretId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the account key is stored.
         * 
         * @return builder
         * 
         */
        public Builder accountKeySecretId(@Nullable Output<String> accountKeySecretId) {
            $.accountKeySecretId = accountKeySecretId;
            return this;
        }

        /**
         * @param accountKeySecretId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the account key is stored.
         * 
         * @return builder
         * 
         */
        public Builder accountKeySecretId(String accountKeySecretId) {
            return accountKeySecretId(Output.of(accountKeySecretId));
        }

        /**
         * @param accountName (Updatable) Sets the Azure storage account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(@Nullable Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName (Updatable) Sets the Azure storage account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param bucket (Updatable) Google Cloud Storage bucket where Iceberg stores metadata and data files.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket (Updatable) Google Cloud Storage bucket where Iceberg stores metadata and data files.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param container (Updatable) The Azure Blob Storage container where Iceberg tables are stored.
         * 
         * @return builder
         * 
         */
        public Builder container(@Nullable Output<String> container) {
            $.container = container;
            return this;
        }

        /**
         * @param container (Updatable) The Azure Blob Storage container where Iceberg tables are stored.
         * 
         * @return builder
         * 
         */
        public Builder container(String container) {
            return container(Output.of(container));
        }

        /**
         * @param endpoint (Updatable) The Azure Blob Storage endpoint where Iceberg data is stored. e.g.: &#39;https://my-azure-storage-account.blob.core.windows.net&#39;
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable Output<String> endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param endpoint (Updatable) The Azure Blob Storage endpoint where Iceberg data is stored. e.g.: &#39;https://my-azure-storage-account.blob.core.windows.net&#39;
         * 
         * @return builder
         * 
         */
        public Builder endpoint(String endpoint) {
            return endpoint(Output.of(endpoint));
        }

        /**
         * @param projectId (Updatable) The Google Cloud Project where the bucket exists.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId (Updatable) The Google Cloud Project where the bucket exists.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region (Updatable) The AMAZON region where the S3 bucket is hosted. e.g.: &#39;us-east-2&#39;
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region (Updatable) The AMAZON region where the S3 bucket is hosted. e.g.: &#39;us-east-2&#39;
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param schemeType (Updatable) The scheme of the storage.
         * 
         * @return builder
         * 
         */
        public Builder schemeType(@Nullable Output<String> schemeType) {
            $.schemeType = schemeType;
            return this;
        }

        /**
         * @param schemeType (Updatable) The scheme of the storage.
         * 
         * @return builder
         * 
         */
        public Builder schemeType(String schemeType) {
            return schemeType(Output.of(schemeType));
        }

        /**
         * @param secretAccessKeySecretId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the Secret Access Key is stored.
         * 
         * @return builder
         * 
         */
        public Builder secretAccessKeySecretId(@Nullable Output<String> secretAccessKeySecretId) {
            $.secretAccessKeySecretId = secretAccessKeySecretId;
            return this;
        }

        /**
         * @param secretAccessKeySecretId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the Secret Access Key is stored.
         * 
         * @return builder
         * 
         */
        public Builder secretAccessKeySecretId(String secretAccessKeySecretId) {
            return secretAccessKeySecretId(Output.of(secretAccessKeySecretId));
        }

        /**
         * @param serviceAccountKeyFileSecretId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the service account key file is stored, which contains the credentials required to use Google Cloud Storage.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountKeyFileSecretId(@Nullable Output<String> serviceAccountKeyFileSecretId) {
            $.serviceAccountKeyFileSecretId = serviceAccountKeyFileSecretId;
            return this;
        }

        /**
         * @param serviceAccountKeyFileSecretId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Secret where the content of the service account key file is stored, which contains the credentials required to use Google Cloud Storage.
         * 
         * @return builder
         * 
         */
        public Builder serviceAccountKeyFileSecretId(String serviceAccountKeyFileSecretId) {
            return serviceAccountKeyFileSecretId(Output.of(serviceAccountKeyFileSecretId));
        }

        /**
         * @param storageType (Updatable) The storage type used in the Iceberg connection.
         * 
         * @return builder
         * 
         */
        public Builder storageType(Output<String> storageType) {
            $.storageType = storageType;
            return this;
        }

        /**
         * @param storageType (Updatable) The storage type used in the Iceberg connection.
         * 
         * @return builder
         * 
         */
        public Builder storageType(String storageType) {
            return storageType(Output.of(storageType));
        }

        public ConnectionStorageArgs build() {
            if ($.storageType == null) {
                throw new MissingRequiredPropertyException("ConnectionStorageArgs", "storageType");
            }
            return $;
        }
    }

}
