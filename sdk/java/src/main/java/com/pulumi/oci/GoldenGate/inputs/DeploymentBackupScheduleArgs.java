// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class DeploymentBackupScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentBackupScheduleArgs Empty = new DeploymentBackupScheduleArgs();

    /**
     * (Updatable) Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return (Updatable) Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) The frequency of the deployment backup schedule. Frequency can be DAILY, WEEKLY or MONTHLY.
     * 
     */
    @Import(name="frequencyBackupScheduled", required=true)
    private Output<String> frequencyBackupScheduled;

    /**
     * @return (Updatable) The frequency of the deployment backup schedule. Frequency can be DAILY, WEEKLY or MONTHLY.
     * 
     */
    public Output<String> frequencyBackupScheduled() {
        return this.frequencyBackupScheduled;
    }

    /**
     * (Updatable) Parameter to allow users to create backup without trails
     * 
     */
    @Import(name="isMetadataOnly", required=true)
    private Output<Boolean> isMetadataOnly;

    /**
     * @return (Updatable) Parameter to allow users to create backup without trails
     * 
     */
    public Output<Boolean> isMetadataOnly() {
        return this.isMetadataOnly;
    }

    /**
     * (Updatable) Name of namespace that serves as a container for all of your buckets
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return (Updatable) Name of namespace that serves as a container for all of your buckets
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * (Updatable) The start timestamp for the deployment backup schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-10-25T18:19:29.600Z`.
     * 
     */
    @Import(name="timeBackupScheduled", required=true)
    private Output<String> timeBackupScheduled;

    /**
     * @return (Updatable) The start timestamp for the deployment backup schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-10-25T18:19:29.600Z`.
     * 
     */
    public Output<String> timeBackupScheduled() {
        return this.timeBackupScheduled;
    }

    private DeploymentBackupScheduleArgs() {}

    private DeploymentBackupScheduleArgs(DeploymentBackupScheduleArgs $) {
        this.bucket = $.bucket;
        this.compartmentId = $.compartmentId;
        this.frequencyBackupScheduled = $.frequencyBackupScheduled;
        this.isMetadataOnly = $.isMetadataOnly;
        this.namespace = $.namespace;
        this.timeBackupScheduled = $.timeBackupScheduled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentBackupScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentBackupScheduleArgs $;

        public Builder() {
            $ = new DeploymentBackupScheduleArgs();
        }

        public Builder(DeploymentBackupScheduleArgs defaults) {
            $ = new DeploymentBackupScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket (Updatable) Name of the bucket where the object is to be uploaded in the object storage
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket (Updatable) Name of the bucket where the object is to be uploaded in the object storage
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param frequencyBackupScheduled (Updatable) The frequency of the deployment backup schedule. Frequency can be DAILY, WEEKLY or MONTHLY.
         * 
         * @return builder
         * 
         */
        public Builder frequencyBackupScheduled(Output<String> frequencyBackupScheduled) {
            $.frequencyBackupScheduled = frequencyBackupScheduled;
            return this;
        }

        /**
         * @param frequencyBackupScheduled (Updatable) The frequency of the deployment backup schedule. Frequency can be DAILY, WEEKLY or MONTHLY.
         * 
         * @return builder
         * 
         */
        public Builder frequencyBackupScheduled(String frequencyBackupScheduled) {
            return frequencyBackupScheduled(Output.of(frequencyBackupScheduled));
        }

        /**
         * @param isMetadataOnly (Updatable) Parameter to allow users to create backup without trails
         * 
         * @return builder
         * 
         */
        public Builder isMetadataOnly(Output<Boolean> isMetadataOnly) {
            $.isMetadataOnly = isMetadataOnly;
            return this;
        }

        /**
         * @param isMetadataOnly (Updatable) Parameter to allow users to create backup without trails
         * 
         * @return builder
         * 
         */
        public Builder isMetadataOnly(Boolean isMetadataOnly) {
            return isMetadataOnly(Output.of(isMetadataOnly));
        }

        /**
         * @param namespace (Updatable) Name of namespace that serves as a container for all of your buckets
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace (Updatable) Name of namespace that serves as a container for all of your buckets
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param timeBackupScheduled (Updatable) The start timestamp for the deployment backup schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-10-25T18:19:29.600Z`.
         * 
         * @return builder
         * 
         */
        public Builder timeBackupScheduled(Output<String> timeBackupScheduled) {
            $.timeBackupScheduled = timeBackupScheduled;
            return this;
        }

        /**
         * @param timeBackupScheduled (Updatable) The start timestamp for the deployment backup schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-10-25T18:19:29.600Z`.
         * 
         * @return builder
         * 
         */
        public Builder timeBackupScheduled(String timeBackupScheduled) {
            return timeBackupScheduled(Output.of(timeBackupScheduled));
        }

        public DeploymentBackupScheduleArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupScheduleArgs", "bucket");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupScheduleArgs", "compartmentId");
            }
            if ($.frequencyBackupScheduled == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupScheduleArgs", "frequencyBackupScheduled");
            }
            if ($.isMetadataOnly == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupScheduleArgs", "isMetadataOnly");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupScheduleArgs", "namespace");
            }
            if ($.timeBackupScheduled == null) {
                throw new MissingRequiredPropertyException("DeploymentBackupScheduleArgs", "timeBackupScheduled");
            }
            return $;
        }
    }

}
