// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.GoldenGate.inputs.GetConnectionAssignmentsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConnectionAssignmentsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectionAssignmentsPlainArgs Empty = new GetConnectionAssignmentsPlainArgs();

    /**
     * The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connection.
     * 
     */
    @Import(name="connectionId")
    private @Nullable String connectionId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connection.
     * 
     */
    public Optional<String> connectionId() {
        return Optional.ofNullable(this.connectionId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment in which to list resources.
     * 
     */
    @Import(name="deploymentId")
    private @Nullable String deploymentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment in which to list resources.
     * 
     */
    public Optional<String> deploymentId() {
        return Optional.ofNullable(this.deploymentId);
    }

    @Import(name="filters")
    private @Nullable List<GetConnectionAssignmentsFilter> filters;

    public Optional<List<GetConnectionAssignmentsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The name of the connection in the assignment (aliasName).
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return The name of the connection in the assignment (aliasName).
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to return only connection assignments having the &#39;lifecycleState&#39; given.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A filter to return only connection assignments having the &#39;lifecycleState&#39; given.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetConnectionAssignmentsPlainArgs() {}

    private GetConnectionAssignmentsPlainArgs(GetConnectionAssignmentsPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.connectionId = $.connectionId;
        this.deploymentId = $.deploymentId;
        this.filters = $.filters;
        this.name = $.name;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectionAssignmentsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectionAssignmentsPlainArgs $;

        public Builder() {
            $ = new GetConnectionAssignmentsPlainArgs();
        }

        public Builder(GetConnectionAssignmentsPlainArgs defaults) {
            $ = new GetConnectionAssignmentsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param connectionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionId(@Nullable String connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        /**
         * @param deploymentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder deploymentId(@Nullable String deploymentId) {
            $.deploymentId = deploymentId;
            return this;
        }

        public Builder filters(@Nullable List<GetConnectionAssignmentsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetConnectionAssignmentsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name The name of the connection in the assignment (aliasName).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param state A filter to return only connection assignments having the &#39;lifecycleState&#39; given.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetConnectionAssignmentsPlainArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
