// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDeploymentCertificateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDeploymentCertificateArgs Empty = new GetDeploymentCertificateArgs();

    /**
     * A unique certificate identifier.
     * 
     */
    @Import(name="certificateKey", required=true)
    private Output<String> certificateKey;

    /**
     * @return A unique certificate identifier.
     * 
     */
    public Output<String> certificateKey() {
        return this.certificateKey;
    }

    /**
     * A unique Deployment identifier.
     * 
     */
    @Import(name="deploymentId", required=true)
    private Output<String> deploymentId;

    /**
     * @return A unique Deployment identifier.
     * 
     */
    public Output<String> deploymentId() {
        return this.deploymentId;
    }

    private GetDeploymentCertificateArgs() {}

    private GetDeploymentCertificateArgs(GetDeploymentCertificateArgs $) {
        this.certificateKey = $.certificateKey;
        this.deploymentId = $.deploymentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDeploymentCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDeploymentCertificateArgs $;

        public Builder() {
            $ = new GetDeploymentCertificateArgs();
        }

        public Builder(GetDeploymentCertificateArgs defaults) {
            $ = new GetDeploymentCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateKey A unique certificate identifier.
         * 
         * @return builder
         * 
         */
        public Builder certificateKey(Output<String> certificateKey) {
            $.certificateKey = certificateKey;
            return this;
        }

        /**
         * @param certificateKey A unique certificate identifier.
         * 
         * @return builder
         * 
         */
        public Builder certificateKey(String certificateKey) {
            return certificateKey(Output.of(certificateKey));
        }

        /**
         * @param deploymentId A unique Deployment identifier.
         * 
         * @return builder
         * 
         */
        public Builder deploymentId(Output<String> deploymentId) {
            $.deploymentId = deploymentId;
            return this;
        }

        /**
         * @param deploymentId A unique Deployment identifier.
         * 
         * @return builder
         * 
         */
        public Builder deploymentId(String deploymentId) {
            return deploymentId(Output.of(deploymentId));
        }

        public GetDeploymentCertificateArgs build() {
            if ($.certificateKey == null) {
                throw new MissingRequiredPropertyException("GetDeploymentCertificateArgs", "certificateKey");
            }
            if ($.deploymentId == null) {
                throw new MissingRequiredPropertyException("GetDeploymentCertificateArgs", "deploymentId");
            }
            return $;
        }
    }

}
