// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.GoldenGate.inputs.GetDeploymentTypesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDeploymentTypesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDeploymentTypesArgs Empty = new GetDeploymentTypesArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The type of deployment, the value determines the exact &#39;type&#39; of the service executed in the deployment. Default value is DATABASE_ORACLE.
     * 
     */
    @Import(name="deploymentType")
    private @Nullable Output<String> deploymentType;

    /**
     * @return The type of deployment, the value determines the exact &#39;type&#39; of the service executed in the deployment. Default value is DATABASE_ORACLE.
     * 
     */
    public Optional<Output<String>> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }

    /**
     * A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetDeploymentTypesFilterArgs>> filters;

    public Optional<Output<List<GetDeploymentTypesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Allows to query by a specific GoldenGate version.
     * 
     */
    @Import(name="oggVersion")
    private @Nullable Output<String> oggVersion;

    /**
     * @return Allows to query by a specific GoldenGate version.
     * 
     */
    public Optional<Output<String>> oggVersion() {
        return Optional.ofNullable(this.oggVersion);
    }

    private GetDeploymentTypesArgs() {}

    private GetDeploymentTypesArgs(GetDeploymentTypesArgs $) {
        this.compartmentId = $.compartmentId;
        this.deploymentType = $.deploymentType;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.oggVersion = $.oggVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDeploymentTypesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDeploymentTypesArgs $;

        public Builder() {
            $ = new GetDeploymentTypesArgs();
        }

        public Builder(GetDeploymentTypesArgs defaults) {
            $ = new GetDeploymentTypesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param deploymentType The type of deployment, the value determines the exact &#39;type&#39; of the service executed in the deployment. Default value is DATABASE_ORACLE.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(@Nullable Output<String> deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        /**
         * @param deploymentType The type of deployment, the value determines the exact &#39;type&#39; of the service executed in the deployment. Default value is DATABASE_ORACLE.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(String deploymentType) {
            return deploymentType(Output.of(deploymentType));
        }

        /**
         * @param displayName A filter to return only the resources that match the entire &#39;displayName&#39; given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only the resources that match the entire &#39;displayName&#39; given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetDeploymentTypesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetDeploymentTypesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetDeploymentTypesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param oggVersion Allows to query by a specific GoldenGate version.
         * 
         * @return builder
         * 
         */
        public Builder oggVersion(@Nullable Output<String> oggVersion) {
            $.oggVersion = oggVersion;
            return this;
        }

        /**
         * @param oggVersion Allows to query by a specific GoldenGate version.
         * 
         * @return builder
         * 
         */
        public Builder oggVersion(String oggVersion) {
            return oggVersion(Output.of(oggVersion));
        }

        public GetDeploymentTypesArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
