// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.inputs.GetMessagesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMessagesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMessagesArgs Empty = new GetMessagesArgs();

    /**
     * A unique Deployment identifier.
     * 
     */
    @Import(name="deploymentId", required=true)
    private Output<String> deploymentId;

    /**
     * @return A unique Deployment identifier.
     * 
     */
    public Output<String> deploymentId() {
        return this.deploymentId;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetMessagesFilterArgs>> filters;

    public Optional<Output<List<GetMessagesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetMessagesArgs() {}

    private GetMessagesArgs(GetMessagesArgs $) {
        this.deploymentId = $.deploymentId;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMessagesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMessagesArgs $;

        public Builder() {
            $ = new GetMessagesArgs();
        }

        public Builder(GetMessagesArgs defaults) {
            $ = new GetMessagesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentId A unique Deployment identifier.
         * 
         * @return builder
         * 
         */
        public Builder deploymentId(Output<String> deploymentId) {
            $.deploymentId = deploymentId;
            return this;
        }

        /**
         * @param deploymentId A unique Deployment identifier.
         * 
         * @return builder
         * 
         */
        public Builder deploymentId(String deploymentId) {
            return deploymentId(Output.of(deploymentId));
        }

        public Builder filters(@Nullable Output<List<GetMessagesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetMessagesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetMessagesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public GetMessagesArgs build() {
            if ($.deploymentId == null) {
                throw new MissingRequiredPropertyException("GetMessagesArgs", "deploymentId");
            }
            return $;
        }
    }

}
