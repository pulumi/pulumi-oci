// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.inputs.GetMessagesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMessagesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMessagesPlainArgs Empty = new GetMessagesPlainArgs();

    /**
     * A unique Deployment identifier.
     * 
     */
    @Import(name="deploymentId", required=true)
    private String deploymentId;

    /**
     * @return A unique Deployment identifier.
     * 
     */
    public String deploymentId() {
        return this.deploymentId;
    }

    @Import(name="filters")
    private @Nullable List<GetMessagesFilter> filters;

    public Optional<List<GetMessagesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetMessagesPlainArgs() {}

    private GetMessagesPlainArgs(GetMessagesPlainArgs $) {
        this.deploymentId = $.deploymentId;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMessagesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMessagesPlainArgs $;

        public Builder() {
            $ = new GetMessagesPlainArgs();
        }

        public Builder(GetMessagesPlainArgs defaults) {
            $ = new GetMessagesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentId A unique Deployment identifier.
         * 
         * @return builder
         * 
         */
        public Builder deploymentId(String deploymentId) {
            $.deploymentId = deploymentId;
            return this;
        }

        public Builder filters(@Nullable List<GetMessagesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetMessagesFilter... filters) {
            return filters(List.of(filters));
        }

        public GetMessagesPlainArgs build() {
            if ($.deploymentId == null) {
                throw new MissingRequiredPropertyException("GetMessagesPlainArgs", "deploymentId");
            }
            return $;
        }
    }

}
