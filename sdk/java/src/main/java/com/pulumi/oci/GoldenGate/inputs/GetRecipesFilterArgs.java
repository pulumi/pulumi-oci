// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRecipesFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetRecipesFilterArgs Empty = new GetRecipesFilterArgs();

    /**
     * An object&#39;s Display Name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return An object&#39;s Display Name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    @Import(name="regex")
    private @Nullable Output<Boolean> regex;

    public Optional<Output<Boolean>> regex() {
        return Optional.ofNullable(this.regex);
    }

    @Import(name="values", required=true)
    private Output<List<String>> values;

    public Output<List<String>> values() {
        return this.values;
    }

    private GetRecipesFilterArgs() {}

    private GetRecipesFilterArgs(GetRecipesFilterArgs $) {
        this.name = $.name;
        this.regex = $.regex;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRecipesFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRecipesFilterArgs $;

        public Builder() {
            $ = new GetRecipesFilterArgs();
        }

        public Builder(GetRecipesFilterArgs defaults) {
            $ = new GetRecipesFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name An object&#39;s Display Name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name An object&#39;s Display Name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder regex(@Nullable Output<Boolean> regex) {
            $.regex = regex;
            return this;
        }

        public Builder regex(Boolean regex) {
            return regex(Output.of(regex));
        }

        public Builder values(Output<List<String>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        public Builder values(String... values) {
            return values(List.of(values));
        }

        public GetRecipesFilterArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetRecipesFilterArgs", "name");
            }
            if ($.values == null) {
                throw new MissingRequiredPropertyException("GetRecipesFilterArgs", "values");
            }
            return $;
        }
    }

}
