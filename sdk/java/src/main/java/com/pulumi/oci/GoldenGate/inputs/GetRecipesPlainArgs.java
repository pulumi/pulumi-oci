// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.inputs.GetRecipesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRecipesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRecipesPlainArgs Empty = new GetRecipesPlainArgs();

    /**
     * The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetRecipesFilter> filters;

    public Optional<List<GetRecipesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The pipeline&#39;s recipe type. The default value is ZERO_ETL.
     * 
     */
    @Import(name="recipeType")
    private @Nullable String recipeType;

    /**
     * @return The pipeline&#39;s recipe type. The default value is ZERO_ETL.
     * 
     */
    public Optional<String> recipeType() {
        return Optional.ofNullable(this.recipeType);
    }

    private GetRecipesPlainArgs() {}

    private GetRecipesPlainArgs(GetRecipesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.recipeType = $.recipeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRecipesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRecipesPlainArgs $;

        public Builder() {
            $ = new GetRecipesPlainArgs();
        }

        public Builder(GetRecipesPlainArgs defaults) {
            $ = new GetRecipesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayName A filter to return only the resources that match the entire &#39;displayName&#39; given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetRecipesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetRecipesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param recipeType The pipeline&#39;s recipe type. The default value is ZERO_ETL.
         * 
         * @return builder
         * 
         */
        public Builder recipeType(@Nullable String recipeType) {
            $.recipeType = recipeType;
            return this;
        }

        public GetRecipesPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetRecipesPlainArgs", "compartmentId");
            }
            return $;
        }
    }

}
