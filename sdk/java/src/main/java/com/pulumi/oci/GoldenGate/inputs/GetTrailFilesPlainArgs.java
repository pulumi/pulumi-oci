// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.GoldenGate.inputs.GetTrailFilesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTrailFilesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTrailFilesPlainArgs Empty = new GetTrailFilesPlainArgs();

    /**
     * A unique Deployment identifier.
     * 
     */
    @Import(name="deploymentId", required=true)
    private String deploymentId;

    /**
     * @return A unique Deployment identifier.
     * 
     */
    public String deploymentId() {
        return this.deploymentId;
    }

    /**
     * A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetTrailFilesFilter> filters;

    public Optional<List<GetTrailFilesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A Trail File identifier
     * 
     */
    @Import(name="trailFileId", required=true)
    private String trailFileId;

    /**
     * @return A Trail File identifier
     * 
     */
    public String trailFileId() {
        return this.trailFileId;
    }

    private GetTrailFilesPlainArgs() {}

    private GetTrailFilesPlainArgs(GetTrailFilesPlainArgs $) {
        this.deploymentId = $.deploymentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.trailFileId = $.trailFileId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTrailFilesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTrailFilesPlainArgs $;

        public Builder() {
            $ = new GetTrailFilesPlainArgs();
        }

        public Builder(GetTrailFilesPlainArgs defaults) {
            $ = new GetTrailFilesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentId A unique Deployment identifier.
         * 
         * @return builder
         * 
         */
        public Builder deploymentId(String deploymentId) {
            $.deploymentId = deploymentId;
            return this;
        }

        /**
         * @param displayName A filter to return only the resources that match the entire &#39;displayName&#39; given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetTrailFilesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetTrailFilesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param trailFileId A Trail File identifier
         * 
         * @return builder
         * 
         */
        public Builder trailFileId(String trailFileId) {
            $.trailFileId = trailFileId;
            return this;
        }

        public GetTrailFilesPlainArgs build() {
            $.deploymentId = Objects.requireNonNull($.deploymentId, "expected parameter 'deploymentId' to be non-null");
            $.trailFileId = Objects.requireNonNull($.trailFileId, "expected parameter 'trailFileId' to be non-null");
            return $;
        }
    }

}
