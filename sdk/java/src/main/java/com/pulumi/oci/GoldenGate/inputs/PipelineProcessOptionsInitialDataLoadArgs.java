// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineProcessOptionsInitialDataLoadArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineProcessOptionsInitialDataLoadArgs Empty = new PipelineProcessOptionsInitialDataLoadArgs();

    /**
     * (Updatable) Action upon existing tables in target when initial Data Load is set i.e., isInitialLoad=true.
     * 
     */
    @Import(name="actionOnExistingTable")
    private @Nullable Output<String> actionOnExistingTable;

    /**
     * @return (Updatable) Action upon existing tables in target when initial Data Load is set i.e., isInitialLoad=true.
     * 
     */
    public Optional<Output<String>> actionOnExistingTable() {
        return Optional.ofNullable(this.actionOnExistingTable);
    }

    /**
     * (Updatable) If ENABLED, then existing source data is also synchronized to the target when creating or updating the pipeline.
     * 
     */
    @Import(name="isInitialLoad", required=true)
    private Output<String> isInitialLoad;

    /**
     * @return (Updatable) If ENABLED, then existing source data is also synchronized to the target when creating or updating the pipeline.
     * 
     */
    public Output<String> isInitialLoad() {
        return this.isInitialLoad;
    }

    private PipelineProcessOptionsInitialDataLoadArgs() {}

    private PipelineProcessOptionsInitialDataLoadArgs(PipelineProcessOptionsInitialDataLoadArgs $) {
        this.actionOnExistingTable = $.actionOnExistingTable;
        this.isInitialLoad = $.isInitialLoad;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineProcessOptionsInitialDataLoadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineProcessOptionsInitialDataLoadArgs $;

        public Builder() {
            $ = new PipelineProcessOptionsInitialDataLoadArgs();
        }

        public Builder(PipelineProcessOptionsInitialDataLoadArgs defaults) {
            $ = new PipelineProcessOptionsInitialDataLoadArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionOnExistingTable (Updatable) Action upon existing tables in target when initial Data Load is set i.e., isInitialLoad=true.
         * 
         * @return builder
         * 
         */
        public Builder actionOnExistingTable(@Nullable Output<String> actionOnExistingTable) {
            $.actionOnExistingTable = actionOnExistingTable;
            return this;
        }

        /**
         * @param actionOnExistingTable (Updatable) Action upon existing tables in target when initial Data Load is set i.e., isInitialLoad=true.
         * 
         * @return builder
         * 
         */
        public Builder actionOnExistingTable(String actionOnExistingTable) {
            return actionOnExistingTable(Output.of(actionOnExistingTable));
        }

        /**
         * @param isInitialLoad (Updatable) If ENABLED, then existing source data is also synchronized to the target when creating or updating the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder isInitialLoad(Output<String> isInitialLoad) {
            $.isInitialLoad = isInitialLoad;
            return this;
        }

        /**
         * @param isInitialLoad (Updatable) If ENABLED, then existing source data is also synchronized to the target when creating or updating the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder isInitialLoad(String isInitialLoad) {
            return isInitialLoad(Output.of(isInitialLoad));
        }

        public PipelineProcessOptionsInitialDataLoadArgs build() {
            if ($.isInitialLoad == null) {
                throw new MissingRequiredPropertyException("PipelineProcessOptionsInitialDataLoadArgs", "isInitialLoad");
            }
            return $;
        }
    }

}
