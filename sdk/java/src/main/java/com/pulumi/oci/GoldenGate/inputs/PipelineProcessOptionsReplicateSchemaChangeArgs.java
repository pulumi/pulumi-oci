// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineProcessOptionsReplicateSchemaChangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final PipelineProcessOptionsReplicateSchemaChangeArgs Empty = new PipelineProcessOptionsReplicateSchemaChangeArgs();

    /**
     * (Updatable) Action upon DDL Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
     * 
     */
    @Import(name="actionOnDdlError")
    private @Nullable Output<String> actionOnDdlError;

    /**
     * @return (Updatable) Action upon DDL Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
     * 
     */
    public Optional<Output<String>> actionOnDdlError() {
        return Optional.ofNullable(this.actionOnDdlError);
    }

    /**
     * (Updatable) Action upon DML Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
     * 
     */
    @Import(name="actionOnDmlError")
    private @Nullable Output<String> actionOnDmlError;

    /**
     * @return (Updatable) Action upon DML Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
     * 
     */
    public Optional<Output<String>> actionOnDmlError() {
        return Optional.ofNullable(this.actionOnDmlError);
    }

    /**
     * (Updatable) If ENABLED, then addition or removal of schema is also replicated, apart from individual tables and records when creating or updating the pipeline.
     * 
     */
    @Import(name="canReplicateSchemaChange", required=true)
    private Output<String> canReplicateSchemaChange;

    /**
     * @return (Updatable) If ENABLED, then addition or removal of schema is also replicated, apart from individual tables and records when creating or updating the pipeline.
     * 
     */
    public Output<String> canReplicateSchemaChange() {
        return this.canReplicateSchemaChange;
    }

    private PipelineProcessOptionsReplicateSchemaChangeArgs() {}

    private PipelineProcessOptionsReplicateSchemaChangeArgs(PipelineProcessOptionsReplicateSchemaChangeArgs $) {
        this.actionOnDdlError = $.actionOnDdlError;
        this.actionOnDmlError = $.actionOnDmlError;
        this.canReplicateSchemaChange = $.canReplicateSchemaChange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineProcessOptionsReplicateSchemaChangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineProcessOptionsReplicateSchemaChangeArgs $;

        public Builder() {
            $ = new PipelineProcessOptionsReplicateSchemaChangeArgs();
        }

        public Builder(PipelineProcessOptionsReplicateSchemaChangeArgs defaults) {
            $ = new PipelineProcessOptionsReplicateSchemaChangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionOnDdlError (Updatable) Action upon DDL Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
         * 
         * @return builder
         * 
         */
        public Builder actionOnDdlError(@Nullable Output<String> actionOnDdlError) {
            $.actionOnDdlError = actionOnDdlError;
            return this;
        }

        /**
         * @param actionOnDdlError (Updatable) Action upon DDL Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
         * 
         * @return builder
         * 
         */
        public Builder actionOnDdlError(String actionOnDdlError) {
            return actionOnDdlError(Output.of(actionOnDdlError));
        }

        /**
         * @param actionOnDmlError (Updatable) Action upon DML Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
         * 
         * @return builder
         * 
         */
        public Builder actionOnDmlError(@Nullable Output<String> actionOnDmlError) {
            $.actionOnDmlError = actionOnDmlError;
            return this;
        }

        /**
         * @param actionOnDmlError (Updatable) Action upon DML Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
         * 
         * @return builder
         * 
         */
        public Builder actionOnDmlError(String actionOnDmlError) {
            return actionOnDmlError(Output.of(actionOnDmlError));
        }

        /**
         * @param canReplicateSchemaChange (Updatable) If ENABLED, then addition or removal of schema is also replicated, apart from individual tables and records when creating or updating the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder canReplicateSchemaChange(Output<String> canReplicateSchemaChange) {
            $.canReplicateSchemaChange = canReplicateSchemaChange;
            return this;
        }

        /**
         * @param canReplicateSchemaChange (Updatable) If ENABLED, then addition or removal of schema is also replicated, apart from individual tables and records when creating or updating the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder canReplicateSchemaChange(String canReplicateSchemaChange) {
            return canReplicateSchemaChange(Output.of(canReplicateSchemaChange));
        }

        public PipelineProcessOptionsReplicateSchemaChangeArgs build() {
            if ($.canReplicateSchemaChange == null) {
                throw new MissingRequiredPropertyException("PipelineProcessOptionsReplicateSchemaChangeArgs", "canReplicateSchemaChange");
            }
            return $;
        }
    }

}
