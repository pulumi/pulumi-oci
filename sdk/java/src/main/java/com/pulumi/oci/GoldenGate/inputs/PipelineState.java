// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.GoldenGate.inputs.PipelineLockArgs;
import com.pulumi.oci.GoldenGate.inputs.PipelineMappingRuleArgs;
import com.pulumi.oci.GoldenGate.inputs.PipelinePipelineDiagnosticDataArgs;
import com.pulumi.oci.GoldenGate.inputs.PipelineProcessOptionsArgs;
import com.pulumi.oci.GoldenGate.inputs.PipelineSourceConnectionDetailsArgs;
import com.pulumi.oci.GoldenGate.inputs.PipelineTargetConnectionDetailsArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineState extends com.pulumi.resources.ResourceArgs {

    public static final PipelineState Empty = new PipelineState();

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    @Import(name="cpuCoreCount")
    private @Nullable Output<Integer> cpuCoreCount;

    /**
     * @return The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    public Optional<Output<Integer>> cpuCoreCount() {
        return Optional.ofNullable(this.cpuCoreCount);
    }

    /**
     * (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Metadata about this specific object.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Metadata about this specific object.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) An object&#39;s Display Name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) An object&#39;s Display Name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    @Import(name="isAutoScalingEnabled")
    private @Nullable Output<Boolean> isAutoScalingEnabled;

    /**
     * @return Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    public Optional<Output<Boolean>> isAutoScalingEnabled() {
        return Optional.ofNullable(this.isAutoScalingEnabled);
    }

    /**
     * (Updatable) The Oracle license model that applies to a Deployment.
     * 
     */
    @Import(name="licenseModel")
    private @Nullable Output<String> licenseModel;

    /**
     * @return (Updatable) The Oracle license model that applies to a Deployment.
     * 
     */
    public Optional<Output<String>> licenseModel() {
        return Optional.ofNullable(this.licenseModel);
    }

    /**
     * Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * Possible lifecycle substates when retrieving a pipeline.
     * 
     */
    @Import(name="lifecycleSubState")
    private @Nullable Output<String> lifecycleSubState;

    /**
     * @return Possible lifecycle substates when retrieving a pipeline.
     * 
     */
    public Optional<Output<String>> lifecycleSubState() {
        return Optional.ofNullable(this.lifecycleSubState);
    }

    /**
     * Locks associated with this resource.
     * 
     */
    @Import(name="locks")
    private @Nullable Output<List<PipelineLockArgs>> locks;

    /**
     * @return Locks associated with this resource.
     * 
     */
    public Optional<Output<List<PipelineLockArgs>>> locks() {
        return Optional.ofNullable(this.locks);
    }

    /**
     * Mapping for source/target schema/tables for the pipeline data replication.
     * 
     */
    @Import(name="mappingRules")
    private @Nullable Output<List<PipelineMappingRuleArgs>> mappingRules;

    /**
     * @return Mapping for source/target schema/tables for the pipeline data replication.
     * 
     */
    public Optional<Output<List<PipelineMappingRuleArgs>>> mappingRules() {
        return Optional.ofNullable(this.mappingRules);
    }

    /**
     * Information regarding the pipeline diagnostic collection
     * 
     */
    @Import(name="pipelineDiagnosticDatas")
    private @Nullable Output<List<PipelinePipelineDiagnosticDataArgs>> pipelineDiagnosticDatas;

    /**
     * @return Information regarding the pipeline diagnostic collection
     * 
     */
    public Optional<Output<List<PipelinePipelineDiagnosticDataArgs>>> pipelineDiagnosticDatas() {
        return Optional.ofNullable(this.pipelineDiagnosticDatas);
    }

    /**
     * (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
     * 
     */
    @Import(name="processOptions")
    private @Nullable Output<PipelineProcessOptionsArgs> processOptions;

    /**
     * @return (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
     * 
     */
    public Optional<Output<PipelineProcessOptionsArgs>> processOptions() {
        return Optional.ofNullable(this.processOptions);
    }

    /**
     * (Updatable) The type of the recipe
     * 
     */
    @Import(name="recipeType")
    private @Nullable Output<String> recipeType;

    /**
     * @return (Updatable) The type of the recipe
     * 
     */
    public Optional<Output<String>> recipeType() {
        return Optional.ofNullable(this.recipeType);
    }

    /**
     * The source connection details for creating a pipeline.
     * 
     */
    @Import(name="sourceConnectionDetails")
    private @Nullable Output<PipelineSourceConnectionDetailsArgs> sourceConnectionDetails;

    /**
     * @return The source connection details for creating a pipeline.
     * 
     */
    public Optional<Output<PipelineSourceConnectionDetailsArgs>> sourceConnectionDetails() {
        return Optional.ofNullable(this.sourceConnectionDetails);
    }

    /**
     * Lifecycle state of the pipeline.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Lifecycle state of the pipeline.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The target connection details for creating a pipeline.
     * 
     */
    @Import(name="targetConnectionDetails")
    private @Nullable Output<PipelineTargetConnectionDetailsArgs> targetConnectionDetails;

    /**
     * @return The target connection details for creating a pipeline.
     * 
     */
    public Optional<Output<PipelineTargetConnectionDetailsArgs>> targetConnectionDetails() {
        return Optional.ofNullable(this.targetConnectionDetails);
    }

    /**
     * The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
     * 
     */
    @Import(name="timeLastRecorded")
    private @Nullable Output<String> timeLastRecorded;

    /**
     * @return When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
     * 
     */
    public Optional<Output<String>> timeLastRecorded() {
        return Optional.ofNullable(this.timeLastRecorded);
    }

    /**
     * The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private PipelineState() {}

    private PipelineState(PipelineState $) {
        this.compartmentId = $.compartmentId;
        this.cpuCoreCount = $.cpuCoreCount;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isAutoScalingEnabled = $.isAutoScalingEnabled;
        this.licenseModel = $.licenseModel;
        this.lifecycleDetails = $.lifecycleDetails;
        this.lifecycleSubState = $.lifecycleSubState;
        this.locks = $.locks;
        this.mappingRules = $.mappingRules;
        this.pipelineDiagnosticDatas = $.pipelineDiagnosticDatas;
        this.processOptions = $.processOptions;
        this.recipeType = $.recipeType;
        this.sourceConnectionDetails = $.sourceConnectionDetails;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.targetConnectionDetails = $.targetConnectionDetails;
        this.timeCreated = $.timeCreated;
        this.timeLastRecorded = $.timeLastRecorded;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineState $;

        public Builder() {
            $ = new PipelineState();
        }

        public Builder(PipelineState defaults) {
            $ = new PipelineState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param cpuCoreCount The Minimum number of OCPUs to be made available for this Deployment.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(@Nullable Output<Integer> cpuCoreCount) {
            $.cpuCoreCount = cpuCoreCount;
            return this;
        }

        /**
         * @param cpuCoreCount The Minimum number of OCPUs to be made available for this Deployment.
         * 
         * @return builder
         * 
         */
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            return cpuCoreCount(Output.of(cpuCoreCount));
        }

        /**
         * @param definedTags (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Metadata about this specific object.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Metadata about this specific object.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) An object&#39;s Display Name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) An object&#39;s Display Name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isAutoScalingEnabled Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
         * 
         * @return builder
         * 
         */
        public Builder isAutoScalingEnabled(@Nullable Output<Boolean> isAutoScalingEnabled) {
            $.isAutoScalingEnabled = isAutoScalingEnabled;
            return this;
        }

        /**
         * @param isAutoScalingEnabled Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
         * 
         * @return builder
         * 
         */
        public Builder isAutoScalingEnabled(Boolean isAutoScalingEnabled) {
            return isAutoScalingEnabled(Output.of(isAutoScalingEnabled));
        }

        /**
         * @param licenseModel (Updatable) The Oracle license model that applies to a Deployment.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(@Nullable Output<String> licenseModel) {
            $.licenseModel = licenseModel;
            return this;
        }

        /**
         * @param licenseModel (Updatable) The Oracle license model that applies to a Deployment.
         * 
         * @return builder
         * 
         */
        public Builder licenseModel(String licenseModel) {
            return licenseModel(Output.of(licenseModel));
        }

        /**
         * @param lifecycleDetails Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param lifecycleSubState Possible lifecycle substates when retrieving a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleSubState(@Nullable Output<String> lifecycleSubState) {
            $.lifecycleSubState = lifecycleSubState;
            return this;
        }

        /**
         * @param lifecycleSubState Possible lifecycle substates when retrieving a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleSubState(String lifecycleSubState) {
            return lifecycleSubState(Output.of(lifecycleSubState));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(@Nullable Output<List<PipelineLockArgs>> locks) {
            $.locks = locks;
            return this;
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(List<PipelineLockArgs> locks) {
            return locks(Output.of(locks));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(PipelineLockArgs... locks) {
            return locks(List.of(locks));
        }

        /**
         * @param mappingRules Mapping for source/target schema/tables for the pipeline data replication.
         * 
         * @return builder
         * 
         */
        public Builder mappingRules(@Nullable Output<List<PipelineMappingRuleArgs>> mappingRules) {
            $.mappingRules = mappingRules;
            return this;
        }

        /**
         * @param mappingRules Mapping for source/target schema/tables for the pipeline data replication.
         * 
         * @return builder
         * 
         */
        public Builder mappingRules(List<PipelineMappingRuleArgs> mappingRules) {
            return mappingRules(Output.of(mappingRules));
        }

        /**
         * @param mappingRules Mapping for source/target schema/tables for the pipeline data replication.
         * 
         * @return builder
         * 
         */
        public Builder mappingRules(PipelineMappingRuleArgs... mappingRules) {
            return mappingRules(List.of(mappingRules));
        }

        /**
         * @param pipelineDiagnosticDatas Information regarding the pipeline diagnostic collection
         * 
         * @return builder
         * 
         */
        public Builder pipelineDiagnosticDatas(@Nullable Output<List<PipelinePipelineDiagnosticDataArgs>> pipelineDiagnosticDatas) {
            $.pipelineDiagnosticDatas = pipelineDiagnosticDatas;
            return this;
        }

        /**
         * @param pipelineDiagnosticDatas Information regarding the pipeline diagnostic collection
         * 
         * @return builder
         * 
         */
        public Builder pipelineDiagnosticDatas(List<PipelinePipelineDiagnosticDataArgs> pipelineDiagnosticDatas) {
            return pipelineDiagnosticDatas(Output.of(pipelineDiagnosticDatas));
        }

        /**
         * @param pipelineDiagnosticDatas Information regarding the pipeline diagnostic collection
         * 
         * @return builder
         * 
         */
        public Builder pipelineDiagnosticDatas(PipelinePipelineDiagnosticDataArgs... pipelineDiagnosticDatas) {
            return pipelineDiagnosticDatas(List.of(pipelineDiagnosticDatas));
        }

        /**
         * @param processOptions (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
         * 
         * @return builder
         * 
         */
        public Builder processOptions(@Nullable Output<PipelineProcessOptionsArgs> processOptions) {
            $.processOptions = processOptions;
            return this;
        }

        /**
         * @param processOptions (Updatable) Required pipeline options to configure the replication process (Extract or Replicat).
         * 
         * @return builder
         * 
         */
        public Builder processOptions(PipelineProcessOptionsArgs processOptions) {
            return processOptions(Output.of(processOptions));
        }

        /**
         * @param recipeType (Updatable) The type of the recipe
         * 
         * @return builder
         * 
         */
        public Builder recipeType(@Nullable Output<String> recipeType) {
            $.recipeType = recipeType;
            return this;
        }

        /**
         * @param recipeType (Updatable) The type of the recipe
         * 
         * @return builder
         * 
         */
        public Builder recipeType(String recipeType) {
            return recipeType(Output.of(recipeType));
        }

        /**
         * @param sourceConnectionDetails The source connection details for creating a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder sourceConnectionDetails(@Nullable Output<PipelineSourceConnectionDetailsArgs> sourceConnectionDetails) {
            $.sourceConnectionDetails = sourceConnectionDetails;
            return this;
        }

        /**
         * @param sourceConnectionDetails The source connection details for creating a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder sourceConnectionDetails(PipelineSourceConnectionDetailsArgs sourceConnectionDetails) {
            return sourceConnectionDetails(Output.of(sourceConnectionDetails));
        }

        /**
         * @param state Lifecycle state of the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Lifecycle state of the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param targetConnectionDetails The target connection details for creating a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder targetConnectionDetails(@Nullable Output<PipelineTargetConnectionDetailsArgs> targetConnectionDetails) {
            $.targetConnectionDetails = targetConnectionDetails;
            return this;
        }

        /**
         * @param targetConnectionDetails The target connection details for creating a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder targetConnectionDetails(PipelineTargetConnectionDetailsArgs targetConnectionDetails) {
            return targetConnectionDetails(Output.of(targetConnectionDetails));
        }

        /**
         * @param timeCreated The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeLastRecorded When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
         * 
         * @return builder
         * 
         */
        public Builder timeLastRecorded(@Nullable Output<String> timeLastRecorded) {
            $.timeLastRecorded = timeLastRecorded;
            return this;
        }

        /**
         * @param timeLastRecorded When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
         * 
         * @return builder
         * 
         */
        public Builder timeLastRecorded(String timeLastRecorded) {
            return timeLastRecorded(Output.of(timeLastRecorded));
        }

        /**
         * @param timeUpdated The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public PipelineState build() {
            return $;
        }
    }

}
