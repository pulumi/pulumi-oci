// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentOggDataGroupToRolesMapping {
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IDP group which will be mapped to goldengate role administratorGroup. It grants full access to the user, including the ability to alter general, non-security related operational parameters and profiles of the server.
     * 
     */
    private @Nullable String administratorGroupId;
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IDP group which will be mapped to goldengate role operatorGroup. It allows users to perform only operational actions, like starting and stopping resources. Operators cannot alter the operational parameters or profiles of the MA server.
     * 
     */
    private @Nullable String operatorGroupId;
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IDP group which will be mapped to goldengate role securityGroup. It grants administration of security related objects and invoke security related service requests. This role has full privileges.
     * 
     */
    private String securityGroupId;
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IDP group which will be mapped to goldengate role userGroup. It allows information-only service requests, which do not alter or affect the operation of either the MA. Examples of query and read-only information include performance metric information and resource status and monitoring information
     * 
     */
    private @Nullable String userGroupId;

    private DeploymentOggDataGroupToRolesMapping() {}
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IDP group which will be mapped to goldengate role administratorGroup. It grants full access to the user, including the ability to alter general, non-security related operational parameters and profiles of the server.
     * 
     */
    public Optional<String> administratorGroupId() {
        return Optional.ofNullable(this.administratorGroupId);
    }
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IDP group which will be mapped to goldengate role operatorGroup. It allows users to perform only operational actions, like starting and stopping resources. Operators cannot alter the operational parameters or profiles of the MA server.
     * 
     */
    public Optional<String> operatorGroupId() {
        return Optional.ofNullable(this.operatorGroupId);
    }
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IDP group which will be mapped to goldengate role securityGroup. It grants administration of security related objects and invoke security related service requests. This role has full privileges.
     * 
     */
    public String securityGroupId() {
        return this.securityGroupId;
    }
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the IDP group which will be mapped to goldengate role userGroup. It allows information-only service requests, which do not alter or affect the operation of either the MA. Examples of query and read-only information include performance metric information and resource status and monitoring information
     * 
     */
    public Optional<String> userGroupId() {
        return Optional.ofNullable(this.userGroupId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentOggDataGroupToRolesMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String administratorGroupId;
        private @Nullable String operatorGroupId;
        private String securityGroupId;
        private @Nullable String userGroupId;
        public Builder() {}
        public Builder(DeploymentOggDataGroupToRolesMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administratorGroupId = defaults.administratorGroupId;
    	      this.operatorGroupId = defaults.operatorGroupId;
    	      this.securityGroupId = defaults.securityGroupId;
    	      this.userGroupId = defaults.userGroupId;
        }

        @CustomType.Setter
        public Builder administratorGroupId(@Nullable String administratorGroupId) {

            this.administratorGroupId = administratorGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder operatorGroupId(@Nullable String operatorGroupId) {

            this.operatorGroupId = operatorGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder securityGroupId(String securityGroupId) {
            if (securityGroupId == null) {
              throw new MissingRequiredPropertyException("DeploymentOggDataGroupToRolesMapping", "securityGroupId");
            }
            this.securityGroupId = securityGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder userGroupId(@Nullable String userGroupId) {

            this.userGroupId = userGroupId;
            return this;
        }
        public DeploymentOggDataGroupToRolesMapping build() {
            final var _resultValue = new DeploymentOggDataGroupToRolesMapping();
            _resultValue.administratorGroupId = administratorGroupId;
            _resultValue.operatorGroupId = operatorGroupId;
            _resultValue.securityGroupId = securityGroupId;
            _resultValue.userGroupId = userGroupId;
            return _resultValue;
        }
    }
}
