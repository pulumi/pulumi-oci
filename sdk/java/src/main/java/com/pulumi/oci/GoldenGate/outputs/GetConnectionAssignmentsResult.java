// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.GoldenGate.outputs.GetConnectionAssignmentsConnectionAssignmentCollection;
import com.pulumi.oci.GoldenGate.outputs.GetConnectionAssignmentsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectionAssignmentsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    private String compartmentId;
    /**
     * @return The list of connection_assignment_collection.
     * 
     */
    private List<GetConnectionAssignmentsConnectionAssignmentCollection> connectionAssignmentCollections;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connection being referenced.
     * 
     */
    private @Nullable String connectionId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    private @Nullable String deploymentId;
    private @Nullable List<GetConnectionAssignmentsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String name;
    /**
     * @return Possible lifecycle states for connection assignments.
     * 
     */
    private @Nullable String state;

    private GetConnectionAssignmentsResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of connection_assignment_collection.
     * 
     */
    public List<GetConnectionAssignmentsConnectionAssignmentCollection> connectionAssignmentCollections() {
        return this.connectionAssignmentCollections;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the connection being referenced.
     * 
     */
    public Optional<String> connectionId() {
        return Optional.ofNullable(this.connectionId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public Optional<String> deploymentId() {
        return Optional.ofNullable(this.deploymentId);
    }
    public List<GetConnectionAssignmentsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Possible lifecycle states for connection assignments.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionAssignmentsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private List<GetConnectionAssignmentsConnectionAssignmentCollection> connectionAssignmentCollections;
        private @Nullable String connectionId;
        private @Nullable String deploymentId;
        private @Nullable List<GetConnectionAssignmentsFilter> filters;
        private String id;
        private @Nullable String name;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetConnectionAssignmentsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionAssignmentCollections = defaults.connectionAssignmentCollections;
    	      this.connectionId = defaults.connectionId;
    	      this.deploymentId = defaults.deploymentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder connectionAssignmentCollections(List<GetConnectionAssignmentsConnectionAssignmentCollection> connectionAssignmentCollections) {
            this.connectionAssignmentCollections = Objects.requireNonNull(connectionAssignmentCollections);
            return this;
        }
        public Builder connectionAssignmentCollections(GetConnectionAssignmentsConnectionAssignmentCollection... connectionAssignmentCollections) {
            return connectionAssignmentCollections(List.of(connectionAssignmentCollections));
        }
        @CustomType.Setter
        public Builder connectionId(@Nullable String connectionId) {
            this.connectionId = connectionId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentId(@Nullable String deploymentId) {
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetConnectionAssignmentsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetConnectionAssignmentsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetConnectionAssignmentsResult build() {
            final var _resultValue = new GetConnectionAssignmentsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.connectionAssignmentCollections = connectionAssignmentCollections;
            _resultValue.connectionId = connectionId;
            _resultValue.deploymentId = deploymentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
