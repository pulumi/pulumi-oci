// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.GoldenGate.outputs.GetConnectionsConnectionCollection;
import com.pulumi.oci.GoldenGate.outputs.GetConnectionsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectionsResult {
    private @Nullable String assignableDeploymentId;
    private @Nullable String assignableDeploymentType;
    private @Nullable String assignedDeploymentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    private String compartmentId;
    /**
     * @return The list of connection_collection.
     * 
     */
    private @Nullable List<GetConnectionsConnectionCollection> connectionCollections;
    /**
     * @return The connection type.
     * 
     */
    private @Nullable List<String> connectionTypes;
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetConnectionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Possible lifecycle states for connection.
     * 
     */
    private @Nullable String state;
    /**
     * @return The Kafka (e.g. Confluent) Schema Registry technology type.
     * 
     */
    private @Nullable List<String> technologyTypes;

    private GetConnectionsResult() {}
    public Optional<String> assignableDeploymentId() {
        return Optional.ofNullable(this.assignableDeploymentId);
    }
    public Optional<String> assignableDeploymentType() {
        return Optional.ofNullable(this.assignableDeploymentType);
    }
    public Optional<String> assignedDeploymentId() {
        return Optional.ofNullable(this.assignedDeploymentId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of connection_collection.
     * 
     */
    public List<GetConnectionsConnectionCollection> connectionCollections() {
        return this.connectionCollections == null ? List.of() : this.connectionCollections;
    }
    /**
     * @return The connection type.
     * 
     */
    public List<String> connectionTypes() {
        return this.connectionTypes == null ? List.of() : this.connectionTypes;
    }
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetConnectionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Possible lifecycle states for connection.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The Kafka (e.g. Confluent) Schema Registry technology type.
     * 
     */
    public List<String> technologyTypes() {
        return this.technologyTypes == null ? List.of() : this.technologyTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String assignableDeploymentId;
        private @Nullable String assignableDeploymentType;
        private @Nullable String assignedDeploymentId;
        private String compartmentId;
        private @Nullable List<GetConnectionsConnectionCollection> connectionCollections;
        private @Nullable List<String> connectionTypes;
        private @Nullable String displayName;
        private @Nullable List<GetConnectionsFilter> filters;
        private @Nullable String id;
        private @Nullable String state;
        private @Nullable List<String> technologyTypes;
        public Builder() {}
        public Builder(GetConnectionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assignableDeploymentId = defaults.assignableDeploymentId;
    	      this.assignableDeploymentType = defaults.assignableDeploymentType;
    	      this.assignedDeploymentId = defaults.assignedDeploymentId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionCollections = defaults.connectionCollections;
    	      this.connectionTypes = defaults.connectionTypes;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.technologyTypes = defaults.technologyTypes;
        }

        @CustomType.Setter
        public Builder assignableDeploymentId(@Nullable String assignableDeploymentId) {
            this.assignableDeploymentId = assignableDeploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder assignableDeploymentType(@Nullable String assignableDeploymentType) {
            this.assignableDeploymentType = assignableDeploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder assignedDeploymentId(@Nullable String assignedDeploymentId) {
            this.assignedDeploymentId = assignedDeploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder connectionCollections(@Nullable List<GetConnectionsConnectionCollection> connectionCollections) {
            this.connectionCollections = connectionCollections;
            return this;
        }
        public Builder connectionCollections(GetConnectionsConnectionCollection... connectionCollections) {
            return connectionCollections(List.of(connectionCollections));
        }
        @CustomType.Setter
        public Builder connectionTypes(@Nullable List<String> connectionTypes) {
            this.connectionTypes = connectionTypes;
            return this;
        }
        public Builder connectionTypes(String... connectionTypes) {
            return connectionTypes(List.of(connectionTypes));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetConnectionsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetConnectionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder technologyTypes(@Nullable List<String> technologyTypes) {
            this.technologyTypes = technologyTypes;
            return this;
        }
        public Builder technologyTypes(String... technologyTypes) {
            return technologyTypes(List.of(technologyTypes));
        }
        public GetConnectionsResult build() {
            final var o = new GetConnectionsResult();
            o.assignableDeploymentId = assignableDeploymentId;
            o.assignableDeploymentType = assignableDeploymentType;
            o.assignedDeploymentId = assignedDeploymentId;
            o.compartmentId = compartmentId;
            o.connectionCollections = connectionCollections;
            o.connectionTypes = connectionTypes;
            o.displayName = displayName;
            o.filters = filters;
            o.id = id;
            o.state = state;
            o.technologyTypes = technologyTypes;
            return o;
        }
    }
}
