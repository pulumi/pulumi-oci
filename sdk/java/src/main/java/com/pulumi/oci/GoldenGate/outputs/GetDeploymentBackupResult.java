// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentBackupLock;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDeploymentBackupResult {
    /**
     * @return Possible Deployment backup types.
     * 
     */
    private String backupType;
    /**
     * @return Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    private String bucket;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    private String compartmentId;
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    private String deploymentBackupId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    private String deploymentId;
    /**
     * @return The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
     * 
     */
    private String deploymentType;
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    private String displayName;
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    private String id;
    /**
     * @return True if this object is automatically created
     * 
     */
    private Boolean isAutomatic;
    private Boolean isLockOverride;
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Locks associated with this resource.
     * 
     */
    private List<GetDeploymentBackupLock> locks;
    /**
     * @return Name of namespace that serves as a container for all of your buckets
     * 
     */
    private String namespace;
    /**
     * @return Name of the object to be uploaded to object storage
     * 
     */
    private String object;
    /**
     * @return Version of OGG
     * 
     */
    private String oggVersion;
    /**
     * @return The size of the backup stored in object storage (in bytes)
     * 
     */
    private Double sizeInBytes;
    /**
     * @return Possible lifecycle states.
     * 
     */
    private String state;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The time of the resource backup finish. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeBackupFinished;
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeCreated;
    /**
     * @return The time of the resource backup. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeOfBackup;
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeUpdated;

    private GetDeploymentBackupResult() {}
    /**
     * @return Possible Deployment backup types.
     * 
     */
    public String backupType() {
        return this.backupType;
    }
    /**
     * @return Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    public String deploymentBackupId() {
        return this.deploymentBackupId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public String deploymentId() {
        return this.deploymentId;
    }
    /**
     * @return The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
     * 
     */
    public String deploymentType() {
        return this.deploymentType;
    }
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return True if this object is automatically created
     * 
     */
    public Boolean isAutomatic() {
        return this.isAutomatic;
    }
    public Boolean isLockOverride() {
        return this.isLockOverride;
    }
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Locks associated with this resource.
     * 
     */
    public List<GetDeploymentBackupLock> locks() {
        return this.locks;
    }
    /**
     * @return Name of namespace that serves as a container for all of your buckets
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return Name of the object to be uploaded to object storage
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return Version of OGG
     * 
     */
    public String oggVersion() {
        return this.oggVersion;
    }
    /**
     * @return The size of the backup stored in object storage (in bytes)
     * 
     */
    public Double sizeInBytes() {
        return this.sizeInBytes;
    }
    /**
     * @return Possible lifecycle states.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time of the resource backup finish. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeBackupFinished() {
        return this.timeBackupFinished;
    }
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time of the resource backup. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeOfBackup() {
        return this.timeOfBackup;
    }
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentBackupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backupType;
        private String bucket;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String deploymentBackupId;
        private String deploymentId;
        private String deploymentType;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isAutomatic;
        private Boolean isLockOverride;
        private String lifecycleDetails;
        private List<GetDeploymentBackupLock> locks;
        private String namespace;
        private String object;
        private String oggVersion;
        private Double sizeInBytes;
        private String state;
        private Map<String,Object> systemTags;
        private String timeBackupFinished;
        private String timeCreated;
        private String timeOfBackup;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetDeploymentBackupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupType = defaults.backupType;
    	      this.bucket = defaults.bucket;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deploymentBackupId = defaults.deploymentBackupId;
    	      this.deploymentId = defaults.deploymentId;
    	      this.deploymentType = defaults.deploymentType;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutomatic = defaults.isAutomatic;
    	      this.isLockOverride = defaults.isLockOverride;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.locks = defaults.locks;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.oggVersion = defaults.oggVersion;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeBackupFinished = defaults.timeBackupFinished;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfBackup = defaults.timeOfBackup;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder backupType(String backupType) {
            if (backupType == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "backupType");
            }
            this.backupType = backupType;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentBackupId(String deploymentBackupId) {
            if (deploymentBackupId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "deploymentBackupId");
            }
            this.deploymentBackupId = deploymentBackupId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            if (deploymentId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "deploymentId");
            }
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(String deploymentType) {
            if (deploymentType == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "deploymentType");
            }
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAutomatic(Boolean isAutomatic) {
            if (isAutomatic == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "isAutomatic");
            }
            this.isAutomatic = isAutomatic;
            return this;
        }
        @CustomType.Setter
        public Builder isLockOverride(Boolean isLockOverride) {
            if (isLockOverride == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "isLockOverride");
            }
            this.isLockOverride = isLockOverride;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder locks(List<GetDeploymentBackupLock> locks) {
            if (locks == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "locks");
            }
            this.locks = locks;
            return this;
        }
        public Builder locks(GetDeploymentBackupLock... locks) {
            return locks(List.of(locks));
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder object(String object) {
            if (object == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "object");
            }
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder oggVersion(String oggVersion) {
            if (oggVersion == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "oggVersion");
            }
            this.oggVersion = oggVersion;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInBytes(Double sizeInBytes) {
            if (sizeInBytes == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "sizeInBytes");
            }
            this.sizeInBytes = sizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeBackupFinished(String timeBackupFinished) {
            if (timeBackupFinished == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "timeBackupFinished");
            }
            this.timeBackupFinished = timeBackupFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfBackup(String timeOfBackup) {
            if (timeOfBackup == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "timeOfBackup");
            }
            this.timeOfBackup = timeOfBackup;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetDeploymentBackupResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetDeploymentBackupResult build() {
            final var _resultValue = new GetDeploymentBackupResult();
            _resultValue.backupType = backupType;
            _resultValue.bucket = bucket;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.deploymentBackupId = deploymentBackupId;
            _resultValue.deploymentId = deploymentId;
            _resultValue.deploymentType = deploymentType;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isAutomatic = isAutomatic;
            _resultValue.isLockOverride = isLockOverride;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.locks = locks;
            _resultValue.namespace = namespace;
            _resultValue.object = object;
            _resultValue.oggVersion = oggVersion;
            _resultValue.sizeInBytes = sizeInBytes;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeBackupFinished = timeBackupFinished;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeOfBackup = timeOfBackup;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
