// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeploymentBackupsDeploymentBackupCollectionItem {
    /**
     * @return Possible Deployment backup types.
     * 
     */
    private @Nullable String backupType;
    /**
     * @return Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    private @Nullable String bucket;
    /**
     * @return The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment in which to list resources.
     * 
     */
    private @Nullable String deploymentId;
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    private @Nullable String id;
    /**
     * @return True if this object is automatically created
     * 
     */
    private @Nullable Boolean isAutomatic;
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return Name of namespace that serves as a container for all of your buckets
     * 
     */
    private @Nullable String namespace;
    /**
     * @return Name of the object to be uploaded to object storage
     * 
     */
    private @Nullable String object;
    /**
     * @return Version of OGG
     * 
     */
    private @Nullable String oggVersion;
    /**
     * @return The size of the backup stored in object storage (in bytes)
     * 
     */
    private @Nullable Double sizeInBytes;
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleState&#39; given.
     * 
     */
    private @Nullable String state;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time of the resource backup finish. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeBackupFinished;
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time of the resource backup. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeOfBackup;
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeUpdated;

    private GetDeploymentBackupsDeploymentBackupCollectionItem() {}
    /**
     * @return Possible Deployment backup types.
     * 
     */
    public Optional<String> backupType() {
        return Optional.ofNullable(this.backupType);
    }
    /**
     * @return Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment in which to list resources.
     * 
     */
    public Optional<String> deploymentId() {
        return Optional.ofNullable(this.deploymentId);
    }
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return True if this object is automatically created
     * 
     */
    public Optional<Boolean> isAutomatic() {
        return Optional.ofNullable(this.isAutomatic);
    }
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return Name of namespace that serves as a container for all of your buckets
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return Name of the object to be uploaded to object storage
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }
    /**
     * @return Version of OGG
     * 
     */
    public Optional<String> oggVersion() {
        return Optional.ofNullable(this.oggVersion);
    }
    /**
     * @return The size of the backup stored in object storage (in bytes)
     * 
     */
    public Optional<Double> sizeInBytes() {
        return Optional.ofNullable(this.sizeInBytes);
    }
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleState&#39; given.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time of the resource backup finish. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeBackupFinished() {
        return Optional.ofNullable(this.timeBackupFinished);
    }
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time of the resource backup. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeOfBackup() {
        return Optional.ofNullable(this.timeOfBackup);
    }
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentBackupsDeploymentBackupCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupType;
        private @Nullable String bucket;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String deploymentId;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isAutomatic;
        private @Nullable String lifecycleDetails;
        private @Nullable String namespace;
        private @Nullable String object;
        private @Nullable String oggVersion;
        private @Nullable Double sizeInBytes;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeBackupFinished;
        private @Nullable String timeCreated;
        private @Nullable String timeOfBackup;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetDeploymentBackupsDeploymentBackupCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupType = defaults.backupType;
    	      this.bucket = defaults.bucket;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deploymentId = defaults.deploymentId;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutomatic = defaults.isAutomatic;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.oggVersion = defaults.oggVersion;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeBackupFinished = defaults.timeBackupFinished;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfBackup = defaults.timeOfBackup;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder backupType(@Nullable String backupType) {
            this.backupType = backupType;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentId(@Nullable String deploymentId) {
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAutomatic(@Nullable Boolean isAutomatic) {
            this.isAutomatic = isAutomatic;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder object(@Nullable String object) {
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder oggVersion(@Nullable String oggVersion) {
            this.oggVersion = oggVersion;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInBytes(@Nullable Double sizeInBytes) {
            this.sizeInBytes = sizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeBackupFinished(@Nullable String timeBackupFinished) {
            this.timeBackupFinished = timeBackupFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfBackup(@Nullable String timeOfBackup) {
            this.timeOfBackup = timeOfBackup;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetDeploymentBackupsDeploymentBackupCollectionItem build() {
            final var o = new GetDeploymentBackupsDeploymentBackupCollectionItem();
            o.backupType = backupType;
            o.bucket = bucket;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.deploymentId = deploymentId;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isAutomatic = isAutomatic;
            o.lifecycleDetails = lifecycleDetails;
            o.namespace = namespace;
            o.object = object;
            o.oggVersion = oggVersion;
            o.sizeInBytes = sizeInBytes;
            o.state = state;
            o.systemTags = systemTags;
            o.timeBackupFinished = timeBackupFinished;
            o.timeCreated = timeCreated;
            o.timeOfBackup = timeOfBackup;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
