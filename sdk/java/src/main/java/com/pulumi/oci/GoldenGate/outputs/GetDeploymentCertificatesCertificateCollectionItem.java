// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDeploymentCertificatesCertificateCollectionItem {
    private String authorityKeyId;
    private String certificateContent;
    /**
     * @return A unique Deployment identifier.
     * 
     */
    private String deploymentId;
    private Boolean isCa;
    /**
     * @return Indicates if the certificate is self signed.
     * 
     */
    private Boolean isSelfSigned;
    private String issuer;
    /**
     * @return The identifier key (unique name in the scope of the deployment) of the certificate being referenced.  It must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
     * 
     */
    private String key;
    private String md5hash;
    private String publicKey;
    private String publicKeyAlgorithm;
    private String publicKeySize;
    private String serial;
    private String sha1hash;
    /**
     * @return A filter to return only connections having the &#39;lifecycleState&#39; given.
     * 
     */
    private String state;
    /**
     * @return The Certificate subject.
     * 
     */
    private String subject;
    private String subjectKeyId;
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeCreated;
    private String timeValidFrom;
    /**
     * @return The time the certificate is valid to. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeValidTo;
    private String version;

    private GetDeploymentCertificatesCertificateCollectionItem() {}
    public String authorityKeyId() {
        return this.authorityKeyId;
    }
    public String certificateContent() {
        return this.certificateContent;
    }
    /**
     * @return A unique Deployment identifier.
     * 
     */
    public String deploymentId() {
        return this.deploymentId;
    }
    public Boolean isCa() {
        return this.isCa;
    }
    /**
     * @return Indicates if the certificate is self signed.
     * 
     */
    public Boolean isSelfSigned() {
        return this.isSelfSigned;
    }
    public String issuer() {
        return this.issuer;
    }
    /**
     * @return The identifier key (unique name in the scope of the deployment) of the certificate being referenced.  It must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
     * 
     */
    public String key() {
        return this.key;
    }
    public String md5hash() {
        return this.md5hash;
    }
    public String publicKey() {
        return this.publicKey;
    }
    public String publicKeyAlgorithm() {
        return this.publicKeyAlgorithm;
    }
    public String publicKeySize() {
        return this.publicKeySize;
    }
    public String serial() {
        return this.serial;
    }
    public String sha1hash() {
        return this.sha1hash;
    }
    /**
     * @return A filter to return only connections having the &#39;lifecycleState&#39; given.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The Certificate subject.
     * 
     */
    public String subject() {
        return this.subject;
    }
    public String subjectKeyId() {
        return this.subjectKeyId;
    }
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    public String timeValidFrom() {
        return this.timeValidFrom;
    }
    /**
     * @return The time the certificate is valid to. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeValidTo() {
        return this.timeValidTo;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentCertificatesCertificateCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authorityKeyId;
        private String certificateContent;
        private String deploymentId;
        private Boolean isCa;
        private Boolean isSelfSigned;
        private String issuer;
        private String key;
        private String md5hash;
        private String publicKey;
        private String publicKeyAlgorithm;
        private String publicKeySize;
        private String serial;
        private String sha1hash;
        private String state;
        private String subject;
        private String subjectKeyId;
        private String timeCreated;
        private String timeValidFrom;
        private String timeValidTo;
        private String version;
        public Builder() {}
        public Builder(GetDeploymentCertificatesCertificateCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorityKeyId = defaults.authorityKeyId;
    	      this.certificateContent = defaults.certificateContent;
    	      this.deploymentId = defaults.deploymentId;
    	      this.isCa = defaults.isCa;
    	      this.isSelfSigned = defaults.isSelfSigned;
    	      this.issuer = defaults.issuer;
    	      this.key = defaults.key;
    	      this.md5hash = defaults.md5hash;
    	      this.publicKey = defaults.publicKey;
    	      this.publicKeyAlgorithm = defaults.publicKeyAlgorithm;
    	      this.publicKeySize = defaults.publicKeySize;
    	      this.serial = defaults.serial;
    	      this.sha1hash = defaults.sha1hash;
    	      this.state = defaults.state;
    	      this.subject = defaults.subject;
    	      this.subjectKeyId = defaults.subjectKeyId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeValidFrom = defaults.timeValidFrom;
    	      this.timeValidTo = defaults.timeValidTo;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder authorityKeyId(String authorityKeyId) {
            this.authorityKeyId = Objects.requireNonNull(authorityKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder certificateContent(String certificateContent) {
            this.certificateContent = Objects.requireNonNull(certificateContent);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            this.deploymentId = Objects.requireNonNull(deploymentId);
            return this;
        }
        @CustomType.Setter
        public Builder isCa(Boolean isCa) {
            this.isCa = Objects.requireNonNull(isCa);
            return this;
        }
        @CustomType.Setter
        public Builder isSelfSigned(Boolean isSelfSigned) {
            this.isSelfSigned = Objects.requireNonNull(isSelfSigned);
            return this;
        }
        @CustomType.Setter
        public Builder issuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        @CustomType.Setter
        public Builder md5hash(String md5hash) {
            this.md5hash = Objects.requireNonNull(md5hash);
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            this.publicKey = Objects.requireNonNull(publicKey);
            return this;
        }
        @CustomType.Setter
        public Builder publicKeyAlgorithm(String publicKeyAlgorithm) {
            this.publicKeyAlgorithm = Objects.requireNonNull(publicKeyAlgorithm);
            return this;
        }
        @CustomType.Setter
        public Builder publicKeySize(String publicKeySize) {
            this.publicKeySize = Objects.requireNonNull(publicKeySize);
            return this;
        }
        @CustomType.Setter
        public Builder serial(String serial) {
            this.serial = Objects.requireNonNull(serial);
            return this;
        }
        @CustomType.Setter
        public Builder sha1hash(String sha1hash) {
            this.sha1hash = Objects.requireNonNull(sha1hash);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder subject(String subject) {
            this.subject = Objects.requireNonNull(subject);
            return this;
        }
        @CustomType.Setter
        public Builder subjectKeyId(String subjectKeyId) {
            this.subjectKeyId = Objects.requireNonNull(subjectKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeValidFrom(String timeValidFrom) {
            this.timeValidFrom = Objects.requireNonNull(timeValidFrom);
            return this;
        }
        @CustomType.Setter
        public Builder timeValidTo(String timeValidTo) {
            this.timeValidTo = Objects.requireNonNull(timeValidTo);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetDeploymentCertificatesCertificateCollectionItem build() {
            final var o = new GetDeploymentCertificatesCertificateCollectionItem();
            o.authorityKeyId = authorityKeyId;
            o.certificateContent = certificateContent;
            o.deploymentId = deploymentId;
            o.isCa = isCa;
            o.isSelfSigned = isSelfSigned;
            o.issuer = issuer;
            o.key = key;
            o.md5hash = md5hash;
            o.publicKey = publicKey;
            o.publicKeyAlgorithm = publicKeyAlgorithm;
            o.publicKeySize = publicKeySize;
            o.serial = serial;
            o.sha1hash = sha1hash;
            o.state = state;
            o.subject = subject;
            o.subjectKeyId = subjectKeyId;
            o.timeCreated = timeCreated;
            o.timeValidFrom = timeValidFrom;
            o.timeValidTo = timeValidTo;
            o.version = version;
            return o;
        }
    }
}
