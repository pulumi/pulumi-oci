// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentCertificatesCertificateCollection;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentCertificatesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeploymentCertificatesResult {
    /**
     * @return The list of certificate_collection.
     * 
     */
    private List<GetDeploymentCertificatesCertificateCollection> certificateCollections;
    private String deploymentId;
    private @Nullable List<GetDeploymentCertificatesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Possible certificate lifecycle states.
     * 
     */
    private @Nullable String state;

    private GetDeploymentCertificatesResult() {}
    /**
     * @return The list of certificate_collection.
     * 
     */
    public List<GetDeploymentCertificatesCertificateCollection> certificateCollections() {
        return this.certificateCollections;
    }
    public String deploymentId() {
        return this.deploymentId;
    }
    public List<GetDeploymentCertificatesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Possible certificate lifecycle states.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentCertificatesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDeploymentCertificatesCertificateCollection> certificateCollections;
        private String deploymentId;
        private @Nullable List<GetDeploymentCertificatesFilter> filters;
        private String id;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetDeploymentCertificatesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateCollections = defaults.certificateCollections;
    	      this.deploymentId = defaults.deploymentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder certificateCollections(List<GetDeploymentCertificatesCertificateCollection> certificateCollections) {
            this.certificateCollections = Objects.requireNonNull(certificateCollections);
            return this;
        }
        public Builder certificateCollections(GetDeploymentCertificatesCertificateCollection... certificateCollections) {
            return certificateCollections(List.of(certificateCollections));
        }
        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            this.deploymentId = Objects.requireNonNull(deploymentId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDeploymentCertificatesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetDeploymentCertificatesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetDeploymentCertificatesResult build() {
            final var o = new GetDeploymentCertificatesResult();
            o.certificateCollections = certificateCollections;
            o.deploymentId = deploymentId;
            o.filters = filters;
            o.id = id;
            o.state = state;
            return o;
        }
    }
}
