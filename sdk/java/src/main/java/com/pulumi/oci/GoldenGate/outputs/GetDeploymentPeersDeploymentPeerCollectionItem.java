// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDeploymentPeersDeploymentPeerCollectionItem {
    /**
     * @return The availability domain of a placement.
     * 
     */
    private String availabilityDomain;
    /**
     * @return A unique Deployment identifier.
     * 
     */
    private String deploymentId;
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    private String displayName;
    /**
     * @return The fault domain of a placement.
     * 
     */
    private String faultDomain;
    /**
     * @return The type of the deployment role.
     * 
     */
    private String peerRole;
    /**
     * @return The type of the deployment peer.
     * 
     */
    private String peerType;
    /**
     * @return The name of the region. e.g.: us-ashburn-1 If the region is not provided, backend will default to the default region.
     * 
     */
    private String region;
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleState&#39; given.
     * 
     */
    private String state;
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeCreated;
    /**
     * @return The time of the last data synchronization from the primary to the standby peer. [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeLastSynced;
    /**
     * @return The time of the last role change. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeRoleChanged;
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeUpdated;

    private GetDeploymentPeersDeploymentPeerCollectionItem() {}
    /**
     * @return The availability domain of a placement.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return A unique Deployment identifier.
     * 
     */
    public String deploymentId() {
        return this.deploymentId;
    }
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The fault domain of a placement.
     * 
     */
    public String faultDomain() {
        return this.faultDomain;
    }
    /**
     * @return The type of the deployment role.
     * 
     */
    public String peerRole() {
        return this.peerRole;
    }
    /**
     * @return The type of the deployment peer.
     * 
     */
    public String peerType() {
        return this.peerType;
    }
    /**
     * @return The name of the region. e.g.: us-ashburn-1 If the region is not provided, backend will default to the default region.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleState&#39; given.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time of the last data synchronization from the primary to the standby peer. [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeLastSynced() {
        return this.timeLastSynced;
    }
    /**
     * @return The time of the last role change. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeRoleChanged() {
        return this.timeRoleChanged;
    }
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentPeersDeploymentPeerCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private String deploymentId;
        private String displayName;
        private String faultDomain;
        private String peerRole;
        private String peerType;
        private String region;
        private String state;
        private String timeCreated;
        private String timeLastSynced;
        private String timeRoleChanged;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetDeploymentPeersDeploymentPeerCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.deploymentId = defaults.deploymentId;
    	      this.displayName = defaults.displayName;
    	      this.faultDomain = defaults.faultDomain;
    	      this.peerRole = defaults.peerRole;
    	      this.peerType = defaults.peerType;
    	      this.region = defaults.region;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastSynced = defaults.timeLastSynced;
    	      this.timeRoleChanged = defaults.timeRoleChanged;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            if (deploymentId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "deploymentId");
            }
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomain(String faultDomain) {
            if (faultDomain == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "faultDomain");
            }
            this.faultDomain = faultDomain;
            return this;
        }
        @CustomType.Setter
        public Builder peerRole(String peerRole) {
            if (peerRole == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "peerRole");
            }
            this.peerRole = peerRole;
            return this;
        }
        @CustomType.Setter
        public Builder peerType(String peerType) {
            if (peerType == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "peerType");
            }
            this.peerType = peerType;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSynced(String timeLastSynced) {
            if (timeLastSynced == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "timeLastSynced");
            }
            this.timeLastSynced = timeLastSynced;
            return this;
        }
        @CustomType.Setter
        public Builder timeRoleChanged(String timeRoleChanged) {
            if (timeRoleChanged == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "timeRoleChanged");
            }
            this.timeRoleChanged = timeRoleChanged;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersDeploymentPeerCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetDeploymentPeersDeploymentPeerCollectionItem build() {
            final var _resultValue = new GetDeploymentPeersDeploymentPeerCollectionItem();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.deploymentId = deploymentId;
            _resultValue.displayName = displayName;
            _resultValue.faultDomain = faultDomain;
            _resultValue.peerRole = peerRole;
            _resultValue.peerType = peerType;
            _resultValue.region = region;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeLastSynced = timeLastSynced;
            _resultValue.timeRoleChanged = timeRoleChanged;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
