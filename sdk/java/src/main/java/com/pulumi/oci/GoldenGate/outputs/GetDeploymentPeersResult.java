// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentPeersDeploymentPeerCollection;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentPeersFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeploymentPeersResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    private String deploymentId;
    /**
     * @return The list of deployment_peer_collection.
     * 
     */
    private List<GetDeploymentPeersDeploymentPeerCollection> deploymentPeerCollections;
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetDeploymentPeersFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Possible lifecycle states for deployment peer.
     * 
     */
    private @Nullable String state;

    private GetDeploymentPeersResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public String deploymentId() {
        return this.deploymentId;
    }
    /**
     * @return The list of deployment_peer_collection.
     * 
     */
    public List<GetDeploymentPeersDeploymentPeerCollection> deploymentPeerCollections() {
        return this.deploymentPeerCollections;
    }
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetDeploymentPeersFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Possible lifecycle states for deployment peer.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentPeersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deploymentId;
        private List<GetDeploymentPeersDeploymentPeerCollection> deploymentPeerCollections;
        private @Nullable String displayName;
        private @Nullable List<GetDeploymentPeersFilter> filters;
        private String id;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetDeploymentPeersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentId = defaults.deploymentId;
    	      this.deploymentPeerCollections = defaults.deploymentPeerCollections;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            if (deploymentId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersResult", "deploymentId");
            }
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentPeerCollections(List<GetDeploymentPeersDeploymentPeerCollection> deploymentPeerCollections) {
            if (deploymentPeerCollections == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersResult", "deploymentPeerCollections");
            }
            this.deploymentPeerCollections = deploymentPeerCollections;
            return this;
        }
        public Builder deploymentPeerCollections(GetDeploymentPeersDeploymentPeerCollection... deploymentPeerCollections) {
            return deploymentPeerCollections(List.of(deploymentPeerCollections));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDeploymentPeersFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetDeploymentPeersFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDeploymentPeersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetDeploymentPeersResult build() {
            final var _resultValue = new GetDeploymentPeersResult();
            _resultValue.deploymentId = deploymentId;
            _resultValue.deploymentPeerCollections = deploymentPeerCollections;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
