// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentBackupSchedule;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentDeploymentDiagnosticData;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentIngressIp;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentLock;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentMaintenanceConfiguration;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentMaintenanceWindow;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentOggData;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentPlacement;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDeploymentResult {
    /**
     * @return The availability domain of a placement.
     * 
     */
    private String availabilityDomain;
    /**
     * @return Defines the schedule of the deployment backup.
     * 
     */
    private List<GetDeploymentBackupSchedule> backupSchedules;
    /**
     * @return The maximum number of CPUs allowed with a &#39;Bring Your Own License&#39; (BYOL) license type. Any CPU usage above this limit is considered as License Included and billed.
     * 
     */
    private Integer byolCpuCoreCountLimit;
    /**
     * @return The deployment category defines the broad separation of the deployment type into three categories. Currently the separation is &#39;DATA_REPLICATION&#39;, &#39;STREAM_ANALYTICS&#39; and &#39;DATA_TRANSFORMS&#39;.
     * 
     */
    private String category;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    private String compartmentId;
    /**
     * @return The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    private Integer cpuCoreCount;
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    private String deploymentBackupId;
    /**
     * @return Information regarding the deployment diagnostic collection
     * 
     */
    private List<GetDeploymentDeploymentDiagnosticData> deploymentDiagnosticDatas;
    private String deploymentId;
    /**
     * @return The type of the deployment role.
     * 
     */
    private String deploymentRole;
    /**
     * @return The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
     * 
     */
    private String deploymentType;
    /**
     * @return The URL of a resource.
     * 
     */
    private String deploymentUrl;
    /**
     * @return Metadata about this specific object.
     * 
     */
    private String description;
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    private String displayName;
    /**
     * @return Specifies whether the deployment is used in a production or development/testing environment.
     * 
     */
    private String environmentType;
    /**
     * @return The fault domain of a placement.
     * 
     */
    private String faultDomain;
    /**
     * @return A three-label Fully Qualified Domain Name (FQDN) for a resource.
     * 
     */
    private String fqdn;
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    private String id;
    /**
     * @return List of ingress IP addresses from where the GoldenGate deployment connects to this connection&#39;s privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
     * 
     */
    private List<GetDeploymentIngressIp> ingressIps;
    /**
     * @return Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    private Boolean isAutoScalingEnabled;
    /**
     * @return Flag to allow to configure the &#39;Bring Your Own License&#39; (BYOL) license type CPU limit. If enabled, the exact number of CPUs must be provided via byolCpuCoreCountLimit.
     * 
     */
    private Boolean isByolCpuCoreCountLimitEnabled;
    /**
     * @return True if all of the aggregate resources are working correctly.
     * 
     */
    private Boolean isHealthy;
    /**
     * @return Indicates if the resource is the the latest available version.
     * 
     */
    private Boolean isLatestVersion;
    private Boolean isLockOverride;
    /**
     * @return True if this object is publicly available.
     * 
     */
    private Boolean isPublic;
    /**
     * @return Deprecated: This field is not updated and will be removed in future versions. If storage utilization exceeds the limit, the respective warning message will appear in deployment messages, which can be accessed through /messages?deploymentId=. Indicator will be true if the amount of storage being utilized exceeds the allowable storage utilization limit.  Exceeding the limit may be an indication of a misconfiguration of the deployment&#39;s GoldenGate service.
     * 
     */
    private Boolean isStorageUtilizationLimitExceeded;
    /**
     * @return The Oracle license model that applies to a Deployment.
     * 
     */
    private String licenseModel;
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Possible GGS lifecycle sub-states.
     * 
     */
    private String lifecycleSubState;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the loadbalancer in the customer&#39;s subnet. The loadbalancer of the public deployment created in the customer subnet.
     * 
     */
    private String loadBalancerId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a public subnet in the customer tenancy. Can be provided only for public deployments. If provided, the loadbalancer will be created in this subnet instead of the service tenancy. For backward compatibility, this is an optional property. It will become mandatory for public deployments after October 1, 2024.
     * 
     */
    private String loadBalancerSubnetId;
    /**
     * @return Locks associated with this resource.
     * 
     */
    private List<GetDeploymentLock> locks;
    /**
     * @return Attributes for configuring automatic deployment maintenance.
     * 
     */
    private List<GetDeploymentMaintenanceConfiguration> maintenanceConfigurations;
    /**
     * @return Defines the maintenance window, when automatic actions can be performed.
     * 
     */
    private List<GetDeploymentMaintenanceWindow> maintenanceWindows;
    /**
     * @return Type of the next maintenance.
     * 
     */
    private String nextMaintenanceActionType;
    /**
     * @return Description of the next maintenance.
     * 
     */
    private String nextMaintenanceDescription;
    /**
     * @return An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     * 
     */
    private List<String> nsgIds;
    /**
     * @return Deployment Data for an OggDeployment
     * 
     */
    private List<GetDeploymentOggData> oggDatas;
    /**
     * @return An array of local peers of deployment
     * 
     */
    private List<GetDeploymentPlacement> placements;
    /**
     * @return The private IP address in the customer&#39;s VCN representing the access point for the associated endpoint service in the GoldenGate service VCN.
     * 
     */
    private String privateIpAddress;
    /**
     * @return The public IP address representing the access point for the Deployment.
     * 
     */
    private String publicIpAddress;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    private String sourceDeploymentId;
    /**
     * @return Possible lifecycle states.
     * 
     */
    private String state;
    /**
     * @return The amount of storage being utilized (in bytes)
     * 
     */
    private String storageUtilizationInBytes;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet of the deployment&#39;s private endpoint. The subnet must be a private subnet. For backward compatibility, public subnets are allowed until May 31 2025, after which the private subnet will be enforced.
     * 
     */
    private String subnetId;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeCreated;
    /**
     * @return The timestamp of last deployment backup scheduled. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-10-25T18:19:29.600Z`.
     * 
     */
    private String timeLastBackupScheduled;
    /**
     * @return The timestamp of next deployment backup scheduled. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-10-26T20:19:29.600Z`.
     * 
     */
    private String timeNextBackupScheduled;
    /**
     * @return The time of next maintenance schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeOfNextMaintenance;
    /**
     * @return The time until OGG version is supported. After this date has passed OGG version will not be available anymore. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeOggVersionSupportedUntil;
    /**
     * @return The time of the last role change. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeRoleChanged;
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeUpdated;
    /**
     * @return Note: Deprecated: Use timeOfNextMaintenance instead, or related upgrade records  to check, when deployment will be forced to upgrade to a newer version. Old description: The date the existing version in use will no longer be considered as usable and an upgrade will be required.  This date is typically 6 months after the version was released for use by GGS.  The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeUpgradeRequired;

    private GetDeploymentResult() {}
    /**
     * @return The availability domain of a placement.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return Defines the schedule of the deployment backup.
     * 
     */
    public List<GetDeploymentBackupSchedule> backupSchedules() {
        return this.backupSchedules;
    }
    /**
     * @return The maximum number of CPUs allowed with a &#39;Bring Your Own License&#39; (BYOL) license type. Any CPU usage above this limit is considered as License Included and billed.
     * 
     */
    public Integer byolCpuCoreCountLimit() {
        return this.byolCpuCoreCountLimit;
    }
    /**
     * @return The deployment category defines the broad separation of the deployment type into three categories. Currently the separation is &#39;DATA_REPLICATION&#39;, &#39;STREAM_ANALYTICS&#39; and &#39;DATA_TRANSFORMS&#39;.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    public String deploymentBackupId() {
        return this.deploymentBackupId;
    }
    /**
     * @return Information regarding the deployment diagnostic collection
     * 
     */
    public List<GetDeploymentDeploymentDiagnosticData> deploymentDiagnosticDatas() {
        return this.deploymentDiagnosticDatas;
    }
    public String deploymentId() {
        return this.deploymentId;
    }
    /**
     * @return The type of the deployment role.
     * 
     */
    public String deploymentRole() {
        return this.deploymentRole;
    }
    /**
     * @return The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
     * 
     */
    public String deploymentType() {
        return this.deploymentType;
    }
    /**
     * @return The URL of a resource.
     * 
     */
    public String deploymentUrl() {
        return this.deploymentUrl;
    }
    /**
     * @return Metadata about this specific object.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Specifies whether the deployment is used in a production or development/testing environment.
     * 
     */
    public String environmentType() {
        return this.environmentType;
    }
    /**
     * @return The fault domain of a placement.
     * 
     */
    public String faultDomain() {
        return this.faultDomain;
    }
    /**
     * @return A three-label Fully Qualified Domain Name (FQDN) for a resource.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of ingress IP addresses from where the GoldenGate deployment connects to this connection&#39;s privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
     * 
     */
    public List<GetDeploymentIngressIp> ingressIps() {
        return this.ingressIps;
    }
    /**
     * @return Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    public Boolean isAutoScalingEnabled() {
        return this.isAutoScalingEnabled;
    }
    /**
     * @return Flag to allow to configure the &#39;Bring Your Own License&#39; (BYOL) license type CPU limit. If enabled, the exact number of CPUs must be provided via byolCpuCoreCountLimit.
     * 
     */
    public Boolean isByolCpuCoreCountLimitEnabled() {
        return this.isByolCpuCoreCountLimitEnabled;
    }
    /**
     * @return True if all of the aggregate resources are working correctly.
     * 
     */
    public Boolean isHealthy() {
        return this.isHealthy;
    }
    /**
     * @return Indicates if the resource is the the latest available version.
     * 
     */
    public Boolean isLatestVersion() {
        return this.isLatestVersion;
    }
    public Boolean isLockOverride() {
        return this.isLockOverride;
    }
    /**
     * @return True if this object is publicly available.
     * 
     */
    public Boolean isPublic() {
        return this.isPublic;
    }
    /**
     * @return Deprecated: This field is not updated and will be removed in future versions. If storage utilization exceeds the limit, the respective warning message will appear in deployment messages, which can be accessed through /messages?deploymentId=. Indicator will be true if the amount of storage being utilized exceeds the allowable storage utilization limit.  Exceeding the limit may be an indication of a misconfiguration of the deployment&#39;s GoldenGate service.
     * 
     */
    public Boolean isStorageUtilizationLimitExceeded() {
        return this.isStorageUtilizationLimitExceeded;
    }
    /**
     * @return The Oracle license model that applies to a Deployment.
     * 
     */
    public String licenseModel() {
        return this.licenseModel;
    }
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Possible GGS lifecycle sub-states.
     * 
     */
    public String lifecycleSubState() {
        return this.lifecycleSubState;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the loadbalancer in the customer&#39;s subnet. The loadbalancer of the public deployment created in the customer subnet.
     * 
     */
    public String loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a public subnet in the customer tenancy. Can be provided only for public deployments. If provided, the loadbalancer will be created in this subnet instead of the service tenancy. For backward compatibility, this is an optional property. It will become mandatory for public deployments after October 1, 2024.
     * 
     */
    public String loadBalancerSubnetId() {
        return this.loadBalancerSubnetId;
    }
    /**
     * @return Locks associated with this resource.
     * 
     */
    public List<GetDeploymentLock> locks() {
        return this.locks;
    }
    /**
     * @return Attributes for configuring automatic deployment maintenance.
     * 
     */
    public List<GetDeploymentMaintenanceConfiguration> maintenanceConfigurations() {
        return this.maintenanceConfigurations;
    }
    /**
     * @return Defines the maintenance window, when automatic actions can be performed.
     * 
     */
    public List<GetDeploymentMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return Type of the next maintenance.
     * 
     */
    public String nextMaintenanceActionType() {
        return this.nextMaintenanceActionType;
    }
    /**
     * @return Description of the next maintenance.
     * 
     */
    public String nextMaintenanceDescription() {
        return this.nextMaintenanceDescription;
    }
    /**
     * @return An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return Deployment Data for an OggDeployment
     * 
     */
    public List<GetDeploymentOggData> oggDatas() {
        return this.oggDatas;
    }
    /**
     * @return An array of local peers of deployment
     * 
     */
    public List<GetDeploymentPlacement> placements() {
        return this.placements;
    }
    /**
     * @return The private IP address in the customer&#39;s VCN representing the access point for the associated endpoint service in the GoldenGate service VCN.
     * 
     */
    public String privateIpAddress() {
        return this.privateIpAddress;
    }
    /**
     * @return The public IP address representing the access point for the Deployment.
     * 
     */
    public String publicIpAddress() {
        return this.publicIpAddress;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public String sourceDeploymentId() {
        return this.sourceDeploymentId;
    }
    /**
     * @return Possible lifecycle states.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The amount of storage being utilized (in bytes)
     * 
     */
    public String storageUtilizationInBytes() {
        return this.storageUtilizationInBytes;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet of the deployment&#39;s private endpoint. The subnet must be a private subnet. For backward compatibility, public subnets are allowed until May 31 2025, after which the private subnet will be enforced.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The timestamp of last deployment backup scheduled. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-10-25T18:19:29.600Z`.
     * 
     */
    public String timeLastBackupScheduled() {
        return this.timeLastBackupScheduled;
    }
    /**
     * @return The timestamp of next deployment backup scheduled. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-10-26T20:19:29.600Z`.
     * 
     */
    public String timeNextBackupScheduled() {
        return this.timeNextBackupScheduled;
    }
    /**
     * @return The time of next maintenance schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeOfNextMaintenance() {
        return this.timeOfNextMaintenance;
    }
    /**
     * @return The time until OGG version is supported. After this date has passed OGG version will not be available anymore. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeOggVersionSupportedUntil() {
        return this.timeOggVersionSupportedUntil;
    }
    /**
     * @return The time of the last role change. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeRoleChanged() {
        return this.timeRoleChanged;
    }
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Note: Deprecated: Use timeOfNextMaintenance instead, or related upgrade records  to check, when deployment will be forced to upgrade to a newer version. Old description: The date the existing version in use will no longer be considered as usable and an upgrade will be required.  This date is typically 6 months after the version was released for use by GGS.  The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeUpgradeRequired() {
        return this.timeUpgradeRequired;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private List<GetDeploymentBackupSchedule> backupSchedules;
        private Integer byolCpuCoreCountLimit;
        private String category;
        private String compartmentId;
        private Integer cpuCoreCount;
        private Map<String,String> definedTags;
        private String deploymentBackupId;
        private List<GetDeploymentDeploymentDiagnosticData> deploymentDiagnosticDatas;
        private String deploymentId;
        private String deploymentRole;
        private String deploymentType;
        private String deploymentUrl;
        private String description;
        private String displayName;
        private String environmentType;
        private String faultDomain;
        private String fqdn;
        private Map<String,String> freeformTags;
        private String id;
        private List<GetDeploymentIngressIp> ingressIps;
        private Boolean isAutoScalingEnabled;
        private Boolean isByolCpuCoreCountLimitEnabled;
        private Boolean isHealthy;
        private Boolean isLatestVersion;
        private Boolean isLockOverride;
        private Boolean isPublic;
        private Boolean isStorageUtilizationLimitExceeded;
        private String licenseModel;
        private String lifecycleDetails;
        private String lifecycleSubState;
        private String loadBalancerId;
        private String loadBalancerSubnetId;
        private List<GetDeploymentLock> locks;
        private List<GetDeploymentMaintenanceConfiguration> maintenanceConfigurations;
        private List<GetDeploymentMaintenanceWindow> maintenanceWindows;
        private String nextMaintenanceActionType;
        private String nextMaintenanceDescription;
        private List<String> nsgIds;
        private List<GetDeploymentOggData> oggDatas;
        private List<GetDeploymentPlacement> placements;
        private String privateIpAddress;
        private String publicIpAddress;
        private String sourceDeploymentId;
        private String state;
        private String storageUtilizationInBytes;
        private String subnetId;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeLastBackupScheduled;
        private String timeNextBackupScheduled;
        private String timeOfNextMaintenance;
        private String timeOggVersionSupportedUntil;
        private String timeRoleChanged;
        private String timeUpdated;
        private String timeUpgradeRequired;
        public Builder() {}
        public Builder(GetDeploymentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.backupSchedules = defaults.backupSchedules;
    	      this.byolCpuCoreCountLimit = defaults.byolCpuCoreCountLimit;
    	      this.category = defaults.category;
    	      this.compartmentId = defaults.compartmentId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.definedTags = defaults.definedTags;
    	      this.deploymentBackupId = defaults.deploymentBackupId;
    	      this.deploymentDiagnosticDatas = defaults.deploymentDiagnosticDatas;
    	      this.deploymentId = defaults.deploymentId;
    	      this.deploymentRole = defaults.deploymentRole;
    	      this.deploymentType = defaults.deploymentType;
    	      this.deploymentUrl = defaults.deploymentUrl;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.environmentType = defaults.environmentType;
    	      this.faultDomain = defaults.faultDomain;
    	      this.fqdn = defaults.fqdn;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.ingressIps = defaults.ingressIps;
    	      this.isAutoScalingEnabled = defaults.isAutoScalingEnabled;
    	      this.isByolCpuCoreCountLimitEnabled = defaults.isByolCpuCoreCountLimitEnabled;
    	      this.isHealthy = defaults.isHealthy;
    	      this.isLatestVersion = defaults.isLatestVersion;
    	      this.isLockOverride = defaults.isLockOverride;
    	      this.isPublic = defaults.isPublic;
    	      this.isStorageUtilizationLimitExceeded = defaults.isStorageUtilizationLimitExceeded;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lifecycleSubState = defaults.lifecycleSubState;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.loadBalancerSubnetId = defaults.loadBalancerSubnetId;
    	      this.locks = defaults.locks;
    	      this.maintenanceConfigurations = defaults.maintenanceConfigurations;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.nextMaintenanceActionType = defaults.nextMaintenanceActionType;
    	      this.nextMaintenanceDescription = defaults.nextMaintenanceDescription;
    	      this.nsgIds = defaults.nsgIds;
    	      this.oggDatas = defaults.oggDatas;
    	      this.placements = defaults.placements;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.publicIpAddress = defaults.publicIpAddress;
    	      this.sourceDeploymentId = defaults.sourceDeploymentId;
    	      this.state = defaults.state;
    	      this.storageUtilizationInBytes = defaults.storageUtilizationInBytes;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastBackupScheduled = defaults.timeLastBackupScheduled;
    	      this.timeNextBackupScheduled = defaults.timeNextBackupScheduled;
    	      this.timeOfNextMaintenance = defaults.timeOfNextMaintenance;
    	      this.timeOggVersionSupportedUntil = defaults.timeOggVersionSupportedUntil;
    	      this.timeRoleChanged = defaults.timeRoleChanged;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.timeUpgradeRequired = defaults.timeUpgradeRequired;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder backupSchedules(List<GetDeploymentBackupSchedule> backupSchedules) {
            if (backupSchedules == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "backupSchedules");
            }
            this.backupSchedules = backupSchedules;
            return this;
        }
        public Builder backupSchedules(GetDeploymentBackupSchedule... backupSchedules) {
            return backupSchedules(List.of(backupSchedules));
        }
        @CustomType.Setter
        public Builder byolCpuCoreCountLimit(Integer byolCpuCoreCountLimit) {
            if (byolCpuCoreCountLimit == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "byolCpuCoreCountLimit");
            }
            this.byolCpuCoreCountLimit = byolCpuCoreCountLimit;
            return this;
        }
        @CustomType.Setter
        public Builder category(String category) {
            if (category == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "category");
            }
            this.category = category;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            if (cpuCoreCount == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "cpuCoreCount");
            }
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentBackupId(String deploymentBackupId) {
            if (deploymentBackupId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "deploymentBackupId");
            }
            this.deploymentBackupId = deploymentBackupId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentDiagnosticDatas(List<GetDeploymentDeploymentDiagnosticData> deploymentDiagnosticDatas) {
            if (deploymentDiagnosticDatas == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "deploymentDiagnosticDatas");
            }
            this.deploymentDiagnosticDatas = deploymentDiagnosticDatas;
            return this;
        }
        public Builder deploymentDiagnosticDatas(GetDeploymentDeploymentDiagnosticData... deploymentDiagnosticDatas) {
            return deploymentDiagnosticDatas(List.of(deploymentDiagnosticDatas));
        }
        @CustomType.Setter
        public Builder deploymentId(String deploymentId) {
            if (deploymentId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "deploymentId");
            }
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentRole(String deploymentRole) {
            if (deploymentRole == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "deploymentRole");
            }
            this.deploymentRole = deploymentRole;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(String deploymentType) {
            if (deploymentType == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "deploymentType");
            }
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentUrl(String deploymentUrl) {
            if (deploymentUrl == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "deploymentUrl");
            }
            this.deploymentUrl = deploymentUrl;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder environmentType(String environmentType) {
            if (environmentType == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "environmentType");
            }
            this.environmentType = environmentType;
            return this;
        }
        @CustomType.Setter
        public Builder faultDomain(String faultDomain) {
            if (faultDomain == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "faultDomain");
            }
            this.faultDomain = faultDomain;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ingressIps(List<GetDeploymentIngressIp> ingressIps) {
            if (ingressIps == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "ingressIps");
            }
            this.ingressIps = ingressIps;
            return this;
        }
        public Builder ingressIps(GetDeploymentIngressIp... ingressIps) {
            return ingressIps(List.of(ingressIps));
        }
        @CustomType.Setter
        public Builder isAutoScalingEnabled(Boolean isAutoScalingEnabled) {
            if (isAutoScalingEnabled == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "isAutoScalingEnabled");
            }
            this.isAutoScalingEnabled = isAutoScalingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isByolCpuCoreCountLimitEnabled(Boolean isByolCpuCoreCountLimitEnabled) {
            if (isByolCpuCoreCountLimitEnabled == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "isByolCpuCoreCountLimitEnabled");
            }
            this.isByolCpuCoreCountLimitEnabled = isByolCpuCoreCountLimitEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isHealthy(Boolean isHealthy) {
            if (isHealthy == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "isHealthy");
            }
            this.isHealthy = isHealthy;
            return this;
        }
        @CustomType.Setter
        public Builder isLatestVersion(Boolean isLatestVersion) {
            if (isLatestVersion == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "isLatestVersion");
            }
            this.isLatestVersion = isLatestVersion;
            return this;
        }
        @CustomType.Setter
        public Builder isLockOverride(Boolean isLockOverride) {
            if (isLockOverride == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "isLockOverride");
            }
            this.isLockOverride = isLockOverride;
            return this;
        }
        @CustomType.Setter
        public Builder isPublic(Boolean isPublic) {
            if (isPublic == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "isPublic");
            }
            this.isPublic = isPublic;
            return this;
        }
        @CustomType.Setter
        public Builder isStorageUtilizationLimitExceeded(Boolean isStorageUtilizationLimitExceeded) {
            if (isStorageUtilizationLimitExceeded == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "isStorageUtilizationLimitExceeded");
            }
            this.isStorageUtilizationLimitExceeded = isStorageUtilizationLimitExceeded;
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(String licenseModel) {
            if (licenseModel == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "licenseModel");
            }
            this.licenseModel = licenseModel;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleSubState(String lifecycleSubState) {
            if (lifecycleSubState == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "lifecycleSubState");
            }
            this.lifecycleSubState = lifecycleSubState;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerId(String loadBalancerId) {
            if (loadBalancerId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "loadBalancerId");
            }
            this.loadBalancerId = loadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerSubnetId(String loadBalancerSubnetId) {
            if (loadBalancerSubnetId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "loadBalancerSubnetId");
            }
            this.loadBalancerSubnetId = loadBalancerSubnetId;
            return this;
        }
        @CustomType.Setter
        public Builder locks(List<GetDeploymentLock> locks) {
            if (locks == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "locks");
            }
            this.locks = locks;
            return this;
        }
        public Builder locks(GetDeploymentLock... locks) {
            return locks(List.of(locks));
        }
        @CustomType.Setter
        public Builder maintenanceConfigurations(List<GetDeploymentMaintenanceConfiguration> maintenanceConfigurations) {
            if (maintenanceConfigurations == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "maintenanceConfigurations");
            }
            this.maintenanceConfigurations = maintenanceConfigurations;
            return this;
        }
        public Builder maintenanceConfigurations(GetDeploymentMaintenanceConfiguration... maintenanceConfigurations) {
            return maintenanceConfigurations(List.of(maintenanceConfigurations));
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetDeploymentMaintenanceWindow> maintenanceWindows) {
            if (maintenanceWindows == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "maintenanceWindows");
            }
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetDeploymentMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder nextMaintenanceActionType(String nextMaintenanceActionType) {
            if (nextMaintenanceActionType == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "nextMaintenanceActionType");
            }
            this.nextMaintenanceActionType = nextMaintenanceActionType;
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceDescription(String nextMaintenanceDescription) {
            if (nextMaintenanceDescription == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "nextMaintenanceDescription");
            }
            this.nextMaintenanceDescription = nextMaintenanceDescription;
            return this;
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            if (nsgIds == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "nsgIds");
            }
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder oggDatas(List<GetDeploymentOggData> oggDatas) {
            if (oggDatas == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "oggDatas");
            }
            this.oggDatas = oggDatas;
            return this;
        }
        public Builder oggDatas(GetDeploymentOggData... oggDatas) {
            return oggDatas(List.of(oggDatas));
        }
        @CustomType.Setter
        public Builder placements(List<GetDeploymentPlacement> placements) {
            if (placements == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "placements");
            }
            this.placements = placements;
            return this;
        }
        public Builder placements(GetDeploymentPlacement... placements) {
            return placements(List.of(placements));
        }
        @CustomType.Setter
        public Builder privateIpAddress(String privateIpAddress) {
            if (privateIpAddress == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "privateIpAddress");
            }
            this.privateIpAddress = privateIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder publicIpAddress(String publicIpAddress) {
            if (publicIpAddress == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "publicIpAddress");
            }
            this.publicIpAddress = publicIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder sourceDeploymentId(String sourceDeploymentId) {
            if (sourceDeploymentId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "sourceDeploymentId");
            }
            this.sourceDeploymentId = sourceDeploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder storageUtilizationInBytes(String storageUtilizationInBytes) {
            if (storageUtilizationInBytes == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "storageUtilizationInBytes");
            }
            this.storageUtilizationInBytes = storageUtilizationInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastBackupScheduled(String timeLastBackupScheduled) {
            if (timeLastBackupScheduled == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "timeLastBackupScheduled");
            }
            this.timeLastBackupScheduled = timeLastBackupScheduled;
            return this;
        }
        @CustomType.Setter
        public Builder timeNextBackupScheduled(String timeNextBackupScheduled) {
            if (timeNextBackupScheduled == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "timeNextBackupScheduled");
            }
            this.timeNextBackupScheduled = timeNextBackupScheduled;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfNextMaintenance(String timeOfNextMaintenance) {
            if (timeOfNextMaintenance == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "timeOfNextMaintenance");
            }
            this.timeOfNextMaintenance = timeOfNextMaintenance;
            return this;
        }
        @CustomType.Setter
        public Builder timeOggVersionSupportedUntil(String timeOggVersionSupportedUntil) {
            if (timeOggVersionSupportedUntil == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "timeOggVersionSupportedUntil");
            }
            this.timeOggVersionSupportedUntil = timeOggVersionSupportedUntil;
            return this;
        }
        @CustomType.Setter
        public Builder timeRoleChanged(String timeRoleChanged) {
            if (timeRoleChanged == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "timeRoleChanged");
            }
            this.timeRoleChanged = timeRoleChanged;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpgradeRequired(String timeUpgradeRequired) {
            if (timeUpgradeRequired == null) {
              throw new MissingRequiredPropertyException("GetDeploymentResult", "timeUpgradeRequired");
            }
            this.timeUpgradeRequired = timeUpgradeRequired;
            return this;
        }
        public GetDeploymentResult build() {
            final var _resultValue = new GetDeploymentResult();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.backupSchedules = backupSchedules;
            _resultValue.byolCpuCoreCountLimit = byolCpuCoreCountLimit;
            _resultValue.category = category;
            _resultValue.compartmentId = compartmentId;
            _resultValue.cpuCoreCount = cpuCoreCount;
            _resultValue.definedTags = definedTags;
            _resultValue.deploymentBackupId = deploymentBackupId;
            _resultValue.deploymentDiagnosticDatas = deploymentDiagnosticDatas;
            _resultValue.deploymentId = deploymentId;
            _resultValue.deploymentRole = deploymentRole;
            _resultValue.deploymentType = deploymentType;
            _resultValue.deploymentUrl = deploymentUrl;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.environmentType = environmentType;
            _resultValue.faultDomain = faultDomain;
            _resultValue.fqdn = fqdn;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.ingressIps = ingressIps;
            _resultValue.isAutoScalingEnabled = isAutoScalingEnabled;
            _resultValue.isByolCpuCoreCountLimitEnabled = isByolCpuCoreCountLimitEnabled;
            _resultValue.isHealthy = isHealthy;
            _resultValue.isLatestVersion = isLatestVersion;
            _resultValue.isLockOverride = isLockOverride;
            _resultValue.isPublic = isPublic;
            _resultValue.isStorageUtilizationLimitExceeded = isStorageUtilizationLimitExceeded;
            _resultValue.licenseModel = licenseModel;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.lifecycleSubState = lifecycleSubState;
            _resultValue.loadBalancerId = loadBalancerId;
            _resultValue.loadBalancerSubnetId = loadBalancerSubnetId;
            _resultValue.locks = locks;
            _resultValue.maintenanceConfigurations = maintenanceConfigurations;
            _resultValue.maintenanceWindows = maintenanceWindows;
            _resultValue.nextMaintenanceActionType = nextMaintenanceActionType;
            _resultValue.nextMaintenanceDescription = nextMaintenanceDescription;
            _resultValue.nsgIds = nsgIds;
            _resultValue.oggDatas = oggDatas;
            _resultValue.placements = placements;
            _resultValue.privateIpAddress = privateIpAddress;
            _resultValue.publicIpAddress = publicIpAddress;
            _resultValue.sourceDeploymentId = sourceDeploymentId;
            _resultValue.state = state;
            _resultValue.storageUtilizationInBytes = storageUtilizationInBytes;
            _resultValue.subnetId = subnetId;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeLastBackupScheduled = timeLastBackupScheduled;
            _resultValue.timeNextBackupScheduled = timeNextBackupScheduled;
            _resultValue.timeOfNextMaintenance = timeOfNextMaintenance;
            _resultValue.timeOggVersionSupportedUntil = timeOggVersionSupportedUntil;
            _resultValue.timeRoleChanged = timeRoleChanged;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.timeUpgradeRequired = timeUpgradeRequired;
            return _resultValue;
        }
    }
}
