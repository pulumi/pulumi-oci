// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentTypesDeploymentTypeCollection;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentTypesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeploymentTypesResult {
    private String compartmentId;
    /**
     * @return The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
     * 
     */
    private @Nullable String deploymentType;
    /**
     * @return The list of deployment_type_collection.
     * 
     */
    private @Nullable List<GetDeploymentTypesDeploymentTypeCollection> deploymentTypeCollections;
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetDeploymentTypesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Version of OGG
     * 
     */
    private @Nullable String oggVersion;

    private GetDeploymentTypesResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
     * 
     */
    public Optional<String> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }
    /**
     * @return The list of deployment_type_collection.
     * 
     */
    public List<GetDeploymentTypesDeploymentTypeCollection> deploymentTypeCollections() {
        return this.deploymentTypeCollections == null ? List.of() : this.deploymentTypeCollections;
    }
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetDeploymentTypesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Version of OGG
     * 
     */
    public Optional<String> oggVersion() {
        return Optional.ofNullable(this.oggVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentTypesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String deploymentType;
        private @Nullable List<GetDeploymentTypesDeploymentTypeCollection> deploymentTypeCollections;
        private @Nullable String displayName;
        private @Nullable List<GetDeploymentTypesFilter> filters;
        private @Nullable String id;
        private @Nullable String oggVersion;
        public Builder() {}
        public Builder(GetDeploymentTypesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.deploymentType = defaults.deploymentType;
    	      this.deploymentTypeCollections = defaults.deploymentTypeCollections;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.oggVersion = defaults.oggVersion;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(@Nullable String deploymentType) {
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentTypeCollections(@Nullable List<GetDeploymentTypesDeploymentTypeCollection> deploymentTypeCollections) {
            this.deploymentTypeCollections = deploymentTypeCollections;
            return this;
        }
        public Builder deploymentTypeCollections(GetDeploymentTypesDeploymentTypeCollection... deploymentTypeCollections) {
            return deploymentTypeCollections(List.of(deploymentTypeCollections));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDeploymentTypesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetDeploymentTypesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder oggVersion(@Nullable String oggVersion) {
            this.oggVersion = oggVersion;
            return this;
        }
        public GetDeploymentTypesResult build() {
            final var o = new GetDeploymentTypesResult();
            o.compartmentId = compartmentId;
            o.deploymentType = deploymentType;
            o.deploymentTypeCollections = deploymentTypeCollections;
            o.displayName = displayName;
            o.filters = filters;
            o.id = id;
            o.oggVersion = oggVersion;
            return o;
        }
    }
}
