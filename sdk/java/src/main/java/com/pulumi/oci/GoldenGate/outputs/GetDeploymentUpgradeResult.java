// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDeploymentUpgradeResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    private @Nullable String deploymentId;
    private String deploymentUpgradeId;
    /**
     * @return The type of the deployment upgrade: MANUAL or AUTOMATIC
     * 
     */
    private @Nullable String deploymentUpgradeType;
    /**
     * @return Metadata about this specific object.
     * 
     */
    private @Nullable String description;
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicates if cancel is allowed. Scheduled upgrade can be cancelled only if target version is not forced by service,  otherwise only reschedule allowed.
     * 
     */
    private @Nullable Boolean isCancelAllowed;
    /**
     * @return Indicates if reschedule is allowed. Upgrade can be rescheduled postponed until the end of the service defined auto-upgrade period.
     * 
     */
    private @Nullable Boolean isRescheduleAllowed;
    /**
     * @return Indicates if rollback is allowed. In practice only the last upgrade can be rolled back.
     * * Manual upgrade is allowed to rollback only until the old version isn&#39;t deprecated yet.
     * * Automatic upgrade by default is not allowed, unless a serious issue does not justify.
     * 
     */
    private @Nullable Boolean isRollbackAllowed;
    /**
     * @return Indicates if OGG release contains security fix.
     * 
     */
    private @Nullable Boolean isSecurityFix;
    /**
     * @return Indicates if upgrade notifications are snoozed or not.
     * 
     */
    private @Nullable Boolean isSnoozed;
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return Possible GGS lifecycle sub-states.
     * 
     */
    private @Nullable String lifecycleSubState;
    /**
     * @return Version of OGG
     * 
     */
    private @Nullable String oggVersion;
    /**
     * @return Version of OGG
     * 
     */
    private @Nullable String previousOggVersion;
    /**
     * @return The type of release.
     * 
     */
    private @Nullable String releaseType;
    /**
     * @return Possible lifecycle states.
     * 
     */
    private @Nullable String state;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the request was finished. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeFinished;
    /**
     * @return The time until OGG version is supported. After this date has passed OGG version will not be available anymore. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeOggVersionSupportedUntil;
    /**
     * @return The time the resource was released. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeReleased;
    /**
     * @return The time of upgrade schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeSchedule;
    /**
     * @return Indicates the latest time until the deployment upgrade could be rescheduled. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeScheduleMax;
    /**
     * @return The time the upgrade notifications are snoozed until. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeSnoozedUntil;
    /**
     * @return The date and time the request was started. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeStarted;
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private @Nullable String timeUpdated;

    private GetDeploymentUpgradeResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public Optional<String> deploymentId() {
        return Optional.ofNullable(this.deploymentId);
    }
    public String deploymentUpgradeId() {
        return this.deploymentUpgradeId;
    }
    /**
     * @return The type of the deployment upgrade: MANUAL or AUTOMATIC
     * 
     */
    public Optional<String> deploymentUpgradeType() {
        return Optional.ofNullable(this.deploymentUpgradeType);
    }
    /**
     * @return Metadata about this specific object.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicates if cancel is allowed. Scheduled upgrade can be cancelled only if target version is not forced by service,  otherwise only reschedule allowed.
     * 
     */
    public Optional<Boolean> isCancelAllowed() {
        return Optional.ofNullable(this.isCancelAllowed);
    }
    /**
     * @return Indicates if reschedule is allowed. Upgrade can be rescheduled postponed until the end of the service defined auto-upgrade period.
     * 
     */
    public Optional<Boolean> isRescheduleAllowed() {
        return Optional.ofNullable(this.isRescheduleAllowed);
    }
    /**
     * @return Indicates if rollback is allowed. In practice only the last upgrade can be rolled back.
     * * Manual upgrade is allowed to rollback only until the old version isn&#39;t deprecated yet.
     * * Automatic upgrade by default is not allowed, unless a serious issue does not justify.
     * 
     */
    public Optional<Boolean> isRollbackAllowed() {
        return Optional.ofNullable(this.isRollbackAllowed);
    }
    /**
     * @return Indicates if OGG release contains security fix.
     * 
     */
    public Optional<Boolean> isSecurityFix() {
        return Optional.ofNullable(this.isSecurityFix);
    }
    /**
     * @return Indicates if upgrade notifications are snoozed or not.
     * 
     */
    public Optional<Boolean> isSnoozed() {
        return Optional.ofNullable(this.isSnoozed);
    }
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return Possible GGS lifecycle sub-states.
     * 
     */
    public Optional<String> lifecycleSubState() {
        return Optional.ofNullable(this.lifecycleSubState);
    }
    /**
     * @return Version of OGG
     * 
     */
    public Optional<String> oggVersion() {
        return Optional.ofNullable(this.oggVersion);
    }
    /**
     * @return Version of OGG
     * 
     */
    public Optional<String> previousOggVersion() {
        return Optional.ofNullable(this.previousOggVersion);
    }
    /**
     * @return The type of release.
     * 
     */
    public Optional<String> releaseType() {
        return Optional.ofNullable(this.releaseType);
    }
    /**
     * @return Possible lifecycle states.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the request was finished. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }
    /**
     * @return The time until OGG version is supported. After this date has passed OGG version will not be available anymore. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeOggVersionSupportedUntil() {
        return Optional.ofNullable(this.timeOggVersionSupportedUntil);
    }
    /**
     * @return The time the resource was released. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeReleased() {
        return Optional.ofNullable(this.timeReleased);
    }
    /**
     * @return The time of upgrade schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeSchedule() {
        return Optional.ofNullable(this.timeSchedule);
    }
    /**
     * @return Indicates the latest time until the deployment upgrade could be rescheduled. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeScheduleMax() {
        return Optional.ofNullable(this.timeScheduleMax);
    }
    /**
     * @return The time the upgrade notifications are snoozed until. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeSnoozedUntil() {
        return Optional.ofNullable(this.timeSnoozedUntil);
    }
    /**
     * @return The date and time the request was started. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentUpgradeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String deploymentId;
        private String deploymentUpgradeId;
        private @Nullable String deploymentUpgradeType;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isCancelAllowed;
        private @Nullable Boolean isRescheduleAllowed;
        private @Nullable Boolean isRollbackAllowed;
        private @Nullable Boolean isSecurityFix;
        private @Nullable Boolean isSnoozed;
        private @Nullable String lifecycleDetails;
        private @Nullable String lifecycleSubState;
        private @Nullable String oggVersion;
        private @Nullable String previousOggVersion;
        private @Nullable String releaseType;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeFinished;
        private @Nullable String timeOggVersionSupportedUntil;
        private @Nullable String timeReleased;
        private @Nullable String timeSchedule;
        private @Nullable String timeScheduleMax;
        private @Nullable String timeSnoozedUntil;
        private @Nullable String timeStarted;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetDeploymentUpgradeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deploymentId = defaults.deploymentId;
    	      this.deploymentUpgradeId = defaults.deploymentUpgradeId;
    	      this.deploymentUpgradeType = defaults.deploymentUpgradeType;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isCancelAllowed = defaults.isCancelAllowed;
    	      this.isRescheduleAllowed = defaults.isRescheduleAllowed;
    	      this.isRollbackAllowed = defaults.isRollbackAllowed;
    	      this.isSecurityFix = defaults.isSecurityFix;
    	      this.isSnoozed = defaults.isSnoozed;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lifecycleSubState = defaults.lifecycleSubState;
    	      this.oggVersion = defaults.oggVersion;
    	      this.previousOggVersion = defaults.previousOggVersion;
    	      this.releaseType = defaults.releaseType;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeOggVersionSupportedUntil = defaults.timeOggVersionSupportedUntil;
    	      this.timeReleased = defaults.timeReleased;
    	      this.timeSchedule = defaults.timeSchedule;
    	      this.timeScheduleMax = defaults.timeScheduleMax;
    	      this.timeSnoozedUntil = defaults.timeSnoozedUntil;
    	      this.timeStarted = defaults.timeStarted;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentId(@Nullable String deploymentId) {
            this.deploymentId = deploymentId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentUpgradeId(String deploymentUpgradeId) {
            this.deploymentUpgradeId = Objects.requireNonNull(deploymentUpgradeId);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentUpgradeType(@Nullable String deploymentUpgradeType) {
            this.deploymentUpgradeType = deploymentUpgradeType;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCancelAllowed(@Nullable Boolean isCancelAllowed) {
            this.isCancelAllowed = isCancelAllowed;
            return this;
        }
        @CustomType.Setter
        public Builder isRescheduleAllowed(@Nullable Boolean isRescheduleAllowed) {
            this.isRescheduleAllowed = isRescheduleAllowed;
            return this;
        }
        @CustomType.Setter
        public Builder isRollbackAllowed(@Nullable Boolean isRollbackAllowed) {
            this.isRollbackAllowed = isRollbackAllowed;
            return this;
        }
        @CustomType.Setter
        public Builder isSecurityFix(@Nullable Boolean isSecurityFix) {
            this.isSecurityFix = isSecurityFix;
            return this;
        }
        @CustomType.Setter
        public Builder isSnoozed(@Nullable Boolean isSnoozed) {
            this.isSnoozed = isSnoozed;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleSubState(@Nullable String lifecycleSubState) {
            this.lifecycleSubState = lifecycleSubState;
            return this;
        }
        @CustomType.Setter
        public Builder oggVersion(@Nullable String oggVersion) {
            this.oggVersion = oggVersion;
            return this;
        }
        @CustomType.Setter
        public Builder previousOggVersion(@Nullable String previousOggVersion) {
            this.previousOggVersion = previousOggVersion;
            return this;
        }
        @CustomType.Setter
        public Builder releaseType(@Nullable String releaseType) {
            this.releaseType = releaseType;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(@Nullable String timeFinished) {
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeOggVersionSupportedUntil(@Nullable String timeOggVersionSupportedUntil) {
            this.timeOggVersionSupportedUntil = timeOggVersionSupportedUntil;
            return this;
        }
        @CustomType.Setter
        public Builder timeReleased(@Nullable String timeReleased) {
            this.timeReleased = timeReleased;
            return this;
        }
        @CustomType.Setter
        public Builder timeSchedule(@Nullable String timeSchedule) {
            this.timeSchedule = timeSchedule;
            return this;
        }
        @CustomType.Setter
        public Builder timeScheduleMax(@Nullable String timeScheduleMax) {
            this.timeScheduleMax = timeScheduleMax;
            return this;
        }
        @CustomType.Setter
        public Builder timeSnoozedUntil(@Nullable String timeSnoozedUntil) {
            this.timeSnoozedUntil = timeSnoozedUntil;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {
            this.timeStarted = timeStarted;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetDeploymentUpgradeResult build() {
            final var o = new GetDeploymentUpgradeResult();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.deploymentId = deploymentId;
            o.deploymentUpgradeId = deploymentUpgradeId;
            o.deploymentUpgradeType = deploymentUpgradeType;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isCancelAllowed = isCancelAllowed;
            o.isRescheduleAllowed = isRescheduleAllowed;
            o.isRollbackAllowed = isRollbackAllowed;
            o.isSecurityFix = isSecurityFix;
            o.isSnoozed = isSnoozed;
            o.lifecycleDetails = lifecycleDetails;
            o.lifecycleSubState = lifecycleSubState;
            o.oggVersion = oggVersion;
            o.previousOggVersion = previousOggVersion;
            o.releaseType = releaseType;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeFinished = timeFinished;
            o.timeOggVersionSupportedUntil = timeOggVersionSupportedUntil;
            o.timeReleased = timeReleased;
            o.timeSchedule = timeSchedule;
            o.timeScheduleMax = timeScheduleMax;
            o.timeSnoozedUntil = timeSnoozedUntil;
            o.timeStarted = timeStarted;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
