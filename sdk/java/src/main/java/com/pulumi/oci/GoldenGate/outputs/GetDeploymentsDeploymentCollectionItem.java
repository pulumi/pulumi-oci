// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentsDeploymentCollectionItemDeploymentDiagnosticData;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentsDeploymentCollectionItemIngressIp;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentsDeploymentCollectionItemLock;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentsDeploymentCollectionItemMaintenanceWindow;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentsDeploymentCollectionItemOggData;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDeploymentsDeploymentCollectionItem {
    /**
     * @return The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     * 
     */
    private String compartmentId;
    /**
     * @return The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    private Integer cpuCoreCount;
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    private String deploymentBackupId;
    /**
     * @return Information regarding the deployment diagnostic collection
     * 
     */
    private List<GetDeploymentsDeploymentCollectionItemDeploymentDiagnosticData> deploymentDiagnosticDatas;
    /**
     * @return The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
     * 
     */
    private String deploymentType;
    /**
     * @return The URL of a resource.
     * 
     */
    private String deploymentUrl;
    /**
     * @return Metadata about this specific object.
     * 
     */
    private String description;
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    private String displayName;
    /**
     * @return A filter to return only the resources that match the &#39;fqdn&#39; given.
     * 
     */
    private String fqdn;
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    private String id;
    /**
     * @return List of ingress IP addresses from where the GoldenGate deployment connects to this connection&#39;s privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
     * 
     */
    private List<GetDeploymentsDeploymentCollectionItemIngressIp> ingressIps;
    /**
     * @return Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    private Boolean isAutoScalingEnabled;
    /**
     * @return True if all of the aggregate resources are working correctly.
     * 
     */
    private Boolean isHealthy;
    /**
     * @return Indicates if the resource is the the latest available version.
     * 
     */
    private Boolean isLatestVersion;
    private Boolean isLockOverride;
    /**
     * @return True if this object is publicly available.
     * 
     */
    private Boolean isPublic;
    /**
     * @return Indicator will be true if the amount of storage being utilized exceeds the allowable storage utilization limit.  Exceeding the limit may be an indication of a misconfiguration of the deployment&#39;s GoldenGate service.
     * 
     */
    private Boolean isStorageUtilizationLimitExceeded;
    /**
     * @return The Oracle license model that applies to a Deployment.
     * 
     */
    private String licenseModel;
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleSubState&#39; given.
     * 
     */
    private String lifecycleSubState;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the loadbalancer in the customer&#39;s subnet. The loadbalancer of the public deployment created in the customer subnet.
     * 
     */
    private String loadBalancerId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a public subnet in the customer tenancy. Can be provided only for public deployments. If provided, the loadbalancer will be created in this subnet instead of the service tenancy. For backward compatiblity this is an optional property for now, but it will become mandatory (for public deployments only) after October 1, 2024.
     * 
     */
    private String loadBalancerSubnetId;
    /**
     * @return Locks associated with this resource.
     * 
     */
    private List<GetDeploymentsDeploymentCollectionItemLock> locks;
    /**
     * @return Attributes for configuring automatic deployment maintenance.
     * 
     */
    private List<GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration> maintenanceConfigurations;
    /**
     * @return Defines the maintenance window, when automatic actions can be performed.
     * 
     */
    private List<GetDeploymentsDeploymentCollectionItemMaintenanceWindow> maintenanceWindows;
    /**
     * @return Type of the next maintenance.
     * 
     */
    private String nextMaintenanceActionType;
    /**
     * @return Description of the next maintenance.
     * 
     */
    private String nextMaintenanceDescription;
    /**
     * @return An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     * 
     */
    private List<String> nsgIds;
    /**
     * @return Deployment Data for an OggDeployment
     * 
     */
    private List<GetDeploymentsDeploymentCollectionItemOggData> oggDatas;
    /**
     * @return The private IP address in the customer&#39;s VCN representing the access point for the associated endpoint service in the GoldenGate service VCN.
     * 
     */
    private String privateIpAddress;
    /**
     * @return The public IP address representing the access point for the Deployment.
     * 
     */
    private String publicIpAddress;
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleState&#39; given.
     * 
     */
    private String state;
    /**
     * @return The amount of storage being utilized (in bytes)
     * 
     */
    private String storageUtilizationInBytes;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet of the deployment&#39;s private endpoint. The subnet must be a private subnet. For backward compatibility, public subnets are allowed until May 31 2025, after which the private subnet will be enforced.
     * 
     */
    private String subnetId;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeCreated;
    /**
     * @return The time of next maintenance schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeOfNextMaintenance;
    /**
     * @return The time until OGG version is supported. After this date has passed OGG version will not be available anymore. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeOggVersionSupportedUntil;
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeUpdated;
    /**
     * @return Note: Deprecated: Use timeOfNextMaintenance instead, or related upgrade records  to check, when deployment will be forced to upgrade to a newer version. Old description: The date the existing version in use will no longer be considered as usable and an upgrade will be required.  This date is typically 6 months after the version was released for use by GGS.  The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeUpgradeRequired;

    private GetDeploymentsDeploymentCollectionItem() {}
    /**
     * @return The OCID of the compartment that contains the work request. Work requests should be scoped  to the same compartment as the resource the work request affects. If the work request concerns  multiple resources, and those resources are not in the same compartment, it is up to the service team  to pick the primary resource whose compartment should be used.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    public String deploymentBackupId() {
        return this.deploymentBackupId;
    }
    /**
     * @return Information regarding the deployment diagnostic collection
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemDeploymentDiagnosticData> deploymentDiagnosticDatas() {
        return this.deploymentDiagnosticDatas;
    }
    /**
     * @return The type of deployment, which can be any one of the Allowed values.  NOTE: Use of the value &#39;OGG&#39; is maintained for backward compatibility purposes.  Its use is discouraged in favor of &#39;DATABASE_ORACLE&#39;.
     * 
     */
    public String deploymentType() {
        return this.deploymentType;
    }
    /**
     * @return The URL of a resource.
     * 
     */
    public String deploymentUrl() {
        return this.deploymentUrl;
    }
    /**
     * @return Metadata about this specific object.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return A filter to return only the resources that match the &#39;fqdn&#39; given.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of ingress IP addresses from where the GoldenGate deployment connects to this connection&#39;s privateIp.  Customers may optionally set up ingress security rules to restrict traffic from these IP addresses.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemIngressIp> ingressIps() {
        return this.ingressIps;
    }
    /**
     * @return Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    public Boolean isAutoScalingEnabled() {
        return this.isAutoScalingEnabled;
    }
    /**
     * @return True if all of the aggregate resources are working correctly.
     * 
     */
    public Boolean isHealthy() {
        return this.isHealthy;
    }
    /**
     * @return Indicates if the resource is the the latest available version.
     * 
     */
    public Boolean isLatestVersion() {
        return this.isLatestVersion;
    }
    public Boolean isLockOverride() {
        return this.isLockOverride;
    }
    /**
     * @return True if this object is publicly available.
     * 
     */
    public Boolean isPublic() {
        return this.isPublic;
    }
    /**
     * @return Indicator will be true if the amount of storage being utilized exceeds the allowable storage utilization limit.  Exceeding the limit may be an indication of a misconfiguration of the deployment&#39;s GoldenGate service.
     * 
     */
    public Boolean isStorageUtilizationLimitExceeded() {
        return this.isStorageUtilizationLimitExceeded;
    }
    /**
     * @return The Oracle license model that applies to a Deployment.
     * 
     */
    public String licenseModel() {
        return this.licenseModel;
    }
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleSubState&#39; given.
     * 
     */
    public String lifecycleSubState() {
        return this.lifecycleSubState;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the loadbalancer in the customer&#39;s subnet. The loadbalancer of the public deployment created in the customer subnet.
     * 
     */
    public String loadBalancerId() {
        return this.loadBalancerId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a public subnet in the customer tenancy. Can be provided only for public deployments. If provided, the loadbalancer will be created in this subnet instead of the service tenancy. For backward compatiblity this is an optional property for now, but it will become mandatory (for public deployments only) after October 1, 2024.
     * 
     */
    public String loadBalancerSubnetId() {
        return this.loadBalancerSubnetId;
    }
    /**
     * @return Locks associated with this resource.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemLock> locks() {
        return this.locks;
    }
    /**
     * @return Attributes for configuring automatic deployment maintenance.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration> maintenanceConfigurations() {
        return this.maintenanceConfigurations;
    }
    /**
     * @return Defines the maintenance window, when automatic actions can be performed.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return Type of the next maintenance.
     * 
     */
    public String nextMaintenanceActionType() {
        return this.nextMaintenanceActionType;
    }
    /**
     * @return Description of the next maintenance.
     * 
     */
    public String nextMaintenanceDescription() {
        return this.nextMaintenanceDescription;
    }
    /**
     * @return An array of Network Security Group OCIDs used to define network access for either Deployments or Connections.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return Deployment Data for an OggDeployment
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemOggData> oggDatas() {
        return this.oggDatas;
    }
    /**
     * @return The private IP address in the customer&#39;s VCN representing the access point for the associated endpoint service in the GoldenGate service VCN.
     * 
     */
    public String privateIpAddress() {
        return this.privateIpAddress;
    }
    /**
     * @return The public IP address representing the access point for the Deployment.
     * 
     */
    public String publicIpAddress() {
        return this.publicIpAddress;
    }
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleState&#39; given.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The amount of storage being utilized (in bytes)
     * 
     */
    public String storageUtilizationInBytes() {
        return this.storageUtilizationInBytes;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet of the deployment&#39;s private endpoint. The subnet must be a private subnet. For backward compatibility, public subnets are allowed until May 31 2025, after which the private subnet will be enforced.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time of next maintenance schedule. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeOfNextMaintenance() {
        return this.timeOfNextMaintenance;
    }
    /**
     * @return The time until OGG version is supported. After this date has passed OGG version will not be available anymore. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeOggVersionSupportedUntil() {
        return this.timeOggVersionSupportedUntil;
    }
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Note: Deprecated: Use timeOfNextMaintenance instead, or related upgrade records  to check, when deployment will be forced to upgrade to a newer version. Old description: The date the existing version in use will no longer be considered as usable and an upgrade will be required.  This date is typically 6 months after the version was released for use by GGS.  The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeUpgradeRequired() {
        return this.timeUpgradeRequired;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsDeploymentCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Integer cpuCoreCount;
        private Map<String,String> definedTags;
        private String deploymentBackupId;
        private List<GetDeploymentsDeploymentCollectionItemDeploymentDiagnosticData> deploymentDiagnosticDatas;
        private String deploymentType;
        private String deploymentUrl;
        private String description;
        private String displayName;
        private String fqdn;
        private Map<String,String> freeformTags;
        private String id;
        private List<GetDeploymentsDeploymentCollectionItemIngressIp> ingressIps;
        private Boolean isAutoScalingEnabled;
        private Boolean isHealthy;
        private Boolean isLatestVersion;
        private Boolean isLockOverride;
        private Boolean isPublic;
        private Boolean isStorageUtilizationLimitExceeded;
        private String licenseModel;
        private String lifecycleDetails;
        private String lifecycleSubState;
        private String loadBalancerId;
        private String loadBalancerSubnetId;
        private List<GetDeploymentsDeploymentCollectionItemLock> locks;
        private List<GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration> maintenanceConfigurations;
        private List<GetDeploymentsDeploymentCollectionItemMaintenanceWindow> maintenanceWindows;
        private String nextMaintenanceActionType;
        private String nextMaintenanceDescription;
        private List<String> nsgIds;
        private List<GetDeploymentsDeploymentCollectionItemOggData> oggDatas;
        private String privateIpAddress;
        private String publicIpAddress;
        private String state;
        private String storageUtilizationInBytes;
        private String subnetId;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeOfNextMaintenance;
        private String timeOggVersionSupportedUntil;
        private String timeUpdated;
        private String timeUpgradeRequired;
        public Builder() {}
        public Builder(GetDeploymentsDeploymentCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.definedTags = defaults.definedTags;
    	      this.deploymentBackupId = defaults.deploymentBackupId;
    	      this.deploymentDiagnosticDatas = defaults.deploymentDiagnosticDatas;
    	      this.deploymentType = defaults.deploymentType;
    	      this.deploymentUrl = defaults.deploymentUrl;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.fqdn = defaults.fqdn;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.ingressIps = defaults.ingressIps;
    	      this.isAutoScalingEnabled = defaults.isAutoScalingEnabled;
    	      this.isHealthy = defaults.isHealthy;
    	      this.isLatestVersion = defaults.isLatestVersion;
    	      this.isLockOverride = defaults.isLockOverride;
    	      this.isPublic = defaults.isPublic;
    	      this.isStorageUtilizationLimitExceeded = defaults.isStorageUtilizationLimitExceeded;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lifecycleSubState = defaults.lifecycleSubState;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.loadBalancerSubnetId = defaults.loadBalancerSubnetId;
    	      this.locks = defaults.locks;
    	      this.maintenanceConfigurations = defaults.maintenanceConfigurations;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.nextMaintenanceActionType = defaults.nextMaintenanceActionType;
    	      this.nextMaintenanceDescription = defaults.nextMaintenanceDescription;
    	      this.nsgIds = defaults.nsgIds;
    	      this.oggDatas = defaults.oggDatas;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.publicIpAddress = defaults.publicIpAddress;
    	      this.state = defaults.state;
    	      this.storageUtilizationInBytes = defaults.storageUtilizationInBytes;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfNextMaintenance = defaults.timeOfNextMaintenance;
    	      this.timeOggVersionSupportedUntil = defaults.timeOggVersionSupportedUntil;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.timeUpgradeRequired = defaults.timeUpgradeRequired;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            if (cpuCoreCount == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "cpuCoreCount");
            }
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentBackupId(String deploymentBackupId) {
            if (deploymentBackupId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "deploymentBackupId");
            }
            this.deploymentBackupId = deploymentBackupId;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentDiagnosticDatas(List<GetDeploymentsDeploymentCollectionItemDeploymentDiagnosticData> deploymentDiagnosticDatas) {
            if (deploymentDiagnosticDatas == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "deploymentDiagnosticDatas");
            }
            this.deploymentDiagnosticDatas = deploymentDiagnosticDatas;
            return this;
        }
        public Builder deploymentDiagnosticDatas(GetDeploymentsDeploymentCollectionItemDeploymentDiagnosticData... deploymentDiagnosticDatas) {
            return deploymentDiagnosticDatas(List.of(deploymentDiagnosticDatas));
        }
        @CustomType.Setter
        public Builder deploymentType(String deploymentType) {
            if (deploymentType == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "deploymentType");
            }
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentUrl(String deploymentUrl) {
            if (deploymentUrl == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "deploymentUrl");
            }
            this.deploymentUrl = deploymentUrl;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ingressIps(List<GetDeploymentsDeploymentCollectionItemIngressIp> ingressIps) {
            if (ingressIps == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "ingressIps");
            }
            this.ingressIps = ingressIps;
            return this;
        }
        public Builder ingressIps(GetDeploymentsDeploymentCollectionItemIngressIp... ingressIps) {
            return ingressIps(List.of(ingressIps));
        }
        @CustomType.Setter
        public Builder isAutoScalingEnabled(Boolean isAutoScalingEnabled) {
            if (isAutoScalingEnabled == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "isAutoScalingEnabled");
            }
            this.isAutoScalingEnabled = isAutoScalingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isHealthy(Boolean isHealthy) {
            if (isHealthy == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "isHealthy");
            }
            this.isHealthy = isHealthy;
            return this;
        }
        @CustomType.Setter
        public Builder isLatestVersion(Boolean isLatestVersion) {
            if (isLatestVersion == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "isLatestVersion");
            }
            this.isLatestVersion = isLatestVersion;
            return this;
        }
        @CustomType.Setter
        public Builder isLockOverride(Boolean isLockOverride) {
            if (isLockOverride == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "isLockOverride");
            }
            this.isLockOverride = isLockOverride;
            return this;
        }
        @CustomType.Setter
        public Builder isPublic(Boolean isPublic) {
            if (isPublic == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "isPublic");
            }
            this.isPublic = isPublic;
            return this;
        }
        @CustomType.Setter
        public Builder isStorageUtilizationLimitExceeded(Boolean isStorageUtilizationLimitExceeded) {
            if (isStorageUtilizationLimitExceeded == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "isStorageUtilizationLimitExceeded");
            }
            this.isStorageUtilizationLimitExceeded = isStorageUtilizationLimitExceeded;
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(String licenseModel) {
            if (licenseModel == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "licenseModel");
            }
            this.licenseModel = licenseModel;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleSubState(String lifecycleSubState) {
            if (lifecycleSubState == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "lifecycleSubState");
            }
            this.lifecycleSubState = lifecycleSubState;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerId(String loadBalancerId) {
            if (loadBalancerId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "loadBalancerId");
            }
            this.loadBalancerId = loadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder loadBalancerSubnetId(String loadBalancerSubnetId) {
            if (loadBalancerSubnetId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "loadBalancerSubnetId");
            }
            this.loadBalancerSubnetId = loadBalancerSubnetId;
            return this;
        }
        @CustomType.Setter
        public Builder locks(List<GetDeploymentsDeploymentCollectionItemLock> locks) {
            if (locks == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "locks");
            }
            this.locks = locks;
            return this;
        }
        public Builder locks(GetDeploymentsDeploymentCollectionItemLock... locks) {
            return locks(List.of(locks));
        }
        @CustomType.Setter
        public Builder maintenanceConfigurations(List<GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration> maintenanceConfigurations) {
            if (maintenanceConfigurations == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "maintenanceConfigurations");
            }
            this.maintenanceConfigurations = maintenanceConfigurations;
            return this;
        }
        public Builder maintenanceConfigurations(GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration... maintenanceConfigurations) {
            return maintenanceConfigurations(List.of(maintenanceConfigurations));
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetDeploymentsDeploymentCollectionItemMaintenanceWindow> maintenanceWindows) {
            if (maintenanceWindows == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "maintenanceWindows");
            }
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetDeploymentsDeploymentCollectionItemMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder nextMaintenanceActionType(String nextMaintenanceActionType) {
            if (nextMaintenanceActionType == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "nextMaintenanceActionType");
            }
            this.nextMaintenanceActionType = nextMaintenanceActionType;
            return this;
        }
        @CustomType.Setter
        public Builder nextMaintenanceDescription(String nextMaintenanceDescription) {
            if (nextMaintenanceDescription == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "nextMaintenanceDescription");
            }
            this.nextMaintenanceDescription = nextMaintenanceDescription;
            return this;
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            if (nsgIds == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "nsgIds");
            }
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder oggDatas(List<GetDeploymentsDeploymentCollectionItemOggData> oggDatas) {
            if (oggDatas == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "oggDatas");
            }
            this.oggDatas = oggDatas;
            return this;
        }
        public Builder oggDatas(GetDeploymentsDeploymentCollectionItemOggData... oggDatas) {
            return oggDatas(List.of(oggDatas));
        }
        @CustomType.Setter
        public Builder privateIpAddress(String privateIpAddress) {
            if (privateIpAddress == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "privateIpAddress");
            }
            this.privateIpAddress = privateIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder publicIpAddress(String publicIpAddress) {
            if (publicIpAddress == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "publicIpAddress");
            }
            this.publicIpAddress = publicIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder storageUtilizationInBytes(String storageUtilizationInBytes) {
            if (storageUtilizationInBytes == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "storageUtilizationInBytes");
            }
            this.storageUtilizationInBytes = storageUtilizationInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfNextMaintenance(String timeOfNextMaintenance) {
            if (timeOfNextMaintenance == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "timeOfNextMaintenance");
            }
            this.timeOfNextMaintenance = timeOfNextMaintenance;
            return this;
        }
        @CustomType.Setter
        public Builder timeOggVersionSupportedUntil(String timeOggVersionSupportedUntil) {
            if (timeOggVersionSupportedUntil == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "timeOggVersionSupportedUntil");
            }
            this.timeOggVersionSupportedUntil = timeOggVersionSupportedUntil;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpgradeRequired(String timeUpgradeRequired) {
            if (timeUpgradeRequired == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItem", "timeUpgradeRequired");
            }
            this.timeUpgradeRequired = timeUpgradeRequired;
            return this;
        }
        public GetDeploymentsDeploymentCollectionItem build() {
            final var _resultValue = new GetDeploymentsDeploymentCollectionItem();
            _resultValue.compartmentId = compartmentId;
            _resultValue.cpuCoreCount = cpuCoreCount;
            _resultValue.definedTags = definedTags;
            _resultValue.deploymentBackupId = deploymentBackupId;
            _resultValue.deploymentDiagnosticDatas = deploymentDiagnosticDatas;
            _resultValue.deploymentType = deploymentType;
            _resultValue.deploymentUrl = deploymentUrl;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.fqdn = fqdn;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.ingressIps = ingressIps;
            _resultValue.isAutoScalingEnabled = isAutoScalingEnabled;
            _resultValue.isHealthy = isHealthy;
            _resultValue.isLatestVersion = isLatestVersion;
            _resultValue.isLockOverride = isLockOverride;
            _resultValue.isPublic = isPublic;
            _resultValue.isStorageUtilizationLimitExceeded = isStorageUtilizationLimitExceeded;
            _resultValue.licenseModel = licenseModel;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.lifecycleSubState = lifecycleSubState;
            _resultValue.loadBalancerId = loadBalancerId;
            _resultValue.loadBalancerSubnetId = loadBalancerSubnetId;
            _resultValue.locks = locks;
            _resultValue.maintenanceConfigurations = maintenanceConfigurations;
            _resultValue.maintenanceWindows = maintenanceWindows;
            _resultValue.nextMaintenanceActionType = nextMaintenanceActionType;
            _resultValue.nextMaintenanceDescription = nextMaintenanceDescription;
            _resultValue.nsgIds = nsgIds;
            _resultValue.oggDatas = oggDatas;
            _resultValue.privateIpAddress = privateIpAddress;
            _resultValue.publicIpAddress = publicIpAddress;
            _resultValue.state = state;
            _resultValue.storageUtilizationInBytes = storageUtilizationInBytes;
            _resultValue.subnetId = subnetId;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeOfNextMaintenance = timeOfNextMaintenance;
            _resultValue.timeOggVersionSupportedUntil = timeOggVersionSupportedUntil;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.timeUpgradeRequired = timeUpgradeRequired;
            return _resultValue;
        }
    }
}
