// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.GoldenGate.outputs.GetDeploymentsDeploymentCollectionItemOggData;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDeploymentsDeploymentCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    private Integer cpuCoreCount;
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    private String deploymentBackupId;
    /**
     * @return The deployment type.
     * 
     */
    private String deploymentType;
    /**
     * @return The URL of a resource.
     * 
     */
    private String deploymentUrl;
    /**
     * @return Metadata about this specific object.
     * 
     */
    private String description;
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    private String displayName;
    /**
     * @return A filter to return only the resources that match the &#39;fqdn&#39; given.
     * 
     */
    private String fqdn;
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    private String id;
    /**
     * @return Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    private Boolean isAutoScalingEnabled;
    /**
     * @return True if all of the aggregate resources are working correctly.
     * 
     */
    private Boolean isHealthy;
    /**
     * @return Indicates if the resource is the the latest available version.
     * 
     */
    private Boolean isLatestVersion;
    /**
     * @return True if this object is publicly available.
     * 
     */
    private Boolean isPublic;
    /**
     * @return Indicator will be true if the amount of storage being utilized exceeds the allowable storage utilization limit.  Exceeding the limit may be an indication of a misconfiguration of the deployment&#39;s GoldenGate service.
     * 
     */
    private Boolean isStorageUtilizationLimitExceeded;
    /**
     * @return The Oracle license model that applies to a Deployment.
     * 
     */
    private String licenseModel;
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleSubState&#39; given.
     * 
     */
    private String lifecycleSubState;
    /**
     * @return An array of [Network Security Group](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/networksecuritygroups.htm) OCIDs used to define network access for a deployment.
     * 
     */
    private List<String> nsgIds;
    /**
     * @return Deployment Data for an OggDeployment
     * 
     */
    private List<GetDeploymentsDeploymentCollectionItemOggData> oggDatas;
    /**
     * @return The private IP address in the customer&#39;s VCN representing the access point for the associated endpoint service in the GoldenGate service VCN.
     * 
     */
    private String privateIpAddress;
    /**
     * @return The public IP address representing the access point for the Deployment.
     * 
     */
    private String publicIpAddress;
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleState&#39; given.
     * 
     */
    private String state;
    /**
     * @return The amount of storage being utilized (in bytes)
     * 
     */
    private String storageUtilizationInBytes;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     * 
     */
    private String subnetId;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeCreated;
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeUpdated;
    /**
     * @return The date the existing version in use will no longer be considered as usable and an upgrade will be required.  This date is typically 6 months after the version was released for use by GGS.  The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeUpgradeRequired;

    private GetDeploymentsDeploymentCollectionItem() {}
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    public String deploymentBackupId() {
        return this.deploymentBackupId;
    }
    /**
     * @return The deployment type.
     * 
     */
    public String deploymentType() {
        return this.deploymentType;
    }
    /**
     * @return The URL of a resource.
     * 
     */
    public String deploymentUrl() {
        return this.deploymentUrl;
    }
    /**
     * @return Metadata about this specific object.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return A filter to return only the resources that match the &#39;fqdn&#39; given.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deployment being referenced.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    public Boolean isAutoScalingEnabled() {
        return this.isAutoScalingEnabled;
    }
    /**
     * @return True if all of the aggregate resources are working correctly.
     * 
     */
    public Boolean isHealthy() {
        return this.isHealthy;
    }
    /**
     * @return Indicates if the resource is the the latest available version.
     * 
     */
    public Boolean isLatestVersion() {
        return this.isLatestVersion;
    }
    /**
     * @return True if this object is publicly available.
     * 
     */
    public Boolean isPublic() {
        return this.isPublic;
    }
    /**
     * @return Indicator will be true if the amount of storage being utilized exceeds the allowable storage utilization limit.  Exceeding the limit may be an indication of a misconfiguration of the deployment&#39;s GoldenGate service.
     * 
     */
    public Boolean isStorageUtilizationLimitExceeded() {
        return this.isStorageUtilizationLimitExceeded;
    }
    /**
     * @return The Oracle license model that applies to a Deployment.
     * 
     */
    public String licenseModel() {
        return this.licenseModel;
    }
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleSubState&#39; given.
     * 
     */
    public String lifecycleSubState() {
        return this.lifecycleSubState;
    }
    /**
     * @return An array of [Network Security Group](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/networksecuritygroups.htm) OCIDs used to define network access for a deployment.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return Deployment Data for an OggDeployment
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemOggData> oggDatas() {
        return this.oggDatas;
    }
    /**
     * @return The private IP address in the customer&#39;s VCN representing the access point for the associated endpoint service in the GoldenGate service VCN.
     * 
     */
    public String privateIpAddress() {
        return this.privateIpAddress;
    }
    /**
     * @return The public IP address representing the access point for the Deployment.
     * 
     */
    public String publicIpAddress() {
        return this.publicIpAddress;
    }
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleState&#39; given.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The amount of storage being utilized (in bytes)
     * 
     */
    public String storageUtilizationInBytes() {
        return this.storageUtilizationInBytes;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet being referenced.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The date the existing version in use will no longer be considered as usable and an upgrade will be required.  This date is typically 6 months after the version was released for use by GGS.  The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeUpgradeRequired() {
        return this.timeUpgradeRequired;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsDeploymentCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Integer cpuCoreCount;
        private Map<String,Object> definedTags;
        private String deploymentBackupId;
        private String deploymentType;
        private String deploymentUrl;
        private String description;
        private String displayName;
        private String fqdn;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isAutoScalingEnabled;
        private Boolean isHealthy;
        private Boolean isLatestVersion;
        private Boolean isPublic;
        private Boolean isStorageUtilizationLimitExceeded;
        private String licenseModel;
        private String lifecycleDetails;
        private String lifecycleSubState;
        private List<String> nsgIds;
        private List<GetDeploymentsDeploymentCollectionItemOggData> oggDatas;
        private String privateIpAddress;
        private String publicIpAddress;
        private String state;
        private String storageUtilizationInBytes;
        private String subnetId;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String timeUpgradeRequired;
        public Builder() {}
        public Builder(GetDeploymentsDeploymentCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.definedTags = defaults.definedTags;
    	      this.deploymentBackupId = defaults.deploymentBackupId;
    	      this.deploymentType = defaults.deploymentType;
    	      this.deploymentUrl = defaults.deploymentUrl;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.fqdn = defaults.fqdn;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutoScalingEnabled = defaults.isAutoScalingEnabled;
    	      this.isHealthy = defaults.isHealthy;
    	      this.isLatestVersion = defaults.isLatestVersion;
    	      this.isPublic = defaults.isPublic;
    	      this.isStorageUtilizationLimitExceeded = defaults.isStorageUtilizationLimitExceeded;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lifecycleSubState = defaults.lifecycleSubState;
    	      this.nsgIds = defaults.nsgIds;
    	      this.oggDatas = defaults.oggDatas;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.publicIpAddress = defaults.publicIpAddress;
    	      this.state = defaults.state;
    	      this.storageUtilizationInBytes = defaults.storageUtilizationInBytes;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.timeUpgradeRequired = defaults.timeUpgradeRequired;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            this.cpuCoreCount = Objects.requireNonNull(cpuCoreCount);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentBackupId(String deploymentBackupId) {
            this.deploymentBackupId = Objects.requireNonNull(deploymentBackupId);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentType(String deploymentType) {
            this.deploymentType = Objects.requireNonNull(deploymentType);
            return this;
        }
        @CustomType.Setter
        public Builder deploymentUrl(String deploymentUrl) {
            this.deploymentUrl = Objects.requireNonNull(deploymentUrl);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isAutoScalingEnabled(Boolean isAutoScalingEnabled) {
            this.isAutoScalingEnabled = Objects.requireNonNull(isAutoScalingEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isHealthy(Boolean isHealthy) {
            this.isHealthy = Objects.requireNonNull(isHealthy);
            return this;
        }
        @CustomType.Setter
        public Builder isLatestVersion(Boolean isLatestVersion) {
            this.isLatestVersion = Objects.requireNonNull(isLatestVersion);
            return this;
        }
        @CustomType.Setter
        public Builder isPublic(Boolean isPublic) {
            this.isPublic = Objects.requireNonNull(isPublic);
            return this;
        }
        @CustomType.Setter
        public Builder isStorageUtilizationLimitExceeded(Boolean isStorageUtilizationLimitExceeded) {
            this.isStorageUtilizationLimitExceeded = Objects.requireNonNull(isStorageUtilizationLimitExceeded);
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(String licenseModel) {
            this.licenseModel = Objects.requireNonNull(licenseModel);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleSubState(String lifecycleSubState) {
            this.lifecycleSubState = Objects.requireNonNull(lifecycleSubState);
            return this;
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            this.nsgIds = Objects.requireNonNull(nsgIds);
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder oggDatas(List<GetDeploymentsDeploymentCollectionItemOggData> oggDatas) {
            this.oggDatas = Objects.requireNonNull(oggDatas);
            return this;
        }
        public Builder oggDatas(GetDeploymentsDeploymentCollectionItemOggData... oggDatas) {
            return oggDatas(List.of(oggDatas));
        }
        @CustomType.Setter
        public Builder privateIpAddress(String privateIpAddress) {
            this.privateIpAddress = Objects.requireNonNull(privateIpAddress);
            return this;
        }
        @CustomType.Setter
        public Builder publicIpAddress(String publicIpAddress) {
            this.publicIpAddress = Objects.requireNonNull(publicIpAddress);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder storageUtilizationInBytes(String storageUtilizationInBytes) {
            this.storageUtilizationInBytes = Objects.requireNonNull(storageUtilizationInBytes);
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpgradeRequired(String timeUpgradeRequired) {
            this.timeUpgradeRequired = Objects.requireNonNull(timeUpgradeRequired);
            return this;
        }
        public GetDeploymentsDeploymentCollectionItem build() {
            final var o = new GetDeploymentsDeploymentCollectionItem();
            o.compartmentId = compartmentId;
            o.cpuCoreCount = cpuCoreCount;
            o.definedTags = definedTags;
            o.deploymentBackupId = deploymentBackupId;
            o.deploymentType = deploymentType;
            o.deploymentUrl = deploymentUrl;
            o.description = description;
            o.displayName = displayName;
            o.fqdn = fqdn;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isAutoScalingEnabled = isAutoScalingEnabled;
            o.isHealthy = isHealthy;
            o.isLatestVersion = isLatestVersion;
            o.isPublic = isPublic;
            o.isStorageUtilizationLimitExceeded = isStorageUtilizationLimitExceeded;
            o.licenseModel = licenseModel;
            o.lifecycleDetails = lifecycleDetails;
            o.lifecycleSubState = lifecycleSubState;
            o.nsgIds = nsgIds;
            o.oggDatas = oggDatas;
            o.privateIpAddress = privateIpAddress;
            o.publicIpAddress = publicIpAddress;
            o.state = state;
            o.storageUtilizationInBytes = storageUtilizationInBytes;
            o.subnetId = subnetId;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.timeUpgradeRequired = timeUpgradeRequired;
            return o;
        }
    }
}
