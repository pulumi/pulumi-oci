// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration {
    /**
     * @return Defines auto upgrade period for bundle releases. Manually configured period cannot be longer than service defined period for bundle releases. This period must be shorter or equal to major release upgrade period. Not passing this field during create will equate to using the service default.
     * 
     */
    private Integer bundleReleaseUpgradePeriodInDays;
    /**
     * @return Defines auto upgrade period for interim releases. This period must be shorter or equal to bundle release upgrade period.
     * 
     */
    private Integer interimReleaseUpgradePeriodInDays;
    /**
     * @return By default auto upgrade for interim releases are not enabled. If auto-upgrade is enabled for interim release,  you have to specify interimReleaseUpgradePeriodInDays too.
     * 
     */
    private Boolean isInterimReleaseAutoUpgradeEnabled;
    /**
     * @return Defines auto upgrade period for major releases. Manually configured period cannot be longer than service defined period for major releases. Not passing this field during create will equate to using the service default.
     * 
     */
    private Integer majorReleaseUpgradePeriodInDays;
    /**
     * @return Defines auto upgrade period for releases with security fix. Manually configured period cannot be longer than service defined period for security releases. Not passing this field during create will equate to using the service default.
     * 
     */
    private Integer securityPatchUpgradePeriodInDays;

    private GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration() {}
    /**
     * @return Defines auto upgrade period for bundle releases. Manually configured period cannot be longer than service defined period for bundle releases. This period must be shorter or equal to major release upgrade period. Not passing this field during create will equate to using the service default.
     * 
     */
    public Integer bundleReleaseUpgradePeriodInDays() {
        return this.bundleReleaseUpgradePeriodInDays;
    }
    /**
     * @return Defines auto upgrade period for interim releases. This period must be shorter or equal to bundle release upgrade period.
     * 
     */
    public Integer interimReleaseUpgradePeriodInDays() {
        return this.interimReleaseUpgradePeriodInDays;
    }
    /**
     * @return By default auto upgrade for interim releases are not enabled. If auto-upgrade is enabled for interim release,  you have to specify interimReleaseUpgradePeriodInDays too.
     * 
     */
    public Boolean isInterimReleaseAutoUpgradeEnabled() {
        return this.isInterimReleaseAutoUpgradeEnabled;
    }
    /**
     * @return Defines auto upgrade period for major releases. Manually configured period cannot be longer than service defined period for major releases. Not passing this field during create will equate to using the service default.
     * 
     */
    public Integer majorReleaseUpgradePeriodInDays() {
        return this.majorReleaseUpgradePeriodInDays;
    }
    /**
     * @return Defines auto upgrade period for releases with security fix. Manually configured period cannot be longer than service defined period for security releases. Not passing this field during create will equate to using the service default.
     * 
     */
    public Integer securityPatchUpgradePeriodInDays() {
        return this.securityPatchUpgradePeriodInDays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bundleReleaseUpgradePeriodInDays;
        private Integer interimReleaseUpgradePeriodInDays;
        private Boolean isInterimReleaseAutoUpgradeEnabled;
        private Integer majorReleaseUpgradePeriodInDays;
        private Integer securityPatchUpgradePeriodInDays;
        public Builder() {}
        public Builder(GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bundleReleaseUpgradePeriodInDays = defaults.bundleReleaseUpgradePeriodInDays;
    	      this.interimReleaseUpgradePeriodInDays = defaults.interimReleaseUpgradePeriodInDays;
    	      this.isInterimReleaseAutoUpgradeEnabled = defaults.isInterimReleaseAutoUpgradeEnabled;
    	      this.majorReleaseUpgradePeriodInDays = defaults.majorReleaseUpgradePeriodInDays;
    	      this.securityPatchUpgradePeriodInDays = defaults.securityPatchUpgradePeriodInDays;
        }

        @CustomType.Setter
        public Builder bundleReleaseUpgradePeriodInDays(Integer bundleReleaseUpgradePeriodInDays) {
            if (bundleReleaseUpgradePeriodInDays == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration", "bundleReleaseUpgradePeriodInDays");
            }
            this.bundleReleaseUpgradePeriodInDays = bundleReleaseUpgradePeriodInDays;
            return this;
        }
        @CustomType.Setter
        public Builder interimReleaseUpgradePeriodInDays(Integer interimReleaseUpgradePeriodInDays) {
            if (interimReleaseUpgradePeriodInDays == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration", "interimReleaseUpgradePeriodInDays");
            }
            this.interimReleaseUpgradePeriodInDays = interimReleaseUpgradePeriodInDays;
            return this;
        }
        @CustomType.Setter
        public Builder isInterimReleaseAutoUpgradeEnabled(Boolean isInterimReleaseAutoUpgradeEnabled) {
            if (isInterimReleaseAutoUpgradeEnabled == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration", "isInterimReleaseAutoUpgradeEnabled");
            }
            this.isInterimReleaseAutoUpgradeEnabled = isInterimReleaseAutoUpgradeEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder majorReleaseUpgradePeriodInDays(Integer majorReleaseUpgradePeriodInDays) {
            if (majorReleaseUpgradePeriodInDays == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration", "majorReleaseUpgradePeriodInDays");
            }
            this.majorReleaseUpgradePeriodInDays = majorReleaseUpgradePeriodInDays;
            return this;
        }
        @CustomType.Setter
        public Builder securityPatchUpgradePeriodInDays(Integer securityPatchUpgradePeriodInDays) {
            if (securityPatchUpgradePeriodInDays == null) {
              throw new MissingRequiredPropertyException("GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration", "securityPatchUpgradePeriodInDays");
            }
            this.securityPatchUpgradePeriodInDays = securityPatchUpgradePeriodInDays;
            return this;
        }
        public GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration build() {
            final var _resultValue = new GetDeploymentsDeploymentCollectionItemMaintenanceConfiguration();
            _resultValue.bundleReleaseUpgradePeriodInDays = bundleReleaseUpgradePeriodInDays;
            _resultValue.interimReleaseUpgradePeriodInDays = interimReleaseUpgradePeriodInDays;
            _resultValue.isInterimReleaseAutoUpgradeEnabled = isInterimReleaseAutoUpgradeEnabled;
            _resultValue.majorReleaseUpgradePeriodInDays = majorReleaseUpgradePeriodInDays;
            _resultValue.securityPatchUpgradePeriodInDays = securityPatchUpgradePeriodInDays;
            return _resultValue;
        }
    }
}
