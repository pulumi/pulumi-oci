// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMessageItem {
    /**
     * @return The deployment Message in plain text with optional HTML anchor tags.
     * 
     */
    private String deploymentMessage;
    /**
     * @return The deployment Message Status.
     * 
     */
    private String deploymentMessageStatus;
    /**
     * @return The deployment Message Id.
     * 
     */
    private String id;

    private GetMessageItem() {}
    /**
     * @return The deployment Message in plain text with optional HTML anchor tags.
     * 
     */
    public String deploymentMessage() {
        return this.deploymentMessage;
    }
    /**
     * @return The deployment Message Status.
     * 
     */
    public String deploymentMessageStatus() {
        return this.deploymentMessageStatus;
    }
    /**
     * @return The deployment Message Id.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMessageItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deploymentMessage;
        private String deploymentMessageStatus;
        private String id;
        public Builder() {}
        public Builder(GetMessageItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentMessage = defaults.deploymentMessage;
    	      this.deploymentMessageStatus = defaults.deploymentMessageStatus;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder deploymentMessage(String deploymentMessage) {
            if (deploymentMessage == null) {
              throw new MissingRequiredPropertyException("GetMessageItem", "deploymentMessage");
            }
            this.deploymentMessage = deploymentMessage;
            return this;
        }
        @CustomType.Setter
        public Builder deploymentMessageStatus(String deploymentMessageStatus) {
            if (deploymentMessageStatus == null) {
              throw new MissingRequiredPropertyException("GetMessageItem", "deploymentMessageStatus");
            }
            this.deploymentMessageStatus = deploymentMessageStatus;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMessageItem", "id");
            }
            this.id = id;
            return this;
        }
        public GetMessageItem build() {
            final var _resultValue = new GetMessageItem();
            _resultValue.deploymentMessage = deploymentMessage;
            _resultValue.deploymentMessageStatus = deploymentMessageStatus;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
