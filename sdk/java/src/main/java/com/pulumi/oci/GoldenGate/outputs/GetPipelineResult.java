// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.outputs.GetPipelineLock;
import com.pulumi.oci.GoldenGate.outputs.GetPipelineMappingRule;
import com.pulumi.oci.GoldenGate.outputs.GetPipelinePipelineDiagnosticData;
import com.pulumi.oci.GoldenGate.outputs.GetPipelineProcessOption;
import com.pulumi.oci.GoldenGate.outputs.GetPipelineSourceConnectionDetail;
import com.pulumi.oci.GoldenGate.outputs.GetPipelineTargetConnectionDetail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPipelineResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    private String compartmentId;
    /**
     * @return The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    private Integer cpuCoreCount;
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Metadata about this specific object.
     * 
     */
    private String description;
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    private String displayName;
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline. This option applies when retrieving a pipeline.
     * 
     */
    private String id;
    /**
     * @return Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    private Boolean isAutoScalingEnabled;
    /**
     * @return The Oracle license model that applies to a Deployment.
     * 
     */
    private String licenseModel;
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Possible lifecycle substates when retrieving a pipeline.
     * 
     */
    private String lifecycleSubState;
    /**
     * @return Locks associated with this resource.
     * 
     */
    private List<GetPipelineLock> locks;
    /**
     * @return Mapping for source/target schema/tables for the pipeline data replication.
     * 
     */
    private List<GetPipelineMappingRule> mappingRules;
    /**
     * @return Information regarding the pipeline diagnostic collection
     * 
     */
    private List<GetPipelinePipelineDiagnosticData> pipelineDiagnosticDatas;
    private String pipelineId;
    /**
     * @return Required pipeline options to configure the replication process (Extract or Replicat).
     * 
     */
    private List<GetPipelineProcessOption> processOptions;
    /**
     * @return The type of the recipe
     * 
     */
    private String recipeType;
    /**
     * @return The source connection details for creating a pipeline.
     * 
     */
    private List<GetPipelineSourceConnectionDetail> sourceConnectionDetails;
    /**
     * @return Lifecycle state of the pipeline.
     * 
     */
    private String state;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The target connection details for creating a pipeline.
     * 
     */
    private List<GetPipelineTargetConnectionDetail> targetConnectionDetails;
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeCreated;
    /**
     * @return When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
     * 
     */
    private String timeLastRecorded;
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeUpdated;

    private GetPipelineResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The Minimum number of OCPUs to be made available for this Deployment.
     * 
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Metadata about this specific object.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only.  Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the pipeline. This option applies when retrieving a pipeline.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if auto scaling is enabled for the Deployment&#39;s CPU core count.
     * 
     */
    public Boolean isAutoScalingEnabled() {
        return this.isAutoScalingEnabled;
    }
    /**
     * @return The Oracle license model that applies to a Deployment.
     * 
     */
    public String licenseModel() {
        return this.licenseModel;
    }
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Possible lifecycle substates when retrieving a pipeline.
     * 
     */
    public String lifecycleSubState() {
        return this.lifecycleSubState;
    }
    /**
     * @return Locks associated with this resource.
     * 
     */
    public List<GetPipelineLock> locks() {
        return this.locks;
    }
    /**
     * @return Mapping for source/target schema/tables for the pipeline data replication.
     * 
     */
    public List<GetPipelineMappingRule> mappingRules() {
        return this.mappingRules;
    }
    /**
     * @return Information regarding the pipeline diagnostic collection
     * 
     */
    public List<GetPipelinePipelineDiagnosticData> pipelineDiagnosticDatas() {
        return this.pipelineDiagnosticDatas;
    }
    public String pipelineId() {
        return this.pipelineId;
    }
    /**
     * @return Required pipeline options to configure the replication process (Extract or Replicat).
     * 
     */
    public List<GetPipelineProcessOption> processOptions() {
        return this.processOptions;
    }
    /**
     * @return The type of the recipe
     * 
     */
    public String recipeType() {
        return this.recipeType;
    }
    /**
     * @return The source connection details for creating a pipeline.
     * 
     */
    public List<GetPipelineSourceConnectionDetail> sourceConnectionDetails() {
        return this.sourceConnectionDetails;
    }
    /**
     * @return Lifecycle state of the pipeline.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The target connection details for creating a pipeline.
     * 
     */
    public List<GetPipelineTargetConnectionDetail> targetConnectionDetails() {
        return this.targetConnectionDetails;
    }
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return When the resource was last updated. This option applies when retrieving a pipeline. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
     * 
     */
    public String timeLastRecorded() {
        return this.timeLastRecorded;
    }
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelineResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Integer cpuCoreCount;
        private Map<String,String> definedTags;
        private String description;
        private String displayName;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isAutoScalingEnabled;
        private String licenseModel;
        private String lifecycleDetails;
        private String lifecycleSubState;
        private List<GetPipelineLock> locks;
        private List<GetPipelineMappingRule> mappingRules;
        private List<GetPipelinePipelineDiagnosticData> pipelineDiagnosticDatas;
        private String pipelineId;
        private List<GetPipelineProcessOption> processOptions;
        private String recipeType;
        private List<GetPipelineSourceConnectionDetail> sourceConnectionDetails;
        private String state;
        private Map<String,String> systemTags;
        private List<GetPipelineTargetConnectionDetail> targetConnectionDetails;
        private String timeCreated;
        private String timeLastRecorded;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetPipelineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutoScalingEnabled = defaults.isAutoScalingEnabled;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lifecycleSubState = defaults.lifecycleSubState;
    	      this.locks = defaults.locks;
    	      this.mappingRules = defaults.mappingRules;
    	      this.pipelineDiagnosticDatas = defaults.pipelineDiagnosticDatas;
    	      this.pipelineId = defaults.pipelineId;
    	      this.processOptions = defaults.processOptions;
    	      this.recipeType = defaults.recipeType;
    	      this.sourceConnectionDetails = defaults.sourceConnectionDetails;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetConnectionDetails = defaults.targetConnectionDetails;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastRecorded = defaults.timeLastRecorded;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            if (cpuCoreCount == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "cpuCoreCount");
            }
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoScalingEnabled(Boolean isAutoScalingEnabled) {
            if (isAutoScalingEnabled == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "isAutoScalingEnabled");
            }
            this.isAutoScalingEnabled = isAutoScalingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder licenseModel(String licenseModel) {
            if (licenseModel == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "licenseModel");
            }
            this.licenseModel = licenseModel;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleSubState(String lifecycleSubState) {
            if (lifecycleSubState == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "lifecycleSubState");
            }
            this.lifecycleSubState = lifecycleSubState;
            return this;
        }
        @CustomType.Setter
        public Builder locks(List<GetPipelineLock> locks) {
            if (locks == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "locks");
            }
            this.locks = locks;
            return this;
        }
        public Builder locks(GetPipelineLock... locks) {
            return locks(List.of(locks));
        }
        @CustomType.Setter
        public Builder mappingRules(List<GetPipelineMappingRule> mappingRules) {
            if (mappingRules == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "mappingRules");
            }
            this.mappingRules = mappingRules;
            return this;
        }
        public Builder mappingRules(GetPipelineMappingRule... mappingRules) {
            return mappingRules(List.of(mappingRules));
        }
        @CustomType.Setter
        public Builder pipelineDiagnosticDatas(List<GetPipelinePipelineDiagnosticData> pipelineDiagnosticDatas) {
            if (pipelineDiagnosticDatas == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "pipelineDiagnosticDatas");
            }
            this.pipelineDiagnosticDatas = pipelineDiagnosticDatas;
            return this;
        }
        public Builder pipelineDiagnosticDatas(GetPipelinePipelineDiagnosticData... pipelineDiagnosticDatas) {
            return pipelineDiagnosticDatas(List.of(pipelineDiagnosticDatas));
        }
        @CustomType.Setter
        public Builder pipelineId(String pipelineId) {
            if (pipelineId == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "pipelineId");
            }
            this.pipelineId = pipelineId;
            return this;
        }
        @CustomType.Setter
        public Builder processOptions(List<GetPipelineProcessOption> processOptions) {
            if (processOptions == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "processOptions");
            }
            this.processOptions = processOptions;
            return this;
        }
        public Builder processOptions(GetPipelineProcessOption... processOptions) {
            return processOptions(List.of(processOptions));
        }
        @CustomType.Setter
        public Builder recipeType(String recipeType) {
            if (recipeType == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "recipeType");
            }
            this.recipeType = recipeType;
            return this;
        }
        @CustomType.Setter
        public Builder sourceConnectionDetails(List<GetPipelineSourceConnectionDetail> sourceConnectionDetails) {
            if (sourceConnectionDetails == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "sourceConnectionDetails");
            }
            this.sourceConnectionDetails = sourceConnectionDetails;
            return this;
        }
        public Builder sourceConnectionDetails(GetPipelineSourceConnectionDetail... sourceConnectionDetails) {
            return sourceConnectionDetails(List.of(sourceConnectionDetails));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder targetConnectionDetails(List<GetPipelineTargetConnectionDetail> targetConnectionDetails) {
            if (targetConnectionDetails == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "targetConnectionDetails");
            }
            this.targetConnectionDetails = targetConnectionDetails;
            return this;
        }
        public Builder targetConnectionDetails(GetPipelineTargetConnectionDetail... targetConnectionDetails) {
            return targetConnectionDetails(List.of(targetConnectionDetails));
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastRecorded(String timeLastRecorded) {
            if (timeLastRecorded == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "timeLastRecorded");
            }
            this.timeLastRecorded = timeLastRecorded;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetPipelineResult", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetPipelineResult build() {
            final var _resultValue = new GetPipelineResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.cpuCoreCount = cpuCoreCount;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isAutoScalingEnabled = isAutoScalingEnabled;
            _resultValue.licenseModel = licenseModel;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.lifecycleSubState = lifecycleSubState;
            _resultValue.locks = locks;
            _resultValue.mappingRules = mappingRules;
            _resultValue.pipelineDiagnosticDatas = pipelineDiagnosticDatas;
            _resultValue.pipelineId = pipelineId;
            _resultValue.processOptions = processOptions;
            _resultValue.recipeType = recipeType;
            _resultValue.sourceConnectionDetails = sourceConnectionDetails;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.targetConnectionDetails = targetConnectionDetails;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeLastRecorded = timeLastRecorded;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
