// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.outputs.GetPipelineRunningProcessesFilter;
import com.pulumi.oci.GoldenGate.outputs.GetPipelineRunningProcessesPipelineRunningProcessCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetPipelineRunningProcessesResult {
    private @Nullable List<GetPipelineRunningProcessesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String pipelineId;
    /**
     * @return The list of pipeline_running_process_collection.
     * 
     */
    private List<GetPipelineRunningProcessesPipelineRunningProcessCollection> pipelineRunningProcessCollections;

    private GetPipelineRunningProcessesResult() {}
    public List<GetPipelineRunningProcessesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String pipelineId() {
        return this.pipelineId;
    }
    /**
     * @return The list of pipeline_running_process_collection.
     * 
     */
    public List<GetPipelineRunningProcessesPipelineRunningProcessCollection> pipelineRunningProcessCollections() {
        return this.pipelineRunningProcessCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelineRunningProcessesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetPipelineRunningProcessesFilter> filters;
        private String id;
        private String pipelineId;
        private List<GetPipelineRunningProcessesPipelineRunningProcessCollection> pipelineRunningProcessCollections;
        public Builder() {}
        public Builder(GetPipelineRunningProcessesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.pipelineId = defaults.pipelineId;
    	      this.pipelineRunningProcessCollections = defaults.pipelineRunningProcessCollections;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetPipelineRunningProcessesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetPipelineRunningProcessesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPipelineRunningProcessesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineId(String pipelineId) {
            if (pipelineId == null) {
              throw new MissingRequiredPropertyException("GetPipelineRunningProcessesResult", "pipelineId");
            }
            this.pipelineId = pipelineId;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineRunningProcessCollections(List<GetPipelineRunningProcessesPipelineRunningProcessCollection> pipelineRunningProcessCollections) {
            if (pipelineRunningProcessCollections == null) {
              throw new MissingRequiredPropertyException("GetPipelineRunningProcessesResult", "pipelineRunningProcessCollections");
            }
            this.pipelineRunningProcessCollections = pipelineRunningProcessCollections;
            return this;
        }
        public Builder pipelineRunningProcessCollections(GetPipelineRunningProcessesPipelineRunningProcessCollection... pipelineRunningProcessCollections) {
            return pipelineRunningProcessCollections(List.of(pipelineRunningProcessCollections));
        }
        public GetPipelineRunningProcessesResult build() {
            final var _resultValue = new GetPipelineRunningProcessesResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.pipelineId = pipelineId;
            _resultValue.pipelineRunningProcessCollections = pipelineRunningProcessCollections;
            return _resultValue;
        }
    }
}
