// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.outputs.GetPipelineSchemaTablesPipelineSchemaTableCollectionItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPipelineSchemaTablesPipelineSchemaTableCollection {
    /**
     * @return Array of source or target schema tables of a pipeline&#39;s assigned connection.
     * 
     */
    private List<GetPipelineSchemaTablesPipelineSchemaTableCollectionItem> items;
    /**
     * @return Name of the source schema obtained from get schema endpoint of the created pipeline.
     * 
     */
    private String sourceSchemaName;
    /**
     * @return Name of the target schema obtained from get schema endpoint of the created pipeline.
     * 
     */
    private String targetSchemaName;

    private GetPipelineSchemaTablesPipelineSchemaTableCollection() {}
    /**
     * @return Array of source or target schema tables of a pipeline&#39;s assigned connection.
     * 
     */
    public List<GetPipelineSchemaTablesPipelineSchemaTableCollectionItem> items() {
        return this.items;
    }
    /**
     * @return Name of the source schema obtained from get schema endpoint of the created pipeline.
     * 
     */
    public String sourceSchemaName() {
        return this.sourceSchemaName;
    }
    /**
     * @return Name of the target schema obtained from get schema endpoint of the created pipeline.
     * 
     */
    public String targetSchemaName() {
        return this.targetSchemaName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelineSchemaTablesPipelineSchemaTableCollection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetPipelineSchemaTablesPipelineSchemaTableCollectionItem> items;
        private String sourceSchemaName;
        private String targetSchemaName;
        public Builder() {}
        public Builder(GetPipelineSchemaTablesPipelineSchemaTableCollection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.items = defaults.items;
    	      this.sourceSchemaName = defaults.sourceSchemaName;
    	      this.targetSchemaName = defaults.targetSchemaName;
        }

        @CustomType.Setter
        public Builder items(List<GetPipelineSchemaTablesPipelineSchemaTableCollectionItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetPipelineSchemaTablesPipelineSchemaTableCollection", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetPipelineSchemaTablesPipelineSchemaTableCollectionItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder sourceSchemaName(String sourceSchemaName) {
            if (sourceSchemaName == null) {
              throw new MissingRequiredPropertyException("GetPipelineSchemaTablesPipelineSchemaTableCollection", "sourceSchemaName");
            }
            this.sourceSchemaName = sourceSchemaName;
            return this;
        }
        @CustomType.Setter
        public Builder targetSchemaName(String targetSchemaName) {
            if (targetSchemaName == null) {
              throw new MissingRequiredPropertyException("GetPipelineSchemaTablesPipelineSchemaTableCollection", "targetSchemaName");
            }
            this.targetSchemaName = targetSchemaName;
            return this;
        }
        public GetPipelineSchemaTablesPipelineSchemaTableCollection build() {
            final var _resultValue = new GetPipelineSchemaTablesPipelineSchemaTableCollection();
            _resultValue.items = items;
            _resultValue.sourceSchemaName = sourceSchemaName;
            _resultValue.targetSchemaName = targetSchemaName;
            return _resultValue;
        }
    }
}
