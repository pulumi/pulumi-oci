// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.outputs.GetPipelineSchemasFilter;
import com.pulumi.oci.GoldenGate.outputs.GetPipelineSchemasPipelineSchemaCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPipelineSchemasResult {
    private @Nullable String displayName;
    private @Nullable List<GetPipelineSchemasFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String pipelineId;
    /**
     * @return The list of pipeline_schema_collection.
     * 
     */
    private List<GetPipelineSchemasPipelineSchemaCollection> pipelineSchemaCollections;

    private GetPipelineSchemasResult() {}
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetPipelineSchemasFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String pipelineId() {
        return this.pipelineId;
    }
    /**
     * @return The list of pipeline_schema_collection.
     * 
     */
    public List<GetPipelineSchemasPipelineSchemaCollection> pipelineSchemaCollections() {
        return this.pipelineSchemaCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelineSchemasResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String displayName;
        private @Nullable List<GetPipelineSchemasFilter> filters;
        private String id;
        private String pipelineId;
        private List<GetPipelineSchemasPipelineSchemaCollection> pipelineSchemaCollections;
        public Builder() {}
        public Builder(GetPipelineSchemasResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.pipelineId = defaults.pipelineId;
    	      this.pipelineSchemaCollections = defaults.pipelineSchemaCollections;
        }

        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetPipelineSchemasFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetPipelineSchemasFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPipelineSchemasResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineId(String pipelineId) {
            if (pipelineId == null) {
              throw new MissingRequiredPropertyException("GetPipelineSchemasResult", "pipelineId");
            }
            this.pipelineId = pipelineId;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineSchemaCollections(List<GetPipelineSchemasPipelineSchemaCollection> pipelineSchemaCollections) {
            if (pipelineSchemaCollections == null) {
              throw new MissingRequiredPropertyException("GetPipelineSchemasResult", "pipelineSchemaCollections");
            }
            this.pipelineSchemaCollections = pipelineSchemaCollections;
            return this;
        }
        public Builder pipelineSchemaCollections(GetPipelineSchemasPipelineSchemaCollection... pipelineSchemaCollections) {
            return pipelineSchemaCollections(List.of(pipelineSchemaCollections));
        }
        public GetPipelineSchemasResult build() {
            final var _resultValue = new GetPipelineSchemasResult();
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.pipelineId = pipelineId;
            _resultValue.pipelineSchemaCollections = pipelineSchemaCollections;
            return _resultValue;
        }
    }
}
