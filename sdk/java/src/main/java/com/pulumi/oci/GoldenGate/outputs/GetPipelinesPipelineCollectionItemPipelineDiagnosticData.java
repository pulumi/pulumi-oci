// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPipelinesPipelineCollectionItemPipelineDiagnosticData {
    /**
     * @return Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    private String bucket;
    /**
     * @return The state of the pipeline diagnostics collection.
     * 
     */
    private String diagnosticState;
    /**
     * @return Name of namespace that serves as a container for all of your buckets
     * 
     */
    private String namespace;
    /**
     * @return Name of the diagnostic collected and uploaded to object storage
     * 
     */
    private String object;
    /**
     * @return The date and time the diagnostic data was last collected for the pipeline. The format is defined by  [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
     * 
     */
    private String timeLastCollected;

    private GetPipelinesPipelineCollectionItemPipelineDiagnosticData() {}
    /**
     * @return Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The state of the pipeline diagnostics collection.
     * 
     */
    public String diagnosticState() {
        return this.diagnosticState;
    }
    /**
     * @return Name of namespace that serves as a container for all of your buckets
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return Name of the diagnostic collected and uploaded to object storage
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return The date and time the diagnostic data was last collected for the pipeline. The format is defined by  [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2024-07-25T21:10:29.600Z`.
     * 
     */
    public String timeLastCollected() {
        return this.timeLastCollected;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelinesPipelineCollectionItemPipelineDiagnosticData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private String diagnosticState;
        private String namespace;
        private String object;
        private String timeLastCollected;
        public Builder() {}
        public Builder(GetPipelinesPipelineCollectionItemPipelineDiagnosticData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.diagnosticState = defaults.diagnosticState;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.timeLastCollected = defaults.timeLastCollected;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("GetPipelinesPipelineCollectionItemPipelineDiagnosticData", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder diagnosticState(String diagnosticState) {
            if (diagnosticState == null) {
              throw new MissingRequiredPropertyException("GetPipelinesPipelineCollectionItemPipelineDiagnosticData", "diagnosticState");
            }
            this.diagnosticState = diagnosticState;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetPipelinesPipelineCollectionItemPipelineDiagnosticData", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder object(String object) {
            if (object == null) {
              throw new MissingRequiredPropertyException("GetPipelinesPipelineCollectionItemPipelineDiagnosticData", "object");
            }
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastCollected(String timeLastCollected) {
            if (timeLastCollected == null) {
              throw new MissingRequiredPropertyException("GetPipelinesPipelineCollectionItemPipelineDiagnosticData", "timeLastCollected");
            }
            this.timeLastCollected = timeLastCollected;
            return this;
        }
        public GetPipelinesPipelineCollectionItemPipelineDiagnosticData build() {
            final var _resultValue = new GetPipelinesPipelineCollectionItemPipelineDiagnosticData();
            _resultValue.bucket = bucket;
            _resultValue.diagnosticState = diagnosticState;
            _resultValue.namespace = namespace;
            _resultValue.object = object;
            _resultValue.timeLastCollected = timeLastCollected;
            return _resultValue;
        }
    }
}
