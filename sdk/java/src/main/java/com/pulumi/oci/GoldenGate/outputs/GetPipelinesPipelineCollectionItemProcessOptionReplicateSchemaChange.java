// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChange {
    /**
     * @return Action upon DDL Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
     * 
     */
    private String actionOnDdlError;
    /**
     * @return Action upon DML Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
     * 
     */
    private String actionOnDmlError;
    /**
     * @return If ENABLED, then addition or removal of schema is also replicated, apart from individual tables and records when creating or updating the pipeline.
     * 
     */
    private String canReplicateSchemaChange;

    private GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChange() {}
    /**
     * @return Action upon DDL Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
     * 
     */
    public String actionOnDdlError() {
        return this.actionOnDdlError;
    }
    /**
     * @return Action upon DML Error (active only if &#39;Replicate schema changes (DDL)&#39; is selected) i.e canReplicateSchemaChange=true
     * 
     */
    public String actionOnDmlError() {
        return this.actionOnDmlError;
    }
    /**
     * @return If ENABLED, then addition or removal of schema is also replicated, apart from individual tables and records when creating or updating the pipeline.
     * 
     */
    public String canReplicateSchemaChange() {
        return this.canReplicateSchemaChange;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChange defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String actionOnDdlError;
        private String actionOnDmlError;
        private String canReplicateSchemaChange;
        public Builder() {}
        public Builder(GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChange defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionOnDdlError = defaults.actionOnDdlError;
    	      this.actionOnDmlError = defaults.actionOnDmlError;
    	      this.canReplicateSchemaChange = defaults.canReplicateSchemaChange;
        }

        @CustomType.Setter
        public Builder actionOnDdlError(String actionOnDdlError) {
            if (actionOnDdlError == null) {
              throw new MissingRequiredPropertyException("GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChange", "actionOnDdlError");
            }
            this.actionOnDdlError = actionOnDdlError;
            return this;
        }
        @CustomType.Setter
        public Builder actionOnDmlError(String actionOnDmlError) {
            if (actionOnDmlError == null) {
              throw new MissingRequiredPropertyException("GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChange", "actionOnDmlError");
            }
            this.actionOnDmlError = actionOnDmlError;
            return this;
        }
        @CustomType.Setter
        public Builder canReplicateSchemaChange(String canReplicateSchemaChange) {
            if (canReplicateSchemaChange == null) {
              throw new MissingRequiredPropertyException("GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChange", "canReplicateSchemaChange");
            }
            this.canReplicateSchemaChange = canReplicateSchemaChange;
            return this;
        }
        public GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChange build() {
            final var _resultValue = new GetPipelinesPipelineCollectionItemProcessOptionReplicateSchemaChange();
            _resultValue.actionOnDdlError = actionOnDdlError;
            _resultValue.actionOnDmlError = actionOnDmlError;
            _resultValue.canReplicateSchemaChange = canReplicateSchemaChange;
            return _resultValue;
        }
    }
}
