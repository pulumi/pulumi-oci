// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.GoldenGate.outputs.GetPipelinesFilter;
import com.pulumi.oci.GoldenGate.outputs.GetPipelinesPipelineCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPipelinesResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    private String compartmentId;
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetPipelinesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Possible lifecycle substates when retrieving a pipeline.
     * 
     */
    private @Nullable String lifecycleSubState;
    /**
     * @return The list of pipeline_collection.
     * 
     */
    private List<GetPipelinesPipelineCollection> pipelineCollections;
    /**
     * @return Lifecycle state of the pipeline.
     * 
     */
    private @Nullable String state;

    private GetPipelinesResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment being referenced.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return An object&#39;s Display Name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetPipelinesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Possible lifecycle substates when retrieving a pipeline.
     * 
     */
    public Optional<String> lifecycleSubState() {
        return Optional.ofNullable(this.lifecycleSubState);
    }
    /**
     * @return The list of pipeline_collection.
     * 
     */
    public List<GetPipelinesPipelineCollection> pipelineCollections() {
        return this.pipelineCollections;
    }
    /**
     * @return Lifecycle state of the pipeline.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPipelinesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetPipelinesFilter> filters;
        private String id;
        private @Nullable String lifecycleSubState;
        private List<GetPipelinesPipelineCollection> pipelineCollections;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetPipelinesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.lifecycleSubState = defaults.lifecycleSubState;
    	      this.pipelineCollections = defaults.pipelineCollections;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetPipelinesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetPipelinesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetPipelinesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPipelinesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleSubState(@Nullable String lifecycleSubState) {

            this.lifecycleSubState = lifecycleSubState;
            return this;
        }
        @CustomType.Setter
        public Builder pipelineCollections(List<GetPipelinesPipelineCollection> pipelineCollections) {
            if (pipelineCollections == null) {
              throw new MissingRequiredPropertyException("GetPipelinesResult", "pipelineCollections");
            }
            this.pipelineCollections = pipelineCollections;
            return this;
        }
        public Builder pipelineCollections(GetPipelinesPipelineCollection... pipelineCollections) {
            return pipelineCollections(List.of(pipelineCollections));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetPipelinesResult build() {
            final var _resultValue = new GetPipelinesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.lifecycleSubState = lifecycleSubState;
            _resultValue.pipelineCollections = pipelineCollections;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
