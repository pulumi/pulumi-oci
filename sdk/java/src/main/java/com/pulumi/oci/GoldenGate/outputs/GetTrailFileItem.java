// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTrailFileItem {
    /**
     * @return array of consumer process names
     * 
     */
    private List<String> consumers;
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    private String displayName;
    /**
     * @return Maximum sequence number
     * 
     */
    private String maxSequenceNumber;
    /**
     * @return Minimum sequence number
     * 
     */
    private String minSequenceNumber;
    /**
     * @return Number of sequences for a specific trail file
     * 
     */
    private Integer numberOfSequences;
    /**
     * @return Producer Process Name if any.
     * 
     */
    private String producer;
    /**
     * @return The size of the backup stored in object storage (in bytes)
     * 
     */
    private Double sizeInBytes;
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private String timeLastUpdated;
    /**
     * @return A Trail File identifier
     * 
     */
    private String trailFileId;

    private GetTrailFileItem() {}
    /**
     * @return array of consumer process names
     * 
     */
    public List<String> consumers() {
        return this.consumers;
    }
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Maximum sequence number
     * 
     */
    public String maxSequenceNumber() {
        return this.maxSequenceNumber;
    }
    /**
     * @return Minimum sequence number
     * 
     */
    public String minSequenceNumber() {
        return this.minSequenceNumber;
    }
    /**
     * @return Number of sequences for a specific trail file
     * 
     */
    public Integer numberOfSequences() {
        return this.numberOfSequences;
    }
    /**
     * @return Producer Process Name if any.
     * 
     */
    public String producer() {
        return this.producer;
    }
    /**
     * @return The size of the backup stored in object storage (in bytes)
     * 
     */
    public Double sizeInBytes() {
        return this.sizeInBytes;
    }
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeLastUpdated() {
        return this.timeLastUpdated;
    }
    /**
     * @return A Trail File identifier
     * 
     */
    public String trailFileId() {
        return this.trailFileId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrailFileItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> consumers;
        private String displayName;
        private String maxSequenceNumber;
        private String minSequenceNumber;
        private Integer numberOfSequences;
        private String producer;
        private Double sizeInBytes;
        private String timeLastUpdated;
        private String trailFileId;
        public Builder() {}
        public Builder(GetTrailFileItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumers = defaults.consumers;
    	      this.displayName = defaults.displayName;
    	      this.maxSequenceNumber = defaults.maxSequenceNumber;
    	      this.minSequenceNumber = defaults.minSequenceNumber;
    	      this.numberOfSequences = defaults.numberOfSequences;
    	      this.producer = defaults.producer;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.timeLastUpdated = defaults.timeLastUpdated;
    	      this.trailFileId = defaults.trailFileId;
        }

        @CustomType.Setter
        public Builder consumers(List<String> consumers) {
            if (consumers == null) {
              throw new MissingRequiredPropertyException("GetTrailFileItem", "consumers");
            }
            this.consumers = consumers;
            return this;
        }
        public Builder consumers(String... consumers) {
            return consumers(List.of(consumers));
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetTrailFileItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder maxSequenceNumber(String maxSequenceNumber) {
            if (maxSequenceNumber == null) {
              throw new MissingRequiredPropertyException("GetTrailFileItem", "maxSequenceNumber");
            }
            this.maxSequenceNumber = maxSequenceNumber;
            return this;
        }
        @CustomType.Setter
        public Builder minSequenceNumber(String minSequenceNumber) {
            if (minSequenceNumber == null) {
              throw new MissingRequiredPropertyException("GetTrailFileItem", "minSequenceNumber");
            }
            this.minSequenceNumber = minSequenceNumber;
            return this;
        }
        @CustomType.Setter
        public Builder numberOfSequences(Integer numberOfSequences) {
            if (numberOfSequences == null) {
              throw new MissingRequiredPropertyException("GetTrailFileItem", "numberOfSequences");
            }
            this.numberOfSequences = numberOfSequences;
            return this;
        }
        @CustomType.Setter
        public Builder producer(String producer) {
            if (producer == null) {
              throw new MissingRequiredPropertyException("GetTrailFileItem", "producer");
            }
            this.producer = producer;
            return this;
        }
        @CustomType.Setter
        public Builder sizeInBytes(Double sizeInBytes) {
            if (sizeInBytes == null) {
              throw new MissingRequiredPropertyException("GetTrailFileItem", "sizeInBytes");
            }
            this.sizeInBytes = sizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastUpdated(String timeLastUpdated) {
            if (timeLastUpdated == null) {
              throw new MissingRequiredPropertyException("GetTrailFileItem", "timeLastUpdated");
            }
            this.timeLastUpdated = timeLastUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder trailFileId(String trailFileId) {
            if (trailFileId == null) {
              throw new MissingRequiredPropertyException("GetTrailFileItem", "trailFileId");
            }
            this.trailFileId = trailFileId;
            return this;
        }
        public GetTrailFileItem build() {
            final var _resultValue = new GetTrailFileItem();
            _resultValue.consumers = consumers;
            _resultValue.displayName = displayName;
            _resultValue.maxSequenceNumber = maxSequenceNumber;
            _resultValue.minSequenceNumber = minSequenceNumber;
            _resultValue.numberOfSequences = numberOfSequences;
            _resultValue.producer = producer;
            _resultValue.sizeInBytes = sizeInBytes;
            _resultValue.timeLastUpdated = timeLastUpdated;
            _resultValue.trailFileId = trailFileId;
            return _resultValue;
        }
    }
}
