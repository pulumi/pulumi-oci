// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingBypassCodeSettingsArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingClientAppSettingsArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingCompliancePolicyArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingEmailSettingsArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingEndpointRestrictionsArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingNotificationSettingsArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingTagArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingThirdPartyFactorArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingTotpSettingsArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs;
import com.pulumi.oci.Identity.inputs.DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsAuthenticationFactorSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsAuthenticationFactorSettingArgs Empty = new DomainsAuthenticationFactorSettingArgs();

    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    @Import(name="attributeSets")
    private @Nullable Output<List<String>> attributeSets;

    /**
     * @return (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    public Optional<Output<List<String>>> attributeSets() {
        return Optional.ofNullable(this.attributeSets);
    }

    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<String> attributes;

    /**
     * @return (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    public Optional<Output<String>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * ID of the resource
     * 
     */
    @Import(name="authenticationFactorSettingId", required=true)
    private Output<String> authenticationFactorSettingId;

    /**
     * @return ID of the resource
     * 
     */
    public Output<String> authenticationFactorSettingId() {
        return this.authenticationFactorSettingId;
    }

    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    @Import(name="authorization")
    private @Nullable Output<String> authorization;

    /**
     * @return (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public Optional<Output<String>> authorization() {
        return Optional.ofNullable(this.authorization);
    }

    /**
     * (Updatable) If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
     * 
     * **Added In:** 2011192329
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="autoEnrollEmailFactorDisabled")
    private @Nullable Output<Boolean> autoEnrollEmailFactorDisabled;

    /**
     * @return (Updatable) If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
     * 
     * **Added In:** 2011192329
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> autoEnrollEmailFactorDisabled() {
        return Optional.ofNullable(this.autoEnrollEmailFactorDisabled);
    }

    /**
     * (Updatable) If true, indicates that Bypass Code is enabled for authentication
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="bypassCodeEnabled", required=true)
    private Output<Boolean> bypassCodeEnabled;

    /**
     * @return (Updatable) If true, indicates that Bypass Code is enabled for authentication
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> bypassCodeEnabled() {
        return this.bypassCodeEnabled;
    }

    /**
     * (Updatable) Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="bypassCodeSettings", required=true)
    private Output<DomainsAuthenticationFactorSettingBypassCodeSettingsArgs> bypassCodeSettings;

    /**
     * @return (Updatable) Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<DomainsAuthenticationFactorSettingBypassCodeSettingsArgs> bypassCodeSettings() {
        return this.bypassCodeSettings;
    }

    /**
     * (Updatable) Settings related to compliance, Personal Identification Number (PIN) policy, and so on
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="clientAppSettings", required=true)
    private Output<DomainsAuthenticationFactorSettingClientAppSettingsArgs> clientAppSettings;

    /**
     * @return (Updatable) Settings related to compliance, Personal Identification Number (PIN) policy, and so on
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<DomainsAuthenticationFactorSettingClientAppSettingsArgs> clientAppSettings() {
        return this.clientAppSettings;
    }

    /**
     * (Updatable) Compliance Policy that defines actions to be taken when a condition is violated
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [name]
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="compliancePolicies", required=true)
    private Output<List<DomainsAuthenticationFactorSettingCompliancePolicyArgs>> compliancePolicies;

    /**
     * @return (Updatable) Compliance Policy that defines actions to be taken when a condition is violated
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [name]
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsAuthenticationFactorSettingCompliancePolicyArgs>> compliancePolicies() {
        return this.compliancePolicies;
    }

    /**
     * (Updatable) If true, indicates that the EMAIL channel is enabled for authentication
     * 
     * **Added In:** 18.1.2
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="emailEnabled")
    private @Nullable Output<Boolean> emailEnabled;

    /**
     * @return (Updatable) If true, indicates that the EMAIL channel is enabled for authentication
     * 
     * **Added In:** 18.1.2
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> emailEnabled() {
        return Optional.ofNullable(this.emailEnabled);
    }

    /**
     * (Updatable) Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="emailSettings")
    private @Nullable Output<DomainsAuthenticationFactorSettingEmailSettingsArgs> emailSettings;

    /**
     * @return (Updatable) Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<DomainsAuthenticationFactorSettingEmailSettingsArgs>> emailSettings() {
        return Optional.ofNullable(this.emailSettings);
    }

    /**
     * (Updatable) Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="endpointRestrictions", required=true)
    private Output<DomainsAuthenticationFactorSettingEndpointRestrictionsArgs> endpointRestrictions;

    /**
     * @return (Updatable) Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<DomainsAuthenticationFactorSettingEndpointRestrictionsArgs> endpointRestrictions() {
        return this.endpointRestrictions;
    }

    /**
     * (Updatable) If true, indicates that the Fido Authenticator channels are enabled for authentication
     * 
     * **Added In:** 2009232244
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="fidoAuthenticatorEnabled")
    private @Nullable Output<Boolean> fidoAuthenticatorEnabled;

    /**
     * @return (Updatable) If true, indicates that the Fido Authenticator channels are enabled for authentication
     * 
     * **Added In:** 2009232244
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> fidoAuthenticatorEnabled() {
        return Optional.ofNullable(this.fidoAuthenticatorEnabled);
    }

    /**
     * (Updatable) If true, indicates that &#39;Show backup factor(s)&#39; button will be hidden during authentication
     * 
     * **Added In:** 19.3.3
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="hideBackupFactorEnabled")
    private @Nullable Output<Boolean> hideBackupFactorEnabled;

    /**
     * @return (Updatable) If true, indicates that &#39;Show backup factor(s)&#39; button will be hidden during authentication
     * 
     * **Added In:** 19.3.3
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> hideBackupFactorEnabled() {
        return Optional.ofNullable(this.hideBackupFactorEnabled);
    }

    /**
     * The basic endpoint for the identity domain
     * 
     */
    @Import(name="idcsEndpoint", required=true)
    private Output<String> idcsEndpoint;

    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public Output<String> idcsEndpoint() {
        return this.idcsEndpoint;
    }

    /**
     * (Updatable) Settings related to the use of a user&#39;s profile details from the identity store
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="identityStoreSettings")
    private @Nullable Output<DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs> identityStoreSettings;

    /**
     * @return (Updatable) Settings related to the use of a user&#39;s profile details from the identity store
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs>> identityStoreSettings() {
        return Optional.ofNullable(this.identityStoreSettings);
    }

    /**
     * (Updatable) Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
     * 
     * **Deprecated Since: 18.1.2**
     * 
     * **SCIM++ Properties:**
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;mfaEnrollmentType&#34; and attrValues.value eq &#34;$(mfaEnrollmentType)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="mfaEnrollmentType", required=true)
    private Output<String> mfaEnrollmentType;

    /**
     * @return (Updatable) Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
     * 
     * **Deprecated Since: 18.1.2**
     * 
     * **SCIM++ Properties:**
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;mfaEnrollmentType&#34; and attrValues.value eq &#34;$(mfaEnrollmentType)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> mfaEnrollmentType() {
        return this.mfaEnrollmentType;
    }

    /**
     * (Updatable) Settings related to the Mobile App Notification channel, such as pull
     * 
     * **Added In:** 17.4.2
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="notificationSettings", required=true)
    private Output<DomainsAuthenticationFactorSettingNotificationSettingsArgs> notificationSettings;

    /**
     * @return (Updatable) Settings related to the Mobile App Notification channel, such as pull
     * 
     * **Added In:** 17.4.2
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<DomainsAuthenticationFactorSettingNotificationSettingsArgs> notificationSettings() {
        return this.notificationSettings;
    }

    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    @Import(name="ocid")
    private @Nullable Output<String> ocid;

    /**
     * @return (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    public Optional<Output<String>> ocid() {
        return Optional.ofNullable(this.ocid);
    }

    /**
     * (Updatable) If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="phoneCallEnabled")
    private @Nullable Output<Boolean> phoneCallEnabled;

    /**
     * @return (Updatable) If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> phoneCallEnabled() {
        return Optional.ofNullable(this.phoneCallEnabled);
    }

    /**
     * (Updatable) If true, indicates that the Mobile App Push Notification channel is enabled for authentication
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="pushEnabled", required=true)
    private Output<Boolean> pushEnabled;

    /**
     * @return (Updatable) If true, indicates that the Mobile App Push Notification channel is enabled for authentication
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> pushEnabled() {
        return this.pushEnabled;
    }

    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    @Import(name="resourceTypeSchemaVersion")
    private @Nullable Output<String> resourceTypeSchemaVersion;

    /**
     * @return (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public Optional<Output<String>> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }

    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="schemas", required=true)
    private Output<List<String>> schemas;

    /**
     * @return (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<List<String>> schemas() {
        return this.schemas;
    }

    /**
     * (Updatable) If true, indicates that Security Questions are enabled for authentication
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="securityQuestionsEnabled", required=true)
    private Output<Boolean> securityQuestionsEnabled;

    /**
     * @return (Updatable) If true, indicates that Security Questions are enabled for authentication
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> securityQuestionsEnabled() {
        return this.securityQuestionsEnabled;
    }

    /**
     * (Updatable) If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="smsEnabled", required=true)
    private Output<Boolean> smsEnabled;

    /**
     * @return (Updatable) If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> smsEnabled() {
        return this.smsEnabled;
    }

    /**
     * (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DomainsAuthenticationFactorSettingTagArgs>> tags;

    /**
     * @return (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsAuthenticationFactorSettingTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * (Updatable) Settings related to third-party factor
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="thirdPartyFactor")
    private @Nullable Output<DomainsAuthenticationFactorSettingThirdPartyFactorArgs> thirdPartyFactor;

    /**
     * @return (Updatable) Settings related to third-party factor
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<DomainsAuthenticationFactorSettingThirdPartyFactorArgs>> thirdPartyFactor() {
        return Optional.ofNullable(this.thirdPartyFactor);
    }

    /**
     * (Updatable) If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="totpEnabled", required=true)
    private Output<Boolean> totpEnabled;

    /**
     * @return (Updatable) If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> totpEnabled() {
        return this.totpEnabled;
    }

    /**
     * (Updatable) Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="totpSettings", required=true)
    private Output<DomainsAuthenticationFactorSettingTotpSettingsArgs> totpSettings;

    /**
     * @return (Updatable) Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<DomainsAuthenticationFactorSettingTotpSettingsArgs> totpSettings() {
        return this.totpSettings;
    }

    /**
     * (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
     * 
     */
    @Import(name="urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings")
    private @Nullable Output<DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;

    /**
     * @return (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
     * 
     */
    public Optional<Output<DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs>> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings() {
        return Optional.ofNullable(this.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings);
    }

    /**
     * (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
     * 
     */
    @Import(name="urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings")
    private @Nullable Output<DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsArgs> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;

    /**
     * @return (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
     * 
     */
    public Optional<Output<DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsArgs>> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings() {
        return Optional.ofNullable(this.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings);
    }

    /**
     * (Updatable) Factors for which enrollment should be blocked for End User
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="userEnrollmentDisabledFactors")
    private @Nullable Output<List<String>> userEnrollmentDisabledFactors;

    /**
     * @return (Updatable) Factors for which enrollment should be blocked for End User
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> userEnrollmentDisabledFactors() {
        return Optional.ofNullable(this.userEnrollmentDisabledFactors);
    }

    /**
     * (Updatable) If true, indicates that the Yubico OTP is enabled for authentication
     * 
     * **Added In:** 2109090424
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="yubicoOtpEnabled")
    private @Nullable Output<Boolean> yubicoOtpEnabled;

    /**
     * @return (Updatable) If true, indicates that the Yubico OTP is enabled for authentication
     * 
     * **Added In:** 2109090424
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Boolean>> yubicoOtpEnabled() {
        return Optional.ofNullable(this.yubicoOtpEnabled);
    }

    private DomainsAuthenticationFactorSettingArgs() {}

    private DomainsAuthenticationFactorSettingArgs(DomainsAuthenticationFactorSettingArgs $) {
        this.attributeSets = $.attributeSets;
        this.attributes = $.attributes;
        this.authenticationFactorSettingId = $.authenticationFactorSettingId;
        this.authorization = $.authorization;
        this.autoEnrollEmailFactorDisabled = $.autoEnrollEmailFactorDisabled;
        this.bypassCodeEnabled = $.bypassCodeEnabled;
        this.bypassCodeSettings = $.bypassCodeSettings;
        this.clientAppSettings = $.clientAppSettings;
        this.compliancePolicies = $.compliancePolicies;
        this.emailEnabled = $.emailEnabled;
        this.emailSettings = $.emailSettings;
        this.endpointRestrictions = $.endpointRestrictions;
        this.fidoAuthenticatorEnabled = $.fidoAuthenticatorEnabled;
        this.hideBackupFactorEnabled = $.hideBackupFactorEnabled;
        this.idcsEndpoint = $.idcsEndpoint;
        this.identityStoreSettings = $.identityStoreSettings;
        this.mfaEnrollmentType = $.mfaEnrollmentType;
        this.notificationSettings = $.notificationSettings;
        this.ocid = $.ocid;
        this.phoneCallEnabled = $.phoneCallEnabled;
        this.pushEnabled = $.pushEnabled;
        this.resourceTypeSchemaVersion = $.resourceTypeSchemaVersion;
        this.schemas = $.schemas;
        this.securityQuestionsEnabled = $.securityQuestionsEnabled;
        this.smsEnabled = $.smsEnabled;
        this.tags = $.tags;
        this.thirdPartyFactor = $.thirdPartyFactor;
        this.totpEnabled = $.totpEnabled;
        this.totpSettings = $.totpSettings;
        this.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings = $.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
        this.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings = $.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
        this.userEnrollmentDisabledFactors = $.userEnrollmentDisabledFactors;
        this.yubicoOtpEnabled = $.yubicoOtpEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsAuthenticationFactorSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsAuthenticationFactorSettingArgs $;

        public Builder() {
            $ = new DomainsAuthenticationFactorSettingArgs();
        }

        public Builder(DomainsAuthenticationFactorSettingArgs defaults) {
            $ = new DomainsAuthenticationFactorSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(@Nullable Output<List<String>> attributeSets) {
            $.attributeSets = attributeSets;
            return this;
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(List<String> attributeSets) {
            return attributeSets(Output.of(attributeSets));
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }

        /**
         * @param attributes (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<String> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(String attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param authenticationFactorSettingId ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder authenticationFactorSettingId(Output<String> authenticationFactorSettingId) {
            $.authenticationFactorSettingId = authenticationFactorSettingId;
            return this;
        }

        /**
         * @param authenticationFactorSettingId ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder authenticationFactorSettingId(String authenticationFactorSettingId) {
            return authenticationFactorSettingId(Output.of(authenticationFactorSettingId));
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(@Nullable Output<String> authorization) {
            $.authorization = authorization;
            return this;
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(String authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param autoEnrollEmailFactorDisabled (Updatable) If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
         * 
         * **Added In:** 2011192329
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder autoEnrollEmailFactorDisabled(@Nullable Output<Boolean> autoEnrollEmailFactorDisabled) {
            $.autoEnrollEmailFactorDisabled = autoEnrollEmailFactorDisabled;
            return this;
        }

        /**
         * @param autoEnrollEmailFactorDisabled (Updatable) If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
         * 
         * **Added In:** 2011192329
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder autoEnrollEmailFactorDisabled(Boolean autoEnrollEmailFactorDisabled) {
            return autoEnrollEmailFactorDisabled(Output.of(autoEnrollEmailFactorDisabled));
        }

        /**
         * @param bypassCodeEnabled (Updatable) If true, indicates that Bypass Code is enabled for authentication
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder bypassCodeEnabled(Output<Boolean> bypassCodeEnabled) {
            $.bypassCodeEnabled = bypassCodeEnabled;
            return this;
        }

        /**
         * @param bypassCodeEnabled (Updatable) If true, indicates that Bypass Code is enabled for authentication
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder bypassCodeEnabled(Boolean bypassCodeEnabled) {
            return bypassCodeEnabled(Output.of(bypassCodeEnabled));
        }

        /**
         * @param bypassCodeSettings (Updatable) Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder bypassCodeSettings(Output<DomainsAuthenticationFactorSettingBypassCodeSettingsArgs> bypassCodeSettings) {
            $.bypassCodeSettings = bypassCodeSettings;
            return this;
        }

        /**
         * @param bypassCodeSettings (Updatable) Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder bypassCodeSettings(DomainsAuthenticationFactorSettingBypassCodeSettingsArgs bypassCodeSettings) {
            return bypassCodeSettings(Output.of(bypassCodeSettings));
        }

        /**
         * @param clientAppSettings (Updatable) Settings related to compliance, Personal Identification Number (PIN) policy, and so on
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder clientAppSettings(Output<DomainsAuthenticationFactorSettingClientAppSettingsArgs> clientAppSettings) {
            $.clientAppSettings = clientAppSettings;
            return this;
        }

        /**
         * @param clientAppSettings (Updatable) Settings related to compliance, Personal Identification Number (PIN) policy, and so on
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder clientAppSettings(DomainsAuthenticationFactorSettingClientAppSettingsArgs clientAppSettings) {
            return clientAppSettings(Output.of(clientAppSettings));
        }

        /**
         * @param compliancePolicies (Updatable) Compliance Policy that defines actions to be taken when a condition is violated
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [name]
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder compliancePolicies(Output<List<DomainsAuthenticationFactorSettingCompliancePolicyArgs>> compliancePolicies) {
            $.compliancePolicies = compliancePolicies;
            return this;
        }

        /**
         * @param compliancePolicies (Updatable) Compliance Policy that defines actions to be taken when a condition is violated
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [name]
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder compliancePolicies(List<DomainsAuthenticationFactorSettingCompliancePolicyArgs> compliancePolicies) {
            return compliancePolicies(Output.of(compliancePolicies));
        }

        /**
         * @param compliancePolicies (Updatable) Compliance Policy that defines actions to be taken when a condition is violated
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [name]
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder compliancePolicies(DomainsAuthenticationFactorSettingCompliancePolicyArgs... compliancePolicies) {
            return compliancePolicies(List.of(compliancePolicies));
        }

        /**
         * @param emailEnabled (Updatable) If true, indicates that the EMAIL channel is enabled for authentication
         * 
         * **Added In:** 18.1.2
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailEnabled(@Nullable Output<Boolean> emailEnabled) {
            $.emailEnabled = emailEnabled;
            return this;
        }

        /**
         * @param emailEnabled (Updatable) If true, indicates that the EMAIL channel is enabled for authentication
         * 
         * **Added In:** 18.1.2
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailEnabled(Boolean emailEnabled) {
            return emailEnabled(Output.of(emailEnabled));
        }

        /**
         * @param emailSettings (Updatable) Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailSettings(@Nullable Output<DomainsAuthenticationFactorSettingEmailSettingsArgs> emailSettings) {
            $.emailSettings = emailSettings;
            return this;
        }

        /**
         * @param emailSettings (Updatable) Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailSettings(DomainsAuthenticationFactorSettingEmailSettingsArgs emailSettings) {
            return emailSettings(Output.of(emailSettings));
        }

        /**
         * @param endpointRestrictions (Updatable) Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder endpointRestrictions(Output<DomainsAuthenticationFactorSettingEndpointRestrictionsArgs> endpointRestrictions) {
            $.endpointRestrictions = endpointRestrictions;
            return this;
        }

        /**
         * @param endpointRestrictions (Updatable) Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder endpointRestrictions(DomainsAuthenticationFactorSettingEndpointRestrictionsArgs endpointRestrictions) {
            return endpointRestrictions(Output.of(endpointRestrictions));
        }

        /**
         * @param fidoAuthenticatorEnabled (Updatable) If true, indicates that the Fido Authenticator channels are enabled for authentication
         * 
         * **Added In:** 2009232244
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder fidoAuthenticatorEnabled(@Nullable Output<Boolean> fidoAuthenticatorEnabled) {
            $.fidoAuthenticatorEnabled = fidoAuthenticatorEnabled;
            return this;
        }

        /**
         * @param fidoAuthenticatorEnabled (Updatable) If true, indicates that the Fido Authenticator channels are enabled for authentication
         * 
         * **Added In:** 2009232244
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder fidoAuthenticatorEnabled(Boolean fidoAuthenticatorEnabled) {
            return fidoAuthenticatorEnabled(Output.of(fidoAuthenticatorEnabled));
        }

        /**
         * @param hideBackupFactorEnabled (Updatable) If true, indicates that &#39;Show backup factor(s)&#39; button will be hidden during authentication
         * 
         * **Added In:** 19.3.3
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder hideBackupFactorEnabled(@Nullable Output<Boolean> hideBackupFactorEnabled) {
            $.hideBackupFactorEnabled = hideBackupFactorEnabled;
            return this;
        }

        /**
         * @param hideBackupFactorEnabled (Updatable) If true, indicates that &#39;Show backup factor(s)&#39; button will be hidden during authentication
         * 
         * **Added In:** 19.3.3
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder hideBackupFactorEnabled(Boolean hideBackupFactorEnabled) {
            return hideBackupFactorEnabled(Output.of(hideBackupFactorEnabled));
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(Output<String> idcsEndpoint) {
            $.idcsEndpoint = idcsEndpoint;
            return this;
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(String idcsEndpoint) {
            return idcsEndpoint(Output.of(idcsEndpoint));
        }

        /**
         * @param identityStoreSettings (Updatable) Settings related to the use of a user&#39;s profile details from the identity store
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder identityStoreSettings(@Nullable Output<DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs> identityStoreSettings) {
            $.identityStoreSettings = identityStoreSettings;
            return this;
        }

        /**
         * @param identityStoreSettings (Updatable) Settings related to the use of a user&#39;s profile details from the identity store
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder identityStoreSettings(DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs identityStoreSettings) {
            return identityStoreSettings(Output.of(identityStoreSettings));
        }

        /**
         * @param mfaEnrollmentType (Updatable) Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
         * 
         * **Deprecated Since: 18.1.2**
         * 
         * **SCIM++ Properties:**
         * * idcsCanonicalValueSourceFilter: attrName eq &#34;mfaEnrollmentType&#34; and attrValues.value eq &#34;$(mfaEnrollmentType)&#34;
         * * idcsCanonicalValueSourceResourceType: AllowedValue
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder mfaEnrollmentType(Output<String> mfaEnrollmentType) {
            $.mfaEnrollmentType = mfaEnrollmentType;
            return this;
        }

        /**
         * @param mfaEnrollmentType (Updatable) Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
         * 
         * **Deprecated Since: 18.1.2**
         * 
         * **SCIM++ Properties:**
         * * idcsCanonicalValueSourceFilter: attrName eq &#34;mfaEnrollmentType&#34; and attrValues.value eq &#34;$(mfaEnrollmentType)&#34;
         * * idcsCanonicalValueSourceResourceType: AllowedValue
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder mfaEnrollmentType(String mfaEnrollmentType) {
            return mfaEnrollmentType(Output.of(mfaEnrollmentType));
        }

        /**
         * @param notificationSettings (Updatable) Settings related to the Mobile App Notification channel, such as pull
         * 
         * **Added In:** 17.4.2
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder notificationSettings(Output<DomainsAuthenticationFactorSettingNotificationSettingsArgs> notificationSettings) {
            $.notificationSettings = notificationSettings;
            return this;
        }

        /**
         * @param notificationSettings (Updatable) Settings related to the Mobile App Notification channel, such as pull
         * 
         * **Added In:** 17.4.2
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder notificationSettings(DomainsAuthenticationFactorSettingNotificationSettingsArgs notificationSettings) {
            return notificationSettings(Output.of(notificationSettings));
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(@Nullable Output<String> ocid) {
            $.ocid = ocid;
            return this;
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(String ocid) {
            return ocid(Output.of(ocid));
        }

        /**
         * @param phoneCallEnabled (Updatable) If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder phoneCallEnabled(@Nullable Output<Boolean> phoneCallEnabled) {
            $.phoneCallEnabled = phoneCallEnabled;
            return this;
        }

        /**
         * @param phoneCallEnabled (Updatable) If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder phoneCallEnabled(Boolean phoneCallEnabled) {
            return phoneCallEnabled(Output.of(phoneCallEnabled));
        }

        /**
         * @param pushEnabled (Updatable) If true, indicates that the Mobile App Push Notification channel is enabled for authentication
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder pushEnabled(Output<Boolean> pushEnabled) {
            $.pushEnabled = pushEnabled;
            return this;
        }

        /**
         * @param pushEnabled (Updatable) If true, indicates that the Mobile App Push Notification channel is enabled for authentication
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder pushEnabled(Boolean pushEnabled) {
            return pushEnabled(Output.of(pushEnabled));
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(@Nullable Output<String> resourceTypeSchemaVersion) {
            $.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(String resourceTypeSchemaVersion) {
            return resourceTypeSchemaVersion(Output.of(resourceTypeSchemaVersion));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(Output<List<String>> schemas) {
            $.schemas = schemas;
            return this;
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(List<String> schemas) {
            return schemas(Output.of(schemas));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }

        /**
         * @param securityQuestionsEnabled (Updatable) If true, indicates that Security Questions are enabled for authentication
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder securityQuestionsEnabled(Output<Boolean> securityQuestionsEnabled) {
            $.securityQuestionsEnabled = securityQuestionsEnabled;
            return this;
        }

        /**
         * @param securityQuestionsEnabled (Updatable) If true, indicates that Security Questions are enabled for authentication
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder securityQuestionsEnabled(Boolean securityQuestionsEnabled) {
            return securityQuestionsEnabled(Output.of(securityQuestionsEnabled));
        }

        /**
         * @param smsEnabled (Updatable) If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder smsEnabled(Output<Boolean> smsEnabled) {
            $.smsEnabled = smsEnabled;
            return this;
        }

        /**
         * @param smsEnabled (Updatable) If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder smsEnabled(Boolean smsEnabled) {
            return smsEnabled(Output.of(smsEnabled));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DomainsAuthenticationFactorSettingTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DomainsAuthenticationFactorSettingTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(DomainsAuthenticationFactorSettingTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param thirdPartyFactor (Updatable) Settings related to third-party factor
         * 
         * **Added In:** 19.2.1
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder thirdPartyFactor(@Nullable Output<DomainsAuthenticationFactorSettingThirdPartyFactorArgs> thirdPartyFactor) {
            $.thirdPartyFactor = thirdPartyFactor;
            return this;
        }

        /**
         * @param thirdPartyFactor (Updatable) Settings related to third-party factor
         * 
         * **Added In:** 19.2.1
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder thirdPartyFactor(DomainsAuthenticationFactorSettingThirdPartyFactorArgs thirdPartyFactor) {
            return thirdPartyFactor(Output.of(thirdPartyFactor));
        }

        /**
         * @param totpEnabled (Updatable) If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder totpEnabled(Output<Boolean> totpEnabled) {
            $.totpEnabled = totpEnabled;
            return this;
        }

        /**
         * @param totpEnabled (Updatable) If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder totpEnabled(Boolean totpEnabled) {
            return totpEnabled(Output.of(totpEnabled));
        }

        /**
         * @param totpSettings (Updatable) Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder totpSettings(Output<DomainsAuthenticationFactorSettingTotpSettingsArgs> totpSettings) {
            $.totpSettings = totpSettings;
            return this;
        }

        /**
         * @param totpSettings (Updatable) Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder totpSettings(DomainsAuthenticationFactorSettingTotpSettingsArgs totpSettings) {
            return totpSettings(Output.of(totpSettings));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings(@Nullable Output<DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings) {
            $.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings = urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
            return this;
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings(DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettingsArgs urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings) {
            return urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings(Output.of(urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings(@Nullable Output<DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsArgs> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings) {
            $.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings = urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
            return this;
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings (Updatable) This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings(DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsArgs urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings) {
            return urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings(Output.of(urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings));
        }

        /**
         * @param userEnrollmentDisabledFactors (Updatable) Factors for which enrollment should be blocked for End User
         * 
         * **Added In:** 2012271618
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder userEnrollmentDisabledFactors(@Nullable Output<List<String>> userEnrollmentDisabledFactors) {
            $.userEnrollmentDisabledFactors = userEnrollmentDisabledFactors;
            return this;
        }

        /**
         * @param userEnrollmentDisabledFactors (Updatable) Factors for which enrollment should be blocked for End User
         * 
         * **Added In:** 2012271618
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder userEnrollmentDisabledFactors(List<String> userEnrollmentDisabledFactors) {
            return userEnrollmentDisabledFactors(Output.of(userEnrollmentDisabledFactors));
        }

        /**
         * @param userEnrollmentDisabledFactors (Updatable) Factors for which enrollment should be blocked for End User
         * 
         * **Added In:** 2012271618
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder userEnrollmentDisabledFactors(String... userEnrollmentDisabledFactors) {
            return userEnrollmentDisabledFactors(List.of(userEnrollmentDisabledFactors));
        }

        /**
         * @param yubicoOtpEnabled (Updatable) If true, indicates that the Yubico OTP is enabled for authentication
         * 
         * **Added In:** 2109090424
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder yubicoOtpEnabled(@Nullable Output<Boolean> yubicoOtpEnabled) {
            $.yubicoOtpEnabled = yubicoOtpEnabled;
            return this;
        }

        /**
         * @param yubicoOtpEnabled (Updatable) If true, indicates that the Yubico OTP is enabled for authentication
         * 
         * **Added In:** 2109090424
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder yubicoOtpEnabled(Boolean yubicoOtpEnabled) {
            return yubicoOtpEnabled(Output.of(yubicoOtpEnabled));
        }

        public DomainsAuthenticationFactorSettingArgs build() {
            if ($.authenticationFactorSettingId == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "authenticationFactorSettingId");
            }
            if ($.bypassCodeEnabled == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "bypassCodeEnabled");
            }
            if ($.bypassCodeSettings == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "bypassCodeSettings");
            }
            if ($.clientAppSettings == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "clientAppSettings");
            }
            if ($.compliancePolicies == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "compliancePolicies");
            }
            if ($.endpointRestrictions == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "endpointRestrictions");
            }
            if ($.idcsEndpoint == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "idcsEndpoint");
            }
            if ($.mfaEnrollmentType == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "mfaEnrollmentType");
            }
            if ($.notificationSettings == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "notificationSettings");
            }
            if ($.pushEnabled == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "pushEnabled");
            }
            if ($.schemas == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "schemas");
            }
            if ($.securityQuestionsEnabled == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "securityQuestionsEnabled");
            }
            if ($.smsEnabled == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "smsEnabled");
            }
            if ($.totpEnabled == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "totpEnabled");
            }
            if ($.totpSettings == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingArgs", "totpSettings");
            }
            return $;
        }
    }

}
