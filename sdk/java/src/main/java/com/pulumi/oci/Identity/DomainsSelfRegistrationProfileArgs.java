// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.DomainsSelfRegistrationProfileAfterSubmitTextArgs;
import com.pulumi.oci.Identity.inputs.DomainsSelfRegistrationProfileConsentTextArgs;
import com.pulumi.oci.Identity.inputs.DomainsSelfRegistrationProfileDefaultGroupArgs;
import com.pulumi.oci.Identity.inputs.DomainsSelfRegistrationProfileDisplayNameArgs;
import com.pulumi.oci.Identity.inputs.DomainsSelfRegistrationProfileEmailTemplateArgs;
import com.pulumi.oci.Identity.inputs.DomainsSelfRegistrationProfileFooterTextArgs;
import com.pulumi.oci.Identity.inputs.DomainsSelfRegistrationProfileHeaderTextArgs;
import com.pulumi.oci.Identity.inputs.DomainsSelfRegistrationProfileTagArgs;
import com.pulumi.oci.Identity.inputs.DomainsSelfRegistrationProfileUserAttributeArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsSelfRegistrationProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsSelfRegistrationProfileArgs Empty = new DomainsSelfRegistrationProfileArgs();

    /**
     * (Updatable) **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none A Boolean value that indicates whether Account verification email is required to be sent before login or not
     * 
     */
    @Import(name="activationEmailRequired", required=true)
    private Output<Boolean> activationEmailRequired;

    /**
     * @return (Updatable) **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none A Boolean value that indicates whether Account verification email is required to be sent before login or not
     * 
     */
    public Output<Boolean> activationEmailRequired() {
        return this.activationEmailRequired;
    }

    /**
     * (Updatable) A Boolean value that indicates whether the profile is enabled or not
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return (Updatable) A Boolean value that indicates whether the profile is enabled or not
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * (Updatable) Text to be displayed on UI after doing self registration
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * idcsMultiLanguage: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="afterSubmitTexts")
    private @Nullable Output<List<DomainsSelfRegistrationProfileAfterSubmitTextArgs>> afterSubmitTexts;

    /**
     * @return (Updatable) Text to be displayed on UI after doing self registration
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * idcsMultiLanguage: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsSelfRegistrationProfileAfterSubmitTextArgs>>> afterSubmitTexts() {
        return Optional.ofNullable(this.afterSubmitTexts);
    }

    /**
     * (Updatable) A Multivalue String value for Email domains which are valid for this profile
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="allowedEmailDomains")
    private @Nullable Output<List<String>> allowedEmailDomains;

    /**
     * @return (Updatable) A Multivalue String value for Email domains which are valid for this profile
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> allowedEmailDomains() {
        return Optional.ofNullable(this.allowedEmailDomains);
    }

    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    @Import(name="attributeSets")
    private @Nullable Output<List<String>> attributeSets;

    /**
     * @return (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    public Optional<Output<List<String>>> attributeSets() {
        return Optional.ofNullable(this.attributeSets);
    }

    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<String> attributes;

    /**
     * @return (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    public Optional<Output<String>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    @Import(name="authorization")
    private @Nullable Output<String> authorization;

    /**
     * @return (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public Optional<Output<String>> authorization() {
        return Optional.ofNullable(this.authorization);
    }

    /**
     * (Updatable) A boolean value that indicates whether the consent text is present.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="consentTextPresent", required=true)
    private Output<Boolean> consentTextPresent;

    /**
     * @return (Updatable) A boolean value that indicates whether the consent text is present.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> consentTextPresent() {
        return this.consentTextPresent;
    }

    /**
     * (Updatable) Consent text
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * idcsMultiLanguage: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="consentTexts")
    private @Nullable Output<List<DomainsSelfRegistrationProfileConsentTextArgs>> consentTexts;

    /**
     * @return (Updatable) Consent text
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * idcsMultiLanguage: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsSelfRegistrationProfileConsentTextArgs>>> consentTexts() {
        return Optional.ofNullable(this.consentTexts);
    }

    /**
     * (Updatable) Default groups assigned to the user
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * 
     */
    @Import(name="defaultGroups")
    private @Nullable Output<List<DomainsSelfRegistrationProfileDefaultGroupArgs>> defaultGroups;

    /**
     * @return (Updatable) Default groups assigned to the user
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsSelfRegistrationProfileDefaultGroupArgs>>> defaultGroups() {
        return Optional.ofNullable(this.defaultGroups);
    }

    /**
     * (Updatable) A Multivalue String Value for Email domains to be handled as exceptions
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="disallowedEmailDomains")
    private @Nullable Output<List<String>> disallowedEmailDomains;

    /**
     * @return (Updatable) A Multivalue String Value for Email domains to be handled as exceptions
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> disallowedEmailDomains() {
        return Optional.ofNullable(this.disallowedEmailDomains);
    }

    /**
     * (Updatable) Registration page name
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * idcsMultiLanguage: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="displayNames", required=true)
    private Output<List<DomainsSelfRegistrationProfileDisplayNameArgs>> displayNames;

    /**
     * @return (Updatable) Registration page name
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * idcsMultiLanguage: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsSelfRegistrationProfileDisplayNameArgs>> displayNames() {
        return this.displayNames;
    }

    /**
     * (Updatable) Email template
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: request
     * * type: complex
     * 
     */
    @Import(name="emailTemplate", required=true)
    private Output<DomainsSelfRegistrationProfileEmailTemplateArgs> emailTemplate;

    /**
     * @return (Updatable) Email template
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: request
     * * type: complex
     * 
     */
    public Output<DomainsSelfRegistrationProfileEmailTemplateArgs> emailTemplate() {
        return this.emailTemplate;
    }

    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * (Updatable) References to footer logo
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: reference
     * 
     */
    @Import(name="footerLogo")
    private @Nullable Output<String> footerLogo;

    /**
     * @return (Updatable) References to footer logo
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: reference
     * 
     */
    public Optional<Output<String>> footerLogo() {
        return Optional.ofNullable(this.footerLogo);
    }

    /**
     * (Updatable) Footer text
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * idcsMultiLanguage: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="footerTexts")
    private @Nullable Output<List<DomainsSelfRegistrationProfileFooterTextArgs>> footerTexts;

    /**
     * @return (Updatable) Footer text
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * idcsMultiLanguage: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsSelfRegistrationProfileFooterTextArgs>>> footerTexts() {
        return Optional.ofNullable(this.footerTexts);
    }

    /**
     * (Updatable) Reference to header logo
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: reference
     * 
     */
    @Import(name="headerLogo")
    private @Nullable Output<String> headerLogo;

    /**
     * @return (Updatable) Reference to header logo
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: reference
     * 
     */
    public Optional<Output<String>> headerLogo() {
        return Optional.ofNullable(this.headerLogo);
    }

    /**
     * (Updatable) Header text
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * idcsMultiLanguage: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="headerTexts")
    private @Nullable Output<List<DomainsSelfRegistrationProfileHeaderTextArgs>> headerTexts;

    /**
     * @return (Updatable) Header text
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * idcsMultiLanguage: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsSelfRegistrationProfileHeaderTextArgs>>> headerTexts() {
        return Optional.ofNullable(this.headerTexts);
    }

    /**
     * The basic endpoint for the identity domain
     * 
     */
    @Import(name="idcsEndpoint", required=true)
    private Output<String> idcsEndpoint;

    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public Output<String> idcsEndpoint() {
        return this.idcsEndpoint;
    }

    /**
     * (Updatable) Name of the profile
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: global
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) Name of the profile
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: global
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) Number of days redirect URL is valid
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="numberOfDaysRedirectUrlIsValid", required=true)
    private Output<Integer> numberOfDaysRedirectUrlIsValid;

    /**
     * @return (Updatable) Number of days redirect URL is valid
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> numberOfDaysRedirectUrlIsValid() {
        return this.numberOfDaysRedirectUrlIsValid;
    }

    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    @Import(name="ocid")
    private @Nullable Output<String> ocid;

    /**
     * @return (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    public Optional<Output<String>> ocid() {
        return Optional.ofNullable(this.ocid);
    }

    /**
     * (Updatable) This URL will be replaced in email notification sent to user. When activation email required is set to true, user is created in \&#34;pending verification\&#34; state, upon clicking this link user will be able to activate himself. When activation email required is set to false, user is created in \&#34;verified\&#34; state, this link will be used to verify user&#39;s email.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="redirectUrl", required=true)
    private Output<String> redirectUrl;

    /**
     * @return (Updatable) This URL will be replaced in email notification sent to user. When activation email required is set to true, user is created in \&#34;pending verification\&#34; state, upon clicking this link user will be able to activate himself. When activation email required is set to false, user is created in \&#34;verified\&#34; state, this link will be used to verify user&#39;s email.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> redirectUrl() {
        return this.redirectUrl;
    }

    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    @Import(name="resourceTypeSchemaVersion")
    private @Nullable Output<String> resourceTypeSchemaVersion;

    /**
     * @return (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public Optional<Output<String>> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }

    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="schemas", required=true)
    private Output<List<String>> schemas;

    /**
     * @return (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<List<String>> schemas() {
        return this.schemas;
    }

    /**
     * (Updatable) A Boolean value that indicates whether the profile should be displayed on login page
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="showOnLoginPage", required=true)
    private Output<Boolean> showOnLoginPage;

    /**
     * @return (Updatable) A Boolean value that indicates whether the profile should be displayed on login page
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> showOnLoginPage() {
        return this.showOnLoginPage;
    }

    /**
     * (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DomainsSelfRegistrationProfileTagArgs>> tags;

    /**
     * @return (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsSelfRegistrationProfileTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * (Updatable) **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none User Attributes
     * 
     */
    @Import(name="userAttributes")
    private @Nullable Output<List<DomainsSelfRegistrationProfileUserAttributeArgs>> userAttributes;

    /**
     * @return (Updatable) **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none User Attributes
     * 
     */
    public Optional<Output<List<DomainsSelfRegistrationProfileUserAttributeArgs>>> userAttributes() {
        return Optional.ofNullable(this.userAttributes);
    }

    private DomainsSelfRegistrationProfileArgs() {}

    private DomainsSelfRegistrationProfileArgs(DomainsSelfRegistrationProfileArgs $) {
        this.activationEmailRequired = $.activationEmailRequired;
        this.active = $.active;
        this.afterSubmitTexts = $.afterSubmitTexts;
        this.allowedEmailDomains = $.allowedEmailDomains;
        this.attributeSets = $.attributeSets;
        this.attributes = $.attributes;
        this.authorization = $.authorization;
        this.consentTextPresent = $.consentTextPresent;
        this.consentTexts = $.consentTexts;
        this.defaultGroups = $.defaultGroups;
        this.disallowedEmailDomains = $.disallowedEmailDomains;
        this.displayNames = $.displayNames;
        this.emailTemplate = $.emailTemplate;
        this.externalId = $.externalId;
        this.footerLogo = $.footerLogo;
        this.footerTexts = $.footerTexts;
        this.headerLogo = $.headerLogo;
        this.headerTexts = $.headerTexts;
        this.idcsEndpoint = $.idcsEndpoint;
        this.name = $.name;
        this.numberOfDaysRedirectUrlIsValid = $.numberOfDaysRedirectUrlIsValid;
        this.ocid = $.ocid;
        this.redirectUrl = $.redirectUrl;
        this.resourceTypeSchemaVersion = $.resourceTypeSchemaVersion;
        this.schemas = $.schemas;
        this.showOnLoginPage = $.showOnLoginPage;
        this.tags = $.tags;
        this.userAttributes = $.userAttributes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsSelfRegistrationProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsSelfRegistrationProfileArgs $;

        public Builder() {
            $ = new DomainsSelfRegistrationProfileArgs();
        }

        public Builder(DomainsSelfRegistrationProfileArgs defaults) {
            $ = new DomainsSelfRegistrationProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activationEmailRequired (Updatable) **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none A Boolean value that indicates whether Account verification email is required to be sent before login or not
         * 
         * @return builder
         * 
         */
        public Builder activationEmailRequired(Output<Boolean> activationEmailRequired) {
            $.activationEmailRequired = activationEmailRequired;
            return this;
        }

        /**
         * @param activationEmailRequired (Updatable) **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none A Boolean value that indicates whether Account verification email is required to be sent before login or not
         * 
         * @return builder
         * 
         */
        public Builder activationEmailRequired(Boolean activationEmailRequired) {
            return activationEmailRequired(Output.of(activationEmailRequired));
        }

        /**
         * @param active (Updatable) A Boolean value that indicates whether the profile is enabled or not
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active (Updatable) A Boolean value that indicates whether the profile is enabled or not
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param afterSubmitTexts (Updatable) Text to be displayed on UI after doing self registration
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder afterSubmitTexts(@Nullable Output<List<DomainsSelfRegistrationProfileAfterSubmitTextArgs>> afterSubmitTexts) {
            $.afterSubmitTexts = afterSubmitTexts;
            return this;
        }

        /**
         * @param afterSubmitTexts (Updatable) Text to be displayed on UI after doing self registration
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder afterSubmitTexts(List<DomainsSelfRegistrationProfileAfterSubmitTextArgs> afterSubmitTexts) {
            return afterSubmitTexts(Output.of(afterSubmitTexts));
        }

        /**
         * @param afterSubmitTexts (Updatable) Text to be displayed on UI after doing self registration
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder afterSubmitTexts(DomainsSelfRegistrationProfileAfterSubmitTextArgs... afterSubmitTexts) {
            return afterSubmitTexts(List.of(afterSubmitTexts));
        }

        /**
         * @param allowedEmailDomains (Updatable) A Multivalue String value for Email domains which are valid for this profile
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder allowedEmailDomains(@Nullable Output<List<String>> allowedEmailDomains) {
            $.allowedEmailDomains = allowedEmailDomains;
            return this;
        }

        /**
         * @param allowedEmailDomains (Updatable) A Multivalue String value for Email domains which are valid for this profile
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder allowedEmailDomains(List<String> allowedEmailDomains) {
            return allowedEmailDomains(Output.of(allowedEmailDomains));
        }

        /**
         * @param allowedEmailDomains (Updatable) A Multivalue String value for Email domains which are valid for this profile
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder allowedEmailDomains(String... allowedEmailDomains) {
            return allowedEmailDomains(List.of(allowedEmailDomains));
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(@Nullable Output<List<String>> attributeSets) {
            $.attributeSets = attributeSets;
            return this;
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(List<String> attributeSets) {
            return attributeSets(Output.of(attributeSets));
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }

        /**
         * @param attributes (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<String> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(String attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(@Nullable Output<String> authorization) {
            $.authorization = authorization;
            return this;
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(String authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param consentTextPresent (Updatable) A boolean value that indicates whether the consent text is present.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consentTextPresent(Output<Boolean> consentTextPresent) {
            $.consentTextPresent = consentTextPresent;
            return this;
        }

        /**
         * @param consentTextPresent (Updatable) A boolean value that indicates whether the consent text is present.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consentTextPresent(Boolean consentTextPresent) {
            return consentTextPresent(Output.of(consentTextPresent));
        }

        /**
         * @param consentTexts (Updatable) Consent text
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consentTexts(@Nullable Output<List<DomainsSelfRegistrationProfileConsentTextArgs>> consentTexts) {
            $.consentTexts = consentTexts;
            return this;
        }

        /**
         * @param consentTexts (Updatable) Consent text
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consentTexts(List<DomainsSelfRegistrationProfileConsentTextArgs> consentTexts) {
            return consentTexts(Output.of(consentTexts));
        }

        /**
         * @param consentTexts (Updatable) Consent text
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consentTexts(DomainsSelfRegistrationProfileConsentTextArgs... consentTexts) {
            return consentTexts(List.of(consentTexts));
        }

        /**
         * @param defaultGroups (Updatable) Default groups assigned to the user
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder defaultGroups(@Nullable Output<List<DomainsSelfRegistrationProfileDefaultGroupArgs>> defaultGroups) {
            $.defaultGroups = defaultGroups;
            return this;
        }

        /**
         * @param defaultGroups (Updatable) Default groups assigned to the user
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder defaultGroups(List<DomainsSelfRegistrationProfileDefaultGroupArgs> defaultGroups) {
            return defaultGroups(Output.of(defaultGroups));
        }

        /**
         * @param defaultGroups (Updatable) Default groups assigned to the user
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder defaultGroups(DomainsSelfRegistrationProfileDefaultGroupArgs... defaultGroups) {
            return defaultGroups(List.of(defaultGroups));
        }

        /**
         * @param disallowedEmailDomains (Updatable) A Multivalue String Value for Email domains to be handled as exceptions
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder disallowedEmailDomains(@Nullable Output<List<String>> disallowedEmailDomains) {
            $.disallowedEmailDomains = disallowedEmailDomains;
            return this;
        }

        /**
         * @param disallowedEmailDomains (Updatable) A Multivalue String Value for Email domains to be handled as exceptions
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder disallowedEmailDomains(List<String> disallowedEmailDomains) {
            return disallowedEmailDomains(Output.of(disallowedEmailDomains));
        }

        /**
         * @param disallowedEmailDomains (Updatable) A Multivalue String Value for Email domains to be handled as exceptions
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder disallowedEmailDomains(String... disallowedEmailDomains) {
            return disallowedEmailDomains(List.of(disallowedEmailDomains));
        }

        /**
         * @param displayNames (Updatable) Registration page name
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder displayNames(Output<List<DomainsSelfRegistrationProfileDisplayNameArgs>> displayNames) {
            $.displayNames = displayNames;
            return this;
        }

        /**
         * @param displayNames (Updatable) Registration page name
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder displayNames(List<DomainsSelfRegistrationProfileDisplayNameArgs> displayNames) {
            return displayNames(Output.of(displayNames));
        }

        /**
         * @param displayNames (Updatable) Registration page name
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder displayNames(DomainsSelfRegistrationProfileDisplayNameArgs... displayNames) {
            return displayNames(List.of(displayNames));
        }

        /**
         * @param emailTemplate (Updatable) Email template
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder emailTemplate(Output<DomainsSelfRegistrationProfileEmailTemplateArgs> emailTemplate) {
            $.emailTemplate = emailTemplate;
            return this;
        }

        /**
         * @param emailTemplate (Updatable) Email template
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder emailTemplate(DomainsSelfRegistrationProfileEmailTemplateArgs emailTemplate) {
            return emailTemplate(Output.of(emailTemplate));
        }

        /**
         * @param externalId (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param footerLogo (Updatable) References to footer logo
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: reference
         * 
         * @return builder
         * 
         */
        public Builder footerLogo(@Nullable Output<String> footerLogo) {
            $.footerLogo = footerLogo;
            return this;
        }

        /**
         * @param footerLogo (Updatable) References to footer logo
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: reference
         * 
         * @return builder
         * 
         */
        public Builder footerLogo(String footerLogo) {
            return footerLogo(Output.of(footerLogo));
        }

        /**
         * @param footerTexts (Updatable) Footer text
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder footerTexts(@Nullable Output<List<DomainsSelfRegistrationProfileFooterTextArgs>> footerTexts) {
            $.footerTexts = footerTexts;
            return this;
        }

        /**
         * @param footerTexts (Updatable) Footer text
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder footerTexts(List<DomainsSelfRegistrationProfileFooterTextArgs> footerTexts) {
            return footerTexts(Output.of(footerTexts));
        }

        /**
         * @param footerTexts (Updatable) Footer text
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder footerTexts(DomainsSelfRegistrationProfileFooterTextArgs... footerTexts) {
            return footerTexts(List.of(footerTexts));
        }

        /**
         * @param headerLogo (Updatable) Reference to header logo
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: reference
         * 
         * @return builder
         * 
         */
        public Builder headerLogo(@Nullable Output<String> headerLogo) {
            $.headerLogo = headerLogo;
            return this;
        }

        /**
         * @param headerLogo (Updatable) Reference to header logo
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: reference
         * 
         * @return builder
         * 
         */
        public Builder headerLogo(String headerLogo) {
            return headerLogo(Output.of(headerLogo));
        }

        /**
         * @param headerTexts (Updatable) Header text
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder headerTexts(@Nullable Output<List<DomainsSelfRegistrationProfileHeaderTextArgs>> headerTexts) {
            $.headerTexts = headerTexts;
            return this;
        }

        /**
         * @param headerTexts (Updatable) Header text
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder headerTexts(List<DomainsSelfRegistrationProfileHeaderTextArgs> headerTexts) {
            return headerTexts(Output.of(headerTexts));
        }

        /**
         * @param headerTexts (Updatable) Header text
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * idcsMultiLanguage: true
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder headerTexts(DomainsSelfRegistrationProfileHeaderTextArgs... headerTexts) {
            return headerTexts(List.of(headerTexts));
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(Output<String> idcsEndpoint) {
            $.idcsEndpoint = idcsEndpoint;
            return this;
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(String idcsEndpoint) {
            return idcsEndpoint(Output.of(idcsEndpoint));
        }

        /**
         * @param name (Updatable) Name of the profile
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Name of the profile
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param numberOfDaysRedirectUrlIsValid (Updatable) Number of days redirect URL is valid
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder numberOfDaysRedirectUrlIsValid(Output<Integer> numberOfDaysRedirectUrlIsValid) {
            $.numberOfDaysRedirectUrlIsValid = numberOfDaysRedirectUrlIsValid;
            return this;
        }

        /**
         * @param numberOfDaysRedirectUrlIsValid (Updatable) Number of days redirect URL is valid
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder numberOfDaysRedirectUrlIsValid(Integer numberOfDaysRedirectUrlIsValid) {
            return numberOfDaysRedirectUrlIsValid(Output.of(numberOfDaysRedirectUrlIsValid));
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(@Nullable Output<String> ocid) {
            $.ocid = ocid;
            return this;
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(String ocid) {
            return ocid(Output.of(ocid));
        }

        /**
         * @param redirectUrl (Updatable) This URL will be replaced in email notification sent to user. When activation email required is set to true, user is created in \&#34;pending verification\&#34; state, upon clicking this link user will be able to activate himself. When activation email required is set to false, user is created in \&#34;verified\&#34; state, this link will be used to verify user&#39;s email.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(Output<String> redirectUrl) {
            $.redirectUrl = redirectUrl;
            return this;
        }

        /**
         * @param redirectUrl (Updatable) This URL will be replaced in email notification sent to user. When activation email required is set to true, user is created in \&#34;pending verification\&#34; state, upon clicking this link user will be able to activate himself. When activation email required is set to false, user is created in \&#34;verified\&#34; state, this link will be used to verify user&#39;s email.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(String redirectUrl) {
            return redirectUrl(Output.of(redirectUrl));
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(@Nullable Output<String> resourceTypeSchemaVersion) {
            $.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(String resourceTypeSchemaVersion) {
            return resourceTypeSchemaVersion(Output.of(resourceTypeSchemaVersion));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(Output<List<String>> schemas) {
            $.schemas = schemas;
            return this;
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(List<String> schemas) {
            return schemas(Output.of(schemas));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }

        /**
         * @param showOnLoginPage (Updatable) A Boolean value that indicates whether the profile should be displayed on login page
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder showOnLoginPage(Output<Boolean> showOnLoginPage) {
            $.showOnLoginPage = showOnLoginPage;
            return this;
        }

        /**
         * @param showOnLoginPage (Updatable) A Boolean value that indicates whether the profile should be displayed on login page
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder showOnLoginPage(Boolean showOnLoginPage) {
            return showOnLoginPage(Output.of(showOnLoginPage));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DomainsSelfRegistrationProfileTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DomainsSelfRegistrationProfileTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(DomainsSelfRegistrationProfileTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param userAttributes (Updatable) **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none User Attributes
         * 
         * @return builder
         * 
         */
        public Builder userAttributes(@Nullable Output<List<DomainsSelfRegistrationProfileUserAttributeArgs>> userAttributes) {
            $.userAttributes = userAttributes;
            return this;
        }

        /**
         * @param userAttributes (Updatable) **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none User Attributes
         * 
         * @return builder
         * 
         */
        public Builder userAttributes(List<DomainsSelfRegistrationProfileUserAttributeArgs> userAttributes) {
            return userAttributes(Output.of(userAttributes));
        }

        /**
         * @param userAttributes (Updatable) **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none User Attributes
         * 
         * @return builder
         * 
         */
        public Builder userAttributes(DomainsSelfRegistrationProfileUserAttributeArgs... userAttributes) {
            return userAttributes(List.of(userAttributes));
        }

        public DomainsSelfRegistrationProfileArgs build() {
            $.activationEmailRequired = Objects.requireNonNull($.activationEmailRequired, "expected parameter 'activationEmailRequired' to be non-null");
            $.consentTextPresent = Objects.requireNonNull($.consentTextPresent, "expected parameter 'consentTextPresent' to be non-null");
            $.displayNames = Objects.requireNonNull($.displayNames, "expected parameter 'displayNames' to be non-null");
            $.emailTemplate = Objects.requireNonNull($.emailTemplate, "expected parameter 'emailTemplate' to be non-null");
            $.idcsEndpoint = Objects.requireNonNull($.idcsEndpoint, "expected parameter 'idcsEndpoint' to be non-null");
            $.numberOfDaysRedirectUrlIsValid = Objects.requireNonNull($.numberOfDaysRedirectUrlIsValid, "expected parameter 'numberOfDaysRedirectUrlIsValid' to be non-null");
            $.redirectUrl = Objects.requireNonNull($.redirectUrl, "expected parameter 'redirectUrl' to be non-null");
            $.schemas = Objects.requireNonNull($.schemas, "expected parameter 'schemas' to be non-null");
            $.showOnLoginPage = Objects.requireNonNull($.showOnLoginPage, "expected parameter 'showOnLoginPage' to be non-null");
            return $;
        }
    }

}
