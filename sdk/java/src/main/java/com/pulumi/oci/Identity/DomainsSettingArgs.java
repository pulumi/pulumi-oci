// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.inputs.DomainsSettingCertificateValidationArgs;
import com.pulumi.oci.Identity.inputs.DomainsSettingCloudGateCorsSettingsArgs;
import com.pulumi.oci.Identity.inputs.DomainsSettingCompanyNameArgs;
import com.pulumi.oci.Identity.inputs.DomainsSettingImageArgs;
import com.pulumi.oci.Identity.inputs.DomainsSettingLoginTextArgs;
import com.pulumi.oci.Identity.inputs.DomainsSettingPurgeConfigArgs;
import com.pulumi.oci.Identity.inputs.DomainsSettingTagArgs;
import com.pulumi.oci.Identity.inputs.DomainsSettingTenantCustomClaimArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsSettingArgs Empty = new DomainsSettingArgs();

    /**
     * (Updatable) Indicates whether all the Apps in this customer tenancy should trust each other. A value of true overrides the &#39;defaultTrustScope&#39; attribute here in Settings, as well as any App-specific &#39;trustScope&#39; attribute, to force in effect &#39;trustScope=Account&#39; for every App in this customer tenancy.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * 
     */
    @Import(name="accountAlwaysTrustScope")
    private @Nullable Output<Boolean> accountAlwaysTrustScope;

    /**
     * @return (Updatable) Indicates whether all the Apps in this customer tenancy should trust each other. A value of true overrides the &#39;defaultTrustScope&#39; attribute here in Settings, as well as any App-specific &#39;trustScope&#39; attribute, to force in effect &#39;trustScope=Account&#39; for every App in this customer tenancy.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * 
     */
    public Optional<Output<Boolean>> accountAlwaysTrustScope() {
        return Optional.ofNullable(this.accountAlwaysTrustScope);
    }

    /**
     * (Updatable) One or more email domains allowed in a user&#39;s email field. If unassigned, any domain is allowed.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="allowedDomains")
    private @Nullable Output<List<String>> allowedDomains;

    /**
     * @return (Updatable) One or more email domains allowed in a user&#39;s email field. If unassigned, any domain is allowed.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> allowedDomains() {
        return Optional.ofNullable(this.allowedDomains);
    }

    /**
     * (Updatable) If specified, indicates the set of Urls which can be returned to after successful forgot password flow
     * 
     * **Added In:** 19.3.3
     * 
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: true
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * 
     */
    @Import(name="allowedForgotPasswordFlowReturnUrls")
    private @Nullable Output<List<String>> allowedForgotPasswordFlowReturnUrls;

    /**
     * @return (Updatable) If specified, indicates the set of Urls which can be returned to after successful forgot password flow
     * 
     * **Added In:** 19.3.3
     * 
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: true
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * 
     */
    public Optional<Output<List<String>>> allowedForgotPasswordFlowReturnUrls() {
        return Optional.ofNullable(this.allowedForgotPasswordFlowReturnUrls);
    }

    /**
     * (Updatable) If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \&#34;notificationRedirectUrl\&#34; in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
     * 
     * **Added In:** 2009041201
     * 
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: true
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * 
     */
    @Import(name="allowedNotificationRedirectUrls")
    private @Nullable Output<List<String>> allowedNotificationRedirectUrls;

    /**
     * @return (Updatable) If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \&#34;notificationRedirectUrl\&#34; in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
     * 
     * **Added In:** 2009041201
     * 
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: true
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * 
     */
    public Optional<Output<List<String>>> allowedNotificationRedirectUrls() {
        return Optional.ofNullable(this.allowedNotificationRedirectUrls);
    }

    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    @Import(name="attributeSets")
    private @Nullable Output<List<String>> attributeSets;

    /**
     * @return (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    public Optional<Output<List<String>>> attributeSets() {
        return Optional.ofNullable(this.attributeSets);
    }

    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<String> attributes;

    /**
     * @return (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    public Optional<Output<String>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * (Updatable) Audit Event retention period. If set, overrides default of 30 days after which Audit Events will be purged
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * 
     */
    @Import(name="auditEventRetentionPeriod")
    private @Nullable Output<Integer> auditEventRetentionPeriod;

    /**
     * @return (Updatable) Audit Event retention period. If set, overrides default of 30 days after which Audit Events will be purged
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * 
     */
    public Optional<Output<Integer>> auditEventRetentionPeriod() {
        return Optional.ofNullable(this.auditEventRetentionPeriod);
    }

    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    @Import(name="authorization")
    private @Nullable Output<String> authorization;

    /**
     * @return (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public Optional<Output<String>> authorization() {
        return Optional.ofNullable(this.authorization);
    }

    /**
     * (Updatable) Certificate Validation Config
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="certificateValidation")
    private @Nullable Output<DomainsSettingCertificateValidationArgs> certificateValidation;

    /**
     * @return (Updatable) Certificate Validation Config
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<DomainsSettingCertificateValidationArgs>> certificateValidation() {
        return Optional.ofNullable(this.certificateValidation);
    }

    /**
     * (Updatable) A complex attribute that specifies the Cloud Gate cross origin resource sharing settings.
     * 
     * **Added In:** 2011192329
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="cloudGateCorsSettings")
    private @Nullable Output<DomainsSettingCloudGateCorsSettingsArgs> cloudGateCorsSettings;

    /**
     * @return (Updatable) A complex attribute that specifies the Cloud Gate cross origin resource sharing settings.
     * 
     * **Added In:** 2011192329
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<DomainsSettingCloudGateCorsSettingsArgs>> cloudGateCorsSettings() {
        return Optional.ofNullable(this.cloudGateCorsSettings);
    }

    /**
     * (Updatable) If specified, indicates the custom SIM Migrator Url which can be used while SIM to Oracle Identity Cloud Service CloudAccount Migration.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * 
     */
    @Import(name="cloudMigrationCustomUrl")
    private @Nullable Output<String> cloudMigrationCustomUrl;

    /**
     * @return (Updatable) If specified, indicates the custom SIM Migrator Url which can be used while SIM to Oracle Identity Cloud Service CloudAccount Migration.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * type: string
     * * multiValued: false
     * * required: false
     * * mutability: readWrite
     * * returned: default
     * * uniqueness: none
     * * caseExact: false
     * 
     */
    public Optional<Output<String>> cloudMigrationCustomUrl() {
        return Optional.ofNullable(this.cloudMigrationCustomUrl);
    }

    /**
     * (Updatable) CloudAccountMigration: Enable Custom SIM Migrator Url.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="cloudMigrationUrlEnabled")
    private @Nullable Output<Boolean> cloudMigrationUrlEnabled;

    /**
     * @return (Updatable) CloudAccountMigration: Enable Custom SIM Migrator Url.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> cloudMigrationUrlEnabled() {
        return Optional.ofNullable(this.cloudMigrationUrlEnabled);
    }

    /**
     * (Updatable) Name of the company in different locales
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    @Import(name="companyNames")
    private @Nullable Output<List<DomainsSettingCompanyNameArgs>> companyNames;

    /**
     * @return (Updatable) Name of the company in different locales
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsSettingCompanyNameArgs>>> companyNames() {
        return Optional.ofNullable(this.companyNames);
    }

    /**
     * (Updatable) Contact emails used to notify tenants. Can be one or more user or group alias emails.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="contactEmails")
    private @Nullable Output<List<String>> contactEmails;

    /**
     * @return (Updatable) Contact emails used to notify tenants. Can be one or more user or group alias emails.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> contactEmails() {
        return Optional.ofNullable(this.contactEmails);
    }

    /**
     * (Updatable) This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of &#39;none&#39; means CSR cannot login to the services.
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * 
     */
    @Import(name="csrAccess", required=true)
    private Output<String> csrAccess;

    /**
     * @return (Updatable) This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of &#39;none&#39; means CSR cannot login to the services.
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * 
     */
    public Output<String> csrAccess() {
        return this.csrAccess;
    }

    /**
     * (Updatable) Indicates if the branding is default or custom
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * 
     */
    @Import(name="customBranding")
    private @Nullable Output<Boolean> customBranding;

    /**
     * @return (Updatable) Indicates if the branding is default or custom
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * 
     */
    public Optional<Output<Boolean>> customBranding() {
        return Optional.ofNullable(this.customBranding);
    }

    /**
     * (Updatable) Storage URL location where the sanitized custom css is located
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="customCssLocation")
    private @Nullable Output<String> customCssLocation;

    /**
     * @return (Updatable) Storage URL location where the sanitized custom css is located
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> customCssLocation() {
        return Optional.ofNullable(this.customCssLocation);
    }

    /**
     * (Updatable) Storage URL location where the sanitized custom html is located
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="customHtmlLocation")
    private @Nullable Output<String> customHtmlLocation;

    /**
     * @return (Updatable) Storage URL location where the sanitized custom html is located
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> customHtmlLocation() {
        return Optional.ofNullable(this.customHtmlLocation);
    }

    /**
     * (Updatable) Custom translations (JSON String)
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="customTranslation")
    private @Nullable Output<String> customTranslation;

    /**
     * @return (Updatable) Custom translations (JSON String)
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> customTranslation() {
        return Optional.ofNullable(this.customTranslation);
    }

    /**
     * (Updatable) **Deprecated Since: 18.3.6**
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string Indicates the default trust scope for all apps
     * 
     */
    @Import(name="defaultTrustScope")
    private @Nullable Output<String> defaultTrustScope;

    /**
     * @return (Updatable) **Deprecated Since: 18.3.6**
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string Indicates the default trust scope for all apps
     * 
     */
    public Optional<Output<String>> defaultTrustScope() {
        return Optional.ofNullable(this.defaultTrustScope);
    }

    /**
     * (Updatable) The level of diagnostic logging that is currently in effect. A level of 0 (zero) indicates that diagnostic logging is disabled. A level of 1 (one) indicates that diagnostic logging is enabled.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="diagnosticLevel")
    private @Nullable Output<Integer> diagnosticLevel;

    /**
     * @return (Updatable) The level of diagnostic logging that is currently in effect. A level of 0 (zero) indicates that diagnostic logging is disabled. A level of 1 (one) indicates that diagnostic logging is enabled.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Optional<Output<Integer>> diagnosticLevel() {
        return Optional.ofNullable(this.diagnosticLevel);
    }

    /**
     * (Updatable) Controls whether DiagnosticRecords for external search-operations (against SCIM resource-types in the Admin service) identify returned resources.  If true, indicates that for each successful external search-operation at least one DiagnosticRecord will include at least one identifier for each matching resource that is returned in that search-response.  If false, no DiagnosticRecord should be expected to identify returned resources for a search-operation.  The default value is false.
     * 
     * **Added In:** 2011192329
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="diagnosticRecordForSearchIdentifiesReturnedResources")
    private @Nullable Output<Boolean> diagnosticRecordForSearchIdentifiesReturnedResources;

    /**
     * @return (Updatable) Controls whether DiagnosticRecords for external search-operations (against SCIM resource-types in the Admin service) identify returned resources.  If true, indicates that for each successful external search-operation at least one DiagnosticRecord will include at least one identifier for each matching resource that is returned in that search-response.  If false, no DiagnosticRecord should be expected to identify returned resources for a search-operation.  The default value is false.
     * 
     * **Added In:** 2011192329
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> diagnosticRecordForSearchIdentifiesReturnedResources() {
        return Optional.ofNullable(this.diagnosticRecordForSearchIdentifiesReturnedResources);
    }

    /**
     * (Updatable) Indicates if Terms of Use is enabled in UI
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="enableTermsOfUse")
    private @Nullable Output<Boolean> enableTermsOfUse;

    /**
     * @return (Updatable) Indicates if Terms of Use is enabled in UI
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> enableTermsOfUse() {
        return Optional.ofNullable(this.enableTermsOfUse);
    }

    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * (Updatable) Maximum duration for IAM User Principal Session Token expiry
     * 
     * **Added In:** 2307071836
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="iamUpstSessionExpiry")
    private @Nullable Output<Integer> iamUpstSessionExpiry;

    /**
     * @return (Updatable) Maximum duration for IAM User Principal Session Token expiry
     * 
     * **Added In:** 2307071836
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Optional<Output<Integer>> iamUpstSessionExpiry() {
        return Optional.ofNullable(this.iamUpstSessionExpiry);
    }

    /**
     * The basic endpoint for the identity domain
     * 
     */
    @Import(name="idcsEndpoint", required=true)
    private Output<String> idcsEndpoint;

    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public Output<String> idcsEndpoint() {
        return this.idcsEndpoint;
    }

    /**
     * (Updatable) References to various images
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [type]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    @Import(name="images")
    private @Nullable Output<List<DomainsSettingImageArgs>> images;

    /**
     * @return (Updatable) References to various images
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [type]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsSettingImageArgs>>> images() {
        return Optional.ofNullable(this.images);
    }

    /**
     * (Updatable) Indicates if &#39;hosted&#39; option was selected
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="isHostedPage")
    private @Nullable Output<Boolean> isHostedPage;

    /**
     * @return (Updatable) Indicates if &#39;hosted&#39; option was selected
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> isHostedPage() {
        return Optional.ofNullable(this.isHostedPage);
    }

    /**
     * (Updatable) Tenant issuer.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="issuer")
    private @Nullable Output<String> issuer;

    /**
     * @return (Updatable) Tenant issuer.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> issuer() {
        return Optional.ofNullable(this.issuer);
    }

    /**
     * (Updatable) Locale
     * 
     * **SCIM++ Properties:**
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;locales&#34; and attrValues.value eq &#34;$(loginTexts.locale)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * 
     */
    @Import(name="locale")
    private @Nullable Output<String> locale;

    /**
     * @return (Updatable) Locale
     * 
     * **SCIM++ Properties:**
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;locales&#34; and attrValues.value eq &#34;$(loginTexts.locale)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * 
     */
    public Optional<Output<String>> locale() {
        return Optional.ofNullable(this.locale);
    }

    /**
     * (Updatable) Login text in different locales
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    @Import(name="loginTexts")
    private @Nullable Output<List<DomainsSettingLoginTextArgs>> loginTexts;

    /**
     * @return (Updatable) Login text in different locales
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [locale]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsSettingLoginTextArgs>>> loginTexts() {
        return Optional.ofNullable(this.loginTexts);
    }

    /**
     * (Updatable) Limit the maximum return of CMVA for an App
     * 
     * **Added In:** 2111112015
     * 
     * **SCIM++ Properties:**
     * * idcsMinValue: 0
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="maxNoOfAppCmvaToReturn")
    private @Nullable Output<Integer> maxNoOfAppCmvaToReturn;

    /**
     * @return (Updatable) Limit the maximum return of CMVA for an App
     * 
     * **Added In:** 2111112015
     * 
     * **SCIM++ Properties:**
     * * idcsMinValue: 0
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Optional<Output<Integer>> maxNoOfAppCmvaToReturn() {
        return Optional.ofNullable(this.maxNoOfAppCmvaToReturn);
    }

    /**
     * (Updatable) Limit the maximum return of members for an AppRole
     * 
     * **Added In:** 2111112015
     * 
     * **SCIM++ Properties:**
     * * idcsMinValue: 0
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="maxNoOfAppRoleMembersToReturn")
    private @Nullable Output<Integer> maxNoOfAppRoleMembersToReturn;

    /**
     * @return (Updatable) Limit the maximum return of members for an AppRole
     * 
     * **Added In:** 2111112015
     * 
     * **SCIM++ Properties:**
     * * idcsMinValue: 0
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Optional<Output<Integer>> maxNoOfAppRoleMembersToReturn() {
        return Optional.ofNullable(this.maxNoOfAppRoleMembersToReturn);
    }

    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    @Import(name="ocid")
    private @Nullable Output<String> ocid;

    /**
     * @return (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    public Optional<Output<String>> ocid() {
        return Optional.ofNullable(this.ocid);
    }

    /**
     * (Updatable) Preferred written or spoken language used for localized user interfaces
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;languages&#34; and attrValues.value eq &#34;$(preferredLanguage)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="preferredLanguage")
    private @Nullable Output<String> preferredLanguage;

    /**
     * @return (Updatable) Preferred written or spoken language used for localized user interfaces
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;languages&#34; and attrValues.value eq &#34;$(preferredLanguage)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> preferredLanguage() {
        return Optional.ofNullable(this.preferredLanguage);
    }

    /**
     * (Updatable) Previous Tenant issuer. This is an Oracle Identity Cloud Service internal attribute which is not meant to be directly modified by ID Admin. Even if the request body (Settings) contains this attribute, the actual value will be set according to the Oracle Identity Cloud Service internal logic rather than solely based on the value provided in the request payload.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="prevIssuer")
    private @Nullable Output<String> prevIssuer;

    /**
     * @return (Updatable) Previous Tenant issuer. This is an Oracle Identity Cloud Service internal attribute which is not meant to be directly modified by ID Admin. Even if the request body (Settings) contains this attribute, the actual value will be set according to the Oracle Identity Cloud Service internal logic rather than solely based on the value provided in the request payload.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> prevIssuer() {
        return Optional.ofNullable(this.prevIssuer);
    }

    /**
     * (Updatable) Privacy Policy URL
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="privacyPolicyUrl")
    private @Nullable Output<String> privacyPolicyUrl;

    /**
     * @return (Updatable) Privacy Policy URL
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> privacyPolicyUrl() {
        return Optional.ofNullable(this.privacyPolicyUrl);
    }

    /**
     * (Updatable) Purge Configs for different Resource Types
     * 
     * **Deprecated Since: 19.1.6**
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [resourceName]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    @Import(name="purgeConfigs")
    private @Nullable Output<List<DomainsSettingPurgeConfigArgs>> purgeConfigs;

    /**
     * @return (Updatable) Purge Configs for different Resource Types
     * 
     * **Deprecated Since: 19.1.6**
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [resourceName]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsSettingPurgeConfigArgs>>> purgeConfigs() {
        return Optional.ofNullable(this.purgeConfigs);
    }

    /**
     * (Updatable) If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \&#34;password\&#34;.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * 
     */
    @Import(name="reAuthFactors")
    private @Nullable Output<List<String>> reAuthFactors;

    /**
     * @return (Updatable) If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \&#34;password\&#34;.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * 
     */
    public Optional<Output<List<String>>> reAuthFactors() {
        return Optional.ofNullable(this.reAuthFactors);
    }

    /**
     * (Updatable) Specifies whether re-authentication is required or not when a user changes one of their security factors such as password or email. Default is true to ensure more secure behavior.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="reAuthWhenChangingMyAuthenticationFactors")
    private @Nullable Output<Boolean> reAuthWhenChangingMyAuthenticationFactors;

    /**
     * @return (Updatable) Specifies whether re-authentication is required or not when a user changes one of their security factors such as password or email. Default is true to ensure more secure behavior.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> reAuthWhenChangingMyAuthenticationFactors() {
        return Optional.ofNullable(this.reAuthWhenChangingMyAuthenticationFactors);
    }

    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    @Import(name="resourceTypeSchemaVersion")
    private @Nullable Output<String> resourceTypeSchemaVersion;

    /**
     * @return (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public Optional<Output<String>> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }

    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="schemas", required=true)
    private Output<List<String>> schemas;

    /**
     * @return (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<List<String>> schemas() {
        return this.schemas;
    }

    /**
     * (Updatable) By default, a service admin can list all users in stripe. If true, a service admin cannot list other users.
     * 
     * **Added In:** 2108190438
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * 
     */
    @Import(name="serviceAdminCannotListOtherUsers")
    private @Nullable Output<Boolean> serviceAdminCannotListOtherUsers;

    /**
     * @return (Updatable) By default, a service admin can list all users in stripe. If true, a service admin cannot list other users.
     * 
     * **Added In:** 2108190438
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * 
     */
    public Optional<Output<Boolean>> serviceAdminCannotListOtherUsers() {
        return Optional.ofNullable(this.serviceAdminCannotListOtherUsers);
    }

    /**
     * ID of the resource
     * 
     */
    @Import(name="settingId", required=true)
    private Output<String> settingId;

    /**
     * @return ID of the resource
     * 
     */
    public Output<String> settingId() {
        return this.settingId;
    }

    /**
     * (Updatable) Indicates if access on SigningCert is allowed to public or not
     * 
     * **Added In:** 17.3.4
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * 
     */
    @Import(name="signingCertPublicAccess")
    private @Nullable Output<Boolean> signingCertPublicAccess;

    /**
     * @return (Updatable) Indicates if access on SigningCert is allowed to public or not
     * 
     * **Added In:** 17.3.4
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * 
     */
    public Optional<Output<Boolean>> signingCertPublicAccess() {
        return Optional.ofNullable(this.signingCertPublicAccess);
    }

    /**
     * (Updatable) **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none Subject mapping user profile attribute. The input format should be SCIM compliant. This attribute should be of type String and multivalued to false.
     * 
     */
    @Import(name="subMappingAttr")
    private @Nullable Output<String> subMappingAttr;

    /**
     * @return (Updatable) **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none Subject mapping user profile attribute. The input format should be SCIM compliant. This attribute should be of type String and multivalued to false.
     * 
     */
    public Optional<Output<String>> subMappingAttr() {
        return Optional.ofNullable(this.subMappingAttr);
    }

    /**
     * (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DomainsSettingTagArgs>> tags;

    /**
     * @return (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsSettingTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * (Updatable) Custom claims associated with the specific tenant
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [name]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="tenantCustomClaims")
    private @Nullable Output<List<DomainsSettingTenantCustomClaimArgs>> tenantCustomClaims;

    /**
     * @return (Updatable) Custom claims associated with the specific tenant
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [name]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsSettingTenantCustomClaimArgs>>> tenantCustomClaims() {
        return Optional.ofNullable(this.tenantCustomClaims);
    }

    /**
     * (Updatable) Terms of Use URL
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="termsOfUseUrl")
    private @Nullable Output<String> termsOfUseUrl;

    /**
     * @return (Updatable) Terms of Use URL
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> termsOfUseUrl() {
        return Optional.ofNullable(this.termsOfUseUrl);
    }

    /**
     * (Updatable) User&#39;s timezone
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;timezones&#34; and attrValues.value eq &#34;$(timezone)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timezone")
    private @Nullable Output<String> timezone;

    /**
     * @return (Updatable) User&#39;s timezone
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;timezones&#34; and attrValues.value eq &#34;$(timezone)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    private DomainsSettingArgs() {}

    private DomainsSettingArgs(DomainsSettingArgs $) {
        this.accountAlwaysTrustScope = $.accountAlwaysTrustScope;
        this.allowedDomains = $.allowedDomains;
        this.allowedForgotPasswordFlowReturnUrls = $.allowedForgotPasswordFlowReturnUrls;
        this.allowedNotificationRedirectUrls = $.allowedNotificationRedirectUrls;
        this.attributeSets = $.attributeSets;
        this.attributes = $.attributes;
        this.auditEventRetentionPeriod = $.auditEventRetentionPeriod;
        this.authorization = $.authorization;
        this.certificateValidation = $.certificateValidation;
        this.cloudGateCorsSettings = $.cloudGateCorsSettings;
        this.cloudMigrationCustomUrl = $.cloudMigrationCustomUrl;
        this.cloudMigrationUrlEnabled = $.cloudMigrationUrlEnabled;
        this.companyNames = $.companyNames;
        this.contactEmails = $.contactEmails;
        this.csrAccess = $.csrAccess;
        this.customBranding = $.customBranding;
        this.customCssLocation = $.customCssLocation;
        this.customHtmlLocation = $.customHtmlLocation;
        this.customTranslation = $.customTranslation;
        this.defaultTrustScope = $.defaultTrustScope;
        this.diagnosticLevel = $.diagnosticLevel;
        this.diagnosticRecordForSearchIdentifiesReturnedResources = $.diagnosticRecordForSearchIdentifiesReturnedResources;
        this.enableTermsOfUse = $.enableTermsOfUse;
        this.externalId = $.externalId;
        this.iamUpstSessionExpiry = $.iamUpstSessionExpiry;
        this.idcsEndpoint = $.idcsEndpoint;
        this.images = $.images;
        this.isHostedPage = $.isHostedPage;
        this.issuer = $.issuer;
        this.locale = $.locale;
        this.loginTexts = $.loginTexts;
        this.maxNoOfAppCmvaToReturn = $.maxNoOfAppCmvaToReturn;
        this.maxNoOfAppRoleMembersToReturn = $.maxNoOfAppRoleMembersToReturn;
        this.ocid = $.ocid;
        this.preferredLanguage = $.preferredLanguage;
        this.prevIssuer = $.prevIssuer;
        this.privacyPolicyUrl = $.privacyPolicyUrl;
        this.purgeConfigs = $.purgeConfigs;
        this.reAuthFactors = $.reAuthFactors;
        this.reAuthWhenChangingMyAuthenticationFactors = $.reAuthWhenChangingMyAuthenticationFactors;
        this.resourceTypeSchemaVersion = $.resourceTypeSchemaVersion;
        this.schemas = $.schemas;
        this.serviceAdminCannotListOtherUsers = $.serviceAdminCannotListOtherUsers;
        this.settingId = $.settingId;
        this.signingCertPublicAccess = $.signingCertPublicAccess;
        this.subMappingAttr = $.subMappingAttr;
        this.tags = $.tags;
        this.tenantCustomClaims = $.tenantCustomClaims;
        this.termsOfUseUrl = $.termsOfUseUrl;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsSettingArgs $;

        public Builder() {
            $ = new DomainsSettingArgs();
        }

        public Builder(DomainsSettingArgs defaults) {
            $ = new DomainsSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountAlwaysTrustScope (Updatable) Indicates whether all the Apps in this customer tenancy should trust each other. A value of true overrides the &#39;defaultTrustScope&#39; attribute here in Settings, as well as any App-specific &#39;trustScope&#39; attribute, to force in effect &#39;trustScope=Account&#39; for every App in this customer tenancy.
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * 
         * @return builder
         * 
         */
        public Builder accountAlwaysTrustScope(@Nullable Output<Boolean> accountAlwaysTrustScope) {
            $.accountAlwaysTrustScope = accountAlwaysTrustScope;
            return this;
        }

        /**
         * @param accountAlwaysTrustScope (Updatable) Indicates whether all the Apps in this customer tenancy should trust each other. A value of true overrides the &#39;defaultTrustScope&#39; attribute here in Settings, as well as any App-specific &#39;trustScope&#39; attribute, to force in effect &#39;trustScope=Account&#39; for every App in this customer tenancy.
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * 
         * @return builder
         * 
         */
        public Builder accountAlwaysTrustScope(Boolean accountAlwaysTrustScope) {
            return accountAlwaysTrustScope(Output.of(accountAlwaysTrustScope));
        }

        /**
         * @param allowedDomains (Updatable) One or more email domains allowed in a user&#39;s email field. If unassigned, any domain is allowed.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder allowedDomains(@Nullable Output<List<String>> allowedDomains) {
            $.allowedDomains = allowedDomains;
            return this;
        }

        /**
         * @param allowedDomains (Updatable) One or more email domains allowed in a user&#39;s email field. If unassigned, any domain is allowed.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder allowedDomains(List<String> allowedDomains) {
            return allowedDomains(Output.of(allowedDomains));
        }

        /**
         * @param allowedDomains (Updatable) One or more email domains allowed in a user&#39;s email field. If unassigned, any domain is allowed.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder allowedDomains(String... allowedDomains) {
            return allowedDomains(List.of(allowedDomains));
        }

        /**
         * @param allowedForgotPasswordFlowReturnUrls (Updatable) If specified, indicates the set of Urls which can be returned to after successful forgot password flow
         * 
         * **Added In:** 19.3.3
         * 
         * **SCIM++ Properties:**
         * * type: string
         * * multiValued: true
         * * required: false
         * * mutability: readWrite
         * * returned: default
         * * uniqueness: none
         * * caseExact: false
         * 
         * @return builder
         * 
         */
        public Builder allowedForgotPasswordFlowReturnUrls(@Nullable Output<List<String>> allowedForgotPasswordFlowReturnUrls) {
            $.allowedForgotPasswordFlowReturnUrls = allowedForgotPasswordFlowReturnUrls;
            return this;
        }

        /**
         * @param allowedForgotPasswordFlowReturnUrls (Updatable) If specified, indicates the set of Urls which can be returned to after successful forgot password flow
         * 
         * **Added In:** 19.3.3
         * 
         * **SCIM++ Properties:**
         * * type: string
         * * multiValued: true
         * * required: false
         * * mutability: readWrite
         * * returned: default
         * * uniqueness: none
         * * caseExact: false
         * 
         * @return builder
         * 
         */
        public Builder allowedForgotPasswordFlowReturnUrls(List<String> allowedForgotPasswordFlowReturnUrls) {
            return allowedForgotPasswordFlowReturnUrls(Output.of(allowedForgotPasswordFlowReturnUrls));
        }

        /**
         * @param allowedForgotPasswordFlowReturnUrls (Updatable) If specified, indicates the set of Urls which can be returned to after successful forgot password flow
         * 
         * **Added In:** 19.3.3
         * 
         * **SCIM++ Properties:**
         * * type: string
         * * multiValued: true
         * * required: false
         * * mutability: readWrite
         * * returned: default
         * * uniqueness: none
         * * caseExact: false
         * 
         * @return builder
         * 
         */
        public Builder allowedForgotPasswordFlowReturnUrls(String... allowedForgotPasswordFlowReturnUrls) {
            return allowedForgotPasswordFlowReturnUrls(List.of(allowedForgotPasswordFlowReturnUrls));
        }

        /**
         * @param allowedNotificationRedirectUrls (Updatable) If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \&#34;notificationRedirectUrl\&#34; in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
         * 
         * **Added In:** 2009041201
         * 
         * **SCIM++ Properties:**
         * * type: string
         * * multiValued: true
         * * required: false
         * * mutability: readWrite
         * * returned: default
         * * uniqueness: none
         * * caseExact: false
         * 
         * @return builder
         * 
         */
        public Builder allowedNotificationRedirectUrls(@Nullable Output<List<String>> allowedNotificationRedirectUrls) {
            $.allowedNotificationRedirectUrls = allowedNotificationRedirectUrls;
            return this;
        }

        /**
         * @param allowedNotificationRedirectUrls (Updatable) If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \&#34;notificationRedirectUrl\&#34; in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
         * 
         * **Added In:** 2009041201
         * 
         * **SCIM++ Properties:**
         * * type: string
         * * multiValued: true
         * * required: false
         * * mutability: readWrite
         * * returned: default
         * * uniqueness: none
         * * caseExact: false
         * 
         * @return builder
         * 
         */
        public Builder allowedNotificationRedirectUrls(List<String> allowedNotificationRedirectUrls) {
            return allowedNotificationRedirectUrls(Output.of(allowedNotificationRedirectUrls));
        }

        /**
         * @param allowedNotificationRedirectUrls (Updatable) If specified, indicates the set of allowed notification redirect Urls which can be specified as the value of \&#34;notificationRedirectUrl\&#34; in the POST .../admin/v1/MePasswordResetRequestor request payload, which will then be included in the reset password email notification sent to a user as part of the forgot password / password reset flow.
         * 
         * **Added In:** 2009041201
         * 
         * **SCIM++ Properties:**
         * * type: string
         * * multiValued: true
         * * required: false
         * * mutability: readWrite
         * * returned: default
         * * uniqueness: none
         * * caseExact: false
         * 
         * @return builder
         * 
         */
        public Builder allowedNotificationRedirectUrls(String... allowedNotificationRedirectUrls) {
            return allowedNotificationRedirectUrls(List.of(allowedNotificationRedirectUrls));
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(@Nullable Output<List<String>> attributeSets) {
            $.attributeSets = attributeSets;
            return this;
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(List<String> attributeSets) {
            return attributeSets(Output.of(attributeSets));
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }

        /**
         * @param attributes (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<String> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(String attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param auditEventRetentionPeriod (Updatable) Audit Event retention period. If set, overrides default of 30 days after which Audit Events will be purged
         * 
         * **Added In:** 19.2.1
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * 
         * @return builder
         * 
         */
        public Builder auditEventRetentionPeriod(@Nullable Output<Integer> auditEventRetentionPeriod) {
            $.auditEventRetentionPeriod = auditEventRetentionPeriod;
            return this;
        }

        /**
         * @param auditEventRetentionPeriod (Updatable) Audit Event retention period. If set, overrides default of 30 days after which Audit Events will be purged
         * 
         * **Added In:** 19.2.1
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * 
         * @return builder
         * 
         */
        public Builder auditEventRetentionPeriod(Integer auditEventRetentionPeriod) {
            return auditEventRetentionPeriod(Output.of(auditEventRetentionPeriod));
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(@Nullable Output<String> authorization) {
            $.authorization = authorization;
            return this;
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(String authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param certificateValidation (Updatable) Certificate Validation Config
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder certificateValidation(@Nullable Output<DomainsSettingCertificateValidationArgs> certificateValidation) {
            $.certificateValidation = certificateValidation;
            return this;
        }

        /**
         * @param certificateValidation (Updatable) Certificate Validation Config
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder certificateValidation(DomainsSettingCertificateValidationArgs certificateValidation) {
            return certificateValidation(Output.of(certificateValidation));
        }

        /**
         * @param cloudGateCorsSettings (Updatable) A complex attribute that specifies the Cloud Gate cross origin resource sharing settings.
         * 
         * **Added In:** 2011192329
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder cloudGateCorsSettings(@Nullable Output<DomainsSettingCloudGateCorsSettingsArgs> cloudGateCorsSettings) {
            $.cloudGateCorsSettings = cloudGateCorsSettings;
            return this;
        }

        /**
         * @param cloudGateCorsSettings (Updatable) A complex attribute that specifies the Cloud Gate cross origin resource sharing settings.
         * 
         * **Added In:** 2011192329
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder cloudGateCorsSettings(DomainsSettingCloudGateCorsSettingsArgs cloudGateCorsSettings) {
            return cloudGateCorsSettings(Output.of(cloudGateCorsSettings));
        }

        /**
         * @param cloudMigrationCustomUrl (Updatable) If specified, indicates the custom SIM Migrator Url which can be used while SIM to Oracle Identity Cloud Service CloudAccount Migration.
         * 
         * **Added In:** 2012271618
         * 
         * **SCIM++ Properties:**
         * * type: string
         * * multiValued: false
         * * required: false
         * * mutability: readWrite
         * * returned: default
         * * uniqueness: none
         * * caseExact: false
         * 
         * @return builder
         * 
         */
        public Builder cloudMigrationCustomUrl(@Nullable Output<String> cloudMigrationCustomUrl) {
            $.cloudMigrationCustomUrl = cloudMigrationCustomUrl;
            return this;
        }

        /**
         * @param cloudMigrationCustomUrl (Updatable) If specified, indicates the custom SIM Migrator Url which can be used while SIM to Oracle Identity Cloud Service CloudAccount Migration.
         * 
         * **Added In:** 2012271618
         * 
         * **SCIM++ Properties:**
         * * type: string
         * * multiValued: false
         * * required: false
         * * mutability: readWrite
         * * returned: default
         * * uniqueness: none
         * * caseExact: false
         * 
         * @return builder
         * 
         */
        public Builder cloudMigrationCustomUrl(String cloudMigrationCustomUrl) {
            return cloudMigrationCustomUrl(Output.of(cloudMigrationCustomUrl));
        }

        /**
         * @param cloudMigrationUrlEnabled (Updatable) CloudAccountMigration: Enable Custom SIM Migrator Url.
         * 
         * **Added In:** 2012271618
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder cloudMigrationUrlEnabled(@Nullable Output<Boolean> cloudMigrationUrlEnabled) {
            $.cloudMigrationUrlEnabled = cloudMigrationUrlEnabled;
            return this;
        }

        /**
         * @param cloudMigrationUrlEnabled (Updatable) CloudAccountMigration: Enable Custom SIM Migrator Url.
         * 
         * **Added In:** 2012271618
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder cloudMigrationUrlEnabled(Boolean cloudMigrationUrlEnabled) {
            return cloudMigrationUrlEnabled(Output.of(cloudMigrationUrlEnabled));
        }

        /**
         * @param companyNames (Updatable) Name of the company in different locales
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder companyNames(@Nullable Output<List<DomainsSettingCompanyNameArgs>> companyNames) {
            $.companyNames = companyNames;
            return this;
        }

        /**
         * @param companyNames (Updatable) Name of the company in different locales
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder companyNames(List<DomainsSettingCompanyNameArgs> companyNames) {
            return companyNames(Output.of(companyNames));
        }

        /**
         * @param companyNames (Updatable) Name of the company in different locales
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder companyNames(DomainsSettingCompanyNameArgs... companyNames) {
            return companyNames(List.of(companyNames));
        }

        /**
         * @param contactEmails (Updatable) Contact emails used to notify tenants. Can be one or more user or group alias emails.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder contactEmails(@Nullable Output<List<String>> contactEmails) {
            $.contactEmails = contactEmails;
            return this;
        }

        /**
         * @param contactEmails (Updatable) Contact emails used to notify tenants. Can be one or more user or group alias emails.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder contactEmails(List<String> contactEmails) {
            return contactEmails(Output.of(contactEmails));
        }

        /**
         * @param contactEmails (Updatable) Contact emails used to notify tenants. Can be one or more user or group alias emails.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder contactEmails(String... contactEmails) {
            return contactEmails(List.of(contactEmails));
        }

        /**
         * @param csrAccess (Updatable) This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of &#39;none&#39; means CSR cannot login to the services.
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder csrAccess(Output<String> csrAccess) {
            $.csrAccess = csrAccess;
            return this;
        }

        /**
         * @param csrAccess (Updatable) This value indicates whether Customer Service Representatives can login and have readOnly or readWrite access.  A value of &#39;none&#39; means CSR cannot login to the services.
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder csrAccess(String csrAccess) {
            return csrAccess(Output.of(csrAccess));
        }

        /**
         * @param customBranding (Updatable) Indicates if the branding is default or custom
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * 
         * @return builder
         * 
         */
        public Builder customBranding(@Nullable Output<Boolean> customBranding) {
            $.customBranding = customBranding;
            return this;
        }

        /**
         * @param customBranding (Updatable) Indicates if the branding is default or custom
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * 
         * @return builder
         * 
         */
        public Builder customBranding(Boolean customBranding) {
            return customBranding(Output.of(customBranding));
        }

        /**
         * @param customCssLocation (Updatable) Storage URL location where the sanitized custom css is located
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder customCssLocation(@Nullable Output<String> customCssLocation) {
            $.customCssLocation = customCssLocation;
            return this;
        }

        /**
         * @param customCssLocation (Updatable) Storage URL location where the sanitized custom css is located
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder customCssLocation(String customCssLocation) {
            return customCssLocation(Output.of(customCssLocation));
        }

        /**
         * @param customHtmlLocation (Updatable) Storage URL location where the sanitized custom html is located
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder customHtmlLocation(@Nullable Output<String> customHtmlLocation) {
            $.customHtmlLocation = customHtmlLocation;
            return this;
        }

        /**
         * @param customHtmlLocation (Updatable) Storage URL location where the sanitized custom html is located
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder customHtmlLocation(String customHtmlLocation) {
            return customHtmlLocation(Output.of(customHtmlLocation));
        }

        /**
         * @param customTranslation (Updatable) Custom translations (JSON String)
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder customTranslation(@Nullable Output<String> customTranslation) {
            $.customTranslation = customTranslation;
            return this;
        }

        /**
         * @param customTranslation (Updatable) Custom translations (JSON String)
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder customTranslation(String customTranslation) {
            return customTranslation(Output.of(customTranslation));
        }

        /**
         * @param defaultTrustScope (Updatable) **Deprecated Since: 18.3.6**
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string Indicates the default trust scope for all apps
         * 
         * @return builder
         * 
         */
        public Builder defaultTrustScope(@Nullable Output<String> defaultTrustScope) {
            $.defaultTrustScope = defaultTrustScope;
            return this;
        }

        /**
         * @param defaultTrustScope (Updatable) **Deprecated Since: 18.3.6**
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string Indicates the default trust scope for all apps
         * 
         * @return builder
         * 
         */
        public Builder defaultTrustScope(String defaultTrustScope) {
            return defaultTrustScope(Output.of(defaultTrustScope));
        }

        /**
         * @param diagnosticLevel (Updatable) The level of diagnostic logging that is currently in effect. A level of 0 (zero) indicates that diagnostic logging is disabled. A level of 1 (one) indicates that diagnostic logging is enabled.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder diagnosticLevel(@Nullable Output<Integer> diagnosticLevel) {
            $.diagnosticLevel = diagnosticLevel;
            return this;
        }

        /**
         * @param diagnosticLevel (Updatable) The level of diagnostic logging that is currently in effect. A level of 0 (zero) indicates that diagnostic logging is disabled. A level of 1 (one) indicates that diagnostic logging is enabled.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder diagnosticLevel(Integer diagnosticLevel) {
            return diagnosticLevel(Output.of(diagnosticLevel));
        }

        /**
         * @param diagnosticRecordForSearchIdentifiesReturnedResources (Updatable) Controls whether DiagnosticRecords for external search-operations (against SCIM resource-types in the Admin service) identify returned resources.  If true, indicates that for each successful external search-operation at least one DiagnosticRecord will include at least one identifier for each matching resource that is returned in that search-response.  If false, no DiagnosticRecord should be expected to identify returned resources for a search-operation.  The default value is false.
         * 
         * **Added In:** 2011192329
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder diagnosticRecordForSearchIdentifiesReturnedResources(@Nullable Output<Boolean> diagnosticRecordForSearchIdentifiesReturnedResources) {
            $.diagnosticRecordForSearchIdentifiesReturnedResources = diagnosticRecordForSearchIdentifiesReturnedResources;
            return this;
        }

        /**
         * @param diagnosticRecordForSearchIdentifiesReturnedResources (Updatable) Controls whether DiagnosticRecords for external search-operations (against SCIM resource-types in the Admin service) identify returned resources.  If true, indicates that for each successful external search-operation at least one DiagnosticRecord will include at least one identifier for each matching resource that is returned in that search-response.  If false, no DiagnosticRecord should be expected to identify returned resources for a search-operation.  The default value is false.
         * 
         * **Added In:** 2011192329
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder diagnosticRecordForSearchIdentifiesReturnedResources(Boolean diagnosticRecordForSearchIdentifiesReturnedResources) {
            return diagnosticRecordForSearchIdentifiesReturnedResources(Output.of(diagnosticRecordForSearchIdentifiesReturnedResources));
        }

        /**
         * @param enableTermsOfUse (Updatable) Indicates if Terms of Use is enabled in UI
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder enableTermsOfUse(@Nullable Output<Boolean> enableTermsOfUse) {
            $.enableTermsOfUse = enableTermsOfUse;
            return this;
        }

        /**
         * @param enableTermsOfUse (Updatable) Indicates if Terms of Use is enabled in UI
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder enableTermsOfUse(Boolean enableTermsOfUse) {
            return enableTermsOfUse(Output.of(enableTermsOfUse));
        }

        /**
         * @param externalId (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param iamUpstSessionExpiry (Updatable) Maximum duration for IAM User Principal Session Token expiry
         * 
         * **Added In:** 2307071836
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder iamUpstSessionExpiry(@Nullable Output<Integer> iamUpstSessionExpiry) {
            $.iamUpstSessionExpiry = iamUpstSessionExpiry;
            return this;
        }

        /**
         * @param iamUpstSessionExpiry (Updatable) Maximum duration for IAM User Principal Session Token expiry
         * 
         * **Added In:** 2307071836
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder iamUpstSessionExpiry(Integer iamUpstSessionExpiry) {
            return iamUpstSessionExpiry(Output.of(iamUpstSessionExpiry));
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(Output<String> idcsEndpoint) {
            $.idcsEndpoint = idcsEndpoint;
            return this;
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(String idcsEndpoint) {
            return idcsEndpoint(Output.of(idcsEndpoint));
        }

        /**
         * @param images (Updatable) References to various images
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [type]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder images(@Nullable Output<List<DomainsSettingImageArgs>> images) {
            $.images = images;
            return this;
        }

        /**
         * @param images (Updatable) References to various images
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [type]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder images(List<DomainsSettingImageArgs> images) {
            return images(Output.of(images));
        }

        /**
         * @param images (Updatable) References to various images
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [type]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder images(DomainsSettingImageArgs... images) {
            return images(List.of(images));
        }

        /**
         * @param isHostedPage (Updatable) Indicates if &#39;hosted&#39; option was selected
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder isHostedPage(@Nullable Output<Boolean> isHostedPage) {
            $.isHostedPage = isHostedPage;
            return this;
        }

        /**
         * @param isHostedPage (Updatable) Indicates if &#39;hosted&#39; option was selected
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder isHostedPage(Boolean isHostedPage) {
            return isHostedPage(Output.of(isHostedPage));
        }

        /**
         * @param issuer (Updatable) Tenant issuer.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder issuer(@Nullable Output<String> issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param issuer (Updatable) Tenant issuer.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder issuer(String issuer) {
            return issuer(Output.of(issuer));
        }

        /**
         * @param locale (Updatable) Locale
         * 
         * **SCIM++ Properties:**
         * * idcsCanonicalValueSourceFilter: attrName eq &#34;locales&#34; and attrValues.value eq &#34;$(loginTexts.locale)&#34;
         * * idcsCanonicalValueSourceResourceType: AllowedValue
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder locale(@Nullable Output<String> locale) {
            $.locale = locale;
            return this;
        }

        /**
         * @param locale (Updatable) Locale
         * 
         * **SCIM++ Properties:**
         * * idcsCanonicalValueSourceFilter: attrName eq &#34;locales&#34; and attrValues.value eq &#34;$(loginTexts.locale)&#34;
         * * idcsCanonicalValueSourceResourceType: AllowedValue
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder locale(String locale) {
            return locale(Output.of(locale));
        }

        /**
         * @param loginTexts (Updatable) Login text in different locales
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder loginTexts(@Nullable Output<List<DomainsSettingLoginTextArgs>> loginTexts) {
            $.loginTexts = loginTexts;
            return this;
        }

        /**
         * @param loginTexts (Updatable) Login text in different locales
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder loginTexts(List<DomainsSettingLoginTextArgs> loginTexts) {
            return loginTexts(Output.of(loginTexts));
        }

        /**
         * @param loginTexts (Updatable) Login text in different locales
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [locale]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder loginTexts(DomainsSettingLoginTextArgs... loginTexts) {
            return loginTexts(List.of(loginTexts));
        }

        /**
         * @param maxNoOfAppCmvaToReturn (Updatable) Limit the maximum return of CMVA for an App
         * 
         * **Added In:** 2111112015
         * 
         * **SCIM++ Properties:**
         * * idcsMinValue: 0
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxNoOfAppCmvaToReturn(@Nullable Output<Integer> maxNoOfAppCmvaToReturn) {
            $.maxNoOfAppCmvaToReturn = maxNoOfAppCmvaToReturn;
            return this;
        }

        /**
         * @param maxNoOfAppCmvaToReturn (Updatable) Limit the maximum return of CMVA for an App
         * 
         * **Added In:** 2111112015
         * 
         * **SCIM++ Properties:**
         * * idcsMinValue: 0
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxNoOfAppCmvaToReturn(Integer maxNoOfAppCmvaToReturn) {
            return maxNoOfAppCmvaToReturn(Output.of(maxNoOfAppCmvaToReturn));
        }

        /**
         * @param maxNoOfAppRoleMembersToReturn (Updatable) Limit the maximum return of members for an AppRole
         * 
         * **Added In:** 2111112015
         * 
         * **SCIM++ Properties:**
         * * idcsMinValue: 0
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxNoOfAppRoleMembersToReturn(@Nullable Output<Integer> maxNoOfAppRoleMembersToReturn) {
            $.maxNoOfAppRoleMembersToReturn = maxNoOfAppRoleMembersToReturn;
            return this;
        }

        /**
         * @param maxNoOfAppRoleMembersToReturn (Updatable) Limit the maximum return of members for an AppRole
         * 
         * **Added In:** 2111112015
         * 
         * **SCIM++ Properties:**
         * * idcsMinValue: 0
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxNoOfAppRoleMembersToReturn(Integer maxNoOfAppRoleMembersToReturn) {
            return maxNoOfAppRoleMembersToReturn(Output.of(maxNoOfAppRoleMembersToReturn));
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(@Nullable Output<String> ocid) {
            $.ocid = ocid;
            return this;
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(String ocid) {
            return ocid(Output.of(ocid));
        }

        /**
         * @param preferredLanguage (Updatable) Preferred written or spoken language used for localized user interfaces
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCanonicalValueSourceFilter: attrName eq &#34;languages&#34; and attrValues.value eq &#34;$(preferredLanguage)&#34;
         * * idcsCanonicalValueSourceResourceType: AllowedValue
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder preferredLanguage(@Nullable Output<String> preferredLanguage) {
            $.preferredLanguage = preferredLanguage;
            return this;
        }

        /**
         * @param preferredLanguage (Updatable) Preferred written or spoken language used for localized user interfaces
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCanonicalValueSourceFilter: attrName eq &#34;languages&#34; and attrValues.value eq &#34;$(preferredLanguage)&#34;
         * * idcsCanonicalValueSourceResourceType: AllowedValue
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder preferredLanguage(String preferredLanguage) {
            return preferredLanguage(Output.of(preferredLanguage));
        }

        /**
         * @param prevIssuer (Updatable) Previous Tenant issuer. This is an Oracle Identity Cloud Service internal attribute which is not meant to be directly modified by ID Admin. Even if the request body (Settings) contains this attribute, the actual value will be set according to the Oracle Identity Cloud Service internal logic rather than solely based on the value provided in the request payload.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder prevIssuer(@Nullable Output<String> prevIssuer) {
            $.prevIssuer = prevIssuer;
            return this;
        }

        /**
         * @param prevIssuer (Updatable) Previous Tenant issuer. This is an Oracle Identity Cloud Service internal attribute which is not meant to be directly modified by ID Admin. Even if the request body (Settings) contains this attribute, the actual value will be set according to the Oracle Identity Cloud Service internal logic rather than solely based on the value provided in the request payload.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder prevIssuer(String prevIssuer) {
            return prevIssuer(Output.of(prevIssuer));
        }

        /**
         * @param privacyPolicyUrl (Updatable) Privacy Policy URL
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder privacyPolicyUrl(@Nullable Output<String> privacyPolicyUrl) {
            $.privacyPolicyUrl = privacyPolicyUrl;
            return this;
        }

        /**
         * @param privacyPolicyUrl (Updatable) Privacy Policy URL
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder privacyPolicyUrl(String privacyPolicyUrl) {
            return privacyPolicyUrl(Output.of(privacyPolicyUrl));
        }

        /**
         * @param purgeConfigs (Updatable) Purge Configs for different Resource Types
         * 
         * **Deprecated Since: 19.1.6**
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [resourceName]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder purgeConfigs(@Nullable Output<List<DomainsSettingPurgeConfigArgs>> purgeConfigs) {
            $.purgeConfigs = purgeConfigs;
            return this;
        }

        /**
         * @param purgeConfigs (Updatable) Purge Configs for different Resource Types
         * 
         * **Deprecated Since: 19.1.6**
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [resourceName]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder purgeConfigs(List<DomainsSettingPurgeConfigArgs> purgeConfigs) {
            return purgeConfigs(Output.of(purgeConfigs));
        }

        /**
         * @param purgeConfigs (Updatable) Purge Configs for different Resource Types
         * 
         * **Deprecated Since: 19.1.6**
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [resourceName]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder purgeConfigs(DomainsSettingPurgeConfigArgs... purgeConfigs) {
            return purgeConfigs(List.of(purgeConfigs));
        }

        /**
         * @param reAuthFactors (Updatable) If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \&#34;password\&#34;.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder reAuthFactors(@Nullable Output<List<String>> reAuthFactors) {
            $.reAuthFactors = reAuthFactors;
            return this;
        }

        /**
         * @param reAuthFactors (Updatable) If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \&#34;password\&#34;.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder reAuthFactors(List<String> reAuthFactors) {
            return reAuthFactors(Output.of(reAuthFactors));
        }

        /**
         * @param reAuthFactors (Updatable) If reAuthWhenChangingMyAuthenticationFactors is true (default), this attribute specifies which re-authentication factor to use. Allowed value is \&#34;password\&#34;.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder reAuthFactors(String... reAuthFactors) {
            return reAuthFactors(List.of(reAuthFactors));
        }

        /**
         * @param reAuthWhenChangingMyAuthenticationFactors (Updatable) Specifies whether re-authentication is required or not when a user changes one of their security factors such as password or email. Default is true to ensure more secure behavior.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder reAuthWhenChangingMyAuthenticationFactors(@Nullable Output<Boolean> reAuthWhenChangingMyAuthenticationFactors) {
            $.reAuthWhenChangingMyAuthenticationFactors = reAuthWhenChangingMyAuthenticationFactors;
            return this;
        }

        /**
         * @param reAuthWhenChangingMyAuthenticationFactors (Updatable) Specifies whether re-authentication is required or not when a user changes one of their security factors such as password or email. Default is true to ensure more secure behavior.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder reAuthWhenChangingMyAuthenticationFactors(Boolean reAuthWhenChangingMyAuthenticationFactors) {
            return reAuthWhenChangingMyAuthenticationFactors(Output.of(reAuthWhenChangingMyAuthenticationFactors));
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(@Nullable Output<String> resourceTypeSchemaVersion) {
            $.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(String resourceTypeSchemaVersion) {
            return resourceTypeSchemaVersion(Output.of(resourceTypeSchemaVersion));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(Output<List<String>> schemas) {
            $.schemas = schemas;
            return this;
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(List<String> schemas) {
            return schemas(Output.of(schemas));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }

        /**
         * @param serviceAdminCannotListOtherUsers (Updatable) By default, a service admin can list all users in stripe. If true, a service admin cannot list other users.
         * 
         * **Added In:** 2108190438
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * 
         * @return builder
         * 
         */
        public Builder serviceAdminCannotListOtherUsers(@Nullable Output<Boolean> serviceAdminCannotListOtherUsers) {
            $.serviceAdminCannotListOtherUsers = serviceAdminCannotListOtherUsers;
            return this;
        }

        /**
         * @param serviceAdminCannotListOtherUsers (Updatable) By default, a service admin can list all users in stripe. If true, a service admin cannot list other users.
         * 
         * **Added In:** 2108190438
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * 
         * @return builder
         * 
         */
        public Builder serviceAdminCannotListOtherUsers(Boolean serviceAdminCannotListOtherUsers) {
            return serviceAdminCannotListOtherUsers(Output.of(serviceAdminCannotListOtherUsers));
        }

        /**
         * @param settingId ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder settingId(Output<String> settingId) {
            $.settingId = settingId;
            return this;
        }

        /**
         * @param settingId ID of the resource
         * 
         * @return builder
         * 
         */
        public Builder settingId(String settingId) {
            return settingId(Output.of(settingId));
        }

        /**
         * @param signingCertPublicAccess (Updatable) Indicates if access on SigningCert is allowed to public or not
         * 
         * **Added In:** 17.3.4
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * 
         * @return builder
         * 
         */
        public Builder signingCertPublicAccess(@Nullable Output<Boolean> signingCertPublicAccess) {
            $.signingCertPublicAccess = signingCertPublicAccess;
            return this;
        }

        /**
         * @param signingCertPublicAccess (Updatable) Indicates if access on SigningCert is allowed to public or not
         * 
         * **Added In:** 17.3.4
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * 
         * @return builder
         * 
         */
        public Builder signingCertPublicAccess(Boolean signingCertPublicAccess) {
            return signingCertPublicAccess(Output.of(signingCertPublicAccess));
        }

        /**
         * @param subMappingAttr (Updatable) **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none Subject mapping user profile attribute. The input format should be SCIM compliant. This attribute should be of type String and multivalued to false.
         * 
         * @return builder
         * 
         */
        public Builder subMappingAttr(@Nullable Output<String> subMappingAttr) {
            $.subMappingAttr = subMappingAttr;
            return this;
        }

        /**
         * @param subMappingAttr (Updatable) **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none Subject mapping user profile attribute. The input format should be SCIM compliant. This attribute should be of type String and multivalued to false.
         * 
         * @return builder
         * 
         */
        public Builder subMappingAttr(String subMappingAttr) {
            return subMappingAttr(Output.of(subMappingAttr));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DomainsSettingTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DomainsSettingTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(DomainsSettingTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param tenantCustomClaims (Updatable) Custom claims associated with the specific tenant
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [name]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tenantCustomClaims(@Nullable Output<List<DomainsSettingTenantCustomClaimArgs>> tenantCustomClaims) {
            $.tenantCustomClaims = tenantCustomClaims;
            return this;
        }

        /**
         * @param tenantCustomClaims (Updatable) Custom claims associated with the specific tenant
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [name]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tenantCustomClaims(List<DomainsSettingTenantCustomClaimArgs> tenantCustomClaims) {
            return tenantCustomClaims(Output.of(tenantCustomClaims));
        }

        /**
         * @param tenantCustomClaims (Updatable) Custom claims associated with the specific tenant
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [name]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tenantCustomClaims(DomainsSettingTenantCustomClaimArgs... tenantCustomClaims) {
            return tenantCustomClaims(List.of(tenantCustomClaims));
        }

        /**
         * @param termsOfUseUrl (Updatable) Terms of Use URL
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder termsOfUseUrl(@Nullable Output<String> termsOfUseUrl) {
            $.termsOfUseUrl = termsOfUseUrl;
            return this;
        }

        /**
         * @param termsOfUseUrl (Updatable) Terms of Use URL
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder termsOfUseUrl(String termsOfUseUrl) {
            return termsOfUseUrl(Output.of(termsOfUseUrl));
        }

        /**
         * @param timezone (Updatable) User&#39;s timezone
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCanonicalValueSourceFilter: attrName eq &#34;timezones&#34; and attrValues.value eq &#34;$(timezone)&#34;
         * * idcsCanonicalValueSourceResourceType: AllowedValue
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timezone(@Nullable Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone (Updatable) User&#39;s timezone
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCanonicalValueSourceFilter: attrName eq &#34;timezones&#34; and attrValues.value eq &#34;$(timezone)&#34;
         * * idcsCanonicalValueSourceResourceType: AllowedValue
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public DomainsSettingArgs build() {
            if ($.csrAccess == null) {
                throw new MissingRequiredPropertyException("DomainsSettingArgs", "csrAccess");
            }
            if ($.idcsEndpoint == null) {
                throw new MissingRequiredPropertyException("DomainsSettingArgs", "idcsEndpoint");
            }
            if ($.schemas == null) {
                throw new MissingRequiredPropertyException("DomainsSettingArgs", "schemas");
            }
            if ($.settingId == null) {
                throw new MissingRequiredPropertyException("DomainsSettingArgs", "settingId");
            }
            return $;
        }
    }

}
