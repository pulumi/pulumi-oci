// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.inputs.DomainsSocialIdentityProviderJitProvAssignedGroupArgs;
import com.pulumi.oci.Identity.inputs.DomainsSocialIdentityProviderRelayIdpParamMappingArgs;
import com.pulumi.oci.Identity.inputs.DomainsSocialIdentityProviderTagArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsSocialIdentityProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsSocialIdentityProviderArgs Empty = new DomainsSocialIdentityProviderArgs();

    /**
     * (Updatable) Social IDP Access token URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="accessTokenUrl")
    private @Nullable Output<String> accessTokenUrl;

    /**
     * @return (Updatable) Social IDP Access token URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> accessTokenUrl() {
        return Optional.ofNullable(this.accessTokenUrl);
    }

    /**
     * (Updatable) Whether account linking is enabled
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="accountLinkingEnabled", required=true)
    private Output<Boolean> accountLinkingEnabled;

    /**
     * @return (Updatable) Whether account linking is enabled
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> accountLinkingEnabled() {
        return this.accountLinkingEnabled;
    }

    /**
     * (Updatable) Admin scope to request
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="adminScopes")
    private @Nullable Output<List<String>> adminScopes;

    /**
     * @return (Updatable) Admin scope to request
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> adminScopes() {
        return Optional.ofNullable(this.adminScopes);
    }

    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    @Import(name="authorization")
    private @Nullable Output<String> authorization;

    /**
     * @return (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public Optional<Output<String>> authorization() {
        return Optional.ofNullable(this.authorization);
    }

    /**
     * (Updatable) Social IDP Authorization URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="authzUrl")
    private @Nullable Output<String> authzUrl;

    /**
     * @return (Updatable) Social IDP Authorization URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> authzUrl() {
        return Optional.ofNullable(this.authzUrl);
    }

    /**
     * (Updatable) Whether social auto redirect is enabled. The IDP policy should be configured with only one Social IDP, and without username/password selected.
     * 
     * **Added In:** 2310202314
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="autoRedirectEnabled")
    private @Nullable Output<Boolean> autoRedirectEnabled;

    /**
     * @return (Updatable) Whether social auto redirect is enabled. The IDP policy should be configured with only one Social IDP, and without username/password selected.
     * 
     * **Added In:** 2310202314
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> autoRedirectEnabled() {
        return Optional.ofNullable(this.autoRedirectEnabled);
    }

    /**
     * (Updatable) Whether the client credential is contained in payload
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="clientCredentialInPayload")
    private @Nullable Output<Boolean> clientCredentialInPayload;

    /**
     * @return (Updatable) Whether the client credential is contained in payload
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> clientCredentialInPayload() {
        return Optional.ofNullable(this.clientCredentialInPayload);
    }

    /**
     * (Updatable) Social IDP allowed clock skew time
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="clockSkewInSeconds")
    private @Nullable Output<Integer> clockSkewInSeconds;

    /**
     * @return (Updatable) Social IDP allowed clock skew time
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Optional<Output<Integer>> clockSkewInSeconds() {
        return Optional.ofNullable(this.clockSkewInSeconds);
    }

    /**
     * (Updatable) Social IDP Client Application Client ID
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="consumerKey", required=true)
    private Output<String> consumerKey;

    /**
     * @return (Updatable) Social IDP Client Application Client ID
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> consumerKey() {
        return this.consumerKey;
    }

    /**
     * (Updatable) Social IDP Client Application Client Secret
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * idcsSensitive: encrypt
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="consumerSecret", required=true)
    private Output<String> consumerSecret;

    /**
     * @return (Updatable) Social IDP Client Application Client Secret
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * idcsSensitive: encrypt
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> consumerSecret() {
        return this.consumerSecret;
    }

    /**
     * (Updatable) Social IDP description
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Social IDP description
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Discovery URL
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="discoveryUrl")
    private @Nullable Output<String> discoveryUrl;

    /**
     * @return (Updatable) Discovery URL
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> discoveryUrl() {
        return Optional.ofNullable(this.discoveryUrl);
    }

    /**
     * (Updatable) Whether the IDP is enabled or not
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return (Updatable) Whether the IDP is enabled or not
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * (Updatable) ICON URL for social idp
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="iconUrl")
    private @Nullable Output<String> iconUrl;

    /**
     * @return (Updatable) ICON URL for social idp
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> iconUrl() {
        return Optional.ofNullable(this.iconUrl);
    }

    /**
     * Id attribute used for account linking
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="idAttribute")
    private @Nullable Output<String> idAttribute;

    /**
     * @return Id attribute used for account linking
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> idAttribute() {
        return Optional.ofNullable(this.idAttribute);
    }

    /**
     * The basic endpoint for the identity domain
     * 
     */
    @Import(name="idcsEndpoint", required=true)
    private Output<String> idcsEndpoint;

    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public Output<String> idcsEndpoint() {
        return this.idcsEndpoint;
    }

    /**
     * (Updatable) Lists the groups each social JIT-provisioned user is a member. Just-in-Time user-provisioning applies this static list when jitProvGroupStaticListEnabled:true.
     * 
     * **Added In:** 2309290043
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="jitProvAssignedGroups")
    private @Nullable Output<List<DomainsSocialIdentityProviderJitProvAssignedGroupArgs>> jitProvAssignedGroups;

    /**
     * @return (Updatable) Lists the groups each social JIT-provisioned user is a member. Just-in-Time user-provisioning applies this static list when jitProvGroupStaticListEnabled:true.
     * 
     * **Added In:** 2309290043
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsSocialIdentityProviderJitProvAssignedGroupArgs>>> jitProvAssignedGroups() {
        return Optional.ofNullable(this.jitProvAssignedGroups);
    }

    /**
     * (Updatable) Set to true to indicate Social JIT User Provisioning Groups should be assigned from a static list
     * 
     * **Added In:** 2309290043
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="jitProvGroupStaticListEnabled")
    private @Nullable Output<Boolean> jitProvGroupStaticListEnabled;

    /**
     * @return (Updatable) Set to true to indicate Social JIT User Provisioning Groups should be assigned from a static list
     * 
     * **Added In:** 2309290043
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> jitProvGroupStaticListEnabled() {
        return Optional.ofNullable(this.jitProvGroupStaticListEnabled);
    }

    /**
     * (Updatable) Social provider name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: global
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) Social provider name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: global
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    @Import(name="ocid")
    private @Nullable Output<String> ocid;

    /**
     * @return (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    public Optional<Output<String>> ocid() {
        return Optional.ofNullable(this.ocid);
    }

    /**
     * (Updatable) Social IDP User profile URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="profileUrl")
    private @Nullable Output<String> profileUrl;

    /**
     * @return (Updatable) Social IDP User profile URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> profileUrl() {
        return Optional.ofNullable(this.profileUrl);
    }

    /**
     * (Updatable) redirect URL for social idp
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="redirectUrl")
    private @Nullable Output<String> redirectUrl;

    /**
     * @return (Updatable) redirect URL for social idp
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> redirectUrl() {
        return Optional.ofNullable(this.redirectUrl);
    }

    /**
     * (Updatable) Social IDP Refresh token URL
     * 
     * **Added In:** 19.1.4
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="refreshTokenUrl")
    private @Nullable Output<String> refreshTokenUrl;

    /**
     * @return (Updatable) Social IDP Refresh token URL
     * 
     * **Added In:** 19.1.4
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> refreshTokenUrl() {
        return Optional.ofNullable(this.refreshTokenUrl);
    }

    /**
     * (Updatable) Whether registration is enabled
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="registrationEnabled", required=true)
    private Output<Boolean> registrationEnabled;

    /**
     * @return (Updatable) Whether registration is enabled
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> registrationEnabled() {
        return this.registrationEnabled;
    }

    /**
     * (Updatable) Relay Param variable for Social IDP
     * 
     * **Added In:** 2305190132
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [relayParamKey]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="relayIdpParamMappings")
    private @Nullable Output<List<DomainsSocialIdentityProviderRelayIdpParamMappingArgs>> relayIdpParamMappings;

    /**
     * @return (Updatable) Relay Param variable for Social IDP
     * 
     * **Added In:** 2305190132
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [relayParamKey]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsSocialIdentityProviderRelayIdpParamMappingArgs>>> relayIdpParamMappings() {
        return Optional.ofNullable(this.relayIdpParamMappings);
    }

    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    @Import(name="resourceTypeSchemaVersion")
    private @Nullable Output<String> resourceTypeSchemaVersion;

    /**
     * @return (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public Optional<Output<String>> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }

    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="schemas", required=true)
    private Output<List<String>> schemas;

    /**
     * @return (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<List<String>> schemas() {
        return this.schemas;
    }

    /**
     * (Updatable) Scope to request
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return (Updatable) Scope to request
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * Service Provider Name
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="serviceProviderName", required=true)
    private Output<String> serviceProviderName;

    /**
     * @return Service Provider Name
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> serviceProviderName() {
        return this.serviceProviderName;
    }

    /**
     * (Updatable) Whether show on login
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="showOnLogin", required=true)
    private Output<Boolean> showOnLogin;

    /**
     * @return (Updatable) Whether show on login
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> showOnLogin() {
        return this.showOnLogin;
    }

    /**
     * (Updatable) Whether Social JIT Provisioning is enabled
     * 
     * **Added In:** 2307282043
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="socialJitProvisioningEnabled")
    private @Nullable Output<Boolean> socialJitProvisioningEnabled;

    /**
     * @return (Updatable) Whether Social JIT Provisioning is enabled
     * 
     * **Added In:** 2307282043
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> socialJitProvisioningEnabled() {
        return Optional.ofNullable(this.socialJitProvisioningEnabled);
    }

    /**
     * (Updatable) Status
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) Status
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DomainsSocialIdentityProviderTagArgs>> tags;

    /**
     * @return (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsSocialIdentityProviderTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DomainsSocialIdentityProviderArgs() {}

    private DomainsSocialIdentityProviderArgs(DomainsSocialIdentityProviderArgs $) {
        this.accessTokenUrl = $.accessTokenUrl;
        this.accountLinkingEnabled = $.accountLinkingEnabled;
        this.adminScopes = $.adminScopes;
        this.authorization = $.authorization;
        this.authzUrl = $.authzUrl;
        this.autoRedirectEnabled = $.autoRedirectEnabled;
        this.clientCredentialInPayload = $.clientCredentialInPayload;
        this.clockSkewInSeconds = $.clockSkewInSeconds;
        this.consumerKey = $.consumerKey;
        this.consumerSecret = $.consumerSecret;
        this.description = $.description;
        this.discoveryUrl = $.discoveryUrl;
        this.enabled = $.enabled;
        this.iconUrl = $.iconUrl;
        this.idAttribute = $.idAttribute;
        this.idcsEndpoint = $.idcsEndpoint;
        this.jitProvAssignedGroups = $.jitProvAssignedGroups;
        this.jitProvGroupStaticListEnabled = $.jitProvGroupStaticListEnabled;
        this.name = $.name;
        this.ocid = $.ocid;
        this.profileUrl = $.profileUrl;
        this.redirectUrl = $.redirectUrl;
        this.refreshTokenUrl = $.refreshTokenUrl;
        this.registrationEnabled = $.registrationEnabled;
        this.relayIdpParamMappings = $.relayIdpParamMappings;
        this.resourceTypeSchemaVersion = $.resourceTypeSchemaVersion;
        this.schemas = $.schemas;
        this.scopes = $.scopes;
        this.serviceProviderName = $.serviceProviderName;
        this.showOnLogin = $.showOnLogin;
        this.socialJitProvisioningEnabled = $.socialJitProvisioningEnabled;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsSocialIdentityProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsSocialIdentityProviderArgs $;

        public Builder() {
            $ = new DomainsSocialIdentityProviderArgs();
        }

        public Builder(DomainsSocialIdentityProviderArgs defaults) {
            $ = new DomainsSocialIdentityProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessTokenUrl (Updatable) Social IDP Access token URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder accessTokenUrl(@Nullable Output<String> accessTokenUrl) {
            $.accessTokenUrl = accessTokenUrl;
            return this;
        }

        /**
         * @param accessTokenUrl (Updatable) Social IDP Access token URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder accessTokenUrl(String accessTokenUrl) {
            return accessTokenUrl(Output.of(accessTokenUrl));
        }

        /**
         * @param accountLinkingEnabled (Updatable) Whether account linking is enabled
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder accountLinkingEnabled(Output<Boolean> accountLinkingEnabled) {
            $.accountLinkingEnabled = accountLinkingEnabled;
            return this;
        }

        /**
         * @param accountLinkingEnabled (Updatable) Whether account linking is enabled
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder accountLinkingEnabled(Boolean accountLinkingEnabled) {
            return accountLinkingEnabled(Output.of(accountLinkingEnabled));
        }

        /**
         * @param adminScopes (Updatable) Admin scope to request
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder adminScopes(@Nullable Output<List<String>> adminScopes) {
            $.adminScopes = adminScopes;
            return this;
        }

        /**
         * @param adminScopes (Updatable) Admin scope to request
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder adminScopes(List<String> adminScopes) {
            return adminScopes(Output.of(adminScopes));
        }

        /**
         * @param adminScopes (Updatable) Admin scope to request
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder adminScopes(String... adminScopes) {
            return adminScopes(List.of(adminScopes));
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(@Nullable Output<String> authorization) {
            $.authorization = authorization;
            return this;
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(String authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param authzUrl (Updatable) Social IDP Authorization URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder authzUrl(@Nullable Output<String> authzUrl) {
            $.authzUrl = authzUrl;
            return this;
        }

        /**
         * @param authzUrl (Updatable) Social IDP Authorization URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder authzUrl(String authzUrl) {
            return authzUrl(Output.of(authzUrl));
        }

        /**
         * @param autoRedirectEnabled (Updatable) Whether social auto redirect is enabled. The IDP policy should be configured with only one Social IDP, and without username/password selected.
         * 
         * **Added In:** 2310202314
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder autoRedirectEnabled(@Nullable Output<Boolean> autoRedirectEnabled) {
            $.autoRedirectEnabled = autoRedirectEnabled;
            return this;
        }

        /**
         * @param autoRedirectEnabled (Updatable) Whether social auto redirect is enabled. The IDP policy should be configured with only one Social IDP, and without username/password selected.
         * 
         * **Added In:** 2310202314
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder autoRedirectEnabled(Boolean autoRedirectEnabled) {
            return autoRedirectEnabled(Output.of(autoRedirectEnabled));
        }

        /**
         * @param clientCredentialInPayload (Updatable) Whether the client credential is contained in payload
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder clientCredentialInPayload(@Nullable Output<Boolean> clientCredentialInPayload) {
            $.clientCredentialInPayload = clientCredentialInPayload;
            return this;
        }

        /**
         * @param clientCredentialInPayload (Updatable) Whether the client credential is contained in payload
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder clientCredentialInPayload(Boolean clientCredentialInPayload) {
            return clientCredentialInPayload(Output.of(clientCredentialInPayload));
        }

        /**
         * @param clockSkewInSeconds (Updatable) Social IDP allowed clock skew time
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder clockSkewInSeconds(@Nullable Output<Integer> clockSkewInSeconds) {
            $.clockSkewInSeconds = clockSkewInSeconds;
            return this;
        }

        /**
         * @param clockSkewInSeconds (Updatable) Social IDP allowed clock skew time
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder clockSkewInSeconds(Integer clockSkewInSeconds) {
            return clockSkewInSeconds(Output.of(clockSkewInSeconds));
        }

        /**
         * @param consumerKey (Updatable) Social IDP Client Application Client ID
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consumerKey(Output<String> consumerKey) {
            $.consumerKey = consumerKey;
            return this;
        }

        /**
         * @param consumerKey (Updatable) Social IDP Client Application Client ID
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consumerKey(String consumerKey) {
            return consumerKey(Output.of(consumerKey));
        }

        /**
         * @param consumerSecret (Updatable) Social IDP Client Application Client Secret
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * idcsSensitive: encrypt
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consumerSecret(Output<String> consumerSecret) {
            $.consumerSecret = consumerSecret;
            return this;
        }

        /**
         * @param consumerSecret (Updatable) Social IDP Client Application Client Secret
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * idcsSensitive: encrypt
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consumerSecret(String consumerSecret) {
            return consumerSecret(Output.of(consumerSecret));
        }

        /**
         * @param description (Updatable) Social IDP description
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Social IDP description
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param discoveryUrl (Updatable) Discovery URL
         * 
         * **Added In:** 17.4.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder discoveryUrl(@Nullable Output<String> discoveryUrl) {
            $.discoveryUrl = discoveryUrl;
            return this;
        }

        /**
         * @param discoveryUrl (Updatable) Discovery URL
         * 
         * **Added In:** 17.4.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder discoveryUrl(String discoveryUrl) {
            return discoveryUrl(Output.of(discoveryUrl));
        }

        /**
         * @param enabled (Updatable) Whether the IDP is enabled or not
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled (Updatable) Whether the IDP is enabled or not
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param iconUrl (Updatable) ICON URL for social idp
         * 
         * **Added In:** 17.4.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder iconUrl(@Nullable Output<String> iconUrl) {
            $.iconUrl = iconUrl;
            return this;
        }

        /**
         * @param iconUrl (Updatable) ICON URL for social idp
         * 
         * **Added In:** 17.4.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder iconUrl(String iconUrl) {
            return iconUrl(Output.of(iconUrl));
        }

        /**
         * @param idAttribute Id attribute used for account linking
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idAttribute(@Nullable Output<String> idAttribute) {
            $.idAttribute = idAttribute;
            return this;
        }

        /**
         * @param idAttribute Id attribute used for account linking
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idAttribute(String idAttribute) {
            return idAttribute(Output.of(idAttribute));
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(Output<String> idcsEndpoint) {
            $.idcsEndpoint = idcsEndpoint;
            return this;
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(String idcsEndpoint) {
            return idcsEndpoint(Output.of(idcsEndpoint));
        }

        /**
         * @param jitProvAssignedGroups (Updatable) Lists the groups each social JIT-provisioned user is a member. Just-in-Time user-provisioning applies this static list when jitProvGroupStaticListEnabled:true.
         * 
         * **Added In:** 2309290043
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitProvAssignedGroups(@Nullable Output<List<DomainsSocialIdentityProviderJitProvAssignedGroupArgs>> jitProvAssignedGroups) {
            $.jitProvAssignedGroups = jitProvAssignedGroups;
            return this;
        }

        /**
         * @param jitProvAssignedGroups (Updatable) Lists the groups each social JIT-provisioned user is a member. Just-in-Time user-provisioning applies this static list when jitProvGroupStaticListEnabled:true.
         * 
         * **Added In:** 2309290043
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitProvAssignedGroups(List<DomainsSocialIdentityProviderJitProvAssignedGroupArgs> jitProvAssignedGroups) {
            return jitProvAssignedGroups(Output.of(jitProvAssignedGroups));
        }

        /**
         * @param jitProvAssignedGroups (Updatable) Lists the groups each social JIT-provisioned user is a member. Just-in-Time user-provisioning applies this static list when jitProvGroupStaticListEnabled:true.
         * 
         * **Added In:** 2309290043
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitProvAssignedGroups(DomainsSocialIdentityProviderJitProvAssignedGroupArgs... jitProvAssignedGroups) {
            return jitProvAssignedGroups(List.of(jitProvAssignedGroups));
        }

        /**
         * @param jitProvGroupStaticListEnabled (Updatable) Set to true to indicate Social JIT User Provisioning Groups should be assigned from a static list
         * 
         * **Added In:** 2309290043
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitProvGroupStaticListEnabled(@Nullable Output<Boolean> jitProvGroupStaticListEnabled) {
            $.jitProvGroupStaticListEnabled = jitProvGroupStaticListEnabled;
            return this;
        }

        /**
         * @param jitProvGroupStaticListEnabled (Updatable) Set to true to indicate Social JIT User Provisioning Groups should be assigned from a static list
         * 
         * **Added In:** 2309290043
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitProvGroupStaticListEnabled(Boolean jitProvGroupStaticListEnabled) {
            return jitProvGroupStaticListEnabled(Output.of(jitProvGroupStaticListEnabled));
        }

        /**
         * @param name (Updatable) Social provider name
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Social provider name
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(@Nullable Output<String> ocid) {
            $.ocid = ocid;
            return this;
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(String ocid) {
            return ocid(Output.of(ocid));
        }

        /**
         * @param profileUrl (Updatable) Social IDP User profile URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder profileUrl(@Nullable Output<String> profileUrl) {
            $.profileUrl = profileUrl;
            return this;
        }

        /**
         * @param profileUrl (Updatable) Social IDP User profile URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder profileUrl(String profileUrl) {
            return profileUrl(Output.of(profileUrl));
        }

        /**
         * @param redirectUrl (Updatable) redirect URL for social idp
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(@Nullable Output<String> redirectUrl) {
            $.redirectUrl = redirectUrl;
            return this;
        }

        /**
         * @param redirectUrl (Updatable) redirect URL for social idp
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(String redirectUrl) {
            return redirectUrl(Output.of(redirectUrl));
        }

        /**
         * @param refreshTokenUrl (Updatable) Social IDP Refresh token URL
         * 
         * **Added In:** 19.1.4
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder refreshTokenUrl(@Nullable Output<String> refreshTokenUrl) {
            $.refreshTokenUrl = refreshTokenUrl;
            return this;
        }

        /**
         * @param refreshTokenUrl (Updatable) Social IDP Refresh token URL
         * 
         * **Added In:** 19.1.4
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder refreshTokenUrl(String refreshTokenUrl) {
            return refreshTokenUrl(Output.of(refreshTokenUrl));
        }

        /**
         * @param registrationEnabled (Updatable) Whether registration is enabled
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder registrationEnabled(Output<Boolean> registrationEnabled) {
            $.registrationEnabled = registrationEnabled;
            return this;
        }

        /**
         * @param registrationEnabled (Updatable) Whether registration is enabled
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder registrationEnabled(Boolean registrationEnabled) {
            return registrationEnabled(Output.of(registrationEnabled));
        }

        /**
         * @param relayIdpParamMappings (Updatable) Relay Param variable for Social IDP
         * 
         * **Added In:** 2305190132
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [relayParamKey]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder relayIdpParamMappings(@Nullable Output<List<DomainsSocialIdentityProviderRelayIdpParamMappingArgs>> relayIdpParamMappings) {
            $.relayIdpParamMappings = relayIdpParamMappings;
            return this;
        }

        /**
         * @param relayIdpParamMappings (Updatable) Relay Param variable for Social IDP
         * 
         * **Added In:** 2305190132
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [relayParamKey]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder relayIdpParamMappings(List<DomainsSocialIdentityProviderRelayIdpParamMappingArgs> relayIdpParamMappings) {
            return relayIdpParamMappings(Output.of(relayIdpParamMappings));
        }

        /**
         * @param relayIdpParamMappings (Updatable) Relay Param variable for Social IDP
         * 
         * **Added In:** 2305190132
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [relayParamKey]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder relayIdpParamMappings(DomainsSocialIdentityProviderRelayIdpParamMappingArgs... relayIdpParamMappings) {
            return relayIdpParamMappings(List.of(relayIdpParamMappings));
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(@Nullable Output<String> resourceTypeSchemaVersion) {
            $.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(String resourceTypeSchemaVersion) {
            return resourceTypeSchemaVersion(Output.of(resourceTypeSchemaVersion));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(Output<List<String>> schemas) {
            $.schemas = schemas;
            return this;
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(List<String> schemas) {
            return schemas(Output.of(schemas));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }

        /**
         * @param scopes (Updatable) Scope to request
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes (Updatable) Scope to request
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes (Updatable) Scope to request
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param serviceProviderName Service Provider Name
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderName(Output<String> serviceProviderName) {
            $.serviceProviderName = serviceProviderName;
            return this;
        }

        /**
         * @param serviceProviderName Service Provider Name
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderName(String serviceProviderName) {
            return serviceProviderName(Output.of(serviceProviderName));
        }

        /**
         * @param showOnLogin (Updatable) Whether show on login
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder showOnLogin(Output<Boolean> showOnLogin) {
            $.showOnLogin = showOnLogin;
            return this;
        }

        /**
         * @param showOnLogin (Updatable) Whether show on login
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder showOnLogin(Boolean showOnLogin) {
            return showOnLogin(Output.of(showOnLogin));
        }

        /**
         * @param socialJitProvisioningEnabled (Updatable) Whether Social JIT Provisioning is enabled
         * 
         * **Added In:** 2307282043
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder socialJitProvisioningEnabled(@Nullable Output<Boolean> socialJitProvisioningEnabled) {
            $.socialJitProvisioningEnabled = socialJitProvisioningEnabled;
            return this;
        }

        /**
         * @param socialJitProvisioningEnabled (Updatable) Whether Social JIT Provisioning is enabled
         * 
         * **Added In:** 2307282043
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder socialJitProvisioningEnabled(Boolean socialJitProvisioningEnabled) {
            return socialJitProvisioningEnabled(Output.of(socialJitProvisioningEnabled));
        }

        /**
         * @param status (Updatable) Status
         * 
         * **Added In:** 17.4.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) Status
         * 
         * **Added In:** 17.4.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DomainsSocialIdentityProviderTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DomainsSocialIdentityProviderTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(DomainsSocialIdentityProviderTagArgs... tags) {
            return tags(List.of(tags));
        }

        public DomainsSocialIdentityProviderArgs build() {
            if ($.accountLinkingEnabled == null) {
                throw new MissingRequiredPropertyException("DomainsSocialIdentityProviderArgs", "accountLinkingEnabled");
            }
            if ($.consumerKey == null) {
                throw new MissingRequiredPropertyException("DomainsSocialIdentityProviderArgs", "consumerKey");
            }
            if ($.consumerSecret == null) {
                throw new MissingRequiredPropertyException("DomainsSocialIdentityProviderArgs", "consumerSecret");
            }
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("DomainsSocialIdentityProviderArgs", "enabled");
            }
            if ($.idcsEndpoint == null) {
                throw new MissingRequiredPropertyException("DomainsSocialIdentityProviderArgs", "idcsEndpoint");
            }
            if ($.registrationEnabled == null) {
                throw new MissingRequiredPropertyException("DomainsSocialIdentityProviderArgs", "registrationEnabled");
            }
            if ($.schemas == null) {
                throw new MissingRequiredPropertyException("DomainsSocialIdentityProviderArgs", "schemas");
            }
            if ($.serviceProviderName == null) {
                throw new MissingRequiredPropertyException("DomainsSocialIdentityProviderArgs", "serviceProviderName");
            }
            if ($.showOnLogin == null) {
                throw new MissingRequiredPropertyException("DomainsSocialIdentityProviderArgs", "showOnLogin");
            }
            return $;
        }
    }

}
