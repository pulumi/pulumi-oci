// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Identity.DomainsUserArgs;
import com.pulumi.oci.Identity.inputs.DomainsUserState;
import com.pulumi.oci.Identity.outputs.DomainsUserAddress;
import com.pulumi.oci.Identity.outputs.DomainsUserEmail;
import com.pulumi.oci.Identity.outputs.DomainsUserEntitlement;
import com.pulumi.oci.Identity.outputs.DomainsUserGroup;
import com.pulumi.oci.Identity.outputs.DomainsUserIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.DomainsUserIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.DomainsUserIm;
import com.pulumi.oci.Identity.outputs.DomainsUserMeta;
import com.pulumi.oci.Identity.outputs.DomainsUserName;
import com.pulumi.oci.Identity.outputs.DomainsUserPhoneNumber;
import com.pulumi.oci.Identity.outputs.DomainsUserPhoto;
import com.pulumi.oci.Identity.outputs.DomainsUserRole;
import com.pulumi.oci.Identity.outputs.DomainsUserTag;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasextensionenterprise20user;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTags;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser;
import com.pulumi.oci.Identity.outputs.DomainsUserX509certificate;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the User resource in Oracle Cloud Infrastructure Identity Domains service.
 * 
 * Create a user.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Identity.DomainsUser;
 * import com.pulumi.oci.Identity.DomainsUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserAddressArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserEmailArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserEntitlementArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserImArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserNameArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserPhoneNumberArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserPhotoArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserRoleArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserTagArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasextensionenterprise20userArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs;
 * import com.pulumi.oci.Identity.inputs.DomainsUserX509certificateArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testUser = new DomainsUser(&#34;testUser&#34;, DomainsUserArgs.builder()        
 *             .idcsEndpoint(testDomain.url())
 *             .schemas(&#34;urn:ietf:params:scim:schemas:core:2.0:User&#34;)
 *             .userName(&#34;userName&#34;)
 *             .active(userActive)
 *             .addresses(DomainsUserAddressArgs.builder()
 *                 .type(userAddressesType)
 *                 .country(userAddressesCountry)
 *                 .formatted(userAddressesFormatted)
 *                 .locality(userAddressesLocality)
 *                 .postalCode(userAddressesPostalCode)
 *                 .primary(userAddressesPrimary)
 *                 .region(userAddressesRegion)
 *                 .streetAddress(userAddressesStreetAddress)
 *                 .build())
 *             .attributeSets()
 *             .attributes(&#34;&#34;)
 *             .authorization(userAuthorization)
 *             .description(userDescription)
 *             .displayName(userDisplayName)
 *             .emails(            
 *                 DomainsUserEmailArgs.builder()
 *                     .type(userEmailsType)
 *                     .value(userEmailsValue)
 *                     .primary(true)
 *                     .secondary(userEmailsSecondary)
 *                     .verified(userEmailsVerified)
 *                     .build(),
 *                 DomainsUserEmailArgs.builder()
 *                     .type(&#34;recovery&#34;)
 *                     .value(userEmailsValue)
 *                     .build())
 *             .entitlements(DomainsUserEntitlementArgs.builder()
 *                 .type(userEntitlementsType)
 *                 .value(userEntitlementsValue)
 *                 .display(userEntitlementsDisplay)
 *                 .primary(userEntitlementsPrimary)
 *                 .build())
 *             .externalId(&#34;externalId&#34;)
 *             .id(userId)
 *             .ims(DomainsUserImArgs.builder()
 *                 .type(userImsType)
 *                 .value(userImsValue)
 *                 .display(userImsDisplay)
 *                 .primary(userImsPrimary)
 *                 .build())
 *             .locale(userLocale)
 *             .name(DomainsUserNameArgs.builder()
 *                 .familyName(userNameFamilyName)
 *                 .formatted(userNameFormatted)
 *                 .givenName(userNameGivenName)
 *                 .honorificPrefix(userNameHonorificPrefix)
 *                 .honorificSuffix(userNameHonorificSuffix)
 *                 .middleName(userNameMiddleName)
 *                 .build())
 *             .nickName(userNickName)
 *             .ocid(userOcid)
 *             .password(userPassword)
 *             .phoneNumbers(DomainsUserPhoneNumberArgs.builder()
 *                 .type(userPhoneNumbersType)
 *                 .value(userPhoneNumbersValue)
 *                 .primary(userPhoneNumbersPrimary)
 *                 .build())
 *             .photos(DomainsUserPhotoArgs.builder()
 *                 .type(userPhotosType)
 *                 .value(userPhotosValue)
 *                 .display(userPhotosDisplay)
 *                 .primary(userPhotosPrimary)
 *                 .build())
 *             .preferredLanguage(userPreferredLanguage)
 *             .profileUrl(userProfileUrl)
 *             .resourceTypeSchemaVersion(userResourceTypeSchemaVersion)
 *             .roles(DomainsUserRoleArgs.builder()
 *                 .type(userRolesType)
 *                 .value(userRolesValue)
 *                 .display(userRolesDisplay)
 *                 .primary(userRolesPrimary)
 *                 .build())
 *             .tags(DomainsUserTagArgs.builder()
 *                 .key(userTagsKey)
 *                 .value(userTagsValue)
 *                 .build())
 *             .timezone(userTimezone)
 *             .title(userTitle)
 *             .urnietfparamsscimschemasextensionenterprise20user(DomainsUserUrnietfparamsscimschemasextensionenterprise20userArgs.builder()
 *                 .costCenter(userUrnietfparamsscimschemasextensionenterprise20userCostCenter)
 *                 .department(userUrnietfparamsscimschemasextensionenterprise20userDepartment)
 *                 .division(userUrnietfparamsscimschemasextensionenterprise20userDivision)
 *                 .employeeNumber(userUrnietfparamsscimschemasextensionenterprise20userEmployeeNumber)
 *                 .manager(DomainsUserUrnietfparamsscimschemasextensionenterprise20userManagerArgs.builder()
 *                     .value(userUrnietfparamsscimschemasextensionenterprise20userManagerValue)
 *                     .build())
 *                 .organization(userUrnietfparamsscimschemasextensionenterprise20userOrganization)
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionOciTags(DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs.builder()
 *                 .definedTags(DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagArgs.builder()
 *                     .key(userUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagsKey)
 *                     .namespace(userUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagsNamespace)
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionOciTagsDefinedTagsValue)
 *                     .build())
 *                 .freeformTags(DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagArgs.builder()
 *                     .key(userUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagsKey)
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionOciTagsFreeformTagsValue)
 *                     .build())
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionadaptiveUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserArgs.builder()
 *                 .riskLevel(userUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskLevel)
 *                 .riskScores(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs.builder()
 *                     .lastUpdateTimestamp(userUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoresLastUpdateTimestamp)
 *                     .riskLevel(userUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoresRiskLevel)
 *                     .score(userUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoresScore)
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoresValue)
 *                     .source(userUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoresSource)
 *                     .status(userUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoresStatus)
 *                     .build())
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUserArgs.builder()
 *                 .canUseApiKeys(true)
 *                 .canUseAuthTokens(true)
 *                 .canUseConsolePassword(true)
 *                 .canUseCustomerSecretKeys(true)
 *                 .canUseDbCredentials(true)
 *                 .canUseOauth2clientCredentials(true)
 *                 .canUseSmtpCredentials(true)
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs.builder()
 *                 .dbUserName(&#34;dbUserName&#34;)
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionkerberosUserUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserArgs.builder()
 *                 .realmUsers(DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUserArgs.builder()
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUsersValue)
 *                     .principalName(userUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUsersPrincipalName)
 *                     .realmName(userUrnietfparamsscimschemasoracleidcsextensionkerberosUserUserRealmUsersRealmName)
 *                     .build())
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionmfaUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserArgs.builder()
 *                 .bypassCodes(DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCodeArgs.builder()
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionmfaUserBypassCodesValue)
 *                     .build())
 *                 .devices(DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs.builder()
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionmfaUserDevicesValue)
 *                     .authenticationMethod(userUrnietfparamsscimschemasoracleidcsextensionmfaUserDevicesAuthenticationMethod)
 *                     .display(userUrnietfparamsscimschemasoracleidcsextensionmfaUserDevicesDisplay)
 *                     .factorStatus(userUrnietfparamsscimschemasoracleidcsextensionmfaUserDevicesFactorStatus)
 *                     .factorType(userUrnietfparamsscimschemasoracleidcsextensionmfaUserDevicesFactorType)
 *                     .lastSyncTime(userUrnietfparamsscimschemasoracleidcsextensionmfaUserDevicesLastSyncTime)
 *                     .status(userUrnietfparamsscimschemasoracleidcsextensionmfaUserDevicesStatus)
 *                     .thirdPartyVendorName(userUrnietfparamsscimschemasoracleidcsextensionmfaUserDevicesThirdPartyVendorName)
 *                     .build())
 *                 .loginAttempts(userUrnietfparamsscimschemasoracleidcsextensionmfaUserLoginAttempts)
 *                 .mfaEnabledOn(userUrnietfparamsscimschemasoracleidcsextensionmfaUserMfaEnabledOn)
 *                 .mfaIgnoredApps(userUrnietfparamsscimschemasoracleidcsextensionmfaUserMfaIgnoredApps)
 *                 .mfaStatus(userUrnietfparamsscimschemasoracleidcsextensionmfaUserMfaStatus)
 *                 .preferredAuthenticationFactor(userUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredAuthenticationFactor)
 *                 .preferredAuthenticationMethod(userUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredAuthenticationMethod)
 *                 .preferredDevice(DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceArgs.builder()
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceValue)
 *                     .display(userUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredDeviceDisplay)
 *                     .build())
 *                 .preferredThirdPartyVendor(userUrnietfparamsscimschemasoracleidcsextensionmfaUserPreferredThirdPartyVendor)
 *                 .trustedUserAgents(DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentArgs.builder()
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentsValue)
 *                     .display(userUrnietfparamsscimschemasoracleidcsextensionmfaUserTrustedUserAgentsDisplay)
 *                     .build())
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionpasswordlessUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserArgs.builder()
 *                 .factorIdentifier(DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierArgs.builder()
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierValue)
 *                     .display(userUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorIdentifierDisplay)
 *                     .build())
 *                 .factorMethod(userUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorMethod)
 *                 .factorType(userUrnietfparamsscimschemasoracleidcsextensionpasswordlessUserFactorType)
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionposixUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUserArgs.builder()
 *                 .gecos(userUrnietfparamsscimschemasoracleidcsextensionposixUserGecos)
 *                 .gidNumber(userUrnietfparamsscimschemasoracleidcsextensionposixUserGidNumber)
 *                 .homeDirectory(userUrnietfparamsscimschemasoracleidcsextensionposixUserHomeDirectory)
 *                 .loginShell(userUrnietfparamsscimschemasoracleidcsextensionposixUserLoginShell)
 *                 .uidNumber(userUrnietfparamsscimschemasoracleidcsextensionposixUserUidNumber)
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserArgs.builder()
 *                 .secQuestions(DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionArgs.builder()
 *                     .answer(userUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionsAnswer)
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionsValue)
 *                     .hintText(userUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUserSecQuestionsHintText)
 *                     .build())
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionselfChangeUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUserArgs.builder()
 *                 .allowSelfChange(userUrnietfparamsscimschemasoracleidcsextensionselfChangeUserAllowSelfChange)
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs.builder()
 *                 .selfRegistrationProfile(DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs.builder()
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileValue)
 *                     .display(userUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileDisplay)
 *                     .build())
 *                 .consentGranted(userUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserConsentGranted)
 *                 .userToken(userUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserUserToken)
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionsffUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUserArgs.builder()
 *                 .sffAuthKeys(userUrnietfparamsscimschemasoracleidcsextensionsffUserSffAuthKeys)
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionsocialAccountUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserArgs.builder()
 *                 .socialAccounts(DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountArgs.builder()
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountsValue)
 *                     .display(userUrnietfparamsscimschemasoracleidcsextensionsocialAccountUserSocialAccountsDisplay)
 *                     .build())
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs.builder()
 *                 .termsOfUseConsents(DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs.builder()
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentsValue)
 *                     .build())
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionuserStateUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserArgs.builder()
 *                 .locked(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedArgs.builder()
 *                     .expired(userUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedExpired)
 *                     .lockDate(userUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedLockDate)
 *                     .on(userUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedOn)
 *                     .reason(userUrnietfparamsscimschemasoracleidcsextensionuserStateUserLockedReason)
 *                     .build())
 *                 .maxConcurrentSessions(userUrnietfparamsscimschemasoracleidcsextensionuserStateUserMaxConcurrentSessions)
 *                 .recoveryLocked(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedArgs.builder()
 *                     .lockDate(userUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedLockDate)
 *                     .on(userUrnietfparamsscimschemasoracleidcsextensionuserStateUserRecoveryLockedOn)
 *                     .build())
 *                 .build())
 *             .urnietfparamsscimschemasoracleidcsextensionuserUser(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs.builder()
 *                 .userProvider(userUrnietfparamsscimschemasoracleidcsextensionuserUserUserProvider)
 *                 .accountRecoveryRequired(userUrnietfparamsscimschemasoracleidcsextensionuserUserAccountRecoveryRequired)
 *                 .bypassNotification(userUrnietfparamsscimschemasoracleidcsextensionuserUserBypassNotification)
 *                 .creationMechanism(userUrnietfparamsscimschemasoracleidcsextensionuserUserCreationMechanism)
 *                 .delegatedAuthenticationTargetApp(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs.builder()
 *                     .type(userUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppType)
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppValue)
 *                     .display(userUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppDisplay)
 *                     .build())
 *                 .doNotShowGettingStarted(userUrnietfparamsscimschemasoracleidcsextensionuserUserDoNotShowGettingStarted)
 *                 .isAuthenticationDelegated(userUrnietfparamsscimschemasoracleidcsextensionuserUserIsAuthenticationDelegated)
 *                 .isFederatedUser(userUrnietfparamsscimschemasoracleidcsextensionuserUserIsFederatedUser)
 *                 .isGroupMembershipNormalized(userUrnietfparamsscimschemasoracleidcsextensionuserUserIsGroupMembershipNormalized)
 *                 .isGroupMembershipSyncedToUsersGroups(userUrnietfparamsscimschemasoracleidcsextensionuserUserIsGroupMembershipSyncedToUsersGroups)
 *                 .notificationEmailTemplateId(testNotificationEmailTemplate.id())
 *                 .preferredUiLandingPage(userUrnIetfParamsScimSchemasOracleIdcsExtensionUserUserPreferredUiLandingPage)
 *                 .serviceUser(userUrnIetfParamsScimSchemasOracleIdcsExtensionUserUserServiceUser)
 *                 .syncedFromApp(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs.builder()
 *                     .type(userUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppType)
 *                     .value(userUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppValue)
 *                     .display(userUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppDisplay)
 *                     .build())
 *                 .userFlowControlledByExternalClient(userUrnietfparamsscimschemasoracleidcsextensionuserUserUserFlowControlledByExternalClient)
 *                 .build())
 *             .userType(userUserType)
 *             .x509certificates(DomainsUserX509certificateArgs.builder()
 *                 .value(userX509certificatesValue)
 *                 .display(userX509certificatesDisplay)
 *                 .primary(userX509certificatesPrimary)
 *                 .type(userX509certificatesType)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Users can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Identity/domainsUser:DomainsUser test_user &#34;idcsEndpoint/{idcsEndpoint}/users/{userId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Identity/domainsUser:DomainsUser")
public class DomainsUser extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) Status of the account
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Export(name="active", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> active;

    /**
     * @return (Updatable) Status of the account
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> active() {
        return this.active;
    }
    /**
     * (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [type]
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]
     * * idcsPii: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Export(name="addresses", refs={List.class,DomainsUserAddress.class}, tree="[0,1]")
    private Output<List<DomainsUserAddress>> addresses;

    /**
     * @return (Updatable) A physical mailing address for this User, as described in (address Element). Canonical Type Values of work, home, and other. The value attribute is a complex type with the following sub-attributes.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [type]
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Address Street, deprecatedColumnHeaderName:Work Street Address, mapsTo:addresses[work].streetAddress], [columnHeaderName:Work Address Locality, deprecatedColumnHeaderName:Work City, mapsTo:addresses[work].locality], [columnHeaderName:Work Address Region, deprecatedColumnHeaderName:Work State, mapsTo:addresses[work].region], [columnHeaderName:Work Address Postal Code, deprecatedColumnHeaderName:Work Postal Code, mapsTo:addresses[work].postalCode], [columnHeaderName:Work Address Country, deprecatedColumnHeaderName:Work Country, mapsTo:addresses[work].country], [columnHeaderName:Work Address Formatted, mapsTo:addresses[work].formatted], [columnHeaderName:Home Address Formatted, mapsTo:addresses[home].formatted], [columnHeaderName:Other Address Formatted, mapsTo:addresses[other].formatted], [columnHeaderName:Home Address Street, mapsTo:addresses[home].streetAddress], [columnHeaderName:Other Address Street, mapsTo:addresses[other].streetAddress], [columnHeaderName:Home Address Locality, mapsTo:addresses[home].locality], [columnHeaderName:Other Address Locality, mapsTo:addresses[other].locality], [columnHeaderName:Home Address Region, mapsTo:addresses[home].region], [columnHeaderName:Other Address Region, mapsTo:addresses[other].region], [columnHeaderName:Home Address Country, mapsTo:addresses[home].country], [columnHeaderName:Other Address Country, mapsTo:addresses[other].country], [columnHeaderName:Home Address Postal Code, mapsTo:addresses[home].postalCode], [columnHeaderName:Other Address Postal Code, mapsTo:addresses[other].postalCode], [columnHeaderName:Primary Address Type, mapsTo:addresses[$(type)].primary]]
     * * idcsPii: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsUserAddress>> addresses() {
        return this.addresses;
    }
    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    @Export(name="attributeSets", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> attributeSets;

    /**
     * @return (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    public Output<Optional<List<String>>> attributeSets() {
        return Codegen.optional(this.attributeSets);
    }
    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    @Export(name="attributes", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> attributes;

    /**
     * @return (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    public Output<Optional<String>> attributes() {
        return Codegen.optional(this.attributes);
    }
    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    @Export(name="authorization", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> authorization;

    /**
     * @return (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public Output<Optional<String>> authorization() {
        return Codegen.optional(this.authorization);
    }
    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="compartmentOcid", refs={String.class}, tree="[0]")
    private Output<String> compartmentOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Export(name="deleteInProgress", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> deleteInProgress;

    /**
     * @return (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> deleteInProgress() {
        return this.deleteInProgress;
    }
    /**
     * (Updatable) Description of the user
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsPii: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) Description of the user
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsPii: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) The displayName of the User&#39;s manager. OPTIONAL and READ-ONLY.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) The displayName of the User&#39;s manager. OPTIONAL and READ-ONLY.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="domainOcid", refs={String.class}, tree="[0]")
    private Output<String> domainOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> domainOcid() {
        return this.domainOcid;
    }
    /**
     * (Updatable) A complex attribute representing emails
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]
     * * idcsPii: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Export(name="emails", refs={List.class,DomainsUserEmail.class}, tree="[0,1]")
    private Output<List<DomainsUserEmail>> emails;

    /**
     * @return (Updatable) A complex attribute representing emails
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Email, mapsTo:emails[work].value], [columnHeaderName:Home Email, mapsTo:emails[home].value], [columnHeaderName:Primary Email Type, mapsTo:emails[$(type)].primary], [columnHeaderName:Other Email, mapsTo:emails[other].value], [columnHeaderName:Recovery Email, mapsTo:emails[recovery].value], [columnHeaderName:Work Email Verified, mapsTo:emails[work].verified], [columnHeaderName:Home Email Verified, mapsTo:emails[home].verified], [columnHeaderName:Other Email Verified, mapsTo:emails[other].verified], [columnHeaderName:Recovery Email Verified, mapsTo:emails[recovery].verified]]
     * * idcsPii: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsUserEmail>> emails() {
        return this.emails;
    }
    /**
     * (Updatable) A list of entitlements for the User that represent a thing the User has.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Export(name="entitlements", refs={List.class,DomainsUserEntitlement.class}, tree="[0,1]")
    private Output<List<DomainsUserEntitlement>> entitlements;

    /**
     * @return (Updatable) A list of entitlements for the User that represent a thing the User has.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsUserEntitlement>> entitlements() {
        return this.entitlements;
    }
    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. READ-ONLY.
     * 
     * **Added In:** 2011192329
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="externalId", refs={String.class}, tree="[0]")
    private Output<String> externalId;

    /**
     * @return (Updatable) An identifier for the Resource as defined by the Service Consumer. READ-ONLY.
     * 
     * **Added In:** 2011192329
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> externalId() {
        return this.externalId;
    }
    /**
     * (Updatable) A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Export(name="groups", refs={List.class,DomainsUserGroup.class}, tree="[0,1]")
    private Output<List<DomainsUserGroup>> groups;

    /**
     * @return (Updatable) A list of groups that the user belongs to, either thorough direct membership, nested groups, or dynamically calculated
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsUserGroup>> groups() {
        return this.groups;
    }
    /**
     * (Updatable) The User or App who created the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     * 
     */
    @Export(name="idcsCreatedBies", refs={List.class,DomainsUserIdcsCreatedBy.class}, tree="[0,1]")
    private Output<List<DomainsUserIdcsCreatedBy>> idcsCreatedBies;

    /**
     * @return (Updatable) The User or App who created the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     * 
     */
    public Output<List<DomainsUserIdcsCreatedBy>> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    /**
     * The basic endpoint for the identity domain
     * 
     */
    @Export(name="idcsEndpoint", refs={String.class}, tree="[0]")
    private Output<String> idcsEndpoint;

    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public Output<String> idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * (Updatable) The User or App who modified the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    @Export(name="idcsLastModifiedBies", refs={List.class,DomainsUserIdcsLastModifiedBy.class}, tree="[0,1]")
    private Output<List<DomainsUserIdcsLastModifiedBy>> idcsLastModifiedBies;

    /**
     * @return (Updatable) The User or App who modified the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    public Output<List<DomainsUserIdcsLastModifiedBy>> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * (Updatable) The release number when the resource was upgraded.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="idcsLastUpgradedInRelease", refs={String.class}, tree="[0]")
    private Output<String> idcsLastUpgradedInRelease;

    /**
     * @return (Updatable) The release number when the resource was upgraded.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="idcsPreventedOperations", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> idcsPreventedOperations;

    /**
     * @return (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<List<String>> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * (Updatable) User&#39;s instant messaging addresses
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * idcsPii: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Export(name="ims", refs={List.class,DomainsUserIm.class}, tree="[0,1]")
    private Output<List<DomainsUserIm>> ims;

    /**
     * @return (Updatable) User&#39;s instant messaging addresses
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * idcsPii: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsUserIm>> ims() {
        return this.ims;
    }
    /**
     * (Updatable) Used to indicate the User&#39;s default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Locale
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="locale", refs={String.class}, tree="[0]")
    private Output<String> locale;

    /**
     * @return (Updatable) Used to indicate the User&#39;s default location for purposes of localizing items such as currency, date and time format, numerical representations, and so on.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Locale
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Locale]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> locale() {
        return this.locale;
    }
    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     * 
     */
    @Export(name="metas", refs={List.class,DomainsUserMeta.class}, tree="[0,1]")
    private Output<List<DomainsUserMeta>> metas;

    /**
     * @return (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     * 
     */
    public Output<List<DomainsUserMeta>> metas() {
        return this.metas;
    }
    /**
     * (Updatable) Name of the account assigned to the User.
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="name", refs={DomainsUserName.class}, tree="[0]")
    private Output<DomainsUserName> name;

    /**
     * @return (Updatable) Name of the account assigned to the User.
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<DomainsUserName> name() {
        return this.name;
    }
    /**
     * (Updatable) Nick name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Nick Name
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="nickName", refs={String.class}, tree="[0]")
    private Output<String> nickName;

    /**
     * @return (Updatable) Nick name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Nick Name
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Nick Name]]
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> nickName() {
        return this.nickName;
    }
    /**
     * (Updatable) The OCID of the user&#39;s support account.
     * 
     * **Added In:** 2103141444
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="ocid", refs={String.class}, tree="[0]")
    private Output<String> ocid;

    /**
     * @return (Updatable) The OCID of the user&#39;s support account.
     * 
     * **Added In:** 2103141444
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> ocid() {
        return this.ocid;
    }
    /**
     * (Updatable) Password attribute. Max length for password is controlled via Password Policy.
     * 
     * **SCIM++ Properties:**
     * * idcsCsvAttributeName: Password
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]
     * * idcsPii: true
     * * idcsSearchable: false
     * * idcsSensitive: hash
     * * multiValued: false
     * * mutability: writeOnly
     * * required: false
     * * returned: never
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return (Updatable) Password attribute. Max length for password is controlled via Password Policy.
     * 
     * **SCIM++ Properties:**
     * * idcsCsvAttributeName: Password
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Password]]
     * * idcsPii: true
     * * idcsSearchable: false
     * * idcsSensitive: hash
     * * multiValued: false
     * * mutability: writeOnly
     * * required: false
     * * returned: never
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * (Updatable) Phone numbers
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]
     * * idcsPii: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Export(name="phoneNumbers", refs={List.class,DomainsUserPhoneNumber.class}, tree="[0,1]")
    private Output<List<DomainsUserPhoneNumber>> phoneNumbers;

    /**
     * @return (Updatable) Phone numbers
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Work Phone, mapsTo:phoneNumbers[work].value], [columnHeaderName:Mobile No, mapsTo:phoneNumbers[mobile].value], [columnHeaderName:Home Phone, mapsTo:phoneNumbers[home].value], [columnHeaderName:Fax, mapsTo:phoneNumbers[fax].value], [columnHeaderName:Pager, mapsTo:phoneNumbers[pager].value], [columnHeaderName:Other Phone, mapsTo:phoneNumbers[other].value], [columnHeaderName:Recovery Phone, mapsTo:phoneNumbers[recovery].value], [columnHeaderName:Primary Phone Type, mapsTo:phoneNumbers[$(type)].primary]]
     * * idcsPii: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsUserPhoneNumber>> phoneNumbers() {
        return this.phoneNumbers;
    }
    /**
     * (Updatable) URLs of photos for the User
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * idcsPii: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Export(name="photos", refs={List.class,DomainsUserPhoto.class}, tree="[0,1]")
    private Output<List<DomainsUserPhoto>> photos;

    /**
     * @return (Updatable) URLs of photos for the User
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * idcsPii: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsUserPhoto>> photos() {
        return this.photos;
    }
    /**
     * (Updatable) User&#39;s preferred written or spoken language used for localized user interfaces
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Preferred Language
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="preferredLanguage", refs={String.class}, tree="[0]")
    private Output<String> preferredLanguage;

    /**
     * @return (Updatable) User&#39;s preferred written or spoken language used for localized user interfaces
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Preferred Language
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Preferred Language]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> preferredLanguage() {
        return this.preferredLanguage;
    }
    /**
     * (Updatable) A fully-qualified URL to a page representing the User&#39;s online profile
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Profile URL
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: reference
     * * uniqueness: none
     * 
     */
    @Export(name="profileUrl", refs={String.class}, tree="[0]")
    private Output<String> profileUrl;

    /**
     * @return (Updatable) A fully-qualified URL to a page representing the User&#39;s online profile
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Profile URL
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Profile Url]]
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: reference
     * * uniqueness: none
     * 
     */
    public Output<String> profileUrl() {
        return this.profileUrl;
    }
    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    @Export(name="resourceTypeSchemaVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resourceTypeSchemaVersion;

    /**
     * @return (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public Output<Optional<String>> resourceTypeSchemaVersion() {
        return Codegen.optional(this.resourceTypeSchemaVersion);
    }
    /**
     * (Updatable) A list of roles for the User that collectively represent who the User is; e.g., &#39;Student&#39;, &#39;Faculty&#39;.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Export(name="roles", refs={List.class,DomainsUserRole.class}, tree="[0,1]")
    private Output<List<DomainsUserRole>> roles;

    /**
     * @return (Updatable) A list of roles for the User that collectively represent who the User is; e.g., &#39;Student&#39;, &#39;Faculty&#39;.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, type]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsUserRole>> roles() {
        return this.roles;
    }
    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="schemas", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> schemas;

    /**
     * @return (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<List<String>> schemas() {
        return this.schemas;
    }
    /**
     * (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Export(name="tags", refs={List.class,DomainsUserTag.class}, tree="[0,1]")
    private Output<List<DomainsUserTag>> tags;

    /**
     * @return (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsUserTag>> tags() {
        return this.tags;
    }
    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="tenancyOcid", refs={String.class}, tree="[0]")
    private Output<String> tenancyOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> tenancyOcid() {
        return this.tenancyOcid;
    }
    /**
     * (Updatable) User&#39;s timezone
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;timezones&#34; and attrValues.value eq &#34;$(timezone)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * idcsCsvAttributeName: TimeZone
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="timezone", refs={String.class}, tree="[0]")
    private Output<String> timezone;

    /**
     * @return (Updatable) User&#39;s timezone
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;timezones&#34; and attrValues.value eq &#34;$(timezone)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * idcsCsvAttributeName: TimeZone
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Time Zone, deprecatedColumnHeaderName:TimeZone]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> timezone() {
        return this.timezone;
    }
    /**
     * (Updatable) Title
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Title
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output<String> title;

    /**
     * @return (Updatable) Title
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Title
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Title]]
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> title() {
        return this.title;
    }
    /**
     * (Updatable) Enterprise User
     * 
     */
    @Export(name="urnietfparamsscimschemasextensionenterprise20user", refs={DomainsUserUrnietfparamsscimschemasextensionenterprise20user.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasextensionenterprise20user> urnietfparamsscimschemasextensionenterprise20user;

    /**
     * @return (Updatable) Enterprise User
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasextensionenterprise20user> urnietfparamsscimschemasextensionenterprise20user() {
        return this.urnietfparamsscimschemasextensionenterprise20user;
    }
    /**
     * (Updatable) Oracle Cloud Infrastructure Tags.
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionOciTags", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTags.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTags> urnietfparamsscimschemasoracleidcsextensionOciTags;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Tags.
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionOciTags> urnietfparamsscimschemasoracleidcsextensionOciTags() {
        return this.urnietfparamsscimschemasoracleidcsextensionOciTags;
    }
    /**
     * (Updatable) This extension defines attributes to manage user&#39;s risk score.
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionadaptiveUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser> urnietfparamsscimschemasoracleidcsextensionadaptiveUser;

    /**
     * @return (Updatable) This extension defines attributes to manage user&#39;s risk score.
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser> urnietfparamsscimschemasoracleidcsextensionadaptiveUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionadaptiveUser;
    }
    /**
     * (Updatable) User&#39;s Capabilities
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser> urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser;

    /**
     * @return (Updatable) User&#39;s Capabilities
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensioncapabilitiesUser> urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser() {
        return this.urnietfparamsscimschemasoracleidcsextensioncapabilitiesUser;
    }
    /**
     * (Updatable) The database credentials user extension.
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser> urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser;

    /**
     * @return (Updatable) The database credentials user extension.
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser> urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser() {
        return this.urnietfparamsscimschemasoracleidcsextensiondbCredentialsUser;
    }
    /**
     * (Updatable) DB User extension
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensiondbUserUsers", refs={List.class,DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser.class}, tree="[0,1]")
    private Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser>> urnietfparamsscimschemasoracleidcsextensiondbUserUsers;

    /**
     * @return (Updatable) DB User extension
     * 
     */
    public Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser>> urnietfparamsscimschemasoracleidcsextensiondbUserUsers() {
        return this.urnietfparamsscimschemasoracleidcsextensiondbUserUsers;
    }
    /**
     * (Updatable) Kerberos User extension
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionkerberosUserUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser> urnietfparamsscimschemasoracleidcsextensionkerberosUserUser;

    /**
     * @return (Updatable) Kerberos User extension
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionkerberosUserUser> urnietfparamsscimschemasoracleidcsextensionkerberosUserUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionkerberosUserUser;
    }
    /**
     * (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionmfaUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser> urnietfparamsscimschemasoracleidcsextensionmfaUser;

    /**
     * @return (Updatable) This extension defines attributes used to manage Multi-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUser> urnietfparamsscimschemasoracleidcsextensionmfaUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionmfaUser;
    }
    /**
     * (Updatable) This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers", refs={List.class,DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUser.class}, tree="[0,1]")
    private Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUser>> urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers;

    /**
     * @return (Updatable) This extension defines attributes used to manage account passwords within a Service Provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
     * 
     */
    public Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordStateUser>> urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers() {
        return this.urnietfparamsscimschemasoracleidcsextensionpasswordStateUsers;
    }
    /**
     * (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionpasswordlessUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser> urnietfparamsscimschemasoracleidcsextensionpasswordlessUser;

    /**
     * @return (Updatable) This extension defines attributes used to manage Passwordless-Factor Authentication within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use MFA.
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionpasswordlessUser> urnietfparamsscimschemasoracleidcsextensionpasswordlessUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionpasswordlessUser;
    }
    /**
     * (Updatable) POSIX User extension
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionposixUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser> urnietfparamsscimschemasoracleidcsextensionposixUser;

    /**
     * @return (Updatable) POSIX User extension
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionposixUser> urnietfparamsscimschemasoracleidcsextensionposixUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionposixUser;
    }
    /**
     * (Updatable) This extension defines the attributes used to store the security questions of a user.
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser> urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser;

    /**
     * @return (Updatable) This extension defines the attributes used to store the security questions of a user.
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser> urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionsecurityQuestionsUser;
    }
    /**
     * (Updatable) Controls whether a user can update themselves or not via User related APIs
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionselfChangeUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser> urnietfparamsscimschemasoracleidcsextensionselfChangeUser;

    /**
     * @return (Updatable) Controls whether a user can update themselves or not via User related APIs
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfChangeUser> urnietfparamsscimschemasoracleidcsextensionselfChangeUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionselfChangeUser;
    }
    /**
     * (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser> urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser;

    /**
     * @return (Updatable) This extension defines attributes used to manage self registration profile linked to the user.
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUser> urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionselfRegistrationUser;
    }
    /**
     * (Updatable) SFF Auth Keys User extension
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionsffUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser> urnietfparamsscimschemasoracleidcsextensionsffUser;

    /**
     * @return (Updatable) SFF Auth Keys User extension
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionsffUser> urnietfparamsscimschemasoracleidcsextensionsffUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionsffUser;
    }
    /**
     * (Updatable) Social User extension
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionsocialAccountUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser> urnietfparamsscimschemasoracleidcsextensionsocialAccountUser;

    /**
     * @return (Updatable) Social User extension
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionsocialAccountUser> urnietfparamsscimschemasoracleidcsextensionsocialAccountUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionsocialAccountUser;
    }
    /**
     * (Updatable) Terms Of Use extension
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser> urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser;

    /**
     * @return (Updatable) Terms Of Use extension
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUser> urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser() {
        return this.urnietfparamsscimschemasoracleidcsextensiontermsOfUseUser;
    }
    /**
     * (Updatable) User&#39;s credentials
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers", refs={List.class,DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser.class}, tree="[0,1]")
    private Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser>> urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers;

    /**
     * @return (Updatable) User&#39;s credentials
     * 
     */
    public Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser>> urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers() {
        return this.urnietfparamsscimschemasoracleidcsextensionuserCredentialsUsers;
    }
    /**
     * (Updatable) This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionuserStateUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser> urnietfparamsscimschemasoracleidcsextensionuserStateUser;

    /**
     * @return (Updatable) This extension defines the attributes used to manage account passwords within a service provider. The extension is typically applied to a User resource, but MAY be applied to other resources that use passwords.
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserStateUser> urnietfparamsscimschemasoracleidcsextensionuserStateUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionuserStateUser;
    }
    /**
     * (Updatable) Oracle Identity Cloud Service User
     * 
     */
    @Export(name="urnietfparamsscimschemasoracleidcsextensionuserUser", refs={DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser.class}, tree="[0]")
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser> urnietfparamsscimschemasoracleidcsextensionuserUser;

    /**
     * @return (Updatable) Oracle Identity Cloud Service User
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser> urnietfparamsscimschemasoracleidcsextensionuserUser() {
        return this.urnietfparamsscimschemasoracleidcsextensionuserUser;
    }
    /**
     * (Updatable) User name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: User ID
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: global
     * 
     */
    @Export(name="userName", refs={String.class}, tree="[0]")
    private Output<String> userName;

    /**
     * @return (Updatable) User name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: User ID
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:User Name, deprecatedColumnHeaderName:User ID]]
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: global
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }
    /**
     * (Updatable) Used to identify the organization-to-user relationship
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: User Type
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Export(name="userType", refs={String.class}, tree="[0]")
    private Output<String> userType;

    /**
     * @return (Updatable) Used to identify the organization-to-user relationship
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: User Type
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:User Type]]
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> userType() {
        return this.userType;
    }
    /**
     * (Updatable) A list of certificates issued to the User.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Export(name="x509certificates", refs={List.class,DomainsUserX509certificate.class}, tree="[0,1]")
    private Output<List<DomainsUserX509certificate>> x509certificates;

    /**
     * @return (Updatable) A list of certificates issued to the User.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<List<DomainsUserX509certificate>> x509certificates() {
        return this.x509certificates;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DomainsUser(String name) {
        this(name, DomainsUserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DomainsUser(String name, DomainsUserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DomainsUser(String name, DomainsUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Identity/domainsUser:DomainsUser", name, args == null ? DomainsUserArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DomainsUser(String name, Output<String> id, @Nullable DomainsUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Identity/domainsUser:DomainsUser", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DomainsUser get(String name, Output<String> id, @Nullable DomainsUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DomainsUser(name, id, state, options);
    }
}
