// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsAppCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsAppCertificateArgs Empty = new DomainsAppCertificateArgs();

    /**
     * (Updatable) Certificate alias
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="certAlias", required=true)
    private Output<String> certAlias;

    /**
     * @return (Updatable) Certificate alias
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> certAlias() {
        return this.certAlias;
    }

    /**
     * (Updatable) Certificate kid
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="kid")
    private @Nullable Output<String> kid;

    /**
     * @return (Updatable) Certificate kid
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> kid() {
        return Optional.ofNullable(this.kid);
    }

    /**
     * (Updatable) sha1Thumbprint
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="sha1thumbprint")
    private @Nullable Output<String> sha1thumbprint;

    /**
     * @return (Updatable) sha1Thumbprint
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> sha1thumbprint() {
        return Optional.ofNullable(this.sha1thumbprint);
    }

    /**
     * (Updatable) Base-64-encoded certificate.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: binary
     * * uniqueness: none
     * 
     */
    @Import(name="x509base64certificate")
    private @Nullable Output<String> x509base64certificate;

    /**
     * @return (Updatable) Base-64-encoded certificate.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: binary
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> x509base64certificate() {
        return Optional.ofNullable(this.x509base64certificate);
    }

    /**
     * (Updatable) Certificate x5t
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="x5t")
    private @Nullable Output<String> x5t;

    /**
     * @return (Updatable) Certificate x5t
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> x5t() {
        return Optional.ofNullable(this.x5t);
    }

    private DomainsAppCertificateArgs() {}

    private DomainsAppCertificateArgs(DomainsAppCertificateArgs $) {
        this.certAlias = $.certAlias;
        this.kid = $.kid;
        this.sha1thumbprint = $.sha1thumbprint;
        this.x509base64certificate = $.x509base64certificate;
        this.x5t = $.x5t;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsAppCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsAppCertificateArgs $;

        public Builder() {
            $ = new DomainsAppCertificateArgs();
        }

        public Builder(DomainsAppCertificateArgs defaults) {
            $ = new DomainsAppCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certAlias (Updatable) Certificate alias
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder certAlias(Output<String> certAlias) {
            $.certAlias = certAlias;
            return this;
        }

        /**
         * @param certAlias (Updatable) Certificate alias
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder certAlias(String certAlias) {
            return certAlias(Output.of(certAlias));
        }

        /**
         * @param kid (Updatable) Certificate kid
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder kid(@Nullable Output<String> kid) {
            $.kid = kid;
            return this;
        }

        /**
         * @param kid (Updatable) Certificate kid
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder kid(String kid) {
            return kid(Output.of(kid));
        }

        /**
         * @param sha1thumbprint (Updatable) sha1Thumbprint
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder sha1thumbprint(@Nullable Output<String> sha1thumbprint) {
            $.sha1thumbprint = sha1thumbprint;
            return this;
        }

        /**
         * @param sha1thumbprint (Updatable) sha1Thumbprint
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder sha1thumbprint(String sha1thumbprint) {
            return sha1thumbprint(Output.of(sha1thumbprint));
        }

        /**
         * @param x509base64certificate (Updatable) Base-64-encoded certificate.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: binary
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder x509base64certificate(@Nullable Output<String> x509base64certificate) {
            $.x509base64certificate = x509base64certificate;
            return this;
        }

        /**
         * @param x509base64certificate (Updatable) Base-64-encoded certificate.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: binary
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder x509base64certificate(String x509base64certificate) {
            return x509base64certificate(Output.of(x509base64certificate));
        }

        /**
         * @param x5t (Updatable) Certificate x5t
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder x5t(@Nullable Output<String> x5t) {
            $.x5t = x5t;
            return this;
        }

        /**
         * @param x5t (Updatable) Certificate x5t
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder x5t(String x5t) {
            return x5t(Output.of(x5t));
        }

        public DomainsAppCertificateArgs build() {
            $.certAlias = Objects.requireNonNull($.certAlias, "expected parameter 'certAlias' to be non-null");
            return $;
        }
    }

}
