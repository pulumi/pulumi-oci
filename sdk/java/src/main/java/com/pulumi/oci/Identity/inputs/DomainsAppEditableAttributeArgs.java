// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DomainsAppEditableAttributeArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsAppEditableAttributeArgs Empty = new DomainsAppEditableAttributeArgs();

    /**
     * (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
     * 
     * **Deprecated Since: 18.2.2**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * idcsValuePersistedInOtherAttribute: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
     * 
     * **Deprecated Since: 18.2.2**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * idcsValuePersistedInOtherAttribute: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private DomainsAppEditableAttributeArgs() {}

    private DomainsAppEditableAttributeArgs(DomainsAppEditableAttributeArgs $) {
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsAppEditableAttributeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsAppEditableAttributeArgs $;

        public Builder() {
            $ = new DomainsAppEditableAttributeArgs();
        }

        public Builder(DomainsAppEditableAttributeArgs defaults) {
            $ = new DomainsAppEditableAttributeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
         * 
         * **Deprecated Since: 18.2.2**
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * idcsValuePersistedInOtherAttribute: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
         * 
         * **Deprecated Since: 18.2.2**
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * idcsValuePersistedInOtherAttribute: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public DomainsAppEditableAttributeArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
