// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs Empty = new DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs();

    /**
     * (Updatable) An application formUrl that FormFill will match against any formUrl that a User enters in trying to access the target-service which this App represents.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="formUrl", required=true)
    private Output<String> formUrl;

    /**
     * @return (Updatable) An application formUrl that FormFill will match against any formUrl that a User enters in trying to access the target-service which this App represents.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> formUrl() {
        return this.formUrl;
    }

    /**
     * (Updatable) Indicates how to interpret the value of &#39;formUrl&#39; when matching against a user-specified formUrl.  The system currently supports only &#39;Exact&#39;, which indicates that the value of &#39;formUrl&#39; should be treated as a literal value.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="formUrlMatchType")
    private @Nullable Output<String> formUrlMatchType;

    /**
     * @return (Updatable) Indicates how to interpret the value of &#39;formUrl&#39; when matching against a user-specified formUrl.  The system currently supports only &#39;Exact&#39;, which indicates that the value of &#39;formUrl&#39; should be treated as a literal value.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> formUrlMatchType() {
        return Optional.ofNullable(this.formUrlMatchType);
    }

    private DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs() {}

    private DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs(DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs $) {
        this.formUrl = $.formUrl;
        this.formUrlMatchType = $.formUrlMatchType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs $;

        public Builder() {
            $ = new DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs();
        }

        public Builder(DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs defaults) {
            $ = new DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param formUrl (Updatable) An application formUrl that FormFill will match against any formUrl that a User enters in trying to access the target-service which this App represents.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder formUrl(Output<String> formUrl) {
            $.formUrl = formUrl;
            return this;
        }

        /**
         * @param formUrl (Updatable) An application formUrl that FormFill will match against any formUrl that a User enters in trying to access the target-service which this App represents.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder formUrl(String formUrl) {
            return formUrl(Output.of(formUrl));
        }

        /**
         * @param formUrlMatchType (Updatable) Indicates how to interpret the value of &#39;formUrl&#39; when matching against a user-specified formUrl.  The system currently supports only &#39;Exact&#39;, which indicates that the value of &#39;formUrl&#39; should be treated as a literal value.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder formUrlMatchType(@Nullable Output<String> formUrlMatchType) {
            $.formUrlMatchType = formUrlMatchType;
            return this;
        }

        /**
         * @param formUrlMatchType (Updatable) Indicates how to interpret the value of &#39;formUrl&#39; when matching against a user-specified formUrl.  The system currently supports only &#39;Exact&#39;, which indicates that the value of &#39;formUrl&#39; should be treated as a literal value.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder formUrlMatchType(String formUrlMatchType) {
            return formUrlMatchType(Output.of(formUrlMatchType));
        }

        public DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppTemplateAppTemplateFormFillUrlMatchArgs build() {
            $.formUrl = Objects.requireNonNull($.formUrl, "expected parameter 'formUrl' to be non-null");
            return $;
        }
    }

}
