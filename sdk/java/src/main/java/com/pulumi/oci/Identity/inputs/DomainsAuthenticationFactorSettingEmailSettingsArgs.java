// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsAuthenticationFactorSettingEmailSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsAuthenticationFactorSettingEmailSettingsArgs Empty = new DomainsAuthenticationFactorSettingEmailSettingsArgs();

    /**
     * (Updatable) Custom redirect Url which will be used in email link
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="emailLinkCustomUrl")
    private @Nullable Output<String> emailLinkCustomUrl;

    /**
     * @return (Updatable) Custom redirect Url which will be used in email link
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> emailLinkCustomUrl() {
        return Optional.ofNullable(this.emailLinkCustomUrl);
    }

    /**
     * (Updatable) Specifies whether Email link is enabled or not.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="emailLinkEnabled", required=true)
    private Output<Boolean> emailLinkEnabled;

    /**
     * @return (Updatable) Specifies whether Email link is enabled or not.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> emailLinkEnabled() {
        return this.emailLinkEnabled;
    }

    private DomainsAuthenticationFactorSettingEmailSettingsArgs() {}

    private DomainsAuthenticationFactorSettingEmailSettingsArgs(DomainsAuthenticationFactorSettingEmailSettingsArgs $) {
        this.emailLinkCustomUrl = $.emailLinkCustomUrl;
        this.emailLinkEnabled = $.emailLinkEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsAuthenticationFactorSettingEmailSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsAuthenticationFactorSettingEmailSettingsArgs $;

        public Builder() {
            $ = new DomainsAuthenticationFactorSettingEmailSettingsArgs();
        }

        public Builder(DomainsAuthenticationFactorSettingEmailSettingsArgs defaults) {
            $ = new DomainsAuthenticationFactorSettingEmailSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param emailLinkCustomUrl (Updatable) Custom redirect Url which will be used in email link
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailLinkCustomUrl(@Nullable Output<String> emailLinkCustomUrl) {
            $.emailLinkCustomUrl = emailLinkCustomUrl;
            return this;
        }

        /**
         * @param emailLinkCustomUrl (Updatable) Custom redirect Url which will be used in email link
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailLinkCustomUrl(String emailLinkCustomUrl) {
            return emailLinkCustomUrl(Output.of(emailLinkCustomUrl));
        }

        /**
         * @param emailLinkEnabled (Updatable) Specifies whether Email link is enabled or not.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailLinkEnabled(Output<Boolean> emailLinkEnabled) {
            $.emailLinkEnabled = emailLinkEnabled;
            return this;
        }

        /**
         * @param emailLinkEnabled (Updatable) Specifies whether Email link is enabled or not.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailLinkEnabled(Boolean emailLinkEnabled) {
            return emailLinkEnabled(Output.of(emailLinkEnabled));
        }

        public DomainsAuthenticationFactorSettingEmailSettingsArgs build() {
            if ($.emailLinkEnabled == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingEmailSettingsArgs", "emailLinkEnabled");
            }
            return $;
        }
    }

}
