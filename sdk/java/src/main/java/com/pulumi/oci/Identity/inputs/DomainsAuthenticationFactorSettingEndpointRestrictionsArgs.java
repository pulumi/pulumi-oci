// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;


public final class DomainsAuthenticationFactorSettingEndpointRestrictionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsAuthenticationFactorSettingEndpointRestrictionsArgs Empty = new DomainsAuthenticationFactorSettingEndpointRestrictionsArgs();

    /**
     * (Updatable) Maximum number of days until an endpoint can be trusted
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 180
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="maxEndpointTrustDurationInDays", required=true)
    private Output<Integer> maxEndpointTrustDurationInDays;

    /**
     * @return (Updatable) Maximum number of days until an endpoint can be trusted
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 180
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> maxEndpointTrustDurationInDays() {
        return this.maxEndpointTrustDurationInDays;
    }

    /**
     * (Updatable) Maximum number of enrolled devices per user
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="maxEnrolledDevices", required=true)
    private Output<Integer> maxEnrolledDevices;

    /**
     * @return (Updatable) Maximum number of enrolled devices per user
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> maxEnrolledDevices() {
        return this.maxEnrolledDevices;
    }

    /**
     * (Updatable) An integer that represents the maximum number of failed MFA logins before an account is locked
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 5
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="maxIncorrectAttempts", required=true)
    private Output<Integer> maxIncorrectAttempts;

    /**
     * @return (Updatable) An integer that represents the maximum number of failed MFA logins before an account is locked
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 5
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> maxIncorrectAttempts() {
        return this.maxIncorrectAttempts;
    }

    /**
     * (Updatable) Max number of trusted endpoints per user
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="maxTrustedEndpoints", required=true)
    private Output<Integer> maxTrustedEndpoints;

    /**
     * @return (Updatable) Max number of trusted endpoints per user
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> maxTrustedEndpoints() {
        return this.maxTrustedEndpoints;
    }

    /**
     * (Updatable) Specify if trusted endpoints are enabled
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="trustedEndpointsEnabled", required=true)
    private Output<Boolean> trustedEndpointsEnabled;

    /**
     * @return (Updatable) Specify if trusted endpoints are enabled
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> trustedEndpointsEnabled() {
        return this.trustedEndpointsEnabled;
    }

    private DomainsAuthenticationFactorSettingEndpointRestrictionsArgs() {}

    private DomainsAuthenticationFactorSettingEndpointRestrictionsArgs(DomainsAuthenticationFactorSettingEndpointRestrictionsArgs $) {
        this.maxEndpointTrustDurationInDays = $.maxEndpointTrustDurationInDays;
        this.maxEnrolledDevices = $.maxEnrolledDevices;
        this.maxIncorrectAttempts = $.maxIncorrectAttempts;
        this.maxTrustedEndpoints = $.maxTrustedEndpoints;
        this.trustedEndpointsEnabled = $.trustedEndpointsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsAuthenticationFactorSettingEndpointRestrictionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsAuthenticationFactorSettingEndpointRestrictionsArgs $;

        public Builder() {
            $ = new DomainsAuthenticationFactorSettingEndpointRestrictionsArgs();
        }

        public Builder(DomainsAuthenticationFactorSettingEndpointRestrictionsArgs defaults) {
            $ = new DomainsAuthenticationFactorSettingEndpointRestrictionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxEndpointTrustDurationInDays (Updatable) Maximum number of days until an endpoint can be trusted
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 180
         * * idcsMinValue: 1
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxEndpointTrustDurationInDays(Output<Integer> maxEndpointTrustDurationInDays) {
            $.maxEndpointTrustDurationInDays = maxEndpointTrustDurationInDays;
            return this;
        }

        /**
         * @param maxEndpointTrustDurationInDays (Updatable) Maximum number of days until an endpoint can be trusted
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 180
         * * idcsMinValue: 1
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxEndpointTrustDurationInDays(Integer maxEndpointTrustDurationInDays) {
            return maxEndpointTrustDurationInDays(Output.of(maxEndpointTrustDurationInDays));
        }

        /**
         * @param maxEnrolledDevices (Updatable) Maximum number of enrolled devices per user
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 20
         * * idcsMinValue: 1
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxEnrolledDevices(Output<Integer> maxEnrolledDevices) {
            $.maxEnrolledDevices = maxEnrolledDevices;
            return this;
        }

        /**
         * @param maxEnrolledDevices (Updatable) Maximum number of enrolled devices per user
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 20
         * * idcsMinValue: 1
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxEnrolledDevices(Integer maxEnrolledDevices) {
            return maxEnrolledDevices(Output.of(maxEnrolledDevices));
        }

        /**
         * @param maxIncorrectAttempts (Updatable) An integer that represents the maximum number of failed MFA logins before an account is locked
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 20
         * * idcsMinValue: 5
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxIncorrectAttempts(Output<Integer> maxIncorrectAttempts) {
            $.maxIncorrectAttempts = maxIncorrectAttempts;
            return this;
        }

        /**
         * @param maxIncorrectAttempts (Updatable) An integer that represents the maximum number of failed MFA logins before an account is locked
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 20
         * * idcsMinValue: 5
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxIncorrectAttempts(Integer maxIncorrectAttempts) {
            return maxIncorrectAttempts(Output.of(maxIncorrectAttempts));
        }

        /**
         * @param maxTrustedEndpoints (Updatable) Max number of trusted endpoints per user
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 20
         * * idcsMinValue: 1
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxTrustedEndpoints(Output<Integer> maxTrustedEndpoints) {
            $.maxTrustedEndpoints = maxTrustedEndpoints;
            return this;
        }

        /**
         * @param maxTrustedEndpoints (Updatable) Max number of trusted endpoints per user
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 20
         * * idcsMinValue: 1
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder maxTrustedEndpoints(Integer maxTrustedEndpoints) {
            return maxTrustedEndpoints(Output.of(maxTrustedEndpoints));
        }

        /**
         * @param trustedEndpointsEnabled (Updatable) Specify if trusted endpoints are enabled
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder trustedEndpointsEnabled(Output<Boolean> trustedEndpointsEnabled) {
            $.trustedEndpointsEnabled = trustedEndpointsEnabled;
            return this;
        }

        /**
         * @param trustedEndpointsEnabled (Updatable) Specify if trusted endpoints are enabled
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder trustedEndpointsEnabled(Boolean trustedEndpointsEnabled) {
            return trustedEndpointsEnabled(Output.of(trustedEndpointsEnabled));
        }

        public DomainsAuthenticationFactorSettingEndpointRestrictionsArgs build() {
            $.maxEndpointTrustDurationInDays = Objects.requireNonNull($.maxEndpointTrustDurationInDays, "expected parameter 'maxEndpointTrustDurationInDays' to be non-null");
            $.maxEnrolledDevices = Objects.requireNonNull($.maxEnrolledDevices, "expected parameter 'maxEnrolledDevices' to be non-null");
            $.maxIncorrectAttempts = Objects.requireNonNull($.maxIncorrectAttempts, "expected parameter 'maxIncorrectAttempts' to be non-null");
            $.maxTrustedEndpoints = Objects.requireNonNull($.maxTrustedEndpoints, "expected parameter 'maxTrustedEndpoints' to be non-null");
            $.trustedEndpointsEnabled = Objects.requireNonNull($.trustedEndpointsEnabled, "expected parameter 'trustedEndpointsEnabled' to be non-null");
            return $;
        }
    }

}
