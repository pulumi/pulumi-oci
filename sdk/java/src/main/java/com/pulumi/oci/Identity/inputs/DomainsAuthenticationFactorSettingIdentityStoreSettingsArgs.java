// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs Empty = new DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs();

    /**
     * (Updatable) If true, indicates that Multi-Factor Authentication should use the mobile number in the identity store
     * 
     */
    @Import(name="mobileNumberEnabled")
    private @Nullable Output<Boolean> mobileNumberEnabled;

    /**
     * @return (Updatable) If true, indicates that Multi-Factor Authentication should use the mobile number in the identity store
     * 
     */
    public Optional<Output<Boolean>> mobileNumberEnabled() {
        return Optional.ofNullable(this.mobileNumberEnabled);
    }

    /**
     * (Updatable) If true, indicates that the user can update the mobile number in the user&#39;s Multi-Factor Authentication profile
     * 
     */
    @Import(name="mobileNumberUpdateEnabled")
    private @Nullable Output<Boolean> mobileNumberUpdateEnabled;

    /**
     * @return (Updatable) If true, indicates that the user can update the mobile number in the user&#39;s Multi-Factor Authentication profile
     * 
     */
    public Optional<Output<Boolean>> mobileNumberUpdateEnabled() {
        return Optional.ofNullable(this.mobileNumberUpdateEnabled);
    }

    private DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs() {}

    private DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs(DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs $) {
        this.mobileNumberEnabled = $.mobileNumberEnabled;
        this.mobileNumberUpdateEnabled = $.mobileNumberUpdateEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs $;

        public Builder() {
            $ = new DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs();
        }

        public Builder(DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs defaults) {
            $ = new DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mobileNumberEnabled (Updatable) If true, indicates that Multi-Factor Authentication should use the mobile number in the identity store
         * 
         * @return builder
         * 
         */
        public Builder mobileNumberEnabled(@Nullable Output<Boolean> mobileNumberEnabled) {
            $.mobileNumberEnabled = mobileNumberEnabled;
            return this;
        }

        /**
         * @param mobileNumberEnabled (Updatable) If true, indicates that Multi-Factor Authentication should use the mobile number in the identity store
         * 
         * @return builder
         * 
         */
        public Builder mobileNumberEnabled(Boolean mobileNumberEnabled) {
            return mobileNumberEnabled(Output.of(mobileNumberEnabled));
        }

        /**
         * @param mobileNumberUpdateEnabled (Updatable) If true, indicates that the user can update the mobile number in the user&#39;s Multi-Factor Authentication profile
         * 
         * @return builder
         * 
         */
        public Builder mobileNumberUpdateEnabled(@Nullable Output<Boolean> mobileNumberUpdateEnabled) {
            $.mobileNumberUpdateEnabled = mobileNumberUpdateEnabled;
            return this;
        }

        /**
         * @param mobileNumberUpdateEnabled (Updatable) If true, indicates that the user can update the mobile number in the user&#39;s Multi-Factor Authentication profile
         * 
         * @return builder
         * 
         */
        public Builder mobileNumberUpdateEnabled(Boolean mobileNumberUpdateEnabled) {
            return mobileNumberUpdateEnabled(Output.of(mobileNumberUpdateEnabled));
        }

        public DomainsAuthenticationFactorSettingIdentityStoreSettingsArgs build() {
            return $;
        }
    }

}
