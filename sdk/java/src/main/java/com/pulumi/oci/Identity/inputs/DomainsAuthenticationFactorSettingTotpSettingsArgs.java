// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class DomainsAuthenticationFactorSettingTotpSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsAuthenticationFactorSettingTotpSettingsArgs Empty = new DomainsAuthenticationFactorSettingTotpSettingsArgs();

    /**
     * (Updatable) The period of time (in minutes) that a one-time passcode remains valid that the system sends by email.
     * 
     * **Added In:** 18.1.2
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 60
     * * idcsMinValue: 2
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="emailOtpValidityDurationInMins", required=true)
    private Output<Integer> emailOtpValidityDurationInMins;

    /**
     * @return (Updatable) The period of time (in minutes) that a one-time passcode remains valid that the system sends by email.
     * 
     * **Added In:** 18.1.2
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 60
     * * idcsMinValue: 2
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> emailOtpValidityDurationInMins() {
        return this.emailOtpValidityDurationInMins;
    }

    /**
     * (Updatable) Exact length of the email one-time passcode.
     * 
     * **Added In:** 18.1.2
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 10
     * * idcsMinValue: 4
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="emailPasscodeLength", required=true)
    private Output<Integer> emailPasscodeLength;

    /**
     * @return (Updatable) Exact length of the email one-time passcode.
     * 
     * **Added In:** 18.1.2
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 10
     * * idcsMinValue: 4
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> emailPasscodeLength() {
        return this.emailPasscodeLength;
    }

    /**
     * (Updatable) The hashing algorithm to be used to calculate a One-Time Passcode. By default, the system uses SHA1.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="hashingAlgorithm", required=true)
    private Output<String> hashingAlgorithm;

    /**
     * @return (Updatable) The hashing algorithm to be used to calculate a One-Time Passcode. By default, the system uses SHA1.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> hashingAlgorithm() {
        return this.hashingAlgorithm;
    }

    /**
     * (Updatable) The period of time (in seconds) that a JSON Web Token (JWT) is valid
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 99999
     * * idcsMinValue: 30
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="jwtValidityDurationInSecs", required=true)
    private Output<Integer> jwtValidityDurationInSecs;

    /**
     * @return (Updatable) The period of time (in seconds) that a JSON Web Token (JWT) is valid
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 99999
     * * idcsMinValue: 30
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> jwtValidityDurationInSecs() {
        return this.jwtValidityDurationInSecs;
    }

    /**
     * (Updatable) The duration of time (in days) after which the shared secret has to be refreshed
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 999
     * * idcsMinValue: 30
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="keyRefreshIntervalInDays", required=true)
    private Output<Integer> keyRefreshIntervalInDays;

    /**
     * @return (Updatable) The duration of time (in days) after which the shared secret has to be refreshed
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 999
     * * idcsMinValue: 30
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> keyRefreshIntervalInDays() {
        return this.keyRefreshIntervalInDays;
    }

    /**
     * (Updatable) Exact length of the One-Time Passcode that the system should generate
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 10
     * * idcsMinValue: 4
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="passcodeLength", required=true)
    private Output<Integer> passcodeLength;

    /**
     * @return (Updatable) Exact length of the One-Time Passcode that the system should generate
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 10
     * * idcsMinValue: 4
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> passcodeLength() {
        return this.passcodeLength;
    }

    /**
     * (Updatable) The period of time (in minutes) for which a One-Time Passcode that the system sends by Short Message Service (SMS) or by voice remains valid
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 60
     * * idcsMinValue: 2
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="smsOtpValidityDurationInMins", required=true)
    private Output<Integer> smsOtpValidityDurationInMins;

    /**
     * @return (Updatable) The period of time (in minutes) for which a One-Time Passcode that the system sends by Short Message Service (SMS) or by voice remains valid
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 60
     * * idcsMinValue: 2
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> smsOtpValidityDurationInMins() {
        return this.smsOtpValidityDurationInMins;
    }

    /**
     * (Updatable) Exact length of the Short Message Service (SMS) One-Time Passcode
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 10
     * * idcsMinValue: 4
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="smsPasscodeLength", required=true)
    private Output<Integer> smsPasscodeLength;

    /**
     * @return (Updatable) Exact length of the Short Message Service (SMS) One-Time Passcode
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 10
     * * idcsMinValue: 4
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> smsPasscodeLength() {
        return this.smsPasscodeLength;
    }

    /**
     * (Updatable) Time (in secs) to be used as the time step
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 300
     * * idcsMinValue: 30
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="timeStepInSecs", required=true)
    private Output<Integer> timeStepInSecs;

    /**
     * @return (Updatable) Time (in secs) to be used as the time step
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 300
     * * idcsMinValue: 30
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> timeStepInSecs() {
        return this.timeStepInSecs;
    }

    /**
     * (Updatable) The tolerance/step-size that the system should use when validating a One-Time Passcode
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 3
     * * idcsMinValue: 2
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="timeStepTolerance", required=true)
    private Output<Integer> timeStepTolerance;

    /**
     * @return (Updatable) The tolerance/step-size that the system should use when validating a One-Time Passcode
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 3
     * * idcsMinValue: 2
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Output<Integer> timeStepTolerance() {
        return this.timeStepTolerance;
    }

    private DomainsAuthenticationFactorSettingTotpSettingsArgs() {}

    private DomainsAuthenticationFactorSettingTotpSettingsArgs(DomainsAuthenticationFactorSettingTotpSettingsArgs $) {
        this.emailOtpValidityDurationInMins = $.emailOtpValidityDurationInMins;
        this.emailPasscodeLength = $.emailPasscodeLength;
        this.hashingAlgorithm = $.hashingAlgorithm;
        this.jwtValidityDurationInSecs = $.jwtValidityDurationInSecs;
        this.keyRefreshIntervalInDays = $.keyRefreshIntervalInDays;
        this.passcodeLength = $.passcodeLength;
        this.smsOtpValidityDurationInMins = $.smsOtpValidityDurationInMins;
        this.smsPasscodeLength = $.smsPasscodeLength;
        this.timeStepInSecs = $.timeStepInSecs;
        this.timeStepTolerance = $.timeStepTolerance;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsAuthenticationFactorSettingTotpSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsAuthenticationFactorSettingTotpSettingsArgs $;

        public Builder() {
            $ = new DomainsAuthenticationFactorSettingTotpSettingsArgs();
        }

        public Builder(DomainsAuthenticationFactorSettingTotpSettingsArgs defaults) {
            $ = new DomainsAuthenticationFactorSettingTotpSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param emailOtpValidityDurationInMins (Updatable) The period of time (in minutes) that a one-time passcode remains valid that the system sends by email.
         * 
         * **Added In:** 18.1.2
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 60
         * * idcsMinValue: 2
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailOtpValidityDurationInMins(Output<Integer> emailOtpValidityDurationInMins) {
            $.emailOtpValidityDurationInMins = emailOtpValidityDurationInMins;
            return this;
        }

        /**
         * @param emailOtpValidityDurationInMins (Updatable) The period of time (in minutes) that a one-time passcode remains valid that the system sends by email.
         * 
         * **Added In:** 18.1.2
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 60
         * * idcsMinValue: 2
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailOtpValidityDurationInMins(Integer emailOtpValidityDurationInMins) {
            return emailOtpValidityDurationInMins(Output.of(emailOtpValidityDurationInMins));
        }

        /**
         * @param emailPasscodeLength (Updatable) Exact length of the email one-time passcode.
         * 
         * **Added In:** 18.1.2
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 10
         * * idcsMinValue: 4
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailPasscodeLength(Output<Integer> emailPasscodeLength) {
            $.emailPasscodeLength = emailPasscodeLength;
            return this;
        }

        /**
         * @param emailPasscodeLength (Updatable) Exact length of the email one-time passcode.
         * 
         * **Added In:** 18.1.2
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 10
         * * idcsMinValue: 4
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder emailPasscodeLength(Integer emailPasscodeLength) {
            return emailPasscodeLength(Output.of(emailPasscodeLength));
        }

        /**
         * @param hashingAlgorithm (Updatable) The hashing algorithm to be used to calculate a One-Time Passcode. By default, the system uses SHA1.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder hashingAlgorithm(Output<String> hashingAlgorithm) {
            $.hashingAlgorithm = hashingAlgorithm;
            return this;
        }

        /**
         * @param hashingAlgorithm (Updatable) The hashing algorithm to be used to calculate a One-Time Passcode. By default, the system uses SHA1.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder hashingAlgorithm(String hashingAlgorithm) {
            return hashingAlgorithm(Output.of(hashingAlgorithm));
        }

        /**
         * @param jwtValidityDurationInSecs (Updatable) The period of time (in seconds) that a JSON Web Token (JWT) is valid
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 99999
         * * idcsMinValue: 30
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jwtValidityDurationInSecs(Output<Integer> jwtValidityDurationInSecs) {
            $.jwtValidityDurationInSecs = jwtValidityDurationInSecs;
            return this;
        }

        /**
         * @param jwtValidityDurationInSecs (Updatable) The period of time (in seconds) that a JSON Web Token (JWT) is valid
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 99999
         * * idcsMinValue: 30
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jwtValidityDurationInSecs(Integer jwtValidityDurationInSecs) {
            return jwtValidityDurationInSecs(Output.of(jwtValidityDurationInSecs));
        }

        /**
         * @param keyRefreshIntervalInDays (Updatable) The duration of time (in days) after which the shared secret has to be refreshed
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 999
         * * idcsMinValue: 30
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder keyRefreshIntervalInDays(Output<Integer> keyRefreshIntervalInDays) {
            $.keyRefreshIntervalInDays = keyRefreshIntervalInDays;
            return this;
        }

        /**
         * @param keyRefreshIntervalInDays (Updatable) The duration of time (in days) after which the shared secret has to be refreshed
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 999
         * * idcsMinValue: 30
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder keyRefreshIntervalInDays(Integer keyRefreshIntervalInDays) {
            return keyRefreshIntervalInDays(Output.of(keyRefreshIntervalInDays));
        }

        /**
         * @param passcodeLength (Updatable) Exact length of the One-Time Passcode that the system should generate
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 10
         * * idcsMinValue: 4
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder passcodeLength(Output<Integer> passcodeLength) {
            $.passcodeLength = passcodeLength;
            return this;
        }

        /**
         * @param passcodeLength (Updatable) Exact length of the One-Time Passcode that the system should generate
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 10
         * * idcsMinValue: 4
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder passcodeLength(Integer passcodeLength) {
            return passcodeLength(Output.of(passcodeLength));
        }

        /**
         * @param smsOtpValidityDurationInMins (Updatable) The period of time (in minutes) for which a One-Time Passcode that the system sends by Short Message Service (SMS) or by voice remains valid
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 60
         * * idcsMinValue: 2
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder smsOtpValidityDurationInMins(Output<Integer> smsOtpValidityDurationInMins) {
            $.smsOtpValidityDurationInMins = smsOtpValidityDurationInMins;
            return this;
        }

        /**
         * @param smsOtpValidityDurationInMins (Updatable) The period of time (in minutes) for which a One-Time Passcode that the system sends by Short Message Service (SMS) or by voice remains valid
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 60
         * * idcsMinValue: 2
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder smsOtpValidityDurationInMins(Integer smsOtpValidityDurationInMins) {
            return smsOtpValidityDurationInMins(Output.of(smsOtpValidityDurationInMins));
        }

        /**
         * @param smsPasscodeLength (Updatable) Exact length of the Short Message Service (SMS) One-Time Passcode
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 10
         * * idcsMinValue: 4
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder smsPasscodeLength(Output<Integer> smsPasscodeLength) {
            $.smsPasscodeLength = smsPasscodeLength;
            return this;
        }

        /**
         * @param smsPasscodeLength (Updatable) Exact length of the Short Message Service (SMS) One-Time Passcode
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 10
         * * idcsMinValue: 4
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder smsPasscodeLength(Integer smsPasscodeLength) {
            return smsPasscodeLength(Output.of(smsPasscodeLength));
        }

        /**
         * @param timeStepInSecs (Updatable) Time (in secs) to be used as the time step
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 300
         * * idcsMinValue: 30
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder timeStepInSecs(Output<Integer> timeStepInSecs) {
            $.timeStepInSecs = timeStepInSecs;
            return this;
        }

        /**
         * @param timeStepInSecs (Updatable) Time (in secs) to be used as the time step
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 300
         * * idcsMinValue: 30
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder timeStepInSecs(Integer timeStepInSecs) {
            return timeStepInSecs(Output.of(timeStepInSecs));
        }

        /**
         * @param timeStepTolerance (Updatable) The tolerance/step-size that the system should use when validating a One-Time Passcode
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 3
         * * idcsMinValue: 2
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder timeStepTolerance(Output<Integer> timeStepTolerance) {
            $.timeStepTolerance = timeStepTolerance;
            return this;
        }

        /**
         * @param timeStepTolerance (Updatable) The tolerance/step-size that the system should use when validating a One-Time Passcode
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 3
         * * idcsMinValue: 2
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder timeStepTolerance(Integer timeStepTolerance) {
            return timeStepTolerance(Output.of(timeStepTolerance));
        }

        public DomainsAuthenticationFactorSettingTotpSettingsArgs build() {
            if ($.emailOtpValidityDurationInMins == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingTotpSettingsArgs", "emailOtpValidityDurationInMins");
            }
            if ($.emailPasscodeLength == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingTotpSettingsArgs", "emailPasscodeLength");
            }
            if ($.hashingAlgorithm == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingTotpSettingsArgs", "hashingAlgorithm");
            }
            if ($.jwtValidityDurationInSecs == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingTotpSettingsArgs", "jwtValidityDurationInSecs");
            }
            if ($.keyRefreshIntervalInDays == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingTotpSettingsArgs", "keyRefreshIntervalInDays");
            }
            if ($.passcodeLength == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingTotpSettingsArgs", "passcodeLength");
            }
            if ($.smsOtpValidityDurationInMins == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingTotpSettingsArgs", "smsOtpValidityDurationInMins");
            }
            if ($.smsPasscodeLength == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingTotpSettingsArgs", "smsPasscodeLength");
            }
            if ($.timeStepInSecs == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingTotpSettingsArgs", "timeStepInSecs");
            }
            if ($.timeStepTolerance == null) {
                throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingTotpSettingsArgs", "timeStepTolerance");
            }
            return $;
        }
    }

}
