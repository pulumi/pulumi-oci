// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DomainsGrantEntitlementArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsGrantEntitlementArgs Empty = new DomainsGrantEntitlementArgs();

    /**
     * The name of the attribute whose value (specified by attributeValue) confers privilege within the service-instance (specified by app).
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="attributeName", required=true)
    private Output<String> attributeName;

    /**
     * @return The name of the attribute whose value (specified by attributeValue) confers privilege within the service-instance (specified by app).
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> attributeName() {
        return this.attributeName;
    }

    /**
     * The value of the attribute (specified by attributeName) that confers privilege within the service-instance (specified by app).  If attributeName is &#39;appRoles&#39;, then attributeValue is the ID of the AppRole.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsCsvAttributeName: Display Name
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="attributeValue", required=true)
    private Output<String> attributeValue;

    /**
     * @return The value of the attribute (specified by attributeName) that confers privilege within the service-instance (specified by app).  If attributeName is &#39;appRoles&#39;, then attributeValue is the ID of the AppRole.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsCsvAttributeName: Display Name
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> attributeValue() {
        return this.attributeValue;
    }

    private DomainsGrantEntitlementArgs() {}

    private DomainsGrantEntitlementArgs(DomainsGrantEntitlementArgs $) {
        this.attributeName = $.attributeName;
        this.attributeValue = $.attributeValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsGrantEntitlementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsGrantEntitlementArgs $;

        public Builder() {
            $ = new DomainsGrantEntitlementArgs();
        }

        public Builder(DomainsGrantEntitlementArgs defaults) {
            $ = new DomainsGrantEntitlementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributeName The name of the attribute whose value (specified by attributeValue) confers privilege within the service-instance (specified by app).
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder attributeName(Output<String> attributeName) {
            $.attributeName = attributeName;
            return this;
        }

        /**
         * @param attributeName The name of the attribute whose value (specified by attributeValue) confers privilege within the service-instance (specified by app).
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder attributeName(String attributeName) {
            return attributeName(Output.of(attributeName));
        }

        /**
         * @param attributeValue The value of the attribute (specified by attributeName) that confers privilege within the service-instance (specified by app).  If attributeName is &#39;appRoles&#39;, then attributeValue is the ID of the AppRole.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsCsvAttributeName: Display Name
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder attributeValue(Output<String> attributeValue) {
            $.attributeValue = attributeValue;
            return this;
        }

        /**
         * @param attributeValue The value of the attribute (specified by attributeName) that confers privilege within the service-instance (specified by app).  If attributeName is &#39;appRoles&#39;, then attributeValue is the ID of the AppRole.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsCsvAttributeName: Display Name
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder attributeValue(String attributeValue) {
            return attributeValue(Output.of(attributeValue));
        }

        public DomainsGrantEntitlementArgs build() {
            if ($.attributeName == null) {
                throw new MissingRequiredPropertyException("DomainsGrantEntitlementArgs", "attributeName");
            }
            if ($.attributeValue == null) {
                throw new MissingRequiredPropertyException("DomainsGrantEntitlementArgs", "attributeValue");
            }
            return $;
        }
    }

}
