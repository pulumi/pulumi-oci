// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.DomainsGroupIdcsCreatedByArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupIdcsLastModifiedByArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupMemberArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupMetaArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupTagArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsGroupState extends com.pulumi.resources.ResourceArgs {

    public static final DomainsGroupState Empty = new DomainsGroupState();

    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    @Import(name="attributeSets")
    private @Nullable Output<List<String>> attributeSets;

    /**
     * @return (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    public Optional<Output<List<String>>> attributeSets() {
        return Optional.ofNullable(this.attributeSets);
    }

    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<String> attributes;

    /**
     * @return (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    public Optional<Output<String>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    @Import(name="authorization")
    private @Nullable Output<String> authorization;

    /**
     * @return (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public Optional<Output<String>> authorization() {
        return Optional.ofNullable(this.authorization);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="compartmentOcid")
    private @Nullable Output<String> compartmentOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> compartmentOcid() {
        return Optional.ofNullable(this.compartmentOcid);
    }

    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="deleteInProgress")
    private @Nullable Output<Boolean> deleteInProgress;

    /**
     * @return (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> deleteInProgress() {
        return Optional.ofNullable(this.deleteInProgress);
    }

    /**
     * (Updatable) The Group display name.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Display Name
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: global
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The Group display name.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Display Name
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: global
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="domainOcid")
    private @Nullable Output<String> domainOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> domainOcid() {
        return Optional.ofNullable(this.domainOcid);
    }

    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    @Import(name="forceDelete")
    private @Nullable Output<Boolean> forceDelete;

    public Optional<Output<Boolean>> forceDelete() {
        return Optional.ofNullable(this.forceDelete);
    }

    /**
     * (Updatable) The User or App who created the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     * 
     */
    @Import(name="idcsCreatedBies")
    private @Nullable Output<List<DomainsGroupIdcsCreatedByArgs>> idcsCreatedBies;

    /**
     * @return (Updatable) The User or App who created the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsGroupIdcsCreatedByArgs>>> idcsCreatedBies() {
        return Optional.ofNullable(this.idcsCreatedBies);
    }

    /**
     * The basic endpoint for the identity domain
     * 
     */
    @Import(name="idcsEndpoint")
    private @Nullable Output<String> idcsEndpoint;

    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public Optional<Output<String>> idcsEndpoint() {
        return Optional.ofNullable(this.idcsEndpoint);
    }

    /**
     * (Updatable) The User or App who modified the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    @Import(name="idcsLastModifiedBies")
    private @Nullable Output<List<DomainsGroupIdcsLastModifiedByArgs>> idcsLastModifiedBies;

    /**
     * @return (Updatable) The User or App who modified the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsGroupIdcsLastModifiedByArgs>>> idcsLastModifiedBies() {
        return Optional.ofNullable(this.idcsLastModifiedBies);
    }

    /**
     * (Updatable) The release number when the resource was upgraded.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="idcsLastUpgradedInRelease")
    private @Nullable Output<String> idcsLastUpgradedInRelease;

    /**
     * @return (Updatable) The release number when the resource was upgraded.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> idcsLastUpgradedInRelease() {
        return Optional.ofNullable(this.idcsLastUpgradedInRelease);
    }

    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="idcsPreventedOperations")
    private @Nullable Output<List<String>> idcsPreventedOperations;

    /**
     * @return (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> idcsPreventedOperations() {
        return Optional.ofNullable(this.idcsPreventedOperations);
    }

    /**
     * (Updatable) The group members. &lt;b&gt;Important:&lt;/b&gt; When requesting group members, a maximum of 10,000 members can be returned in a single request. If the response contains more than 10,000 members, the request will fail. Use &#39;startIndex&#39; and &#39;count&#39; to return members in pages instead of in a single response, for example: #attributes=members[startIndex=1%26count=10]. This REST API is SCIM compliant.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [value]
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:User Members, mapsTo:members[User].value, multiValueDelimiter:;]]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * idcsPaginateResponse: true
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="members")
    private @Nullable Output<List<DomainsGroupMemberArgs>> members;

    /**
     * @return (Updatable) The group members. &lt;b&gt;Important:&lt;/b&gt; When requesting group members, a maximum of 10,000 members can be returned in a single request. If the response contains more than 10,000 members, the request will fail. Use &#39;startIndex&#39; and &#39;count&#39; to return members in pages instead of in a single response, for example: #attributes=members[startIndex=1%26count=10]. This REST API is SCIM compliant.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [value]
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:User Members, mapsTo:members[User].value, multiValueDelimiter:;]]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * idcsPaginateResponse: true
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsGroupMemberArgs>>> members() {
        return Optional.ofNullable(this.members);
    }

    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     * 
     */
    @Import(name="metas")
    private @Nullable Output<List<DomainsGroupMetaArgs>> metas;

    /**
     * @return (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsGroupMetaArgs>>> metas() {
        return Optional.ofNullable(this.metas);
    }

    /**
     * (Updatable) A human readable name for the group as defined by the Service Consumer.
     * 
     * **Added In:** 2011192329
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Non-Unique Display Name
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: always
     * * type: string
     * 
     */
    @Import(name="nonUniqueDisplayName")
    private @Nullable Output<String> nonUniqueDisplayName;

    /**
     * @return (Updatable) A human readable name for the group as defined by the Service Consumer.
     * 
     * **Added In:** 2011192329
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Non-Unique Display Name
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: always
     * * type: string
     * 
     */
    public Optional<Output<String>> nonUniqueDisplayName() {
        return Optional.ofNullable(this.nonUniqueDisplayName);
    }

    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    @Import(name="ocid")
    private @Nullable Output<String> ocid;

    /**
     * @return (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    public Optional<Output<String>> ocid() {
        return Optional.ofNullable(this.ocid);
    }

    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    @Import(name="resourceTypeSchemaVersion")
    private @Nullable Output<String> resourceTypeSchemaVersion;

    /**
     * @return (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public Optional<Output<String>> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }

    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="schemas")
    private @Nullable Output<List<String>> schemas;

    /**
     * @return (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> schemas() {
        return Optional.ofNullable(this.schemas);
    }

    /**
     * (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DomainsGroupTagArgs>> tags;

    /**
     * @return (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsGroupTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="tenancyOcid")
    private @Nullable Output<String> tenancyOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> tenancyOcid() {
        return Optional.ofNullable(this.tenancyOcid);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure Tags.
     * 
     */
    @Import(name="urnietfparamsscimschemasoracleidcsextensionOciTags")
    private @Nullable Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs> urnietfparamsscimschemasoracleidcsextensionOciTags;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Tags.
     * 
     */
    public Optional<Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs>> urnietfparamsscimschemasoracleidcsextensionOciTags() {
        return Optional.ofNullable(this.urnietfparamsscimschemasoracleidcsextensionOciTags);
    }

    /**
     * (Updatable) Schema for Database Service  Resource
     * 
     */
    @Import(name="urnietfparamsscimschemasoracleidcsextensiondbcsGroups")
    private @Nullable Output<List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs>> urnietfparamsscimschemasoracleidcsextensiondbcsGroups;

    /**
     * @return (Updatable) Schema for Database Service  Resource
     * 
     */
    public Optional<Output<List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs>>> urnietfparamsscimschemasoracleidcsextensiondbcsGroups() {
        return Optional.ofNullable(this.urnietfparamsscimschemasoracleidcsextensiondbcsGroups);
    }

    /**
     * (Updatable) Dynamic Group
     * 
     */
    @Import(name="urnietfparamsscimschemasoracleidcsextensiondynamicGroup")
    private @Nullable Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupArgs> urnietfparamsscimschemasoracleidcsextensiondynamicGroup;

    /**
     * @return (Updatable) Dynamic Group
     * 
     */
    public Optional<Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupArgs>> urnietfparamsscimschemasoracleidcsextensiondynamicGroup() {
        return Optional.ofNullable(this.urnietfparamsscimschemasoracleidcsextensiondynamicGroup);
    }

    /**
     * (Updatable) Oracle Identity Cloud Service Group
     * 
     */
    @Import(name="urnietfparamsscimschemasoracleidcsextensiongroupGroup")
    private @Nullable Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupArgs> urnietfparamsscimschemasoracleidcsextensiongroupGroup;

    /**
     * @return (Updatable) Oracle Identity Cloud Service Group
     * 
     */
    public Optional<Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupArgs>> urnietfparamsscimschemasoracleidcsextensiongroupGroup() {
        return Optional.ofNullable(this.urnietfparamsscimschemasoracleidcsextensiongroupGroup);
    }

    /**
     * (Updatable) POSIX Group extension
     * 
     */
    @Import(name="urnietfparamsscimschemasoracleidcsextensionposixGroup")
    private @Nullable Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupArgs> urnietfparamsscimschemasoracleidcsextensionposixGroup;

    /**
     * @return (Updatable) POSIX Group extension
     * 
     */
    public Optional<Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupArgs>> urnietfparamsscimschemasoracleidcsextensionposixGroup() {
        return Optional.ofNullable(this.urnietfparamsscimschemasoracleidcsextensionposixGroup);
    }

    /**
     * (Updatable) Requestable Group
     * 
     */
    @Import(name="urnietfparamsscimschemasoracleidcsextensionrequestableGroup")
    private @Nullable Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupArgs> urnietfparamsscimschemasoracleidcsextensionrequestableGroup;

    /**
     * @return (Updatable) Requestable Group
     * 
     */
    public Optional<Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupArgs>> urnietfparamsscimschemasoracleidcsextensionrequestableGroup() {
        return Optional.ofNullable(this.urnietfparamsscimschemasoracleidcsextensionrequestableGroup);
    }

    private DomainsGroupState() {}

    private DomainsGroupState(DomainsGroupState $) {
        this.attributeSets = $.attributeSets;
        this.attributes = $.attributes;
        this.authorization = $.authorization;
        this.compartmentOcid = $.compartmentOcid;
        this.deleteInProgress = $.deleteInProgress;
        this.displayName = $.displayName;
        this.domainOcid = $.domainOcid;
        this.externalId = $.externalId;
        this.forceDelete = $.forceDelete;
        this.idcsCreatedBies = $.idcsCreatedBies;
        this.idcsEndpoint = $.idcsEndpoint;
        this.idcsLastModifiedBies = $.idcsLastModifiedBies;
        this.idcsLastUpgradedInRelease = $.idcsLastUpgradedInRelease;
        this.idcsPreventedOperations = $.idcsPreventedOperations;
        this.members = $.members;
        this.metas = $.metas;
        this.nonUniqueDisplayName = $.nonUniqueDisplayName;
        this.ocid = $.ocid;
        this.resourceTypeSchemaVersion = $.resourceTypeSchemaVersion;
        this.schemas = $.schemas;
        this.tags = $.tags;
        this.tenancyOcid = $.tenancyOcid;
        this.urnietfparamsscimschemasoracleidcsextensionOciTags = $.urnietfparamsscimschemasoracleidcsextensionOciTags;
        this.urnietfparamsscimschemasoracleidcsextensiondbcsGroups = $.urnietfparamsscimschemasoracleidcsextensiondbcsGroups;
        this.urnietfparamsscimschemasoracleidcsextensiondynamicGroup = $.urnietfparamsscimschemasoracleidcsextensiondynamicGroup;
        this.urnietfparamsscimschemasoracleidcsextensiongroupGroup = $.urnietfparamsscimschemasoracleidcsextensiongroupGroup;
        this.urnietfparamsscimschemasoracleidcsextensionposixGroup = $.urnietfparamsscimschemasoracleidcsextensionposixGroup;
        this.urnietfparamsscimschemasoracleidcsextensionrequestableGroup = $.urnietfparamsscimschemasoracleidcsextensionrequestableGroup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsGroupState $;

        public Builder() {
            $ = new DomainsGroupState();
        }

        public Builder(DomainsGroupState defaults) {
            $ = new DomainsGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(@Nullable Output<List<String>> attributeSets) {
            $.attributeSets = attributeSets;
            return this;
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(List<String> attributeSets) {
            return attributeSets(Output.of(attributeSets));
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }

        /**
         * @param attributes (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<String> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(String attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(@Nullable Output<String> authorization) {
            $.authorization = authorization;
            return this;
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(String authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param compartmentOcid (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder compartmentOcid(@Nullable Output<String> compartmentOcid) {
            $.compartmentOcid = compartmentOcid;
            return this;
        }

        /**
         * @param compartmentOcid (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder compartmentOcid(String compartmentOcid) {
            return compartmentOcid(Output.of(compartmentOcid));
        }

        /**
         * @param deleteInProgress (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder deleteInProgress(@Nullable Output<Boolean> deleteInProgress) {
            $.deleteInProgress = deleteInProgress;
            return this;
        }

        /**
         * @param deleteInProgress (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder deleteInProgress(Boolean deleteInProgress) {
            return deleteInProgress(Output.of(deleteInProgress));
        }

        /**
         * @param displayName (Updatable) The Group display name.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCsvAttributeName: Display Name
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The Group display name.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCsvAttributeName: Display Name
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Name, deprecatedColumnHeaderName:Display Name]]
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param domainOcid (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder domainOcid(@Nullable Output<String> domainOcid) {
            $.domainOcid = domainOcid;
            return this;
        }

        /**
         * @param domainOcid (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder domainOcid(String domainOcid) {
            return domainOcid(Output.of(domainOcid));
        }

        /**
         * @param externalId (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        public Builder forceDelete(@Nullable Output<Boolean> forceDelete) {
            $.forceDelete = forceDelete;
            return this;
        }

        public Builder forceDelete(Boolean forceDelete) {
            return forceDelete(Output.of(forceDelete));
        }

        /**
         * @param idcsCreatedBies (Updatable) The User or App who created the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: true
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsCreatedBies(@Nullable Output<List<DomainsGroupIdcsCreatedByArgs>> idcsCreatedBies) {
            $.idcsCreatedBies = idcsCreatedBies;
            return this;
        }

        /**
         * @param idcsCreatedBies (Updatable) The User or App who created the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: true
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsCreatedBies(List<DomainsGroupIdcsCreatedByArgs> idcsCreatedBies) {
            return idcsCreatedBies(Output.of(idcsCreatedBies));
        }

        /**
         * @param idcsCreatedBies (Updatable) The User or App who created the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: true
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsCreatedBies(DomainsGroupIdcsCreatedByArgs... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(@Nullable Output<String> idcsEndpoint) {
            $.idcsEndpoint = idcsEndpoint;
            return this;
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(String idcsEndpoint) {
            return idcsEndpoint(Output.of(idcsEndpoint));
        }

        /**
         * @param idcsLastModifiedBies (Updatable) The User or App who modified the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsLastModifiedBies(@Nullable Output<List<DomainsGroupIdcsLastModifiedByArgs>> idcsLastModifiedBies) {
            $.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }

        /**
         * @param idcsLastModifiedBies (Updatable) The User or App who modified the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsLastModifiedBies(List<DomainsGroupIdcsLastModifiedByArgs> idcsLastModifiedBies) {
            return idcsLastModifiedBies(Output.of(idcsLastModifiedBies));
        }

        /**
         * @param idcsLastModifiedBies (Updatable) The User or App who modified the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsLastModifiedBies(DomainsGroupIdcsLastModifiedByArgs... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }

        /**
         * @param idcsLastUpgradedInRelease (Updatable) The release number when the resource was upgraded.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsLastUpgradedInRelease(@Nullable Output<String> idcsLastUpgradedInRelease) {
            $.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }

        /**
         * @param idcsLastUpgradedInRelease (Updatable) The release number when the resource was upgraded.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            return idcsLastUpgradedInRelease(Output.of(idcsLastUpgradedInRelease));
        }

        /**
         * @param idcsPreventedOperations (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsPreventedOperations(@Nullable Output<List<String>> idcsPreventedOperations) {
            $.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }

        /**
         * @param idcsPreventedOperations (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            return idcsPreventedOperations(Output.of(idcsPreventedOperations));
        }

        /**
         * @param idcsPreventedOperations (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }

        /**
         * @param members (Updatable) The group members. &lt;b&gt;Important:&lt;/b&gt; When requesting group members, a maximum of 10,000 members can be returned in a single request. If the response contains more than 10,000 members, the request will fail. Use &#39;startIndex&#39; and &#39;count&#39; to return members in pages instead of in a single response, for example: #attributes=members[startIndex=1%26count=10]. This REST API is SCIM compliant.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCompositeKey: [value]
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:User Members, mapsTo:members[User].value, multiValueDelimiter:;]]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * idcsPaginateResponse: true
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder members(@Nullable Output<List<DomainsGroupMemberArgs>> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members (Updatable) The group members. &lt;b&gt;Important:&lt;/b&gt; When requesting group members, a maximum of 10,000 members can be returned in a single request. If the response contains more than 10,000 members, the request will fail. Use &#39;startIndex&#39; and &#39;count&#39; to return members in pages instead of in a single response, for example: #attributes=members[startIndex=1%26count=10]. This REST API is SCIM compliant.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCompositeKey: [value]
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:User Members, mapsTo:members[User].value, multiValueDelimiter:;]]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * idcsPaginateResponse: true
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder members(List<DomainsGroupMemberArgs> members) {
            return members(Output.of(members));
        }

        /**
         * @param members (Updatable) The group members. &lt;b&gt;Important:&lt;/b&gt; When requesting group members, a maximum of 10,000 members can be returned in a single request. If the response contains more than 10,000 members, the request will fail. Use &#39;startIndex&#39; and &#39;count&#39; to return members in pages instead of in a single response, for example: #attributes=members[startIndex=1%26count=10]. This REST API is SCIM compliant.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCompositeKey: [value]
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:User Members, mapsTo:members[User].value, multiValueDelimiter:;]]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * idcsPaginateResponse: true
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder members(DomainsGroupMemberArgs... members) {
            return members(List.of(members));
        }

        /**
         * @param metas (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder metas(@Nullable Output<List<DomainsGroupMetaArgs>> metas) {
            $.metas = metas;
            return this;
        }

        /**
         * @param metas (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder metas(List<DomainsGroupMetaArgs> metas) {
            return metas(Output.of(metas));
        }

        /**
         * @param metas (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder metas(DomainsGroupMetaArgs... metas) {
            return metas(List.of(metas));
        }

        /**
         * @param nonUniqueDisplayName (Updatable) A human readable name for the group as defined by the Service Consumer.
         * 
         * **Added In:** 2011192329
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCsvAttributeName: Non-Unique Display Name
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: always
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder nonUniqueDisplayName(@Nullable Output<String> nonUniqueDisplayName) {
            $.nonUniqueDisplayName = nonUniqueDisplayName;
            return this;
        }

        /**
         * @param nonUniqueDisplayName (Updatable) A human readable name for the group as defined by the Service Consumer.
         * 
         * **Added In:** 2011192329
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCsvAttributeName: Non-Unique Display Name
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: always
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder nonUniqueDisplayName(String nonUniqueDisplayName) {
            return nonUniqueDisplayName(Output.of(nonUniqueDisplayName));
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(@Nullable Output<String> ocid) {
            $.ocid = ocid;
            return this;
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(String ocid) {
            return ocid(Output.of(ocid));
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(@Nullable Output<String> resourceTypeSchemaVersion) {
            $.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(String resourceTypeSchemaVersion) {
            return resourceTypeSchemaVersion(Output.of(resourceTypeSchemaVersion));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(@Nullable Output<List<String>> schemas) {
            $.schemas = schemas;
            return this;
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(List<String> schemas) {
            return schemas(Output.of(schemas));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DomainsGroupTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DomainsGroupTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(DomainsGroupTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param tenancyOcid (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tenancyOcid(@Nullable Output<String> tenancyOcid) {
            $.tenancyOcid = tenancyOcid;
            return this;
        }

        /**
         * @param tenancyOcid (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tenancyOcid(String tenancyOcid) {
            return tenancyOcid(Output.of(tenancyOcid));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionOciTags (Updatable) Oracle Cloud Infrastructure Tags.
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionOciTags(@Nullable Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs> urnietfparamsscimschemasoracleidcsextensionOciTags) {
            $.urnietfparamsscimschemasoracleidcsextensionOciTags = urnietfparamsscimschemasoracleidcsextensionOciTags;
            return this;
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionOciTags (Updatable) Oracle Cloud Infrastructure Tags.
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionOciTags(DomainsGroupUrnietfparamsscimschemasoracleidcsextensionOciTagsArgs urnietfparamsscimschemasoracleidcsextensionOciTags) {
            return urnietfparamsscimschemasoracleidcsextensionOciTags(Output.of(urnietfparamsscimschemasoracleidcsextensionOciTags));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensiondbcsGroups (Updatable) Schema for Database Service  Resource
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensiondbcsGroups(@Nullable Output<List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs>> urnietfparamsscimschemasoracleidcsextensiondbcsGroups) {
            $.urnietfparamsscimschemasoracleidcsextensiondbcsGroups = urnietfparamsscimschemasoracleidcsextensiondbcsGroups;
            return this;
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensiondbcsGroups (Updatable) Schema for Database Service  Resource
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensiondbcsGroups(List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs> urnietfparamsscimschemasoracleidcsextensiondbcsGroups) {
            return urnietfparamsscimschemasoracleidcsextensiondbcsGroups(Output.of(urnietfparamsscimschemasoracleidcsextensiondbcsGroups));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensiondbcsGroups (Updatable) Schema for Database Service  Resource
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensiondbcsGroups(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs... urnietfparamsscimschemasoracleidcsextensiondbcsGroups) {
            return urnietfparamsscimschemasoracleidcsextensiondbcsGroups(List.of(urnietfparamsscimschemasoracleidcsextensiondbcsGroups));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensiondynamicGroup (Updatable) Dynamic Group
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensiondynamicGroup(@Nullable Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupArgs> urnietfparamsscimschemasoracleidcsextensiondynamicGroup) {
            $.urnietfparamsscimschemasoracleidcsextensiondynamicGroup = urnietfparamsscimschemasoracleidcsextensiondynamicGroup;
            return this;
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensiondynamicGroup (Updatable) Dynamic Group
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensiondynamicGroup(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondynamicGroupArgs urnietfparamsscimschemasoracleidcsextensiondynamicGroup) {
            return urnietfparamsscimschemasoracleidcsextensiondynamicGroup(Output.of(urnietfparamsscimschemasoracleidcsextensiondynamicGroup));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensiongroupGroup (Updatable) Oracle Identity Cloud Service Group
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensiongroupGroup(@Nullable Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupArgs> urnietfparamsscimschemasoracleidcsextensiongroupGroup) {
            $.urnietfparamsscimschemasoracleidcsextensiongroupGroup = urnietfparamsscimschemasoracleidcsextensiongroupGroup;
            return this;
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensiongroupGroup (Updatable) Oracle Identity Cloud Service Group
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensiongroupGroup(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiongroupGroupArgs urnietfparamsscimschemasoracleidcsextensiongroupGroup) {
            return urnietfparamsscimschemasoracleidcsextensiongroupGroup(Output.of(urnietfparamsscimschemasoracleidcsextensiongroupGroup));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionposixGroup (Updatable) POSIX Group extension
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionposixGroup(@Nullable Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupArgs> urnietfparamsscimschemasoracleidcsextensionposixGroup) {
            $.urnietfparamsscimschemasoracleidcsextensionposixGroup = urnietfparamsscimschemasoracleidcsextensionposixGroup;
            return this;
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionposixGroup (Updatable) POSIX Group extension
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionposixGroup(DomainsGroupUrnietfparamsscimschemasoracleidcsextensionposixGroupArgs urnietfparamsscimschemasoracleidcsextensionposixGroup) {
            return urnietfparamsscimschemasoracleidcsextensionposixGroup(Output.of(urnietfparamsscimschemasoracleidcsextensionposixGroup));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionrequestableGroup (Updatable) Requestable Group
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionrequestableGroup(@Nullable Output<DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupArgs> urnietfparamsscimschemasoracleidcsextensionrequestableGroup) {
            $.urnietfparamsscimschemasoracleidcsextensionrequestableGroup = urnietfparamsscimschemasoracleidcsextensionrequestableGroup;
            return this;
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionrequestableGroup (Updatable) Requestable Group
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionrequestableGroup(DomainsGroupUrnietfparamsscimschemasoracleidcsextensionrequestableGroupArgs urnietfparamsscimschemasoracleidcsextensionrequestableGroup) {
            return urnietfparamsscimschemasoracleidcsextensionrequestableGroup(Output.of(urnietfparamsscimschemasoracleidcsextensionrequestableGroup));
        }

        public DomainsGroupState build() {
            return $;
        }
    }

}
