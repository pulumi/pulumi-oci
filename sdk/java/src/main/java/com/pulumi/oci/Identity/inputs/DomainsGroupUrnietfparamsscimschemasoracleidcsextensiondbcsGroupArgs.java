// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs;
import com.pulumi.oci.Identity.inputs.DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs Empty = new DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs();

    /**
     * (Updatable) DBCS Domain-level schema-name.  This attribute refers implicitly to a value of &#39;domainLevelSchemaNames&#39; for a particular DB Domain.
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * idcsSensitive: none
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="domainLevelSchema")
    private @Nullable Output<String> domainLevelSchema;

    /**
     * @return (Updatable) DBCS Domain-level schema-name.  This attribute refers implicitly to a value of &#39;domainLevelSchemaNames&#39; for a particular DB Domain.
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * idcsSensitive: none
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> domainLevelSchema() {
        return Optional.ofNullable(this.domainLevelSchema);
    }

    /**
     * (Updatable) DBCS Domain-level schema-names. Each value is specific to a DB Domain.
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [domainName, schemaName]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * 
     */
    @Import(name="domainLevelSchemaNames")
    private @Nullable Output<List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs>> domainLevelSchemaNames;

    /**
     * @return (Updatable) DBCS Domain-level schema-names. Each value is specific to a DB Domain.
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [domainName, schemaName]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs>>> domainLevelSchemaNames() {
        return Optional.ofNullable(this.domainLevelSchemaNames);
    }

    /**
     * (Updatable) DBCS instance-level schema-name. This attribute refers implicitly to a value of &#39;instanceLevelSchemaNames&#39; for a particular DB Instance.
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * idcsSensitive: none
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="instanceLevelSchema")
    private @Nullable Output<String> instanceLevelSchema;

    /**
     * @return (Updatable) DBCS instance-level schema-name. This attribute refers implicitly to a value of &#39;instanceLevelSchemaNames&#39; for a particular DB Instance.
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * idcsSensitive: none
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> instanceLevelSchema() {
        return Optional.ofNullable(this.instanceLevelSchema);
    }

    /**
     * (Updatable) DBCS instance-level schema-names. Each schema-name is specific to a DB Instance.
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [dbInstanceId, schemaName]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * 
     */
    @Import(name="instanceLevelSchemaNames")
    private @Nullable Output<List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs>> instanceLevelSchemaNames;

    /**
     * @return (Updatable) DBCS instance-level schema-names. Each schema-name is specific to a DB Instance.
     * 
     * **Added In:** 18.2.4
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [dbInstanceId, schemaName]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs>>> instanceLevelSchemaNames() {
        return Optional.ofNullable(this.instanceLevelSchemaNames);
    }

    private DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs() {}

    private DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs $) {
        this.domainLevelSchema = $.domainLevelSchema;
        this.domainLevelSchemaNames = $.domainLevelSchemaNames;
        this.instanceLevelSchema = $.instanceLevelSchema;
        this.instanceLevelSchemaNames = $.instanceLevelSchemaNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs $;

        public Builder() {
            $ = new DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs();
        }

        public Builder(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs defaults) {
            $ = new DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainLevelSchema (Updatable) DBCS Domain-level schema-name.  This attribute refers implicitly to a value of &#39;domainLevelSchemaNames&#39; for a particular DB Domain.
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * idcsSensitive: none
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder domainLevelSchema(@Nullable Output<String> domainLevelSchema) {
            $.domainLevelSchema = domainLevelSchema;
            return this;
        }

        /**
         * @param domainLevelSchema (Updatable) DBCS Domain-level schema-name.  This attribute refers implicitly to a value of &#39;domainLevelSchemaNames&#39; for a particular DB Domain.
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * idcsSensitive: none
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder domainLevelSchema(String domainLevelSchema) {
            return domainLevelSchema(Output.of(domainLevelSchema));
        }

        /**
         * @param domainLevelSchemaNames (Updatable) DBCS Domain-level schema-names. Each value is specific to a DB Domain.
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [domainName, schemaName]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder domainLevelSchemaNames(@Nullable Output<List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs>> domainLevelSchemaNames) {
            $.domainLevelSchemaNames = domainLevelSchemaNames;
            return this;
        }

        /**
         * @param domainLevelSchemaNames (Updatable) DBCS Domain-level schema-names. Each value is specific to a DB Domain.
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [domainName, schemaName]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder domainLevelSchemaNames(List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs> domainLevelSchemaNames) {
            return domainLevelSchemaNames(Output.of(domainLevelSchemaNames));
        }

        /**
         * @param domainLevelSchemaNames (Updatable) DBCS Domain-level schema-names. Each value is specific to a DB Domain.
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [domainName, schemaName]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder domainLevelSchemaNames(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupDomainLevelSchemaNameArgs... domainLevelSchemaNames) {
            return domainLevelSchemaNames(List.of(domainLevelSchemaNames));
        }

        /**
         * @param instanceLevelSchema (Updatable) DBCS instance-level schema-name. This attribute refers implicitly to a value of &#39;instanceLevelSchemaNames&#39; for a particular DB Instance.
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * idcsSensitive: none
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder instanceLevelSchema(@Nullable Output<String> instanceLevelSchema) {
            $.instanceLevelSchema = instanceLevelSchema;
            return this;
        }

        /**
         * @param instanceLevelSchema (Updatable) DBCS instance-level schema-name. This attribute refers implicitly to a value of &#39;instanceLevelSchemaNames&#39; for a particular DB Instance.
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * idcsSensitive: none
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder instanceLevelSchema(String instanceLevelSchema) {
            return instanceLevelSchema(Output.of(instanceLevelSchema));
        }

        /**
         * @param instanceLevelSchemaNames (Updatable) DBCS instance-level schema-names. Each schema-name is specific to a DB Instance.
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [dbInstanceId, schemaName]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder instanceLevelSchemaNames(@Nullable Output<List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs>> instanceLevelSchemaNames) {
            $.instanceLevelSchemaNames = instanceLevelSchemaNames;
            return this;
        }

        /**
         * @param instanceLevelSchemaNames (Updatable) DBCS instance-level schema-names. Each schema-name is specific to a DB Instance.
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [dbInstanceId, schemaName]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder instanceLevelSchemaNames(List<DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs> instanceLevelSchemaNames) {
            return instanceLevelSchemaNames(Output.of(instanceLevelSchemaNames));
        }

        /**
         * @param instanceLevelSchemaNames (Updatable) DBCS instance-level schema-names. Each schema-name is specific to a DB Instance.
         * 
         * **Added In:** 18.2.4
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [dbInstanceId, schemaName]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder instanceLevelSchemaNames(DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupInstanceLevelSchemaNameArgs... instanceLevelSchemaNames) {
            return instanceLevelSchemaNames(List.of(instanceLevelSchemaNames));
        }

        public DomainsGroupUrnietfparamsscimschemasoracleidcsextensiondbcsGroupArgs build() {
            return $;
        }
    }

}
