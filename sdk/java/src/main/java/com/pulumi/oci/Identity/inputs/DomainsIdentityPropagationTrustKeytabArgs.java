// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsIdentityPropagationTrustKeytabArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsIdentityPropagationTrustKeytabArgs Empty = new DomainsIdentityPropagationTrustKeytabArgs();

    /**
     * (Updatable) The OCID of the secret. The secret content corresponding to the OCID is expected to be in Base64 encoded content type.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="secretOcid", required=true)
    private Output<String> secretOcid;

    /**
     * @return (Updatable) The OCID of the secret. The secret content corresponding to the OCID is expected to be in Base64 encoded content type.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> secretOcid() {
        return this.secretOcid;
    }

    /**
     * (Updatable) The version of the secret. When the version is not specified, then the latest secret version is used during runtime.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="secretVersion")
    private @Nullable Output<Integer> secretVersion;

    /**
     * @return (Updatable) The version of the secret. When the version is not specified, then the latest secret version is used during runtime.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Optional<Output<Integer>> secretVersion() {
        return Optional.ofNullable(this.secretVersion);
    }

    private DomainsIdentityPropagationTrustKeytabArgs() {}

    private DomainsIdentityPropagationTrustKeytabArgs(DomainsIdentityPropagationTrustKeytabArgs $) {
        this.secretOcid = $.secretOcid;
        this.secretVersion = $.secretVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsIdentityPropagationTrustKeytabArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsIdentityPropagationTrustKeytabArgs $;

        public Builder() {
            $ = new DomainsIdentityPropagationTrustKeytabArgs();
        }

        public Builder(DomainsIdentityPropagationTrustKeytabArgs defaults) {
            $ = new DomainsIdentityPropagationTrustKeytabArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param secretOcid (Updatable) The OCID of the secret. The secret content corresponding to the OCID is expected to be in Base64 encoded content type.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder secretOcid(Output<String> secretOcid) {
            $.secretOcid = secretOcid;
            return this;
        }

        /**
         * @param secretOcid (Updatable) The OCID of the secret. The secret content corresponding to the OCID is expected to be in Base64 encoded content type.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder secretOcid(String secretOcid) {
            return secretOcid(Output.of(secretOcid));
        }

        /**
         * @param secretVersion (Updatable) The version of the secret. When the version is not specified, then the latest secret version is used during runtime.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder secretVersion(@Nullable Output<Integer> secretVersion) {
            $.secretVersion = secretVersion;
            return this;
        }

        /**
         * @param secretVersion (Updatable) The version of the secret. When the version is not specified, then the latest secret version is used during runtime.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder secretVersion(Integer secretVersion) {
            return secretVersion(Output.of(secretVersion));
        }

        public DomainsIdentityPropagationTrustKeytabArgs build() {
            if ($.secretOcid == null) {
                throw new MissingRequiredPropertyException("DomainsIdentityPropagationTrustKeytabArgs", "secretOcid");
            }
            return $;
        }
    }

}
