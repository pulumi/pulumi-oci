// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.DomainsIdentityProviderCorrelationPolicyArgs;
import com.pulumi.oci.Identity.inputs.DomainsIdentityProviderIdcsCreatedByArgs;
import com.pulumi.oci.Identity.inputs.DomainsIdentityProviderIdcsLastModifiedByArgs;
import com.pulumi.oci.Identity.inputs.DomainsIdentityProviderJitUserProvAssignedGroupArgs;
import com.pulumi.oci.Identity.inputs.DomainsIdentityProviderJitUserProvAttributesArgs;
import com.pulumi.oci.Identity.inputs.DomainsIdentityProviderJitUserProvGroupMappingArgs;
import com.pulumi.oci.Identity.inputs.DomainsIdentityProviderMetaArgs;
import com.pulumi.oci.Identity.inputs.DomainsIdentityProviderTagArgs;
import com.pulumi.oci.Identity.inputs.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs;
import com.pulumi.oci.Identity.inputs.DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsIdentityProviderState extends com.pulumi.resources.ResourceArgs {

    public static final DomainsIdentityProviderState Empty = new DomainsIdentityProviderState();

    /**
     * (Updatable) Assertion attribute name.
     * 
     * **Deprecated Since: 20.1.3**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * * idcsValuePersistedInOtherAttribute: true
     * 
     */
    @Import(name="assertionAttribute")
    private @Nullable Output<String> assertionAttribute;

    /**
     * @return (Updatable) Assertion attribute name.
     * 
     * **Deprecated Since: 20.1.3**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * * idcsValuePersistedInOtherAttribute: true
     * 
     */
    public Optional<Output<String>> assertionAttribute() {
        return Optional.ofNullable(this.assertionAttribute);
    }

    /**
     * (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    @Import(name="attributeSets")
    private @Nullable Output<List<String>> attributeSets;

    /**
     * @return (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    public Optional<Output<List<String>>> attributeSets() {
        return Optional.ofNullable(this.attributeSets);
    }

    /**
     * (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<String> attributes;

    /**
     * @return (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    public Optional<Output<String>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * (Updatable) HTTP binding to use for authentication requests.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="authnRequestBinding")
    private @Nullable Output<String> authnRequestBinding;

    /**
     * @return (Updatable) HTTP binding to use for authentication requests.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> authnRequestBinding() {
        return Optional.ofNullable(this.authnRequestBinding);
    }

    /**
     * (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    @Import(name="authorization")
    private @Nullable Output<String> authorization;

    /**
     * @return (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public Optional<Output<String>> authorization() {
        return Optional.ofNullable(this.authorization);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="compartmentOcid")
    private @Nullable Output<String> compartmentOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> compartmentOcid() {
        return Optional.ofNullable(this.compartmentOcid);
    }

    /**
     * (Updatable) Correlation policy
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="correlationPolicy")
    private @Nullable Output<DomainsIdentityProviderCorrelationPolicyArgs> correlationPolicy;

    /**
     * @return (Updatable) Correlation policy
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<DomainsIdentityProviderCorrelationPolicyArgs>> correlationPolicy() {
        return Optional.ofNullable(this.correlationPolicy);
    }

    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="deleteInProgress")
    private @Nullable Output<Boolean> deleteInProgress;

    /**
     * @return (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> deleteInProgress() {
        return Optional.ofNullable(this.deleteInProgress);
    }

    /**
     * (Updatable) Description
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="domainOcid")
    private @Nullable Output<String> domainOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> domainOcid() {
        return Optional.ofNullable(this.domainOcid);
    }

    /**
     * (Updatable) Set to true to indicate Partner enabled.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return (Updatable) Set to true to indicate Partner enabled.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * (Updatable) Encryption certificate
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="encryptionCertificate")
    private @Nullable Output<String> encryptionCertificate;

    /**
     * @return (Updatable) Encryption certificate
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> encryptionCertificate() {
        return Optional.ofNullable(this.encryptionCertificate);
    }

    /**
     * (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="externalId")
    private @Nullable Output<String> externalId;

    /**
     * @return (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> externalId() {
        return Optional.ofNullable(this.externalId);
    }

    /**
     * (Updatable) Identity Provider Icon URL.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="iconUrl")
    private @Nullable Output<String> iconUrl;

    /**
     * @return (Updatable) Identity Provider Icon URL.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> iconUrl() {
        return Optional.ofNullable(this.iconUrl);
    }

    /**
     * (Updatable) The User or App who created the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     * 
     */
    @Import(name="idcsCreatedBies")
    private @Nullable Output<List<DomainsIdentityProviderIdcsCreatedByArgs>> idcsCreatedBies;

    /**
     * @return (Updatable) The User or App who created the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsIdentityProviderIdcsCreatedByArgs>>> idcsCreatedBies() {
        return Optional.ofNullable(this.idcsCreatedBies);
    }

    /**
     * The basic endpoint for the identity domain
     * 
     */
    @Import(name="idcsEndpoint")
    private @Nullable Output<String> idcsEndpoint;

    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public Optional<Output<String>> idcsEndpoint() {
        return Optional.ofNullable(this.idcsEndpoint);
    }

    /**
     * (Updatable) The User or App who modified the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    @Import(name="idcsLastModifiedBies")
    private @Nullable Output<List<DomainsIdentityProviderIdcsLastModifiedByArgs>> idcsLastModifiedBies;

    /**
     * @return (Updatable) The User or App who modified the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsIdentityProviderIdcsLastModifiedByArgs>>> idcsLastModifiedBies() {
        return Optional.ofNullable(this.idcsLastModifiedBies);
    }

    /**
     * (Updatable) The release number when the resource was upgraded.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="idcsLastUpgradedInRelease")
    private @Nullable Output<String> idcsLastUpgradedInRelease;

    /**
     * @return (Updatable) The release number when the resource was upgraded.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> idcsLastUpgradedInRelease() {
        return Optional.ofNullable(this.idcsLastUpgradedInRelease);
    }

    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="idcsPreventedOperations")
    private @Nullable Output<List<String>> idcsPreventedOperations;

    /**
     * @return (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> idcsPreventedOperations() {
        return Optional.ofNullable(this.idcsPreventedOperations);
    }

    /**
     * (Updatable) Identity Provider SSO URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="idpSsoUrl")
    private @Nullable Output<String> idpSsoUrl;

    /**
     * @return (Updatable) Identity Provider SSO URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> idpSsoUrl() {
        return Optional.ofNullable(this.idpSsoUrl);
    }

    /**
     * (Updatable) Set to true to include the signing certificate in the signature.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="includeSigningCertInSignature")
    private @Nullable Output<Boolean> includeSigningCertInSignature;

    /**
     * @return (Updatable) Set to true to include the signing certificate in the signature.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> includeSigningCertInSignature() {
        return Optional.ofNullable(this.includeSigningCertInSignature);
    }

    /**
     * (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvAssignedGroups")
    private @Nullable Output<List<DomainsIdentityProviderJitUserProvAssignedGroupArgs>> jitUserProvAssignedGroups;

    /**
     * @return (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsIdentityProviderJitUserProvAssignedGroupArgs>>> jitUserProvAssignedGroups() {
        return Optional.ofNullable(this.jitUserProvAssignedGroups);
    }

    /**
     * (Updatable) Set to true to indicate JIT User Creation is enabled
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvAttributeUpdateEnabled")
    private @Nullable Output<Boolean> jitUserProvAttributeUpdateEnabled;

    /**
     * @return (Updatable) Set to true to indicate JIT User Creation is enabled
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> jitUserProvAttributeUpdateEnabled() {
        return Optional.ofNullable(this.jitUserProvAttributeUpdateEnabled);
    }

    /**
     * (Updatable) Assertion To User Mapping
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [value]
     * * idcsSearchable: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvAttributes")
    private @Nullable Output<DomainsIdentityProviderJitUserProvAttributesArgs> jitUserProvAttributes;

    /**
     * @return (Updatable) Assertion To User Mapping
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [value]
     * * idcsSearchable: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<DomainsIdentityProviderJitUserProvAttributesArgs>> jitUserProvAttributes() {
        return Optional.ofNullable(this.jitUserProvAttributes);
    }

    /**
     * (Updatable) Set to true to indicate JIT User Creation is enabled
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvCreateUserEnabled")
    private @Nullable Output<Boolean> jitUserProvCreateUserEnabled;

    /**
     * @return (Updatable) Set to true to indicate JIT User Creation is enabled
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> jitUserProvCreateUserEnabled() {
        return Optional.ofNullable(this.jitUserProvCreateUserEnabled);
    }

    /**
     * (Updatable) Set to true to indicate JIT User Provisioning is enabled
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvEnabled")
    private @Nullable Output<Boolean> jitUserProvEnabled;

    /**
     * @return (Updatable) Set to true to indicate JIT User Provisioning is enabled
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> jitUserProvEnabled() {
        return Optional.ofNullable(this.jitUserProvEnabled);
    }

    /**
     * (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvGroupAssertionAttributeEnabled")
    private @Nullable Output<Boolean> jitUserProvGroupAssertionAttributeEnabled;

    /**
     * @return (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> jitUserProvGroupAssertionAttributeEnabled() {
        return Optional.ofNullable(this.jitUserProvGroupAssertionAttributeEnabled);
    }

    /**
     * (Updatable) The default value is &#39;Overwrite&#39;, which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify &#39;Merge&#39; if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvGroupAssignmentMethod")
    private @Nullable Output<String> jitUserProvGroupAssignmentMethod;

    /**
     * @return (Updatable) The default value is &#39;Overwrite&#39;, which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify &#39;Merge&#39; if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> jitUserProvGroupAssignmentMethod() {
        return Optional.ofNullable(this.jitUserProvGroupAssignmentMethod);
    }

    /**
     * (Updatable) Property to indicate the mode of group mapping
     * 
     * **Added In:** 2205120021
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvGroupMappingMode")
    private @Nullable Output<String> jitUserProvGroupMappingMode;

    /**
     * @return (Updatable) Property to indicate the mode of group mapping
     * 
     * **Added In:** 2205120021
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> jitUserProvGroupMappingMode() {
        return Optional.ofNullable(this.jitUserProvGroupMappingMode);
    }

    /**
     * (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
     * 
     * **Added In:** 2205120021
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [idpGroup]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvGroupMappings")
    private @Nullable Output<List<DomainsIdentityProviderJitUserProvGroupMappingArgs>> jitUserProvGroupMappings;

    /**
     * @return (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
     * 
     * **Added In:** 2205120021
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [idpGroup]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsIdentityProviderJitUserProvGroupMappingArgs>>> jitUserProvGroupMappings() {
        return Optional.ofNullable(this.jitUserProvGroupMappings);
    }

    /**
     * (Updatable) Name of the assertion attribute containing the users groups
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvGroupSamlAttributeName")
    private @Nullable Output<String> jitUserProvGroupSamlAttributeName;

    /**
     * @return (Updatable) Name of the assertion attribute containing the users groups
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> jitUserProvGroupSamlAttributeName() {
        return Optional.ofNullable(this.jitUserProvGroupSamlAttributeName);
    }

    /**
     * (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvGroupStaticListEnabled")
    private @Nullable Output<Boolean> jitUserProvGroupStaticListEnabled;

    /**
     * @return (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> jitUserProvGroupStaticListEnabled() {
        return Optional.ofNullable(this.jitUserProvGroupStaticListEnabled);
    }

    /**
     * (Updatable) Set to true to indicate ignoring absence of group while provisioning
     * 
     * **Added In:** 2111112015
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsAddedSinceVersion: 30
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="jitUserProvIgnoreErrorOnAbsentGroups")
    private @Nullable Output<Boolean> jitUserProvIgnoreErrorOnAbsentGroups;

    /**
     * @return (Updatable) Set to true to indicate ignoring absence of group while provisioning
     * 
     * **Added In:** 2111112015
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsAddedSinceVersion: 30
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> jitUserProvIgnoreErrorOnAbsentGroups() {
        return Optional.ofNullable(this.jitUserProvIgnoreErrorOnAbsentGroups);
    }

    /**
     * (Updatable) HTTP binding to use for logout.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="logoutBinding")
    private @Nullable Output<String> logoutBinding;

    /**
     * @return (Updatable) HTTP binding to use for logout.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> logoutBinding() {
        return Optional.ofNullable(this.logoutBinding);
    }

    /**
     * (Updatable) Set to true to enable logout.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="logoutEnabled")
    private @Nullable Output<Boolean> logoutEnabled;

    /**
     * @return (Updatable) Set to true to enable logout.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> logoutEnabled() {
        return Optional.ofNullable(this.logoutEnabled);
    }

    /**
     * (Updatable) Logout request URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="logoutRequestUrl")
    private @Nullable Output<String> logoutRequestUrl;

    /**
     * @return (Updatable) Logout request URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> logoutRequestUrl() {
        return Optional.ofNullable(this.logoutRequestUrl);
    }

    /**
     * (Updatable) Logout response URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="logoutResponseUrl")
    private @Nullable Output<String> logoutResponseUrl;

    /**
     * @return (Updatable) Logout response URL
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> logoutResponseUrl() {
        return Optional.ofNullable(this.logoutResponseUrl);
    }

    /**
     * (Updatable) Metadata
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<String> metadata;

    /**
     * @return (Updatable) Metadata
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     * 
     */
    @Import(name="metas")
    private @Nullable Output<List<DomainsIdentityProviderMetaArgs>> metas;

    /**
     * @return (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsIdentityProviderMetaArgs>>> metas() {
        return Optional.ofNullable(this.metas);
    }

    /**
     * (Updatable) Default authentication request name ID format.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="nameIdFormat")
    private @Nullable Output<String> nameIdFormat;

    /**
     * @return (Updatable) Default authentication request name ID format.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> nameIdFormat() {
        return Optional.ofNullable(this.nameIdFormat);
    }

    /**
     * (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    @Import(name="ocid")
    private @Nullable Output<String> ocid;

    /**
     * @return (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    public Optional<Output<String>> ocid() {
        return Optional.ofNullable(this.ocid);
    }

    /**
     * (Updatable) Unique name of the trusted Identity Provider.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: server
     * 
     */
    @Import(name="partnerName")
    private @Nullable Output<String> partnerName;

    /**
     * @return (Updatable) Unique name of the trusted Identity Provider.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: server
     * 
     */
    public Optional<Output<String>> partnerName() {
        return Optional.ofNullable(this.partnerName);
    }

    /**
     * (Updatable) Provider ID
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: server
     * 
     */
    @Import(name="partnerProviderId")
    private @Nullable Output<String> partnerProviderId;

    /**
     * @return (Updatable) Provider ID
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: server
     * 
     */
    public Optional<Output<String>> partnerProviderId() {
        return Optional.ofNullable(this.partnerProviderId);
    }

    /**
     * (Updatable) SAML SP authentication type.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="requestedAuthenticationContexts")
    private @Nullable Output<List<String>> requestedAuthenticationContexts;

    /**
     * @return (Updatable) SAML SP authentication type.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> requestedAuthenticationContexts() {
        return Optional.ofNullable(this.requestedAuthenticationContexts);
    }

    /**
     * (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="requireForceAuthn")
    private @Nullable Output<Boolean> requireForceAuthn;

    /**
     * @return (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> requireForceAuthn() {
        return Optional.ofNullable(this.requireForceAuthn);
    }

    /**
     * (Updatable) SAML SP must accept encrypted assertion only.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="requiresEncryptedAssertion")
    private @Nullable Output<Boolean> requiresEncryptedAssertion;

    /**
     * @return (Updatable) SAML SP must accept encrypted assertion only.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> requiresEncryptedAssertion() {
        return Optional.ofNullable(this.requiresEncryptedAssertion);
    }

    /**
     * (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    @Import(name="resourceTypeSchemaVersion")
    private @Nullable Output<String> resourceTypeSchemaVersion;

    /**
     * @return (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public Optional<Output<String>> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }

    /**
     * (Updatable) SAML SP HoK Enabled.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="samlHoKrequired")
    private @Nullable Output<Boolean> samlHoKrequired;

    /**
     * @return (Updatable) SAML SP HoK Enabled.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> samlHoKrequired() {
        return Optional.ofNullable(this.samlHoKrequired);
    }

    /**
     * (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="schemas")
    private @Nullable Output<List<String>> schemas;

    /**
     * @return (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> schemas() {
        return Optional.ofNullable(this.schemas);
    }

    /**
     * (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
     * 
     * **Added In:** 18.2.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: never
     * * type: string
     * * uniqueness: server
     * 
     */
    @Import(name="serviceInstanceIdentifier")
    private @Nullable Output<String> serviceInstanceIdentifier;

    /**
     * @return (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
     * 
     * **Added In:** 18.2.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: never
     * * type: string
     * * uniqueness: server
     * 
     */
    public Optional<Output<String>> serviceInstanceIdentifier() {
        return Optional.ofNullable(this.serviceInstanceIdentifier);
    }

    /**
     * (Updatable) Set to true to indicate whether to show IdP in login page or not.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="shownOnLoginPage")
    private @Nullable Output<Boolean> shownOnLoginPage;

    /**
     * @return (Updatable) Set to true to indicate whether to show IdP in login page or not.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> shownOnLoginPage() {
        return Optional.ofNullable(this.shownOnLoginPage);
    }

    /**
     * (Updatable) Signature hash algorithm.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="signatureHashAlgorithm")
    private @Nullable Output<String> signatureHashAlgorithm;

    /**
     * @return (Updatable) Signature hash algorithm.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> signatureHashAlgorithm() {
        return Optional.ofNullable(this.signatureHashAlgorithm);
    }

    /**
     * (Updatable) Signing certificate
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="signingCertificate")
    private @Nullable Output<String> signingCertificate;

    /**
     * @return (Updatable) Signing certificate
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> signingCertificate() {
        return Optional.ofNullable(this.signingCertificate);
    }

    /**
     * (Updatable) Succinct ID
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: server
     * 
     */
    @Import(name="succinctId")
    private @Nullable Output<String> succinctId;

    /**
     * @return (Updatable) Succinct ID
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: server
     * 
     */
    public Optional<Output<String>> succinctId() {
        return Optional.ofNullable(this.succinctId);
    }

    /**
     * (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DomainsIdentityProviderTagArgs>> tags;

    /**
     * @return (Updatable) A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsIdentityProviderTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="tenancyOcid")
    private @Nullable Output<String> tenancyOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> tenancyOcid() {
        return Optional.ofNullable(this.tenancyOcid);
    }

    /**
     * (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="tenantProviderId")
    private @Nullable Output<String> tenantProviderId;

    /**
     * @return (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> tenantProviderId() {
        return Optional.ofNullable(this.tenantProviderId);
    }

    /**
     * (Updatable) Identity Provider Type
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return (Updatable) Identity Provider Type
     * 
     * **Added In:** 20.1.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * (Updatable) Social Identity Provider Extension Schema
     * 
     */
    @Import(name="urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider")
    private @Nullable Output<DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs> urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider;

    /**
     * @return (Updatable) Social Identity Provider Extension Schema
     * 
     */
    public Optional<Output<DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs>> urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider() {
        return Optional.ofNullable(this.urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider);
    }

    /**
     * (Updatable) X509 Identity Provider Extension Schema
     * 
     */
    @Import(name="urnietfparamsscimschemasoracleidcsextensionx509identityProvider")
    private @Nullable Output<DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderArgs> urnietfparamsscimschemasoracleidcsextensionx509identityProvider;

    /**
     * @return (Updatable) X509 Identity Provider Extension Schema
     * 
     */
    public Optional<Output<DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderArgs>> urnietfparamsscimschemasoracleidcsextensionx509identityProvider() {
        return Optional.ofNullable(this.urnietfparamsscimschemasoracleidcsextensionx509identityProvider);
    }

    /**
     * (Updatable) User mapping method.
     * 
     * **Deprecated Since: 20.1.3**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * * idcsValuePersistedInOtherAttribute: true
     * 
     */
    @Import(name="userMappingMethod")
    private @Nullable Output<String> userMappingMethod;

    /**
     * @return (Updatable) User mapping method.
     * 
     * **Deprecated Since: 20.1.3**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * * idcsValuePersistedInOtherAttribute: true
     * 
     */
    public Optional<Output<String>> userMappingMethod() {
        return Optional.ofNullable(this.userMappingMethod);
    }

    /**
     * (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.&lt;br&gt;You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the &lt;b&gt;Example of a Request Body&lt;/b&gt; section of the Examples tab for the &lt;a href=&#39;./op-admin-v1-identityproviders-post.html&#39;&gt;POST&lt;/a&gt; and &lt;a href=&#39;./op-admin-v1-identityproviders-id-put.html&#39;&gt;PUT&lt;/a&gt; methods of the /IdentityProviders endpoint.
     * 
     * **Deprecated Since: 20.1.3**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * * idcsValuePersistedInOtherAttribute: true
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="userMappingStoreAttribute")
    private @Nullable Output<String> userMappingStoreAttribute;

    /**
     * @return (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.&lt;br&gt;You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the &lt;b&gt;Example of a Request Body&lt;/b&gt; section of the Examples tab for the &lt;a href=&#39;./op-admin-v1-identityproviders-post.html&#39;&gt;POST&lt;/a&gt; and &lt;a href=&#39;./op-admin-v1-identityproviders-id-put.html&#39;&gt;PUT&lt;/a&gt; methods of the /IdentityProviders endpoint.
     * 
     * **Deprecated Since: 20.1.3**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * * idcsValuePersistedInOtherAttribute: true
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> userMappingStoreAttribute() {
        return Optional.ofNullable(this.userMappingStoreAttribute);
    }

    private DomainsIdentityProviderState() {}

    private DomainsIdentityProviderState(DomainsIdentityProviderState $) {
        this.assertionAttribute = $.assertionAttribute;
        this.attributeSets = $.attributeSets;
        this.attributes = $.attributes;
        this.authnRequestBinding = $.authnRequestBinding;
        this.authorization = $.authorization;
        this.compartmentOcid = $.compartmentOcid;
        this.correlationPolicy = $.correlationPolicy;
        this.deleteInProgress = $.deleteInProgress;
        this.description = $.description;
        this.domainOcid = $.domainOcid;
        this.enabled = $.enabled;
        this.encryptionCertificate = $.encryptionCertificate;
        this.externalId = $.externalId;
        this.iconUrl = $.iconUrl;
        this.idcsCreatedBies = $.idcsCreatedBies;
        this.idcsEndpoint = $.idcsEndpoint;
        this.idcsLastModifiedBies = $.idcsLastModifiedBies;
        this.idcsLastUpgradedInRelease = $.idcsLastUpgradedInRelease;
        this.idcsPreventedOperations = $.idcsPreventedOperations;
        this.idpSsoUrl = $.idpSsoUrl;
        this.includeSigningCertInSignature = $.includeSigningCertInSignature;
        this.jitUserProvAssignedGroups = $.jitUserProvAssignedGroups;
        this.jitUserProvAttributeUpdateEnabled = $.jitUserProvAttributeUpdateEnabled;
        this.jitUserProvAttributes = $.jitUserProvAttributes;
        this.jitUserProvCreateUserEnabled = $.jitUserProvCreateUserEnabled;
        this.jitUserProvEnabled = $.jitUserProvEnabled;
        this.jitUserProvGroupAssertionAttributeEnabled = $.jitUserProvGroupAssertionAttributeEnabled;
        this.jitUserProvGroupAssignmentMethod = $.jitUserProvGroupAssignmentMethod;
        this.jitUserProvGroupMappingMode = $.jitUserProvGroupMappingMode;
        this.jitUserProvGroupMappings = $.jitUserProvGroupMappings;
        this.jitUserProvGroupSamlAttributeName = $.jitUserProvGroupSamlAttributeName;
        this.jitUserProvGroupStaticListEnabled = $.jitUserProvGroupStaticListEnabled;
        this.jitUserProvIgnoreErrorOnAbsentGroups = $.jitUserProvIgnoreErrorOnAbsentGroups;
        this.logoutBinding = $.logoutBinding;
        this.logoutEnabled = $.logoutEnabled;
        this.logoutRequestUrl = $.logoutRequestUrl;
        this.logoutResponseUrl = $.logoutResponseUrl;
        this.metadata = $.metadata;
        this.metas = $.metas;
        this.nameIdFormat = $.nameIdFormat;
        this.ocid = $.ocid;
        this.partnerName = $.partnerName;
        this.partnerProviderId = $.partnerProviderId;
        this.requestedAuthenticationContexts = $.requestedAuthenticationContexts;
        this.requireForceAuthn = $.requireForceAuthn;
        this.requiresEncryptedAssertion = $.requiresEncryptedAssertion;
        this.resourceTypeSchemaVersion = $.resourceTypeSchemaVersion;
        this.samlHoKrequired = $.samlHoKrequired;
        this.schemas = $.schemas;
        this.serviceInstanceIdentifier = $.serviceInstanceIdentifier;
        this.shownOnLoginPage = $.shownOnLoginPage;
        this.signatureHashAlgorithm = $.signatureHashAlgorithm;
        this.signingCertificate = $.signingCertificate;
        this.succinctId = $.succinctId;
        this.tags = $.tags;
        this.tenancyOcid = $.tenancyOcid;
        this.tenantProviderId = $.tenantProviderId;
        this.type = $.type;
        this.urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider = $.urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider;
        this.urnietfparamsscimschemasoracleidcsextensionx509identityProvider = $.urnietfparamsscimschemasoracleidcsextensionx509identityProvider;
        this.userMappingMethod = $.userMappingMethod;
        this.userMappingStoreAttribute = $.userMappingStoreAttribute;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsIdentityProviderState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsIdentityProviderState $;

        public Builder() {
            $ = new DomainsIdentityProviderState();
        }

        public Builder(DomainsIdentityProviderState defaults) {
            $ = new DomainsIdentityProviderState(Objects.requireNonNull(defaults));
        }

        /**
         * @param assertionAttribute (Updatable) Assertion attribute name.
         * 
         * **Deprecated Since: 20.1.3**
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * * idcsValuePersistedInOtherAttribute: true
         * 
         * @return builder
         * 
         */
        public Builder assertionAttribute(@Nullable Output<String> assertionAttribute) {
            $.assertionAttribute = assertionAttribute;
            return this;
        }

        /**
         * @param assertionAttribute (Updatable) Assertion attribute name.
         * 
         * **Deprecated Since: 20.1.3**
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * * idcsValuePersistedInOtherAttribute: true
         * 
         * @return builder
         * 
         */
        public Builder assertionAttribute(String assertionAttribute) {
            return assertionAttribute(Output.of(assertionAttribute));
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(@Nullable Output<List<String>> attributeSets) {
            $.attributeSets = attributeSets;
            return this;
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(List<String> attributeSets) {
            return attributeSets(Output.of(attributeSets));
        }

        /**
         * @param attributeSets (Updatable) A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }

        /**
         * @param attributes (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<String> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes (Updatable) A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(String attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param authnRequestBinding (Updatable) HTTP binding to use for authentication requests.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder authnRequestBinding(@Nullable Output<String> authnRequestBinding) {
            $.authnRequestBinding = authnRequestBinding;
            return this;
        }

        /**
         * @param authnRequestBinding (Updatable) HTTP binding to use for authentication requests.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder authnRequestBinding(String authnRequestBinding) {
            return authnRequestBinding(Output.of(authnRequestBinding));
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(@Nullable Output<String> authorization) {
            $.authorization = authorization;
            return this;
        }

        /**
         * @param authorization (Updatable) The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(String authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param compartmentOcid (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder compartmentOcid(@Nullable Output<String> compartmentOcid) {
            $.compartmentOcid = compartmentOcid;
            return this;
        }

        /**
         * @param compartmentOcid (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder compartmentOcid(String compartmentOcid) {
            return compartmentOcid(Output.of(compartmentOcid));
        }

        /**
         * @param correlationPolicy (Updatable) Correlation policy
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder correlationPolicy(@Nullable Output<DomainsIdentityProviderCorrelationPolicyArgs> correlationPolicy) {
            $.correlationPolicy = correlationPolicy;
            return this;
        }

        /**
         * @param correlationPolicy (Updatable) Correlation policy
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder correlationPolicy(DomainsIdentityProviderCorrelationPolicyArgs correlationPolicy) {
            return correlationPolicy(Output.of(correlationPolicy));
        }

        /**
         * @param deleteInProgress (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder deleteInProgress(@Nullable Output<Boolean> deleteInProgress) {
            $.deleteInProgress = deleteInProgress;
            return this;
        }

        /**
         * @param deleteInProgress (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder deleteInProgress(Boolean deleteInProgress) {
            return deleteInProgress(Output.of(deleteInProgress));
        }

        /**
         * @param description (Updatable) Description
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param domainOcid (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder domainOcid(@Nullable Output<String> domainOcid) {
            $.domainOcid = domainOcid;
            return this;
        }

        /**
         * @param domainOcid (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder domainOcid(String domainOcid) {
            return domainOcid(Output.of(domainOcid));
        }

        /**
         * @param enabled (Updatable) Set to true to indicate Partner enabled.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled (Updatable) Set to true to indicate Partner enabled.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param encryptionCertificate (Updatable) Encryption certificate
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder encryptionCertificate(@Nullable Output<String> encryptionCertificate) {
            $.encryptionCertificate = encryptionCertificate;
            return this;
        }

        /**
         * @param encryptionCertificate (Updatable) Encryption certificate
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder encryptionCertificate(String encryptionCertificate) {
            return encryptionCertificate(Output.of(encryptionCertificate));
        }

        /**
         * @param externalId (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder externalId(@Nullable Output<String> externalId) {
            $.externalId = externalId;
            return this;
        }

        /**
         * @param externalId (Updatable) An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder externalId(String externalId) {
            return externalId(Output.of(externalId));
        }

        /**
         * @param iconUrl (Updatable) Identity Provider Icon URL.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder iconUrl(@Nullable Output<String> iconUrl) {
            $.iconUrl = iconUrl;
            return this;
        }

        /**
         * @param iconUrl (Updatable) Identity Provider Icon URL.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder iconUrl(String iconUrl) {
            return iconUrl(Output.of(iconUrl));
        }

        /**
         * @param idcsCreatedBies (Updatable) The User or App who created the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: true
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsCreatedBies(@Nullable Output<List<DomainsIdentityProviderIdcsCreatedByArgs>> idcsCreatedBies) {
            $.idcsCreatedBies = idcsCreatedBies;
            return this;
        }

        /**
         * @param idcsCreatedBies (Updatable) The User or App who created the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: true
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsCreatedBies(List<DomainsIdentityProviderIdcsCreatedByArgs> idcsCreatedBies) {
            return idcsCreatedBies(Output.of(idcsCreatedBies));
        }

        /**
         * @param idcsCreatedBies (Updatable) The User or App who created the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: true
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsCreatedBies(DomainsIdentityProviderIdcsCreatedByArgs... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(@Nullable Output<String> idcsEndpoint) {
            $.idcsEndpoint = idcsEndpoint;
            return this;
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(String idcsEndpoint) {
            return idcsEndpoint(Output.of(idcsEndpoint));
        }

        /**
         * @param idcsLastModifiedBies (Updatable) The User or App who modified the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsLastModifiedBies(@Nullable Output<List<DomainsIdentityProviderIdcsLastModifiedByArgs>> idcsLastModifiedBies) {
            $.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }

        /**
         * @param idcsLastModifiedBies (Updatable) The User or App who modified the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsLastModifiedBies(List<DomainsIdentityProviderIdcsLastModifiedByArgs> idcsLastModifiedBies) {
            return idcsLastModifiedBies(Output.of(idcsLastModifiedBies));
        }

        /**
         * @param idcsLastModifiedBies (Updatable) The User or App who modified the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsLastModifiedBies(DomainsIdentityProviderIdcsLastModifiedByArgs... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }

        /**
         * @param idcsLastUpgradedInRelease (Updatable) The release number when the resource was upgraded.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsLastUpgradedInRelease(@Nullable Output<String> idcsLastUpgradedInRelease) {
            $.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }

        /**
         * @param idcsLastUpgradedInRelease (Updatable) The release number when the resource was upgraded.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            return idcsLastUpgradedInRelease(Output.of(idcsLastUpgradedInRelease));
        }

        /**
         * @param idcsPreventedOperations (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsPreventedOperations(@Nullable Output<List<String>> idcsPreventedOperations) {
            $.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }

        /**
         * @param idcsPreventedOperations (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            return idcsPreventedOperations(Output.of(idcsPreventedOperations));
        }

        /**
         * @param idcsPreventedOperations (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }

        /**
         * @param idpSsoUrl (Updatable) Identity Provider SSO URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idpSsoUrl(@Nullable Output<String> idpSsoUrl) {
            $.idpSsoUrl = idpSsoUrl;
            return this;
        }

        /**
         * @param idpSsoUrl (Updatable) Identity Provider SSO URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idpSsoUrl(String idpSsoUrl) {
            return idpSsoUrl(Output.of(idpSsoUrl));
        }

        /**
         * @param includeSigningCertInSignature (Updatable) Set to true to include the signing certificate in the signature.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder includeSigningCertInSignature(@Nullable Output<Boolean> includeSigningCertInSignature) {
            $.includeSigningCertInSignature = includeSigningCertInSignature;
            return this;
        }

        /**
         * @param includeSigningCertInSignature (Updatable) Set to true to include the signing certificate in the signature.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder includeSigningCertInSignature(Boolean includeSigningCertInSignature) {
            return includeSigningCertInSignature(Output.of(includeSigningCertInSignature));
        }

        /**
         * @param jitUserProvAssignedGroups (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvAssignedGroups(@Nullable Output<List<DomainsIdentityProviderJitUserProvAssignedGroupArgs>> jitUserProvAssignedGroups) {
            $.jitUserProvAssignedGroups = jitUserProvAssignedGroups;
            return this;
        }

        /**
         * @param jitUserProvAssignedGroups (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvAssignedGroups(List<DomainsIdentityProviderJitUserProvAssignedGroupArgs> jitUserProvAssignedGroups) {
            return jitUserProvAssignedGroups(Output.of(jitUserProvAssignedGroups));
        }

        /**
         * @param jitUserProvAssignedGroups (Updatable) Refers to every group of which a JIT-provisioned User should be a member.  Just-in-Time user-provisioning applies this static list when jitUserProvGroupStaticListEnabled:true.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvAssignedGroups(DomainsIdentityProviderJitUserProvAssignedGroupArgs... jitUserProvAssignedGroups) {
            return jitUserProvAssignedGroups(List.of(jitUserProvAssignedGroups));
        }

        /**
         * @param jitUserProvAttributeUpdateEnabled (Updatable) Set to true to indicate JIT User Creation is enabled
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvAttributeUpdateEnabled(@Nullable Output<Boolean> jitUserProvAttributeUpdateEnabled) {
            $.jitUserProvAttributeUpdateEnabled = jitUserProvAttributeUpdateEnabled;
            return this;
        }

        /**
         * @param jitUserProvAttributeUpdateEnabled (Updatable) Set to true to indicate JIT User Creation is enabled
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvAttributeUpdateEnabled(Boolean jitUserProvAttributeUpdateEnabled) {
            return jitUserProvAttributeUpdateEnabled(Output.of(jitUserProvAttributeUpdateEnabled));
        }

        /**
         * @param jitUserProvAttributes (Updatable) Assertion To User Mapping
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCompositeKey: [value]
         * * idcsSearchable: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvAttributes(@Nullable Output<DomainsIdentityProviderJitUserProvAttributesArgs> jitUserProvAttributes) {
            $.jitUserProvAttributes = jitUserProvAttributes;
            return this;
        }

        /**
         * @param jitUserProvAttributes (Updatable) Assertion To User Mapping
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCompositeKey: [value]
         * * idcsSearchable: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvAttributes(DomainsIdentityProviderJitUserProvAttributesArgs jitUserProvAttributes) {
            return jitUserProvAttributes(Output.of(jitUserProvAttributes));
        }

        /**
         * @param jitUserProvCreateUserEnabled (Updatable) Set to true to indicate JIT User Creation is enabled
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvCreateUserEnabled(@Nullable Output<Boolean> jitUserProvCreateUserEnabled) {
            $.jitUserProvCreateUserEnabled = jitUserProvCreateUserEnabled;
            return this;
        }

        /**
         * @param jitUserProvCreateUserEnabled (Updatable) Set to true to indicate JIT User Creation is enabled
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvCreateUserEnabled(Boolean jitUserProvCreateUserEnabled) {
            return jitUserProvCreateUserEnabled(Output.of(jitUserProvCreateUserEnabled));
        }

        /**
         * @param jitUserProvEnabled (Updatable) Set to true to indicate JIT User Provisioning is enabled
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvEnabled(@Nullable Output<Boolean> jitUserProvEnabled) {
            $.jitUserProvEnabled = jitUserProvEnabled;
            return this;
        }

        /**
         * @param jitUserProvEnabled (Updatable) Set to true to indicate JIT User Provisioning is enabled
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvEnabled(Boolean jitUserProvEnabled) {
            return jitUserProvEnabled(Output.of(jitUserProvEnabled));
        }

        /**
         * @param jitUserProvGroupAssertionAttributeEnabled (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupAssertionAttributeEnabled(@Nullable Output<Boolean> jitUserProvGroupAssertionAttributeEnabled) {
            $.jitUserProvGroupAssertionAttributeEnabled = jitUserProvGroupAssertionAttributeEnabled;
            return this;
        }

        /**
         * @param jitUserProvGroupAssertionAttributeEnabled (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned based on assertion attribute
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupAssertionAttributeEnabled(Boolean jitUserProvGroupAssertionAttributeEnabled) {
            return jitUserProvGroupAssertionAttributeEnabled(Output.of(jitUserProvGroupAssertionAttributeEnabled));
        }

        /**
         * @param jitUserProvGroupAssignmentMethod (Updatable) The default value is &#39;Overwrite&#39;, which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify &#39;Merge&#39; if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupAssignmentMethod(@Nullable Output<String> jitUserProvGroupAssignmentMethod) {
            $.jitUserProvGroupAssignmentMethod = jitUserProvGroupAssignmentMethod;
            return this;
        }

        /**
         * @param jitUserProvGroupAssignmentMethod (Updatable) The default value is &#39;Overwrite&#39;, which tells Just-In-Time user-provisioning to replace any current group-assignments for a User with those assigned by assertions and/or those assigned statically. Specify &#39;Merge&#39; if you want Just-In-Time user-provisioning to combine its group-assignments with those the user already has.
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupAssignmentMethod(String jitUserProvGroupAssignmentMethod) {
            return jitUserProvGroupAssignmentMethod(Output.of(jitUserProvGroupAssignmentMethod));
        }

        /**
         * @param jitUserProvGroupMappingMode (Updatable) Property to indicate the mode of group mapping
         * 
         * **Added In:** 2205120021
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupMappingMode(@Nullable Output<String> jitUserProvGroupMappingMode) {
            $.jitUserProvGroupMappingMode = jitUserProvGroupMappingMode;
            return this;
        }

        /**
         * @param jitUserProvGroupMappingMode (Updatable) Property to indicate the mode of group mapping
         * 
         * **Added In:** 2205120021
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupMappingMode(String jitUserProvGroupMappingMode) {
            return jitUserProvGroupMappingMode(Output.of(jitUserProvGroupMappingMode));
        }

        /**
         * @param jitUserProvGroupMappings (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
         * 
         * **Added In:** 2205120021
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [idpGroup]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupMappings(@Nullable Output<List<DomainsIdentityProviderJitUserProvGroupMappingArgs>> jitUserProvGroupMappings) {
            $.jitUserProvGroupMappings = jitUserProvGroupMappings;
            return this;
        }

        /**
         * @param jitUserProvGroupMappings (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
         * 
         * **Added In:** 2205120021
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [idpGroup]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupMappings(List<DomainsIdentityProviderJitUserProvGroupMappingArgs> jitUserProvGroupMappings) {
            return jitUserProvGroupMappings(Output.of(jitUserProvGroupMappings));
        }

        /**
         * @param jitUserProvGroupMappings (Updatable) The list of mappings between the Identity Domain Group and the IDP group.
         * 
         * **Added In:** 2205120021
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [idpGroup]
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupMappings(DomainsIdentityProviderJitUserProvGroupMappingArgs... jitUserProvGroupMappings) {
            return jitUserProvGroupMappings(List.of(jitUserProvGroupMappings));
        }

        /**
         * @param jitUserProvGroupSamlAttributeName (Updatable) Name of the assertion attribute containing the users groups
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupSamlAttributeName(@Nullable Output<String> jitUserProvGroupSamlAttributeName) {
            $.jitUserProvGroupSamlAttributeName = jitUserProvGroupSamlAttributeName;
            return this;
        }

        /**
         * @param jitUserProvGroupSamlAttributeName (Updatable) Name of the assertion attribute containing the users groups
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupSamlAttributeName(String jitUserProvGroupSamlAttributeName) {
            return jitUserProvGroupSamlAttributeName(Output.of(jitUserProvGroupSamlAttributeName));
        }

        /**
         * @param jitUserProvGroupStaticListEnabled (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupStaticListEnabled(@Nullable Output<Boolean> jitUserProvGroupStaticListEnabled) {
            $.jitUserProvGroupStaticListEnabled = jitUserProvGroupStaticListEnabled;
            return this;
        }

        /**
         * @param jitUserProvGroupStaticListEnabled (Updatable) Set to true to indicate JIT User Provisioning Groups should be assigned from a static list
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvGroupStaticListEnabled(Boolean jitUserProvGroupStaticListEnabled) {
            return jitUserProvGroupStaticListEnabled(Output.of(jitUserProvGroupStaticListEnabled));
        }

        /**
         * @param jitUserProvIgnoreErrorOnAbsentGroups (Updatable) Set to true to indicate ignoring absence of group while provisioning
         * 
         * **Added In:** 2111112015
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsAddedSinceVersion: 30
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvIgnoreErrorOnAbsentGroups(@Nullable Output<Boolean> jitUserProvIgnoreErrorOnAbsentGroups) {
            $.jitUserProvIgnoreErrorOnAbsentGroups = jitUserProvIgnoreErrorOnAbsentGroups;
            return this;
        }

        /**
         * @param jitUserProvIgnoreErrorOnAbsentGroups (Updatable) Set to true to indicate ignoring absence of group while provisioning
         * 
         * **Added In:** 2111112015
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsAddedSinceVersion: 30
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder jitUserProvIgnoreErrorOnAbsentGroups(Boolean jitUserProvIgnoreErrorOnAbsentGroups) {
            return jitUserProvIgnoreErrorOnAbsentGroups(Output.of(jitUserProvIgnoreErrorOnAbsentGroups));
        }

        /**
         * @param logoutBinding (Updatable) HTTP binding to use for logout.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder logoutBinding(@Nullable Output<String> logoutBinding) {
            $.logoutBinding = logoutBinding;
            return this;
        }

        /**
         * @param logoutBinding (Updatable) HTTP binding to use for logout.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder logoutBinding(String logoutBinding) {
            return logoutBinding(Output.of(logoutBinding));
        }

        /**
         * @param logoutEnabled (Updatable) Set to true to enable logout.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder logoutEnabled(@Nullable Output<Boolean> logoutEnabled) {
            $.logoutEnabled = logoutEnabled;
            return this;
        }

        /**
         * @param logoutEnabled (Updatable) Set to true to enable logout.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder logoutEnabled(Boolean logoutEnabled) {
            return logoutEnabled(Output.of(logoutEnabled));
        }

        /**
         * @param logoutRequestUrl (Updatable) Logout request URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder logoutRequestUrl(@Nullable Output<String> logoutRequestUrl) {
            $.logoutRequestUrl = logoutRequestUrl;
            return this;
        }

        /**
         * @param logoutRequestUrl (Updatable) Logout request URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder logoutRequestUrl(String logoutRequestUrl) {
            return logoutRequestUrl(Output.of(logoutRequestUrl));
        }

        /**
         * @param logoutResponseUrl (Updatable) Logout response URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder logoutResponseUrl(@Nullable Output<String> logoutResponseUrl) {
            $.logoutResponseUrl = logoutResponseUrl;
            return this;
        }

        /**
         * @param logoutResponseUrl (Updatable) Logout response URL
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder logoutResponseUrl(String logoutResponseUrl) {
            return logoutResponseUrl(Output.of(logoutResponseUrl));
        }

        /**
         * @param metadata (Updatable) Metadata
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata (Updatable) Metadata
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder metadata(String metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param metas (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder metas(@Nullable Output<List<DomainsIdentityProviderMetaArgs>> metas) {
            $.metas = metas;
            return this;
        }

        /**
         * @param metas (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder metas(List<DomainsIdentityProviderMetaArgs> metas) {
            return metas(Output.of(metas));
        }

        /**
         * @param metas (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder metas(DomainsIdentityProviderMetaArgs... metas) {
            return metas(List.of(metas));
        }

        /**
         * @param nameIdFormat (Updatable) Default authentication request name ID format.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder nameIdFormat(@Nullable Output<String> nameIdFormat) {
            $.nameIdFormat = nameIdFormat;
            return this;
        }

        /**
         * @param nameIdFormat (Updatable) Default authentication request name ID format.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder nameIdFormat(String nameIdFormat) {
            return nameIdFormat(Output.of(nameIdFormat));
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(@Nullable Output<String> ocid) {
            $.ocid = ocid;
            return this;
        }

        /**
         * @param ocid (Updatable) Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(String ocid) {
            return ocid(Output.of(ocid));
        }

        /**
         * @param partnerName (Updatable) Unique name of the trusted Identity Provider.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: server
         * 
         * @return builder
         * 
         */
        public Builder partnerName(@Nullable Output<String> partnerName) {
            $.partnerName = partnerName;
            return this;
        }

        /**
         * @param partnerName (Updatable) Unique name of the trusted Identity Provider.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: server
         * 
         * @return builder
         * 
         */
        public Builder partnerName(String partnerName) {
            return partnerName(Output.of(partnerName));
        }

        /**
         * @param partnerProviderId (Updatable) Provider ID
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: server
         * 
         * @return builder
         * 
         */
        public Builder partnerProviderId(@Nullable Output<String> partnerProviderId) {
            $.partnerProviderId = partnerProviderId;
            return this;
        }

        /**
         * @param partnerProviderId (Updatable) Provider ID
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: server
         * 
         * @return builder
         * 
         */
        public Builder partnerProviderId(String partnerProviderId) {
            return partnerProviderId(Output.of(partnerProviderId));
        }

        /**
         * @param requestedAuthenticationContexts (Updatable) SAML SP authentication type.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requestedAuthenticationContexts(@Nullable Output<List<String>> requestedAuthenticationContexts) {
            $.requestedAuthenticationContexts = requestedAuthenticationContexts;
            return this;
        }

        /**
         * @param requestedAuthenticationContexts (Updatable) SAML SP authentication type.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requestedAuthenticationContexts(List<String> requestedAuthenticationContexts) {
            return requestedAuthenticationContexts(Output.of(requestedAuthenticationContexts));
        }

        /**
         * @param requestedAuthenticationContexts (Updatable) SAML SP authentication type.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requestedAuthenticationContexts(String... requestedAuthenticationContexts) {
            return requestedAuthenticationContexts(List.of(requestedAuthenticationContexts));
        }

        /**
         * @param requireForceAuthn (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requireForceAuthn(@Nullable Output<Boolean> requireForceAuthn) {
            $.requireForceAuthn = requireForceAuthn;
            return this;
        }

        /**
         * @param requireForceAuthn (Updatable) This SP requires requests SAML IdP to enforce re-authentication.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requireForceAuthn(Boolean requireForceAuthn) {
            return requireForceAuthn(Output.of(requireForceAuthn));
        }

        /**
         * @param requiresEncryptedAssertion (Updatable) SAML SP must accept encrypted assertion only.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requiresEncryptedAssertion(@Nullable Output<Boolean> requiresEncryptedAssertion) {
            $.requiresEncryptedAssertion = requiresEncryptedAssertion;
            return this;
        }

        /**
         * @param requiresEncryptedAssertion (Updatable) SAML SP must accept encrypted assertion only.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requiresEncryptedAssertion(Boolean requiresEncryptedAssertion) {
            return requiresEncryptedAssertion(Output.of(requiresEncryptedAssertion));
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(@Nullable Output<String> resourceTypeSchemaVersion) {
            $.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }

        /**
         * @param resourceTypeSchemaVersion (Updatable) An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(String resourceTypeSchemaVersion) {
            return resourceTypeSchemaVersion(Output.of(resourceTypeSchemaVersion));
        }

        /**
         * @param samlHoKrequired (Updatable) SAML SP HoK Enabled.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder samlHoKrequired(@Nullable Output<Boolean> samlHoKrequired) {
            $.samlHoKrequired = samlHoKrequired;
            return this;
        }

        /**
         * @param samlHoKrequired (Updatable) SAML SP HoK Enabled.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder samlHoKrequired(Boolean samlHoKrequired) {
            return samlHoKrequired(Output.of(samlHoKrequired));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(@Nullable Output<List<String>> schemas) {
            $.schemas = schemas;
            return this;
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(List<String> schemas) {
            return schemas(Output.of(schemas));
        }

        /**
         * @param schemas (Updatable) REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }

        /**
         * @param serviceInstanceIdentifier (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
         * 
         * **Added In:** 18.2.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: never
         * * type: string
         * * uniqueness: server
         * 
         * @return builder
         * 
         */
        public Builder serviceInstanceIdentifier(@Nullable Output<String> serviceInstanceIdentifier) {
            $.serviceInstanceIdentifier = serviceInstanceIdentifier;
            return this;
        }

        /**
         * @param serviceInstanceIdentifier (Updatable) The serviceInstanceIdentifier of the App that hosts this IdP. This value will match the opcServiceInstanceGUID of any service-instance that the IdP represents.
         * 
         * **Added In:** 18.2.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: never
         * * type: string
         * * uniqueness: server
         * 
         * @return builder
         * 
         */
        public Builder serviceInstanceIdentifier(String serviceInstanceIdentifier) {
            return serviceInstanceIdentifier(Output.of(serviceInstanceIdentifier));
        }

        /**
         * @param shownOnLoginPage (Updatable) Set to true to indicate whether to show IdP in login page or not.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder shownOnLoginPage(@Nullable Output<Boolean> shownOnLoginPage) {
            $.shownOnLoginPage = shownOnLoginPage;
            return this;
        }

        /**
         * @param shownOnLoginPage (Updatable) Set to true to indicate whether to show IdP in login page or not.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder shownOnLoginPage(Boolean shownOnLoginPage) {
            return shownOnLoginPage(Output.of(shownOnLoginPage));
        }

        /**
         * @param signatureHashAlgorithm (Updatable) Signature hash algorithm.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder signatureHashAlgorithm(@Nullable Output<String> signatureHashAlgorithm) {
            $.signatureHashAlgorithm = signatureHashAlgorithm;
            return this;
        }

        /**
         * @param signatureHashAlgorithm (Updatable) Signature hash algorithm.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder signatureHashAlgorithm(String signatureHashAlgorithm) {
            return signatureHashAlgorithm(Output.of(signatureHashAlgorithm));
        }

        /**
         * @param signingCertificate (Updatable) Signing certificate
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder signingCertificate(@Nullable Output<String> signingCertificate) {
            $.signingCertificate = signingCertificate;
            return this;
        }

        /**
         * @param signingCertificate (Updatable) Signing certificate
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder signingCertificate(String signingCertificate) {
            return signingCertificate(Output.of(signingCertificate));
        }

        /**
         * @param succinctId (Updatable) Succinct ID
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: server
         * 
         * @return builder
         * 
         */
        public Builder succinctId(@Nullable Output<String> succinctId) {
            $.succinctId = succinctId;
            return this;
        }

        /**
         * @param succinctId (Updatable) Succinct ID
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: server
         * 
         * @return builder
         * 
         */
        public Builder succinctId(String succinctId) {
            return succinctId(Output.of(succinctId));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DomainsIdentityProviderTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DomainsIdentityProviderTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags (Updatable) A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(DomainsIdentityProviderTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param tenancyOcid (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tenancyOcid(@Nullable Output<String> tenancyOcid) {
            $.tenancyOcid = tenancyOcid;
            return this;
        }

        /**
         * @param tenancyOcid (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tenancyOcid(String tenancyOcid) {
            return tenancyOcid(Output.of(tenancyOcid));
        }

        /**
         * @param tenantProviderId (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
         * 
         * **Added In:** 19.2.1
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tenantProviderId(@Nullable Output<String> tenantProviderId) {
            $.tenantProviderId = tenantProviderId;
            return this;
        }

        /**
         * @param tenantProviderId (Updatable) The alternate Provider ID to be used as the Oracle Identity Cloud Service providerID (instead of the one in SamlSettings) when interacting with this IdP.
         * 
         * **Added In:** 19.2.1
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tenantProviderId(String tenantProviderId) {
            return tenantProviderId(Output.of(tenantProviderId));
        }

        /**
         * @param type (Updatable) Identity Provider Type
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Identity Provider Type
         * 
         * **Added In:** 20.1.3
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider (Updatable) Social Identity Provider Extension Schema
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider(@Nullable Output<DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs> urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider) {
            $.urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider = urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider;
            return this;
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider (Updatable) Social Identity Provider Extension Schema
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider(DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider) {
            return urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider(Output.of(urnietfparamsscimschemasoracleidcsextensionsocialIdentityProvider));
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionx509identityProvider (Updatable) X509 Identity Provider Extension Schema
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionx509identityProvider(@Nullable Output<DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderArgs> urnietfparamsscimschemasoracleidcsextensionx509identityProvider) {
            $.urnietfparamsscimschemasoracleidcsextensionx509identityProvider = urnietfparamsscimschemasoracleidcsextensionx509identityProvider;
            return this;
        }

        /**
         * @param urnietfparamsscimschemasoracleidcsextensionx509identityProvider (Updatable) X509 Identity Provider Extension Schema
         * 
         * @return builder
         * 
         */
        public Builder urnietfparamsscimschemasoracleidcsextensionx509identityProvider(DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionx509identityProviderArgs urnietfparamsscimschemasoracleidcsextensionx509identityProvider) {
            return urnietfparamsscimschemasoracleidcsextensionx509identityProvider(Output.of(urnietfparamsscimschemasoracleidcsextensionx509identityProvider));
        }

        /**
         * @param userMappingMethod (Updatable) User mapping method.
         * 
         * **Deprecated Since: 20.1.3**
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * * idcsValuePersistedInOtherAttribute: true
         * 
         * @return builder
         * 
         */
        public Builder userMappingMethod(@Nullable Output<String> userMappingMethod) {
            $.userMappingMethod = userMappingMethod;
            return this;
        }

        /**
         * @param userMappingMethod (Updatable) User mapping method.
         * 
         * **Deprecated Since: 20.1.3**
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * * idcsValuePersistedInOtherAttribute: true
         * 
         * @return builder
         * 
         */
        public Builder userMappingMethod(String userMappingMethod) {
            return userMappingMethod(Output.of(userMappingMethod));
        }

        /**
         * @param userMappingStoreAttribute (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.&lt;br&gt;You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the &lt;b&gt;Example of a Request Body&lt;/b&gt; section of the Examples tab for the &lt;a href=&#39;./op-admin-v1-identityproviders-post.html&#39;&gt;POST&lt;/a&gt; and &lt;a href=&#39;./op-admin-v1-identityproviders-id-put.html&#39;&gt;PUT&lt;/a&gt; methods of the /IdentityProviders endpoint.
         * 
         * **Deprecated Since: 20.1.3**
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * * idcsValuePersistedInOtherAttribute: true
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder userMappingStoreAttribute(@Nullable Output<String> userMappingStoreAttribute) {
            $.userMappingStoreAttribute = userMappingStoreAttribute;
            return this;
        }

        /**
         * @param userMappingStoreAttribute (Updatable) This property specifies the userstore attribute value that must match the incoming assertion attribute value or the incoming nameid attribute value in order to identify the user during SSO.&lt;br&gt;You can construct the userMappingStoreAttribute value by specifying attributes from the Oracle Identity Cloud Service Core Users schema. For examples of how to construct the userMappingStoreAttribute value, see the &lt;b&gt;Example of a Request Body&lt;/b&gt; section of the Examples tab for the &lt;a href=&#39;./op-admin-v1-identityproviders-post.html&#39;&gt;POST&lt;/a&gt; and &lt;a href=&#39;./op-admin-v1-identityproviders-id-put.html&#39;&gt;PUT&lt;/a&gt; methods of the /IdentityProviders endpoint.
         * 
         * **Deprecated Since: 20.1.3**
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * * idcsValuePersistedInOtherAttribute: true
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder userMappingStoreAttribute(String userMappingStoreAttribute) {
            return userMappingStoreAttribute(Output.of(userMappingStoreAttribute));
        }

        public DomainsIdentityProviderState build() {
            return $;
        }
    }

}
