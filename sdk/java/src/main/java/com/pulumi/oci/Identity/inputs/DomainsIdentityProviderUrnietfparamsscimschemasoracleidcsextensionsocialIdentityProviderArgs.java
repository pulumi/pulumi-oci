// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs Empty = new DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs();

    /**
     * (Updatable) Social IDP Access token URL
     * 
     */
    @Import(name="accessTokenUrl")
    private @Nullable Output<String> accessTokenUrl;

    /**
     * @return (Updatable) Social IDP Access token URL
     * 
     */
    public Optional<Output<String>> accessTokenUrl() {
        return Optional.ofNullable(this.accessTokenUrl);
    }

    /**
     * (Updatable) Whether account linking is enabled
     * 
     */
    @Import(name="accountLinkingEnabled", required=true)
    private Output<Boolean> accountLinkingEnabled;

    /**
     * @return (Updatable) Whether account linking is enabled
     * 
     */
    public Output<Boolean> accountLinkingEnabled() {
        return this.accountLinkingEnabled;
    }

    /**
     * (Updatable) Admin scope to request
     * 
     */
    @Import(name="adminScopes")
    private @Nullable Output<List<String>> adminScopes;

    /**
     * @return (Updatable) Admin scope to request
     * 
     */
    public Optional<Output<List<String>>> adminScopes() {
        return Optional.ofNullable(this.adminScopes);
    }

    /**
     * (Updatable) Social IDP Authorization URL
     * 
     */
    @Import(name="authzUrl")
    private @Nullable Output<String> authzUrl;

    /**
     * @return (Updatable) Social IDP Authorization URL
     * 
     */
    public Optional<Output<String>> authzUrl() {
        return Optional.ofNullable(this.authzUrl);
    }

    /**
     * (Updatable) Whether the client credential is contained in payload
     * 
     */
    @Import(name="clientCredentialInPayload")
    private @Nullable Output<Boolean> clientCredentialInPayload;

    /**
     * @return (Updatable) Whether the client credential is contained in payload
     * 
     */
    public Optional<Output<Boolean>> clientCredentialInPayload() {
        return Optional.ofNullable(this.clientCredentialInPayload);
    }

    /**
     * (Updatable) Social IDP allowed clock skew time
     * 
     */
    @Import(name="clockSkewInSeconds")
    private @Nullable Output<Integer> clockSkewInSeconds;

    /**
     * @return (Updatable) Social IDP allowed clock skew time
     * 
     */
    public Optional<Output<Integer>> clockSkewInSeconds() {
        return Optional.ofNullable(this.clockSkewInSeconds);
    }

    /**
     * (Updatable) Social IDP Client Application Client ID
     * 
     */
    @Import(name="consumerKey", required=true)
    private Output<String> consumerKey;

    /**
     * @return (Updatable) Social IDP Client Application Client ID
     * 
     */
    public Output<String> consumerKey() {
        return this.consumerKey;
    }

    /**
     * (Updatable) Social IDP Client Application Client Secret
     * 
     */
    @Import(name="consumerSecret", required=true)
    private Output<String> consumerSecret;

    /**
     * @return (Updatable) Social IDP Client Application Client Secret
     * 
     */
    public Output<String> consumerSecret() {
        return this.consumerSecret;
    }

    /**
     * (Updatable) Discovery URL
     * 
     */
    @Import(name="discoveryUrl")
    private @Nullable Output<String> discoveryUrl;

    /**
     * @return (Updatable) Discovery URL
     * 
     */
    public Optional<Output<String>> discoveryUrl() {
        return Optional.ofNullable(this.discoveryUrl);
    }

    /**
     * (Updatable) Id attribute used for account linking
     * 
     */
    @Import(name="idAttribute")
    private @Nullable Output<String> idAttribute;

    /**
     * @return (Updatable) Id attribute used for account linking
     * 
     */
    public Optional<Output<String>> idAttribute() {
        return Optional.ofNullable(this.idAttribute);
    }

    /**
     * (Updatable) Social IDP User profile URL
     * 
     */
    @Import(name="profileUrl")
    private @Nullable Output<String> profileUrl;

    /**
     * @return (Updatable) Social IDP User profile URL
     * 
     */
    public Optional<Output<String>> profileUrl() {
        return Optional.ofNullable(this.profileUrl);
    }

    /**
     * (Updatable) redirect URL for social idp
     * 
     */
    @Import(name="redirectUrl")
    private @Nullable Output<String> redirectUrl;

    /**
     * @return (Updatable) redirect URL for social idp
     * 
     */
    public Optional<Output<String>> redirectUrl() {
        return Optional.ofNullable(this.redirectUrl);
    }

    /**
     * (Updatable) Whether registration is enabled
     * 
     */
    @Import(name="registrationEnabled", required=true)
    private Output<Boolean> registrationEnabled;

    /**
     * @return (Updatable) Whether registration is enabled
     * 
     */
    public Output<Boolean> registrationEnabled() {
        return this.registrationEnabled;
    }

    /**
     * (Updatable) Scope to request
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return (Updatable) Scope to request
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * (Updatable) Service Provider Name
     * 
     */
    @Import(name="serviceProviderName", required=true)
    private Output<String> serviceProviderName;

    /**
     * @return (Updatable) Service Provider Name
     * 
     */
    public Output<String> serviceProviderName() {
        return this.serviceProviderName;
    }

    /**
     * (Updatable) Status
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) Status
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs() {}

    private DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs(DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs $) {
        this.accessTokenUrl = $.accessTokenUrl;
        this.accountLinkingEnabled = $.accountLinkingEnabled;
        this.adminScopes = $.adminScopes;
        this.authzUrl = $.authzUrl;
        this.clientCredentialInPayload = $.clientCredentialInPayload;
        this.clockSkewInSeconds = $.clockSkewInSeconds;
        this.consumerKey = $.consumerKey;
        this.consumerSecret = $.consumerSecret;
        this.discoveryUrl = $.discoveryUrl;
        this.idAttribute = $.idAttribute;
        this.profileUrl = $.profileUrl;
        this.redirectUrl = $.redirectUrl;
        this.registrationEnabled = $.registrationEnabled;
        this.scopes = $.scopes;
        this.serviceProviderName = $.serviceProviderName;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs $;

        public Builder() {
            $ = new DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs();
        }

        public Builder(DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs defaults) {
            $ = new DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessTokenUrl (Updatable) Social IDP Access token URL
         * 
         * @return builder
         * 
         */
        public Builder accessTokenUrl(@Nullable Output<String> accessTokenUrl) {
            $.accessTokenUrl = accessTokenUrl;
            return this;
        }

        /**
         * @param accessTokenUrl (Updatable) Social IDP Access token URL
         * 
         * @return builder
         * 
         */
        public Builder accessTokenUrl(String accessTokenUrl) {
            return accessTokenUrl(Output.of(accessTokenUrl));
        }

        /**
         * @param accountLinkingEnabled (Updatable) Whether account linking is enabled
         * 
         * @return builder
         * 
         */
        public Builder accountLinkingEnabled(Output<Boolean> accountLinkingEnabled) {
            $.accountLinkingEnabled = accountLinkingEnabled;
            return this;
        }

        /**
         * @param accountLinkingEnabled (Updatable) Whether account linking is enabled
         * 
         * @return builder
         * 
         */
        public Builder accountLinkingEnabled(Boolean accountLinkingEnabled) {
            return accountLinkingEnabled(Output.of(accountLinkingEnabled));
        }

        /**
         * @param adminScopes (Updatable) Admin scope to request
         * 
         * @return builder
         * 
         */
        public Builder adminScopes(@Nullable Output<List<String>> adminScopes) {
            $.adminScopes = adminScopes;
            return this;
        }

        /**
         * @param adminScopes (Updatable) Admin scope to request
         * 
         * @return builder
         * 
         */
        public Builder adminScopes(List<String> adminScopes) {
            return adminScopes(Output.of(adminScopes));
        }

        /**
         * @param adminScopes (Updatable) Admin scope to request
         * 
         * @return builder
         * 
         */
        public Builder adminScopes(String... adminScopes) {
            return adminScopes(List.of(adminScopes));
        }

        /**
         * @param authzUrl (Updatable) Social IDP Authorization URL
         * 
         * @return builder
         * 
         */
        public Builder authzUrl(@Nullable Output<String> authzUrl) {
            $.authzUrl = authzUrl;
            return this;
        }

        /**
         * @param authzUrl (Updatable) Social IDP Authorization URL
         * 
         * @return builder
         * 
         */
        public Builder authzUrl(String authzUrl) {
            return authzUrl(Output.of(authzUrl));
        }

        /**
         * @param clientCredentialInPayload (Updatable) Whether the client credential is contained in payload
         * 
         * @return builder
         * 
         */
        public Builder clientCredentialInPayload(@Nullable Output<Boolean> clientCredentialInPayload) {
            $.clientCredentialInPayload = clientCredentialInPayload;
            return this;
        }

        /**
         * @param clientCredentialInPayload (Updatable) Whether the client credential is contained in payload
         * 
         * @return builder
         * 
         */
        public Builder clientCredentialInPayload(Boolean clientCredentialInPayload) {
            return clientCredentialInPayload(Output.of(clientCredentialInPayload));
        }

        /**
         * @param clockSkewInSeconds (Updatable) Social IDP allowed clock skew time
         * 
         * @return builder
         * 
         */
        public Builder clockSkewInSeconds(@Nullable Output<Integer> clockSkewInSeconds) {
            $.clockSkewInSeconds = clockSkewInSeconds;
            return this;
        }

        /**
         * @param clockSkewInSeconds (Updatable) Social IDP allowed clock skew time
         * 
         * @return builder
         * 
         */
        public Builder clockSkewInSeconds(Integer clockSkewInSeconds) {
            return clockSkewInSeconds(Output.of(clockSkewInSeconds));
        }

        /**
         * @param consumerKey (Updatable) Social IDP Client Application Client ID
         * 
         * @return builder
         * 
         */
        public Builder consumerKey(Output<String> consumerKey) {
            $.consumerKey = consumerKey;
            return this;
        }

        /**
         * @param consumerKey (Updatable) Social IDP Client Application Client ID
         * 
         * @return builder
         * 
         */
        public Builder consumerKey(String consumerKey) {
            return consumerKey(Output.of(consumerKey));
        }

        /**
         * @param consumerSecret (Updatable) Social IDP Client Application Client Secret
         * 
         * @return builder
         * 
         */
        public Builder consumerSecret(Output<String> consumerSecret) {
            $.consumerSecret = consumerSecret;
            return this;
        }

        /**
         * @param consumerSecret (Updatable) Social IDP Client Application Client Secret
         * 
         * @return builder
         * 
         */
        public Builder consumerSecret(String consumerSecret) {
            return consumerSecret(Output.of(consumerSecret));
        }

        /**
         * @param discoveryUrl (Updatable) Discovery URL
         * 
         * @return builder
         * 
         */
        public Builder discoveryUrl(@Nullable Output<String> discoveryUrl) {
            $.discoveryUrl = discoveryUrl;
            return this;
        }

        /**
         * @param discoveryUrl (Updatable) Discovery URL
         * 
         * @return builder
         * 
         */
        public Builder discoveryUrl(String discoveryUrl) {
            return discoveryUrl(Output.of(discoveryUrl));
        }

        /**
         * @param idAttribute (Updatable) Id attribute used for account linking
         * 
         * @return builder
         * 
         */
        public Builder idAttribute(@Nullable Output<String> idAttribute) {
            $.idAttribute = idAttribute;
            return this;
        }

        /**
         * @param idAttribute (Updatable) Id attribute used for account linking
         * 
         * @return builder
         * 
         */
        public Builder idAttribute(String idAttribute) {
            return idAttribute(Output.of(idAttribute));
        }

        /**
         * @param profileUrl (Updatable) Social IDP User profile URL
         * 
         * @return builder
         * 
         */
        public Builder profileUrl(@Nullable Output<String> profileUrl) {
            $.profileUrl = profileUrl;
            return this;
        }

        /**
         * @param profileUrl (Updatable) Social IDP User profile URL
         * 
         * @return builder
         * 
         */
        public Builder profileUrl(String profileUrl) {
            return profileUrl(Output.of(profileUrl));
        }

        /**
         * @param redirectUrl (Updatable) redirect URL for social idp
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(@Nullable Output<String> redirectUrl) {
            $.redirectUrl = redirectUrl;
            return this;
        }

        /**
         * @param redirectUrl (Updatable) redirect URL for social idp
         * 
         * @return builder
         * 
         */
        public Builder redirectUrl(String redirectUrl) {
            return redirectUrl(Output.of(redirectUrl));
        }

        /**
         * @param registrationEnabled (Updatable) Whether registration is enabled
         * 
         * @return builder
         * 
         */
        public Builder registrationEnabled(Output<Boolean> registrationEnabled) {
            $.registrationEnabled = registrationEnabled;
            return this;
        }

        /**
         * @param registrationEnabled (Updatable) Whether registration is enabled
         * 
         * @return builder
         * 
         */
        public Builder registrationEnabled(Boolean registrationEnabled) {
            return registrationEnabled(Output.of(registrationEnabled));
        }

        /**
         * @param scopes (Updatable) Scope to request
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes (Updatable) Scope to request
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes (Updatable) Scope to request
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param serviceProviderName (Updatable) Service Provider Name
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderName(Output<String> serviceProviderName) {
            $.serviceProviderName = serviceProviderName;
            return this;
        }

        /**
         * @param serviceProviderName (Updatable) Service Provider Name
         * 
         * @return builder
         * 
         */
        public Builder serviceProviderName(String serviceProviderName) {
            return serviceProviderName(Output.of(serviceProviderName));
        }

        /**
         * @param status (Updatable) Status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) Status
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public DomainsIdentityProviderUrnietfparamsscimschemasoracleidcsextensionsocialIdentityProviderArgs build() {
            $.accountLinkingEnabled = Objects.requireNonNull($.accountLinkingEnabled, "expected parameter 'accountLinkingEnabled' to be non-null");
            $.consumerKey = Objects.requireNonNull($.consumerKey, "expected parameter 'consumerKey' to be non-null");
            $.consumerSecret = Objects.requireNonNull($.consumerSecret, "expected parameter 'consumerSecret' to be non-null");
            $.registrationEnabled = Objects.requireNonNull($.registrationEnabled, "expected parameter 'registrationEnabled' to be non-null");
            $.serviceProviderName = Objects.requireNonNull($.serviceProviderName, "expected parameter 'serviceProviderName' to be non-null");
            return $;
        }
    }

}
