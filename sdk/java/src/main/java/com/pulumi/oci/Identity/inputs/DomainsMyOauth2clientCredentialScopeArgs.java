// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DomainsMyOauth2clientCredentialScopeArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsMyOauth2clientCredentialScopeArgs Empty = new DomainsMyOauth2clientCredentialScopeArgs();

    /**
     * Audience
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * type: string
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * 
     */
    @Import(name="audience", required=true)
    private Output<String> audience;

    /**
     * @return Audience
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * type: string
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * 
     */
    public Output<String> audience() {
        return this.audience;
    }

    /**
     * Scope
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsScimCompliant: false
     * * type: string
     * * mutability: readWrite
     * * multiValued: false
     * * required: true
     * * returned: default
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    /**
     * @return Scope
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsScimCompliant: false
     * * type: string
     * * mutability: readWrite
     * * multiValued: false
     * * required: true
     * * returned: default
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    private DomainsMyOauth2clientCredentialScopeArgs() {}

    private DomainsMyOauth2clientCredentialScopeArgs(DomainsMyOauth2clientCredentialScopeArgs $) {
        this.audience = $.audience;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsMyOauth2clientCredentialScopeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsMyOauth2clientCredentialScopeArgs $;

        public Builder() {
            $ = new DomainsMyOauth2clientCredentialScopeArgs();
        }

        public Builder(DomainsMyOauth2clientCredentialScopeArgs defaults) {
            $ = new DomainsMyOauth2clientCredentialScopeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audience Audience
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * type: string
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * 
         * @return builder
         * 
         */
        public Builder audience(Output<String> audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param audience Audience
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * type: string
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * 
         * @return builder
         * 
         */
        public Builder audience(String audience) {
            return audience(Output.of(audience));
        }

        /**
         * @param scope Scope
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsScimCompliant: false
         * * type: string
         * * mutability: readWrite
         * * multiValued: false
         * * required: true
         * * returned: default
         * 
         * @return builder
         * 
         */
        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Scope
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsScimCompliant: false
         * * type: string
         * * mutability: readWrite
         * * multiValued: false
         * * required: true
         * * returned: default
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public DomainsMyOauth2clientCredentialScopeArgs build() {
            if ($.audience == null) {
                throw new MissingRequiredPropertyException("DomainsMyOauth2clientCredentialScopeArgs", "audience");
            }
            if ($.scope == null) {
                throw new MissingRequiredPropertyException("DomainsMyOauth2clientCredentialScopeArgs", "scope");
            }
            return $;
        }
    }

}
