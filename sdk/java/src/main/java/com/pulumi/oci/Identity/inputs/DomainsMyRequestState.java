// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.DomainsMyRequestApprovalDetailArgs;
import com.pulumi.oci.Identity.inputs.DomainsMyRequestIdcsCreatedByArgs;
import com.pulumi.oci.Identity.inputs.DomainsMyRequestIdcsLastModifiedByArgs;
import com.pulumi.oci.Identity.inputs.DomainsMyRequestMetaArgs;
import com.pulumi.oci.Identity.inputs.DomainsMyRequestRequestingArgs;
import com.pulumi.oci.Identity.inputs.DomainsMyRequestRequestorArgs;
import com.pulumi.oci.Identity.inputs.DomainsMyRequestTagArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsMyRequestState extends com.pulumi.resources.ResourceArgs {

    public static final DomainsMyRequestState Empty = new DomainsMyRequestState();

    /**
     * Requestor can set action to CANCEL to cancel the request or to ESCALATE to escalate the request while the request status is IN_PROGRESS. Requestor can&#39;t escalate the request if canceling or escalation is in progress.
     * 
     * **Added In:** 2307071836
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return Requestor can set action to CANCEL to cancel the request or to ESCALATE to escalate the request while the request status is IN_PROGRESS. Requestor can&#39;t escalate the request if canceling or escalation is in progress.
     * 
     * **Added In:** 2307071836
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * Approvals created for this request.
     * 
     * **Added In:** 2307071836
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="approvalDetails")
    private @Nullable Output<List<DomainsMyRequestApprovalDetailArgs>> approvalDetails;

    /**
     * @return Approvals created for this request.
     * 
     * **Added In:** 2307071836
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsMyRequestApprovalDetailArgs>>> approvalDetails() {
        return Optional.ofNullable(this.approvalDetails);
    }

    /**
     * A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    @Import(name="attributeSets")
    private @Nullable Output<List<String>> attributeSets;

    /**
     * @return A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    public Optional<Output<List<String>>> attributeSets() {
        return Optional.ofNullable(this.attributeSets);
    }

    /**
     * A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<String> attributes;

    /**
     * @return A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    public Optional<Output<String>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    @Import(name="authorization")
    private @Nullable Output<String> authorization;

    /**
     * @return The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public Optional<Output<String>> authorization() {
        return Optional.ofNullable(this.authorization);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="compartmentOcid")
    private @Nullable Output<String> compartmentOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> compartmentOcid() {
        return Optional.ofNullable(this.compartmentOcid);
    }

    /**
     * (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="deleteInProgress")
    private @Nullable Output<Boolean> deleteInProgress;

    /**
     * @return (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> deleteInProgress() {
        return Optional.ofNullable(this.deleteInProgress);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="domainOcid")
    private @Nullable Output<String> domainOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> domainOcid() {
        return Optional.ofNullable(this.domainOcid);
    }

    /**
     * (Updatable) Time by when Request expires
     * 
     * **Added In:** 2307071836
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: dateTime
     * * uniqueness: none
     * 
     */
    @Import(name="expires")
    private @Nullable Output<String> expires;

    /**
     * @return (Updatable) Time by when Request expires
     * 
     * **Added In:** 2307071836
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: dateTime
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> expires() {
        return Optional.ofNullable(this.expires);
    }

    /**
     * (Updatable) The User or App who created the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     * 
     */
    @Import(name="idcsCreatedBies")
    private @Nullable Output<List<DomainsMyRequestIdcsCreatedByArgs>> idcsCreatedBies;

    /**
     * @return (Updatable) The User or App who created the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: true
     * * returned: default
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsMyRequestIdcsCreatedByArgs>>> idcsCreatedBies() {
        return Optional.ofNullable(this.idcsCreatedBies);
    }

    /**
     * The basic endpoint for the identity domain
     * 
     */
    @Import(name="idcsEndpoint")
    private @Nullable Output<String> idcsEndpoint;

    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public Optional<Output<String>> idcsEndpoint() {
        return Optional.ofNullable(this.idcsEndpoint);
    }

    /**
     * (Updatable) The User or App who modified the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    @Import(name="idcsLastModifiedBies")
    private @Nullable Output<List<DomainsMyRequestIdcsLastModifiedByArgs>> idcsLastModifiedBies;

    /**
     * @return (Updatable) The User or App who modified the Resource
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsMyRequestIdcsLastModifiedByArgs>>> idcsLastModifiedBies() {
        return Optional.ofNullable(this.idcsLastModifiedBies);
    }

    /**
     * (Updatable) The release number when the resource was upgraded.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="idcsLastUpgradedInRelease")
    private @Nullable Output<String> idcsLastUpgradedInRelease;

    /**
     * @return (Updatable) The release number when the resource was upgraded.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> idcsLastUpgradedInRelease() {
        return Optional.ofNullable(this.idcsLastUpgradedInRelease);
    }

    /**
     * (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="idcsPreventedOperations")
    private @Nullable Output<List<String>> idcsPreventedOperations;

    /**
     * @return (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> idcsPreventedOperations() {
        return Optional.ofNullable(this.idcsPreventedOperations);
    }

    /**
     * justification
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="justification")
    private @Nullable Output<String> justification;

    /**
     * @return justification
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> justification() {
        return Optional.ofNullable(this.justification);
    }

    /**
     * (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     * 
     */
    @Import(name="metas")
    private @Nullable Output<List<DomainsMyRequestMetaArgs>> metas;

    /**
     * @return (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
     * * type: complex
     * 
     */
    public Optional<Output<List<DomainsMyRequestMetaArgs>>> metas() {
        return Optional.ofNullable(this.metas);
    }

    /**
     * Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    @Import(name="ocid")
    private @Nullable Output<String> ocid;

    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: global
     * 
     */
    public Optional<Output<String>> ocid() {
        return Optional.ofNullable(this.ocid);
    }

    /**
     * Requestable resource reference.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="requesting")
    private @Nullable Output<DomainsMyRequestRequestingArgs> requesting;

    /**
     * @return Requestable resource reference.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<DomainsMyRequestRequestingArgs>> requesting() {
        return Optional.ofNullable(this.requesting);
    }

    /**
     * Requesting User
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="requestor")
    private @Nullable Output<DomainsMyRequestRequestorArgs> requestor;

    /**
     * @return Requesting User
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<DomainsMyRequestRequestorArgs>> requestor() {
        return Optional.ofNullable(this.requestor);
    }

    /**
     * An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    @Import(name="resourceTypeSchemaVersion")
    private @Nullable Output<String> resourceTypeSchemaVersion;

    /**
     * @return An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public Optional<Output<String>> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }

    /**
     * REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="schemas")
    private @Nullable Output<List<String>> schemas;

    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: true
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> schemas() {
        return Optional.ofNullable(this.schemas);
    }

    /**
     * (Updatable) status.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) status.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<DomainsMyRequestTagArgs>> tags;

    /**
     * @return A list of tags on this resource.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [key, value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsMyRequestTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="tenancyOcid")
    private @Nullable Output<String> tenancyOcid;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> tenancyOcid() {
        return Optional.ofNullable(this.tenancyOcid);
    }

    private DomainsMyRequestState() {}

    private DomainsMyRequestState(DomainsMyRequestState $) {
        this.action = $.action;
        this.approvalDetails = $.approvalDetails;
        this.attributeSets = $.attributeSets;
        this.attributes = $.attributes;
        this.authorization = $.authorization;
        this.compartmentOcid = $.compartmentOcid;
        this.deleteInProgress = $.deleteInProgress;
        this.domainOcid = $.domainOcid;
        this.expires = $.expires;
        this.idcsCreatedBies = $.idcsCreatedBies;
        this.idcsEndpoint = $.idcsEndpoint;
        this.idcsLastModifiedBies = $.idcsLastModifiedBies;
        this.idcsLastUpgradedInRelease = $.idcsLastUpgradedInRelease;
        this.idcsPreventedOperations = $.idcsPreventedOperations;
        this.justification = $.justification;
        this.metas = $.metas;
        this.ocid = $.ocid;
        this.requesting = $.requesting;
        this.requestor = $.requestor;
        this.resourceTypeSchemaVersion = $.resourceTypeSchemaVersion;
        this.schemas = $.schemas;
        this.status = $.status;
        this.tags = $.tags;
        this.tenancyOcid = $.tenancyOcid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsMyRequestState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsMyRequestState $;

        public Builder() {
            $ = new DomainsMyRequestState();
        }

        public Builder(DomainsMyRequestState defaults) {
            $ = new DomainsMyRequestState(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Requestor can set action to CANCEL to cancel the request or to ESCALATE to escalate the request while the request status is IN_PROGRESS. Requestor can&#39;t escalate the request if canceling or escalation is in progress.
         * 
         * **Added In:** 2307071836
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Requestor can set action to CANCEL to cancel the request or to ESCALATE to escalate the request while the request status is IN_PROGRESS. Requestor can&#39;t escalate the request if canceling or escalation is in progress.
         * 
         * **Added In:** 2307071836
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param approvalDetails Approvals created for this request.
         * 
         * **Added In:** 2307071836
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder approvalDetails(@Nullable Output<List<DomainsMyRequestApprovalDetailArgs>> approvalDetails) {
            $.approvalDetails = approvalDetails;
            return this;
        }

        /**
         * @param approvalDetails Approvals created for this request.
         * 
         * **Added In:** 2307071836
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder approvalDetails(List<DomainsMyRequestApprovalDetailArgs> approvalDetails) {
            return approvalDetails(Output.of(approvalDetails));
        }

        /**
         * @param approvalDetails Approvals created for this request.
         * 
         * **Added In:** 2307071836
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder approvalDetails(DomainsMyRequestApprovalDetailArgs... approvalDetails) {
            return approvalDetails(List.of(approvalDetails));
        }

        /**
         * @param attributeSets A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(@Nullable Output<List<String>> attributeSets) {
            $.attributeSets = attributeSets;
            return this;
        }

        /**
         * @param attributeSets A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(List<String> attributeSets) {
            return attributeSets(Output.of(attributeSets));
        }

        /**
         * @param attributeSets A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }

        /**
         * @param attributes A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<String> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
         * 
         * @return builder
         * 
         */
        public Builder attributes(String attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param authorization The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(@Nullable Output<String> authorization) {
            $.authorization = authorization;
            return this;
        }

        /**
         * @param authorization The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
         * 
         * @return builder
         * 
         */
        public Builder authorization(String authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param compartmentOcid (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder compartmentOcid(@Nullable Output<String> compartmentOcid) {
            $.compartmentOcid = compartmentOcid;
            return this;
        }

        /**
         * @param compartmentOcid (Updatable) Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder compartmentOcid(String compartmentOcid) {
            return compartmentOcid(Output.of(compartmentOcid));
        }

        /**
         * @param deleteInProgress (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder deleteInProgress(@Nullable Output<Boolean> deleteInProgress) {
            $.deleteInProgress = deleteInProgress;
            return this;
        }

        /**
         * @param deleteInProgress (Updatable) A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder deleteInProgress(Boolean deleteInProgress) {
            return deleteInProgress(Output.of(deleteInProgress));
        }

        /**
         * @param domainOcid (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder domainOcid(@Nullable Output<String> domainOcid) {
            $.domainOcid = domainOcid;
            return this;
        }

        /**
         * @param domainOcid (Updatable) Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder domainOcid(String domainOcid) {
            return domainOcid(Output.of(domainOcid));
        }

        /**
         * @param expires (Updatable) Time by when Request expires
         * 
         * **Added In:** 2307071836
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: dateTime
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder expires(@Nullable Output<String> expires) {
            $.expires = expires;
            return this;
        }

        /**
         * @param expires (Updatable) Time by when Request expires
         * 
         * **Added In:** 2307071836
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: dateTime
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder expires(String expires) {
            return expires(Output.of(expires));
        }

        /**
         * @param idcsCreatedBies (Updatable) The User or App who created the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: true
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsCreatedBies(@Nullable Output<List<DomainsMyRequestIdcsCreatedByArgs>> idcsCreatedBies) {
            $.idcsCreatedBies = idcsCreatedBies;
            return this;
        }

        /**
         * @param idcsCreatedBies (Updatable) The User or App who created the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: true
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsCreatedBies(List<DomainsMyRequestIdcsCreatedByArgs> idcsCreatedBies) {
            return idcsCreatedBies(Output.of(idcsCreatedBies));
        }

        /**
         * @param idcsCreatedBies (Updatable) The User or App who created the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: true
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsCreatedBies(DomainsMyRequestIdcsCreatedByArgs... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(@Nullable Output<String> idcsEndpoint) {
            $.idcsEndpoint = idcsEndpoint;
            return this;
        }

        /**
         * @param idcsEndpoint The basic endpoint for the identity domain
         * 
         * @return builder
         * 
         */
        public Builder idcsEndpoint(String idcsEndpoint) {
            return idcsEndpoint(Output.of(idcsEndpoint));
        }

        /**
         * @param idcsLastModifiedBies (Updatable) The User or App who modified the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsLastModifiedBies(@Nullable Output<List<DomainsMyRequestIdcsLastModifiedByArgs>> idcsLastModifiedBies) {
            $.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }

        /**
         * @param idcsLastModifiedBies (Updatable) The User or App who modified the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsLastModifiedBies(List<DomainsMyRequestIdcsLastModifiedByArgs> idcsLastModifiedBies) {
            return idcsLastModifiedBies(Output.of(idcsLastModifiedBies));
        }

        /**
         * @param idcsLastModifiedBies (Updatable) The User or App who modified the Resource
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder idcsLastModifiedBies(DomainsMyRequestIdcsLastModifiedByArgs... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }

        /**
         * @param idcsLastUpgradedInRelease (Updatable) The release number when the resource was upgraded.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsLastUpgradedInRelease(@Nullable Output<String> idcsLastUpgradedInRelease) {
            $.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }

        /**
         * @param idcsLastUpgradedInRelease (Updatable) The release number when the resource was upgraded.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            return idcsLastUpgradedInRelease(Output.of(idcsLastUpgradedInRelease));
        }

        /**
         * @param idcsPreventedOperations (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsPreventedOperations(@Nullable Output<List<String>> idcsPreventedOperations) {
            $.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }

        /**
         * @param idcsPreventedOperations (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            return idcsPreventedOperations(Output.of(idcsPreventedOperations));
        }

        /**
         * @param idcsPreventedOperations (Updatable) Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }

        /**
         * @param justification justification
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder justification(@Nullable Output<String> justification) {
            $.justification = justification;
            return this;
        }

        /**
         * @param justification justification
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder justification(String justification) {
            return justification(Output.of(justification));
        }

        /**
         * @param metas (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder metas(@Nullable Output<List<DomainsMyRequestMetaArgs>> metas) {
            $.metas = metas;
            return this;
        }

        /**
         * @param metas (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder metas(List<DomainsMyRequestMetaArgs> metas) {
            return metas(Output.of(metas));
        }

        /**
         * @param metas (Updatable) A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * idcsCsvAttributeNameMappings: [[columnHeaderName:Created Date, mapsTo:meta.created]]
         * * type: complex
         * 
         * @return builder
         * 
         */
        public Builder metas(DomainsMyRequestMetaArgs... metas) {
            return metas(List.of(metas));
        }

        /**
         * @param ocid Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(@Nullable Output<String> ocid) {
            $.ocid = ocid;
            return this;
        }

        /**
         * @param ocid Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: global
         * 
         * @return builder
         * 
         */
        public Builder ocid(String ocid) {
            return ocid(Output.of(ocid));
        }

        /**
         * @param requesting Requestable resource reference.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requesting(@Nullable Output<DomainsMyRequestRequestingArgs> requesting) {
            $.requesting = requesting;
            return this;
        }

        /**
         * @param requesting Requestable resource reference.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: default
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requesting(DomainsMyRequestRequestingArgs requesting) {
            return requesting(Output.of(requesting));
        }

        /**
         * @param requestor Requesting User
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requestor(@Nullable Output<DomainsMyRequestRequestorArgs> requestor) {
            $.requestor = requestor;
            return this;
        }

        /**
         * @param requestor Requesting User
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder requestor(DomainsMyRequestRequestorArgs requestor) {
            return requestor(Output.of(requestor));
        }

        /**
         * @param resourceTypeSchemaVersion An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(@Nullable Output<String> resourceTypeSchemaVersion) {
            $.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }

        /**
         * @param resourceTypeSchemaVersion An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
         * 
         * @return builder
         * 
         */
        public Builder resourceTypeSchemaVersion(String resourceTypeSchemaVersion) {
            return resourceTypeSchemaVersion(Output.of(resourceTypeSchemaVersion));
        }

        /**
         * @param schemas REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(@Nullable Output<List<String>> schemas) {
            $.schemas = schemas;
            return this;
        }

        /**
         * @param schemas REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(List<String> schemas) {
            return schemas(Output.of(schemas));
        }

        /**
         * @param schemas REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: true
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }

        /**
         * @param status (Updatable) status.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) status.
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<DomainsMyRequestTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(List<DomainsMyRequestTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A list of tags on this resource.
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [key, value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tags(DomainsMyRequestTagArgs... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param tenancyOcid (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder tenancyOcid(@Nullable Output<String> tenancyOcid) {
            $.tenancyOcid = tenancyOcid;
            return this;
        }

        /**
         * @param tenancyOcid (Updatable) Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder tenancyOcid(String tenancyOcid) {
            return tenancyOcid(Output.of(tenancyOcid));
        }

        public DomainsMyRequestState build() {
            return $;
        }
    }

}
