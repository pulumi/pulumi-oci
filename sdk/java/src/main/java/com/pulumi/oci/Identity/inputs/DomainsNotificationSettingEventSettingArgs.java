// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsNotificationSettingEventSettingArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsNotificationSettingEventSettingArgs Empty = new DomainsNotificationSettingEventSettingArgs();

    /**
     * (Updatable) Specify if notifications are enabled for the event
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return (Updatable) Specify if notifications are enabled for the event
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * (Updatable) IDCS-generated event
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="eventId", required=true)
    private Output<String> eventId;

    /**
     * @return (Updatable) IDCS-generated event
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> eventId() {
        return this.eventId;
    }

    private DomainsNotificationSettingEventSettingArgs() {}

    private DomainsNotificationSettingEventSettingArgs(DomainsNotificationSettingEventSettingArgs $) {
        this.enabled = $.enabled;
        this.eventId = $.eventId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsNotificationSettingEventSettingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsNotificationSettingEventSettingArgs $;

        public Builder() {
            $ = new DomainsNotificationSettingEventSettingArgs();
        }

        public Builder(DomainsNotificationSettingEventSettingArgs defaults) {
            $ = new DomainsNotificationSettingEventSettingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled (Updatable) Specify if notifications are enabled for the event
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled (Updatable) Specify if notifications are enabled for the event
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param eventId (Updatable) IDCS-generated event
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder eventId(Output<String> eventId) {
            $.eventId = eventId;
            return this;
        }

        /**
         * @param eventId (Updatable) IDCS-generated event
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder eventId(String eventId) {
            return eventId(Output.of(eventId));
        }

        public DomainsNotificationSettingEventSettingArgs build() {
            if ($.eventId == null) {
                throw new MissingRequiredPropertyException("DomainsNotificationSettingEventSettingArgs", "eventId");
            }
            return $;
        }
    }

}
