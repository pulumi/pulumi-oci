// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsRuleReturnArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsRuleReturnArgs Empty = new DomainsRuleReturnArgs();

    /**
     * (Updatable) Attribute name of an individual value to be returned.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return (Updatable) Attribute name of an individual value to be returned.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * (Updatable) The Groovy script that is run to generate output for the rule, if the policy type allows the return value to be a Groovy script.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="returnGroovy")
    private @Nullable Output<String> returnGroovy;

    /**
     * @return (Updatable) The Groovy script that is run to generate output for the rule, if the policy type allows the return value to be a Groovy script.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> returnGroovy() {
        return Optional.ofNullable(this.returnGroovy);
    }

    /**
     * (Updatable) Value of the tag.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) Value of the tag.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private DomainsRuleReturnArgs() {}

    private DomainsRuleReturnArgs(DomainsRuleReturnArgs $) {
        this.name = $.name;
        this.returnGroovy = $.returnGroovy;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsRuleReturnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsRuleReturnArgs $;

        public Builder() {
            $ = new DomainsRuleReturnArgs();
        }

        public Builder(DomainsRuleReturnArgs defaults) {
            $ = new DomainsRuleReturnArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name (Updatable) Attribute name of an individual value to be returned.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Attribute name of an individual value to be returned.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param returnGroovy (Updatable) The Groovy script that is run to generate output for the rule, if the policy type allows the return value to be a Groovy script.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder returnGroovy(@Nullable Output<String> returnGroovy) {
            $.returnGroovy = returnGroovy;
            return this;
        }

        /**
         * @param returnGroovy (Updatable) The Groovy script that is run to generate output for the rule, if the policy type allows the return value to be a Groovy script.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder returnGroovy(String returnGroovy) {
            return returnGroovy(Output.of(returnGroovy));
        }

        /**
         * @param value (Updatable) Value of the tag.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) Value of the tag.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DomainsRuleReturnArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
