// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsSelfRegistrationProfileUserAttributeArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsSelfRegistrationProfileUserAttributeArgs Empty = new DomainsSelfRegistrationProfileUserAttributeArgs();

    /**
     * (Updatable) If this attribute can be deleted
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="deletable")
    private @Nullable Output<Boolean> deletable;

    /**
     * @return (Updatable) If this attribute can be deleted
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> deletable() {
        return Optional.ofNullable(this.deletable);
    }

    /**
     * (Updatable) **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none Fully Qualified Attribute Name
     * 
     */
    @Import(name="fullyQualifiedAttributeName")
    private @Nullable Output<String> fullyQualifiedAttributeName;

    /**
     * @return (Updatable) **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none Fully Qualified Attribute Name
     * 
     */
    public Optional<Output<String>> fullyQualifiedAttributeName() {
        return Optional.ofNullable(this.fullyQualifiedAttributeName);
    }

    /**
     * (Updatable) Metadata of the user attribute
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<String> metadata;

    /**
     * @return (Updatable) Metadata of the user attribute
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * (Updatable) **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none Sequence Number for the attribute
     * 
     */
    @Import(name="seqNumber", required=true)
    private Output<Integer> seqNumber;

    /**
     * @return (Updatable) **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none Sequence Number for the attribute
     * 
     */
    public Output<Integer> seqNumber() {
        return this.seqNumber;
    }

    /**
     * (Updatable) name of the attribute
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) name of the attribute
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private DomainsSelfRegistrationProfileUserAttributeArgs() {}

    private DomainsSelfRegistrationProfileUserAttributeArgs(DomainsSelfRegistrationProfileUserAttributeArgs $) {
        this.deletable = $.deletable;
        this.fullyQualifiedAttributeName = $.fullyQualifiedAttributeName;
        this.metadata = $.metadata;
        this.seqNumber = $.seqNumber;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsSelfRegistrationProfileUserAttributeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsSelfRegistrationProfileUserAttributeArgs $;

        public Builder() {
            $ = new DomainsSelfRegistrationProfileUserAttributeArgs();
        }

        public Builder(DomainsSelfRegistrationProfileUserAttributeArgs defaults) {
            $ = new DomainsSelfRegistrationProfileUserAttributeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deletable (Updatable) If this attribute can be deleted
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder deletable(@Nullable Output<Boolean> deletable) {
            $.deletable = deletable;
            return this;
        }

        /**
         * @param deletable (Updatable) If this attribute can be deleted
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder deletable(Boolean deletable) {
            return deletable(Output.of(deletable));
        }

        /**
         * @param fullyQualifiedAttributeName (Updatable) **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none Fully Qualified Attribute Name
         * 
         * @return builder
         * 
         */
        public Builder fullyQualifiedAttributeName(@Nullable Output<String> fullyQualifiedAttributeName) {
            $.fullyQualifiedAttributeName = fullyQualifiedAttributeName;
            return this;
        }

        /**
         * @param fullyQualifiedAttributeName (Updatable) **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none Fully Qualified Attribute Name
         * 
         * @return builder
         * 
         */
        public Builder fullyQualifiedAttributeName(String fullyQualifiedAttributeName) {
            return fullyQualifiedAttributeName(Output.of(fullyQualifiedAttributeName));
        }

        /**
         * @param metadata (Updatable) Metadata of the user attribute
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata (Updatable) Metadata of the user attribute
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder metadata(String metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param seqNumber (Updatable) **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none Sequence Number for the attribute
         * 
         * @return builder
         * 
         */
        public Builder seqNumber(Output<Integer> seqNumber) {
            $.seqNumber = seqNumber;
            return this;
        }

        /**
         * @param seqNumber (Updatable) **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: integer
         * * uniqueness: none Sequence Number for the attribute
         * 
         * @return builder
         * 
         */
        public Builder seqNumber(Integer seqNumber) {
            return seqNumber(Output.of(seqNumber));
        }

        /**
         * @param value (Updatable) name of the attribute
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) name of the attribute
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DomainsSelfRegistrationProfileUserAttributeArgs build() {
            $.seqNumber = Objects.requireNonNull($.seqNumber, "expected parameter 'seqNumber' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
