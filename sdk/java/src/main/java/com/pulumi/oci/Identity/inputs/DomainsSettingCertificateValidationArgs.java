// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsSettingCertificateValidationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsSettingCertificateValidationArgs Empty = new DomainsSettingCertificateValidationArgs();

    /**
     * (Updatable) Use CRL as Fallback.
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="crlCheckOnOcspFailureEnabled")
    private @Nullable Output<Boolean> crlCheckOnOcspFailureEnabled;

    /**
     * @return (Updatable) Use CRL as Fallback.
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> crlCheckOnOcspFailureEnabled() {
        return Optional.ofNullable(this.crlCheckOnOcspFailureEnabled);
    }

    /**
     * (Updatable) CRL is enabled Configuration
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="crlEnabled")
    private @Nullable Output<Boolean> crlEnabled;

    /**
     * @return (Updatable) CRL is enabled Configuration
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> crlEnabled() {
        return Optional.ofNullable(this.crlEnabled);
    }

    /**
     * (Updatable) CRL Location.
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="crlLocation")
    private @Nullable Output<String> crlLocation;

    /**
     * @return (Updatable) CRL Location.
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> crlLocation() {
        return Optional.ofNullable(this.crlLocation);
    }

    /**
     * (Updatable) The CRL refresh interval in minutes
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="crlRefreshInterval")
    private @Nullable Output<Integer> crlRefreshInterval;

    /**
     * @return (Updatable) The CRL refresh interval in minutes
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Optional<Output<Integer>> crlRefreshInterval() {
        return Optional.ofNullable(this.crlRefreshInterval);
    }

    /**
     * (Updatable) OCSP is enabled Configuration
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="ocspEnabled")
    private @Nullable Output<Boolean> ocspEnabled;

    /**
     * @return (Updatable) OCSP is enabled Configuration
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> ocspEnabled() {
        return Optional.ofNullable(this.ocspEnabled);
    }

    /**
     * (Updatable) OCSP Responder URL
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="ocspResponderUrl")
    private @Nullable Output<String> ocspResponderUrl;

    /**
     * @return (Updatable) OCSP Responder URL
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> ocspResponderUrl() {
        return Optional.ofNullable(this.ocspResponderUrl);
    }

    /**
     * (Updatable) This setting says, OCSP Responder URL present in the issued certificate must be used. Otherwise, OCSP Responder URL from IDP or Settings.
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="ocspSettingsResponderUrlPreferred")
    private @Nullable Output<Boolean> ocspSettingsResponderUrlPreferred;

    /**
     * @return (Updatable) This setting says, OCSP Responder URL present in the issued certificate must be used. Otherwise, OCSP Responder URL from IDP or Settings.
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> ocspSettingsResponderUrlPreferred() {
        return Optional.ofNullable(this.ocspSettingsResponderUrlPreferred);
    }

    /**
     * (Updatable) OCSP Signing Certificate Alias
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="ocspSigningCertificateAlias")
    private @Nullable Output<String> ocspSigningCertificateAlias;

    /**
     * @return (Updatable) OCSP Signing Certificate Alias
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> ocspSigningCertificateAlias() {
        return Optional.ofNullable(this.ocspSigningCertificateAlias);
    }

    /**
     * (Updatable) The OCSP Timeout duration in minutes
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 10
     * * idcsMinValue: 1
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="ocspTimeoutDuration")
    private @Nullable Output<Integer> ocspTimeoutDuration;

    /**
     * @return (Updatable) The OCSP Timeout duration in minutes
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 10
     * * idcsMinValue: 1
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Optional<Output<Integer>> ocspTimeoutDuration() {
        return Optional.ofNullable(this.ocspTimeoutDuration);
    }

    /**
     * (Updatable) OCSP Accept unknown response status from ocsp responder.
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="ocspUnknownResponseStatusAllowed")
    private @Nullable Output<Boolean> ocspUnknownResponseStatusAllowed;

    /**
     * @return (Updatable) OCSP Accept unknown response status from ocsp responder.
     * 
     * **Added In:** 2010242156
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> ocspUnknownResponseStatusAllowed() {
        return Optional.ofNullable(this.ocspUnknownResponseStatusAllowed);
    }

    private DomainsSettingCertificateValidationArgs() {}

    private DomainsSettingCertificateValidationArgs(DomainsSettingCertificateValidationArgs $) {
        this.crlCheckOnOcspFailureEnabled = $.crlCheckOnOcspFailureEnabled;
        this.crlEnabled = $.crlEnabled;
        this.crlLocation = $.crlLocation;
        this.crlRefreshInterval = $.crlRefreshInterval;
        this.ocspEnabled = $.ocspEnabled;
        this.ocspResponderUrl = $.ocspResponderUrl;
        this.ocspSettingsResponderUrlPreferred = $.ocspSettingsResponderUrlPreferred;
        this.ocspSigningCertificateAlias = $.ocspSigningCertificateAlias;
        this.ocspTimeoutDuration = $.ocspTimeoutDuration;
        this.ocspUnknownResponseStatusAllowed = $.ocspUnknownResponseStatusAllowed;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsSettingCertificateValidationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsSettingCertificateValidationArgs $;

        public Builder() {
            $ = new DomainsSettingCertificateValidationArgs();
        }

        public Builder(DomainsSettingCertificateValidationArgs defaults) {
            $ = new DomainsSettingCertificateValidationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param crlCheckOnOcspFailureEnabled (Updatable) Use CRL as Fallback.
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder crlCheckOnOcspFailureEnabled(@Nullable Output<Boolean> crlCheckOnOcspFailureEnabled) {
            $.crlCheckOnOcspFailureEnabled = crlCheckOnOcspFailureEnabled;
            return this;
        }

        /**
         * @param crlCheckOnOcspFailureEnabled (Updatable) Use CRL as Fallback.
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder crlCheckOnOcspFailureEnabled(Boolean crlCheckOnOcspFailureEnabled) {
            return crlCheckOnOcspFailureEnabled(Output.of(crlCheckOnOcspFailureEnabled));
        }

        /**
         * @param crlEnabled (Updatable) CRL is enabled Configuration
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder crlEnabled(@Nullable Output<Boolean> crlEnabled) {
            $.crlEnabled = crlEnabled;
            return this;
        }

        /**
         * @param crlEnabled (Updatable) CRL is enabled Configuration
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder crlEnabled(Boolean crlEnabled) {
            return crlEnabled(Output.of(crlEnabled));
        }

        /**
         * @param crlLocation (Updatable) CRL Location.
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder crlLocation(@Nullable Output<String> crlLocation) {
            $.crlLocation = crlLocation;
            return this;
        }

        /**
         * @param crlLocation (Updatable) CRL Location.
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder crlLocation(String crlLocation) {
            return crlLocation(Output.of(crlLocation));
        }

        /**
         * @param crlRefreshInterval (Updatable) The CRL refresh interval in minutes
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder crlRefreshInterval(@Nullable Output<Integer> crlRefreshInterval) {
            $.crlRefreshInterval = crlRefreshInterval;
            return this;
        }

        /**
         * @param crlRefreshInterval (Updatable) The CRL refresh interval in minutes
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder crlRefreshInterval(Integer crlRefreshInterval) {
            return crlRefreshInterval(Output.of(crlRefreshInterval));
        }

        /**
         * @param ocspEnabled (Updatable) OCSP is enabled Configuration
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspEnabled(@Nullable Output<Boolean> ocspEnabled) {
            $.ocspEnabled = ocspEnabled;
            return this;
        }

        /**
         * @param ocspEnabled (Updatable) OCSP is enabled Configuration
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspEnabled(Boolean ocspEnabled) {
            return ocspEnabled(Output.of(ocspEnabled));
        }

        /**
         * @param ocspResponderUrl (Updatable) OCSP Responder URL
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspResponderUrl(@Nullable Output<String> ocspResponderUrl) {
            $.ocspResponderUrl = ocspResponderUrl;
            return this;
        }

        /**
         * @param ocspResponderUrl (Updatable) OCSP Responder URL
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspResponderUrl(String ocspResponderUrl) {
            return ocspResponderUrl(Output.of(ocspResponderUrl));
        }

        /**
         * @param ocspSettingsResponderUrlPreferred (Updatable) This setting says, OCSP Responder URL present in the issued certificate must be used. Otherwise, OCSP Responder URL from IDP or Settings.
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspSettingsResponderUrlPreferred(@Nullable Output<Boolean> ocspSettingsResponderUrlPreferred) {
            $.ocspSettingsResponderUrlPreferred = ocspSettingsResponderUrlPreferred;
            return this;
        }

        /**
         * @param ocspSettingsResponderUrlPreferred (Updatable) This setting says, OCSP Responder URL present in the issued certificate must be used. Otherwise, OCSP Responder URL from IDP or Settings.
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspSettingsResponderUrlPreferred(Boolean ocspSettingsResponderUrlPreferred) {
            return ocspSettingsResponderUrlPreferred(Output.of(ocspSettingsResponderUrlPreferred));
        }

        /**
         * @param ocspSigningCertificateAlias (Updatable) OCSP Signing Certificate Alias
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspSigningCertificateAlias(@Nullable Output<String> ocspSigningCertificateAlias) {
            $.ocspSigningCertificateAlias = ocspSigningCertificateAlias;
            return this;
        }

        /**
         * @param ocspSigningCertificateAlias (Updatable) OCSP Signing Certificate Alias
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspSigningCertificateAlias(String ocspSigningCertificateAlias) {
            return ocspSigningCertificateAlias(Output.of(ocspSigningCertificateAlias));
        }

        /**
         * @param ocspTimeoutDuration (Updatable) The OCSP Timeout duration in minutes
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 10
         * * idcsMinValue: 1
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspTimeoutDuration(@Nullable Output<Integer> ocspTimeoutDuration) {
            $.ocspTimeoutDuration = ocspTimeoutDuration;
            return this;
        }

        /**
         * @param ocspTimeoutDuration (Updatable) The OCSP Timeout duration in minutes
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * idcsMaxValue: 10
         * * idcsMinValue: 1
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspTimeoutDuration(Integer ocspTimeoutDuration) {
            return ocspTimeoutDuration(Output.of(ocspTimeoutDuration));
        }

        /**
         * @param ocspUnknownResponseStatusAllowed (Updatable) OCSP Accept unknown response status from ocsp responder.
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspUnknownResponseStatusAllowed(@Nullable Output<Boolean> ocspUnknownResponseStatusAllowed) {
            $.ocspUnknownResponseStatusAllowed = ocspUnknownResponseStatusAllowed;
            return this;
        }

        /**
         * @param ocspUnknownResponseStatusAllowed (Updatable) OCSP Accept unknown response status from ocsp responder.
         * 
         * **Added In:** 2010242156
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ocspUnknownResponseStatusAllowed(Boolean ocspUnknownResponseStatusAllowed) {
            return ocspUnknownResponseStatusAllowed(Output.of(ocspUnknownResponseStatusAllowed));
        }

        public DomainsSettingCertificateValidationArgs build() {
            return $;
        }
    }

}
