// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DomainsSettingDefaultCompanyNameArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsSettingDefaultCompanyNameArgs Empty = new DomainsSettingDefaultCompanyNameArgs();

    /**
     * (Updatable) Locale
     * 
     * **SCIM++ Properties:**
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;locales&#34; and attrValues.value eq &#34;$(loginTexts.locale)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * 
     */
    @Import(name="locale", required=true)
    private Output<String> locale;

    /**
     * @return (Updatable) Locale
     * 
     * **SCIM++ Properties:**
     * * idcsCanonicalValueSourceFilter: attrName eq &#34;locales&#34; and attrValues.value eq &#34;$(loginTexts.locale)&#34;
     * * idcsCanonicalValueSourceResourceType: AllowedValue
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * 
     */
    public Output<String> locale() {
        return this.locale;
    }

    /**
     * (Updatable) Custom claim value
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) Custom claim value
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private DomainsSettingDefaultCompanyNameArgs() {}

    private DomainsSettingDefaultCompanyNameArgs(DomainsSettingDefaultCompanyNameArgs $) {
        this.locale = $.locale;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsSettingDefaultCompanyNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsSettingDefaultCompanyNameArgs $;

        public Builder() {
            $ = new DomainsSettingDefaultCompanyNameArgs();
        }

        public Builder(DomainsSettingDefaultCompanyNameArgs defaults) {
            $ = new DomainsSettingDefaultCompanyNameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param locale (Updatable) Locale
         * 
         * **SCIM++ Properties:**
         * * idcsCanonicalValueSourceFilter: attrName eq &#34;locales&#34; and attrValues.value eq &#34;$(loginTexts.locale)&#34;
         * * idcsCanonicalValueSourceResourceType: AllowedValue
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder locale(Output<String> locale) {
            $.locale = locale;
            return this;
        }

        /**
         * @param locale (Updatable) Locale
         * 
         * **SCIM++ Properties:**
         * * idcsCanonicalValueSourceFilter: attrName eq &#34;locales&#34; and attrValues.value eq &#34;$(loginTexts.locale)&#34;
         * * idcsCanonicalValueSourceResourceType: AllowedValue
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * 
         * @return builder
         * 
         */
        public Builder locale(String locale) {
            return locale(Output.of(locale));
        }

        /**
         * @param value (Updatable) Custom claim value
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) Custom claim value
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DomainsSettingDefaultCompanyNameArgs build() {
            $.locale = Objects.requireNonNull($.locale, "expected parameter 'locale' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
