// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsSettingTenantCustomClaimArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsSettingTenantCustomClaimArgs Empty = new DomainsSettingTenantCustomClaimArgs();

    /**
     * (Updatable) Indicates if the custom claim is associated with all scopes
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="allScopes", required=true)
    private Output<Boolean> allScopes;

    /**
     * @return (Updatable) Indicates if the custom claim is associated with all scopes
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> allScopes() {
        return this.allScopes;
    }

    /**
     * (Updatable) Indicates if the custom claim is an expression
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="expression", required=true)
    private Output<Boolean> expression;

    /**
     * @return (Updatable) Indicates if the custom claim is an expression
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Output<Boolean> expression() {
        return this.expression;
    }

    /**
     * (Updatable) Indicates under what scenario the custom claim will be return
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="mode", required=true)
    private Output<String> mode;

    /**
     * @return (Updatable) Indicates under what scenario the custom claim will be return
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }

    /**
     * (Updatable) Custom claim name
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: server
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return (Updatable) Custom claim name
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: server
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * (Updatable) Scopes associated with a specific custom claim
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return (Updatable) Scopes associated with a specific custom claim
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * (Updatable) Indicates what type of token the custom claim will be embedded
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="tokenType", required=true)
    private Output<String> tokenType;

    /**
     * @return (Updatable) Indicates what type of token the custom claim will be embedded
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> tokenType() {
        return this.tokenType;
    }

    /**
     * (Updatable) Custom claim value
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) Custom claim value
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private DomainsSettingTenantCustomClaimArgs() {}

    private DomainsSettingTenantCustomClaimArgs(DomainsSettingTenantCustomClaimArgs $) {
        this.allScopes = $.allScopes;
        this.expression = $.expression;
        this.mode = $.mode;
        this.name = $.name;
        this.scopes = $.scopes;
        this.tokenType = $.tokenType;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsSettingTenantCustomClaimArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsSettingTenantCustomClaimArgs $;

        public Builder() {
            $ = new DomainsSettingTenantCustomClaimArgs();
        }

        public Builder(DomainsSettingTenantCustomClaimArgs defaults) {
            $ = new DomainsSettingTenantCustomClaimArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allScopes (Updatable) Indicates if the custom claim is associated with all scopes
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder allScopes(Output<Boolean> allScopes) {
            $.allScopes = allScopes;
            return this;
        }

        /**
         * @param allScopes (Updatable) Indicates if the custom claim is associated with all scopes
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder allScopes(Boolean allScopes) {
            return allScopes(Output.of(allScopes));
        }

        /**
         * @param expression (Updatable) Indicates if the custom claim is an expression
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder expression(Output<Boolean> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression (Updatable) Indicates if the custom claim is an expression
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder expression(Boolean expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param mode (Updatable) Indicates under what scenario the custom claim will be return
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder mode(Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode (Updatable) Indicates under what scenario the custom claim will be return
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param name (Updatable) Custom claim name
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: server
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Custom claim name
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: server
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param scopes (Updatable) Scopes associated with a specific custom claim
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes (Updatable) Scopes associated with a specific custom claim
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes (Updatable) Scopes associated with a specific custom claim
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param tokenType (Updatable) Indicates what type of token the custom claim will be embedded
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tokenType(Output<String> tokenType) {
            $.tokenType = tokenType;
            return this;
        }

        /**
         * @param tokenType (Updatable) Indicates what type of token the custom claim will be embedded
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder tokenType(String tokenType) {
            return tokenType(Output.of(tokenType));
        }

        /**
         * @param value (Updatable) Custom claim value
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) Custom claim value
         * 
         * **Added In:** 18.4.2
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DomainsSettingTenantCustomClaimArgs build() {
            if ($.allScopes == null) {
                throw new MissingRequiredPropertyException("DomainsSettingTenantCustomClaimArgs", "allScopes");
            }
            if ($.expression == null) {
                throw new MissingRequiredPropertyException("DomainsSettingTenantCustomClaimArgs", "expression");
            }
            if ($.mode == null) {
                throw new MissingRequiredPropertyException("DomainsSettingTenantCustomClaimArgs", "mode");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DomainsSettingTenantCustomClaimArgs", "name");
            }
            if ($.tokenType == null) {
                throw new MissingRequiredPropertyException("DomainsSettingTenantCustomClaimArgs", "tokenType");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("DomainsSettingTenantCustomClaimArgs", "value");
            }
            return $;
        }
    }

}
