// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserEmailArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserEmailArgs Empty = new DomainsUserEmailArgs();

    /**
     * (Updatable) Pending e-mail address verification
     * 
     */
    @Import(name="pendingVerificationData")
    private @Nullable Output<String> pendingVerificationData;

    /**
     * @return (Updatable) Pending e-mail address verification
     * 
     */
    public Optional<Output<String>> pendingVerificationData() {
        return Optional.ofNullable(this.pendingVerificationData);
    }

    /**
     * (Updatable) A Boolean value indicating the &#39;primary&#39; or preferred attribute value for this attribute. The primary attribute value &#39;true&#39; MUST appear no more than once.
     * 
     */
    @Import(name="primary")
    private @Nullable Output<Boolean> primary;

    /**
     * @return (Updatable) A Boolean value indicating the &#39;primary&#39; or preferred attribute value for this attribute. The primary attribute value &#39;true&#39; MUST appear no more than once.
     * 
     */
    public Optional<Output<Boolean>> primary() {
        return Optional.ofNullable(this.primary);
    }

    /**
     * (Updatable) A Boolean value that indicates whether the email address is the secondary email address. The secondary attribute value &#39;true&#39; MUST appear no more than once.
     * 
     */
    @Import(name="secondary")
    private @Nullable Output<Boolean> secondary;

    /**
     * @return (Updatable) A Boolean value that indicates whether the email address is the secondary email address. The secondary attribute value &#39;true&#39; MUST appear no more than once.
     * 
     */
    public Optional<Output<Boolean>> secondary() {
        return Optional.ofNullable(this.secondary);
    }

    /**
     * (Updatable) A label indicating the attribute&#39;s function.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) A label indicating the attribute&#39;s function.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * (Updatable) The value of a X509 certificate.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) The value of a X509 certificate.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    /**
     * (Updatable) A Boolean value that indicates if the phone number is verified.
     * 
     */
    @Import(name="verified")
    private @Nullable Output<Boolean> verified;

    /**
     * @return (Updatable) A Boolean value that indicates if the phone number is verified.
     * 
     */
    public Optional<Output<Boolean>> verified() {
        return Optional.ofNullable(this.verified);
    }

    private DomainsUserEmailArgs() {}

    private DomainsUserEmailArgs(DomainsUserEmailArgs $) {
        this.pendingVerificationData = $.pendingVerificationData;
        this.primary = $.primary;
        this.secondary = $.secondary;
        this.type = $.type;
        this.value = $.value;
        this.verified = $.verified;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserEmailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserEmailArgs $;

        public Builder() {
            $ = new DomainsUserEmailArgs();
        }

        public Builder(DomainsUserEmailArgs defaults) {
            $ = new DomainsUserEmailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pendingVerificationData (Updatable) Pending e-mail address verification
         * 
         * @return builder
         * 
         */
        public Builder pendingVerificationData(@Nullable Output<String> pendingVerificationData) {
            $.pendingVerificationData = pendingVerificationData;
            return this;
        }

        /**
         * @param pendingVerificationData (Updatable) Pending e-mail address verification
         * 
         * @return builder
         * 
         */
        public Builder pendingVerificationData(String pendingVerificationData) {
            return pendingVerificationData(Output.of(pendingVerificationData));
        }

        /**
         * @param primary (Updatable) A Boolean value indicating the &#39;primary&#39; or preferred attribute value for this attribute. The primary attribute value &#39;true&#39; MUST appear no more than once.
         * 
         * @return builder
         * 
         */
        public Builder primary(@Nullable Output<Boolean> primary) {
            $.primary = primary;
            return this;
        }

        /**
         * @param primary (Updatable) A Boolean value indicating the &#39;primary&#39; or preferred attribute value for this attribute. The primary attribute value &#39;true&#39; MUST appear no more than once.
         * 
         * @return builder
         * 
         */
        public Builder primary(Boolean primary) {
            return primary(Output.of(primary));
        }

        /**
         * @param secondary (Updatable) A Boolean value that indicates whether the email address is the secondary email address. The secondary attribute value &#39;true&#39; MUST appear no more than once.
         * 
         * @return builder
         * 
         */
        public Builder secondary(@Nullable Output<Boolean> secondary) {
            $.secondary = secondary;
            return this;
        }

        /**
         * @param secondary (Updatable) A Boolean value that indicates whether the email address is the secondary email address. The secondary attribute value &#39;true&#39; MUST appear no more than once.
         * 
         * @return builder
         * 
         */
        public Builder secondary(Boolean secondary) {
            return secondary(Output.of(secondary));
        }

        /**
         * @param type (Updatable) A label indicating the attribute&#39;s function.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) A label indicating the attribute&#39;s function.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value (Updatable) The value of a X509 certificate.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) The value of a X509 certificate.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        /**
         * @param verified (Updatable) A Boolean value that indicates if the phone number is verified.
         * 
         * @return builder
         * 
         */
        public Builder verified(@Nullable Output<Boolean> verified) {
            $.verified = verified;
            return this;
        }

        /**
         * @param verified (Updatable) A Boolean value that indicates if the phone number is verified.
         * 
         * @return builder
         * 
         */
        public Builder verified(Boolean verified) {
            return verified(Output.of(verified));
        }

        public DomainsUserEmailArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
