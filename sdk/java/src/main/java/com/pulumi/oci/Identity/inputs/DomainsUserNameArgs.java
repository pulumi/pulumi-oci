// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserNameArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserNameArgs Empty = new DomainsUserNameArgs();

    /**
     * (Updatable) Last name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Last Name
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="familyName")
    private @Nullable Output<String> familyName;

    /**
     * @return (Updatable) Last name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Last Name
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> familyName() {
        return Optional.ofNullable(this.familyName);
    }

    /**
     * (Updatable) Full name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="formatted")
    private @Nullable Output<String> formatted;

    /**
     * @return (Updatable) Full name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> formatted() {
        return Optional.ofNullable(this.formatted);
    }

    /**
     * (Updatable) First name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: First Name
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="givenName")
    private @Nullable Output<String> givenName;

    /**
     * @return (Updatable) First name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: First Name
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> givenName() {
        return Optional.ofNullable(this.givenName);
    }

    /**
     * (Updatable) Prefix
     * 
     * **SCIM++ Properties:**
     * * idcsCsvAttributeName: Honorific Prefix
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="honorificPrefix")
    private @Nullable Output<String> honorificPrefix;

    /**
     * @return (Updatable) Prefix
     * 
     * **SCIM++ Properties:**
     * * idcsCsvAttributeName: Honorific Prefix
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> honorificPrefix() {
        return Optional.ofNullable(this.honorificPrefix);
    }

    /**
     * (Updatable) Suffix
     * 
     * **SCIM++ Properties:**
     * * idcsCsvAttributeName: Honorific Suffix
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="honorificSuffix")
    private @Nullable Output<String> honorificSuffix;

    /**
     * @return (Updatable) Suffix
     * 
     * **SCIM++ Properties:**
     * * idcsCsvAttributeName: Honorific Suffix
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> honorificSuffix() {
        return Optional.ofNullable(this.honorificSuffix);
    }

    /**
     * (Updatable) Middle name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Middle Name
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="middleName")
    private @Nullable Output<String> middleName;

    /**
     * @return (Updatable) Middle name
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Middle Name
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> middleName() {
        return Optional.ofNullable(this.middleName);
    }

    private DomainsUserNameArgs() {}

    private DomainsUserNameArgs(DomainsUserNameArgs $) {
        this.familyName = $.familyName;
        this.formatted = $.formatted;
        this.givenName = $.givenName;
        this.honorificPrefix = $.honorificPrefix;
        this.honorificSuffix = $.honorificSuffix;
        this.middleName = $.middleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserNameArgs $;

        public Builder() {
            $ = new DomainsUserNameArgs();
        }

        public Builder(DomainsUserNameArgs defaults) {
            $ = new DomainsUserNameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param familyName (Updatable) Last name
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCsvAttributeName: Last Name
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder familyName(@Nullable Output<String> familyName) {
            $.familyName = familyName;
            return this;
        }

        /**
         * @param familyName (Updatable) Last name
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCsvAttributeName: Last Name
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder familyName(String familyName) {
            return familyName(Output.of(familyName));
        }

        /**
         * @param formatted (Updatable) Full name
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder formatted(@Nullable Output<String> formatted) {
            $.formatted = formatted;
            return this;
        }

        /**
         * @param formatted (Updatable) Full name
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder formatted(String formatted) {
            return formatted(Output.of(formatted));
        }

        /**
         * @param givenName (Updatable) First name
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCsvAttributeName: First Name
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder givenName(@Nullable Output<String> givenName) {
            $.givenName = givenName;
            return this;
        }

        /**
         * @param givenName (Updatable) First name
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCsvAttributeName: First Name
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder givenName(String givenName) {
            return givenName(Output.of(givenName));
        }

        /**
         * @param honorificPrefix (Updatable) Prefix
         * 
         * **SCIM++ Properties:**
         * * idcsCsvAttributeName: Honorific Prefix
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder honorificPrefix(@Nullable Output<String> honorificPrefix) {
            $.honorificPrefix = honorificPrefix;
            return this;
        }

        /**
         * @param honorificPrefix (Updatable) Prefix
         * 
         * **SCIM++ Properties:**
         * * idcsCsvAttributeName: Honorific Prefix
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder honorificPrefix(String honorificPrefix) {
            return honorificPrefix(Output.of(honorificPrefix));
        }

        /**
         * @param honorificSuffix (Updatable) Suffix
         * 
         * **SCIM++ Properties:**
         * * idcsCsvAttributeName: Honorific Suffix
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder honorificSuffix(@Nullable Output<String> honorificSuffix) {
            $.honorificSuffix = honorificSuffix;
            return this;
        }

        /**
         * @param honorificSuffix (Updatable) Suffix
         * 
         * **SCIM++ Properties:**
         * * idcsCsvAttributeName: Honorific Suffix
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder honorificSuffix(String honorificSuffix) {
            return honorificSuffix(Output.of(honorificSuffix));
        }

        /**
         * @param middleName (Updatable) Middle name
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCsvAttributeName: Middle Name
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder middleName(@Nullable Output<String> middleName) {
            $.middleName = middleName;
            return this;
        }

        /**
         * @param middleName (Updatable) Middle name
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsCsvAttributeName: Middle Name
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder middleName(String middleName) {
            return middleName(Output.of(middleName));
        }

        public DomainsUserNameArgs build() {
            return $;
        }
    }

}
