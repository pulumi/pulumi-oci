// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs Empty = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs();

    /**
     * (Updatable) Last update timestamp for the risk score
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: dateTime
     * * uniqueness: none
     * 
     */
    @Import(name="lastUpdateTimestamp", required=true)
    private Output<String> lastUpdateTimestamp;

    /**
     * @return (Updatable) Last update timestamp for the risk score
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: dateTime
     * * uniqueness: none
     * 
     */
    public Output<String> lastUpdateTimestamp() {
        return this.lastUpdateTimestamp;
    }

    /**
     * (Updatable) Risk Provider Profile URI: URI that corresponds to risk source identifier.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: reference
     * * uniqueness: none
     * 
     */
    @Import(name="ref")
    private @Nullable Output<String> ref;

    /**
     * @return (Updatable) Risk Provider Profile URI: URI that corresponds to risk source identifier.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: reference
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> ref() {
        return Optional.ofNullable(this.ref);
    }

    /**
     * (Updatable) Risk Level
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="riskLevel", required=true)
    private Output<String> riskLevel;

    /**
     * @return (Updatable) Risk Level
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> riskLevel() {
        return this.riskLevel;
    }

    /**
     * (Updatable) Risk Score value
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: integer
     * * uniqueness: none
     * * idcsMaxValue: 100
     * * idcsMinValue: 0
     * 
     */
    @Import(name="score", required=true)
    private Output<Integer> score;

    /**
     * @return (Updatable) Risk Score value
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: integer
     * * uniqueness: none
     * * idcsMaxValue: 100
     * * idcsMinValue: 0
     * 
     */
    public Output<Integer> score() {
        return this.score;
    }

    /**
     * (Updatable) Risk Provider Profile Source
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return (Updatable) Risk Provider Profile Source
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * (Updatable) Risk Provider Profile status
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) Risk Provider Profile status
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * (Updatable) Risk Provider Profile: Identifier for the provider service from which the risk score was received.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) Risk Provider Profile: Identifier for the provider service from which the risk score was received.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs() {}

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs $) {
        this.lastUpdateTimestamp = $.lastUpdateTimestamp;
        this.ref = $.ref;
        this.riskLevel = $.riskLevel;
        this.score = $.score;
        this.source = $.source;
        this.status = $.status;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs $;

        public Builder() {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs();
        }

        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs defaults) {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param lastUpdateTimestamp (Updatable) Last update timestamp for the risk score
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: dateTime
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder lastUpdateTimestamp(Output<String> lastUpdateTimestamp) {
            $.lastUpdateTimestamp = lastUpdateTimestamp;
            return this;
        }

        /**
         * @param lastUpdateTimestamp (Updatable) Last update timestamp for the risk score
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: dateTime
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder lastUpdateTimestamp(String lastUpdateTimestamp) {
            return lastUpdateTimestamp(Output.of(lastUpdateTimestamp));
        }

        /**
         * @param ref (Updatable) Risk Provider Profile URI: URI that corresponds to risk source identifier.
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: always
         * * type: reference
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ref(@Nullable Output<String> ref) {
            $.ref = ref;
            return this;
        }

        /**
         * @param ref (Updatable) Risk Provider Profile URI: URI that corresponds to risk source identifier.
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: always
         * * type: reference
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder ref(String ref) {
            return ref(Output.of(ref));
        }

        /**
         * @param riskLevel (Updatable) Risk Level
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder riskLevel(Output<String> riskLevel) {
            $.riskLevel = riskLevel;
            return this;
        }

        /**
         * @param riskLevel (Updatable) Risk Level
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder riskLevel(String riskLevel) {
            return riskLevel(Output.of(riskLevel));
        }

        /**
         * @param score (Updatable) Risk Score value
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: integer
         * * uniqueness: none
         * * idcsMaxValue: 100
         * * idcsMinValue: 0
         * 
         * @return builder
         * 
         */
        public Builder score(Output<Integer> score) {
            $.score = score;
            return this;
        }

        /**
         * @param score (Updatable) Risk Score value
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: integer
         * * uniqueness: none
         * * idcsMaxValue: 100
         * * idcsMinValue: 0
         * 
         * @return builder
         * 
         */
        public Builder score(Integer score) {
            return score(Output.of(score));
        }

        /**
         * @param source (Updatable) Risk Provider Profile Source
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source (Updatable) Risk Provider Profile Source
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param status (Updatable) Risk Provider Profile status
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) Risk Provider Profile status
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param value (Updatable) Risk Provider Profile: Identifier for the provider service from which the risk score was received.
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) Risk Provider Profile: Identifier for the provider service from which the risk score was received.
         * 
         * **Added In:** 18.1.6
         * 
         * **SCIM++ Properties:**
         * * caseExact: true
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: readWrite
         * * required: true
         * * returned: always
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs build() {
            if ($.lastUpdateTimestamp == null) {
                throw new MissingRequiredPropertyException("DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs", "lastUpdateTimestamp");
            }
            if ($.riskLevel == null) {
                throw new MissingRequiredPropertyException("DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs", "riskLevel");
            }
            if ($.score == null) {
                throw new MissingRequiredPropertyException("DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs", "score");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScoreArgs", "value");
            }
            return $;
        }
    }

}
