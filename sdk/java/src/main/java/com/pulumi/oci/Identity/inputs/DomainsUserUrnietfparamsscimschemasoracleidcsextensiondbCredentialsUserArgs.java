// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs Empty = new DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs();

    /**
     * (Updatable) The number of failed login attempts. The value is reset to 0 after a successful login.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: integer
     * * uniqueness: none
     * 
     */
    @Import(name="dbLoginAttempts")
    private @Nullable Output<Integer> dbLoginAttempts;

    /**
     * @return (Updatable) The number of failed login attempts. The value is reset to 0 after a successful login.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Optional<Output<Integer>> dbLoginAttempts() {
        return Optional.ofNullable(this.dbLoginAttempts);
    }

    /**
     * (Updatable) The database username.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * type: string
     * * returned: request
     * * caseExact: false
     * * uniqueness: none
     * * idcsSearchable: true
     * 
     */
    @Import(name="dbUserName")
    private @Nullable Output<String> dbUserName;

    /**
     * @return (Updatable) The database username.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * type: string
     * * returned: request
     * * caseExact: false
     * * uniqueness: none
     * * idcsSearchable: true
     * 
     */
    public Optional<Output<String>> dbUserName() {
        return Optional.ofNullable(this.dbUserName);
    }

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs() {}

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs(DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs $) {
        this.dbLoginAttempts = $.dbLoginAttempts;
        this.dbUserName = $.dbUserName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs $;

        public Builder() {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs();
        }

        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs defaults) {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbLoginAttempts (Updatable) The number of failed login attempts. The value is reset to 0 after a successful login.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder dbLoginAttempts(@Nullable Output<Integer> dbLoginAttempts) {
            $.dbLoginAttempts = dbLoginAttempts;
            return this;
        }

        /**
         * @param dbLoginAttempts (Updatable) The number of failed login attempts. The value is reset to 0 after a successful login.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: request
         * * type: integer
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder dbLoginAttempts(Integer dbLoginAttempts) {
            return dbLoginAttempts(Output.of(dbLoginAttempts));
        }

        /**
         * @param dbUserName (Updatable) The database username.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * type: string
         * * returned: request
         * * caseExact: false
         * * uniqueness: none
         * * idcsSearchable: true
         * 
         * @return builder
         * 
         */
        public Builder dbUserName(@Nullable Output<String> dbUserName) {
            $.dbUserName = dbUserName;
            return this;
        }

        /**
         * @param dbUserName (Updatable) The database username.
         * 
         * **Added In:** 2102181953
         * 
         * **SCIM++ Properties:**
         * * multiValued: false
         * * mutability: readWrite
         * * required: false
         * * type: string
         * * returned: request
         * * caseExact: false
         * * uniqueness: none
         * * idcsSearchable: true
         * 
         * @return builder
         * 
         */
        public Builder dbUserName(String dbUserName) {
            return dbUserName(Output.of(dbUserName));
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUserArgs build() {
            return $;
        }
    }

}
