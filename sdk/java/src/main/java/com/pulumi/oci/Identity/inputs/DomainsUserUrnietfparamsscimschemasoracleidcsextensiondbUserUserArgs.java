// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs Empty = new DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs();

    /**
     * (Updatable) DB global roles to which the user is granted access.
     * 
     */
    @Import(name="dbGlobalRoles")
    private @Nullable Output<List<String>> dbGlobalRoles;

    /**
     * @return (Updatable) DB global roles to which the user is granted access.
     * 
     */
    public Optional<Output<List<String>>> dbGlobalRoles() {
        return Optional.ofNullable(this.dbGlobalRoles);
    }

    /**
     * (Updatable) DB domain level schema to which the user is granted access.
     * 
     */
    @Import(name="domainLevelSchema")
    private @Nullable Output<String> domainLevelSchema;

    /**
     * @return (Updatable) DB domain level schema to which the user is granted access.
     * 
     */
    public Optional<Output<String>> domainLevelSchema() {
        return Optional.ofNullable(this.domainLevelSchema);
    }

    /**
     * (Updatable) DB instance level schema to which the user is granted access.
     * 
     */
    @Import(name="instanceLevelSchema")
    private @Nullable Output<String> instanceLevelSchema;

    /**
     * @return (Updatable) DB instance level schema to which the user is granted access.
     * 
     */
    public Optional<Output<String>> instanceLevelSchema() {
        return Optional.ofNullable(this.instanceLevelSchema);
    }

    /**
     * (Updatable) If true, indicates this is a database user.
     * 
     */
    @Import(name="isDbUser")
    private @Nullable Output<Boolean> isDbUser;

    /**
     * @return (Updatable) If true, indicates this is a database user.
     * 
     */
    public Optional<Output<Boolean>> isDbUser() {
        return Optional.ofNullable(this.isDbUser);
    }

    /**
     * (Updatable) Password Verifiers for DB User.
     * 
     */
    @Import(name="passwordVerifiers")
    private @Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs>> passwordVerifiers;

    /**
     * @return (Updatable) Password Verifiers for DB User.
     * 
     */
    public Optional<Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs>>> passwordVerifiers() {
        return Optional.ofNullable(this.passwordVerifiers);
    }

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs() {}

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs(DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs $) {
        this.dbGlobalRoles = $.dbGlobalRoles;
        this.domainLevelSchema = $.domainLevelSchema;
        this.instanceLevelSchema = $.instanceLevelSchema;
        this.isDbUser = $.isDbUser;
        this.passwordVerifiers = $.passwordVerifiers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs $;

        public Builder() {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs();
        }

        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs defaults) {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbGlobalRoles (Updatable) DB global roles to which the user is granted access.
         * 
         * @return builder
         * 
         */
        public Builder dbGlobalRoles(@Nullable Output<List<String>> dbGlobalRoles) {
            $.dbGlobalRoles = dbGlobalRoles;
            return this;
        }

        /**
         * @param dbGlobalRoles (Updatable) DB global roles to which the user is granted access.
         * 
         * @return builder
         * 
         */
        public Builder dbGlobalRoles(List<String> dbGlobalRoles) {
            return dbGlobalRoles(Output.of(dbGlobalRoles));
        }

        /**
         * @param dbGlobalRoles (Updatable) DB global roles to which the user is granted access.
         * 
         * @return builder
         * 
         */
        public Builder dbGlobalRoles(String... dbGlobalRoles) {
            return dbGlobalRoles(List.of(dbGlobalRoles));
        }

        /**
         * @param domainLevelSchema (Updatable) DB domain level schema to which the user is granted access.
         * 
         * @return builder
         * 
         */
        public Builder domainLevelSchema(@Nullable Output<String> domainLevelSchema) {
            $.domainLevelSchema = domainLevelSchema;
            return this;
        }

        /**
         * @param domainLevelSchema (Updatable) DB domain level schema to which the user is granted access.
         * 
         * @return builder
         * 
         */
        public Builder domainLevelSchema(String domainLevelSchema) {
            return domainLevelSchema(Output.of(domainLevelSchema));
        }

        /**
         * @param instanceLevelSchema (Updatable) DB instance level schema to which the user is granted access.
         * 
         * @return builder
         * 
         */
        public Builder instanceLevelSchema(@Nullable Output<String> instanceLevelSchema) {
            $.instanceLevelSchema = instanceLevelSchema;
            return this;
        }

        /**
         * @param instanceLevelSchema (Updatable) DB instance level schema to which the user is granted access.
         * 
         * @return builder
         * 
         */
        public Builder instanceLevelSchema(String instanceLevelSchema) {
            return instanceLevelSchema(Output.of(instanceLevelSchema));
        }

        /**
         * @param isDbUser (Updatable) If true, indicates this is a database user.
         * 
         * @return builder
         * 
         */
        public Builder isDbUser(@Nullable Output<Boolean> isDbUser) {
            $.isDbUser = isDbUser;
            return this;
        }

        /**
         * @param isDbUser (Updatable) If true, indicates this is a database user.
         * 
         * @return builder
         * 
         */
        public Builder isDbUser(Boolean isDbUser) {
            return isDbUser(Output.of(isDbUser));
        }

        /**
         * @param passwordVerifiers (Updatable) Password Verifiers for DB User.
         * 
         * @return builder
         * 
         */
        public Builder passwordVerifiers(@Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs>> passwordVerifiers) {
            $.passwordVerifiers = passwordVerifiers;
            return this;
        }

        /**
         * @param passwordVerifiers (Updatable) Password Verifiers for DB User.
         * 
         * @return builder
         * 
         */
        public Builder passwordVerifiers(List<DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs> passwordVerifiers) {
            return passwordVerifiers(Output.of(passwordVerifiers));
        }

        /**
         * @param passwordVerifiers (Updatable) Password Verifiers for DB User.
         * 
         * @return builder
         * 
         */
        public Builder passwordVerifiers(DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifierArgs... passwordVerifiers) {
            return passwordVerifiers(List.of(passwordVerifiers));
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserArgs build() {
            return $;
        }
    }

}
