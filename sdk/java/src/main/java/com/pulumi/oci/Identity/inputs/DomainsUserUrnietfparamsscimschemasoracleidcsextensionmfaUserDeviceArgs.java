// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs Empty = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs();

    /**
     * (Updatable) Authentication method.
     * 
     */
    @Import(name="authenticationMethod")
    private @Nullable Output<String> authenticationMethod;

    /**
     * @return (Updatable) Authentication method.
     * 
     */
    public Optional<Output<String>> authenticationMethod() {
        return Optional.ofNullable(this.authenticationMethod);
    }

    /**
     * (Updatable) A human readable name, primarily used for display purposes.
     * 
     */
    @Import(name="display")
    private @Nullable Output<String> display;

    /**
     * @return (Updatable) A human readable name, primarily used for display purposes.
     * 
     */
    public Optional<Output<String>> display() {
        return Optional.ofNullable(this.display);
    }

    /**
     * (Updatable) Device authentication factor status.
     * 
     */
    @Import(name="factorStatus")
    private @Nullable Output<String> factorStatus;

    /**
     * @return (Updatable) Device authentication factor status.
     * 
     */
    public Optional<Output<String>> factorStatus() {
        return Optional.ofNullable(this.factorStatus);
    }

    /**
     * (Updatable) Authentication Factor Type
     * 
     */
    @Import(name="factorType")
    private @Nullable Output<String> factorType;

    /**
     * @return (Updatable) Authentication Factor Type
     * 
     */
    public Optional<Output<String>> factorType() {
        return Optional.ofNullable(this.factorType);
    }

    /**
     * (Updatable) Last Sync time for device.
     * 
     */
    @Import(name="lastSyncTime")
    private @Nullable Output<String> lastSyncTime;

    /**
     * @return (Updatable) Last Sync time for device.
     * 
     */
    public Optional<Output<String>> lastSyncTime() {
        return Optional.ofNullable(this.lastSyncTime);
    }

    /**
     * (Updatable) User Token URI
     * 
     */
    @Import(name="ref")
    private @Nullable Output<String> ref;

    /**
     * @return (Updatable) User Token URI
     * 
     */
    public Optional<Output<String>> ref() {
        return Optional.ofNullable(this.ref);
    }

    /**
     * (Updatable) A supplemental status indicating the reason why a user is disabled
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) A supplemental status indicating the reason why a user is disabled
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * (Updatable) Third party factor vendor name.
     * 
     */
    @Import(name="thirdPartyVendorName")
    private @Nullable Output<String> thirdPartyVendorName;

    /**
     * @return (Updatable) Third party factor vendor name.
     * 
     */
    public Optional<Output<String>> thirdPartyVendorName() {
        return Optional.ofNullable(this.thirdPartyVendorName);
    }

    /**
     * (Updatable) The value of a X509 certificate.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) The value of a X509 certificate.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs() {}

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs(DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs $) {
        this.authenticationMethod = $.authenticationMethod;
        this.display = $.display;
        this.factorStatus = $.factorStatus;
        this.factorType = $.factorType;
        this.lastSyncTime = $.lastSyncTime;
        this.ref = $.ref;
        this.status = $.status;
        this.thirdPartyVendorName = $.thirdPartyVendorName;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs $;

        public Builder() {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs();
        }

        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs defaults) {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationMethod (Updatable) Authentication method.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMethod(@Nullable Output<String> authenticationMethod) {
            $.authenticationMethod = authenticationMethod;
            return this;
        }

        /**
         * @param authenticationMethod (Updatable) Authentication method.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMethod(String authenticationMethod) {
            return authenticationMethod(Output.of(authenticationMethod));
        }

        /**
         * @param display (Updatable) A human readable name, primarily used for display purposes.
         * 
         * @return builder
         * 
         */
        public Builder display(@Nullable Output<String> display) {
            $.display = display;
            return this;
        }

        /**
         * @param display (Updatable) A human readable name, primarily used for display purposes.
         * 
         * @return builder
         * 
         */
        public Builder display(String display) {
            return display(Output.of(display));
        }

        /**
         * @param factorStatus (Updatable) Device authentication factor status.
         * 
         * @return builder
         * 
         */
        public Builder factorStatus(@Nullable Output<String> factorStatus) {
            $.factorStatus = factorStatus;
            return this;
        }

        /**
         * @param factorStatus (Updatable) Device authentication factor status.
         * 
         * @return builder
         * 
         */
        public Builder factorStatus(String factorStatus) {
            return factorStatus(Output.of(factorStatus));
        }

        /**
         * @param factorType (Updatable) Authentication Factor Type
         * 
         * @return builder
         * 
         */
        public Builder factorType(@Nullable Output<String> factorType) {
            $.factorType = factorType;
            return this;
        }

        /**
         * @param factorType (Updatable) Authentication Factor Type
         * 
         * @return builder
         * 
         */
        public Builder factorType(String factorType) {
            return factorType(Output.of(factorType));
        }

        /**
         * @param lastSyncTime (Updatable) Last Sync time for device.
         * 
         * @return builder
         * 
         */
        public Builder lastSyncTime(@Nullable Output<String> lastSyncTime) {
            $.lastSyncTime = lastSyncTime;
            return this;
        }

        /**
         * @param lastSyncTime (Updatable) Last Sync time for device.
         * 
         * @return builder
         * 
         */
        public Builder lastSyncTime(String lastSyncTime) {
            return lastSyncTime(Output.of(lastSyncTime));
        }

        /**
         * @param ref (Updatable) User Token URI
         * 
         * @return builder
         * 
         */
        public Builder ref(@Nullable Output<String> ref) {
            $.ref = ref;
            return this;
        }

        /**
         * @param ref (Updatable) User Token URI
         * 
         * @return builder
         * 
         */
        public Builder ref(String ref) {
            return ref(Output.of(ref));
        }

        /**
         * @param status (Updatable) A supplemental status indicating the reason why a user is disabled
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) A supplemental status indicating the reason why a user is disabled
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param thirdPartyVendorName (Updatable) Third party factor vendor name.
         * 
         * @return builder
         * 
         */
        public Builder thirdPartyVendorName(@Nullable Output<String> thirdPartyVendorName) {
            $.thirdPartyVendorName = thirdPartyVendorName;
            return this;
        }

        /**
         * @param thirdPartyVendorName (Updatable) Third party factor vendor name.
         * 
         * @return builder
         * 
         */
        public Builder thirdPartyVendorName(String thirdPartyVendorName) {
            return thirdPartyVendorName(Output.of(thirdPartyVendorName));
        }

        /**
         * @param value (Updatable) The value of a X509 certificate.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) The value of a X509 certificate.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionmfaUserDeviceArgs build() {
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
