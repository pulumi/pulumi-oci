// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs Empty = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs();

    /**
     * (Updatable) A boolean value that indicates whether the consent is granted.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    @Import(name="consentGranted")
    private @Nullable Output<Boolean> consentGranted;

    /**
     * @return (Updatable) A boolean value that indicates whether the consent is granted.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Output<Boolean>> consentGranted() {
        return Optional.ofNullable(this.consentGranted);
    }

    /**
     * (Updatable) Self registration profile used when user is self registered.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="selfRegistrationProfile", required=true)
    private Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs> selfRegistrationProfile;

    /**
     * @return (Updatable) Self registration profile used when user is self registered.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: true
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs> selfRegistrationProfile() {
        return this.selfRegistrationProfile;
    }

    /**
     * (Updatable) User token used for auto-login.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    @Import(name="userToken")
    private @Nullable Output<String> userToken;

    /**
     * @return (Updatable) User token used for auto-login.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<Output<String>> userToken() {
        return Optional.ofNullable(this.userToken);
    }

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs() {}

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs(DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs $) {
        this.consentGranted = $.consentGranted;
        this.selfRegistrationProfile = $.selfRegistrationProfile;
        this.userToken = $.userToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs $;

        public Builder() {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs();
        }

        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs defaults) {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consentGranted (Updatable) A boolean value that indicates whether the consent is granted.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consentGranted(@Nullable Output<Boolean> consentGranted) {
            $.consentGranted = consentGranted;
            return this;
        }

        /**
         * @param consentGranted (Updatable) A boolean value that indicates whether the consent is granted.
         * 
         * **SCIM++ Properties:**
         * * caseExact: false
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: false
         * * returned: default
         * * type: boolean
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder consentGranted(Boolean consentGranted) {
            return consentGranted(Output.of(consentGranted));
        }

        /**
         * @param selfRegistrationProfile (Updatable) Self registration profile used when user is self registered.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder selfRegistrationProfile(Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs> selfRegistrationProfile) {
            $.selfRegistrationProfile = selfRegistrationProfile;
            return this;
        }

        /**
         * @param selfRegistrationProfile (Updatable) Self registration profile used when user is self registered.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: true
         * * multiValued: false
         * * mutability: immutable
         * * required: true
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder selfRegistrationProfile(DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserSelfRegistrationProfileArgs selfRegistrationProfile) {
            return selfRegistrationProfile(Output.of(selfRegistrationProfile));
        }

        /**
         * @param userToken (Updatable) User token used for auto-login.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder userToken(@Nullable Output<String> userToken) {
            $.userToken = userToken;
            return this;
        }

        /**
         * @param userToken (Updatable) User token used for auto-login.
         * 
         * **SCIM++ Properties:**
         * * idcsSearchable: false
         * * multiValued: false
         * * mutability: readOnly
         * * required: false
         * * returned: default
         * * type: string
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder userToken(String userToken) {
            return userToken(Output.of(userToken));
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs build() {
            if ($.selfRegistrationProfile == null) {
                throw new MissingRequiredPropertyException("DomainsUserUrnietfparamsscimschemasoracleidcsextensionselfRegistrationUserArgs", "selfRegistrationProfile");
            }
            return $;
        }
    }

}
