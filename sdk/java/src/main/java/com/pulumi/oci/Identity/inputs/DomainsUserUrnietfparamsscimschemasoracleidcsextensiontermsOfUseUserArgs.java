// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs Empty = new DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs();

    /**
     * (Updatable) Description:
     * 
     * **Added In:** 18.2.6
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    @Import(name="termsOfUseConsents")
    private @Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs>> termsOfUseConsents;

    /**
     * @return (Updatable) Description:
     * 
     * **Added In:** 18.2.6
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs>>> termsOfUseConsents() {
        return Optional.ofNullable(this.termsOfUseConsents);
    }

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs() {}

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs(DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs $) {
        this.termsOfUseConsents = $.termsOfUseConsents;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs $;

        public Builder() {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs();
        }

        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs defaults) {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param termsOfUseConsents (Updatable) Description:
         * 
         * **Added In:** 18.2.6
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder termsOfUseConsents(@Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs>> termsOfUseConsents) {
            $.termsOfUseConsents = termsOfUseConsents;
            return this;
        }

        /**
         * @param termsOfUseConsents (Updatable) Description:
         * 
         * **Added In:** 18.2.6
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder termsOfUseConsents(List<DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs> termsOfUseConsents) {
            return termsOfUseConsents(Output.of(termsOfUseConsents));
        }

        /**
         * @param termsOfUseConsents (Updatable) Description:
         * 
         * **Added In:** 18.2.6
         * 
         * **SCIM++ Properties:**
         * * idcsCompositeKey: [value]
         * * idcsSearchable: true
         * * multiValued: true
         * * mutability: readWrite
         * * required: false
         * * returned: request
         * * type: complex
         * * uniqueness: none
         * 
         * @return builder
         * 
         */
        public Builder termsOfUseConsents(DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserTermsOfUseConsentArgs... termsOfUseConsents) {
            return termsOfUseConsents(List.of(termsOfUseConsents));
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensiontermsOfUseUserArgs build() {
            return $;
        }
    }

}
