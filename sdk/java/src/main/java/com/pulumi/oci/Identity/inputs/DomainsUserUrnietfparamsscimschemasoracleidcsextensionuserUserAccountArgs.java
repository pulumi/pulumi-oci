// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs Empty = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs();

    /**
     * (Updatable) Status of the account
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return (Updatable) Status of the account
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * (Updatable) The ID of the App in this Grant.
     * 
     */
    @Import(name="appId")
    private @Nullable Output<String> appId;

    /**
     * @return (Updatable) The ID of the App in this Grant.
     * 
     */
    public Optional<Output<String>> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * (Updatable) Name of the account assigned to the User.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) Name of the account assigned to the User.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) User Token URI
     * 
     */
    @Import(name="ref")
    private @Nullable Output<String> ref;

    /**
     * @return (Updatable) User Token URI
     * 
     */
    public Optional<Output<String>> ref() {
        return Optional.ofNullable(this.ref);
    }

    /**
     * (Updatable) The value of a X509 certificate.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return (Updatable) The value of a X509 certificate.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs() {}

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs $) {
        this.active = $.active;
        this.appId = $.appId;
        this.name = $.name;
        this.ref = $.ref;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs $;

        public Builder() {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs();
        }

        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs defaults) {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active (Updatable) Status of the account
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active (Updatable) Status of the account
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param appId (Updatable) The ID of the App in this Grant.
         * 
         * @return builder
         * 
         */
        public Builder appId(@Nullable Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId (Updatable) The ID of the App in this Grant.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param name (Updatable) Name of the account assigned to the User.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Name of the account assigned to the User.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param ref (Updatable) User Token URI
         * 
         * @return builder
         * 
         */
        public Builder ref(@Nullable Output<String> ref) {
            $.ref = ref;
            return this;
        }

        /**
         * @param ref (Updatable) User Token URI
         * 
         * @return builder
         * 
         */
        public Builder ref(String ref) {
            return ref(Output.of(ref));
        }

        /**
         * @param value (Updatable) The value of a X509 certificate.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) The value of a X509 certificate.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs build() {
            return $;
        }
    }

}
