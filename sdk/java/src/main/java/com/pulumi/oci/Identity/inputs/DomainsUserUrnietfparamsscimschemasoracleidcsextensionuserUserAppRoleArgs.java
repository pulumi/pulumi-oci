// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs Empty = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs();

    /**
     * (Updatable) If true, then the role provides administrative access privileges. READ-ONLY.
     * 
     */
    @Import(name="adminRole")
    private @Nullable Output<Boolean> adminRole;

    /**
     * @return (Updatable) If true, then the role provides administrative access privileges. READ-ONLY.
     * 
     */
    public Optional<Output<Boolean>> adminRole() {
        return Optional.ofNullable(this.adminRole);
    }

    /**
     * (Updatable) The ID of the App in this Grant.
     * 
     */
    @Import(name="appId")
    private @Nullable Output<String> appId;

    /**
     * @return (Updatable) The ID of the App in this Grant.
     * 
     */
    public Optional<Output<String>> appId() {
        return Optional.ofNullable(this.appId);
    }

    /**
     * (Updatable) The name (Client ID) of the App that defines this AppRole.
     * 
     */
    @Import(name="appName")
    private @Nullable Output<String> appName;

    /**
     * @return (Updatable) The name (Client ID) of the App that defines this AppRole.
     * 
     */
    public Optional<Output<String>> appName() {
        return Optional.ofNullable(this.appName);
    }

    /**
     * (Updatable) A human readable name, primarily used for display purposes.
     * 
     */
    @Import(name="display")
    private @Nullable Output<String> display;

    /**
     * @return (Updatable) A human readable name, primarily used for display purposes.
     * 
     */
    public Optional<Output<String>> display() {
        return Optional.ofNullable(this.display);
    }

    /**
     * (Updatable) The name (if any) under which this AppRole should appear in this User&#39;s group-memberships for reasons of backward compatibility. Oracle Cloud Infrastructure IAM distinguishes between Groups and AppRoles, but some services still expect AppRoles appear as if they were service-instance-specific Groups.
     * 
     */
    @Import(name="legacyGroupName")
    private @Nullable Output<String> legacyGroupName;

    /**
     * @return (Updatable) The name (if any) under which this AppRole should appear in this User&#39;s group-memberships for reasons of backward compatibility. Oracle Cloud Infrastructure IAM distinguishes between Groups and AppRoles, but some services still expect AppRoles appear as if they were service-instance-specific Groups.
     * 
     */
    public Optional<Output<String>> legacyGroupName() {
        return Optional.ofNullable(this.legacyGroupName);
    }

    /**
     * (Updatable) User Token URI
     * 
     */
    @Import(name="ref")
    private @Nullable Output<String> ref;

    /**
     * @return (Updatable) User Token URI
     * 
     */
    public Optional<Output<String>> ref() {
        return Optional.ofNullable(this.ref);
    }

    /**
     * (Updatable) A label indicating the attribute&#39;s function.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return (Updatable) A label indicating the attribute&#39;s function.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * (Updatable) The value of a X509 certificate.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) The value of a X509 certificate.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs() {}

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs $) {
        this.adminRole = $.adminRole;
        this.appId = $.appId;
        this.appName = $.appName;
        this.display = $.display;
        this.legacyGroupName = $.legacyGroupName;
        this.ref = $.ref;
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs $;

        public Builder() {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs();
        }

        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs defaults) {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminRole (Updatable) If true, then the role provides administrative access privileges. READ-ONLY.
         * 
         * @return builder
         * 
         */
        public Builder adminRole(@Nullable Output<Boolean> adminRole) {
            $.adminRole = adminRole;
            return this;
        }

        /**
         * @param adminRole (Updatable) If true, then the role provides administrative access privileges. READ-ONLY.
         * 
         * @return builder
         * 
         */
        public Builder adminRole(Boolean adminRole) {
            return adminRole(Output.of(adminRole));
        }

        /**
         * @param appId (Updatable) The ID of the App in this Grant.
         * 
         * @return builder
         * 
         */
        public Builder appId(@Nullable Output<String> appId) {
            $.appId = appId;
            return this;
        }

        /**
         * @param appId (Updatable) The ID of the App in this Grant.
         * 
         * @return builder
         * 
         */
        public Builder appId(String appId) {
            return appId(Output.of(appId));
        }

        /**
         * @param appName (Updatable) The name (Client ID) of the App that defines this AppRole.
         * 
         * @return builder
         * 
         */
        public Builder appName(@Nullable Output<String> appName) {
            $.appName = appName;
            return this;
        }

        /**
         * @param appName (Updatable) The name (Client ID) of the App that defines this AppRole.
         * 
         * @return builder
         * 
         */
        public Builder appName(String appName) {
            return appName(Output.of(appName));
        }

        /**
         * @param display (Updatable) A human readable name, primarily used for display purposes.
         * 
         * @return builder
         * 
         */
        public Builder display(@Nullable Output<String> display) {
            $.display = display;
            return this;
        }

        /**
         * @param display (Updatable) A human readable name, primarily used for display purposes.
         * 
         * @return builder
         * 
         */
        public Builder display(String display) {
            return display(Output.of(display));
        }

        /**
         * @param legacyGroupName (Updatable) The name (if any) under which this AppRole should appear in this User&#39;s group-memberships for reasons of backward compatibility. Oracle Cloud Infrastructure IAM distinguishes between Groups and AppRoles, but some services still expect AppRoles appear as if they were service-instance-specific Groups.
         * 
         * @return builder
         * 
         */
        public Builder legacyGroupName(@Nullable Output<String> legacyGroupName) {
            $.legacyGroupName = legacyGroupName;
            return this;
        }

        /**
         * @param legacyGroupName (Updatable) The name (if any) under which this AppRole should appear in this User&#39;s group-memberships for reasons of backward compatibility. Oracle Cloud Infrastructure IAM distinguishes between Groups and AppRoles, but some services still expect AppRoles appear as if they were service-instance-specific Groups.
         * 
         * @return builder
         * 
         */
        public Builder legacyGroupName(String legacyGroupName) {
            return legacyGroupName(Output.of(legacyGroupName));
        }

        /**
         * @param ref (Updatable) User Token URI
         * 
         * @return builder
         * 
         */
        public Builder ref(@Nullable Output<String> ref) {
            $.ref = ref;
            return this;
        }

        /**
         * @param ref (Updatable) User Token URI
         * 
         * @return builder
         * 
         */
        public Builder ref(String ref) {
            return ref(Output.of(ref));
        }

        /**
         * @param type (Updatable) A label indicating the attribute&#39;s function.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) A label indicating the attribute&#39;s function.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value (Updatable) The value of a X509 certificate.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) The value of a X509 certificate.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs build() {
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
