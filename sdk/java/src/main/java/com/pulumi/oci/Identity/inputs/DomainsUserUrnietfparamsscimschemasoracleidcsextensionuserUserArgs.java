// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs;
import com.pulumi.oci.Identity.inputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs Empty = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs();

    /**
     * (Updatable) Boolean value to prompt user to setup account recovery during login.
     * 
     */
    @Import(name="accountRecoveryRequired")
    private @Nullable Output<Boolean> accountRecoveryRequired;

    /**
     * @return (Updatable) Boolean value to prompt user to setup account recovery during login.
     * 
     */
    public Optional<Output<Boolean>> accountRecoveryRequired() {
        return Optional.ofNullable(this.accountRecoveryRequired);
    }

    /**
     * (Updatable) Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.
     * 
     */
    @Import(name="accounts")
    private @Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs>> accounts;

    /**
     * @return (Updatable) Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.
     * 
     */
    public Optional<Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs>>> accounts() {
        return Optional.ofNullable(this.accounts);
    }

    /**
     * (Updatable) A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.
     * 
     */
    @Import(name="appRoles")
    private @Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs>> appRoles;

    /**
     * @return (Updatable) A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.
     * 
     */
    public Optional<Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs>>> appRoles() {
        return Optional.ofNullable(this.appRoles);
    }

    /**
     * (Updatable) The app against which the user will authenticate. The value is not persisted but rather calculated. If the user&#39;s delegatedAuthenticationTargetApp is set, that value is returned. Otherwise, the app returned by evaluating the user&#39;s applicable Delegated Authentication Policy is returned.
     * 
     */
    @Import(name="applicableAuthenticationTargetApps")
    private @Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs>> applicableAuthenticationTargetApps;

    /**
     * @return (Updatable) The app against which the user will authenticate. The value is not persisted but rather calculated. If the user&#39;s delegatedAuthenticationTargetApp is set, that value is returned. Otherwise, the app returned by evaluating the user&#39;s applicable Delegated Authentication Policy is returned.
     * 
     */
    public Optional<Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs>>> applicableAuthenticationTargetApps() {
        return Optional.ofNullable(this.applicableAuthenticationTargetApps);
    }

    /**
     * (Updatable) A Boolean value indicating whether or not to send email notification after creating the user. This attribute is not used in update/replace operations.
     * 
     */
    @Import(name="bypassNotification")
    private @Nullable Output<Boolean> bypassNotification;

    /**
     * @return (Updatable) A Boolean value indicating whether or not to send email notification after creating the user. This attribute is not used in update/replace operations.
     * 
     */
    public Optional<Output<Boolean>> bypassNotification() {
        return Optional.ofNullable(this.bypassNotification);
    }

    /**
     * (Updatable) User creation mechanism
     * 
     */
    @Import(name="creationMechanism")
    private @Nullable Output<String> creationMechanism;

    /**
     * @return (Updatable) User creation mechanism
     * 
     */
    public Optional<Output<String>> creationMechanism() {
        return Optional.ofNullable(this.creationMechanism);
    }

    /**
     * (Updatable) If set, indicates the user&#39;s preferred authentication target app. If not set and the user&#39;s \&#34;syncedFromApp\&#34; is set and is enabled for delegated authentication, it is used. Otherwise, the user authenticates locally to Oracle Cloud Infrastructure IAM.
     * 
     */
    @Import(name="delegatedAuthenticationTargetApp")
    private @Nullable Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs> delegatedAuthenticationTargetApp;

    /**
     * @return (Updatable) If set, indicates the user&#39;s preferred authentication target app. If not set and the user&#39;s \&#34;syncedFromApp\&#34; is set and is enabled for delegated authentication, it is used. Otherwise, the user authenticates locally to Oracle Cloud Infrastructure IAM.
     * 
     */
    public Optional<Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs>> delegatedAuthenticationTargetApp() {
        return Optional.ofNullable(this.delegatedAuthenticationTargetApp);
    }

    /**
     * (Updatable) A Boolean value indicating whether or not to hide the getting started page
     * 
     */
    @Import(name="doNotShowGettingStarted")
    private @Nullable Output<Boolean> doNotShowGettingStarted;

    /**
     * @return (Updatable) A Boolean value indicating whether or not to hide the getting started page
     * 
     */
    public Optional<Output<Boolean>> doNotShowGettingStarted() {
        return Optional.ofNullable(this.doNotShowGettingStarted);
    }

    /**
     * (Updatable) Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.
     * 
     */
    @Import(name="grants")
    private @Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs>> grants;

    /**
     * @return (Updatable) Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.
     * 
     */
    public Optional<Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs>>> grants() {
        return Optional.ofNullable(this.grants);
    }

    /**
     * (Updatable) Description:
     * 
     */
    @Import(name="idcsAppRolesLimitedToGroups")
    private @Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs>> idcsAppRolesLimitedToGroups;

    /**
     * @return (Updatable) Description:
     * 
     */
    public Optional<Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs>>> idcsAppRolesLimitedToGroups() {
        return Optional.ofNullable(this.idcsAppRolesLimitedToGroups);
    }

    /**
     * (Updatable) A Boolean value indicating whether or not a user is enrolled for account recovery
     * 
     */
    @Import(name="isAccountRecoveryEnrolled")
    private @Nullable Output<Boolean> isAccountRecoveryEnrolled;

    /**
     * @return (Updatable) A Boolean value indicating whether or not a user is enrolled for account recovery
     * 
     */
    public Optional<Output<Boolean>> isAccountRecoveryEnrolled() {
        return Optional.ofNullable(this.isAccountRecoveryEnrolled);
    }

    /**
     * (Updatable) A Boolean value indicating whether or not authentication request by this user should be delegated to a remote app. This value should be true only when the User was originally synced from an app which is enabled for delegated authentication
     * 
     */
    @Import(name="isAuthenticationDelegated")
    private @Nullable Output<Boolean> isAuthenticationDelegated;

    /**
     * @return (Updatable) A Boolean value indicating whether or not authentication request by this user should be delegated to a remote app. This value should be true only when the User was originally synced from an app which is enabled for delegated authentication
     * 
     */
    public Optional<Output<Boolean>> isAuthenticationDelegated() {
        return Optional.ofNullable(this.isAuthenticationDelegated);
    }

    /**
     * (Updatable) A Boolean value indicating whether or not the user is federated.
     * 
     */
    @Import(name="isFederatedUser")
    private @Nullable Output<Boolean> isFederatedUser;

    /**
     * @return (Updatable) A Boolean value indicating whether or not the user is federated.
     * 
     */
    public Optional<Output<Boolean>> isFederatedUser() {
        return Optional.ofNullable(this.isFederatedUser);
    }

    /**
     * (Updatable) A Boolean value indicating whether or not group membership is normalized for this user.
     * 
     */
    @Import(name="isGroupMembershipNormalized")
    private @Nullable Output<Boolean> isGroupMembershipNormalized;

    /**
     * @return (Updatable) A Boolean value indicating whether or not group membership is normalized for this user.
     * 
     */
    public Optional<Output<Boolean>> isGroupMembershipNormalized() {
        return Optional.ofNullable(this.isGroupMembershipNormalized);
    }

    /**
     * (Updatable) A Boolean value Indicates whether this User&#39;s group membership has been sync&#39;ed from Group.members to UsersGroups.
     * 
     */
    @Import(name="isGroupMembershipSyncedToUsersGroups")
    private @Nullable Output<Boolean> isGroupMembershipSyncedToUsersGroups;

    /**
     * @return (Updatable) A Boolean value Indicates whether this User&#39;s group membership has been sync&#39;ed from Group.members to UsersGroups.
     * 
     */
    public Optional<Output<Boolean>> isGroupMembershipSyncedToUsersGroups() {
        return Optional.ofNullable(this.isGroupMembershipSyncedToUsersGroups);
    }

    /**
     * (Updatable) Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.
     * 
     */
    @Import(name="notificationEmailTemplateId")
    private @Nullable Output<String> notificationEmailTemplateId;

    /**
     * @return (Updatable) Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.
     * 
     */
    public Optional<Output<String>> notificationEmailTemplateId() {
        return Optional.ofNullable(this.notificationEmailTemplateId);
    }

    /**
     * (Updatable) A supplemental status indicating the reason why a user is disabled
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) A supplemental status indicating the reason why a user is disabled
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * (Updatable) A list of Support Accounts corresponding to user.
     * 
     */
    @Import(name="supportAccounts")
    private @Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs>> supportAccounts;

    /**
     * @return (Updatable) A list of Support Accounts corresponding to user.
     * 
     */
    public Optional<Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs>>> supportAccounts() {
        return Optional.ofNullable(this.supportAccounts);
    }

    /**
     * (Updatable) Managed App or an Identity Source from where the user is synced. If enabled, this Managed App or Identity Source can be used for performing delegated authentication.
     * 
     */
    @Import(name="syncedFromApp")
    private @Nullable Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs> syncedFromApp;

    /**
     * @return (Updatable) Managed App or an Identity Source from where the user is synced. If enabled, this Managed App or Identity Source can be used for performing delegated authentication.
     * 
     */
    public Optional<Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs>> syncedFromApp() {
        return Optional.ofNullable(this.syncedFromApp);
    }

    /**
     * (Updatable) A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.
     * 
     */
    @Import(name="userFlowControlledByExternalClient")
    private @Nullable Output<Boolean> userFlowControlledByExternalClient;

    /**
     * @return (Updatable) A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.
     * 
     */
    public Optional<Output<Boolean>> userFlowControlledByExternalClient() {
        return Optional.ofNullable(this.userFlowControlledByExternalClient);
    }

    /**
     * (Updatable) User Support Account Provider
     * 
     */
    @Import(name="userProvider")
    private @Nullable Output<String> userProvider;

    /**
     * @return (Updatable) User Support Account Provider
     * 
     */
    public Optional<Output<String>> userProvider() {
        return Optional.ofNullable(this.userProvider);
    }

    /**
     * (Updatable) User token returned if userFlowControlledByExternalClient is true
     * 
     */
    @Import(name="userTokens")
    private @Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs>> userTokens;

    /**
     * @return (Updatable) User token returned if userFlowControlledByExternalClient is true
     * 
     */
    public Optional<Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs>>> userTokens() {
        return Optional.ofNullable(this.userTokens);
    }

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs() {}

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs $) {
        this.accountRecoveryRequired = $.accountRecoveryRequired;
        this.accounts = $.accounts;
        this.appRoles = $.appRoles;
        this.applicableAuthenticationTargetApps = $.applicableAuthenticationTargetApps;
        this.bypassNotification = $.bypassNotification;
        this.creationMechanism = $.creationMechanism;
        this.delegatedAuthenticationTargetApp = $.delegatedAuthenticationTargetApp;
        this.doNotShowGettingStarted = $.doNotShowGettingStarted;
        this.grants = $.grants;
        this.idcsAppRolesLimitedToGroups = $.idcsAppRolesLimitedToGroups;
        this.isAccountRecoveryEnrolled = $.isAccountRecoveryEnrolled;
        this.isAuthenticationDelegated = $.isAuthenticationDelegated;
        this.isFederatedUser = $.isFederatedUser;
        this.isGroupMembershipNormalized = $.isGroupMembershipNormalized;
        this.isGroupMembershipSyncedToUsersGroups = $.isGroupMembershipSyncedToUsersGroups;
        this.notificationEmailTemplateId = $.notificationEmailTemplateId;
        this.status = $.status;
        this.supportAccounts = $.supportAccounts;
        this.syncedFromApp = $.syncedFromApp;
        this.userFlowControlledByExternalClient = $.userFlowControlledByExternalClient;
        this.userProvider = $.userProvider;
        this.userTokens = $.userTokens;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs $;

        public Builder() {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs();
        }

        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs defaults) {
            $ = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountRecoveryRequired (Updatable) Boolean value to prompt user to setup account recovery during login.
         * 
         * @return builder
         * 
         */
        public Builder accountRecoveryRequired(@Nullable Output<Boolean> accountRecoveryRequired) {
            $.accountRecoveryRequired = accountRecoveryRequired;
            return this;
        }

        /**
         * @param accountRecoveryRequired (Updatable) Boolean value to prompt user to setup account recovery during login.
         * 
         * @return builder
         * 
         */
        public Builder accountRecoveryRequired(Boolean accountRecoveryRequired) {
            return accountRecoveryRequired(Output.of(accountRecoveryRequired));
        }

        /**
         * @param accounts (Updatable) Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.
         * 
         * @return builder
         * 
         */
        public Builder accounts(@Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs>> accounts) {
            $.accounts = accounts;
            return this;
        }

        /**
         * @param accounts (Updatable) Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.
         * 
         * @return builder
         * 
         */
        public Builder accounts(List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs> accounts) {
            return accounts(Output.of(accounts));
        }

        /**
         * @param accounts (Updatable) Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.
         * 
         * @return builder
         * 
         */
        public Builder accounts(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccountArgs... accounts) {
            return accounts(List.of(accounts));
        }

        /**
         * @param appRoles (Updatable) A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.
         * 
         * @return builder
         * 
         */
        public Builder appRoles(@Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs>> appRoles) {
            $.appRoles = appRoles;
            return this;
        }

        /**
         * @param appRoles (Updatable) A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.
         * 
         * @return builder
         * 
         */
        public Builder appRoles(List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs> appRoles) {
            return appRoles(Output.of(appRoles));
        }

        /**
         * @param appRoles (Updatable) A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.
         * 
         * @return builder
         * 
         */
        public Builder appRoles(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRoleArgs... appRoles) {
            return appRoles(List.of(appRoles));
        }

        /**
         * @param applicableAuthenticationTargetApps (Updatable) The app against which the user will authenticate. The value is not persisted but rather calculated. If the user&#39;s delegatedAuthenticationTargetApp is set, that value is returned. Otherwise, the app returned by evaluating the user&#39;s applicable Delegated Authentication Policy is returned.
         * 
         * @return builder
         * 
         */
        public Builder applicableAuthenticationTargetApps(@Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs>> applicableAuthenticationTargetApps) {
            $.applicableAuthenticationTargetApps = applicableAuthenticationTargetApps;
            return this;
        }

        /**
         * @param applicableAuthenticationTargetApps (Updatable) The app against which the user will authenticate. The value is not persisted but rather calculated. If the user&#39;s delegatedAuthenticationTargetApp is set, that value is returned. Otherwise, the app returned by evaluating the user&#39;s applicable Delegated Authentication Policy is returned.
         * 
         * @return builder
         * 
         */
        public Builder applicableAuthenticationTargetApps(List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs> applicableAuthenticationTargetApps) {
            return applicableAuthenticationTargetApps(Output.of(applicableAuthenticationTargetApps));
        }

        /**
         * @param applicableAuthenticationTargetApps (Updatable) The app against which the user will authenticate. The value is not persisted but rather calculated. If the user&#39;s delegatedAuthenticationTargetApp is set, that value is returned. Otherwise, the app returned by evaluating the user&#39;s applicable Delegated Authentication Policy is returned.
         * 
         * @return builder
         * 
         */
        public Builder applicableAuthenticationTargetApps(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetAppArgs... applicableAuthenticationTargetApps) {
            return applicableAuthenticationTargetApps(List.of(applicableAuthenticationTargetApps));
        }

        /**
         * @param bypassNotification (Updatable) A Boolean value indicating whether or not to send email notification after creating the user. This attribute is not used in update/replace operations.
         * 
         * @return builder
         * 
         */
        public Builder bypassNotification(@Nullable Output<Boolean> bypassNotification) {
            $.bypassNotification = bypassNotification;
            return this;
        }

        /**
         * @param bypassNotification (Updatable) A Boolean value indicating whether or not to send email notification after creating the user. This attribute is not used in update/replace operations.
         * 
         * @return builder
         * 
         */
        public Builder bypassNotification(Boolean bypassNotification) {
            return bypassNotification(Output.of(bypassNotification));
        }

        /**
         * @param creationMechanism (Updatable) User creation mechanism
         * 
         * @return builder
         * 
         */
        public Builder creationMechanism(@Nullable Output<String> creationMechanism) {
            $.creationMechanism = creationMechanism;
            return this;
        }

        /**
         * @param creationMechanism (Updatable) User creation mechanism
         * 
         * @return builder
         * 
         */
        public Builder creationMechanism(String creationMechanism) {
            return creationMechanism(Output.of(creationMechanism));
        }

        /**
         * @param delegatedAuthenticationTargetApp (Updatable) If set, indicates the user&#39;s preferred authentication target app. If not set and the user&#39;s \&#34;syncedFromApp\&#34; is set and is enabled for delegated authentication, it is used. Otherwise, the user authenticates locally to Oracle Cloud Infrastructure IAM.
         * 
         * @return builder
         * 
         */
        public Builder delegatedAuthenticationTargetApp(@Nullable Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs> delegatedAuthenticationTargetApp) {
            $.delegatedAuthenticationTargetApp = delegatedAuthenticationTargetApp;
            return this;
        }

        /**
         * @param delegatedAuthenticationTargetApp (Updatable) If set, indicates the user&#39;s preferred authentication target app. If not set and the user&#39;s \&#34;syncedFromApp\&#34; is set and is enabled for delegated authentication, it is used. Otherwise, the user authenticates locally to Oracle Cloud Infrastructure IAM.
         * 
         * @return builder
         * 
         */
        public Builder delegatedAuthenticationTargetApp(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetAppArgs delegatedAuthenticationTargetApp) {
            return delegatedAuthenticationTargetApp(Output.of(delegatedAuthenticationTargetApp));
        }

        /**
         * @param doNotShowGettingStarted (Updatable) A Boolean value indicating whether or not to hide the getting started page
         * 
         * @return builder
         * 
         */
        public Builder doNotShowGettingStarted(@Nullable Output<Boolean> doNotShowGettingStarted) {
            $.doNotShowGettingStarted = doNotShowGettingStarted;
            return this;
        }

        /**
         * @param doNotShowGettingStarted (Updatable) A Boolean value indicating whether or not to hide the getting started page
         * 
         * @return builder
         * 
         */
        public Builder doNotShowGettingStarted(Boolean doNotShowGettingStarted) {
            return doNotShowGettingStarted(Output.of(doNotShowGettingStarted));
        }

        /**
         * @param grants (Updatable) Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.
         * 
         * @return builder
         * 
         */
        public Builder grants(@Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs>> grants) {
            $.grants = grants;
            return this;
        }

        /**
         * @param grants (Updatable) Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.
         * 
         * @return builder
         * 
         */
        public Builder grants(List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs> grants) {
            return grants(Output.of(grants));
        }

        /**
         * @param grants (Updatable) Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.
         * 
         * @return builder
         * 
         */
        public Builder grants(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrantArgs... grants) {
            return grants(List.of(grants));
        }

        /**
         * @param idcsAppRolesLimitedToGroups (Updatable) Description:
         * 
         * @return builder
         * 
         */
        public Builder idcsAppRolesLimitedToGroups(@Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs>> idcsAppRolesLimitedToGroups) {
            $.idcsAppRolesLimitedToGroups = idcsAppRolesLimitedToGroups;
            return this;
        }

        /**
         * @param idcsAppRolesLimitedToGroups (Updatable) Description:
         * 
         * @return builder
         * 
         */
        public Builder idcsAppRolesLimitedToGroups(List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs> idcsAppRolesLimitedToGroups) {
            return idcsAppRolesLimitedToGroups(Output.of(idcsAppRolesLimitedToGroups));
        }

        /**
         * @param idcsAppRolesLimitedToGroups (Updatable) Description:
         * 
         * @return builder
         * 
         */
        public Builder idcsAppRolesLimitedToGroups(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroupArgs... idcsAppRolesLimitedToGroups) {
            return idcsAppRolesLimitedToGroups(List.of(idcsAppRolesLimitedToGroups));
        }

        /**
         * @param isAccountRecoveryEnrolled (Updatable) A Boolean value indicating whether or not a user is enrolled for account recovery
         * 
         * @return builder
         * 
         */
        public Builder isAccountRecoveryEnrolled(@Nullable Output<Boolean> isAccountRecoveryEnrolled) {
            $.isAccountRecoveryEnrolled = isAccountRecoveryEnrolled;
            return this;
        }

        /**
         * @param isAccountRecoveryEnrolled (Updatable) A Boolean value indicating whether or not a user is enrolled for account recovery
         * 
         * @return builder
         * 
         */
        public Builder isAccountRecoveryEnrolled(Boolean isAccountRecoveryEnrolled) {
            return isAccountRecoveryEnrolled(Output.of(isAccountRecoveryEnrolled));
        }

        /**
         * @param isAuthenticationDelegated (Updatable) A Boolean value indicating whether or not authentication request by this user should be delegated to a remote app. This value should be true only when the User was originally synced from an app which is enabled for delegated authentication
         * 
         * @return builder
         * 
         */
        public Builder isAuthenticationDelegated(@Nullable Output<Boolean> isAuthenticationDelegated) {
            $.isAuthenticationDelegated = isAuthenticationDelegated;
            return this;
        }

        /**
         * @param isAuthenticationDelegated (Updatable) A Boolean value indicating whether or not authentication request by this user should be delegated to a remote app. This value should be true only when the User was originally synced from an app which is enabled for delegated authentication
         * 
         * @return builder
         * 
         */
        public Builder isAuthenticationDelegated(Boolean isAuthenticationDelegated) {
            return isAuthenticationDelegated(Output.of(isAuthenticationDelegated));
        }

        /**
         * @param isFederatedUser (Updatable) A Boolean value indicating whether or not the user is federated.
         * 
         * @return builder
         * 
         */
        public Builder isFederatedUser(@Nullable Output<Boolean> isFederatedUser) {
            $.isFederatedUser = isFederatedUser;
            return this;
        }

        /**
         * @param isFederatedUser (Updatable) A Boolean value indicating whether or not the user is federated.
         * 
         * @return builder
         * 
         */
        public Builder isFederatedUser(Boolean isFederatedUser) {
            return isFederatedUser(Output.of(isFederatedUser));
        }

        /**
         * @param isGroupMembershipNormalized (Updatable) A Boolean value indicating whether or not group membership is normalized for this user.
         * 
         * @return builder
         * 
         */
        public Builder isGroupMembershipNormalized(@Nullable Output<Boolean> isGroupMembershipNormalized) {
            $.isGroupMembershipNormalized = isGroupMembershipNormalized;
            return this;
        }

        /**
         * @param isGroupMembershipNormalized (Updatable) A Boolean value indicating whether or not group membership is normalized for this user.
         * 
         * @return builder
         * 
         */
        public Builder isGroupMembershipNormalized(Boolean isGroupMembershipNormalized) {
            return isGroupMembershipNormalized(Output.of(isGroupMembershipNormalized));
        }

        /**
         * @param isGroupMembershipSyncedToUsersGroups (Updatable) A Boolean value Indicates whether this User&#39;s group membership has been sync&#39;ed from Group.members to UsersGroups.
         * 
         * @return builder
         * 
         */
        public Builder isGroupMembershipSyncedToUsersGroups(@Nullable Output<Boolean> isGroupMembershipSyncedToUsersGroups) {
            $.isGroupMembershipSyncedToUsersGroups = isGroupMembershipSyncedToUsersGroups;
            return this;
        }

        /**
         * @param isGroupMembershipSyncedToUsersGroups (Updatable) A Boolean value Indicates whether this User&#39;s group membership has been sync&#39;ed from Group.members to UsersGroups.
         * 
         * @return builder
         * 
         */
        public Builder isGroupMembershipSyncedToUsersGroups(Boolean isGroupMembershipSyncedToUsersGroups) {
            return isGroupMembershipSyncedToUsersGroups(Output.of(isGroupMembershipSyncedToUsersGroups));
        }

        /**
         * @param notificationEmailTemplateId (Updatable) Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.
         * 
         * @return builder
         * 
         */
        public Builder notificationEmailTemplateId(@Nullable Output<String> notificationEmailTemplateId) {
            $.notificationEmailTemplateId = notificationEmailTemplateId;
            return this;
        }

        /**
         * @param notificationEmailTemplateId (Updatable) Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.
         * 
         * @return builder
         * 
         */
        public Builder notificationEmailTemplateId(String notificationEmailTemplateId) {
            return notificationEmailTemplateId(Output.of(notificationEmailTemplateId));
        }

        /**
         * @param status (Updatable) A supplemental status indicating the reason why a user is disabled
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) A supplemental status indicating the reason why a user is disabled
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param supportAccounts (Updatable) A list of Support Accounts corresponding to user.
         * 
         * @return builder
         * 
         */
        public Builder supportAccounts(@Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs>> supportAccounts) {
            $.supportAccounts = supportAccounts;
            return this;
        }

        /**
         * @param supportAccounts (Updatable) A list of Support Accounts corresponding to user.
         * 
         * @return builder
         * 
         */
        public Builder supportAccounts(List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs> supportAccounts) {
            return supportAccounts(Output.of(supportAccounts));
        }

        /**
         * @param supportAccounts (Updatable) A list of Support Accounts corresponding to user.
         * 
         * @return builder
         * 
         */
        public Builder supportAccounts(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccountArgs... supportAccounts) {
            return supportAccounts(List.of(supportAccounts));
        }

        /**
         * @param syncedFromApp (Updatable) Managed App or an Identity Source from where the user is synced. If enabled, this Managed App or Identity Source can be used for performing delegated authentication.
         * 
         * @return builder
         * 
         */
        public Builder syncedFromApp(@Nullable Output<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs> syncedFromApp) {
            $.syncedFromApp = syncedFromApp;
            return this;
        }

        /**
         * @param syncedFromApp (Updatable) Managed App or an Identity Source from where the user is synced. If enabled, this Managed App or Identity Source can be used for performing delegated authentication.
         * 
         * @return builder
         * 
         */
        public Builder syncedFromApp(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromAppArgs syncedFromApp) {
            return syncedFromApp(Output.of(syncedFromApp));
        }

        /**
         * @param userFlowControlledByExternalClient (Updatable) A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.
         * 
         * @return builder
         * 
         */
        public Builder userFlowControlledByExternalClient(@Nullable Output<Boolean> userFlowControlledByExternalClient) {
            $.userFlowControlledByExternalClient = userFlowControlledByExternalClient;
            return this;
        }

        /**
         * @param userFlowControlledByExternalClient (Updatable) A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.
         * 
         * @return builder
         * 
         */
        public Builder userFlowControlledByExternalClient(Boolean userFlowControlledByExternalClient) {
            return userFlowControlledByExternalClient(Output.of(userFlowControlledByExternalClient));
        }

        /**
         * @param userProvider (Updatable) User Support Account Provider
         * 
         * @return builder
         * 
         */
        public Builder userProvider(@Nullable Output<String> userProvider) {
            $.userProvider = userProvider;
            return this;
        }

        /**
         * @param userProvider (Updatable) User Support Account Provider
         * 
         * @return builder
         * 
         */
        public Builder userProvider(String userProvider) {
            return userProvider(Output.of(userProvider));
        }

        /**
         * @param userTokens (Updatable) User token returned if userFlowControlledByExternalClient is true
         * 
         * @return builder
         * 
         */
        public Builder userTokens(@Nullable Output<List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs>> userTokens) {
            $.userTokens = userTokens;
            return this;
        }

        /**
         * @param userTokens (Updatable) User token returned if userFlowControlledByExternalClient is true
         * 
         * @return builder
         * 
         */
        public Builder userTokens(List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs> userTokens) {
            return userTokens(Output.of(userTokens));
        }

        /**
         * @param userTokens (Updatable) User token returned if userFlowControlledByExternalClient is true
         * 
         * @return builder
         * 
         */
        public Builder userTokens(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserTokenArgs... userTokens) {
            return userTokens(List.of(userTokens));
        }

        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserArgs build() {
            return $;
        }
    }

}
