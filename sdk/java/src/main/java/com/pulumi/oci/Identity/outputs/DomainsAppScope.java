// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainsAppScope {
    /**
     * @return (Updatable) OAuth scope description
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String description;
    /**
     * @return (Updatable) OAuth scope display name
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String displayName;
    /**
     * @return (Updatable) The fully qualified value of this scope within this App. A fully qualified scope combines the &#39;value&#39; of each scope with the value of &#39;audience&#39;. Each value of &#39;fqs&#39; must be unique across the system. Used only when this App acts as an OAuth Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: server
     * 
     */
    private @Nullable String fqs;
    /**
     * @return (Updatable) If true, indicates that this value must be protected.
     * 
     * **Added In:** 18.2.2
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean readOnly;
    /**
     * @return (Updatable) If true, indicates that a user must provide consent to access this scope. Note: Used only when this App acts as an OAuth Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean requiresConsent;
    /**
     * @return (Updatable) OAuth scope.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private String value;

    private DomainsAppScope() {}
    /**
     * @return (Updatable) OAuth scope description
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return (Updatable) OAuth scope display name
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return (Updatable) The fully qualified value of this scope within this App. A fully qualified scope combines the &#39;value&#39; of each scope with the value of &#39;audience&#39;. Each value of &#39;fqs&#39; must be unique across the system. Used only when this App acts as an OAuth Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: server
     * 
     */
    public Optional<String> fqs() {
        return Optional.ofNullable(this.fqs);
    }
    /**
     * @return (Updatable) If true, indicates that this value must be protected.
     * 
     * **Added In:** 18.2.2
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }
    /**
     * @return (Updatable) If true, indicates that a user must provide consent to access this scope. Note: Used only when this App acts as an OAuth Resource.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> requiresConsent() {
        return Optional.ofNullable(this.requiresConsent);
    }
    /**
     * @return (Updatable) OAuth scope.
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsAppScope defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable String fqs;
        private @Nullable Boolean readOnly;
        private @Nullable Boolean requiresConsent;
        private String value;
        public Builder() {}
        public Builder(DomainsAppScope defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.fqs = defaults.fqs;
    	      this.readOnly = defaults.readOnly;
    	      this.requiresConsent = defaults.requiresConsent;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fqs(@Nullable String fqs) {

            this.fqs = fqs;
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(@Nullable Boolean readOnly) {

            this.readOnly = readOnly;
            return this;
        }
        @CustomType.Setter
        public Builder requiresConsent(@Nullable Boolean requiresConsent) {

            this.requiresConsent = requiresConsent;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("DomainsAppScope", "value");
            }
            this.value = value;
            return this;
        }
        public DomainsAppScope build() {
            final var _resultValue = new DomainsAppScope();
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.fqs = fqs;
            _resultValue.readOnly = readOnly;
            _resultValue.requiresConsent = requiresConsent;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
