// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatch;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppApp {
    /**
     * @return (Updatable) FormFill Application Configuration CLOB which has to be maintained in Form-Fill APP for legacy code to do Form-Fill injection
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String configuration;
    /**
     * @return (Updatable) Indicates how FormFill obtains the username and password of the account that FormFill will use to sign into the target App.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String formCredMethod;
    /**
     * @return (Updatable) Credential Sharing Group to which this form-fill application belongs.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String formCredentialSharingGroupId;
    /**
     * @return (Updatable) A list of application-formURLs that FormFill should match against any formUrl that the user-specifies when signing in to the target service.  Each item in the list also indicates how FormFill should interpret that formUrl.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [formUrl]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatch> formFillUrlMatches;
    /**
     * @return (Updatable) Type of the FormFill application like WebApplication, MainFrameApplication, WindowsApplication. Initially, we will support only WebApplication.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String formType;
    /**
     * @return (Updatable) If true, indicates that system is allowed to show the password in plain-text for this account after re-authentication.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean revealPasswordOnForm;
    /**
     * @return (Updatable) If true, indicates that each of the Form-Fill-related attributes that can be inherited from the template actually will be inherited from the template. If false, indicates that the AppTemplate on which this App is based has disabled inheritance for these Form-Fill-related attributes.
     * 
     * **Added In:** 17.4.2
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean syncFromTemplate;
    /**
     * @return (Updatable) Indicates the custom expression, which can combine concat and substring operations with literals and with any attribute of the Oracle Identity Cloud Service User
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String userNameFormExpression;
    /**
     * @return (Updatable) Format for generating a username.  This value can be Username or Email Address; any other value will be treated as a custom expression.  A custom expression may combine &#39;concat&#39; and &#39;substring&#39; operations with literals and with any attribute of the Oracle Identity Cloud Service user.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String userNameFormTemplate;

    private DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppApp() {}
    /**
     * @return (Updatable) FormFill Application Configuration CLOB which has to be maintained in Form-Fill APP for legacy code to do Form-Fill injection
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> configuration() {
        return Optional.ofNullable(this.configuration);
    }
    /**
     * @return (Updatable) Indicates how FormFill obtains the username and password of the account that FormFill will use to sign into the target App.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> formCredMethod() {
        return Optional.ofNullable(this.formCredMethod);
    }
    /**
     * @return (Updatable) Credential Sharing Group to which this form-fill application belongs.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> formCredentialSharingGroupId() {
        return Optional.ofNullable(this.formCredentialSharingGroupId);
    }
    /**
     * @return (Updatable) A list of application-formURLs that FormFill should match against any formUrl that the user-specifies when signing in to the target service.  Each item in the list also indicates how FormFill should interpret that formUrl.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [formUrl]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatch> formFillUrlMatches() {
        return this.formFillUrlMatches == null ? List.of() : this.formFillUrlMatches;
    }
    /**
     * @return (Updatable) Type of the FormFill application like WebApplication, MainFrameApplication, WindowsApplication. Initially, we will support only WebApplication.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> formType() {
        return Optional.ofNullable(this.formType);
    }
    /**
     * @return (Updatable) If true, indicates that system is allowed to show the password in plain-text for this account after re-authentication.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> revealPasswordOnForm() {
        return Optional.ofNullable(this.revealPasswordOnForm);
    }
    /**
     * @return (Updatable) If true, indicates that each of the Form-Fill-related attributes that can be inherited from the template actually will be inherited from the template. If false, indicates that the AppTemplate on which this App is based has disabled inheritance for these Form-Fill-related attributes.
     * 
     * **Added In:** 17.4.2
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> syncFromTemplate() {
        return Optional.ofNullable(this.syncFromTemplate);
    }
    /**
     * @return (Updatable) Indicates the custom expression, which can combine concat and substring operations with literals and with any attribute of the Oracle Identity Cloud Service User
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> userNameFormExpression() {
        return Optional.ofNullable(this.userNameFormExpression);
    }
    /**
     * @return (Updatable) Format for generating a username.  This value can be Username or Email Address; any other value will be treated as a custom expression.  A custom expression may combine &#39;concat&#39; and &#39;substring&#39; operations with literals and with any attribute of the Oracle Identity Cloud Service user.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> userNameFormTemplate() {
        return Optional.ofNullable(this.userNameFormTemplate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String configuration;
        private @Nullable String formCredMethod;
        private @Nullable String formCredentialSharingGroupId;
        private @Nullable List<DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatch> formFillUrlMatches;
        private @Nullable String formType;
        private @Nullable Boolean revealPasswordOnForm;
        private @Nullable Boolean syncFromTemplate;
        private @Nullable String userNameFormExpression;
        private @Nullable String userNameFormTemplate;
        public Builder() {}
        public Builder(DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configuration = defaults.configuration;
    	      this.formCredMethod = defaults.formCredMethod;
    	      this.formCredentialSharingGroupId = defaults.formCredentialSharingGroupId;
    	      this.formFillUrlMatches = defaults.formFillUrlMatches;
    	      this.formType = defaults.formType;
    	      this.revealPasswordOnForm = defaults.revealPasswordOnForm;
    	      this.syncFromTemplate = defaults.syncFromTemplate;
    	      this.userNameFormExpression = defaults.userNameFormExpression;
    	      this.userNameFormTemplate = defaults.userNameFormTemplate;
        }

        @CustomType.Setter
        public Builder configuration(@Nullable String configuration) {

            this.configuration = configuration;
            return this;
        }
        @CustomType.Setter
        public Builder formCredMethod(@Nullable String formCredMethod) {

            this.formCredMethod = formCredMethod;
            return this;
        }
        @CustomType.Setter
        public Builder formCredentialSharingGroupId(@Nullable String formCredentialSharingGroupId) {

            this.formCredentialSharingGroupId = formCredentialSharingGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder formFillUrlMatches(@Nullable List<DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatch> formFillUrlMatches) {

            this.formFillUrlMatches = formFillUrlMatches;
            return this;
        }
        public Builder formFillUrlMatches(DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppAppFormFillUrlMatch... formFillUrlMatches) {
            return formFillUrlMatches(List.of(formFillUrlMatches));
        }
        @CustomType.Setter
        public Builder formType(@Nullable String formType) {

            this.formType = formType;
            return this;
        }
        @CustomType.Setter
        public Builder revealPasswordOnForm(@Nullable Boolean revealPasswordOnForm) {

            this.revealPasswordOnForm = revealPasswordOnForm;
            return this;
        }
        @CustomType.Setter
        public Builder syncFromTemplate(@Nullable Boolean syncFromTemplate) {

            this.syncFromTemplate = syncFromTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder userNameFormExpression(@Nullable String userNameFormExpression) {

            this.userNameFormExpression = userNameFormExpression;
            return this;
        }
        @CustomType.Setter
        public Builder userNameFormTemplate(@Nullable String userNameFormTemplate) {

            this.userNameFormTemplate = userNameFormTemplate;
            return this;
        }
        public DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppApp build() {
            final var _resultValue = new DomainsAppUrnietfparamsscimschemasoracleidcsextensionformFillAppApp();
            _resultValue.configuration = configuration;
            _resultValue.formCredMethod = formCredMethod;
            _resultValue.formCredentialSharingGroupId = formCredentialSharingGroupId;
            _resultValue.formFillUrlMatches = formFillUrlMatches;
            _resultValue.formType = formType;
            _resultValue.revealPasswordOnForm = revealPasswordOnForm;
            _resultValue.syncFromTemplate = syncFromTemplate;
            _resultValue.userNameFormExpression = userNameFormExpression;
            _resultValue.userNameFormTemplate = userNameFormTemplate;
            return _resultValue;
        }
    }
}
