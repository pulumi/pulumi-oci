// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttribute {
    /**
     * @return (Updatable) Indicates the format of the assertion attribute.
     * 
     * **Deprecated Since: 18.2.2**
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * idcsValuePersistedInOtherAttribute: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String format;
    /**
     * @return (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
     * 
     * **Deprecated Since: 18.2.2**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * idcsValuePersistedInOtherAttribute: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private String name;
    /**
     * @return (Updatable) This attribute specifies which user attribute should be used to create the value of the SAML assertion attribute. The userstore attribute can be constructed by using attributes from the Oracle Identity Cloud Service Core Users schema. &lt;br&gt;&lt;b&gt;Note&lt;/b&gt;: Attributes from extensions to the Core User schema are not supported in v1.0.
     * 
     * **Deprecated Since: 18.2.2**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * idcsValuePersistedInOtherAttribute: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private String userStoreAttributeName;

    private DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttribute() {}
    /**
     * @return (Updatable) Indicates the format of the assertion attribute.
     * 
     * **Deprecated Since: 18.2.2**
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * idcsValuePersistedInOtherAttribute: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> format() {
        return Optional.ofNullable(this.format);
    }
    /**
     * @return (Updatable) The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
     * 
     * **Deprecated Since: 18.2.2**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * idcsValuePersistedInOtherAttribute: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return (Updatable) This attribute specifies which user attribute should be used to create the value of the SAML assertion attribute. The userstore attribute can be constructed by using attributes from the Oracle Identity Cloud Service Core Users schema. &lt;br&gt;&lt;b&gt;Note&lt;/b&gt;: Attributes from extensions to the Core User schema are not supported in v1.0.
     * 
     * **Deprecated Since: 18.2.2**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * idcsValuePersistedInOtherAttribute: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public String userStoreAttributeName() {
        return this.userStoreAttributeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttribute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String format;
        private String name;
        private String userStoreAttributeName;
        public Builder() {}
        public Builder(DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttribute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.format = defaults.format;
    	      this.name = defaults.name;
    	      this.userStoreAttributeName = defaults.userStoreAttributeName;
        }

        @CustomType.Setter
        public Builder format(@Nullable String format) {
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder userStoreAttributeName(String userStoreAttributeName) {
            this.userStoreAttributeName = Objects.requireNonNull(userStoreAttributeName);
            return this;
        }
        public DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttribute build() {
            final var _resultValue = new DomainsAppUrnietfparamsscimschemasoracleidcsextensionsamlServiceProviderAppUserAssertionAttribute();
            _resultValue.format = format;
            _resultValue.name = name;
            _resultValue.userStoreAttributeName = userStoreAttributeName;
            return _resultValue;
        }
    }
}
