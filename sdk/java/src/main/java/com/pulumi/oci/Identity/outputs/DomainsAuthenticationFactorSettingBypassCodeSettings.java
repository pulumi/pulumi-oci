// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class DomainsAuthenticationFactorSettingBypassCodeSettings {
    /**
     * @return (Updatable) Expiry (in minutes) of any bypass code that is generated by the help desk
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 9999999
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    private Integer helpDeskCodeExpiryInMins;
    /**
     * @return (Updatable) If true, indicates that help desk bypass code generation is enabled
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private Boolean helpDeskGenerationEnabled;
    /**
     * @return (Updatable) The maximum number of times that any bypass code that is generated by the help desk can be used
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 999
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    private Integer helpDeskMaxUsage;
    /**
     * @return (Updatable) Exact length of the bypass code to be generated
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 8
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    private Integer length;
    /**
     * @return (Updatable) The maximum number of bypass codes that can be issued to any user
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 6
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    private Integer maxActive;
    /**
     * @return (Updatable) If true, indicates that self-service bypass code generation is enabled
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private Boolean selfServiceGenerationEnabled;

    private DomainsAuthenticationFactorSettingBypassCodeSettings() {}
    /**
     * @return (Updatable) Expiry (in minutes) of any bypass code that is generated by the help desk
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 9999999
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Integer helpDeskCodeExpiryInMins() {
        return this.helpDeskCodeExpiryInMins;
    }
    /**
     * @return (Updatable) If true, indicates that help desk bypass code generation is enabled
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Boolean helpDeskGenerationEnabled() {
        return this.helpDeskGenerationEnabled;
    }
    /**
     * @return (Updatable) The maximum number of times that any bypass code that is generated by the help desk can be used
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 999
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Integer helpDeskMaxUsage() {
        return this.helpDeskMaxUsage;
    }
    /**
     * @return (Updatable) Exact length of the bypass code to be generated
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 8
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Integer length() {
        return this.length;
    }
    /**
     * @return (Updatable) The maximum number of bypass codes that can be issued to any user
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 6
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Integer maxActive() {
        return this.maxActive;
    }
    /**
     * @return (Updatable) If true, indicates that self-service bypass code generation is enabled
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Boolean selfServiceGenerationEnabled() {
        return this.selfServiceGenerationEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsAuthenticationFactorSettingBypassCodeSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer helpDeskCodeExpiryInMins;
        private Boolean helpDeskGenerationEnabled;
        private Integer helpDeskMaxUsage;
        private Integer length;
        private Integer maxActive;
        private Boolean selfServiceGenerationEnabled;
        public Builder() {}
        public Builder(DomainsAuthenticationFactorSettingBypassCodeSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.helpDeskCodeExpiryInMins = defaults.helpDeskCodeExpiryInMins;
    	      this.helpDeskGenerationEnabled = defaults.helpDeskGenerationEnabled;
    	      this.helpDeskMaxUsage = defaults.helpDeskMaxUsage;
    	      this.length = defaults.length;
    	      this.maxActive = defaults.maxActive;
    	      this.selfServiceGenerationEnabled = defaults.selfServiceGenerationEnabled;
        }

        @CustomType.Setter
        public Builder helpDeskCodeExpiryInMins(Integer helpDeskCodeExpiryInMins) {
            if (helpDeskCodeExpiryInMins == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingBypassCodeSettings", "helpDeskCodeExpiryInMins");
            }
            this.helpDeskCodeExpiryInMins = helpDeskCodeExpiryInMins;
            return this;
        }
        @CustomType.Setter
        public Builder helpDeskGenerationEnabled(Boolean helpDeskGenerationEnabled) {
            if (helpDeskGenerationEnabled == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingBypassCodeSettings", "helpDeskGenerationEnabled");
            }
            this.helpDeskGenerationEnabled = helpDeskGenerationEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder helpDeskMaxUsage(Integer helpDeskMaxUsage) {
            if (helpDeskMaxUsage == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingBypassCodeSettings", "helpDeskMaxUsage");
            }
            this.helpDeskMaxUsage = helpDeskMaxUsage;
            return this;
        }
        @CustomType.Setter
        public Builder length(Integer length) {
            if (length == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingBypassCodeSettings", "length");
            }
            this.length = length;
            return this;
        }
        @CustomType.Setter
        public Builder maxActive(Integer maxActive) {
            if (maxActive == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingBypassCodeSettings", "maxActive");
            }
            this.maxActive = maxActive;
            return this;
        }
        @CustomType.Setter
        public Builder selfServiceGenerationEnabled(Boolean selfServiceGenerationEnabled) {
            if (selfServiceGenerationEnabled == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingBypassCodeSettings", "selfServiceGenerationEnabled");
            }
            this.selfServiceGenerationEnabled = selfServiceGenerationEnabled;
            return this;
        }
        public DomainsAuthenticationFactorSettingBypassCodeSettings build() {
            final var _resultValue = new DomainsAuthenticationFactorSettingBypassCodeSettings();
            _resultValue.helpDeskCodeExpiryInMins = helpDeskCodeExpiryInMins;
            _resultValue.helpDeskGenerationEnabled = helpDeskGenerationEnabled;
            _resultValue.helpDeskMaxUsage = helpDeskMaxUsage;
            _resultValue.length = length;
            _resultValue.maxActive = maxActive;
            _resultValue.selfServiceGenerationEnabled = selfServiceGenerationEnabled;
            return _resultValue;
        }
    }
}
