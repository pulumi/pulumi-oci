// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class DomainsAuthenticationFactorSettingEndpointRestrictions {
    /**
     * @return (Updatable) Maximum number of days until an endpoint can be trusted
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 180
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    private Integer maxEndpointTrustDurationInDays;
    /**
     * @return (Updatable) Maximum number of enrolled devices per user
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    private Integer maxEnrolledDevices;
    /**
     * @return (Updatable) An integer that represents the maximum number of failed MFA logins before an account is locked
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 5
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    private Integer maxIncorrectAttempts;
    /**
     * @return (Updatable) Max number of trusted endpoints per user
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    private Integer maxTrustedEndpoints;
    /**
     * @return (Updatable) Specify if trusted endpoints are enabled
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private Boolean trustedEndpointsEnabled;

    private DomainsAuthenticationFactorSettingEndpointRestrictions() {}
    /**
     * @return (Updatable) Maximum number of days until an endpoint can be trusted
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 180
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Integer maxEndpointTrustDurationInDays() {
        return this.maxEndpointTrustDurationInDays;
    }
    /**
     * @return (Updatable) Maximum number of enrolled devices per user
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Integer maxEnrolledDevices() {
        return this.maxEnrolledDevices;
    }
    /**
     * @return (Updatable) An integer that represents the maximum number of failed MFA logins before an account is locked
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 5
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Integer maxIncorrectAttempts() {
        return this.maxIncorrectAttempts;
    }
    /**
     * @return (Updatable) Max number of trusted endpoints per user
     * 
     * **SCIM++ Properties:**
     * * idcsMaxValue: 20
     * * idcsMinValue: 1
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: integer
     * * uniqueness: none
     * 
     */
    public Integer maxTrustedEndpoints() {
        return this.maxTrustedEndpoints;
    }
    /**
     * @return (Updatable) Specify if trusted endpoints are enabled
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Boolean trustedEndpointsEnabled() {
        return this.trustedEndpointsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsAuthenticationFactorSettingEndpointRestrictions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxEndpointTrustDurationInDays;
        private Integer maxEnrolledDevices;
        private Integer maxIncorrectAttempts;
        private Integer maxTrustedEndpoints;
        private Boolean trustedEndpointsEnabled;
        public Builder() {}
        public Builder(DomainsAuthenticationFactorSettingEndpointRestrictions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxEndpointTrustDurationInDays = defaults.maxEndpointTrustDurationInDays;
    	      this.maxEnrolledDevices = defaults.maxEnrolledDevices;
    	      this.maxIncorrectAttempts = defaults.maxIncorrectAttempts;
    	      this.maxTrustedEndpoints = defaults.maxTrustedEndpoints;
    	      this.trustedEndpointsEnabled = defaults.trustedEndpointsEnabled;
        }

        @CustomType.Setter
        public Builder maxEndpointTrustDurationInDays(Integer maxEndpointTrustDurationInDays) {
            if (maxEndpointTrustDurationInDays == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingEndpointRestrictions", "maxEndpointTrustDurationInDays");
            }
            this.maxEndpointTrustDurationInDays = maxEndpointTrustDurationInDays;
            return this;
        }
        @CustomType.Setter
        public Builder maxEnrolledDevices(Integer maxEnrolledDevices) {
            if (maxEnrolledDevices == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingEndpointRestrictions", "maxEnrolledDevices");
            }
            this.maxEnrolledDevices = maxEnrolledDevices;
            return this;
        }
        @CustomType.Setter
        public Builder maxIncorrectAttempts(Integer maxIncorrectAttempts) {
            if (maxIncorrectAttempts == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingEndpointRestrictions", "maxIncorrectAttempts");
            }
            this.maxIncorrectAttempts = maxIncorrectAttempts;
            return this;
        }
        @CustomType.Setter
        public Builder maxTrustedEndpoints(Integer maxTrustedEndpoints) {
            if (maxTrustedEndpoints == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingEndpointRestrictions", "maxTrustedEndpoints");
            }
            this.maxTrustedEndpoints = maxTrustedEndpoints;
            return this;
        }
        @CustomType.Setter
        public Builder trustedEndpointsEnabled(Boolean trustedEndpointsEnabled) {
            if (trustedEndpointsEnabled == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingEndpointRestrictions", "trustedEndpointsEnabled");
            }
            this.trustedEndpointsEnabled = trustedEndpointsEnabled;
            return this;
        }
        public DomainsAuthenticationFactorSettingEndpointRestrictions build() {
            final var _resultValue = new DomainsAuthenticationFactorSettingEndpointRestrictions();
            _resultValue.maxEndpointTrustDurationInDays = maxEndpointTrustDurationInDays;
            _resultValue.maxEnrolledDevices = maxEnrolledDevices;
            _resultValue.maxIncorrectAttempts = maxIncorrectAttempts;
            _resultValue.maxTrustedEndpoints = maxTrustedEndpoints;
            _resultValue.trustedEndpointsEnabled = trustedEndpointsEnabled;
            return _resultValue;
        }
    }
}
