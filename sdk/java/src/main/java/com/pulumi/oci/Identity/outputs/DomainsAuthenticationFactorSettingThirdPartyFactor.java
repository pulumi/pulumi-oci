// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class DomainsAuthenticationFactorSettingThirdPartyFactor {
    /**
     * @return (Updatable) To enable Duo Security factor
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private Boolean duoSecurity;

    private DomainsAuthenticationFactorSettingThirdPartyFactor() {}
    /**
     * @return (Updatable) To enable Duo Security factor
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Boolean duoSecurity() {
        return this.duoSecurity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsAuthenticationFactorSettingThirdPartyFactor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean duoSecurity;
        public Builder() {}
        public Builder(DomainsAuthenticationFactorSettingThirdPartyFactor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duoSecurity = defaults.duoSecurity;
        }

        @CustomType.Setter
        public Builder duoSecurity(Boolean duoSecurity) {
            if (duoSecurity == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingThirdPartyFactor", "duoSecurity");
            }
            this.duoSecurity = duoSecurity;
            return this;
        }
        public DomainsAuthenticationFactorSettingThirdPartyFactor build() {
            final var _resultValue = new DomainsAuthenticationFactorSettingThirdPartyFactor();
            _resultValue.duoSecurity = duoSecurity;
            return _resultValue;
        }
    }
}
