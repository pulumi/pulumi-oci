// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings {
    /**
     * @return (Updatable) Hostname to access the Duo security account
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private String apiHostname;
    /**
     * @return (Updatable) Attestation key to attest the request and response between Duo Security
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: never
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String attestationKey;
    /**
     * @return (Updatable) Integration key from Duo Security authenticator
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private String integrationKey;
    /**
     * @return (Updatable) Secret key from Duo Security authenticator
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private String secretKey;
    /**
     * @return (Updatable) User attribute mapping value
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private String userMappingAttribute;

    private DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings() {}
    /**
     * @return (Updatable) Hostname to access the Duo security account
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public String apiHostname() {
        return this.apiHostname;
    }
    /**
     * @return (Updatable) Attestation key to attest the request and response between Duo Security
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: never
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> attestationKey() {
        return Optional.ofNullable(this.attestationKey);
    }
    /**
     * @return (Updatable) Integration key from Duo Security authenticator
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public String integrationKey() {
        return this.integrationKey;
    }
    /**
     * @return (Updatable) Secret key from Duo Security authenticator
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public String secretKey() {
        return this.secretKey;
    }
    /**
     * @return (Updatable) User attribute mapping value
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public String userMappingAttribute() {
        return this.userMappingAttribute;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiHostname;
        private @Nullable String attestationKey;
        private String integrationKey;
        private String secretKey;
        private String userMappingAttribute;
        public Builder() {}
        public Builder(DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiHostname = defaults.apiHostname;
    	      this.attestationKey = defaults.attestationKey;
    	      this.integrationKey = defaults.integrationKey;
    	      this.secretKey = defaults.secretKey;
    	      this.userMappingAttribute = defaults.userMappingAttribute;
        }

        @CustomType.Setter
        public Builder apiHostname(String apiHostname) {
            if (apiHostname == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings", "apiHostname");
            }
            this.apiHostname = apiHostname;
            return this;
        }
        @CustomType.Setter
        public Builder attestationKey(@Nullable String attestationKey) {

            this.attestationKey = attestationKey;
            return this;
        }
        @CustomType.Setter
        public Builder integrationKey(String integrationKey) {
            if (integrationKey == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings", "integrationKey");
            }
            this.integrationKey = integrationKey;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(String secretKey) {
            if (secretKey == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings", "secretKey");
            }
            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder userMappingAttribute(String userMappingAttribute) {
            if (userMappingAttribute == null) {
              throw new MissingRequiredPropertyException("DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings", "userMappingAttribute");
            }
            this.userMappingAttribute = userMappingAttribute;
            return this;
        }
        public DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings build() {
            final var _resultValue = new DomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettingsDuoSecuritySettings();
            _resultValue.apiHostname = apiHostname;
            _resultValue.attestationKey = attestationKey;
            _resultValue.integrationKey = integrationKey;
            _resultValue.secretKey = secretKey;
            _resultValue.userMappingAttribute = userMappingAttribute;
            return _resultValue;
        }
    }
}
