// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainsNotificationSettingFromEmailAddress {
    /**
     * @return (Updatable) Display name for the From email address
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * 
     */
    private @Nullable String displayName;
    /**
     * @return (Updatable) From address verification mode. If postmaster account is available then &#39;domain&#39; mode is used or entire valid email can be verified using &#39;email&#39; mode
     * 
     * **Added In:** 18.2.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private String validate;
    /**
     * @return (Updatable) Validation status for the From email address
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * 
     */
    private @Nullable String validationStatus;
    /**
     * @return (Updatable) Value of the From email address
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * 
     */
    private String value;

    private DomainsNotificationSettingFromEmailAddress() {}
    /**
     * @return (Updatable) Display name for the From email address
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return (Updatable) From address verification mode. If postmaster account is available then &#39;domain&#39; mode is used or entire valid email can be verified using &#39;email&#39; mode
     * 
     * **Added In:** 18.2.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public String validate() {
        return this.validate;
    }
    /**
     * @return (Updatable) Validation status for the From email address
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: string
     * 
     */
    public Optional<String> validationStatus() {
        return Optional.ofNullable(this.validationStatus);
    }
    /**
     * @return (Updatable) Value of the From email address
     * 
     * **SCIM++ Properties:**
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: string
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsNotificationSettingFromEmailAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String displayName;
        private String validate;
        private @Nullable String validationStatus;
        private String value;
        public Builder() {}
        public Builder(DomainsNotificationSettingFromEmailAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.validate = defaults.validate;
    	      this.validationStatus = defaults.validationStatus;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder validate(String validate) {
            if (validate == null) {
              throw new MissingRequiredPropertyException("DomainsNotificationSettingFromEmailAddress", "validate");
            }
            this.validate = validate;
            return this;
        }
        @CustomType.Setter
        public Builder validationStatus(@Nullable String validationStatus) {

            this.validationStatus = validationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("DomainsNotificationSettingFromEmailAddress", "value");
            }
            this.value = value;
            return this;
        }
        public DomainsNotificationSettingFromEmailAddress build() {
            final var _resultValue = new DomainsNotificationSettingFromEmailAddress();
            _resultValue.displayName = displayName;
            _resultValue.validate = validate;
            _resultValue.validationStatus = validationStatus;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
