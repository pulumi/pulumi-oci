// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser {
    /**
     * @return (Updatable) Risk Level
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String riskLevel;
    /**
     * @return (Updatable) The risk score pertaining to the user.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [value]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore> riskScores;

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser() {}
    /**
     * @return (Updatable) Risk Level
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> riskLevel() {
        return Optional.ofNullable(this.riskLevel);
    }
    /**
     * @return (Updatable) The risk score pertaining to the user.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCompositeKey: [value]
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore> riskScores() {
        return this.riskScores == null ? List.of() : this.riskScores;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String riskLevel;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore> riskScores;
        public Builder() {}
        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.riskLevel = defaults.riskLevel;
    	      this.riskScores = defaults.riskScores;
        }

        @CustomType.Setter
        public Builder riskLevel(@Nullable String riskLevel) {
            this.riskLevel = riskLevel;
            return this;
        }
        @CustomType.Setter
        public Builder riskScores(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore> riskScores) {
            this.riskScores = riskScores;
            return this;
        }
        public Builder riskScores(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore... riskScores) {
            return riskScores(List.of(riskScores));
        }
        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser build() {
            final var _resultValue = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUser();
            _resultValue.riskLevel = riskLevel;
            _resultValue.riskScores = riskScores;
            return _resultValue;
        }
    }
}
