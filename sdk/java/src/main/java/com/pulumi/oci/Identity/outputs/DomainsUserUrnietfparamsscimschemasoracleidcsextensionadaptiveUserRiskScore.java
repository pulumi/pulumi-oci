// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore {
    /**
     * @return (Updatable) Last update timestamp for the risk score
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: dateTime
     * * uniqueness: none
     * 
     */
    private String lastUpdateTimestamp;
    /**
     * @return (Updatable) Risk Provider Profile URI: URI that corresponds to risk source identifier.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: reference
     * * uniqueness: none
     * 
     */
    private @Nullable String ref;
    /**
     * @return (Updatable) Risk Level
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    private String riskLevel;
    /**
     * @return (Updatable) Risk Score value
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: integer
     * * uniqueness: none
     * * idcsMaxValue: 100
     * * idcsMinValue: 0
     * 
     */
    private Integer score;
    /**
     * @return (Updatable) Risk Provider Profile Source
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String source;
    /**
     * @return (Updatable) Risk Provider Profile status
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String status;
    /**
     * @return (Updatable) Risk Provider Profile: Identifier for the provider service from which the risk score was received.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    private String value;

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore() {}
    /**
     * @return (Updatable) Last update timestamp for the risk score
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: dateTime
     * * uniqueness: none
     * 
     */
    public String lastUpdateTimestamp() {
        return this.lastUpdateTimestamp;
    }
    /**
     * @return (Updatable) Risk Provider Profile URI: URI that corresponds to risk source identifier.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: reference
     * * uniqueness: none
     * 
     */
    public Optional<String> ref() {
        return Optional.ofNullable(this.ref);
    }
    /**
     * @return (Updatable) Risk Level
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public String riskLevel() {
        return this.riskLevel;
    }
    /**
     * @return (Updatable) Risk Score value
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: integer
     * * uniqueness: none
     * * idcsMaxValue: 100
     * * idcsMinValue: 0
     * 
     */
    public Integer score() {
        return this.score;
    }
    /**
     * @return (Updatable) Risk Provider Profile Source
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> source() {
        return Optional.ofNullable(this.source);
    }
    /**
     * @return (Updatable) Risk Provider Profile status
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return (Updatable) Risk Provider Profile: Identifier for the provider service from which the risk score was received.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: true
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String lastUpdateTimestamp;
        private @Nullable String ref;
        private String riskLevel;
        private Integer score;
        private @Nullable String source;
        private @Nullable String status;
        private String value;
        public Builder() {}
        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lastUpdateTimestamp = defaults.lastUpdateTimestamp;
    	      this.ref = defaults.ref;
    	      this.riskLevel = defaults.riskLevel;
    	      this.score = defaults.score;
    	      this.source = defaults.source;
    	      this.status = defaults.status;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder lastUpdateTimestamp(String lastUpdateTimestamp) {
            if (lastUpdateTimestamp == null) {
              throw new MissingRequiredPropertyException("DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore", "lastUpdateTimestamp");
            }
            this.lastUpdateTimestamp = lastUpdateTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder ref(@Nullable String ref) {

            this.ref = ref;
            return this;
        }
        @CustomType.Setter
        public Builder riskLevel(String riskLevel) {
            if (riskLevel == null) {
              throw new MissingRequiredPropertyException("DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore", "riskLevel");
            }
            this.riskLevel = riskLevel;
            return this;
        }
        @CustomType.Setter
        public Builder score(Integer score) {
            if (score == null) {
              throw new MissingRequiredPropertyException("DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore", "score");
            }
            this.score = score;
            return this;
        }
        @CustomType.Setter
        public Builder source(@Nullable String source) {

            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore", "value");
            }
            this.value = value;
            return this;
        }
        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore build() {
            final var _resultValue = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionadaptiveUserRiskScore();
            _resultValue.lastUpdateTimestamp = lastUpdateTimestamp;
            _resultValue.ref = ref;
            _resultValue.riskLevel = riskLevel;
            _resultValue.score = score;
            _resultValue.source = source;
            _resultValue.status = status;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
