// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKey;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthToken;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKey;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredential;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredential;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredential;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser {
    /**
     * @return (Updatable) A list of api keys corresponding to user.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKey> apiKeys;
    /**
     * @return (Updatable) A list of auth tokens corresponding to user.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthToken> authTokens;
    /**
     * @return (Updatable) A list of customer secret keys corresponding to user.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKey> customerSecretKeys;
    /**
     * @return (Updatable) A list of db credentials corresponding to user.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredential> dbCredentials;
    /**
     * @return (Updatable) A list of oauth2 client credentials corresponding to user.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredential> oAuth2clientCredentials;
    /**
     * @return (Updatable) A list of smtp credentials corresponding to user.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredential> smtpCredentials;

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser() {}
    /**
     * @return (Updatable) A list of api keys corresponding to user.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKey> apiKeys() {
        return this.apiKeys == null ? List.of() : this.apiKeys;
    }
    /**
     * @return (Updatable) A list of auth tokens corresponding to user.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthToken> authTokens() {
        return this.authTokens == null ? List.of() : this.authTokens;
    }
    /**
     * @return (Updatable) A list of customer secret keys corresponding to user.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKey> customerSecretKeys() {
        return this.customerSecretKeys == null ? List.of() : this.customerSecretKeys;
    }
    /**
     * @return (Updatable) A list of db credentials corresponding to user.
     * 
     * **Added In:** 2102181953
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredential> dbCredentials() {
        return this.dbCredentials == null ? List.of() : this.dbCredentials;
    }
    /**
     * @return (Updatable) A list of oauth2 client credentials corresponding to user.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredential> oAuth2clientCredentials() {
        return this.oAuth2clientCredentials == null ? List.of() : this.oAuth2clientCredentials;
    }
    /**
     * @return (Updatable) A list of smtp credentials corresponding to user.
     * 
     * **Added In:** 2012271618
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredential> smtpCredentials() {
        return this.smtpCredentials == null ? List.of() : this.smtpCredentials;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKey> apiKeys;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthToken> authTokens;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKey> customerSecretKeys;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredential> dbCredentials;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredential> oAuth2clientCredentials;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredential> smtpCredentials;
        public Builder() {}
        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiKeys = defaults.apiKeys;
    	      this.authTokens = defaults.authTokens;
    	      this.customerSecretKeys = defaults.customerSecretKeys;
    	      this.dbCredentials = defaults.dbCredentials;
    	      this.oAuth2clientCredentials = defaults.oAuth2clientCredentials;
    	      this.smtpCredentials = defaults.smtpCredentials;
        }

        @CustomType.Setter
        public Builder apiKeys(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKey> apiKeys) {
            this.apiKeys = apiKeys;
            return this;
        }
        public Builder apiKeys(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserApiKey... apiKeys) {
            return apiKeys(List.of(apiKeys));
        }
        @CustomType.Setter
        public Builder authTokens(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthToken> authTokens) {
            this.authTokens = authTokens;
            return this;
        }
        public Builder authTokens(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserAuthToken... authTokens) {
            return authTokens(List.of(authTokens));
        }
        @CustomType.Setter
        public Builder customerSecretKeys(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKey> customerSecretKeys) {
            this.customerSecretKeys = customerSecretKeys;
            return this;
        }
        public Builder customerSecretKeys(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserCustomerSecretKey... customerSecretKeys) {
            return customerSecretKeys(List.of(customerSecretKeys));
        }
        @CustomType.Setter
        public Builder dbCredentials(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredential> dbCredentials) {
            this.dbCredentials = dbCredentials;
            return this;
        }
        public Builder dbCredentials(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserDbCredential... dbCredentials) {
            return dbCredentials(List.of(dbCredentials));
        }
        @CustomType.Setter
        public Builder oAuth2clientCredentials(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredential> oAuth2clientCredentials) {
            this.oAuth2clientCredentials = oAuth2clientCredentials;
            return this;
        }
        public Builder oAuth2clientCredentials(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserOAuth2clientCredential... oAuth2clientCredentials) {
            return oAuth2clientCredentials(List.of(oAuth2clientCredentials));
        }
        @CustomType.Setter
        public Builder smtpCredentials(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredential> smtpCredentials) {
            this.smtpCredentials = smtpCredentials;
            return this;
        }
        public Builder smtpCredentials(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUserSmtpCredential... smtpCredentials) {
            return smtpCredentials(List.of(smtpCredentials));
        }
        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser build() {
            final var o = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserCredentialsUser();
            o.apiKeys = apiKeys;
            o.authTokens = authTokens;
            o.customerSecretKeys = customerSecretKeys;
            o.dbCredentials = dbCredentials;
            o.oAuth2clientCredentials = oAuth2clientCredentials;
            o.smtpCredentials = smtpCredentials;
            return o;
        }
    }
}
