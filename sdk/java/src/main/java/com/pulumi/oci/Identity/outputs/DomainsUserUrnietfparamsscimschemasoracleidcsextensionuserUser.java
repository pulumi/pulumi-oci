// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccount;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRole;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetApp;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetApp;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroup;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccount;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromApp;
import com.pulumi.oci.Identity.outputs.DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserToken;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser {
    /**
     * @return (Updatable) Boolean value to prompt user to setup account recovery during login.
     * 
     * **Added In:** 19.1.4
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean accountRecoveryRequired;
    /**
     * @return (Updatable) Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.
     * 
     * **SCIM++ Properties:**
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccount> accounts;
    /**
     * @return (Updatable) A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRole> appRoles;
    /**
     * @return (Updatable) The app against which the user will authenticate. The value is not persisted but rather calculated. If the user&#39;s delegatedAuthenticationTargetApp is set, that value is returned. Otherwise, the app returned by evaluating the user&#39;s applicable Delegated Authentication Policy is returned.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetApp> applicableAuthenticationTargetApps;
    /**
     * @return (Updatable) A Boolean value indicating whether or not to send email notification after creating the user. This attribute is not used in update/replace operations.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:ByPass Notification]]
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * idcsRequiresWriteForAccessFlows: true
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean bypassNotification;
    /**
     * @return (Updatable) User creation mechanism
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeNameMappings: [[defaultValue:import]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * idcsRequiresWriteForAccessFlows: true
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String creationMechanism;
    /**
     * @return (Updatable) If set, indicates the user&#39;s preferred authentication target app. If not set and the user&#39;s \&#34;syncedFromApp\&#34; is set and is enabled for delegated authentication, it is used. Otherwise, the user authenticates locally to Oracle Identity Cloud Service.
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetApp delegatedAuthenticationTargetApp;
    /**
     * @return (Updatable) A Boolean value indicating whether or not to hide the getting started page
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean doNotShowGettingStarted;
    /**
     * @return (Updatable) Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant> grants;
    /**
     * @return (Updatable) Specifies date time when a User&#39;s group membership was last modified.
     * 
     * **Added In:** 2304270343
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: dateTime
     * * uniqueness: none
     * 
     */
    private @Nullable String groupMembershipLastModified;
    /**
     * @return (Updatable) Description:
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, idcsAppRoleId]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroup> idcsAppRolesLimitedToGroups;
    /**
     * @return (Updatable) A Boolean value indicating whether or not a user is enrolled for account recovery
     * 
     * **Added In:** 19.1.4
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean isAccountRecoveryEnrolled;
    /**
     * @return (Updatable) A Boolean value indicating whether or not authentication request by this user should be delegated to a remote app. This value should be true only when the User was originally synced from an app which is enabled for delegated authentication
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean isAuthenticationDelegated;
    /**
     * @return (Updatable) A Boolean value indicating whether or not the user is federated.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Federated
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Federated]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * idcsRequiresWriteForAccessFlows: true
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean isFederatedUser;
    /**
     * @return (Updatable) A Boolean value indicating whether or not group membership is normalized for this user.
     * 
     * **Deprecated Since: 19.3.3**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean isGroupMembershipNormalized;
    /**
     * @return (Updatable) A Boolean value Indicates whether this User&#39;s group membership has been sync&#39;ed from Group.members to UsersGroups.
     * 
     * **Added In:** 19.3.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean isGroupMembershipSyncedToUsersGroups;
    /**
     * @return (Updatable) Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: writeOnly
     * * required: false
     * * returned: never
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String notificationEmailTemplateId;
    /**
     * @return (Updatable) User&#39;s preferred landing page following login, logout and reset password.
     * 
     * **Added In:** 2302092332
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String preferredUiLandingPage;
    /**
     * @return (Updatable) Indicates if User is a Service User
     * 
     * **Added In:** 2306131901
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Service User
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Service User]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean serviceUser;
    /**
     * @return (Updatable) A supplemental status indicating the reason why a user is disabled
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String status;
    /**
     * @return (Updatable) A list of Support Accounts corresponding to user.
     * 
     * **Added In:** 2103141444
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccount> supportAccounts;
    /**
     * @return (Updatable) Managed App or an Identity Source from where the user is synced. If enabled, this Managed App or Identity Source can be used for performing delegated authentication.
     * 
     * **Added In:** 18.2.6
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromApp syncedFromApp;
    /**
     * @return (Updatable) A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     * 
     */
    private @Nullable Boolean userFlowControlledByExternalClient;
    /**
     * @return (Updatable) User Support Account Provider
     * 
     * **Added In:** 2103141444
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    private @Nullable String userProvider;
    /**
     * @return (Updatable) User token returned if userFlowControlledByExternalClient is true
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserToken> userTokens;

    private DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser() {}
    /**
     * @return (Updatable) Boolean value to prompt user to setup account recovery during login.
     * 
     * **Added In:** 19.1.4
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: request
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> accountRecoveryRequired() {
        return Optional.ofNullable(this.accountRecoveryRequired);
    }
    /**
     * @return (Updatable) Accounts assigned to this User. Each value of this attribute refers to an app-specific identity that is owned by this User. Therefore, this attribute is a convenience that allows one to see on each User the Apps to which that User has access.
     * 
     * **SCIM++ Properties:**
     * * idcsPii: true
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccount> accounts() {
        return this.accounts == null ? List.of() : this.accounts;
    }
    /**
     * @return (Updatable) A list of all AppRoles to which this User belongs directly, indirectly or implicitly. The User could belong directly because the User is a member of the AppRole, could belong indirectly because the User is a member of a Group that is a member of the AppRole, or could belong implicitly because the AppRole is public.
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRole> appRoles() {
        return this.appRoles == null ? List.of() : this.appRoles;
    }
    /**
     * @return (Updatable) The app against which the user will authenticate. The value is not persisted but rather calculated. If the user&#39;s delegatedAuthenticationTargetApp is set, that value is returned. Otherwise, the app returned by evaluating the user&#39;s applicable Delegated Authentication Policy is returned.
     * 
     * **Added In:** 18.1.6
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetApp> applicableAuthenticationTargetApps() {
        return this.applicableAuthenticationTargetApps == null ? List.of() : this.applicableAuthenticationTargetApps;
    }
    /**
     * @return (Updatable) A Boolean value indicating whether or not to send email notification after creating the user. This attribute is not used in update/replace operations.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:ByPass Notification]]
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * idcsRequiresWriteForAccessFlows: true
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> bypassNotification() {
        return Optional.ofNullable(this.bypassNotification);
    }
    /**
     * @return (Updatable) User creation mechanism
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeNameMappings: [[defaultValue:import]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * idcsRequiresWriteForAccessFlows: true
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> creationMechanism() {
        return Optional.ofNullable(this.creationMechanism);
    }
    /**
     * @return (Updatable) If set, indicates the user&#39;s preferred authentication target app. If not set and the user&#39;s \&#34;syncedFromApp\&#34; is set and is enabled for delegated authentication, it is used. Otherwise, the user authenticates locally to Oracle Identity Cloud Service.
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetApp> delegatedAuthenticationTargetApp() {
        return Optional.ofNullable(this.delegatedAuthenticationTargetApp);
    }
    /**
     * @return (Updatable) A Boolean value indicating whether or not to hide the getting started page
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> doNotShowGettingStarted() {
        return Optional.ofNullable(this.doNotShowGettingStarted);
    }
    /**
     * @return (Updatable) Grants to this User. Each value of this attribute refers to a Grant to this User of some App (and optionally of some entitlement). Therefore, this attribute is a convenience that allows one to see on each User all of the Grants to that User.
     * 
     * **SCIM++ Properties:**
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant> grants() {
        return this.grants == null ? List.of() : this.grants;
    }
    /**
     * @return (Updatable) Specifies date time when a User&#39;s group membership was last modified.
     * 
     * **Added In:** 2304270343
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: dateTime
     * * uniqueness: none
     * 
     */
    public Optional<String> groupMembershipLastModified() {
        return Optional.ofNullable(this.groupMembershipLastModified);
    }
    /**
     * @return (Updatable) Description:
     * 
     * **Added In:** 19.2.1
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value, idcsAppRoleId]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroup> idcsAppRolesLimitedToGroups() {
        return this.idcsAppRolesLimitedToGroups == null ? List.of() : this.idcsAppRolesLimitedToGroups;
    }
    /**
     * @return (Updatable) A Boolean value indicating whether or not a user is enrolled for account recovery
     * 
     * **Added In:** 19.1.4
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> isAccountRecoveryEnrolled() {
        return Optional.ofNullable(this.isAccountRecoveryEnrolled);
    }
    /**
     * @return (Updatable) A Boolean value indicating whether or not authentication request by this user should be delegated to a remote app. This value should be true only when the User was originally synced from an app which is enabled for delegated authentication
     * 
     * **Added In:** 17.4.6
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> isAuthenticationDelegated() {
        return Optional.ofNullable(this.isAuthenticationDelegated);
    }
    /**
     * @return (Updatable) A Boolean value indicating whether or not the user is federated.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Federated
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Federated]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * idcsRequiresWriteForAccessFlows: true
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> isFederatedUser() {
        return Optional.ofNullable(this.isFederatedUser);
    }
    /**
     * @return (Updatable) A Boolean value indicating whether or not group membership is normalized for this user.
     * 
     * **Deprecated Since: 19.3.3**
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> isGroupMembershipNormalized() {
        return Optional.ofNullable(this.isGroupMembershipNormalized);
    }
    /**
     * @return (Updatable) A Boolean value Indicates whether this User&#39;s group membership has been sync&#39;ed from Group.members to UsersGroups.
     * 
     * **Added In:** 19.3.3
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> isGroupMembershipSyncedToUsersGroups() {
        return Optional.ofNullable(this.isGroupMembershipSyncedToUsersGroups);
    }
    /**
     * @return (Updatable) Specifies the EmailTemplate to be used when sending notification to the user this request is for. If specified, it overrides the default EmailTemplate for this event.
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: writeOnly
     * * required: false
     * * returned: never
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> notificationEmailTemplateId() {
        return Optional.ofNullable(this.notificationEmailTemplateId);
    }
    /**
     * @return (Updatable) User&#39;s preferred landing page following login, logout and reset password.
     * 
     * **Added In:** 2302092332
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> preferredUiLandingPage() {
        return Optional.ofNullable(this.preferredUiLandingPage);
    }
    /**
     * @return (Updatable) Indicates if User is a Service User
     * 
     * **Added In:** 2306131901
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsCsvAttributeName: Service User
     * * idcsCsvAttributeNameMappings: [[columnHeaderName:Service User]]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: default
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> serviceUser() {
        return Optional.ofNullable(this.serviceUser);
    }
    /**
     * @return (Updatable) A supplemental status indicating the reason why a user is disabled
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return (Updatable) A list of Support Accounts corresponding to user.
     * 
     * **Added In:** 2103141444
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readOnly
     * * required: false
     * * returned: request
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccount> supportAccounts() {
        return this.supportAccounts == null ? List.of() : this.supportAccounts;
    }
    /**
     * @return (Updatable) Managed App or an Identity Source from where the user is synced. If enabled, this Managed App or Identity Source can be used for performing delegated authentication.
     * 
     * **Added In:** 18.2.6
     * 
     * **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public Optional<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromApp> syncedFromApp() {
        return Optional.ofNullable(this.syncedFromApp);
    }
    /**
     * @return (Updatable) A Boolean value indicating whether to bypass notification and return user token to be used by an external client to control the user flow.
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: immutable
     * * required: false
     * * returned: never
     * * type: boolean
     * * uniqueness: none
     * 
     */
    public Optional<Boolean> userFlowControlledByExternalClient() {
        return Optional.ofNullable(this.userFlowControlledByExternalClient);
    }
    /**
     * @return (Updatable) User Support Account Provider
     * 
     * **Added In:** 2103141444
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: always
     * * type: string
     * * uniqueness: none
     * 
     */
    public Optional<String> userProvider() {
        return Optional.ofNullable(this.userProvider);
    }
    /**
     * @return (Updatable) User token returned if userFlowControlledByExternalClient is true
     * 
     * **Added In:** 18.4.2
     * 
     * **SCIM++ Properties:**
     * * caseExact: false
     * * multiValued: false
     * * mutability: readOnly
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none
     * 
     */
    public List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserToken> userTokens() {
        return this.userTokens == null ? List.of() : this.userTokens;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean accountRecoveryRequired;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccount> accounts;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRole> appRoles;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetApp> applicableAuthenticationTargetApps;
        private @Nullable Boolean bypassNotification;
        private @Nullable String creationMechanism;
        private @Nullable DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetApp delegatedAuthenticationTargetApp;
        private @Nullable Boolean doNotShowGettingStarted;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant> grants;
        private @Nullable String groupMembershipLastModified;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroup> idcsAppRolesLimitedToGroups;
        private @Nullable Boolean isAccountRecoveryEnrolled;
        private @Nullable Boolean isAuthenticationDelegated;
        private @Nullable Boolean isFederatedUser;
        private @Nullable Boolean isGroupMembershipNormalized;
        private @Nullable Boolean isGroupMembershipSyncedToUsersGroups;
        private @Nullable String notificationEmailTemplateId;
        private @Nullable String preferredUiLandingPage;
        private @Nullable Boolean serviceUser;
        private @Nullable String status;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccount> supportAccounts;
        private @Nullable DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromApp syncedFromApp;
        private @Nullable Boolean userFlowControlledByExternalClient;
        private @Nullable String userProvider;
        private @Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserToken> userTokens;
        public Builder() {}
        public Builder(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountRecoveryRequired = defaults.accountRecoveryRequired;
    	      this.accounts = defaults.accounts;
    	      this.appRoles = defaults.appRoles;
    	      this.applicableAuthenticationTargetApps = defaults.applicableAuthenticationTargetApps;
    	      this.bypassNotification = defaults.bypassNotification;
    	      this.creationMechanism = defaults.creationMechanism;
    	      this.delegatedAuthenticationTargetApp = defaults.delegatedAuthenticationTargetApp;
    	      this.doNotShowGettingStarted = defaults.doNotShowGettingStarted;
    	      this.grants = defaults.grants;
    	      this.groupMembershipLastModified = defaults.groupMembershipLastModified;
    	      this.idcsAppRolesLimitedToGroups = defaults.idcsAppRolesLimitedToGroups;
    	      this.isAccountRecoveryEnrolled = defaults.isAccountRecoveryEnrolled;
    	      this.isAuthenticationDelegated = defaults.isAuthenticationDelegated;
    	      this.isFederatedUser = defaults.isFederatedUser;
    	      this.isGroupMembershipNormalized = defaults.isGroupMembershipNormalized;
    	      this.isGroupMembershipSyncedToUsersGroups = defaults.isGroupMembershipSyncedToUsersGroups;
    	      this.notificationEmailTemplateId = defaults.notificationEmailTemplateId;
    	      this.preferredUiLandingPage = defaults.preferredUiLandingPage;
    	      this.serviceUser = defaults.serviceUser;
    	      this.status = defaults.status;
    	      this.supportAccounts = defaults.supportAccounts;
    	      this.syncedFromApp = defaults.syncedFromApp;
    	      this.userFlowControlledByExternalClient = defaults.userFlowControlledByExternalClient;
    	      this.userProvider = defaults.userProvider;
    	      this.userTokens = defaults.userTokens;
        }

        @CustomType.Setter
        public Builder accountRecoveryRequired(@Nullable Boolean accountRecoveryRequired) {

            this.accountRecoveryRequired = accountRecoveryRequired;
            return this;
        }
        @CustomType.Setter
        public Builder accounts(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccount> accounts) {

            this.accounts = accounts;
            return this;
        }
        public Builder accounts(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAccount... accounts) {
            return accounts(List.of(accounts));
        }
        @CustomType.Setter
        public Builder appRoles(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRole> appRoles) {

            this.appRoles = appRoles;
            return this;
        }
        public Builder appRoles(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserAppRole... appRoles) {
            return appRoles(List.of(appRoles));
        }
        @CustomType.Setter
        public Builder applicableAuthenticationTargetApps(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetApp> applicableAuthenticationTargetApps) {

            this.applicableAuthenticationTargetApps = applicableAuthenticationTargetApps;
            return this;
        }
        public Builder applicableAuthenticationTargetApps(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserApplicableAuthenticationTargetApp... applicableAuthenticationTargetApps) {
            return applicableAuthenticationTargetApps(List.of(applicableAuthenticationTargetApps));
        }
        @CustomType.Setter
        public Builder bypassNotification(@Nullable Boolean bypassNotification) {

            this.bypassNotification = bypassNotification;
            return this;
        }
        @CustomType.Setter
        public Builder creationMechanism(@Nullable String creationMechanism) {

            this.creationMechanism = creationMechanism;
            return this;
        }
        @CustomType.Setter
        public Builder delegatedAuthenticationTargetApp(@Nullable DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserDelegatedAuthenticationTargetApp delegatedAuthenticationTargetApp) {

            this.delegatedAuthenticationTargetApp = delegatedAuthenticationTargetApp;
            return this;
        }
        @CustomType.Setter
        public Builder doNotShowGettingStarted(@Nullable Boolean doNotShowGettingStarted) {

            this.doNotShowGettingStarted = doNotShowGettingStarted;
            return this;
        }
        @CustomType.Setter
        public Builder grants(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant> grants) {

            this.grants = grants;
            return this;
        }
        public Builder grants(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant... grants) {
            return grants(List.of(grants));
        }
        @CustomType.Setter
        public Builder groupMembershipLastModified(@Nullable String groupMembershipLastModified) {

            this.groupMembershipLastModified = groupMembershipLastModified;
            return this;
        }
        @CustomType.Setter
        public Builder idcsAppRolesLimitedToGroups(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroup> idcsAppRolesLimitedToGroups) {

            this.idcsAppRolesLimitedToGroups = idcsAppRolesLimitedToGroups;
            return this;
        }
        public Builder idcsAppRolesLimitedToGroups(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserIdcsAppRolesLimitedToGroup... idcsAppRolesLimitedToGroups) {
            return idcsAppRolesLimitedToGroups(List.of(idcsAppRolesLimitedToGroups));
        }
        @CustomType.Setter
        public Builder isAccountRecoveryEnrolled(@Nullable Boolean isAccountRecoveryEnrolled) {

            this.isAccountRecoveryEnrolled = isAccountRecoveryEnrolled;
            return this;
        }
        @CustomType.Setter
        public Builder isAuthenticationDelegated(@Nullable Boolean isAuthenticationDelegated) {

            this.isAuthenticationDelegated = isAuthenticationDelegated;
            return this;
        }
        @CustomType.Setter
        public Builder isFederatedUser(@Nullable Boolean isFederatedUser) {

            this.isFederatedUser = isFederatedUser;
            return this;
        }
        @CustomType.Setter
        public Builder isGroupMembershipNormalized(@Nullable Boolean isGroupMembershipNormalized) {

            this.isGroupMembershipNormalized = isGroupMembershipNormalized;
            return this;
        }
        @CustomType.Setter
        public Builder isGroupMembershipSyncedToUsersGroups(@Nullable Boolean isGroupMembershipSyncedToUsersGroups) {

            this.isGroupMembershipSyncedToUsersGroups = isGroupMembershipSyncedToUsersGroups;
            return this;
        }
        @CustomType.Setter
        public Builder notificationEmailTemplateId(@Nullable String notificationEmailTemplateId) {

            this.notificationEmailTemplateId = notificationEmailTemplateId;
            return this;
        }
        @CustomType.Setter
        public Builder preferredUiLandingPage(@Nullable String preferredUiLandingPage) {

            this.preferredUiLandingPage = preferredUiLandingPage;
            return this;
        }
        @CustomType.Setter
        public Builder serviceUser(@Nullable Boolean serviceUser) {

            this.serviceUser = serviceUser;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder supportAccounts(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccount> supportAccounts) {

            this.supportAccounts = supportAccounts;
            return this;
        }
        public Builder supportAccounts(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSupportAccount... supportAccounts) {
            return supportAccounts(List.of(supportAccounts));
        }
        @CustomType.Setter
        public Builder syncedFromApp(@Nullable DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserSyncedFromApp syncedFromApp) {

            this.syncedFromApp = syncedFromApp;
            return this;
        }
        @CustomType.Setter
        public Builder userFlowControlledByExternalClient(@Nullable Boolean userFlowControlledByExternalClient) {

            this.userFlowControlledByExternalClient = userFlowControlledByExternalClient;
            return this;
        }
        @CustomType.Setter
        public Builder userProvider(@Nullable String userProvider) {

            this.userProvider = userProvider;
            return this;
        }
        @CustomType.Setter
        public Builder userTokens(@Nullable List<DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserToken> userTokens) {

            this.userTokens = userTokens;
            return this;
        }
        public Builder userTokens(DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserUserToken... userTokens) {
            return userTokens(List.of(userTokens));
        }
        public DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser build() {
            final var _resultValue = new DomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUser();
            _resultValue.accountRecoveryRequired = accountRecoveryRequired;
            _resultValue.accounts = accounts;
            _resultValue.appRoles = appRoles;
            _resultValue.applicableAuthenticationTargetApps = applicableAuthenticationTargetApps;
            _resultValue.bypassNotification = bypassNotification;
            _resultValue.creationMechanism = creationMechanism;
            _resultValue.delegatedAuthenticationTargetApp = delegatedAuthenticationTargetApp;
            _resultValue.doNotShowGettingStarted = doNotShowGettingStarted;
            _resultValue.grants = grants;
            _resultValue.groupMembershipLastModified = groupMembershipLastModified;
            _resultValue.idcsAppRolesLimitedToGroups = idcsAppRolesLimitedToGroups;
            _resultValue.isAccountRecoveryEnrolled = isAccountRecoveryEnrolled;
            _resultValue.isAuthenticationDelegated = isAuthenticationDelegated;
            _resultValue.isFederatedUser = isFederatedUser;
            _resultValue.isGroupMembershipNormalized = isGroupMembershipNormalized;
            _resultValue.isGroupMembershipSyncedToUsersGroups = isGroupMembershipSyncedToUsersGroups;
            _resultValue.notificationEmailTemplateId = notificationEmailTemplateId;
            _resultValue.preferredUiLandingPage = preferredUiLandingPage;
            _resultValue.serviceUser = serviceUser;
            _resultValue.status = status;
            _resultValue.supportAccounts = supportAccounts;
            _resultValue.syncedFromApp = syncedFromApp;
            _resultValue.userFlowControlledByExternalClient = userFlowControlledByExternalClient;
            _resultValue.userProvider = userProvider;
            _resultValue.userTokens = userTokens;
            return _resultValue;
        }
    }
}
