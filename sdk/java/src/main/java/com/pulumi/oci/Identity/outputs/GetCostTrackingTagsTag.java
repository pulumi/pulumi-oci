// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetCostTrackingTagsTagValidator;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCostTrackingTagsTag {
    /**
     * @return The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The description you assign to the tag.
     * 
     */
    private String description;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The OCID of the tag definition.
     * 
     */
    private String id;
    /**
     * @return Indicates whether the tag is enabled for cost tracking.
     * 
     */
    private Boolean isCostTracking;
    /**
     * @return Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
     * 
     */
    private Boolean isRetired;
    /**
     * @return The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
     * 
     */
    private String name;
    /**
     * @return The tag&#39;s current state. After creating a tag, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tag, make sure its `lifecycleState` is INACTIVE before using it. If you delete a tag, you cannot delete another tag until the deleted tag&#39;s `lifecycleState` changes from DELETING to DELETED.
     * 
     */
    private String state;
    /**
     * @return The OCID of the namespace that contains the tag definition.
     * 
     */
    private String tagNamespaceId;
    /**
     * @return The name of the tag namespace that contains the tag definition.
     * 
     */
    private String tagNamespaceName;
    /**
     * @return Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
     * 
     */
    private List<GetCostTrackingTagsTagValidator> validators;

    private GetCostTrackingTagsTag() {}
    /**
     * @return The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description you assign to the tag.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the tag definition.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether the tag is enabled for cost tracking.
     * 
     */
    public Boolean isCostTracking() {
        return this.isCostTracking;
    }
    /**
     * @return Indicates whether the tag is retired. See [Retiring Key Definitions and Namespace Definitions](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Retiring).
     * 
     */
    public Boolean isRetired() {
        return this.isRetired;
    }
    /**
     * @return The name assigned to the tag during creation. This is the tag key definition. The name must be unique within the tag namespace and cannot be changed.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The tag&#39;s current state. After creating a tag, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tag, make sure its `lifecycleState` is INACTIVE before using it. If you delete a tag, you cannot delete another tag until the deleted tag&#39;s `lifecycleState` changes from DELETING to DELETED.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The OCID of the namespace that contains the tag definition.
     * 
     */
    public String tagNamespaceId() {
        return this.tagNamespaceId;
    }
    /**
     * @return The name of the tag namespace that contains the tag definition.
     * 
     */
    public String tagNamespaceName() {
        return this.tagNamespaceName;
    }
    /**
     * @return Date and time the tag was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Validates a definedTag value. Each validator performs validation steps in addition to the standard validation for definedTag values. For more information, see [Limits on Tags](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/taggingoverview.htm#Limits).
     * 
     */
    public List<GetCostTrackingTagsTagValidator> validators() {
        return this.validators;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCostTrackingTagsTag defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private String description;
        private Map<String,String> freeformTags;
        private String id;
        private Boolean isCostTracking;
        private Boolean isRetired;
        private String name;
        private String state;
        private String tagNamespaceId;
        private String tagNamespaceName;
        private String timeCreated;
        private List<GetCostTrackingTagsTagValidator> validators;
        public Builder() {}
        public Builder(GetCostTrackingTagsTag defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isCostTracking = defaults.isCostTracking;
    	      this.isRetired = defaults.isRetired;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.tagNamespaceId = defaults.tagNamespaceId;
    	      this.tagNamespaceName = defaults.tagNamespaceName;
    	      this.timeCreated = defaults.timeCreated;
    	      this.validators = defaults.validators;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isCostTracking(Boolean isCostTracking) {
            if (isCostTracking == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "isCostTracking");
            }
            this.isCostTracking = isCostTracking;
            return this;
        }
        @CustomType.Setter
        public Builder isRetired(Boolean isRetired) {
            if (isRetired == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "isRetired");
            }
            this.isRetired = isRetired;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tagNamespaceId(String tagNamespaceId) {
            if (tagNamespaceId == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "tagNamespaceId");
            }
            this.tagNamespaceId = tagNamespaceId;
            return this;
        }
        @CustomType.Setter
        public Builder tagNamespaceName(String tagNamespaceName) {
            if (tagNamespaceName == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "tagNamespaceName");
            }
            this.tagNamespaceName = tagNamespaceName;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder validators(List<GetCostTrackingTagsTagValidator> validators) {
            if (validators == null) {
              throw new MissingRequiredPropertyException("GetCostTrackingTagsTag", "validators");
            }
            this.validators = validators;
            return this;
        }
        public Builder validators(GetCostTrackingTagsTagValidator... validators) {
            return validators(List.of(validators));
        }
        public GetCostTrackingTagsTag build() {
            final var _resultValue = new GetCostTrackingTagsTag();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isCostTracking = isCostTracking;
            _resultValue.isRetired = isRetired;
            _resultValue.name = name;
            _resultValue.state = state;
            _resultValue.tagNamespaceId = tagNamespaceId;
            _resultValue.tagNamespaceName = tagNamespaceName;
            _resultValue.timeCreated = timeCreated;
            _resultValue.validators = validators;
            return _resultValue;
        }
    }
}
