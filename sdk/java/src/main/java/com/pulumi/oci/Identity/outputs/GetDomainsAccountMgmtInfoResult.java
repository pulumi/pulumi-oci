// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfoApp;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfoIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfoIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfoMatchingOwner;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfoMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfoObjectClass;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfoOwner;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfoResourceType;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfoTag;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfoUserWalletArtifact;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsAccountMgmtInfoResult {
    private String accountMgmtInfoId;
    /**
     * @return Type of Account
     * 
     */
    private @Nullable String accountType;
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App and only administrative operations can be performed.
     * 
     */
    private @Nullable Boolean active;
    /**
     * @return Application on which the account is based
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfoApp> apps;
    private @Nullable List<String> attributeSets;
    private @Nullable String attributes;
    private @Nullable String authorization;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String compartmentOcid;
    /**
     * @return Unique key for this AccountMgmtInfo, which is used to prevent duplicate AccountMgmtInfo resources. Key is composed of a subset of app, owner and accountType.
     * 
     */
    private @Nullable String compositeKey;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private @Nullable Boolean deleteInProgress;
    /**
     * @return If true, a back-fill grant will not be created for a connected managed app as part of account creation.
     * 
     */
    private @Nullable Boolean doNotBackFillGrants;
    /**
     * @return If true, the operation will not be performed on the target
     * 
     */
    private @Nullable Boolean doNotPerformActionOnTarget;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String domainOcid;
    /**
     * @return If true, this account has been marked as a favorite of the User who owns it
     * 
     */
    private @Nullable Boolean favorite;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfoIdcsCreatedBy> idcsCreatedBies;
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfoIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private @Nullable String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private @Nullable List<String> idcsPreventedOperations;
    /**
     * @return If true, indicates that this managed object is an account, which is an identity that represents a user in the context of a specific application
     * 
     */
    private @Nullable Boolean isAccount;
    /**
     * @return Last accessed timestamp of an application
     * 
     */
    private @Nullable String lastAccessed;
    /**
     * @return Matching owning users of the account
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfoMatchingOwner> matchingOwners;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfoMeta> metas;
    /**
     * @return Name of the Account
     * 
     */
    private @Nullable String name;
    /**
     * @return Object-class of the Account
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfoObjectClass> objectClasses;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private @Nullable String ocid;
    /**
     * @return The context in which the operation is performed on the account.
     * 
     */
    private @Nullable String operationContext;
    /**
     * @return Owning user of the account
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfoOwner> owners;
    /**
     * @return If true, then the response to the account creation operation on a connected managed app returns a preview of the account data that is evaluated by the attribute value generation policy. Note that an account will not be created on the target application when this attribute is set to true.
     * 
     */
    private @Nullable Boolean previewOnly;
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return Resource Type of the Account
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfoResourceType> resourceTypes;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private @Nullable List<String> schemas;
    /**
     * @return Last recorded sync response for the account
     * 
     */
    private @Nullable String syncResponse;
    /**
     * @return Last recorded sync situation for the account
     * 
     */
    private @Nullable String syncSituation;
    /**
     * @return Last sync timestamp of the account
     * 
     */
    private @Nullable String syncTimestamp;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfoTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String tenancyOcid;
    /**
     * @return Unique identifier of the Account
     * 
     */
    private @Nullable String uid;
    /**
     * @return The UserWalletArtifact that contains the credentials that the system will use when performing Secure Form-Fill to log the user in to this application
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfoUserWalletArtifact> userWalletArtifacts;

    private GetDomainsAccountMgmtInfoResult() {}
    public String accountMgmtInfoId() {
        return this.accountMgmtInfoId;
    }
    /**
     * @return Type of Account
     * 
     */
    public Optional<String> accountType() {
        return Optional.ofNullable(this.accountType);
    }
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App and only administrative operations can be performed.
     * 
     */
    public Optional<Boolean> active() {
        return Optional.ofNullable(this.active);
    }
    /**
     * @return Application on which the account is based
     * 
     */
    public List<GetDomainsAccountMgmtInfoApp> apps() {
        return this.apps == null ? List.of() : this.apps;
    }
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> compartmentOcid() {
        return Optional.ofNullable(this.compartmentOcid);
    }
    /**
     * @return Unique key for this AccountMgmtInfo, which is used to prevent duplicate AccountMgmtInfo resources. Key is composed of a subset of app, owner and accountType.
     * 
     */
    public Optional<String> compositeKey() {
        return Optional.ofNullable(this.compositeKey);
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Optional<Boolean> deleteInProgress() {
        return Optional.ofNullable(this.deleteInProgress);
    }
    /**
     * @return If true, a back-fill grant will not be created for a connected managed app as part of account creation.
     * 
     */
    public Optional<Boolean> doNotBackFillGrants() {
        return Optional.ofNullable(this.doNotBackFillGrants);
    }
    /**
     * @return If true, the operation will not be performed on the target
     * 
     */
    public Optional<Boolean> doNotPerformActionOnTarget() {
        return Optional.ofNullable(this.doNotPerformActionOnTarget);
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> domainOcid() {
        return Optional.ofNullable(this.domainOcid);
    }
    /**
     * @return If true, this account has been marked as a favorite of the User who owns it
     * 
     */
    public Optional<Boolean> favorite() {
        return Optional.ofNullable(this.favorite);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsAccountMgmtInfoIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies == null ? List.of() : this.idcsCreatedBies;
    }
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsAccountMgmtInfoIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies == null ? List.of() : this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public Optional<String> idcsLastUpgradedInRelease() {
        return Optional.ofNullable(this.idcsLastUpgradedInRelease);
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations == null ? List.of() : this.idcsPreventedOperations;
    }
    /**
     * @return If true, indicates that this managed object is an account, which is an identity that represents a user in the context of a specific application
     * 
     */
    public Optional<Boolean> isAccount() {
        return Optional.ofNullable(this.isAccount);
    }
    /**
     * @return Last accessed timestamp of an application
     * 
     */
    public Optional<String> lastAccessed() {
        return Optional.ofNullable(this.lastAccessed);
    }
    /**
     * @return Matching owning users of the account
     * 
     */
    public List<GetDomainsAccountMgmtInfoMatchingOwner> matchingOwners() {
        return this.matchingOwners == null ? List.of() : this.matchingOwners;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsAccountMgmtInfoMeta> metas() {
        return this.metas == null ? List.of() : this.metas;
    }
    /**
     * @return Name of the Account
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Object-class of the Account
     * 
     */
    public List<GetDomainsAccountMgmtInfoObjectClass> objectClasses() {
        return this.objectClasses == null ? List.of() : this.objectClasses;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public Optional<String> ocid() {
        return Optional.ofNullable(this.ocid);
    }
    /**
     * @return The context in which the operation is performed on the account.
     * 
     */
    public Optional<String> operationContext() {
        return Optional.ofNullable(this.operationContext);
    }
    /**
     * @return Owning user of the account
     * 
     */
    public List<GetDomainsAccountMgmtInfoOwner> owners() {
        return this.owners == null ? List.of() : this.owners;
    }
    /**
     * @return If true, then the response to the account creation operation on a connected managed app returns a preview of the account data that is evaluated by the attribute value generation policy. Note that an account will not be created on the target application when this attribute is set to true.
     * 
     */
    public Optional<Boolean> previewOnly() {
        return Optional.ofNullable(this.previewOnly);
    }
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return Resource Type of the Account
     * 
     */
    public List<GetDomainsAccountMgmtInfoResourceType> resourceTypes() {
        return this.resourceTypes == null ? List.of() : this.resourceTypes;
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas == null ? List.of() : this.schemas;
    }
    /**
     * @return Last recorded sync response for the account
     * 
     */
    public Optional<String> syncResponse() {
        return Optional.ofNullable(this.syncResponse);
    }
    /**
     * @return Last recorded sync situation for the account
     * 
     */
    public Optional<String> syncSituation() {
        return Optional.ofNullable(this.syncSituation);
    }
    /**
     * @return Last sync timestamp of the account
     * 
     */
    public Optional<String> syncTimestamp() {
        return Optional.ofNullable(this.syncTimestamp);
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsAccountMgmtInfoTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> tenancyOcid() {
        return Optional.ofNullable(this.tenancyOcid);
    }
    /**
     * @return Unique identifier of the Account
     * 
     */
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }
    /**
     * @return The UserWalletArtifact that contains the credentials that the system will use when performing Secure Form-Fill to log the user in to this application
     * 
     */
    public List<GetDomainsAccountMgmtInfoUserWalletArtifact> userWalletArtifacts() {
        return this.userWalletArtifacts == null ? List.of() : this.userWalletArtifacts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAccountMgmtInfoResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountMgmtInfoId;
        private @Nullable String accountType;
        private @Nullable Boolean active;
        private @Nullable List<GetDomainsAccountMgmtInfoApp> apps;
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private @Nullable String authorization;
        private @Nullable String compartmentOcid;
        private @Nullable String compositeKey;
        private @Nullable Boolean deleteInProgress;
        private @Nullable Boolean doNotBackFillGrants;
        private @Nullable Boolean doNotPerformActionOnTarget;
        private @Nullable String domainOcid;
        private @Nullable Boolean favorite;
        private @Nullable String id;
        private @Nullable List<GetDomainsAccountMgmtInfoIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private @Nullable List<GetDomainsAccountMgmtInfoIdcsLastModifiedBy> idcsLastModifiedBies;
        private @Nullable String idcsLastUpgradedInRelease;
        private @Nullable List<String> idcsPreventedOperations;
        private @Nullable Boolean isAccount;
        private @Nullable String lastAccessed;
        private @Nullable List<GetDomainsAccountMgmtInfoMatchingOwner> matchingOwners;
        private @Nullable List<GetDomainsAccountMgmtInfoMeta> metas;
        private @Nullable String name;
        private @Nullable List<GetDomainsAccountMgmtInfoObjectClass> objectClasses;
        private @Nullable String ocid;
        private @Nullable String operationContext;
        private @Nullable List<GetDomainsAccountMgmtInfoOwner> owners;
        private @Nullable Boolean previewOnly;
        private @Nullable String resourceTypeSchemaVersion;
        private @Nullable List<GetDomainsAccountMgmtInfoResourceType> resourceTypes;
        private @Nullable List<String> schemas;
        private @Nullable String syncResponse;
        private @Nullable String syncSituation;
        private @Nullable String syncTimestamp;
        private @Nullable List<GetDomainsAccountMgmtInfoTag> tags;
        private @Nullable String tenancyOcid;
        private @Nullable String uid;
        private @Nullable List<GetDomainsAccountMgmtInfoUserWalletArtifact> userWalletArtifacts;
        public Builder() {}
        public Builder(GetDomainsAccountMgmtInfoResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountMgmtInfoId = defaults.accountMgmtInfoId;
    	      this.accountType = defaults.accountType;
    	      this.active = defaults.active;
    	      this.apps = defaults.apps;
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authorization = defaults.authorization;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.compositeKey = defaults.compositeKey;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.doNotBackFillGrants = defaults.doNotBackFillGrants;
    	      this.doNotPerformActionOnTarget = defaults.doNotPerformActionOnTarget;
    	      this.domainOcid = defaults.domainOcid;
    	      this.favorite = defaults.favorite;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.isAccount = defaults.isAccount;
    	      this.lastAccessed = defaults.lastAccessed;
    	      this.matchingOwners = defaults.matchingOwners;
    	      this.metas = defaults.metas;
    	      this.name = defaults.name;
    	      this.objectClasses = defaults.objectClasses;
    	      this.ocid = defaults.ocid;
    	      this.operationContext = defaults.operationContext;
    	      this.owners = defaults.owners;
    	      this.previewOnly = defaults.previewOnly;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.resourceTypes = defaults.resourceTypes;
    	      this.schemas = defaults.schemas;
    	      this.syncResponse = defaults.syncResponse;
    	      this.syncSituation = defaults.syncSituation;
    	      this.syncTimestamp = defaults.syncTimestamp;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.uid = defaults.uid;
    	      this.userWalletArtifacts = defaults.userWalletArtifacts;
        }

        @CustomType.Setter
        public Builder accountMgmtInfoId(String accountMgmtInfoId) {
            this.accountMgmtInfoId = Objects.requireNonNull(accountMgmtInfoId);
            return this;
        }
        @CustomType.Setter
        public Builder accountType(@Nullable String accountType) {
            this.accountType = accountType;
            return this;
        }
        @CustomType.Setter
        public Builder active(@Nullable Boolean active) {
            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder apps(@Nullable List<GetDomainsAccountMgmtInfoApp> apps) {
            this.apps = apps;
            return this;
        }
        public Builder apps(GetDomainsAccountMgmtInfoApp... apps) {
            return apps(List.of(apps));
        }
        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {
            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentOcid(@Nullable String compartmentOcid) {
            this.compartmentOcid = compartmentOcid;
            return this;
        }
        @CustomType.Setter
        public Builder compositeKey(@Nullable String compositeKey) {
            this.compositeKey = compositeKey;
            return this;
        }
        @CustomType.Setter
        public Builder deleteInProgress(@Nullable Boolean deleteInProgress) {
            this.deleteInProgress = deleteInProgress;
            return this;
        }
        @CustomType.Setter
        public Builder doNotBackFillGrants(@Nullable Boolean doNotBackFillGrants) {
            this.doNotBackFillGrants = doNotBackFillGrants;
            return this;
        }
        @CustomType.Setter
        public Builder doNotPerformActionOnTarget(@Nullable Boolean doNotPerformActionOnTarget) {
            this.doNotPerformActionOnTarget = doNotPerformActionOnTarget;
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(@Nullable String domainOcid) {
            this.domainOcid = domainOcid;
            return this;
        }
        @CustomType.Setter
        public Builder favorite(@Nullable Boolean favorite) {
            this.favorite = favorite;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(@Nullable List<GetDomainsAccountMgmtInfoIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = idcsCreatedBies;
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsAccountMgmtInfoIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            this.idcsEndpoint = Objects.requireNonNull(idcsEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(@Nullable List<GetDomainsAccountMgmtInfoIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsAccountMgmtInfoIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(@Nullable String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(@Nullable List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder isAccount(@Nullable Boolean isAccount) {
            this.isAccount = isAccount;
            return this;
        }
        @CustomType.Setter
        public Builder lastAccessed(@Nullable String lastAccessed) {
            this.lastAccessed = lastAccessed;
            return this;
        }
        @CustomType.Setter
        public Builder matchingOwners(@Nullable List<GetDomainsAccountMgmtInfoMatchingOwner> matchingOwners) {
            this.matchingOwners = matchingOwners;
            return this;
        }
        public Builder matchingOwners(GetDomainsAccountMgmtInfoMatchingOwner... matchingOwners) {
            return matchingOwners(List.of(matchingOwners));
        }
        @CustomType.Setter
        public Builder metas(@Nullable List<GetDomainsAccountMgmtInfoMeta> metas) {
            this.metas = metas;
            return this;
        }
        public Builder metas(GetDomainsAccountMgmtInfoMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectClasses(@Nullable List<GetDomainsAccountMgmtInfoObjectClass> objectClasses) {
            this.objectClasses = objectClasses;
            return this;
        }
        public Builder objectClasses(GetDomainsAccountMgmtInfoObjectClass... objectClasses) {
            return objectClasses(List.of(objectClasses));
        }
        @CustomType.Setter
        public Builder ocid(@Nullable String ocid) {
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder operationContext(@Nullable String operationContext) {
            this.operationContext = operationContext;
            return this;
        }
        @CustomType.Setter
        public Builder owners(@Nullable List<GetDomainsAccountMgmtInfoOwner> owners) {
            this.owners = owners;
            return this;
        }
        public Builder owners(GetDomainsAccountMgmtInfoOwner... owners) {
            return owners(List.of(owners));
        }
        @CustomType.Setter
        public Builder previewOnly(@Nullable Boolean previewOnly) {
            this.previewOnly = previewOnly;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {
            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypes(@Nullable List<GetDomainsAccountMgmtInfoResourceType> resourceTypes) {
            this.resourceTypes = resourceTypes;
            return this;
        }
        public Builder resourceTypes(GetDomainsAccountMgmtInfoResourceType... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }
        @CustomType.Setter
        public Builder schemas(@Nullable List<String> schemas) {
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder syncResponse(@Nullable String syncResponse) {
            this.syncResponse = syncResponse;
            return this;
        }
        @CustomType.Setter
        public Builder syncSituation(@Nullable String syncSituation) {
            this.syncSituation = syncSituation;
            return this;
        }
        @CustomType.Setter
        public Builder syncTimestamp(@Nullable String syncTimestamp) {
            this.syncTimestamp = syncTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetDomainsAccountMgmtInfoTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetDomainsAccountMgmtInfoTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(@Nullable String tenancyOcid) {
            this.tenancyOcid = tenancyOcid;
            return this;
        }
        @CustomType.Setter
        public Builder uid(@Nullable String uid) {
            this.uid = uid;
            return this;
        }
        @CustomType.Setter
        public Builder userWalletArtifacts(@Nullable List<GetDomainsAccountMgmtInfoUserWalletArtifact> userWalletArtifacts) {
            this.userWalletArtifacts = userWalletArtifacts;
            return this;
        }
        public Builder userWalletArtifacts(GetDomainsAccountMgmtInfoUserWalletArtifact... userWalletArtifacts) {
            return userWalletArtifacts(List.of(userWalletArtifacts));
        }
        public GetDomainsAccountMgmtInfoResult build() {
            final var o = new GetDomainsAccountMgmtInfoResult();
            o.accountMgmtInfoId = accountMgmtInfoId;
            o.accountType = accountType;
            o.active = active;
            o.apps = apps;
            o.attributeSets = attributeSets;
            o.attributes = attributes;
            o.authorization = authorization;
            o.compartmentOcid = compartmentOcid;
            o.compositeKey = compositeKey;
            o.deleteInProgress = deleteInProgress;
            o.doNotBackFillGrants = doNotBackFillGrants;
            o.doNotPerformActionOnTarget = doNotPerformActionOnTarget;
            o.domainOcid = domainOcid;
            o.favorite = favorite;
            o.id = id;
            o.idcsCreatedBies = idcsCreatedBies;
            o.idcsEndpoint = idcsEndpoint;
            o.idcsLastModifiedBies = idcsLastModifiedBies;
            o.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            o.idcsPreventedOperations = idcsPreventedOperations;
            o.isAccount = isAccount;
            o.lastAccessed = lastAccessed;
            o.matchingOwners = matchingOwners;
            o.metas = metas;
            o.name = name;
            o.objectClasses = objectClasses;
            o.ocid = ocid;
            o.operationContext = operationContext;
            o.owners = owners;
            o.previewOnly = previewOnly;
            o.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            o.resourceTypes = resourceTypes;
            o.schemas = schemas;
            o.syncResponse = syncResponse;
            o.syncSituation = syncSituation;
            o.syncTimestamp = syncTimestamp;
            o.tags = tags;
            o.tenancyOcid = tenancyOcid;
            o.uid = uid;
            o.userWalletArtifacts = userWalletArtifacts;
            return o;
        }
    }
}
