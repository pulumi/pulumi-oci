// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfosAccountMgmtInfoApp;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfosAccountMgmtInfoMatchingOwner;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfosAccountMgmtInfoMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfosAccountMgmtInfoObjectClass;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfosAccountMgmtInfoOwner;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfosAccountMgmtInfoResourceType;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfosAccountMgmtInfoTag;
import com.pulumi.oci.Identity.outputs.GetDomainsAccountMgmtInfosAccountMgmtInfoUserWalletArtifact;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsAccountMgmtInfosAccountMgmtInfo {
    private @Nullable String accountMgmtInfoId;
    /**
     * @return Type of Account
     * 
     */
    private @Nullable String accountType;
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App and only administrative operations can be performed.
     * 
     */
    private @Nullable Boolean active;
    /**
     * @return Application on which the account is based
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoApp> apps;
    /**
     * @return A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    private @Nullable List<String> attributeSets;
    /**
     * @return A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    private @Nullable String attributes;
    /**
     * @return The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    private @Nullable String authorization;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String compartmentOcid;
    /**
     * @return Unique key for this AccountMgmtInfo, which is used to prevent duplicate AccountMgmtInfo resources. Key is composed of a subset of app, owner and accountType.
     * 
     */
    private @Nullable String compositeKey;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private @Nullable Boolean deleteInProgress;
    /**
     * @return If true, a back-fill grant will not be created for a connected managed app as part of account creation.
     * 
     */
    private @Nullable Boolean doNotBackFillGrants;
    /**
     * @return If true, the operation will not be performed on the target
     * 
     */
    private @Nullable Boolean doNotPerformActionOnTarget;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String domainOcid;
    /**
     * @return If true, this account has been marked as a favorite of the User who owns it
     * 
     */
    private @Nullable Boolean favorite;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private @Nullable String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsCreatedBy> idcsCreatedBies;
    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    private @Nullable String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private @Nullable String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private @Nullable List<String> idcsPreventedOperations;
    /**
     * @return If true, indicates that this managed object is an account, which is an identity that represents a user in the context of a specific application
     * 
     */
    private @Nullable Boolean isAccount;
    /**
     * @return Last accessed timestamp of an application
     * 
     */
    private @Nullable String lastAccessed;
    /**
     * @return Matching owning users of the account
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoMatchingOwner> matchingOwners;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoMeta> metas;
    /**
     * @return Name of the Account
     * 
     */
    private @Nullable String name;
    /**
     * @return Object-class of the Account
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoObjectClass> objectClasses;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private @Nullable String ocid;
    /**
     * @return The context in which the operation is performed on the account.
     * 
     */
    private @Nullable String operationContext;
    /**
     * @return Owning user of the account
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoOwner> owners;
    /**
     * @return If true, then the response to the account creation operation on a connected managed app returns a preview of the account data that is evaluated by the attribute value generation policy. Note that an account will not be created on the target application when this attribute is set to true.
     * 
     */
    private @Nullable Boolean previewOnly;
    /**
     * @return An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return Resource Type of the Account
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoResourceType> resourceTypes;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private @Nullable List<String> schemas;
    /**
     * @return Last recorded sync response for the account
     * 
     */
    private @Nullable String syncResponse;
    /**
     * @return Last recorded sync situation for the account
     * 
     */
    private @Nullable String syncSituation;
    /**
     * @return Last sync timestamp of the account
     * 
     */
    private @Nullable String syncTimestamp;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String tenancyOcid;
    /**
     * @return Unique identifier of the Account
     * 
     */
    private @Nullable String uid;
    /**
     * @return The UserWalletArtifact that contains the credentials that the system will use when performing Secure Form-Fill to log the user in to this application
     * 
     */
    private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoUserWalletArtifact> userWalletArtifacts;

    private GetDomainsAccountMgmtInfosAccountMgmtInfo() {}
    public Optional<String> accountMgmtInfoId() {
        return Optional.ofNullable(this.accountMgmtInfoId);
    }
    /**
     * @return Type of Account
     * 
     */
    public Optional<String> accountType() {
        return Optional.ofNullable(this.accountType);
    }
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App and only administrative operations can be performed.
     * 
     */
    public Optional<Boolean> active() {
        return Optional.ofNullable(this.active);
    }
    /**
     * @return Application on which the account is based
     * 
     */
    public List<GetDomainsAccountMgmtInfosAccountMgmtInfoApp> apps() {
        return this.apps == null ? List.of() : this.apps;
    }
    /**
     * @return A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    /**
     * @return A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    /**
     * @return The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> compartmentOcid() {
        return Optional.ofNullable(this.compartmentOcid);
    }
    /**
     * @return Unique key for this AccountMgmtInfo, which is used to prevent duplicate AccountMgmtInfo resources. Key is composed of a subset of app, owner and accountType.
     * 
     */
    public Optional<String> compositeKey() {
        return Optional.ofNullable(this.compositeKey);
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Optional<Boolean> deleteInProgress() {
        return Optional.ofNullable(this.deleteInProgress);
    }
    /**
     * @return If true, a back-fill grant will not be created for a connected managed app as part of account creation.
     * 
     */
    public Optional<Boolean> doNotBackFillGrants() {
        return Optional.ofNullable(this.doNotBackFillGrants);
    }
    /**
     * @return If true, the operation will not be performed on the target
     * 
     */
    public Optional<Boolean> doNotPerformActionOnTarget() {
        return Optional.ofNullable(this.doNotPerformActionOnTarget);
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> domainOcid() {
        return Optional.ofNullable(this.domainOcid);
    }
    /**
     * @return If true, this account has been marked as a favorite of the User who owns it
     * 
     */
    public Optional<Boolean> favorite() {
        return Optional.ofNullable(this.favorite);
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies == null ? List.of() : this.idcsCreatedBies;
    }
    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public Optional<String> idcsEndpoint() {
        return Optional.ofNullable(this.idcsEndpoint);
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies == null ? List.of() : this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public Optional<String> idcsLastUpgradedInRelease() {
        return Optional.ofNullable(this.idcsLastUpgradedInRelease);
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations == null ? List.of() : this.idcsPreventedOperations;
    }
    /**
     * @return If true, indicates that this managed object is an account, which is an identity that represents a user in the context of a specific application
     * 
     */
    public Optional<Boolean> isAccount() {
        return Optional.ofNullable(this.isAccount);
    }
    /**
     * @return Last accessed timestamp of an application
     * 
     */
    public Optional<String> lastAccessed() {
        return Optional.ofNullable(this.lastAccessed);
    }
    /**
     * @return Matching owning users of the account
     * 
     */
    public List<GetDomainsAccountMgmtInfosAccountMgmtInfoMatchingOwner> matchingOwners() {
        return this.matchingOwners == null ? List.of() : this.matchingOwners;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsAccountMgmtInfosAccountMgmtInfoMeta> metas() {
        return this.metas == null ? List.of() : this.metas;
    }
    /**
     * @return Name of the Account
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Object-class of the Account
     * 
     */
    public List<GetDomainsAccountMgmtInfosAccountMgmtInfoObjectClass> objectClasses() {
        return this.objectClasses == null ? List.of() : this.objectClasses;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public Optional<String> ocid() {
        return Optional.ofNullable(this.ocid);
    }
    /**
     * @return The context in which the operation is performed on the account.
     * 
     */
    public Optional<String> operationContext() {
        return Optional.ofNullable(this.operationContext);
    }
    /**
     * @return Owning user of the account
     * 
     */
    public List<GetDomainsAccountMgmtInfosAccountMgmtInfoOwner> owners() {
        return this.owners == null ? List.of() : this.owners;
    }
    /**
     * @return If true, then the response to the account creation operation on a connected managed app returns a preview of the account data that is evaluated by the attribute value generation policy. Note that an account will not be created on the target application when this attribute is set to true.
     * 
     */
    public Optional<Boolean> previewOnly() {
        return Optional.ofNullable(this.previewOnly);
    }
    /**
     * @return An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return Resource Type of the Account
     * 
     */
    public List<GetDomainsAccountMgmtInfosAccountMgmtInfoResourceType> resourceTypes() {
        return this.resourceTypes == null ? List.of() : this.resourceTypes;
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas == null ? List.of() : this.schemas;
    }
    /**
     * @return Last recorded sync response for the account
     * 
     */
    public Optional<String> syncResponse() {
        return Optional.ofNullable(this.syncResponse);
    }
    /**
     * @return Last recorded sync situation for the account
     * 
     */
    public Optional<String> syncSituation() {
        return Optional.ofNullable(this.syncSituation);
    }
    /**
     * @return Last sync timestamp of the account
     * 
     */
    public Optional<String> syncTimestamp() {
        return Optional.ofNullable(this.syncTimestamp);
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsAccountMgmtInfosAccountMgmtInfoTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> tenancyOcid() {
        return Optional.ofNullable(this.tenancyOcid);
    }
    /**
     * @return Unique identifier of the Account
     * 
     */
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }
    /**
     * @return The UserWalletArtifact that contains the credentials that the system will use when performing Secure Form-Fill to log the user in to this application
     * 
     */
    public List<GetDomainsAccountMgmtInfosAccountMgmtInfoUserWalletArtifact> userWalletArtifacts() {
        return this.userWalletArtifacts == null ? List.of() : this.userWalletArtifacts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAccountMgmtInfosAccountMgmtInfo defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountMgmtInfoId;
        private @Nullable String accountType;
        private @Nullable Boolean active;
        private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoApp> apps;
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private @Nullable String authorization;
        private @Nullable String compartmentOcid;
        private @Nullable String compositeKey;
        private @Nullable Boolean deleteInProgress;
        private @Nullable Boolean doNotBackFillGrants;
        private @Nullable Boolean doNotPerformActionOnTarget;
        private @Nullable String domainOcid;
        private @Nullable Boolean favorite;
        private @Nullable String id;
        private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsCreatedBy> idcsCreatedBies;
        private @Nullable String idcsEndpoint;
        private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsLastModifiedBy> idcsLastModifiedBies;
        private @Nullable String idcsLastUpgradedInRelease;
        private @Nullable List<String> idcsPreventedOperations;
        private @Nullable Boolean isAccount;
        private @Nullable String lastAccessed;
        private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoMatchingOwner> matchingOwners;
        private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoMeta> metas;
        private @Nullable String name;
        private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoObjectClass> objectClasses;
        private @Nullable String ocid;
        private @Nullable String operationContext;
        private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoOwner> owners;
        private @Nullable Boolean previewOnly;
        private @Nullable String resourceTypeSchemaVersion;
        private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoResourceType> resourceTypes;
        private @Nullable List<String> schemas;
        private @Nullable String syncResponse;
        private @Nullable String syncSituation;
        private @Nullable String syncTimestamp;
        private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoTag> tags;
        private @Nullable String tenancyOcid;
        private @Nullable String uid;
        private @Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoUserWalletArtifact> userWalletArtifacts;
        public Builder() {}
        public Builder(GetDomainsAccountMgmtInfosAccountMgmtInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountMgmtInfoId = defaults.accountMgmtInfoId;
    	      this.accountType = defaults.accountType;
    	      this.active = defaults.active;
    	      this.apps = defaults.apps;
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authorization = defaults.authorization;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.compositeKey = defaults.compositeKey;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.doNotBackFillGrants = defaults.doNotBackFillGrants;
    	      this.doNotPerformActionOnTarget = defaults.doNotPerformActionOnTarget;
    	      this.domainOcid = defaults.domainOcid;
    	      this.favorite = defaults.favorite;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.isAccount = defaults.isAccount;
    	      this.lastAccessed = defaults.lastAccessed;
    	      this.matchingOwners = defaults.matchingOwners;
    	      this.metas = defaults.metas;
    	      this.name = defaults.name;
    	      this.objectClasses = defaults.objectClasses;
    	      this.ocid = defaults.ocid;
    	      this.operationContext = defaults.operationContext;
    	      this.owners = defaults.owners;
    	      this.previewOnly = defaults.previewOnly;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.resourceTypes = defaults.resourceTypes;
    	      this.schemas = defaults.schemas;
    	      this.syncResponse = defaults.syncResponse;
    	      this.syncSituation = defaults.syncSituation;
    	      this.syncTimestamp = defaults.syncTimestamp;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.uid = defaults.uid;
    	      this.userWalletArtifacts = defaults.userWalletArtifacts;
        }

        @CustomType.Setter
        public Builder accountMgmtInfoId(@Nullable String accountMgmtInfoId) {
            this.accountMgmtInfoId = accountMgmtInfoId;
            return this;
        }
        @CustomType.Setter
        public Builder accountType(@Nullable String accountType) {
            this.accountType = accountType;
            return this;
        }
        @CustomType.Setter
        public Builder active(@Nullable Boolean active) {
            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder apps(@Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoApp> apps) {
            this.apps = apps;
            return this;
        }
        public Builder apps(GetDomainsAccountMgmtInfosAccountMgmtInfoApp... apps) {
            return apps(List.of(apps));
        }
        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {
            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentOcid(@Nullable String compartmentOcid) {
            this.compartmentOcid = compartmentOcid;
            return this;
        }
        @CustomType.Setter
        public Builder compositeKey(@Nullable String compositeKey) {
            this.compositeKey = compositeKey;
            return this;
        }
        @CustomType.Setter
        public Builder deleteInProgress(@Nullable Boolean deleteInProgress) {
            this.deleteInProgress = deleteInProgress;
            return this;
        }
        @CustomType.Setter
        public Builder doNotBackFillGrants(@Nullable Boolean doNotBackFillGrants) {
            this.doNotBackFillGrants = doNotBackFillGrants;
            return this;
        }
        @CustomType.Setter
        public Builder doNotPerformActionOnTarget(@Nullable Boolean doNotPerformActionOnTarget) {
            this.doNotPerformActionOnTarget = doNotPerformActionOnTarget;
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(@Nullable String domainOcid) {
            this.domainOcid = domainOcid;
            return this;
        }
        @CustomType.Setter
        public Builder favorite(@Nullable Boolean favorite) {
            this.favorite = favorite;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(@Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = idcsCreatedBies;
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(@Nullable String idcsEndpoint) {
            this.idcsEndpoint = idcsEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(@Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsAccountMgmtInfosAccountMgmtInfoIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(@Nullable String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(@Nullable List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder isAccount(@Nullable Boolean isAccount) {
            this.isAccount = isAccount;
            return this;
        }
        @CustomType.Setter
        public Builder lastAccessed(@Nullable String lastAccessed) {
            this.lastAccessed = lastAccessed;
            return this;
        }
        @CustomType.Setter
        public Builder matchingOwners(@Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoMatchingOwner> matchingOwners) {
            this.matchingOwners = matchingOwners;
            return this;
        }
        public Builder matchingOwners(GetDomainsAccountMgmtInfosAccountMgmtInfoMatchingOwner... matchingOwners) {
            return matchingOwners(List.of(matchingOwners));
        }
        @CustomType.Setter
        public Builder metas(@Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoMeta> metas) {
            this.metas = metas;
            return this;
        }
        public Builder metas(GetDomainsAccountMgmtInfosAccountMgmtInfoMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectClasses(@Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoObjectClass> objectClasses) {
            this.objectClasses = objectClasses;
            return this;
        }
        public Builder objectClasses(GetDomainsAccountMgmtInfosAccountMgmtInfoObjectClass... objectClasses) {
            return objectClasses(List.of(objectClasses));
        }
        @CustomType.Setter
        public Builder ocid(@Nullable String ocid) {
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder operationContext(@Nullable String operationContext) {
            this.operationContext = operationContext;
            return this;
        }
        @CustomType.Setter
        public Builder owners(@Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoOwner> owners) {
            this.owners = owners;
            return this;
        }
        public Builder owners(GetDomainsAccountMgmtInfosAccountMgmtInfoOwner... owners) {
            return owners(List.of(owners));
        }
        @CustomType.Setter
        public Builder previewOnly(@Nullable Boolean previewOnly) {
            this.previewOnly = previewOnly;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {
            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypes(@Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoResourceType> resourceTypes) {
            this.resourceTypes = resourceTypes;
            return this;
        }
        public Builder resourceTypes(GetDomainsAccountMgmtInfosAccountMgmtInfoResourceType... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }
        @CustomType.Setter
        public Builder schemas(@Nullable List<String> schemas) {
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder syncResponse(@Nullable String syncResponse) {
            this.syncResponse = syncResponse;
            return this;
        }
        @CustomType.Setter
        public Builder syncSituation(@Nullable String syncSituation) {
            this.syncSituation = syncSituation;
            return this;
        }
        @CustomType.Setter
        public Builder syncTimestamp(@Nullable String syncTimestamp) {
            this.syncTimestamp = syncTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetDomainsAccountMgmtInfosAccountMgmtInfoTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(@Nullable String tenancyOcid) {
            this.tenancyOcid = tenancyOcid;
            return this;
        }
        @CustomType.Setter
        public Builder uid(@Nullable String uid) {
            this.uid = uid;
            return this;
        }
        @CustomType.Setter
        public Builder userWalletArtifacts(@Nullable List<GetDomainsAccountMgmtInfosAccountMgmtInfoUserWalletArtifact> userWalletArtifacts) {
            this.userWalletArtifacts = userWalletArtifacts;
            return this;
        }
        public Builder userWalletArtifacts(GetDomainsAccountMgmtInfosAccountMgmtInfoUserWalletArtifact... userWalletArtifacts) {
            return userWalletArtifacts(List.of(userWalletArtifacts));
        }
        public GetDomainsAccountMgmtInfosAccountMgmtInfo build() {
            final var o = new GetDomainsAccountMgmtInfosAccountMgmtInfo();
            o.accountMgmtInfoId = accountMgmtInfoId;
            o.accountType = accountType;
            o.active = active;
            o.apps = apps;
            o.attributeSets = attributeSets;
            o.attributes = attributes;
            o.authorization = authorization;
            o.compartmentOcid = compartmentOcid;
            o.compositeKey = compositeKey;
            o.deleteInProgress = deleteInProgress;
            o.doNotBackFillGrants = doNotBackFillGrants;
            o.doNotPerformActionOnTarget = doNotPerformActionOnTarget;
            o.domainOcid = domainOcid;
            o.favorite = favorite;
            o.id = id;
            o.idcsCreatedBies = idcsCreatedBies;
            o.idcsEndpoint = idcsEndpoint;
            o.idcsLastModifiedBies = idcsLastModifiedBies;
            o.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            o.idcsPreventedOperations = idcsPreventedOperations;
            o.isAccount = isAccount;
            o.lastAccessed = lastAccessed;
            o.matchingOwners = matchingOwners;
            o.metas = metas;
            o.name = name;
            o.objectClasses = objectClasses;
            o.ocid = ocid;
            o.operationContext = operationContext;
            o.owners = owners;
            o.previewOnly = previewOnly;
            o.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            o.resourceTypes = resourceTypes;
            o.schemas = schemas;
            o.syncResponse = syncResponse;
            o.syncSituation = syncSituation;
            o.syncTimestamp = syncTimestamp;
            o.tags = tags;
            o.tenancyOcid = tenancyOcid;
            o.uid = uid;
            o.userWalletArtifacts = userWalletArtifacts;
            return o;
        }
    }
}
