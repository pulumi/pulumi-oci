// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsAppRoleApp;
import com.pulumi.oci.Identity.outputs.GetDomainsAppRoleIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsAppRoleIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsAppRoleMember;
import com.pulumi.oci.Identity.outputs.GetDomainsAppRoleMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsAppRoleTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsAppRoleResult {
    /**
     * @return If true, the role provides administrative access privileges.
     * 
     */
    private @Nullable Boolean adminRole;
    private String appRoleId;
    /**
     * @return A unique identifier for the application that references this role.
     * 
     */
    private @Nullable List<GetDomainsAppRoleApp> apps;
    private @Nullable List<String> attributeSets;
    private @Nullable String attributes;
    private @Nullable String authorization;
    /**
     * @return If true, this AppRole can be granted to Apps.
     * 
     */
    private @Nullable Boolean availableToClients;
    /**
     * @return If true, this AppRole can be granted to Groups.
     * 
     */
    private @Nullable Boolean availableToGroups;
    /**
     * @return If true, this AppRole can be granted to Users.
     * 
     */
    private @Nullable Boolean availableToUsers;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String compartmentOcid;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private @Nullable Boolean deleteInProgress;
    /**
     * @return AppRole description
     * 
     */
    private @Nullable String description;
    /**
     * @return AppRole name
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String domainOcid;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private @Nullable String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private @Nullable List<GetDomainsAppRoleIdcsCreatedBy> idcsCreatedBies;
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private @Nullable List<GetDomainsAppRoleIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private @Nullable String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private @Nullable List<String> idcsPreventedOperations;
    /**
     * @return The name of the legacy group associated with this AppRole.
     * 
     */
    private @Nullable String legacyGroupName;
    /**
     * @return If true, indicates that this Oracle Identity Cloud Service AppRole can be granted to a delegated administrator whose scope is limited to users that are members of one or more groups.
     * 
     */
    private @Nullable Boolean limitedToOneOrMoreGroups;
    /**
     * @return AppRole localization name
     * 
     */
    private @Nullable String localizedDisplayName;
    /**
     * @return AppRole members - when requesting members attribute, it is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
     * 
     */
    private @Nullable List<GetDomainsAppRoleMember> members;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private @Nullable List<GetDomainsAppRoleMeta> metas;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private @Nullable String ocid;
    /**
     * @return If true, this AppRole is available automatically to every Oracle Identity Cloud Service User in this tenancy. There is no need to grant it to individual Users or Groups.
     * 
     */
    private @Nullable Boolean public_;
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private @Nullable List<String> schemas;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private @Nullable List<GetDomainsAppRoleTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String tenancyOcid;
    /**
     * @return AppRole unique name
     * 
     */
    private @Nullable String uniqueName;

    private GetDomainsAppRoleResult() {}
    /**
     * @return If true, the role provides administrative access privileges.
     * 
     */
    public Optional<Boolean> adminRole() {
        return Optional.ofNullable(this.adminRole);
    }
    public String appRoleId() {
        return this.appRoleId;
    }
    /**
     * @return A unique identifier for the application that references this role.
     * 
     */
    public List<GetDomainsAppRoleApp> apps() {
        return this.apps == null ? List.of() : this.apps;
    }
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return If true, this AppRole can be granted to Apps.
     * 
     */
    public Optional<Boolean> availableToClients() {
        return Optional.ofNullable(this.availableToClients);
    }
    /**
     * @return If true, this AppRole can be granted to Groups.
     * 
     */
    public Optional<Boolean> availableToGroups() {
        return Optional.ofNullable(this.availableToGroups);
    }
    /**
     * @return If true, this AppRole can be granted to Users.
     * 
     */
    public Optional<Boolean> availableToUsers() {
        return Optional.ofNullable(this.availableToUsers);
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> compartmentOcid() {
        return Optional.ofNullable(this.compartmentOcid);
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Optional<Boolean> deleteInProgress() {
        return Optional.ofNullable(this.deleteInProgress);
    }
    /**
     * @return AppRole description
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return AppRole name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> domainOcid() {
        return Optional.ofNullable(this.domainOcid);
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsAppRoleIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies == null ? List.of() : this.idcsCreatedBies;
    }
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsAppRoleIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies == null ? List.of() : this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public Optional<String> idcsLastUpgradedInRelease() {
        return Optional.ofNullable(this.idcsLastUpgradedInRelease);
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations == null ? List.of() : this.idcsPreventedOperations;
    }
    /**
     * @return The name of the legacy group associated with this AppRole.
     * 
     */
    public Optional<String> legacyGroupName() {
        return Optional.ofNullable(this.legacyGroupName);
    }
    /**
     * @return If true, indicates that this Oracle Identity Cloud Service AppRole can be granted to a delegated administrator whose scope is limited to users that are members of one or more groups.
     * 
     */
    public Optional<Boolean> limitedToOneOrMoreGroups() {
        return Optional.ofNullable(this.limitedToOneOrMoreGroups);
    }
    /**
     * @return AppRole localization name
     * 
     */
    public Optional<String> localizedDisplayName() {
        return Optional.ofNullable(this.localizedDisplayName);
    }
    /**
     * @return AppRole members - when requesting members attribute, it is recommended to use startIndex and count to return members in pages instead of in a single response, eg : #attributes=members[startIndex=1%26count=10]
     * 
     */
    public List<GetDomainsAppRoleMember> members() {
        return this.members == null ? List.of() : this.members;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsAppRoleMeta> metas() {
        return this.metas == null ? List.of() : this.metas;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public Optional<String> ocid() {
        return Optional.ofNullable(this.ocid);
    }
    /**
     * @return If true, this AppRole is available automatically to every Oracle Identity Cloud Service User in this tenancy. There is no need to grant it to individual Users or Groups.
     * 
     */
    public Optional<Boolean> public_() {
        return Optional.ofNullable(this.public_);
    }
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas == null ? List.of() : this.schemas;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsAppRoleTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> tenancyOcid() {
        return Optional.ofNullable(this.tenancyOcid);
    }
    /**
     * @return AppRole unique name
     * 
     */
    public Optional<String> uniqueName() {
        return Optional.ofNullable(this.uniqueName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAppRoleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean adminRole;
        private String appRoleId;
        private @Nullable List<GetDomainsAppRoleApp> apps;
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private @Nullable String authorization;
        private @Nullable Boolean availableToClients;
        private @Nullable Boolean availableToGroups;
        private @Nullable Boolean availableToUsers;
        private @Nullable String compartmentOcid;
        private @Nullable Boolean deleteInProgress;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable String domainOcid;
        private @Nullable String id;
        private @Nullable List<GetDomainsAppRoleIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private @Nullable List<GetDomainsAppRoleIdcsLastModifiedBy> idcsLastModifiedBies;
        private @Nullable String idcsLastUpgradedInRelease;
        private @Nullable List<String> idcsPreventedOperations;
        private @Nullable String legacyGroupName;
        private @Nullable Boolean limitedToOneOrMoreGroups;
        private @Nullable String localizedDisplayName;
        private @Nullable List<GetDomainsAppRoleMember> members;
        private @Nullable List<GetDomainsAppRoleMeta> metas;
        private @Nullable String ocid;
        private @Nullable Boolean public_;
        private @Nullable String resourceTypeSchemaVersion;
        private @Nullable List<String> schemas;
        private @Nullable List<GetDomainsAppRoleTag> tags;
        private @Nullable String tenancyOcid;
        private @Nullable String uniqueName;
        public Builder() {}
        public Builder(GetDomainsAppRoleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminRole = defaults.adminRole;
    	      this.appRoleId = defaults.appRoleId;
    	      this.apps = defaults.apps;
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authorization = defaults.authorization;
    	      this.availableToClients = defaults.availableToClients;
    	      this.availableToGroups = defaults.availableToGroups;
    	      this.availableToUsers = defaults.availableToUsers;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.domainOcid = defaults.domainOcid;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.legacyGroupName = defaults.legacyGroupName;
    	      this.limitedToOneOrMoreGroups = defaults.limitedToOneOrMoreGroups;
    	      this.localizedDisplayName = defaults.localizedDisplayName;
    	      this.members = defaults.members;
    	      this.metas = defaults.metas;
    	      this.ocid = defaults.ocid;
    	      this.public_ = defaults.public_;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.schemas = defaults.schemas;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.uniqueName = defaults.uniqueName;
        }

        @CustomType.Setter
        public Builder adminRole(@Nullable Boolean adminRole) {
            this.adminRole = adminRole;
            return this;
        }
        @CustomType.Setter
        public Builder appRoleId(String appRoleId) {
            this.appRoleId = Objects.requireNonNull(appRoleId);
            return this;
        }
        @CustomType.Setter
        public Builder apps(@Nullable List<GetDomainsAppRoleApp> apps) {
            this.apps = apps;
            return this;
        }
        public Builder apps(GetDomainsAppRoleApp... apps) {
            return apps(List.of(apps));
        }
        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {
            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder availableToClients(@Nullable Boolean availableToClients) {
            this.availableToClients = availableToClients;
            return this;
        }
        @CustomType.Setter
        public Builder availableToGroups(@Nullable Boolean availableToGroups) {
            this.availableToGroups = availableToGroups;
            return this;
        }
        @CustomType.Setter
        public Builder availableToUsers(@Nullable Boolean availableToUsers) {
            this.availableToUsers = availableToUsers;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentOcid(@Nullable String compartmentOcid) {
            this.compartmentOcid = compartmentOcid;
            return this;
        }
        @CustomType.Setter
        public Builder deleteInProgress(@Nullable Boolean deleteInProgress) {
            this.deleteInProgress = deleteInProgress;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(@Nullable String domainOcid) {
            this.domainOcid = domainOcid;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(@Nullable List<GetDomainsAppRoleIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = idcsCreatedBies;
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsAppRoleIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            this.idcsEndpoint = Objects.requireNonNull(idcsEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(@Nullable List<GetDomainsAppRoleIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsAppRoleIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(@Nullable String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(@Nullable List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder legacyGroupName(@Nullable String legacyGroupName) {
            this.legacyGroupName = legacyGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder limitedToOneOrMoreGroups(@Nullable Boolean limitedToOneOrMoreGroups) {
            this.limitedToOneOrMoreGroups = limitedToOneOrMoreGroups;
            return this;
        }
        @CustomType.Setter
        public Builder localizedDisplayName(@Nullable String localizedDisplayName) {
            this.localizedDisplayName = localizedDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder members(@Nullable List<GetDomainsAppRoleMember> members) {
            this.members = members;
            return this;
        }
        public Builder members(GetDomainsAppRoleMember... members) {
            return members(List.of(members));
        }
        @CustomType.Setter
        public Builder metas(@Nullable List<GetDomainsAppRoleMeta> metas) {
            this.metas = metas;
            return this;
        }
        public Builder metas(GetDomainsAppRoleMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder ocid(@Nullable String ocid) {
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter("public")
        public Builder public_(@Nullable Boolean public_) {
            this.public_ = public_;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {
            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(@Nullable List<String> schemas) {
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetDomainsAppRoleTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetDomainsAppRoleTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(@Nullable String tenancyOcid) {
            this.tenancyOcid = tenancyOcid;
            return this;
        }
        @CustomType.Setter
        public Builder uniqueName(@Nullable String uniqueName) {
            this.uniqueName = uniqueName;
            return this;
        }
        public GetDomainsAppRoleResult build() {
            final var o = new GetDomainsAppRoleResult();
            o.adminRole = adminRole;
            o.appRoleId = appRoleId;
            o.apps = apps;
            o.attributeSets = attributeSets;
            o.attributes = attributes;
            o.authorization = authorization;
            o.availableToClients = availableToClients;
            o.availableToGroups = availableToGroups;
            o.availableToUsers = availableToUsers;
            o.compartmentOcid = compartmentOcid;
            o.deleteInProgress = deleteInProgress;
            o.description = description;
            o.displayName = displayName;
            o.domainOcid = domainOcid;
            o.id = id;
            o.idcsCreatedBies = idcsCreatedBies;
            o.idcsEndpoint = idcsEndpoint;
            o.idcsLastModifiedBies = idcsLastModifiedBies;
            o.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            o.idcsPreventedOperations = idcsPreventedOperations;
            o.legacyGroupName = legacyGroupName;
            o.limitedToOneOrMoreGroups = limitedToOneOrMoreGroups;
            o.localizedDisplayName = localizedDisplayName;
            o.members = members;
            o.metas = metas;
            o.ocid = ocid;
            o.public_ = public_;
            o.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            o.schemas = schemas;
            o.tags = tags;
            o.tenancyOcid = tenancyOcid;
            o.uniqueName = uniqueName;
            return o;
        }
    }
}
