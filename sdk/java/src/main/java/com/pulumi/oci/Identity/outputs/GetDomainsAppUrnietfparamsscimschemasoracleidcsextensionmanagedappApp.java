// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp {
    /**
     * @return If true, then the account form will be displayed in the Oracle Identity Cloud Service UI to interactively create or update an account for this App. If a value is not specified for this attribute, a default value of \&#34;false\&#34; will be assumed as the value for this attribute.
     * 
     */
    private Boolean accountFormVisible;
    /**
     * @return If true, admin has granted consent to perform managed app run-time operations.
     * 
     */
    private Boolean adminConsentGranted;
    /**
     * @return ConnectorBundle configuration properties
     * 
     */
    private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty> bundleConfigurationProperties;
    /**
     * @return Configurable options maintaining a pool of ICF connector instances. Values for sub attributes can be set only if the ConnectorBundle referenced in the App has connectorPoolingSupported set to true
     * 
     */
    private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration> bundlePoolConfigurations;
    /**
     * @return If true, the managed app can be authoritative.
     * 
     */
    private Boolean canBeAuthoritative;
    /**
     * @return If true, the accounts of the application are managed through an ICF connector bundle
     * 
     */
    private Boolean connected;
    /**
     * @return ConnectorBundle
     * 
     */
    private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle> connectorBundles;
    /**
     * @return If true, send activation email to new users created from authoritative sync.
     * 
     */
    private Boolean enableAuthSyncNewUserNotification;
    /**
     * @return If true, sync run-time operations are enabled for this App.
     * 
     */
    private Boolean enableSync;
    /**
     * @return If true, send sync summary as notification upon job completion.
     * 
     */
    private Boolean enableSyncSummaryReportNotification;
    /**
     * @return Flat file connector bundle configuration properties
     * 
     */
    private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty> flatFileBundleConfigurationProperties;
    /**
     * @return Flat file connector bundle to sync from a flat file.
     * 
     */
    private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle> flatFileConnectorBundles;
    /**
     * @return IdentityBridges associated with this App
     * 
     */
    private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge> identityBridges;
    /**
     * @return If true, sync from the managed app will be performed as authoritative sync.
     * 
     */
    private Boolean isAuthoritative;
    /**
     * @return If true, the managed app is a directory.
     * 
     */
    private Boolean isDirectory;
    /**
     * @return If true, the managed app is an On-Premise app.
     * 
     */
    private Boolean isOnPremiseApp;
    /**
     * @return If true, the managed app supports schema customization.
     * 
     */
    private Boolean isSchemaCustomizationSupported;
    /**
     * @return If true, the managed app supports schema discovery.
     * 
     */
    private Boolean isSchemaDiscoverySupported;
    /**
     * @return If true, the managed app requires 3-legged OAuth for authorization.
     * 
     */
    private Boolean isThreeLeggedOauthEnabled;
    /**
     * @return If true, indicates that Oracle Identity Cloud Service can use two-legged OAuth to connect to this ManagedApp.
     * 
     */
    private Boolean isTwoLeggedOauthEnabled;
    /**
     * @return Object classes
     * 
     */
    private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass> objectClasses;
    /**
     * @return The most recent DateTime that the configuration of this App was updated. AppServices updates this timestamp whenever AppServices updates an App&#39;s configuration with respect to synchronization.
     * 
     */
    private String syncConfigLastModified;
    /**
     * @return The value of this attribute persists any OAuth access token that the system uses to connect to this ManagedApp. The system obtains this access token using an OAuth protocol flow that could be two-legged or three-legged. A two-legged flow involves only the requester and the server. A three-legged flow also requires the consent of a user -- in this case the consent of an administrator.
     * 
     */
    private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential> threeLeggedOauthCredentials;
    /**
     * @return Three legged OAuth provider name in Oracle Identity Cloud Service.
     * 
     */
    private String threeLeggedOauthProviderName;

    private GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp() {}
    /**
     * @return If true, then the account form will be displayed in the Oracle Identity Cloud Service UI to interactively create or update an account for this App. If a value is not specified for this attribute, a default value of \&#34;false\&#34; will be assumed as the value for this attribute.
     * 
     */
    public Boolean accountFormVisible() {
        return this.accountFormVisible;
    }
    /**
     * @return If true, admin has granted consent to perform managed app run-time operations.
     * 
     */
    public Boolean adminConsentGranted() {
        return this.adminConsentGranted;
    }
    /**
     * @return ConnectorBundle configuration properties
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty> bundleConfigurationProperties() {
        return this.bundleConfigurationProperties;
    }
    /**
     * @return Configurable options maintaining a pool of ICF connector instances. Values for sub attributes can be set only if the ConnectorBundle referenced in the App has connectorPoolingSupported set to true
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration> bundlePoolConfigurations() {
        return this.bundlePoolConfigurations;
    }
    /**
     * @return If true, the managed app can be authoritative.
     * 
     */
    public Boolean canBeAuthoritative() {
        return this.canBeAuthoritative;
    }
    /**
     * @return If true, the accounts of the application are managed through an ICF connector bundle
     * 
     */
    public Boolean connected() {
        return this.connected;
    }
    /**
     * @return ConnectorBundle
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle> connectorBundles() {
        return this.connectorBundles;
    }
    /**
     * @return If true, send activation email to new users created from authoritative sync.
     * 
     */
    public Boolean enableAuthSyncNewUserNotification() {
        return this.enableAuthSyncNewUserNotification;
    }
    /**
     * @return If true, sync run-time operations are enabled for this App.
     * 
     */
    public Boolean enableSync() {
        return this.enableSync;
    }
    /**
     * @return If true, send sync summary as notification upon job completion.
     * 
     */
    public Boolean enableSyncSummaryReportNotification() {
        return this.enableSyncSummaryReportNotification;
    }
    /**
     * @return Flat file connector bundle configuration properties
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty> flatFileBundleConfigurationProperties() {
        return this.flatFileBundleConfigurationProperties;
    }
    /**
     * @return Flat file connector bundle to sync from a flat file.
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle> flatFileConnectorBundles() {
        return this.flatFileConnectorBundles;
    }
    /**
     * @return IdentityBridges associated with this App
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge> identityBridges() {
        return this.identityBridges;
    }
    /**
     * @return If true, sync from the managed app will be performed as authoritative sync.
     * 
     */
    public Boolean isAuthoritative() {
        return this.isAuthoritative;
    }
    /**
     * @return If true, the managed app is a directory.
     * 
     */
    public Boolean isDirectory() {
        return this.isDirectory;
    }
    /**
     * @return If true, the managed app is an On-Premise app.
     * 
     */
    public Boolean isOnPremiseApp() {
        return this.isOnPremiseApp;
    }
    /**
     * @return If true, the managed app supports schema customization.
     * 
     */
    public Boolean isSchemaCustomizationSupported() {
        return this.isSchemaCustomizationSupported;
    }
    /**
     * @return If true, the managed app supports schema discovery.
     * 
     */
    public Boolean isSchemaDiscoverySupported() {
        return this.isSchemaDiscoverySupported;
    }
    /**
     * @return If true, the managed app requires 3-legged OAuth for authorization.
     * 
     */
    public Boolean isThreeLeggedOauthEnabled() {
        return this.isThreeLeggedOauthEnabled;
    }
    /**
     * @return If true, indicates that Oracle Identity Cloud Service can use two-legged OAuth to connect to this ManagedApp.
     * 
     */
    public Boolean isTwoLeggedOauthEnabled() {
        return this.isTwoLeggedOauthEnabled;
    }
    /**
     * @return Object classes
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass> objectClasses() {
        return this.objectClasses;
    }
    /**
     * @return The most recent DateTime that the configuration of this App was updated. AppServices updates this timestamp whenever AppServices updates an App&#39;s configuration with respect to synchronization.
     * 
     */
    public String syncConfigLastModified() {
        return this.syncConfigLastModified;
    }
    /**
     * @return The value of this attribute persists any OAuth access token that the system uses to connect to this ManagedApp. The system obtains this access token using an OAuth protocol flow that could be two-legged or three-legged. A two-legged flow involves only the requester and the server. A three-legged flow also requires the consent of a user -- in this case the consent of an administrator.
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential> threeLeggedOauthCredentials() {
        return this.threeLeggedOauthCredentials;
    }
    /**
     * @return Three legged OAuth provider name in Oracle Identity Cloud Service.
     * 
     */
    public String threeLeggedOauthProviderName() {
        return this.threeLeggedOauthProviderName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean accountFormVisible;
        private Boolean adminConsentGranted;
        private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty> bundleConfigurationProperties;
        private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration> bundlePoolConfigurations;
        private Boolean canBeAuthoritative;
        private Boolean connected;
        private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle> connectorBundles;
        private Boolean enableAuthSyncNewUserNotification;
        private Boolean enableSync;
        private Boolean enableSyncSummaryReportNotification;
        private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty> flatFileBundleConfigurationProperties;
        private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle> flatFileConnectorBundles;
        private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge> identityBridges;
        private Boolean isAuthoritative;
        private Boolean isDirectory;
        private Boolean isOnPremiseApp;
        private Boolean isSchemaCustomizationSupported;
        private Boolean isSchemaDiscoverySupported;
        private Boolean isThreeLeggedOauthEnabled;
        private Boolean isTwoLeggedOauthEnabled;
        private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass> objectClasses;
        private String syncConfigLastModified;
        private List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential> threeLeggedOauthCredentials;
        private String threeLeggedOauthProviderName;
        public Builder() {}
        public Builder(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountFormVisible = defaults.accountFormVisible;
    	      this.adminConsentGranted = defaults.adminConsentGranted;
    	      this.bundleConfigurationProperties = defaults.bundleConfigurationProperties;
    	      this.bundlePoolConfigurations = defaults.bundlePoolConfigurations;
    	      this.canBeAuthoritative = defaults.canBeAuthoritative;
    	      this.connected = defaults.connected;
    	      this.connectorBundles = defaults.connectorBundles;
    	      this.enableAuthSyncNewUserNotification = defaults.enableAuthSyncNewUserNotification;
    	      this.enableSync = defaults.enableSync;
    	      this.enableSyncSummaryReportNotification = defaults.enableSyncSummaryReportNotification;
    	      this.flatFileBundleConfigurationProperties = defaults.flatFileBundleConfigurationProperties;
    	      this.flatFileConnectorBundles = defaults.flatFileConnectorBundles;
    	      this.identityBridges = defaults.identityBridges;
    	      this.isAuthoritative = defaults.isAuthoritative;
    	      this.isDirectory = defaults.isDirectory;
    	      this.isOnPremiseApp = defaults.isOnPremiseApp;
    	      this.isSchemaCustomizationSupported = defaults.isSchemaCustomizationSupported;
    	      this.isSchemaDiscoverySupported = defaults.isSchemaDiscoverySupported;
    	      this.isThreeLeggedOauthEnabled = defaults.isThreeLeggedOauthEnabled;
    	      this.isTwoLeggedOauthEnabled = defaults.isTwoLeggedOauthEnabled;
    	      this.objectClasses = defaults.objectClasses;
    	      this.syncConfigLastModified = defaults.syncConfigLastModified;
    	      this.threeLeggedOauthCredentials = defaults.threeLeggedOauthCredentials;
    	      this.threeLeggedOauthProviderName = defaults.threeLeggedOauthProviderName;
        }

        @CustomType.Setter
        public Builder accountFormVisible(Boolean accountFormVisible) {
            if (accountFormVisible == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "accountFormVisible");
            }
            this.accountFormVisible = accountFormVisible;
            return this;
        }
        @CustomType.Setter
        public Builder adminConsentGranted(Boolean adminConsentGranted) {
            if (adminConsentGranted == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "adminConsentGranted");
            }
            this.adminConsentGranted = adminConsentGranted;
            return this;
        }
        @CustomType.Setter
        public Builder bundleConfigurationProperties(List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty> bundleConfigurationProperties) {
            if (bundleConfigurationProperties == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "bundleConfigurationProperties");
            }
            this.bundleConfigurationProperties = bundleConfigurationProperties;
            return this;
        }
        public Builder bundleConfigurationProperties(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty... bundleConfigurationProperties) {
            return bundleConfigurationProperties(List.of(bundleConfigurationProperties));
        }
        @CustomType.Setter
        public Builder bundlePoolConfigurations(List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration> bundlePoolConfigurations) {
            if (bundlePoolConfigurations == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "bundlePoolConfigurations");
            }
            this.bundlePoolConfigurations = bundlePoolConfigurations;
            return this;
        }
        public Builder bundlePoolConfigurations(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration... bundlePoolConfigurations) {
            return bundlePoolConfigurations(List.of(bundlePoolConfigurations));
        }
        @CustomType.Setter
        public Builder canBeAuthoritative(Boolean canBeAuthoritative) {
            if (canBeAuthoritative == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "canBeAuthoritative");
            }
            this.canBeAuthoritative = canBeAuthoritative;
            return this;
        }
        @CustomType.Setter
        public Builder connected(Boolean connected) {
            if (connected == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "connected");
            }
            this.connected = connected;
            return this;
        }
        @CustomType.Setter
        public Builder connectorBundles(List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle> connectorBundles) {
            if (connectorBundles == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "connectorBundles");
            }
            this.connectorBundles = connectorBundles;
            return this;
        }
        public Builder connectorBundles(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle... connectorBundles) {
            return connectorBundles(List.of(connectorBundles));
        }
        @CustomType.Setter
        public Builder enableAuthSyncNewUserNotification(Boolean enableAuthSyncNewUserNotification) {
            if (enableAuthSyncNewUserNotification == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "enableAuthSyncNewUserNotification");
            }
            this.enableAuthSyncNewUserNotification = enableAuthSyncNewUserNotification;
            return this;
        }
        @CustomType.Setter
        public Builder enableSync(Boolean enableSync) {
            if (enableSync == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "enableSync");
            }
            this.enableSync = enableSync;
            return this;
        }
        @CustomType.Setter
        public Builder enableSyncSummaryReportNotification(Boolean enableSyncSummaryReportNotification) {
            if (enableSyncSummaryReportNotification == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "enableSyncSummaryReportNotification");
            }
            this.enableSyncSummaryReportNotification = enableSyncSummaryReportNotification;
            return this;
        }
        @CustomType.Setter
        public Builder flatFileBundleConfigurationProperties(List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty> flatFileBundleConfigurationProperties) {
            if (flatFileBundleConfigurationProperties == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "flatFileBundleConfigurationProperties");
            }
            this.flatFileBundleConfigurationProperties = flatFileBundleConfigurationProperties;
            return this;
        }
        public Builder flatFileBundleConfigurationProperties(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty... flatFileBundleConfigurationProperties) {
            return flatFileBundleConfigurationProperties(List.of(flatFileBundleConfigurationProperties));
        }
        @CustomType.Setter
        public Builder flatFileConnectorBundles(List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle> flatFileConnectorBundles) {
            if (flatFileConnectorBundles == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "flatFileConnectorBundles");
            }
            this.flatFileConnectorBundles = flatFileConnectorBundles;
            return this;
        }
        public Builder flatFileConnectorBundles(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle... flatFileConnectorBundles) {
            return flatFileConnectorBundles(List.of(flatFileConnectorBundles));
        }
        @CustomType.Setter
        public Builder identityBridges(List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge> identityBridges) {
            if (identityBridges == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "identityBridges");
            }
            this.identityBridges = identityBridges;
            return this;
        }
        public Builder identityBridges(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge... identityBridges) {
            return identityBridges(List.of(identityBridges));
        }
        @CustomType.Setter
        public Builder isAuthoritative(Boolean isAuthoritative) {
            if (isAuthoritative == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "isAuthoritative");
            }
            this.isAuthoritative = isAuthoritative;
            return this;
        }
        @CustomType.Setter
        public Builder isDirectory(Boolean isDirectory) {
            if (isDirectory == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "isDirectory");
            }
            this.isDirectory = isDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder isOnPremiseApp(Boolean isOnPremiseApp) {
            if (isOnPremiseApp == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "isOnPremiseApp");
            }
            this.isOnPremiseApp = isOnPremiseApp;
            return this;
        }
        @CustomType.Setter
        public Builder isSchemaCustomizationSupported(Boolean isSchemaCustomizationSupported) {
            if (isSchemaCustomizationSupported == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "isSchemaCustomizationSupported");
            }
            this.isSchemaCustomizationSupported = isSchemaCustomizationSupported;
            return this;
        }
        @CustomType.Setter
        public Builder isSchemaDiscoverySupported(Boolean isSchemaDiscoverySupported) {
            if (isSchemaDiscoverySupported == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "isSchemaDiscoverySupported");
            }
            this.isSchemaDiscoverySupported = isSchemaDiscoverySupported;
            return this;
        }
        @CustomType.Setter
        public Builder isThreeLeggedOauthEnabled(Boolean isThreeLeggedOauthEnabled) {
            if (isThreeLeggedOauthEnabled == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "isThreeLeggedOauthEnabled");
            }
            this.isThreeLeggedOauthEnabled = isThreeLeggedOauthEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isTwoLeggedOauthEnabled(Boolean isTwoLeggedOauthEnabled) {
            if (isTwoLeggedOauthEnabled == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "isTwoLeggedOauthEnabled");
            }
            this.isTwoLeggedOauthEnabled = isTwoLeggedOauthEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder objectClasses(List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass> objectClasses) {
            if (objectClasses == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "objectClasses");
            }
            this.objectClasses = objectClasses;
            return this;
        }
        public Builder objectClasses(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass... objectClasses) {
            return objectClasses(List.of(objectClasses));
        }
        @CustomType.Setter
        public Builder syncConfigLastModified(String syncConfigLastModified) {
            if (syncConfigLastModified == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "syncConfigLastModified");
            }
            this.syncConfigLastModified = syncConfigLastModified;
            return this;
        }
        @CustomType.Setter
        public Builder threeLeggedOauthCredentials(List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential> threeLeggedOauthCredentials) {
            if (threeLeggedOauthCredentials == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "threeLeggedOauthCredentials");
            }
            this.threeLeggedOauthCredentials = threeLeggedOauthCredentials;
            return this;
        }
        public Builder threeLeggedOauthCredentials(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential... threeLeggedOauthCredentials) {
            return threeLeggedOauthCredentials(List.of(threeLeggedOauthCredentials));
        }
        @CustomType.Setter
        public Builder threeLeggedOauthProviderName(String threeLeggedOauthProviderName) {
            if (threeLeggedOauthProviderName == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp", "threeLeggedOauthProviderName");
            }
            this.threeLeggedOauthProviderName = threeLeggedOauthProviderName;
            return this;
        }
        public GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp build() {
            final var _resultValue = new GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp();
            _resultValue.accountFormVisible = accountFormVisible;
            _resultValue.adminConsentGranted = adminConsentGranted;
            _resultValue.bundleConfigurationProperties = bundleConfigurationProperties;
            _resultValue.bundlePoolConfigurations = bundlePoolConfigurations;
            _resultValue.canBeAuthoritative = canBeAuthoritative;
            _resultValue.connected = connected;
            _resultValue.connectorBundles = connectorBundles;
            _resultValue.enableAuthSyncNewUserNotification = enableAuthSyncNewUserNotification;
            _resultValue.enableSync = enableSync;
            _resultValue.enableSyncSummaryReportNotification = enableSyncSummaryReportNotification;
            _resultValue.flatFileBundleConfigurationProperties = flatFileBundleConfigurationProperties;
            _resultValue.flatFileConnectorBundles = flatFileConnectorBundles;
            _resultValue.identityBridges = identityBridges;
            _resultValue.isAuthoritative = isAuthoritative;
            _resultValue.isDirectory = isDirectory;
            _resultValue.isOnPremiseApp = isOnPremiseApp;
            _resultValue.isSchemaCustomizationSupported = isSchemaCustomizationSupported;
            _resultValue.isSchemaDiscoverySupported = isSchemaDiscoverySupported;
            _resultValue.isThreeLeggedOauthEnabled = isThreeLeggedOauthEnabled;
            _resultValue.isTwoLeggedOauthEnabled = isTwoLeggedOauthEnabled;
            _resultValue.objectClasses = objectClasses;
            _resultValue.syncConfigLastModified = syncConfigLastModified;
            _resultValue.threeLeggedOauthCredentials = threeLeggedOauthCredentials;
            _resultValue.threeLeggedOauthProviderName = threeLeggedOauthProviderName;
            return _resultValue;
        }
    }
}
