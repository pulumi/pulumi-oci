// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp {
    /**
     * @return If true, then the account form will be displayed in the Oracle Identity Cloud Service UI to interactively create or update an account for this App. If a value is not specified for this attribute, a default value of \&#34;false\&#34; will be assumed as the value for this attribute.
     * 
     */
    private @Nullable Boolean accountFormVisible;
    /**
     * @return If true, admin has granted consent to perform managed app run-time operations.
     * 
     */
    private @Nullable Boolean adminConsentGranted;
    /**
     * @return ConnectorBundle configuration properties
     * 
     */
    private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty> bundleConfigurationProperties;
    /**
     * @return Configurable options maintaining a pool of ICF connector instances. Values for sub attributes can be set only if the ConnectorBundle referenced in the App has connectorPoolingSupported set to true
     * 
     */
    private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration> bundlePoolConfigurations;
    /**
     * @return If true, the managed app can be authoritative.
     * 
     */
    private @Nullable Boolean canBeAuthoritative;
    /**
     * @return If true, the accounts of the application are managed through an ICF connector bundle
     * 
     */
    private @Nullable Boolean connected;
    /**
     * @return ConnectorBundle
     * 
     */
    private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle> connectorBundles;
    /**
     * @return If true, send activation email to new users created from authoritative sync.
     * 
     */
    private @Nullable Boolean enableAuthSyncNewUserNotification;
    /**
     * @return If true, sync run-time operations are enabled for this App.
     * 
     */
    private @Nullable Boolean enableSync;
    /**
     * @return If true, send sync summary as notification upon job completion.
     * 
     */
    private @Nullable Boolean enableSyncSummaryReportNotification;
    /**
     * @return Flat file connector bundle configuration properties
     * 
     */
    private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty> flatFileBundleConfigurationProperties;
    /**
     * @return Flat file connector bundle to sync from a flat file.
     * 
     */
    private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle> flatFileConnectorBundles;
    /**
     * @return IdentityBridges associated with this App
     * 
     */
    private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge> identityBridges;
    /**
     * @return If true, sync from the managed app will be performed as authoritative sync.
     * 
     */
    private @Nullable Boolean isAuthoritative;
    /**
     * @return If true, the managed app is a directory.
     * 
     */
    private @Nullable Boolean isDirectory;
    /**
     * @return If true, the managed app is an On-Premise app.
     * 
     */
    private @Nullable Boolean isOnPremiseApp;
    /**
     * @return If true, the managed app supports schema customization.
     * 
     */
    private @Nullable Boolean isSchemaCustomizationSupported;
    /**
     * @return If true, the managed app supports schema discovery.
     * 
     */
    private @Nullable Boolean isSchemaDiscoverySupported;
    /**
     * @return If true, the managed app requires 3-legged OAuth for authorization.
     * 
     */
    private @Nullable Boolean isThreeLeggedOauthEnabled;
    /**
     * @return If true, indicates that Oracle Identity Cloud Service can use two-legged OAuth to connect to this ManagedApp.
     * 
     */
    private @Nullable Boolean isTwoLeggedOauthEnabled;
    /**
     * @return Object classes
     * 
     */
    private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass> objectClasses;
    /**
     * @return The most recent DateTime that the configuration of this App was updated. AppServices updates this timestamp whenever AppServices updates an App&#39;s configuration with respect to synchronization.
     * 
     */
    private @Nullable String syncConfigLastModified;
    /**
     * @return The value of this attribute persists any OAuth access token that the system uses to connect to this ManagedApp. The system obtains this access token using an OAuth protocol flow that could be two-legged or three-legged. A two-legged flow involves only the requester and the server. A three-legged flow also requires the consent of a user -- in this case the consent of an administrator.
     * 
     */
    private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential> threeLeggedOauthCredentials;
    /**
     * @return Three legged OAuth provider name in Oracle Identity Cloud Service.
     * 
     */
    private @Nullable String threeLeggedOauthProviderName;

    private GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp() {}
    /**
     * @return If true, then the account form will be displayed in the Oracle Identity Cloud Service UI to interactively create or update an account for this App. If a value is not specified for this attribute, a default value of \&#34;false\&#34; will be assumed as the value for this attribute.
     * 
     */
    public Optional<Boolean> accountFormVisible() {
        return Optional.ofNullable(this.accountFormVisible);
    }
    /**
     * @return If true, admin has granted consent to perform managed app run-time operations.
     * 
     */
    public Optional<Boolean> adminConsentGranted() {
        return Optional.ofNullable(this.adminConsentGranted);
    }
    /**
     * @return ConnectorBundle configuration properties
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty> bundleConfigurationProperties() {
        return this.bundleConfigurationProperties == null ? List.of() : this.bundleConfigurationProperties;
    }
    /**
     * @return Configurable options maintaining a pool of ICF connector instances. Values for sub attributes can be set only if the ConnectorBundle referenced in the App has connectorPoolingSupported set to true
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration> bundlePoolConfigurations() {
        return this.bundlePoolConfigurations == null ? List.of() : this.bundlePoolConfigurations;
    }
    /**
     * @return If true, the managed app can be authoritative.
     * 
     */
    public Optional<Boolean> canBeAuthoritative() {
        return Optional.ofNullable(this.canBeAuthoritative);
    }
    /**
     * @return If true, the accounts of the application are managed through an ICF connector bundle
     * 
     */
    public Optional<Boolean> connected() {
        return Optional.ofNullable(this.connected);
    }
    /**
     * @return ConnectorBundle
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle> connectorBundles() {
        return this.connectorBundles == null ? List.of() : this.connectorBundles;
    }
    /**
     * @return If true, send activation email to new users created from authoritative sync.
     * 
     */
    public Optional<Boolean> enableAuthSyncNewUserNotification() {
        return Optional.ofNullable(this.enableAuthSyncNewUserNotification);
    }
    /**
     * @return If true, sync run-time operations are enabled for this App.
     * 
     */
    public Optional<Boolean> enableSync() {
        return Optional.ofNullable(this.enableSync);
    }
    /**
     * @return If true, send sync summary as notification upon job completion.
     * 
     */
    public Optional<Boolean> enableSyncSummaryReportNotification() {
        return Optional.ofNullable(this.enableSyncSummaryReportNotification);
    }
    /**
     * @return Flat file connector bundle configuration properties
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty> flatFileBundleConfigurationProperties() {
        return this.flatFileBundleConfigurationProperties == null ? List.of() : this.flatFileBundleConfigurationProperties;
    }
    /**
     * @return Flat file connector bundle to sync from a flat file.
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle> flatFileConnectorBundles() {
        return this.flatFileConnectorBundles == null ? List.of() : this.flatFileConnectorBundles;
    }
    /**
     * @return IdentityBridges associated with this App
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge> identityBridges() {
        return this.identityBridges == null ? List.of() : this.identityBridges;
    }
    /**
     * @return If true, sync from the managed app will be performed as authoritative sync.
     * 
     */
    public Optional<Boolean> isAuthoritative() {
        return Optional.ofNullable(this.isAuthoritative);
    }
    /**
     * @return If true, the managed app is a directory.
     * 
     */
    public Optional<Boolean> isDirectory() {
        return Optional.ofNullable(this.isDirectory);
    }
    /**
     * @return If true, the managed app is an On-Premise app.
     * 
     */
    public Optional<Boolean> isOnPremiseApp() {
        return Optional.ofNullable(this.isOnPremiseApp);
    }
    /**
     * @return If true, the managed app supports schema customization.
     * 
     */
    public Optional<Boolean> isSchemaCustomizationSupported() {
        return Optional.ofNullable(this.isSchemaCustomizationSupported);
    }
    /**
     * @return If true, the managed app supports schema discovery.
     * 
     */
    public Optional<Boolean> isSchemaDiscoverySupported() {
        return Optional.ofNullable(this.isSchemaDiscoverySupported);
    }
    /**
     * @return If true, the managed app requires 3-legged OAuth for authorization.
     * 
     */
    public Optional<Boolean> isThreeLeggedOauthEnabled() {
        return Optional.ofNullable(this.isThreeLeggedOauthEnabled);
    }
    /**
     * @return If true, indicates that Oracle Identity Cloud Service can use two-legged OAuth to connect to this ManagedApp.
     * 
     */
    public Optional<Boolean> isTwoLeggedOauthEnabled() {
        return Optional.ofNullable(this.isTwoLeggedOauthEnabled);
    }
    /**
     * @return Object classes
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass> objectClasses() {
        return this.objectClasses == null ? List.of() : this.objectClasses;
    }
    /**
     * @return The most recent DateTime that the configuration of this App was updated. AppServices updates this timestamp whenever AppServices updates an App&#39;s configuration with respect to synchronization.
     * 
     */
    public Optional<String> syncConfigLastModified() {
        return Optional.ofNullable(this.syncConfigLastModified);
    }
    /**
     * @return The value of this attribute persists any OAuth access token that the system uses to connect to this ManagedApp. The system obtains this access token using an OAuth protocol flow that could be two-legged or three-legged. A two-legged flow involves only the requester and the server. A three-legged flow also requires the consent of a user -- in this case the consent of an administrator.
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential> threeLeggedOauthCredentials() {
        return this.threeLeggedOauthCredentials == null ? List.of() : this.threeLeggedOauthCredentials;
    }
    /**
     * @return Three legged OAuth provider name in Oracle Identity Cloud Service.
     * 
     */
    public Optional<String> threeLeggedOauthProviderName() {
        return Optional.ofNullable(this.threeLeggedOauthProviderName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean accountFormVisible;
        private @Nullable Boolean adminConsentGranted;
        private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty> bundleConfigurationProperties;
        private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration> bundlePoolConfigurations;
        private @Nullable Boolean canBeAuthoritative;
        private @Nullable Boolean connected;
        private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle> connectorBundles;
        private @Nullable Boolean enableAuthSyncNewUserNotification;
        private @Nullable Boolean enableSync;
        private @Nullable Boolean enableSyncSummaryReportNotification;
        private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty> flatFileBundleConfigurationProperties;
        private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle> flatFileConnectorBundles;
        private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge> identityBridges;
        private @Nullable Boolean isAuthoritative;
        private @Nullable Boolean isDirectory;
        private @Nullable Boolean isOnPremiseApp;
        private @Nullable Boolean isSchemaCustomizationSupported;
        private @Nullable Boolean isSchemaDiscoverySupported;
        private @Nullable Boolean isThreeLeggedOauthEnabled;
        private @Nullable Boolean isTwoLeggedOauthEnabled;
        private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass> objectClasses;
        private @Nullable String syncConfigLastModified;
        private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential> threeLeggedOauthCredentials;
        private @Nullable String threeLeggedOauthProviderName;
        public Builder() {}
        public Builder(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountFormVisible = defaults.accountFormVisible;
    	      this.adminConsentGranted = defaults.adminConsentGranted;
    	      this.bundleConfigurationProperties = defaults.bundleConfigurationProperties;
    	      this.bundlePoolConfigurations = defaults.bundlePoolConfigurations;
    	      this.canBeAuthoritative = defaults.canBeAuthoritative;
    	      this.connected = defaults.connected;
    	      this.connectorBundles = defaults.connectorBundles;
    	      this.enableAuthSyncNewUserNotification = defaults.enableAuthSyncNewUserNotification;
    	      this.enableSync = defaults.enableSync;
    	      this.enableSyncSummaryReportNotification = defaults.enableSyncSummaryReportNotification;
    	      this.flatFileBundleConfigurationProperties = defaults.flatFileBundleConfigurationProperties;
    	      this.flatFileConnectorBundles = defaults.flatFileConnectorBundles;
    	      this.identityBridges = defaults.identityBridges;
    	      this.isAuthoritative = defaults.isAuthoritative;
    	      this.isDirectory = defaults.isDirectory;
    	      this.isOnPremiseApp = defaults.isOnPremiseApp;
    	      this.isSchemaCustomizationSupported = defaults.isSchemaCustomizationSupported;
    	      this.isSchemaDiscoverySupported = defaults.isSchemaDiscoverySupported;
    	      this.isThreeLeggedOauthEnabled = defaults.isThreeLeggedOauthEnabled;
    	      this.isTwoLeggedOauthEnabled = defaults.isTwoLeggedOauthEnabled;
    	      this.objectClasses = defaults.objectClasses;
    	      this.syncConfigLastModified = defaults.syncConfigLastModified;
    	      this.threeLeggedOauthCredentials = defaults.threeLeggedOauthCredentials;
    	      this.threeLeggedOauthProviderName = defaults.threeLeggedOauthProviderName;
        }

        @CustomType.Setter
        public Builder accountFormVisible(@Nullable Boolean accountFormVisible) {
            this.accountFormVisible = accountFormVisible;
            return this;
        }
        @CustomType.Setter
        public Builder adminConsentGranted(@Nullable Boolean adminConsentGranted) {
            this.adminConsentGranted = adminConsentGranted;
            return this;
        }
        @CustomType.Setter
        public Builder bundleConfigurationProperties(@Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty> bundleConfigurationProperties) {
            this.bundleConfigurationProperties = bundleConfigurationProperties;
            return this;
        }
        public Builder bundleConfigurationProperties(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundleConfigurationProperty... bundleConfigurationProperties) {
            return bundleConfigurationProperties(List.of(bundleConfigurationProperties));
        }
        @CustomType.Setter
        public Builder bundlePoolConfigurations(@Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration> bundlePoolConfigurations) {
            this.bundlePoolConfigurations = bundlePoolConfigurations;
            return this;
        }
        public Builder bundlePoolConfigurations(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration... bundlePoolConfigurations) {
            return bundlePoolConfigurations(List.of(bundlePoolConfigurations));
        }
        @CustomType.Setter
        public Builder canBeAuthoritative(@Nullable Boolean canBeAuthoritative) {
            this.canBeAuthoritative = canBeAuthoritative;
            return this;
        }
        @CustomType.Setter
        public Builder connected(@Nullable Boolean connected) {
            this.connected = connected;
            return this;
        }
        @CustomType.Setter
        public Builder connectorBundles(@Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle> connectorBundles) {
            this.connectorBundles = connectorBundles;
            return this;
        }
        public Builder connectorBundles(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppConnectorBundle... connectorBundles) {
            return connectorBundles(List.of(connectorBundles));
        }
        @CustomType.Setter
        public Builder enableAuthSyncNewUserNotification(@Nullable Boolean enableAuthSyncNewUserNotification) {
            this.enableAuthSyncNewUserNotification = enableAuthSyncNewUserNotification;
            return this;
        }
        @CustomType.Setter
        public Builder enableSync(@Nullable Boolean enableSync) {
            this.enableSync = enableSync;
            return this;
        }
        @CustomType.Setter
        public Builder enableSyncSummaryReportNotification(@Nullable Boolean enableSyncSummaryReportNotification) {
            this.enableSyncSummaryReportNotification = enableSyncSummaryReportNotification;
            return this;
        }
        @CustomType.Setter
        public Builder flatFileBundleConfigurationProperties(@Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty> flatFileBundleConfigurationProperties) {
            this.flatFileBundleConfigurationProperties = flatFileBundleConfigurationProperties;
            return this;
        }
        public Builder flatFileBundleConfigurationProperties(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileBundleConfigurationProperty... flatFileBundleConfigurationProperties) {
            return flatFileBundleConfigurationProperties(List.of(flatFileBundleConfigurationProperties));
        }
        @CustomType.Setter
        public Builder flatFileConnectorBundles(@Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle> flatFileConnectorBundles) {
            this.flatFileConnectorBundles = flatFileConnectorBundles;
            return this;
        }
        public Builder flatFileConnectorBundles(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppFlatFileConnectorBundle... flatFileConnectorBundles) {
            return flatFileConnectorBundles(List.of(flatFileConnectorBundles));
        }
        @CustomType.Setter
        public Builder identityBridges(@Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge> identityBridges) {
            this.identityBridges = identityBridges;
            return this;
        }
        public Builder identityBridges(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppIdentityBridge... identityBridges) {
            return identityBridges(List.of(identityBridges));
        }
        @CustomType.Setter
        public Builder isAuthoritative(@Nullable Boolean isAuthoritative) {
            this.isAuthoritative = isAuthoritative;
            return this;
        }
        @CustomType.Setter
        public Builder isDirectory(@Nullable Boolean isDirectory) {
            this.isDirectory = isDirectory;
            return this;
        }
        @CustomType.Setter
        public Builder isOnPremiseApp(@Nullable Boolean isOnPremiseApp) {
            this.isOnPremiseApp = isOnPremiseApp;
            return this;
        }
        @CustomType.Setter
        public Builder isSchemaCustomizationSupported(@Nullable Boolean isSchemaCustomizationSupported) {
            this.isSchemaCustomizationSupported = isSchemaCustomizationSupported;
            return this;
        }
        @CustomType.Setter
        public Builder isSchemaDiscoverySupported(@Nullable Boolean isSchemaDiscoverySupported) {
            this.isSchemaDiscoverySupported = isSchemaDiscoverySupported;
            return this;
        }
        @CustomType.Setter
        public Builder isThreeLeggedOauthEnabled(@Nullable Boolean isThreeLeggedOauthEnabled) {
            this.isThreeLeggedOauthEnabled = isThreeLeggedOauthEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isTwoLeggedOauthEnabled(@Nullable Boolean isTwoLeggedOauthEnabled) {
            this.isTwoLeggedOauthEnabled = isTwoLeggedOauthEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder objectClasses(@Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass> objectClasses) {
            this.objectClasses = objectClasses;
            return this;
        }
        public Builder objectClasses(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppObjectClass... objectClasses) {
            return objectClasses(List.of(objectClasses));
        }
        @CustomType.Setter
        public Builder syncConfigLastModified(@Nullable String syncConfigLastModified) {
            this.syncConfigLastModified = syncConfigLastModified;
            return this;
        }
        @CustomType.Setter
        public Builder threeLeggedOauthCredentials(@Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential> threeLeggedOauthCredentials) {
            this.threeLeggedOauthCredentials = threeLeggedOauthCredentials;
            return this;
        }
        public Builder threeLeggedOauthCredentials(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppThreeLeggedOauthCredential... threeLeggedOauthCredentials) {
            return threeLeggedOauthCredentials(List.of(threeLeggedOauthCredentials));
        }
        @CustomType.Setter
        public Builder threeLeggedOauthProviderName(@Nullable String threeLeggedOauthProviderName) {
            this.threeLeggedOauthProviderName = threeLeggedOauthProviderName;
            return this;
        }
        public GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp build() {
            final var o = new GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappApp();
            o.accountFormVisible = accountFormVisible;
            o.adminConsentGranted = adminConsentGranted;
            o.bundleConfigurationProperties = bundleConfigurationProperties;
            o.bundlePoolConfigurations = bundlePoolConfigurations;
            o.canBeAuthoritative = canBeAuthoritative;
            o.connected = connected;
            o.connectorBundles = connectorBundles;
            o.enableAuthSyncNewUserNotification = enableAuthSyncNewUserNotification;
            o.enableSync = enableSync;
            o.enableSyncSummaryReportNotification = enableSyncSummaryReportNotification;
            o.flatFileBundleConfigurationProperties = flatFileBundleConfigurationProperties;
            o.flatFileConnectorBundles = flatFileConnectorBundles;
            o.identityBridges = identityBridges;
            o.isAuthoritative = isAuthoritative;
            o.isDirectory = isDirectory;
            o.isOnPremiseApp = isOnPremiseApp;
            o.isSchemaCustomizationSupported = isSchemaCustomizationSupported;
            o.isSchemaDiscoverySupported = isSchemaDiscoverySupported;
            o.isThreeLeggedOauthEnabled = isThreeLeggedOauthEnabled;
            o.isTwoLeggedOauthEnabled = isTwoLeggedOauthEnabled;
            o.objectClasses = objectClasses;
            o.syncConfigLastModified = syncConfigLastModified;
            o.threeLeggedOauthCredentials = threeLeggedOauthCredentials;
            o.threeLeggedOauthProviderName = threeLeggedOauthProviderName;
            return o;
        }
    }
}
