// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration {
    /**
     * @return Maximum number of connector instances in the pool that are idle and active.
     * 
     */
    private Integer maxIdle;
    /**
     * @return Maximum number of connector instances in the pool that are idle and active.
     * 
     */
    private Integer maxObjects;
    /**
     * @return Maximum time (in milliseconds) to wait for a free connector instance to become available before failing.
     * 
     */
    private Integer maxWait;
    /**
     * @return Minimum time (in milliseconds) to wait before evicting an idle conenctor instance from the pool.
     * 
     */
    private Integer minEvictableIdleTimeMillis;
    /**
     * @return Minimum number of idle connector instances in the pool.
     * 
     */
    private Integer minIdle;

    private GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration() {}
    /**
     * @return Maximum number of connector instances in the pool that are idle and active.
     * 
     */
    public Integer maxIdle() {
        return this.maxIdle;
    }
    /**
     * @return Maximum number of connector instances in the pool that are idle and active.
     * 
     */
    public Integer maxObjects() {
        return this.maxObjects;
    }
    /**
     * @return Maximum time (in milliseconds) to wait for a free connector instance to become available before failing.
     * 
     */
    public Integer maxWait() {
        return this.maxWait;
    }
    /**
     * @return Minimum time (in milliseconds) to wait before evicting an idle conenctor instance from the pool.
     * 
     */
    public Integer minEvictableIdleTimeMillis() {
        return this.minEvictableIdleTimeMillis;
    }
    /**
     * @return Minimum number of idle connector instances in the pool.
     * 
     */
    public Integer minIdle() {
        return this.minIdle;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxIdle;
        private Integer maxObjects;
        private Integer maxWait;
        private Integer minEvictableIdleTimeMillis;
        private Integer minIdle;
        public Builder() {}
        public Builder(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxIdle = defaults.maxIdle;
    	      this.maxObjects = defaults.maxObjects;
    	      this.maxWait = defaults.maxWait;
    	      this.minEvictableIdleTimeMillis = defaults.minEvictableIdleTimeMillis;
    	      this.minIdle = defaults.minIdle;
        }

        @CustomType.Setter
        public Builder maxIdle(Integer maxIdle) {
            this.maxIdle = Objects.requireNonNull(maxIdle);
            return this;
        }
        @CustomType.Setter
        public Builder maxObjects(Integer maxObjects) {
            this.maxObjects = Objects.requireNonNull(maxObjects);
            return this;
        }
        @CustomType.Setter
        public Builder maxWait(Integer maxWait) {
            this.maxWait = Objects.requireNonNull(maxWait);
            return this;
        }
        @CustomType.Setter
        public Builder minEvictableIdleTimeMillis(Integer minEvictableIdleTimeMillis) {
            this.minEvictableIdleTimeMillis = Objects.requireNonNull(minEvictableIdleTimeMillis);
            return this;
        }
        @CustomType.Setter
        public Builder minIdle(Integer minIdle) {
            this.minIdle = Objects.requireNonNull(minIdle);
            return this;
        }
        public GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration build() {
            final var o = new GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration();
            o.maxIdle = maxIdle;
            o.maxObjects = maxObjects;
            o.maxWait = maxWait;
            o.minEvictableIdleTimeMillis = minEvictableIdleTimeMillis;
            o.minIdle = minIdle;
            return o;
        }
    }
}
