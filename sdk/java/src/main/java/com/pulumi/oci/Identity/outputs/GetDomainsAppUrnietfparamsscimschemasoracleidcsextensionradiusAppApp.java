// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp {
    /**
     * @return If true, capture the client IP address from the RADIUS request packet. IP Address is used for auditing, policy-evaluation and country-code calculation.
     * 
     */
    private @Nullable Boolean captureClientIp;
    /**
     * @return This is the IP address of the RADIUS Client like Oracle Database server. It can be only IP address and not hostname.
     * 
     */
    private @Nullable String clientIp;
    /**
     * @return Vendor-specific identifier of the attribute in the RADIUS response that will contain the end-user&#39;s country code. This is an integer-value in the range 1 to 255
     * 
     */
    private @Nullable String countryCodeResponseAttributeId;
    /**
     * @return The name of the attribute that contains the Internet Protocol address of the end-user.
     * 
     */
    private @Nullable String endUserIpAttribute;
    /**
     * @return RADIUS attribute that RADIUS-enabled system uses to pass the group membership
     * 
     */
    private @Nullable String groupMembershipRadiusAttribute;
    /**
     * @return In a successful authentication response, Oracle Identity Cloud Service will pass user&#39;s group information restricted to groups persisted in this attribute, in the specified RADIUS attribute.
     * 
     */
    private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn> groupMembershipToReturns;
    /**
     * @return Configure the groupNameFormat based on vendor in order to pass it to RADIUS infra
     * 
     */
    private @Nullable String groupNameFormat;
    /**
     * @return Indicates to include groups in RADIUS response
     * 
     */
    private @Nullable Boolean includeGroupInResponse;
    /**
     * @return Indicates if password and OTP are passed in the same sign-in request or not.
     * 
     */
    private @Nullable Boolean passwordAndOtpTogether;
    /**
     * @return This is the port of RADIUS Proxy which RADIUS client will connect to.
     * 
     */
    private @Nullable String port;
    /**
     * @return ID used to identify a particular vendor.
     * 
     */
    private @Nullable String radiusVendorSpecificId;
    /**
     * @return Configure the responseFormat based on vendor in order to pass it to RADIUS infra
     * 
     */
    private @Nullable String responseFormat;
    /**
     * @return The delimiter used if group membership responseFormat is a delimited list instead of repeating attributes
     * 
     */
    private @Nullable String responseFormatDelimiter;
    /**
     * @return Secret key used to secure communication between RADIUS Proxy and RADIUS client
     * 
     */
    private @Nullable String secretKey;
    /**
     * @return Value consists of type of RADIUS App. Type can be Oracle Database, VPN etc
     * 
     */
    private @Nullable String typeOfRadiusApp;

    private GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp() {}
    /**
     * @return If true, capture the client IP address from the RADIUS request packet. IP Address is used for auditing, policy-evaluation and country-code calculation.
     * 
     */
    public Optional<Boolean> captureClientIp() {
        return Optional.ofNullable(this.captureClientIp);
    }
    /**
     * @return This is the IP address of the RADIUS Client like Oracle Database server. It can be only IP address and not hostname.
     * 
     */
    public Optional<String> clientIp() {
        return Optional.ofNullable(this.clientIp);
    }
    /**
     * @return Vendor-specific identifier of the attribute in the RADIUS response that will contain the end-user&#39;s country code. This is an integer-value in the range 1 to 255
     * 
     */
    public Optional<String> countryCodeResponseAttributeId() {
        return Optional.ofNullable(this.countryCodeResponseAttributeId);
    }
    /**
     * @return The name of the attribute that contains the Internet Protocol address of the end-user.
     * 
     */
    public Optional<String> endUserIpAttribute() {
        return Optional.ofNullable(this.endUserIpAttribute);
    }
    /**
     * @return RADIUS attribute that RADIUS-enabled system uses to pass the group membership
     * 
     */
    public Optional<String> groupMembershipRadiusAttribute() {
        return Optional.ofNullable(this.groupMembershipRadiusAttribute);
    }
    /**
     * @return In a successful authentication response, Oracle Identity Cloud Service will pass user&#39;s group information restricted to groups persisted in this attribute, in the specified RADIUS attribute.
     * 
     */
    public List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn> groupMembershipToReturns() {
        return this.groupMembershipToReturns == null ? List.of() : this.groupMembershipToReturns;
    }
    /**
     * @return Configure the groupNameFormat based on vendor in order to pass it to RADIUS infra
     * 
     */
    public Optional<String> groupNameFormat() {
        return Optional.ofNullable(this.groupNameFormat);
    }
    /**
     * @return Indicates to include groups in RADIUS response
     * 
     */
    public Optional<Boolean> includeGroupInResponse() {
        return Optional.ofNullable(this.includeGroupInResponse);
    }
    /**
     * @return Indicates if password and OTP are passed in the same sign-in request or not.
     * 
     */
    public Optional<Boolean> passwordAndOtpTogether() {
        return Optional.ofNullable(this.passwordAndOtpTogether);
    }
    /**
     * @return This is the port of RADIUS Proxy which RADIUS client will connect to.
     * 
     */
    public Optional<String> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return ID used to identify a particular vendor.
     * 
     */
    public Optional<String> radiusVendorSpecificId() {
        return Optional.ofNullable(this.radiusVendorSpecificId);
    }
    /**
     * @return Configure the responseFormat based on vendor in order to pass it to RADIUS infra
     * 
     */
    public Optional<String> responseFormat() {
        return Optional.ofNullable(this.responseFormat);
    }
    /**
     * @return The delimiter used if group membership responseFormat is a delimited list instead of repeating attributes
     * 
     */
    public Optional<String> responseFormatDelimiter() {
        return Optional.ofNullable(this.responseFormatDelimiter);
    }
    /**
     * @return Secret key used to secure communication between RADIUS Proxy and RADIUS client
     * 
     */
    public Optional<String> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }
    /**
     * @return Value consists of type of RADIUS App. Type can be Oracle Database, VPN etc
     * 
     */
    public Optional<String> typeOfRadiusApp() {
        return Optional.ofNullable(this.typeOfRadiusApp);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean captureClientIp;
        private @Nullable String clientIp;
        private @Nullable String countryCodeResponseAttributeId;
        private @Nullable String endUserIpAttribute;
        private @Nullable String groupMembershipRadiusAttribute;
        private @Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn> groupMembershipToReturns;
        private @Nullable String groupNameFormat;
        private @Nullable Boolean includeGroupInResponse;
        private @Nullable Boolean passwordAndOtpTogether;
        private @Nullable String port;
        private @Nullable String radiusVendorSpecificId;
        private @Nullable String responseFormat;
        private @Nullable String responseFormatDelimiter;
        private @Nullable String secretKey;
        private @Nullable String typeOfRadiusApp;
        public Builder() {}
        public Builder(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.captureClientIp = defaults.captureClientIp;
    	      this.clientIp = defaults.clientIp;
    	      this.countryCodeResponseAttributeId = defaults.countryCodeResponseAttributeId;
    	      this.endUserIpAttribute = defaults.endUserIpAttribute;
    	      this.groupMembershipRadiusAttribute = defaults.groupMembershipRadiusAttribute;
    	      this.groupMembershipToReturns = defaults.groupMembershipToReturns;
    	      this.groupNameFormat = defaults.groupNameFormat;
    	      this.includeGroupInResponse = defaults.includeGroupInResponse;
    	      this.passwordAndOtpTogether = defaults.passwordAndOtpTogether;
    	      this.port = defaults.port;
    	      this.radiusVendorSpecificId = defaults.radiusVendorSpecificId;
    	      this.responseFormat = defaults.responseFormat;
    	      this.responseFormatDelimiter = defaults.responseFormatDelimiter;
    	      this.secretKey = defaults.secretKey;
    	      this.typeOfRadiusApp = defaults.typeOfRadiusApp;
        }

        @CustomType.Setter
        public Builder captureClientIp(@Nullable Boolean captureClientIp) {
            this.captureClientIp = captureClientIp;
            return this;
        }
        @CustomType.Setter
        public Builder clientIp(@Nullable String clientIp) {
            this.clientIp = clientIp;
            return this;
        }
        @CustomType.Setter
        public Builder countryCodeResponseAttributeId(@Nullable String countryCodeResponseAttributeId) {
            this.countryCodeResponseAttributeId = countryCodeResponseAttributeId;
            return this;
        }
        @CustomType.Setter
        public Builder endUserIpAttribute(@Nullable String endUserIpAttribute) {
            this.endUserIpAttribute = endUserIpAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder groupMembershipRadiusAttribute(@Nullable String groupMembershipRadiusAttribute) {
            this.groupMembershipRadiusAttribute = groupMembershipRadiusAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder groupMembershipToReturns(@Nullable List<GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn> groupMembershipToReturns) {
            this.groupMembershipToReturns = groupMembershipToReturns;
            return this;
        }
        public Builder groupMembershipToReturns(GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn... groupMembershipToReturns) {
            return groupMembershipToReturns(List.of(groupMembershipToReturns));
        }
        @CustomType.Setter
        public Builder groupNameFormat(@Nullable String groupNameFormat) {
            this.groupNameFormat = groupNameFormat;
            return this;
        }
        @CustomType.Setter
        public Builder includeGroupInResponse(@Nullable Boolean includeGroupInResponse) {
            this.includeGroupInResponse = includeGroupInResponse;
            return this;
        }
        @CustomType.Setter
        public Builder passwordAndOtpTogether(@Nullable Boolean passwordAndOtpTogether) {
            this.passwordAndOtpTogether = passwordAndOtpTogether;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable String port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder radiusVendorSpecificId(@Nullable String radiusVendorSpecificId) {
            this.radiusVendorSpecificId = radiusVendorSpecificId;
            return this;
        }
        @CustomType.Setter
        public Builder responseFormat(@Nullable String responseFormat) {
            this.responseFormat = responseFormat;
            return this;
        }
        @CustomType.Setter
        public Builder responseFormatDelimiter(@Nullable String responseFormatDelimiter) {
            this.responseFormatDelimiter = responseFormatDelimiter;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(@Nullable String secretKey) {
            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder typeOfRadiusApp(@Nullable String typeOfRadiusApp) {
            this.typeOfRadiusApp = typeOfRadiusApp;
            return this;
        }
        public GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp build() {
            final var o = new GetDomainsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp();
            o.captureClientIp = captureClientIp;
            o.clientIp = clientIp;
            o.countryCodeResponseAttributeId = countryCodeResponseAttributeId;
            o.endUserIpAttribute = endUserIpAttribute;
            o.groupMembershipRadiusAttribute = groupMembershipRadiusAttribute;
            o.groupMembershipToReturns = groupMembershipToReturns;
            o.groupNameFormat = groupNameFormat;
            o.includeGroupInResponse = includeGroupInResponse;
            o.passwordAndOtpTogether = passwordAndOtpTogether;
            o.port = port;
            o.radiusVendorSpecificId = radiusVendorSpecificId;
            o.responseFormat = responseFormat;
            o.responseFormatDelimiter = responseFormatDelimiter;
            o.secretKey = secretKey;
            o.typeOfRadiusApp = typeOfRadiusApp;
            return o;
        }
    }
}
