// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsAppsAppAccount {
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
     * 
     */
    private @Nullable Boolean active;
    /**
     * @return The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
     * 
     */
    private @Nullable String name;
    /**
     * @return Owner identifier
     * 
     */
    private @Nullable String ownerId;
    /**
     * @return URI of the AppRole.
     * 
     */
    private @Nullable String ref;
    /**
     * @return ID of the AppRole.
     * 
     */
    private @Nullable String value;

    private GetDomainsAppsAppAccount() {}
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
     * 
     */
    public Optional<Boolean> active() {
        return Optional.ofNullable(this.active);
    }
    /**
     * @return The attribute represents the name of the attribute that will be used in the Security Assertion Markup Language (SAML) assertion
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Owner identifier
     * 
     */
    public Optional<String> ownerId() {
        return Optional.ofNullable(this.ownerId);
    }
    /**
     * @return URI of the AppRole.
     * 
     */
    public Optional<String> ref() {
        return Optional.ofNullable(this.ref);
    }
    /**
     * @return ID of the AppRole.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAppsAppAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean active;
        private @Nullable String name;
        private @Nullable String ownerId;
        private @Nullable String ref;
        private @Nullable String value;
        public Builder() {}
        public Builder(GetDomainsAppsAppAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.name = defaults.name;
    	      this.ownerId = defaults.ownerId;
    	      this.ref = defaults.ref;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder active(@Nullable Boolean active) {
            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ownerId(@Nullable String ownerId) {
            this.ownerId = ownerId;
            return this;
        }
        @CustomType.Setter
        public Builder ref(@Nullable String ref) {
            this.ref = ref;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        public GetDomainsAppsAppAccount build() {
            final var o = new GetDomainsAppsAppAccount();
            o.active = active;
            o.name = name;
            o.ownerId = ownerId;
            o.ref = ref;
            o.value = value;
            return o;
        }
    }
}
