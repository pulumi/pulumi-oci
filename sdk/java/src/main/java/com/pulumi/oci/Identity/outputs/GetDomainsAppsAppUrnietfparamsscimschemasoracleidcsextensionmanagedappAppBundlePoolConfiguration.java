// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration {
    /**
     * @return Maximum number of connector instances in the pool that are idle and active.
     * 
     */
    private @Nullable Integer maxIdle;
    /**
     * @return Maximum number of connector instances in the pool that are idle and active.
     * 
     */
    private @Nullable Integer maxObjects;
    /**
     * @return Maximum time (in milliseconds) to wait for a free connector instance to become available before failing.
     * 
     */
    private @Nullable Integer maxWait;
    /**
     * @return Minimum time (in milliseconds) to wait before evicting an idle conenctor instance from the pool.
     * 
     */
    private @Nullable Integer minEvictableIdleTimeMillis;
    /**
     * @return Minimum number of idle connector instances in the pool.
     * 
     */
    private @Nullable Integer minIdle;

    private GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration() {}
    /**
     * @return Maximum number of connector instances in the pool that are idle and active.
     * 
     */
    public Optional<Integer> maxIdle() {
        return Optional.ofNullable(this.maxIdle);
    }
    /**
     * @return Maximum number of connector instances in the pool that are idle and active.
     * 
     */
    public Optional<Integer> maxObjects() {
        return Optional.ofNullable(this.maxObjects);
    }
    /**
     * @return Maximum time (in milliseconds) to wait for a free connector instance to become available before failing.
     * 
     */
    public Optional<Integer> maxWait() {
        return Optional.ofNullable(this.maxWait);
    }
    /**
     * @return Minimum time (in milliseconds) to wait before evicting an idle conenctor instance from the pool.
     * 
     */
    public Optional<Integer> minEvictableIdleTimeMillis() {
        return Optional.ofNullable(this.minEvictableIdleTimeMillis);
    }
    /**
     * @return Minimum number of idle connector instances in the pool.
     * 
     */
    public Optional<Integer> minIdle() {
        return Optional.ofNullable(this.minIdle);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer maxIdle;
        private @Nullable Integer maxObjects;
        private @Nullable Integer maxWait;
        private @Nullable Integer minEvictableIdleTimeMillis;
        private @Nullable Integer minIdle;
        public Builder() {}
        public Builder(GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxIdle = defaults.maxIdle;
    	      this.maxObjects = defaults.maxObjects;
    	      this.maxWait = defaults.maxWait;
    	      this.minEvictableIdleTimeMillis = defaults.minEvictableIdleTimeMillis;
    	      this.minIdle = defaults.minIdle;
        }

        @CustomType.Setter
        public Builder maxIdle(@Nullable Integer maxIdle) {
            this.maxIdle = maxIdle;
            return this;
        }
        @CustomType.Setter
        public Builder maxObjects(@Nullable Integer maxObjects) {
            this.maxObjects = maxObjects;
            return this;
        }
        @CustomType.Setter
        public Builder maxWait(@Nullable Integer maxWait) {
            this.maxWait = maxWait;
            return this;
        }
        @CustomType.Setter
        public Builder minEvictableIdleTimeMillis(@Nullable Integer minEvictableIdleTimeMillis) {
            this.minEvictableIdleTimeMillis = minEvictableIdleTimeMillis;
            return this;
        }
        @CustomType.Setter
        public Builder minIdle(@Nullable Integer minIdle) {
            this.minIdle = minIdle;
            return this;
        }
        public GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration build() {
            final var o = new GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionmanagedappAppBundlePoolConfiguration();
            o.maxIdle = maxIdle;
            o.maxObjects = maxObjects;
            o.maxWait = maxWait;
            o.minEvictableIdleTimeMillis = minEvictableIdleTimeMillis;
            o.minIdle = minIdle;
            return o;
        }
    }
}
