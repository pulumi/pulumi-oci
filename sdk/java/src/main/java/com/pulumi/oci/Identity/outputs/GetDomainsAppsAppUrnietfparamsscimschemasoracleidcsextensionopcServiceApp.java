// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionopcServiceApp {
    /**
     * @return Current Federation Mode
     * 
     */
    private String currentFederationMode;
    /**
     * @return Current Synchronization Mode
     * 
     */
    private String currentSynchronizationMode;
    /**
     * @return If true, indicates that enablement is in progress started but not completed
     * 
     */
    private Boolean enablingNextFedSyncModes;
    /**
     * @return Next Federation Mode
     * 
     */
    private String nextFederationMode;
    /**
     * @return Next Synchronization Mode
     * 
     */
    private String nextSynchronizationMode;
    /**
     * @return This value identifies the OPC region in which the service is running.
     * 
     */
    private String region;
    /**
     * @return This value specifies the unique identifier assigned to an instance of an Oracle Public Cloud service app.
     * 
     */
    private String serviceInstanceIdentifier;

    private GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionopcServiceApp() {}
    /**
     * @return Current Federation Mode
     * 
     */
    public String currentFederationMode() {
        return this.currentFederationMode;
    }
    /**
     * @return Current Synchronization Mode
     * 
     */
    public String currentSynchronizationMode() {
        return this.currentSynchronizationMode;
    }
    /**
     * @return If true, indicates that enablement is in progress started but not completed
     * 
     */
    public Boolean enablingNextFedSyncModes() {
        return this.enablingNextFedSyncModes;
    }
    /**
     * @return Next Federation Mode
     * 
     */
    public String nextFederationMode() {
        return this.nextFederationMode;
    }
    /**
     * @return Next Synchronization Mode
     * 
     */
    public String nextSynchronizationMode() {
        return this.nextSynchronizationMode;
    }
    /**
     * @return This value identifies the OPC region in which the service is running.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return This value specifies the unique identifier assigned to an instance of an Oracle Public Cloud service app.
     * 
     */
    public String serviceInstanceIdentifier() {
        return this.serviceInstanceIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionopcServiceApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currentFederationMode;
        private String currentSynchronizationMode;
        private Boolean enablingNextFedSyncModes;
        private String nextFederationMode;
        private String nextSynchronizationMode;
        private String region;
        private String serviceInstanceIdentifier;
        public Builder() {}
        public Builder(GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionopcServiceApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentFederationMode = defaults.currentFederationMode;
    	      this.currentSynchronizationMode = defaults.currentSynchronizationMode;
    	      this.enablingNextFedSyncModes = defaults.enablingNextFedSyncModes;
    	      this.nextFederationMode = defaults.nextFederationMode;
    	      this.nextSynchronizationMode = defaults.nextSynchronizationMode;
    	      this.region = defaults.region;
    	      this.serviceInstanceIdentifier = defaults.serviceInstanceIdentifier;
        }

        @CustomType.Setter
        public Builder currentFederationMode(String currentFederationMode) {
            this.currentFederationMode = Objects.requireNonNull(currentFederationMode);
            return this;
        }
        @CustomType.Setter
        public Builder currentSynchronizationMode(String currentSynchronizationMode) {
            this.currentSynchronizationMode = Objects.requireNonNull(currentSynchronizationMode);
            return this;
        }
        @CustomType.Setter
        public Builder enablingNextFedSyncModes(Boolean enablingNextFedSyncModes) {
            this.enablingNextFedSyncModes = Objects.requireNonNull(enablingNextFedSyncModes);
            return this;
        }
        @CustomType.Setter
        public Builder nextFederationMode(String nextFederationMode) {
            this.nextFederationMode = Objects.requireNonNull(nextFederationMode);
            return this;
        }
        @CustomType.Setter
        public Builder nextSynchronizationMode(String nextSynchronizationMode) {
            this.nextSynchronizationMode = Objects.requireNonNull(nextSynchronizationMode);
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        @CustomType.Setter
        public Builder serviceInstanceIdentifier(String serviceInstanceIdentifier) {
            this.serviceInstanceIdentifier = Objects.requireNonNull(serviceInstanceIdentifier);
            return this;
        }
        public GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionopcServiceApp build() {
            final var _resultValue = new GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionopcServiceApp();
            _resultValue.currentFederationMode = currentFederationMode;
            _resultValue.currentSynchronizationMode = currentSynchronizationMode;
            _resultValue.enablingNextFedSyncModes = enablingNextFedSyncModes;
            _resultValue.nextFederationMode = nextFederationMode;
            _resultValue.nextSynchronizationMode = nextSynchronizationMode;
            _resultValue.region = region;
            _resultValue.serviceInstanceIdentifier = serviceInstanceIdentifier;
            return _resultValue;
        }
    }
}
