// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp {
    /**
     * @return If true, capture the client IP address from the RADIUS request packet. IP Address is used for auditing, policy-evaluation and country-code calculation.
     * 
     */
    private Boolean captureClientIp;
    /**
     * @return This is the IP address of the RADIUS Client like Oracle Database server. It can be only IP address and not hostname.
     * 
     */
    private String clientIp;
    /**
     * @return Vendor-specific identifier of the attribute in the RADIUS response that will contain the end-user&#39;s country code. This is an integer-value in the range 1 to 255
     * 
     */
    private String countryCodeResponseAttributeId;
    /**
     * @return The name of the attribute that contains the Internet Protocol address of the end-user.
     * 
     */
    private String endUserIpAttribute;
    /**
     * @return RADIUS attribute that RADIUS-enabled system uses to pass the group membership
     * 
     */
    private String groupMembershipRadiusAttribute;
    /**
     * @return In a successful authentication response, Oracle Identity Cloud Service will pass user&#39;s group information restricted to groups persisted in this attribute, in the specified RADIUS attribute.
     * 
     */
    private List<GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn> groupMembershipToReturns;
    /**
     * @return Configure the groupNameFormat based on vendor in order to pass it to RADIUS infra
     * 
     */
    private String groupNameFormat;
    /**
     * @return Indicates to include groups in RADIUS response
     * 
     */
    private Boolean includeGroupInResponse;
    /**
     * @return Indicates if password and OTP are passed in the same sign-in request or not.
     * 
     */
    private Boolean passwordAndOtpTogether;
    /**
     * @return This is the port of RADIUS Proxy which RADIUS client will connect to.
     * 
     */
    private String port;
    /**
     * @return ID used to identify a particular vendor.
     * 
     */
    private String radiusVendorSpecificId;
    /**
     * @return Configure the responseFormat based on vendor in order to pass it to RADIUS infra
     * 
     */
    private String responseFormat;
    /**
     * @return The delimiter used if group membership responseFormat is a delimited list instead of repeating attributes
     * 
     */
    private String responseFormatDelimiter;
    /**
     * @return Secret key used to secure communication between RADIUS Proxy and RADIUS client
     * 
     */
    private String secretKey;
    /**
     * @return Value consists of type of RADIUS App. Type can be Oracle Database, VPN etc
     * 
     */
    private String typeOfRadiusApp;

    private GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp() {}
    /**
     * @return If true, capture the client IP address from the RADIUS request packet. IP Address is used for auditing, policy-evaluation and country-code calculation.
     * 
     */
    public Boolean captureClientIp() {
        return this.captureClientIp;
    }
    /**
     * @return This is the IP address of the RADIUS Client like Oracle Database server. It can be only IP address and not hostname.
     * 
     */
    public String clientIp() {
        return this.clientIp;
    }
    /**
     * @return Vendor-specific identifier of the attribute in the RADIUS response that will contain the end-user&#39;s country code. This is an integer-value in the range 1 to 255
     * 
     */
    public String countryCodeResponseAttributeId() {
        return this.countryCodeResponseAttributeId;
    }
    /**
     * @return The name of the attribute that contains the Internet Protocol address of the end-user.
     * 
     */
    public String endUserIpAttribute() {
        return this.endUserIpAttribute;
    }
    /**
     * @return RADIUS attribute that RADIUS-enabled system uses to pass the group membership
     * 
     */
    public String groupMembershipRadiusAttribute() {
        return this.groupMembershipRadiusAttribute;
    }
    /**
     * @return In a successful authentication response, Oracle Identity Cloud Service will pass user&#39;s group information restricted to groups persisted in this attribute, in the specified RADIUS attribute.
     * 
     */
    public List<GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn> groupMembershipToReturns() {
        return this.groupMembershipToReturns;
    }
    /**
     * @return Configure the groupNameFormat based on vendor in order to pass it to RADIUS infra
     * 
     */
    public String groupNameFormat() {
        return this.groupNameFormat;
    }
    /**
     * @return Indicates to include groups in RADIUS response
     * 
     */
    public Boolean includeGroupInResponse() {
        return this.includeGroupInResponse;
    }
    /**
     * @return Indicates if password and OTP are passed in the same sign-in request or not.
     * 
     */
    public Boolean passwordAndOtpTogether() {
        return this.passwordAndOtpTogether;
    }
    /**
     * @return This is the port of RADIUS Proxy which RADIUS client will connect to.
     * 
     */
    public String port() {
        return this.port;
    }
    /**
     * @return ID used to identify a particular vendor.
     * 
     */
    public String radiusVendorSpecificId() {
        return this.radiusVendorSpecificId;
    }
    /**
     * @return Configure the responseFormat based on vendor in order to pass it to RADIUS infra
     * 
     */
    public String responseFormat() {
        return this.responseFormat;
    }
    /**
     * @return The delimiter used if group membership responseFormat is a delimited list instead of repeating attributes
     * 
     */
    public String responseFormatDelimiter() {
        return this.responseFormatDelimiter;
    }
    /**
     * @return Secret key used to secure communication between RADIUS Proxy and RADIUS client
     * 
     */
    public String secretKey() {
        return this.secretKey;
    }
    /**
     * @return Value consists of type of RADIUS App. Type can be Oracle Database, VPN etc
     * 
     */
    public String typeOfRadiusApp() {
        return this.typeOfRadiusApp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean captureClientIp;
        private String clientIp;
        private String countryCodeResponseAttributeId;
        private String endUserIpAttribute;
        private String groupMembershipRadiusAttribute;
        private List<GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn> groupMembershipToReturns;
        private String groupNameFormat;
        private Boolean includeGroupInResponse;
        private Boolean passwordAndOtpTogether;
        private String port;
        private String radiusVendorSpecificId;
        private String responseFormat;
        private String responseFormatDelimiter;
        private String secretKey;
        private String typeOfRadiusApp;
        public Builder() {}
        public Builder(GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.captureClientIp = defaults.captureClientIp;
    	      this.clientIp = defaults.clientIp;
    	      this.countryCodeResponseAttributeId = defaults.countryCodeResponseAttributeId;
    	      this.endUserIpAttribute = defaults.endUserIpAttribute;
    	      this.groupMembershipRadiusAttribute = defaults.groupMembershipRadiusAttribute;
    	      this.groupMembershipToReturns = defaults.groupMembershipToReturns;
    	      this.groupNameFormat = defaults.groupNameFormat;
    	      this.includeGroupInResponse = defaults.includeGroupInResponse;
    	      this.passwordAndOtpTogether = defaults.passwordAndOtpTogether;
    	      this.port = defaults.port;
    	      this.radiusVendorSpecificId = defaults.radiusVendorSpecificId;
    	      this.responseFormat = defaults.responseFormat;
    	      this.responseFormatDelimiter = defaults.responseFormatDelimiter;
    	      this.secretKey = defaults.secretKey;
    	      this.typeOfRadiusApp = defaults.typeOfRadiusApp;
        }

        @CustomType.Setter
        public Builder captureClientIp(Boolean captureClientIp) {
            if (captureClientIp == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "captureClientIp");
            }
            this.captureClientIp = captureClientIp;
            return this;
        }
        @CustomType.Setter
        public Builder clientIp(String clientIp) {
            if (clientIp == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "clientIp");
            }
            this.clientIp = clientIp;
            return this;
        }
        @CustomType.Setter
        public Builder countryCodeResponseAttributeId(String countryCodeResponseAttributeId) {
            if (countryCodeResponseAttributeId == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "countryCodeResponseAttributeId");
            }
            this.countryCodeResponseAttributeId = countryCodeResponseAttributeId;
            return this;
        }
        @CustomType.Setter
        public Builder endUserIpAttribute(String endUserIpAttribute) {
            if (endUserIpAttribute == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "endUserIpAttribute");
            }
            this.endUserIpAttribute = endUserIpAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder groupMembershipRadiusAttribute(String groupMembershipRadiusAttribute) {
            if (groupMembershipRadiusAttribute == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "groupMembershipRadiusAttribute");
            }
            this.groupMembershipRadiusAttribute = groupMembershipRadiusAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder groupMembershipToReturns(List<GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn> groupMembershipToReturns) {
            if (groupMembershipToReturns == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "groupMembershipToReturns");
            }
            this.groupMembershipToReturns = groupMembershipToReturns;
            return this;
        }
        public Builder groupMembershipToReturns(GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppAppGroupMembershipToReturn... groupMembershipToReturns) {
            return groupMembershipToReturns(List.of(groupMembershipToReturns));
        }
        @CustomType.Setter
        public Builder groupNameFormat(String groupNameFormat) {
            if (groupNameFormat == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "groupNameFormat");
            }
            this.groupNameFormat = groupNameFormat;
            return this;
        }
        @CustomType.Setter
        public Builder includeGroupInResponse(Boolean includeGroupInResponse) {
            if (includeGroupInResponse == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "includeGroupInResponse");
            }
            this.includeGroupInResponse = includeGroupInResponse;
            return this;
        }
        @CustomType.Setter
        public Builder passwordAndOtpTogether(Boolean passwordAndOtpTogether) {
            if (passwordAndOtpTogether == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "passwordAndOtpTogether");
            }
            this.passwordAndOtpTogether = passwordAndOtpTogether;
            return this;
        }
        @CustomType.Setter
        public Builder port(String port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder radiusVendorSpecificId(String radiusVendorSpecificId) {
            if (radiusVendorSpecificId == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "radiusVendorSpecificId");
            }
            this.radiusVendorSpecificId = radiusVendorSpecificId;
            return this;
        }
        @CustomType.Setter
        public Builder responseFormat(String responseFormat) {
            if (responseFormat == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "responseFormat");
            }
            this.responseFormat = responseFormat;
            return this;
        }
        @CustomType.Setter
        public Builder responseFormatDelimiter(String responseFormatDelimiter) {
            if (responseFormatDelimiter == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "responseFormatDelimiter");
            }
            this.responseFormatDelimiter = responseFormatDelimiter;
            return this;
        }
        @CustomType.Setter
        public Builder secretKey(String secretKey) {
            if (secretKey == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "secretKey");
            }
            this.secretKey = secretKey;
            return this;
        }
        @CustomType.Setter
        public Builder typeOfRadiusApp(String typeOfRadiusApp) {
            if (typeOfRadiusApp == null) {
              throw new MissingRequiredPropertyException("GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp", "typeOfRadiusApp");
            }
            this.typeOfRadiusApp = typeOfRadiusApp;
            return this;
        }
        public GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp build() {
            final var _resultValue = new GetDomainsAppsAppUrnietfparamsscimschemasoracleidcsextensionradiusAppApp();
            _resultValue.captureClientIp = captureClientIp;
            _resultValue.clientIp = clientIp;
            _resultValue.countryCodeResponseAttributeId = countryCodeResponseAttributeId;
            _resultValue.endUserIpAttribute = endUserIpAttribute;
            _resultValue.groupMembershipRadiusAttribute = groupMembershipRadiusAttribute;
            _resultValue.groupMembershipToReturns = groupMembershipToReturns;
            _resultValue.groupNameFormat = groupNameFormat;
            _resultValue.includeGroupInResponse = includeGroupInResponse;
            _resultValue.passwordAndOtpTogether = passwordAndOtpTogether;
            _resultValue.port = port;
            _resultValue.radiusVendorSpecificId = radiusVendorSpecificId;
            _resultValue.responseFormat = responseFormat;
            _resultValue.responseFormatDelimiter = responseFormatDelimiter;
            _resultValue.secretKey = secretKey;
            _resultValue.typeOfRadiusApp = typeOfRadiusApp;
            return _resultValue;
        }
    }
}
