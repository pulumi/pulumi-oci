// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingBypassCodeSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingClientAppSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingCompliancePolicy;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingEmailSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingEndpointRestriction;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingIdentityStoreSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingNotificationSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingTag;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingThirdPartyFactor;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingTotpSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsAuthenticationFactorSettingResult {
    private @Nullable List<String> attributeSets;
    private @Nullable String attributes;
    private @Nullable String authenticationFactorSettingId;
    private @Nullable String authorization;
    /**
     * @return If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
     * 
     */
    private Boolean autoEnrollEmailFactorDisabled;
    /**
     * @return If true, indicates that Bypass Code is enabled for authentication
     * 
     */
    private Boolean bypassCodeEnabled;
    /**
     * @return Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingBypassCodeSetting> bypassCodeSettings;
    /**
     * @return Settings related to compliance, Personal Identification Number (PIN) policy, and so on
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingClientAppSetting> clientAppSettings;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private String compartmentOcid;
    /**
     * @return Compliance Policy that defines actions to be taken when a condition is violated
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingCompliancePolicy> compliancePolicies;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private Boolean deleteInProgress;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private String domainOcid;
    /**
     * @return If true, indicates that the EMAIL channel is enabled for authentication
     * 
     */
    private Boolean emailEnabled;
    /**
     * @return Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingEmailSetting> emailSettings;
    /**
     * @return Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingEndpointRestriction> endpointRestrictions;
    /**
     * @return If true, indicates that the Fido Authenticator channels are enabled for authentication
     * 
     */
    private Boolean fidoAuthenticatorEnabled;
    /**
     * @return If true, indicates that &#39;Show backup factor(s)&#39; button will be hidden during authentication
     * 
     */
    private Boolean hideBackupFactorEnabled;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingIdcsCreatedBy> idcsCreatedBies;
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private List<String> idcsPreventedOperations;
    /**
     * @return Settings related to the use of a user&#39;s profile details from the identity store
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingIdentityStoreSetting> identityStoreSettings;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingMeta> metas;
    /**
     * @return Specifies the category of people for whom Multi-Factor Authentication is enabled. This is a readOnly attribute which reflects the value of mfaEnabledCategory attribute in SsoSettings
     * 
     */
    private String mfaEnabledCategory;
    /**
     * @return Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
     * 
     */
    private String mfaEnrollmentType;
    /**
     * @return Settings related to the Mobile App Notification channel, such as pull
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingNotificationSetting> notificationSettings;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private String ocid;
    /**
     * @return If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
     * 
     */
    private Boolean phoneCallEnabled;
    /**
     * @return If true, indicates that the Mobile App Push Notification channel is enabled for authentication
     * 
     */
    private Boolean pushEnabled;
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private List<String> schemas;
    /**
     * @return If true, indicates that Security Questions are enabled for authentication
     * 
     */
    private Boolean securityQuestionsEnabled;
    /**
     * @return If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
     * 
     */
    private Boolean smsEnabled;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private String tenancyOcid;
    /**
     * @return Settings related to third-party factor
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingThirdPartyFactor> thirdPartyFactors;
    /**
     * @return If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
     * 
     */
    private Boolean totpEnabled;
    /**
     * @return Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingTotpSetting> totpSettings;
    /**
     * @return This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
    /**
     * @return This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
     * 
     */
    private List<GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
    /**
     * @return Factors for which enrollment should be blocked for End User
     * 
     */
    private List<String> userEnrollmentDisabledFactors;
    /**
     * @return If true, indicates that the Yubico OTP is enabled for authentication
     * 
     */
    private Boolean yubicoOtpEnabled;

    private GetDomainsAuthenticationFactorSettingResult() {}
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    public Optional<String> authenticationFactorSettingId() {
        return Optional.ofNullable(this.authenticationFactorSettingId);
    }
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
     * 
     */
    public Boolean autoEnrollEmailFactorDisabled() {
        return this.autoEnrollEmailFactorDisabled;
    }
    /**
     * @return If true, indicates that Bypass Code is enabled for authentication
     * 
     */
    public Boolean bypassCodeEnabled() {
        return this.bypassCodeEnabled;
    }
    /**
     * @return Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingBypassCodeSetting> bypassCodeSettings() {
        return this.bypassCodeSettings;
    }
    /**
     * @return Settings related to compliance, Personal Identification Number (PIN) policy, and so on
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingClientAppSetting> clientAppSettings() {
        return this.clientAppSettings;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public String compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * @return Compliance Policy that defines actions to be taken when a condition is violated
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingCompliancePolicy> compliancePolicies() {
        return this.compliancePolicies;
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Boolean deleteInProgress() {
        return this.deleteInProgress;
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public String domainOcid() {
        return this.domainOcid;
    }
    /**
     * @return If true, indicates that the EMAIL channel is enabled for authentication
     * 
     */
    public Boolean emailEnabled() {
        return this.emailEnabled;
    }
    /**
     * @return Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingEmailSetting> emailSettings() {
        return this.emailSettings;
    }
    /**
     * @return Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingEndpointRestriction> endpointRestrictions() {
        return this.endpointRestrictions;
    }
    /**
     * @return If true, indicates that the Fido Authenticator channels are enabled for authentication
     * 
     */
    public Boolean fidoAuthenticatorEnabled() {
        return this.fidoAuthenticatorEnabled;
    }
    /**
     * @return If true, indicates that &#39;Show backup factor(s)&#39; button will be hidden during authentication
     * 
     */
    public Boolean hideBackupFactorEnabled() {
        return this.hideBackupFactorEnabled;
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public String idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * @return Settings related to the use of a user&#39;s profile details from the identity store
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingIdentityStoreSetting> identityStoreSettings() {
        return this.identityStoreSettings;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingMeta> metas() {
        return this.metas;
    }
    /**
     * @return Specifies the category of people for whom Multi-Factor Authentication is enabled. This is a readOnly attribute which reflects the value of mfaEnabledCategory attribute in SsoSettings
     * 
     */
    public String mfaEnabledCategory() {
        return this.mfaEnabledCategory;
    }
    /**
     * @return Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
     * 
     */
    public String mfaEnrollmentType() {
        return this.mfaEnrollmentType;
    }
    /**
     * @return Settings related to the Mobile App Notification channel, such as pull
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingNotificationSetting> notificationSettings() {
        return this.notificationSettings;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
     * 
     */
    public Boolean phoneCallEnabled() {
        return this.phoneCallEnabled;
    }
    /**
     * @return If true, indicates that the Mobile App Push Notification channel is enabled for authentication
     * 
     */
    public Boolean pushEnabled() {
        return this.pushEnabled;
    }
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas;
    }
    /**
     * @return If true, indicates that Security Questions are enabled for authentication
     * 
     */
    public Boolean securityQuestionsEnabled() {
        return this.securityQuestionsEnabled;
    }
    /**
     * @return If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
     * 
     */
    public Boolean smsEnabled() {
        return this.smsEnabled;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingTag> tags() {
        return this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public String tenancyOcid() {
        return this.tenancyOcid;
    }
    /**
     * @return Settings related to third-party factor
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingThirdPartyFactor> thirdPartyFactors() {
        return this.thirdPartyFactors;
    }
    /**
     * @return If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
     * 
     */
    public Boolean totpEnabled() {
        return this.totpEnabled;
    }
    /**
     * @return Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingTotpSetting> totpSettings() {
        return this.totpSettings;
    }
    /**
     * @return This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings() {
        return this.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
    }
    /**
     * @return This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings() {
        return this.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
    }
    /**
     * @return Factors for which enrollment should be blocked for End User
     * 
     */
    public List<String> userEnrollmentDisabledFactors() {
        return this.userEnrollmentDisabledFactors;
    }
    /**
     * @return If true, indicates that the Yubico OTP is enabled for authentication
     * 
     */
    public Boolean yubicoOtpEnabled() {
        return this.yubicoOtpEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAuthenticationFactorSettingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private @Nullable String authenticationFactorSettingId;
        private @Nullable String authorization;
        private Boolean autoEnrollEmailFactorDisabled;
        private Boolean bypassCodeEnabled;
        private List<GetDomainsAuthenticationFactorSettingBypassCodeSetting> bypassCodeSettings;
        private List<GetDomainsAuthenticationFactorSettingClientAppSetting> clientAppSettings;
        private String compartmentOcid;
        private List<GetDomainsAuthenticationFactorSettingCompliancePolicy> compliancePolicies;
        private Boolean deleteInProgress;
        private String domainOcid;
        private Boolean emailEnabled;
        private List<GetDomainsAuthenticationFactorSettingEmailSetting> emailSettings;
        private List<GetDomainsAuthenticationFactorSettingEndpointRestriction> endpointRestrictions;
        private Boolean fidoAuthenticatorEnabled;
        private Boolean hideBackupFactorEnabled;
        private String id;
        private List<GetDomainsAuthenticationFactorSettingIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private List<GetDomainsAuthenticationFactorSettingIdcsLastModifiedBy> idcsLastModifiedBies;
        private String idcsLastUpgradedInRelease;
        private List<String> idcsPreventedOperations;
        private List<GetDomainsAuthenticationFactorSettingIdentityStoreSetting> identityStoreSettings;
        private List<GetDomainsAuthenticationFactorSettingMeta> metas;
        private String mfaEnabledCategory;
        private String mfaEnrollmentType;
        private List<GetDomainsAuthenticationFactorSettingNotificationSetting> notificationSettings;
        private String ocid;
        private Boolean phoneCallEnabled;
        private Boolean pushEnabled;
        private @Nullable String resourceTypeSchemaVersion;
        private List<String> schemas;
        private Boolean securityQuestionsEnabled;
        private Boolean smsEnabled;
        private List<GetDomainsAuthenticationFactorSettingTag> tags;
        private String tenancyOcid;
        private List<GetDomainsAuthenticationFactorSettingThirdPartyFactor> thirdPartyFactors;
        private Boolean totpEnabled;
        private List<GetDomainsAuthenticationFactorSettingTotpSetting> totpSettings;
        private List<GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
        private List<GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
        private List<String> userEnrollmentDisabledFactors;
        private Boolean yubicoOtpEnabled;
        public Builder() {}
        public Builder(GetDomainsAuthenticationFactorSettingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authenticationFactorSettingId = defaults.authenticationFactorSettingId;
    	      this.authorization = defaults.authorization;
    	      this.autoEnrollEmailFactorDisabled = defaults.autoEnrollEmailFactorDisabled;
    	      this.bypassCodeEnabled = defaults.bypassCodeEnabled;
    	      this.bypassCodeSettings = defaults.bypassCodeSettings;
    	      this.clientAppSettings = defaults.clientAppSettings;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.compliancePolicies = defaults.compliancePolicies;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.domainOcid = defaults.domainOcid;
    	      this.emailEnabled = defaults.emailEnabled;
    	      this.emailSettings = defaults.emailSettings;
    	      this.endpointRestrictions = defaults.endpointRestrictions;
    	      this.fidoAuthenticatorEnabled = defaults.fidoAuthenticatorEnabled;
    	      this.hideBackupFactorEnabled = defaults.hideBackupFactorEnabled;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.identityStoreSettings = defaults.identityStoreSettings;
    	      this.metas = defaults.metas;
    	      this.mfaEnabledCategory = defaults.mfaEnabledCategory;
    	      this.mfaEnrollmentType = defaults.mfaEnrollmentType;
    	      this.notificationSettings = defaults.notificationSettings;
    	      this.ocid = defaults.ocid;
    	      this.phoneCallEnabled = defaults.phoneCallEnabled;
    	      this.pushEnabled = defaults.pushEnabled;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.schemas = defaults.schemas;
    	      this.securityQuestionsEnabled = defaults.securityQuestionsEnabled;
    	      this.smsEnabled = defaults.smsEnabled;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.thirdPartyFactors = defaults.thirdPartyFactors;
    	      this.totpEnabled = defaults.totpEnabled;
    	      this.totpSettings = defaults.totpSettings;
    	      this.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings = defaults.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
    	      this.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings = defaults.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
    	      this.userEnrollmentDisabledFactors = defaults.userEnrollmentDisabledFactors;
    	      this.yubicoOtpEnabled = defaults.yubicoOtpEnabled;
        }

        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {
            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationFactorSettingId(@Nullable String authenticationFactorSettingId) {
            this.authenticationFactorSettingId = authenticationFactorSettingId;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder autoEnrollEmailFactorDisabled(Boolean autoEnrollEmailFactorDisabled) {
            this.autoEnrollEmailFactorDisabled = Objects.requireNonNull(autoEnrollEmailFactorDisabled);
            return this;
        }
        @CustomType.Setter
        public Builder bypassCodeEnabled(Boolean bypassCodeEnabled) {
            this.bypassCodeEnabled = Objects.requireNonNull(bypassCodeEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder bypassCodeSettings(List<GetDomainsAuthenticationFactorSettingBypassCodeSetting> bypassCodeSettings) {
            this.bypassCodeSettings = Objects.requireNonNull(bypassCodeSettings);
            return this;
        }
        public Builder bypassCodeSettings(GetDomainsAuthenticationFactorSettingBypassCodeSetting... bypassCodeSettings) {
            return bypassCodeSettings(List.of(bypassCodeSettings));
        }
        @CustomType.Setter
        public Builder clientAppSettings(List<GetDomainsAuthenticationFactorSettingClientAppSetting> clientAppSettings) {
            this.clientAppSettings = Objects.requireNonNull(clientAppSettings);
            return this;
        }
        public Builder clientAppSettings(GetDomainsAuthenticationFactorSettingClientAppSetting... clientAppSettings) {
            return clientAppSettings(List.of(clientAppSettings));
        }
        @CustomType.Setter
        public Builder compartmentOcid(String compartmentOcid) {
            this.compartmentOcid = Objects.requireNonNull(compartmentOcid);
            return this;
        }
        @CustomType.Setter
        public Builder compliancePolicies(List<GetDomainsAuthenticationFactorSettingCompliancePolicy> compliancePolicies) {
            this.compliancePolicies = Objects.requireNonNull(compliancePolicies);
            return this;
        }
        public Builder compliancePolicies(GetDomainsAuthenticationFactorSettingCompliancePolicy... compliancePolicies) {
            return compliancePolicies(List.of(compliancePolicies));
        }
        @CustomType.Setter
        public Builder deleteInProgress(Boolean deleteInProgress) {
            this.deleteInProgress = Objects.requireNonNull(deleteInProgress);
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(String domainOcid) {
            this.domainOcid = Objects.requireNonNull(domainOcid);
            return this;
        }
        @CustomType.Setter
        public Builder emailEnabled(Boolean emailEnabled) {
            this.emailEnabled = Objects.requireNonNull(emailEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder emailSettings(List<GetDomainsAuthenticationFactorSettingEmailSetting> emailSettings) {
            this.emailSettings = Objects.requireNonNull(emailSettings);
            return this;
        }
        public Builder emailSettings(GetDomainsAuthenticationFactorSettingEmailSetting... emailSettings) {
            return emailSettings(List.of(emailSettings));
        }
        @CustomType.Setter
        public Builder endpointRestrictions(List<GetDomainsAuthenticationFactorSettingEndpointRestriction> endpointRestrictions) {
            this.endpointRestrictions = Objects.requireNonNull(endpointRestrictions);
            return this;
        }
        public Builder endpointRestrictions(GetDomainsAuthenticationFactorSettingEndpointRestriction... endpointRestrictions) {
            return endpointRestrictions(List.of(endpointRestrictions));
        }
        @CustomType.Setter
        public Builder fidoAuthenticatorEnabled(Boolean fidoAuthenticatorEnabled) {
            this.fidoAuthenticatorEnabled = Objects.requireNonNull(fidoAuthenticatorEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder hideBackupFactorEnabled(Boolean hideBackupFactorEnabled) {
            this.hideBackupFactorEnabled = Objects.requireNonNull(hideBackupFactorEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(List<GetDomainsAuthenticationFactorSettingIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = Objects.requireNonNull(idcsCreatedBies);
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsAuthenticationFactorSettingIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            this.idcsEndpoint = Objects.requireNonNull(idcsEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(List<GetDomainsAuthenticationFactorSettingIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = Objects.requireNonNull(idcsLastModifiedBies);
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsAuthenticationFactorSettingIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = Objects.requireNonNull(idcsLastUpgradedInRelease);
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = Objects.requireNonNull(idcsPreventedOperations);
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder identityStoreSettings(List<GetDomainsAuthenticationFactorSettingIdentityStoreSetting> identityStoreSettings) {
            this.identityStoreSettings = Objects.requireNonNull(identityStoreSettings);
            return this;
        }
        public Builder identityStoreSettings(GetDomainsAuthenticationFactorSettingIdentityStoreSetting... identityStoreSettings) {
            return identityStoreSettings(List.of(identityStoreSettings));
        }
        @CustomType.Setter
        public Builder metas(List<GetDomainsAuthenticationFactorSettingMeta> metas) {
            this.metas = Objects.requireNonNull(metas);
            return this;
        }
        public Builder metas(GetDomainsAuthenticationFactorSettingMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder mfaEnabledCategory(String mfaEnabledCategory) {
            this.mfaEnabledCategory = Objects.requireNonNull(mfaEnabledCategory);
            return this;
        }
        @CustomType.Setter
        public Builder mfaEnrollmentType(String mfaEnrollmentType) {
            this.mfaEnrollmentType = Objects.requireNonNull(mfaEnrollmentType);
            return this;
        }
        @CustomType.Setter
        public Builder notificationSettings(List<GetDomainsAuthenticationFactorSettingNotificationSetting> notificationSettings) {
            this.notificationSettings = Objects.requireNonNull(notificationSettings);
            return this;
        }
        public Builder notificationSettings(GetDomainsAuthenticationFactorSettingNotificationSetting... notificationSettings) {
            return notificationSettings(List.of(notificationSettings));
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            this.ocid = Objects.requireNonNull(ocid);
            return this;
        }
        @CustomType.Setter
        public Builder phoneCallEnabled(Boolean phoneCallEnabled) {
            this.phoneCallEnabled = Objects.requireNonNull(phoneCallEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder pushEnabled(Boolean pushEnabled) {
            this.pushEnabled = Objects.requireNonNull(pushEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {
            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(List<String> schemas) {
            this.schemas = Objects.requireNonNull(schemas);
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder securityQuestionsEnabled(Boolean securityQuestionsEnabled) {
            this.securityQuestionsEnabled = Objects.requireNonNull(securityQuestionsEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder smsEnabled(Boolean smsEnabled) {
            this.smsEnabled = Objects.requireNonNull(smsEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetDomainsAuthenticationFactorSettingTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetDomainsAuthenticationFactorSettingTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(String tenancyOcid) {
            this.tenancyOcid = Objects.requireNonNull(tenancyOcid);
            return this;
        }
        @CustomType.Setter
        public Builder thirdPartyFactors(List<GetDomainsAuthenticationFactorSettingThirdPartyFactor> thirdPartyFactors) {
            this.thirdPartyFactors = Objects.requireNonNull(thirdPartyFactors);
            return this;
        }
        public Builder thirdPartyFactors(GetDomainsAuthenticationFactorSettingThirdPartyFactor... thirdPartyFactors) {
            return thirdPartyFactors(List.of(thirdPartyFactors));
        }
        @CustomType.Setter
        public Builder totpEnabled(Boolean totpEnabled) {
            this.totpEnabled = Objects.requireNonNull(totpEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder totpSettings(List<GetDomainsAuthenticationFactorSettingTotpSetting> totpSettings) {
            this.totpSettings = Objects.requireNonNull(totpSettings);
            return this;
        }
        public Builder totpSettings(GetDomainsAuthenticationFactorSettingTotpSetting... totpSettings) {
            return totpSettings(List.of(totpSettings));
        }
        @CustomType.Setter
        public Builder urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings(List<GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings) {
            this.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings = Objects.requireNonNull(urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings);
            return this;
        }
        public Builder urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings(GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting... urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings) {
            return urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings(List.of(urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings));
        }
        @CustomType.Setter
        public Builder urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings(List<GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings) {
            this.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings = Objects.requireNonNull(urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings);
            return this;
        }
        public Builder urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings(GetDomainsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting... urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings) {
            return urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings(List.of(urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings));
        }
        @CustomType.Setter
        public Builder userEnrollmentDisabledFactors(List<String> userEnrollmentDisabledFactors) {
            this.userEnrollmentDisabledFactors = Objects.requireNonNull(userEnrollmentDisabledFactors);
            return this;
        }
        public Builder userEnrollmentDisabledFactors(String... userEnrollmentDisabledFactors) {
            return userEnrollmentDisabledFactors(List.of(userEnrollmentDisabledFactors));
        }
        @CustomType.Setter
        public Builder yubicoOtpEnabled(Boolean yubicoOtpEnabled) {
            this.yubicoOtpEnabled = Objects.requireNonNull(yubicoOtpEnabled);
            return this;
        }
        public GetDomainsAuthenticationFactorSettingResult build() {
            final var o = new GetDomainsAuthenticationFactorSettingResult();
            o.attributeSets = attributeSets;
            o.attributes = attributes;
            o.authenticationFactorSettingId = authenticationFactorSettingId;
            o.authorization = authorization;
            o.autoEnrollEmailFactorDisabled = autoEnrollEmailFactorDisabled;
            o.bypassCodeEnabled = bypassCodeEnabled;
            o.bypassCodeSettings = bypassCodeSettings;
            o.clientAppSettings = clientAppSettings;
            o.compartmentOcid = compartmentOcid;
            o.compliancePolicies = compliancePolicies;
            o.deleteInProgress = deleteInProgress;
            o.domainOcid = domainOcid;
            o.emailEnabled = emailEnabled;
            o.emailSettings = emailSettings;
            o.endpointRestrictions = endpointRestrictions;
            o.fidoAuthenticatorEnabled = fidoAuthenticatorEnabled;
            o.hideBackupFactorEnabled = hideBackupFactorEnabled;
            o.id = id;
            o.idcsCreatedBies = idcsCreatedBies;
            o.idcsEndpoint = idcsEndpoint;
            o.idcsLastModifiedBies = idcsLastModifiedBies;
            o.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            o.idcsPreventedOperations = idcsPreventedOperations;
            o.identityStoreSettings = identityStoreSettings;
            o.metas = metas;
            o.mfaEnabledCategory = mfaEnabledCategory;
            o.mfaEnrollmentType = mfaEnrollmentType;
            o.notificationSettings = notificationSettings;
            o.ocid = ocid;
            o.phoneCallEnabled = phoneCallEnabled;
            o.pushEnabled = pushEnabled;
            o.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            o.schemas = schemas;
            o.securityQuestionsEnabled = securityQuestionsEnabled;
            o.smsEnabled = smsEnabled;
            o.tags = tags;
            o.tenancyOcid = tenancyOcid;
            o.thirdPartyFactors = thirdPartyFactors;
            o.totpEnabled = totpEnabled;
            o.totpSettings = totpSettings;
            o.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings = urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
            o.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings = urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
            o.userEnrollmentDisabledFactors = userEnrollmentDisabledFactors;
            o.yubicoOtpEnabled = yubicoOtpEnabled;
            return o;
        }
    }
}
