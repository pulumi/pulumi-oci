// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingBypassCodeSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingClientAppSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingCompliancePolicy;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEmailSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEndpointRestriction;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdentityStoreSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingNotificationSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTag;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingThirdPartyFactor;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTotpSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting;
import com.pulumi.oci.Identity.outputs.GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsAuthenticationFactorSettingsAuthenticationFactorSetting {
    /**
     * @return A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    private @Nullable List<String> attributeSets;
    /**
     * @return A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    private @Nullable String attributes;
    private @Nullable String authenticationFactorSettingId;
    /**
     * @return The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    private @Nullable String authorization;
    /**
     * @return If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
     * 
     */
    private @Nullable Boolean autoEnrollEmailFactorDisabled;
    /**
     * @return If true, indicates that Bypass Code is enabled for authentication
     * 
     */
    private @Nullable Boolean bypassCodeEnabled;
    /**
     * @return Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingBypassCodeSetting> bypassCodeSettings;
    /**
     * @return Settings related to compliance, Personal Identification Number (PIN) policy, and so on
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingClientAppSetting> clientAppSettings;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String compartmentOcid;
    /**
     * @return Compliance Policy that defines actions to be taken when a condition is violated
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingCompliancePolicy> compliancePolicies;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private @Nullable Boolean deleteInProgress;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String domainOcid;
    /**
     * @return If true, indicates that the EMAIL channel is enabled for authentication
     * 
     */
    private @Nullable Boolean emailEnabled;
    /**
     * @return Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEmailSetting> emailSettings;
    /**
     * @return Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEndpointRestriction> endpointRestrictions;
    /**
     * @return If true, indicates that the Fido Authenticator channels are enabled for authentication
     * 
     */
    private @Nullable Boolean fidoAuthenticatorEnabled;
    /**
     * @return If true, indicates that &#39;Show backup factor(s)&#39; button will be hidden during authentication
     * 
     */
    private @Nullable Boolean hideBackupFactorEnabled;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private @Nullable String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsCreatedBy> idcsCreatedBies;
    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    private @Nullable String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private @Nullable String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private @Nullable List<String> idcsPreventedOperations;
    /**
     * @return Settings related to the use of a user&#39;s profile details from the identity store
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdentityStoreSetting> identityStoreSettings;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingMeta> metas;
    /**
     * @return Specifies the category of people for whom Multi-Factor Authentication is enabled. This is a readOnly attribute which reflects the value of mfaEnabledCategory attribute in SsoSettings
     * 
     */
    private @Nullable String mfaEnabledCategory;
    /**
     * @return Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
     * 
     */
    private @Nullable String mfaEnrollmentType;
    /**
     * @return Settings related to the Mobile App Notification channel, such as pull
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingNotificationSetting> notificationSettings;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private @Nullable String ocid;
    /**
     * @return If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
     * 
     */
    private @Nullable Boolean phoneCallEnabled;
    /**
     * @return If true, indicates that the Mobile App Push Notification channel is enabled for authentication
     * 
     */
    private @Nullable Boolean pushEnabled;
    /**
     * @return An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private @Nullable List<String> schemas;
    /**
     * @return If true, indicates that Security Questions are enabled for authentication
     * 
     */
    private @Nullable Boolean securityQuestionsEnabled;
    /**
     * @return If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
     * 
     */
    private @Nullable Boolean smsEnabled;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String tenancyOcid;
    /**
     * @return Settings related to third-party factor
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingThirdPartyFactor> thirdPartyFactors;
    /**
     * @return If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
     * 
     */
    private @Nullable Boolean totpEnabled;
    /**
     * @return Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTotpSetting> totpSettings;
    /**
     * @return This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
    /**
     * @return This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
     * 
     */
    private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
    /**
     * @return Factors for which enrollment should be blocked for End User
     * 
     */
    private @Nullable List<String> userEnrollmentDisabledFactors;
    /**
     * @return If true, indicates that the Yubico OTP is enabled for authentication
     * 
     */
    private @Nullable Boolean yubicoOtpEnabled;

    private GetDomainsAuthenticationFactorSettingsAuthenticationFactorSetting() {}
    /**
     * @return A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    /**
     * @return A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    public Optional<String> authenticationFactorSettingId() {
        return Optional.ofNullable(this.authenticationFactorSettingId);
    }
    /**
     * @return The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return If true, indicates that email will not be enrolled as a MFA factor automatically if it a account recovery factor
     * 
     */
    public Optional<Boolean> autoEnrollEmailFactorDisabled() {
        return Optional.ofNullable(this.autoEnrollEmailFactorDisabled);
    }
    /**
     * @return If true, indicates that Bypass Code is enabled for authentication
     * 
     */
    public Optional<Boolean> bypassCodeEnabled() {
        return Optional.ofNullable(this.bypassCodeEnabled);
    }
    /**
     * @return Settings related to the bypass code, such as bypass code length, bypass code expiry, max active bypass codes, and so on
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingBypassCodeSetting> bypassCodeSettings() {
        return this.bypassCodeSettings == null ? List.of() : this.bypassCodeSettings;
    }
    /**
     * @return Settings related to compliance, Personal Identification Number (PIN) policy, and so on
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingClientAppSetting> clientAppSettings() {
        return this.clientAppSettings == null ? List.of() : this.clientAppSettings;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> compartmentOcid() {
        return Optional.ofNullable(this.compartmentOcid);
    }
    /**
     * @return Compliance Policy that defines actions to be taken when a condition is violated
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingCompliancePolicy> compliancePolicies() {
        return this.compliancePolicies == null ? List.of() : this.compliancePolicies;
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Optional<Boolean> deleteInProgress() {
        return Optional.ofNullable(this.deleteInProgress);
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> domainOcid() {
        return Optional.ofNullable(this.domainOcid);
    }
    /**
     * @return If true, indicates that the EMAIL channel is enabled for authentication
     * 
     */
    public Optional<Boolean> emailEnabled() {
        return Optional.ofNullable(this.emailEnabled);
    }
    /**
     * @return Settings related to Email Factor, such as enabled email magic link factor, custom url for Email Link
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEmailSetting> emailSettings() {
        return this.emailSettings == null ? List.of() : this.emailSettings;
    }
    /**
     * @return Settings that describe the set of restrictions that the system should apply to devices and trusted endpoints of a user
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEndpointRestriction> endpointRestrictions() {
        return this.endpointRestrictions == null ? List.of() : this.endpointRestrictions;
    }
    /**
     * @return If true, indicates that the Fido Authenticator channels are enabled for authentication
     * 
     */
    public Optional<Boolean> fidoAuthenticatorEnabled() {
        return Optional.ofNullable(this.fidoAuthenticatorEnabled);
    }
    /**
     * @return If true, indicates that &#39;Show backup factor(s)&#39; button will be hidden during authentication
     * 
     */
    public Optional<Boolean> hideBackupFactorEnabled() {
        return Optional.ofNullable(this.hideBackupFactorEnabled);
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies == null ? List.of() : this.idcsCreatedBies;
    }
    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public Optional<String> idcsEndpoint() {
        return Optional.ofNullable(this.idcsEndpoint);
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies == null ? List.of() : this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public Optional<String> idcsLastUpgradedInRelease() {
        return Optional.ofNullable(this.idcsLastUpgradedInRelease);
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations == null ? List.of() : this.idcsPreventedOperations;
    }
    /**
     * @return Settings related to the use of a user&#39;s profile details from the identity store
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdentityStoreSetting> identityStoreSettings() {
        return this.identityStoreSettings == null ? List.of() : this.identityStoreSettings;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingMeta> metas() {
        return this.metas == null ? List.of() : this.metas;
    }
    /**
     * @return Specifies the category of people for whom Multi-Factor Authentication is enabled. This is a readOnly attribute which reflects the value of mfaEnabledCategory attribute in SsoSettings
     * 
     */
    public Optional<String> mfaEnabledCategory() {
        return Optional.ofNullable(this.mfaEnabledCategory);
    }
    /**
     * @return Specifies if Multi-Factor Authentication enrollment is mandatory or optional for a user
     * 
     */
    public Optional<String> mfaEnrollmentType() {
        return Optional.ofNullable(this.mfaEnrollmentType);
    }
    /**
     * @return Settings related to the Mobile App Notification channel, such as pull
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingNotificationSetting> notificationSettings() {
        return this.notificationSettings == null ? List.of() : this.notificationSettings;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public Optional<String> ocid() {
        return Optional.ofNullable(this.ocid);
    }
    /**
     * @return If true, indicates that the phone (PHONE_CALL) channel is enabled for authentication
     * 
     */
    public Optional<Boolean> phoneCallEnabled() {
        return Optional.ofNullable(this.phoneCallEnabled);
    }
    /**
     * @return If true, indicates that the Mobile App Push Notification channel is enabled for authentication
     * 
     */
    public Optional<Boolean> pushEnabled() {
        return Optional.ofNullable(this.pushEnabled);
    }
    /**
     * @return An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas == null ? List.of() : this.schemas;
    }
    /**
     * @return If true, indicates that Security Questions are enabled for authentication
     * 
     */
    public Optional<Boolean> securityQuestionsEnabled() {
        return Optional.ofNullable(this.securityQuestionsEnabled);
    }
    /**
     * @return If true, indicates that the Short Message Service (SMS) channel is enabled for authentication
     * 
     */
    public Optional<Boolean> smsEnabled() {
        return Optional.ofNullable(this.smsEnabled);
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> tenancyOcid() {
        return Optional.ofNullable(this.tenancyOcid);
    }
    /**
     * @return Settings related to third-party factor
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingThirdPartyFactor> thirdPartyFactors() {
        return this.thirdPartyFactors == null ? List.of() : this.thirdPartyFactors;
    }
    /**
     * @return If true, indicates that the Mobile App One Time Passcode channel is enabled for authentication
     * 
     */
    public Optional<Boolean> totpEnabled() {
        return Optional.ofNullable(this.totpEnabled);
    }
    /**
     * @return Settings related to Time-Based One-Time Passcodes (TOTP), such as hashing algo, totp time step, passcode length, and so on
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTotpSetting> totpSettings() {
        return this.totpSettings == null ? List.of() : this.totpSettings;
    }
    /**
     * @return This extension defines attributes used to manage Multi-Factor Authentication settings of fido authentication
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings() {
        return this.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings == null ? List.of() : this.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
    }
    /**
     * @return This extension defines attributes used to manage Multi-Factor Authentication settings of third party provider
     * 
     */
    public List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings() {
        return this.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings == null ? List.of() : this.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
    }
    /**
     * @return Factors for which enrollment should be blocked for End User
     * 
     */
    public List<String> userEnrollmentDisabledFactors() {
        return this.userEnrollmentDisabledFactors == null ? List.of() : this.userEnrollmentDisabledFactors;
    }
    /**
     * @return If true, indicates that the Yubico OTP is enabled for authentication
     * 
     */
    public Optional<Boolean> yubicoOtpEnabled() {
        return Optional.ofNullable(this.yubicoOtpEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private @Nullable String authenticationFactorSettingId;
        private @Nullable String authorization;
        private @Nullable Boolean autoEnrollEmailFactorDisabled;
        private @Nullable Boolean bypassCodeEnabled;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingBypassCodeSetting> bypassCodeSettings;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingClientAppSetting> clientAppSettings;
        private @Nullable String compartmentOcid;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingCompliancePolicy> compliancePolicies;
        private @Nullable Boolean deleteInProgress;
        private @Nullable String domainOcid;
        private @Nullable Boolean emailEnabled;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEmailSetting> emailSettings;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEndpointRestriction> endpointRestrictions;
        private @Nullable Boolean fidoAuthenticatorEnabled;
        private @Nullable Boolean hideBackupFactorEnabled;
        private @Nullable String id;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsCreatedBy> idcsCreatedBies;
        private @Nullable String idcsEndpoint;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsLastModifiedBy> idcsLastModifiedBies;
        private @Nullable String idcsLastUpgradedInRelease;
        private @Nullable List<String> idcsPreventedOperations;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdentityStoreSetting> identityStoreSettings;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingMeta> metas;
        private @Nullable String mfaEnabledCategory;
        private @Nullable String mfaEnrollmentType;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingNotificationSetting> notificationSettings;
        private @Nullable String ocid;
        private @Nullable Boolean phoneCallEnabled;
        private @Nullable Boolean pushEnabled;
        private @Nullable String resourceTypeSchemaVersion;
        private @Nullable List<String> schemas;
        private @Nullable Boolean securityQuestionsEnabled;
        private @Nullable Boolean smsEnabled;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTag> tags;
        private @Nullable String tenancyOcid;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingThirdPartyFactor> thirdPartyFactors;
        private @Nullable Boolean totpEnabled;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTotpSetting> totpSettings;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
        private @Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
        private @Nullable List<String> userEnrollmentDisabledFactors;
        private @Nullable Boolean yubicoOtpEnabled;
        public Builder() {}
        public Builder(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authenticationFactorSettingId = defaults.authenticationFactorSettingId;
    	      this.authorization = defaults.authorization;
    	      this.autoEnrollEmailFactorDisabled = defaults.autoEnrollEmailFactorDisabled;
    	      this.bypassCodeEnabled = defaults.bypassCodeEnabled;
    	      this.bypassCodeSettings = defaults.bypassCodeSettings;
    	      this.clientAppSettings = defaults.clientAppSettings;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.compliancePolicies = defaults.compliancePolicies;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.domainOcid = defaults.domainOcid;
    	      this.emailEnabled = defaults.emailEnabled;
    	      this.emailSettings = defaults.emailSettings;
    	      this.endpointRestrictions = defaults.endpointRestrictions;
    	      this.fidoAuthenticatorEnabled = defaults.fidoAuthenticatorEnabled;
    	      this.hideBackupFactorEnabled = defaults.hideBackupFactorEnabled;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.identityStoreSettings = defaults.identityStoreSettings;
    	      this.metas = defaults.metas;
    	      this.mfaEnabledCategory = defaults.mfaEnabledCategory;
    	      this.mfaEnrollmentType = defaults.mfaEnrollmentType;
    	      this.notificationSettings = defaults.notificationSettings;
    	      this.ocid = defaults.ocid;
    	      this.phoneCallEnabled = defaults.phoneCallEnabled;
    	      this.pushEnabled = defaults.pushEnabled;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.schemas = defaults.schemas;
    	      this.securityQuestionsEnabled = defaults.securityQuestionsEnabled;
    	      this.smsEnabled = defaults.smsEnabled;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.thirdPartyFactors = defaults.thirdPartyFactors;
    	      this.totpEnabled = defaults.totpEnabled;
    	      this.totpSettings = defaults.totpSettings;
    	      this.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings = defaults.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
    	      this.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings = defaults.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
    	      this.userEnrollmentDisabledFactors = defaults.userEnrollmentDisabledFactors;
    	      this.yubicoOtpEnabled = defaults.yubicoOtpEnabled;
        }

        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {
            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationFactorSettingId(@Nullable String authenticationFactorSettingId) {
            this.authenticationFactorSettingId = authenticationFactorSettingId;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder autoEnrollEmailFactorDisabled(@Nullable Boolean autoEnrollEmailFactorDisabled) {
            this.autoEnrollEmailFactorDisabled = autoEnrollEmailFactorDisabled;
            return this;
        }
        @CustomType.Setter
        public Builder bypassCodeEnabled(@Nullable Boolean bypassCodeEnabled) {
            this.bypassCodeEnabled = bypassCodeEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder bypassCodeSettings(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingBypassCodeSetting> bypassCodeSettings) {
            this.bypassCodeSettings = bypassCodeSettings;
            return this;
        }
        public Builder bypassCodeSettings(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingBypassCodeSetting... bypassCodeSettings) {
            return bypassCodeSettings(List.of(bypassCodeSettings));
        }
        @CustomType.Setter
        public Builder clientAppSettings(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingClientAppSetting> clientAppSettings) {
            this.clientAppSettings = clientAppSettings;
            return this;
        }
        public Builder clientAppSettings(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingClientAppSetting... clientAppSettings) {
            return clientAppSettings(List.of(clientAppSettings));
        }
        @CustomType.Setter
        public Builder compartmentOcid(@Nullable String compartmentOcid) {
            this.compartmentOcid = compartmentOcid;
            return this;
        }
        @CustomType.Setter
        public Builder compliancePolicies(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingCompliancePolicy> compliancePolicies) {
            this.compliancePolicies = compliancePolicies;
            return this;
        }
        public Builder compliancePolicies(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingCompliancePolicy... compliancePolicies) {
            return compliancePolicies(List.of(compliancePolicies));
        }
        @CustomType.Setter
        public Builder deleteInProgress(@Nullable Boolean deleteInProgress) {
            this.deleteInProgress = deleteInProgress;
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(@Nullable String domainOcid) {
            this.domainOcid = domainOcid;
            return this;
        }
        @CustomType.Setter
        public Builder emailEnabled(@Nullable Boolean emailEnabled) {
            this.emailEnabled = emailEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder emailSettings(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEmailSetting> emailSettings) {
            this.emailSettings = emailSettings;
            return this;
        }
        public Builder emailSettings(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEmailSetting... emailSettings) {
            return emailSettings(List.of(emailSettings));
        }
        @CustomType.Setter
        public Builder endpointRestrictions(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEndpointRestriction> endpointRestrictions) {
            this.endpointRestrictions = endpointRestrictions;
            return this;
        }
        public Builder endpointRestrictions(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingEndpointRestriction... endpointRestrictions) {
            return endpointRestrictions(List.of(endpointRestrictions));
        }
        @CustomType.Setter
        public Builder fidoAuthenticatorEnabled(@Nullable Boolean fidoAuthenticatorEnabled) {
            this.fidoAuthenticatorEnabled = fidoAuthenticatorEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder hideBackupFactorEnabled(@Nullable Boolean hideBackupFactorEnabled) {
            this.hideBackupFactorEnabled = hideBackupFactorEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = idcsCreatedBies;
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(@Nullable String idcsEndpoint) {
            this.idcsEndpoint = idcsEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(@Nullable String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(@Nullable List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder identityStoreSettings(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdentityStoreSetting> identityStoreSettings) {
            this.identityStoreSettings = identityStoreSettings;
            return this;
        }
        public Builder identityStoreSettings(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingIdentityStoreSetting... identityStoreSettings) {
            return identityStoreSettings(List.of(identityStoreSettings));
        }
        @CustomType.Setter
        public Builder metas(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingMeta> metas) {
            this.metas = metas;
            return this;
        }
        public Builder metas(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder mfaEnabledCategory(@Nullable String mfaEnabledCategory) {
            this.mfaEnabledCategory = mfaEnabledCategory;
            return this;
        }
        @CustomType.Setter
        public Builder mfaEnrollmentType(@Nullable String mfaEnrollmentType) {
            this.mfaEnrollmentType = mfaEnrollmentType;
            return this;
        }
        @CustomType.Setter
        public Builder notificationSettings(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingNotificationSetting> notificationSettings) {
            this.notificationSettings = notificationSettings;
            return this;
        }
        public Builder notificationSettings(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingNotificationSetting... notificationSettings) {
            return notificationSettings(List.of(notificationSettings));
        }
        @CustomType.Setter
        public Builder ocid(@Nullable String ocid) {
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder phoneCallEnabled(@Nullable Boolean phoneCallEnabled) {
            this.phoneCallEnabled = phoneCallEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder pushEnabled(@Nullable Boolean pushEnabled) {
            this.pushEnabled = pushEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {
            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(@Nullable List<String> schemas) {
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder securityQuestionsEnabled(@Nullable Boolean securityQuestionsEnabled) {
            this.securityQuestionsEnabled = securityQuestionsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder smsEnabled(@Nullable Boolean smsEnabled) {
            this.smsEnabled = smsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(@Nullable String tenancyOcid) {
            this.tenancyOcid = tenancyOcid;
            return this;
        }
        @CustomType.Setter
        public Builder thirdPartyFactors(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingThirdPartyFactor> thirdPartyFactors) {
            this.thirdPartyFactors = thirdPartyFactors;
            return this;
        }
        public Builder thirdPartyFactors(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingThirdPartyFactor... thirdPartyFactors) {
            return thirdPartyFactors(List.of(thirdPartyFactors));
        }
        @CustomType.Setter
        public Builder totpEnabled(@Nullable Boolean totpEnabled) {
            this.totpEnabled = totpEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder totpSettings(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTotpSetting> totpSettings) {
            this.totpSettings = totpSettings;
            return this;
        }
        public Builder totpSettings(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingTotpSetting... totpSettings) {
            return totpSettings(List.of(totpSettings));
        }
        @CustomType.Setter
        public Builder urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings) {
            this.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings = urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
            return this;
        }
        public Builder urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSetting... urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings) {
            return urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings(List.of(urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings));
        }
        @CustomType.Setter
        public Builder urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings(@Nullable List<GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting> urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings) {
            this.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings = urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
            return this;
        }
        public Builder urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings(GetDomainsAuthenticationFactorSettingsAuthenticationFactorSettingUrnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSetting... urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings) {
            return urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings(List.of(urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings));
        }
        @CustomType.Setter
        public Builder userEnrollmentDisabledFactors(@Nullable List<String> userEnrollmentDisabledFactors) {
            this.userEnrollmentDisabledFactors = userEnrollmentDisabledFactors;
            return this;
        }
        public Builder userEnrollmentDisabledFactors(String... userEnrollmentDisabledFactors) {
            return userEnrollmentDisabledFactors(List.of(userEnrollmentDisabledFactors));
        }
        @CustomType.Setter
        public Builder yubicoOtpEnabled(@Nullable Boolean yubicoOtpEnabled) {
            this.yubicoOtpEnabled = yubicoOtpEnabled;
            return this;
        }
        public GetDomainsAuthenticationFactorSettingsAuthenticationFactorSetting build() {
            final var o = new GetDomainsAuthenticationFactorSettingsAuthenticationFactorSetting();
            o.attributeSets = attributeSets;
            o.attributes = attributes;
            o.authenticationFactorSettingId = authenticationFactorSettingId;
            o.authorization = authorization;
            o.autoEnrollEmailFactorDisabled = autoEnrollEmailFactorDisabled;
            o.bypassCodeEnabled = bypassCodeEnabled;
            o.bypassCodeSettings = bypassCodeSettings;
            o.clientAppSettings = clientAppSettings;
            o.compartmentOcid = compartmentOcid;
            o.compliancePolicies = compliancePolicies;
            o.deleteInProgress = deleteInProgress;
            o.domainOcid = domainOcid;
            o.emailEnabled = emailEnabled;
            o.emailSettings = emailSettings;
            o.endpointRestrictions = endpointRestrictions;
            o.fidoAuthenticatorEnabled = fidoAuthenticatorEnabled;
            o.hideBackupFactorEnabled = hideBackupFactorEnabled;
            o.id = id;
            o.idcsCreatedBies = idcsCreatedBies;
            o.idcsEndpoint = idcsEndpoint;
            o.idcsLastModifiedBies = idcsLastModifiedBies;
            o.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            o.idcsPreventedOperations = idcsPreventedOperations;
            o.identityStoreSettings = identityStoreSettings;
            o.metas = metas;
            o.mfaEnabledCategory = mfaEnabledCategory;
            o.mfaEnrollmentType = mfaEnrollmentType;
            o.notificationSettings = notificationSettings;
            o.ocid = ocid;
            o.phoneCallEnabled = phoneCallEnabled;
            o.pushEnabled = pushEnabled;
            o.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            o.schemas = schemas;
            o.securityQuestionsEnabled = securityQuestionsEnabled;
            o.smsEnabled = smsEnabled;
            o.tags = tags;
            o.tenancyOcid = tenancyOcid;
            o.thirdPartyFactors = thirdPartyFactors;
            o.totpEnabled = totpEnabled;
            o.totpSettings = totpSettings;
            o.urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings = urnietfparamsscimschemasoracleidcsextensionfidoAuthenticationFactorSettings;
            o.urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings = urnietfparamsscimschemasoracleidcsextensionthirdPartyAuthenticationFactorSettings;
            o.userEnrollmentDisabledFactors = userEnrollmentDisabledFactors;
            o.yubicoOtpEnabled = yubicoOtpEnabled;
            return o;
        }
    }
}
