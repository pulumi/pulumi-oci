// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsBrandingSettingCompanyName;
import com.pulumi.oci.Identity.outputs.GetDomainsBrandingSettingDefaultCompanyName;
import com.pulumi.oci.Identity.outputs.GetDomainsBrandingSettingDefaultImage;
import com.pulumi.oci.Identity.outputs.GetDomainsBrandingSettingDefaultLoginText;
import com.pulumi.oci.Identity.outputs.GetDomainsBrandingSettingIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsBrandingSettingIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsBrandingSettingImage;
import com.pulumi.oci.Identity.outputs.GetDomainsBrandingSettingLoginText;
import com.pulumi.oci.Identity.outputs.GetDomainsBrandingSettingMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsBrandingSettingTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsBrandingSettingResult {
    private @Nullable List<String> attributeSets;
    private @Nullable String attributes;
    private @Nullable String authorization;
    private String brandingSettingId;
    /**
     * @return Name of the company in different locales
     * 
     */
    private List<GetDomainsBrandingSettingCompanyName> companyNames;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private String compartmentOcid;
    /**
     * @return Indicates if the branding is default or is custom branding
     * 
     */
    private Boolean customBranding;
    /**
     * @return Storage URL location where the sanitized custom css is located
     * 
     */
    private String customCssLocation;
    /**
     * @return Storage URL location where the sanitized custom html is located
     * 
     */
    private String customHtmlLocation;
    /**
     * @return Custom translations (JSON String)
     * 
     */
    private String customTranslation;
    /**
     * @return Default name of the Company in different locales
     * 
     */
    private List<GetDomainsBrandingSettingDefaultCompanyName> defaultCompanyNames;
    /**
     * @return References to various images
     * 
     */
    private List<GetDomainsBrandingSettingDefaultImage> defaultImages;
    /**
     * @return Default Login text in different locales
     * 
     */
    private List<GetDomainsBrandingSettingDefaultLoginText> defaultLoginTexts;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private Boolean deleteInProgress;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private String domainOcid;
    /**
     * @return Indicates if Terms of Use is enabled in UI
     * 
     */
    private Boolean enableTermsOfUse;
    /**
     * @return An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     */
    private String externalId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private List<GetDomainsBrandingSettingIdcsCreatedBy> idcsCreatedBies;
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private List<GetDomainsBrandingSettingIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private List<String> idcsPreventedOperations;
    /**
     * @return References to various images
     * 
     */
    private List<GetDomainsBrandingSettingImage> images;
    /**
     * @return Indicates if &#39;hosted&#39; option was selected
     * 
     */
    private Boolean isHostedPage;
    /**
     * @return Locale
     * 
     */
    private String locale;
    /**
     * @return Login text in different locales
     * 
     */
    private List<GetDomainsBrandingSettingLoginText> loginTexts;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private List<GetDomainsBrandingSettingMeta> metas;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private String ocid;
    /**
     * @return Preferred written or spoken language used for localized user interfaces
     * 
     */
    private String preferredLanguage;
    /**
     * @return Privacy Policy URL
     * 
     */
    private String privacyPolicyUrl;
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private List<String> schemas;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private List<GetDomainsBrandingSettingTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private String tenancyOcid;
    /**
     * @return Terms of Use URL
     * 
     */
    private String termsOfUseUrl;
    /**
     * @return User&#39;s timezone
     * 
     */
    private String timezone;

    private GetDomainsBrandingSettingResult() {}
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    public String brandingSettingId() {
        return this.brandingSettingId;
    }
    /**
     * @return Name of the company in different locales
     * 
     */
    public List<GetDomainsBrandingSettingCompanyName> companyNames() {
        return this.companyNames;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public String compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * @return Indicates if the branding is default or is custom branding
     * 
     */
    public Boolean customBranding() {
        return this.customBranding;
    }
    /**
     * @return Storage URL location where the sanitized custom css is located
     * 
     */
    public String customCssLocation() {
        return this.customCssLocation;
    }
    /**
     * @return Storage URL location where the sanitized custom html is located
     * 
     */
    public String customHtmlLocation() {
        return this.customHtmlLocation;
    }
    /**
     * @return Custom translations (JSON String)
     * 
     */
    public String customTranslation() {
        return this.customTranslation;
    }
    /**
     * @return Default name of the Company in different locales
     * 
     */
    public List<GetDomainsBrandingSettingDefaultCompanyName> defaultCompanyNames() {
        return this.defaultCompanyNames;
    }
    /**
     * @return References to various images
     * 
     */
    public List<GetDomainsBrandingSettingDefaultImage> defaultImages() {
        return this.defaultImages;
    }
    /**
     * @return Default Login text in different locales
     * 
     */
    public List<GetDomainsBrandingSettingDefaultLoginText> defaultLoginTexts() {
        return this.defaultLoginTexts;
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Boolean deleteInProgress() {
        return this.deleteInProgress;
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public String domainOcid() {
        return this.domainOcid;
    }
    /**
     * @return Indicates if Terms of Use is enabled in UI
     * 
     */
    public Boolean enableTermsOfUse() {
        return this.enableTermsOfUse;
    }
    /**
     * @return An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsBrandingSettingIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsBrandingSettingIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public String idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * @return References to various images
     * 
     */
    public List<GetDomainsBrandingSettingImage> images() {
        return this.images;
    }
    /**
     * @return Indicates if &#39;hosted&#39; option was selected
     * 
     */
    public Boolean isHostedPage() {
        return this.isHostedPage;
    }
    /**
     * @return Locale
     * 
     */
    public String locale() {
        return this.locale;
    }
    /**
     * @return Login text in different locales
     * 
     */
    public List<GetDomainsBrandingSettingLoginText> loginTexts() {
        return this.loginTexts;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsBrandingSettingMeta> metas() {
        return this.metas;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return Preferred written or spoken language used for localized user interfaces
     * 
     */
    public String preferredLanguage() {
        return this.preferredLanguage;
    }
    /**
     * @return Privacy Policy URL
     * 
     */
    public String privacyPolicyUrl() {
        return this.privacyPolicyUrl;
    }
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsBrandingSettingTag> tags() {
        return this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public String tenancyOcid() {
        return this.tenancyOcid;
    }
    /**
     * @return Terms of Use URL
     * 
     */
    public String termsOfUseUrl() {
        return this.termsOfUseUrl;
    }
    /**
     * @return User&#39;s timezone
     * 
     */
    public String timezone() {
        return this.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsBrandingSettingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private @Nullable String authorization;
        private String brandingSettingId;
        private List<GetDomainsBrandingSettingCompanyName> companyNames;
        private String compartmentOcid;
        private Boolean customBranding;
        private String customCssLocation;
        private String customHtmlLocation;
        private String customTranslation;
        private List<GetDomainsBrandingSettingDefaultCompanyName> defaultCompanyNames;
        private List<GetDomainsBrandingSettingDefaultImage> defaultImages;
        private List<GetDomainsBrandingSettingDefaultLoginText> defaultLoginTexts;
        private Boolean deleteInProgress;
        private String domainOcid;
        private Boolean enableTermsOfUse;
        private String externalId;
        private String id;
        private List<GetDomainsBrandingSettingIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private List<GetDomainsBrandingSettingIdcsLastModifiedBy> idcsLastModifiedBies;
        private String idcsLastUpgradedInRelease;
        private List<String> idcsPreventedOperations;
        private List<GetDomainsBrandingSettingImage> images;
        private Boolean isHostedPage;
        private String locale;
        private List<GetDomainsBrandingSettingLoginText> loginTexts;
        private List<GetDomainsBrandingSettingMeta> metas;
        private String ocid;
        private String preferredLanguage;
        private String privacyPolicyUrl;
        private @Nullable String resourceTypeSchemaVersion;
        private List<String> schemas;
        private List<GetDomainsBrandingSettingTag> tags;
        private String tenancyOcid;
        private String termsOfUseUrl;
        private String timezone;
        public Builder() {}
        public Builder(GetDomainsBrandingSettingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authorization = defaults.authorization;
    	      this.brandingSettingId = defaults.brandingSettingId;
    	      this.companyNames = defaults.companyNames;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.customBranding = defaults.customBranding;
    	      this.customCssLocation = defaults.customCssLocation;
    	      this.customHtmlLocation = defaults.customHtmlLocation;
    	      this.customTranslation = defaults.customTranslation;
    	      this.defaultCompanyNames = defaults.defaultCompanyNames;
    	      this.defaultImages = defaults.defaultImages;
    	      this.defaultLoginTexts = defaults.defaultLoginTexts;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.domainOcid = defaults.domainOcid;
    	      this.enableTermsOfUse = defaults.enableTermsOfUse;
    	      this.externalId = defaults.externalId;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.images = defaults.images;
    	      this.isHostedPage = defaults.isHostedPage;
    	      this.locale = defaults.locale;
    	      this.loginTexts = defaults.loginTexts;
    	      this.metas = defaults.metas;
    	      this.ocid = defaults.ocid;
    	      this.preferredLanguage = defaults.preferredLanguage;
    	      this.privacyPolicyUrl = defaults.privacyPolicyUrl;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.schemas = defaults.schemas;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.termsOfUseUrl = defaults.termsOfUseUrl;
    	      this.timezone = defaults.timezone;
        }

        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {
            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder brandingSettingId(String brandingSettingId) {
            this.brandingSettingId = Objects.requireNonNull(brandingSettingId);
            return this;
        }
        @CustomType.Setter
        public Builder companyNames(List<GetDomainsBrandingSettingCompanyName> companyNames) {
            this.companyNames = Objects.requireNonNull(companyNames);
            return this;
        }
        public Builder companyNames(GetDomainsBrandingSettingCompanyName... companyNames) {
            return companyNames(List.of(companyNames));
        }
        @CustomType.Setter
        public Builder compartmentOcid(String compartmentOcid) {
            this.compartmentOcid = Objects.requireNonNull(compartmentOcid);
            return this;
        }
        @CustomType.Setter
        public Builder customBranding(Boolean customBranding) {
            this.customBranding = Objects.requireNonNull(customBranding);
            return this;
        }
        @CustomType.Setter
        public Builder customCssLocation(String customCssLocation) {
            this.customCssLocation = Objects.requireNonNull(customCssLocation);
            return this;
        }
        @CustomType.Setter
        public Builder customHtmlLocation(String customHtmlLocation) {
            this.customHtmlLocation = Objects.requireNonNull(customHtmlLocation);
            return this;
        }
        @CustomType.Setter
        public Builder customTranslation(String customTranslation) {
            this.customTranslation = Objects.requireNonNull(customTranslation);
            return this;
        }
        @CustomType.Setter
        public Builder defaultCompanyNames(List<GetDomainsBrandingSettingDefaultCompanyName> defaultCompanyNames) {
            this.defaultCompanyNames = Objects.requireNonNull(defaultCompanyNames);
            return this;
        }
        public Builder defaultCompanyNames(GetDomainsBrandingSettingDefaultCompanyName... defaultCompanyNames) {
            return defaultCompanyNames(List.of(defaultCompanyNames));
        }
        @CustomType.Setter
        public Builder defaultImages(List<GetDomainsBrandingSettingDefaultImage> defaultImages) {
            this.defaultImages = Objects.requireNonNull(defaultImages);
            return this;
        }
        public Builder defaultImages(GetDomainsBrandingSettingDefaultImage... defaultImages) {
            return defaultImages(List.of(defaultImages));
        }
        @CustomType.Setter
        public Builder defaultLoginTexts(List<GetDomainsBrandingSettingDefaultLoginText> defaultLoginTexts) {
            this.defaultLoginTexts = Objects.requireNonNull(defaultLoginTexts);
            return this;
        }
        public Builder defaultLoginTexts(GetDomainsBrandingSettingDefaultLoginText... defaultLoginTexts) {
            return defaultLoginTexts(List.of(defaultLoginTexts));
        }
        @CustomType.Setter
        public Builder deleteInProgress(Boolean deleteInProgress) {
            this.deleteInProgress = Objects.requireNonNull(deleteInProgress);
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(String domainOcid) {
            this.domainOcid = Objects.requireNonNull(domainOcid);
            return this;
        }
        @CustomType.Setter
        public Builder enableTermsOfUse(Boolean enableTermsOfUse) {
            this.enableTermsOfUse = Objects.requireNonNull(enableTermsOfUse);
            return this;
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            this.externalId = Objects.requireNonNull(externalId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(List<GetDomainsBrandingSettingIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = Objects.requireNonNull(idcsCreatedBies);
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsBrandingSettingIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            this.idcsEndpoint = Objects.requireNonNull(idcsEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(List<GetDomainsBrandingSettingIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = Objects.requireNonNull(idcsLastModifiedBies);
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsBrandingSettingIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = Objects.requireNonNull(idcsLastUpgradedInRelease);
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = Objects.requireNonNull(idcsPreventedOperations);
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder images(List<GetDomainsBrandingSettingImage> images) {
            this.images = Objects.requireNonNull(images);
            return this;
        }
        public Builder images(GetDomainsBrandingSettingImage... images) {
            return images(List.of(images));
        }
        @CustomType.Setter
        public Builder isHostedPage(Boolean isHostedPage) {
            this.isHostedPage = Objects.requireNonNull(isHostedPage);
            return this;
        }
        @CustomType.Setter
        public Builder locale(String locale) {
            this.locale = Objects.requireNonNull(locale);
            return this;
        }
        @CustomType.Setter
        public Builder loginTexts(List<GetDomainsBrandingSettingLoginText> loginTexts) {
            this.loginTexts = Objects.requireNonNull(loginTexts);
            return this;
        }
        public Builder loginTexts(GetDomainsBrandingSettingLoginText... loginTexts) {
            return loginTexts(List.of(loginTexts));
        }
        @CustomType.Setter
        public Builder metas(List<GetDomainsBrandingSettingMeta> metas) {
            this.metas = Objects.requireNonNull(metas);
            return this;
        }
        public Builder metas(GetDomainsBrandingSettingMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            this.ocid = Objects.requireNonNull(ocid);
            return this;
        }
        @CustomType.Setter
        public Builder preferredLanguage(String preferredLanguage) {
            this.preferredLanguage = Objects.requireNonNull(preferredLanguage);
            return this;
        }
        @CustomType.Setter
        public Builder privacyPolicyUrl(String privacyPolicyUrl) {
            this.privacyPolicyUrl = Objects.requireNonNull(privacyPolicyUrl);
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {
            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(List<String> schemas) {
            this.schemas = Objects.requireNonNull(schemas);
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder tags(List<GetDomainsBrandingSettingTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetDomainsBrandingSettingTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(String tenancyOcid) {
            this.tenancyOcid = Objects.requireNonNull(tenancyOcid);
            return this;
        }
        @CustomType.Setter
        public Builder termsOfUseUrl(String termsOfUseUrl) {
            this.termsOfUseUrl = Objects.requireNonNull(termsOfUseUrl);
            return this;
        }
        @CustomType.Setter
        public Builder timezone(String timezone) {
            this.timezone = Objects.requireNonNull(timezone);
            return this;
        }
        public GetDomainsBrandingSettingResult build() {
            final var o = new GetDomainsBrandingSettingResult();
            o.attributeSets = attributeSets;
            o.attributes = attributes;
            o.authorization = authorization;
            o.brandingSettingId = brandingSettingId;
            o.companyNames = companyNames;
            o.compartmentOcid = compartmentOcid;
            o.customBranding = customBranding;
            o.customCssLocation = customCssLocation;
            o.customHtmlLocation = customHtmlLocation;
            o.customTranslation = customTranslation;
            o.defaultCompanyNames = defaultCompanyNames;
            o.defaultImages = defaultImages;
            o.defaultLoginTexts = defaultLoginTexts;
            o.deleteInProgress = deleteInProgress;
            o.domainOcid = domainOcid;
            o.enableTermsOfUse = enableTermsOfUse;
            o.externalId = externalId;
            o.id = id;
            o.idcsCreatedBies = idcsCreatedBies;
            o.idcsEndpoint = idcsEndpoint;
            o.idcsLastModifiedBies = idcsLastModifiedBies;
            o.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            o.idcsPreventedOperations = idcsPreventedOperations;
            o.images = images;
            o.isHostedPage = isHostedPage;
            o.locale = locale;
            o.loginTexts = loginTexts;
            o.metas = metas;
            o.ocid = ocid;
            o.preferredLanguage = preferredLanguage;
            o.privacyPolicyUrl = privacyPolicyUrl;
            o.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            o.schemas = schemas;
            o.tags = tags;
            o.tenancyOcid = tenancyOcid;
            o.termsOfUseUrl = termsOfUseUrl;
            o.timezone = timezone;
            return o;
        }
    }
}
