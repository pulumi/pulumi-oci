// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetDomainsCloudGateMappingCloudGate;
import com.pulumi.oci.Identity.outputs.GetDomainsCloudGateMappingGatewayApp;
import com.pulumi.oci.Identity.outputs.GetDomainsCloudGateMappingIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsCloudGateMappingIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsCloudGateMappingMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsCloudGateMappingServer;
import com.pulumi.oci.Identity.outputs.GetDomainsCloudGateMappingTag;
import com.pulumi.oci.Identity.outputs.GetDomainsCloudGateMappingUpstreamServerGroup;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsCloudGateMappingResult {
    private @Nullable List<String> attributeSets;
    private @Nullable String attributes;
    private @Nullable String authorization;
    private String cloudGateMappingId;
    /**
     * @return Reference to owning Cloud Gate
     * 
     */
    private List<GetDomainsCloudGateMappingCloudGate> cloudGates;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private String compartmentOcid;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private Boolean deleteInProgress;
    /**
     * @return Brief description for this Cloud Gate
     * 
     */
    private String description;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private String domainOcid;
    /**
     * @return Reference to gateway application protected by this Cloud Gate
     * 
     */
    private List<GetDomainsCloudGateMappingGatewayApp> gatewayApps;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private List<GetDomainsCloudGateMappingIdcsCreatedBy> idcsCreatedBies;
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private List<GetDomainsCloudGateMappingIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private List<String> idcsPreventedOperations;
    /**
     * @return Indicates whether this resource was created by OPC
     * 
     */
    private Boolean isOpcService;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private List<GetDomainsCloudGateMappingMeta> metas;
    /**
     * @return More NGINX Settings. JSON encoded key value pairs similar to WTP encoding
     * 
     */
    private String nginxSettings;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private String ocid;
    /**
     * @return The Web Tier policy name used for the App that is mapped to the owning Cloud Gate
     * 
     */
    private String policyName;
    /**
     * @return NGINX ProxyPass entry for this Mapping
     * 
     */
    private String proxyPass;
    /**
     * @return Resource prefix for this mapping.  This will be used to define the location block
     * 
     */
    private String resourcePrefix;
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private List<String> schemas;
    /**
     * @return Reference to server block for this mapping
     * 
     */
    private List<GetDomainsCloudGateMappingServer> servers;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private List<GetDomainsCloudGateMappingTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private String tenancyOcid;
    /**
     * @return Reference to upstream block for this mapping
     * 
     */
    private List<GetDomainsCloudGateMappingUpstreamServerGroup> upstreamServerGroups;

    private GetDomainsCloudGateMappingResult() {}
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    public String cloudGateMappingId() {
        return this.cloudGateMappingId;
    }
    /**
     * @return Reference to owning Cloud Gate
     * 
     */
    public List<GetDomainsCloudGateMappingCloudGate> cloudGates() {
        return this.cloudGates;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public String compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Boolean deleteInProgress() {
        return this.deleteInProgress;
    }
    /**
     * @return Brief description for this Cloud Gate
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public String domainOcid() {
        return this.domainOcid;
    }
    /**
     * @return Reference to gateway application protected by this Cloud Gate
     * 
     */
    public List<GetDomainsCloudGateMappingGatewayApp> gatewayApps() {
        return this.gatewayApps;
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsCloudGateMappingIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsCloudGateMappingIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public String idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * @return Indicates whether this resource was created by OPC
     * 
     */
    public Boolean isOpcService() {
        return this.isOpcService;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsCloudGateMappingMeta> metas() {
        return this.metas;
    }
    /**
     * @return More NGINX Settings. JSON encoded key value pairs similar to WTP encoding
     * 
     */
    public String nginxSettings() {
        return this.nginxSettings;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return The Web Tier policy name used for the App that is mapped to the owning Cloud Gate
     * 
     */
    public String policyName() {
        return this.policyName;
    }
    /**
     * @return NGINX ProxyPass entry for this Mapping
     * 
     */
    public String proxyPass() {
        return this.proxyPass;
    }
    /**
     * @return Resource prefix for this mapping.  This will be used to define the location block
     * 
     */
    public String resourcePrefix() {
        return this.resourcePrefix;
    }
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas;
    }
    /**
     * @return Reference to server block for this mapping
     * 
     */
    public List<GetDomainsCloudGateMappingServer> servers() {
        return this.servers;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsCloudGateMappingTag> tags() {
        return this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public String tenancyOcid() {
        return this.tenancyOcid;
    }
    /**
     * @return Reference to upstream block for this mapping
     * 
     */
    public List<GetDomainsCloudGateMappingUpstreamServerGroup> upstreamServerGroups() {
        return this.upstreamServerGroups;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsCloudGateMappingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private @Nullable String authorization;
        private String cloudGateMappingId;
        private List<GetDomainsCloudGateMappingCloudGate> cloudGates;
        private String compartmentOcid;
        private Boolean deleteInProgress;
        private String description;
        private String domainOcid;
        private List<GetDomainsCloudGateMappingGatewayApp> gatewayApps;
        private String id;
        private List<GetDomainsCloudGateMappingIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private List<GetDomainsCloudGateMappingIdcsLastModifiedBy> idcsLastModifiedBies;
        private String idcsLastUpgradedInRelease;
        private List<String> idcsPreventedOperations;
        private Boolean isOpcService;
        private List<GetDomainsCloudGateMappingMeta> metas;
        private String nginxSettings;
        private String ocid;
        private String policyName;
        private String proxyPass;
        private String resourcePrefix;
        private @Nullable String resourceTypeSchemaVersion;
        private List<String> schemas;
        private List<GetDomainsCloudGateMappingServer> servers;
        private List<GetDomainsCloudGateMappingTag> tags;
        private String tenancyOcid;
        private List<GetDomainsCloudGateMappingUpstreamServerGroup> upstreamServerGroups;
        public Builder() {}
        public Builder(GetDomainsCloudGateMappingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authorization = defaults.authorization;
    	      this.cloudGateMappingId = defaults.cloudGateMappingId;
    	      this.cloudGates = defaults.cloudGates;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.description = defaults.description;
    	      this.domainOcid = defaults.domainOcid;
    	      this.gatewayApps = defaults.gatewayApps;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.isOpcService = defaults.isOpcService;
    	      this.metas = defaults.metas;
    	      this.nginxSettings = defaults.nginxSettings;
    	      this.ocid = defaults.ocid;
    	      this.policyName = defaults.policyName;
    	      this.proxyPass = defaults.proxyPass;
    	      this.resourcePrefix = defaults.resourcePrefix;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.schemas = defaults.schemas;
    	      this.servers = defaults.servers;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.upstreamServerGroups = defaults.upstreamServerGroups;
        }

        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {

            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {

            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {

            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder cloudGateMappingId(String cloudGateMappingId) {
            if (cloudGateMappingId == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "cloudGateMappingId");
            }
            this.cloudGateMappingId = cloudGateMappingId;
            return this;
        }
        @CustomType.Setter
        public Builder cloudGates(List<GetDomainsCloudGateMappingCloudGate> cloudGates) {
            if (cloudGates == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "cloudGates");
            }
            this.cloudGates = cloudGates;
            return this;
        }
        public Builder cloudGates(GetDomainsCloudGateMappingCloudGate... cloudGates) {
            return cloudGates(List.of(cloudGates));
        }
        @CustomType.Setter
        public Builder compartmentOcid(String compartmentOcid) {
            if (compartmentOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "compartmentOcid");
            }
            this.compartmentOcid = compartmentOcid;
            return this;
        }
        @CustomType.Setter
        public Builder deleteInProgress(Boolean deleteInProgress) {
            if (deleteInProgress == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "deleteInProgress");
            }
            this.deleteInProgress = deleteInProgress;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(String domainOcid) {
            if (domainOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "domainOcid");
            }
            this.domainOcid = domainOcid;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayApps(List<GetDomainsCloudGateMappingGatewayApp> gatewayApps) {
            if (gatewayApps == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "gatewayApps");
            }
            this.gatewayApps = gatewayApps;
            return this;
        }
        public Builder gatewayApps(GetDomainsCloudGateMappingGatewayApp... gatewayApps) {
            return gatewayApps(List.of(gatewayApps));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(List<GetDomainsCloudGateMappingIdcsCreatedBy> idcsCreatedBies) {
            if (idcsCreatedBies == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "idcsCreatedBies");
            }
            this.idcsCreatedBies = idcsCreatedBies;
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsCloudGateMappingIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            if (idcsEndpoint == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "idcsEndpoint");
            }
            this.idcsEndpoint = idcsEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(List<GetDomainsCloudGateMappingIdcsLastModifiedBy> idcsLastModifiedBies) {
            if (idcsLastModifiedBies == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "idcsLastModifiedBies");
            }
            this.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsCloudGateMappingIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            if (idcsLastUpgradedInRelease == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "idcsLastUpgradedInRelease");
            }
            this.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            if (idcsPreventedOperations == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "idcsPreventedOperations");
            }
            this.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder isOpcService(Boolean isOpcService) {
            if (isOpcService == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "isOpcService");
            }
            this.isOpcService = isOpcService;
            return this;
        }
        @CustomType.Setter
        public Builder metas(List<GetDomainsCloudGateMappingMeta> metas) {
            if (metas == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "metas");
            }
            this.metas = metas;
            return this;
        }
        public Builder metas(GetDomainsCloudGateMappingMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder nginxSettings(String nginxSettings) {
            if (nginxSettings == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "nginxSettings");
            }
            this.nginxSettings = nginxSettings;
            return this;
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            if (ocid == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "ocid");
            }
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder policyName(String policyName) {
            if (policyName == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "policyName");
            }
            this.policyName = policyName;
            return this;
        }
        @CustomType.Setter
        public Builder proxyPass(String proxyPass) {
            if (proxyPass == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "proxyPass");
            }
            this.proxyPass = proxyPass;
            return this;
        }
        @CustomType.Setter
        public Builder resourcePrefix(String resourcePrefix) {
            if (resourcePrefix == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "resourcePrefix");
            }
            this.resourcePrefix = resourcePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {

            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(List<String> schemas) {
            if (schemas == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "schemas");
            }
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder servers(List<GetDomainsCloudGateMappingServer> servers) {
            if (servers == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "servers");
            }
            this.servers = servers;
            return this;
        }
        public Builder servers(GetDomainsCloudGateMappingServer... servers) {
            return servers(List.of(servers));
        }
        @CustomType.Setter
        public Builder tags(List<GetDomainsCloudGateMappingTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetDomainsCloudGateMappingTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(String tenancyOcid) {
            if (tenancyOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "tenancyOcid");
            }
            this.tenancyOcid = tenancyOcid;
            return this;
        }
        @CustomType.Setter
        public Builder upstreamServerGroups(List<GetDomainsCloudGateMappingUpstreamServerGroup> upstreamServerGroups) {
            if (upstreamServerGroups == null) {
              throw new MissingRequiredPropertyException("GetDomainsCloudGateMappingResult", "upstreamServerGroups");
            }
            this.upstreamServerGroups = upstreamServerGroups;
            return this;
        }
        public Builder upstreamServerGroups(GetDomainsCloudGateMappingUpstreamServerGroup... upstreamServerGroups) {
            return upstreamServerGroups(List.of(upstreamServerGroups));
        }
        public GetDomainsCloudGateMappingResult build() {
            final var _resultValue = new GetDomainsCloudGateMappingResult();
            _resultValue.attributeSets = attributeSets;
            _resultValue.attributes = attributes;
            _resultValue.authorization = authorization;
            _resultValue.cloudGateMappingId = cloudGateMappingId;
            _resultValue.cloudGates = cloudGates;
            _resultValue.compartmentOcid = compartmentOcid;
            _resultValue.deleteInProgress = deleteInProgress;
            _resultValue.description = description;
            _resultValue.domainOcid = domainOcid;
            _resultValue.gatewayApps = gatewayApps;
            _resultValue.id = id;
            _resultValue.idcsCreatedBies = idcsCreatedBies;
            _resultValue.idcsEndpoint = idcsEndpoint;
            _resultValue.idcsLastModifiedBies = idcsLastModifiedBies;
            _resultValue.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            _resultValue.idcsPreventedOperations = idcsPreventedOperations;
            _resultValue.isOpcService = isOpcService;
            _resultValue.metas = metas;
            _resultValue.nginxSettings = nginxSettings;
            _resultValue.ocid = ocid;
            _resultValue.policyName = policyName;
            _resultValue.proxyPass = proxyPass;
            _resultValue.resourcePrefix = resourcePrefix;
            _resultValue.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            _resultValue.schemas = schemas;
            _resultValue.servers = servers;
            _resultValue.tags = tags;
            _resultValue.tenancyOcid = tenancyOcid;
            _resultValue.upstreamServerGroups = upstreamServerGroups;
            return _resultValue;
        }
    }
}
