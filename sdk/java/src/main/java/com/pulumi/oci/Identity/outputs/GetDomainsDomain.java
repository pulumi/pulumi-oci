// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsDomainReplicaRegion;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsDomain {
    private @Nullable String adminEmail;
    private @Nullable String adminFirstName;
    private @Nullable String adminLastName;
    private @Nullable String adminUserName;
    /**
     * @return The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The domain descripition
     * 
     */
    private @Nullable String description;
    /**
     * @return The mutable display name of the domain
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The home region for the domain. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
     * 
     */
    private @Nullable String homeRegion;
    /**
     * @return The region specific domain URL
     * 
     */
    private @Nullable String homeRegionUrl;
    /**
     * @return The OCID of the domain
     * 
     */
    private @Nullable String id;
    /**
     * @return Indicate if the domain is visible at login screen or not
     * 
     */
    private @Nullable Boolean isHiddenOnLogin;
    private @Nullable Boolean isNotificationBypassed;
    private @Nullable Boolean isPrimaryEmailRequired;
    /**
     * @return The domain license type
     * 
     */
    private @Nullable String licenseType;
    /**
     * @return Any additional details about the current state of the Domain.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The regions domain is replication to.
     * 
     */
    private @Nullable List<GetDomainsDomainReplicaRegion> replicaRegions;
    /**
     * @return A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     * 
     */
    private @Nullable String state;
    /**
     * @return Date and time the domain was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The domain type
     * 
     */
    private @Nullable String type;
    /**
     * @return The region agnostic domain URL
     * 
     */
    private @Nullable String url;

    private GetDomainsDomain() {}
    public Optional<String> adminEmail() {
        return Optional.ofNullable(this.adminEmail);
    }
    public Optional<String> adminFirstName() {
        return Optional.ofNullable(this.adminFirstName);
    }
    public Optional<String> adminLastName() {
        return Optional.ofNullable(this.adminLastName);
    }
    public Optional<String> adminUserName() {
        return Optional.ofNullable(this.adminUserName);
    }
    /**
     * @return The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The domain descripition
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The mutable display name of the domain
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The home region for the domain. See [Regions and Availability Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm) for the full list of supported region names.  Example: `us-phoenix-1`
     * 
     */
    public Optional<String> homeRegion() {
        return Optional.ofNullable(this.homeRegion);
    }
    /**
     * @return The region specific domain URL
     * 
     */
    public Optional<String> homeRegionUrl() {
        return Optional.ofNullable(this.homeRegionUrl);
    }
    /**
     * @return The OCID of the domain
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Indicate if the domain is visible at login screen or not
     * 
     */
    public Optional<Boolean> isHiddenOnLogin() {
        return Optional.ofNullable(this.isHiddenOnLogin);
    }
    public Optional<Boolean> isNotificationBypassed() {
        return Optional.ofNullable(this.isNotificationBypassed);
    }
    public Optional<Boolean> isPrimaryEmailRequired() {
        return Optional.ofNullable(this.isPrimaryEmailRequired);
    }
    /**
     * @return The domain license type
     * 
     */
    public Optional<String> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }
    /**
     * @return Any additional details about the current state of the Domain.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The regions domain is replication to.
     * 
     */
    public List<GetDomainsDomainReplicaRegion> replicaRegions() {
        return this.replicaRegions == null ? List.of() : this.replicaRegions;
    }
    /**
     * @return A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Date and time the domain was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The domain type
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return The region agnostic domain URL
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsDomain defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String adminEmail;
        private @Nullable String adminFirstName;
        private @Nullable String adminLastName;
        private @Nullable String adminUserName;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String homeRegion;
        private @Nullable String homeRegionUrl;
        private @Nullable String id;
        private @Nullable Boolean isHiddenOnLogin;
        private @Nullable Boolean isNotificationBypassed;
        private @Nullable Boolean isPrimaryEmailRequired;
        private @Nullable String licenseType;
        private @Nullable String lifecycleDetails;
        private @Nullable List<GetDomainsDomainReplicaRegion> replicaRegions;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String type;
        private @Nullable String url;
        public Builder() {}
        public Builder(GetDomainsDomain defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminEmail = defaults.adminEmail;
    	      this.adminFirstName = defaults.adminFirstName;
    	      this.adminLastName = defaults.adminLastName;
    	      this.adminUserName = defaults.adminUserName;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.homeRegion = defaults.homeRegion;
    	      this.homeRegionUrl = defaults.homeRegionUrl;
    	      this.id = defaults.id;
    	      this.isHiddenOnLogin = defaults.isHiddenOnLogin;
    	      this.isNotificationBypassed = defaults.isNotificationBypassed;
    	      this.isPrimaryEmailRequired = defaults.isPrimaryEmailRequired;
    	      this.licenseType = defaults.licenseType;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.replicaRegions = defaults.replicaRegions;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder adminEmail(@Nullable String adminEmail) {
            this.adminEmail = adminEmail;
            return this;
        }
        @CustomType.Setter
        public Builder adminFirstName(@Nullable String adminFirstName) {
            this.adminFirstName = adminFirstName;
            return this;
        }
        @CustomType.Setter
        public Builder adminLastName(@Nullable String adminLastName) {
            this.adminLastName = adminLastName;
            return this;
        }
        @CustomType.Setter
        public Builder adminUserName(@Nullable String adminUserName) {
            this.adminUserName = adminUserName;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder homeRegion(@Nullable String homeRegion) {
            this.homeRegion = homeRegion;
            return this;
        }
        @CustomType.Setter
        public Builder homeRegionUrl(@Nullable String homeRegionUrl) {
            this.homeRegionUrl = homeRegionUrl;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isHiddenOnLogin(@Nullable Boolean isHiddenOnLogin) {
            this.isHiddenOnLogin = isHiddenOnLogin;
            return this;
        }
        @CustomType.Setter
        public Builder isNotificationBypassed(@Nullable Boolean isNotificationBypassed) {
            this.isNotificationBypassed = isNotificationBypassed;
            return this;
        }
        @CustomType.Setter
        public Builder isPrimaryEmailRequired(@Nullable Boolean isPrimaryEmailRequired) {
            this.isPrimaryEmailRequired = isPrimaryEmailRequired;
            return this;
        }
        @CustomType.Setter
        public Builder licenseType(@Nullable String licenseType) {
            this.licenseType = licenseType;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder replicaRegions(@Nullable List<GetDomainsDomainReplicaRegion> replicaRegions) {
            this.replicaRegions = replicaRegions;
            return this;
        }
        public Builder replicaRegions(GetDomainsDomainReplicaRegion... replicaRegions) {
            return replicaRegions(List.of(replicaRegions));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public GetDomainsDomain build() {
            final var o = new GetDomainsDomain();
            o.adminEmail = adminEmail;
            o.adminFirstName = adminFirstName;
            o.adminLastName = adminLastName;
            o.adminUserName = adminUserName;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.homeRegion = homeRegion;
            o.homeRegionUrl = homeRegionUrl;
            o.id = id;
            o.isHiddenOnLogin = isHiddenOnLogin;
            o.isNotificationBypassed = isNotificationBypassed;
            o.isPrimaryEmailRequired = isPrimaryEmailRequired;
            o.licenseType = licenseType;
            o.lifecycleDetails = lifecycleDetails;
            o.replicaRegions = replicaRegions;
            o.state = state;
            o.timeCreated = timeCreated;
            o.type = type;
            o.url = url;
            return o;
        }
    }
}
