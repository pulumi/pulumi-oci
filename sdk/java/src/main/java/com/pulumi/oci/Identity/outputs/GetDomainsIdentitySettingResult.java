// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsIdentitySettingIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsIdentitySettingIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsIdentitySettingMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsIdentitySettingMyProfile;
import com.pulumi.oci.Identity.outputs.GetDomainsIdentitySettingPosixGid;
import com.pulumi.oci.Identity.outputs.GetDomainsIdentitySettingPosixUid;
import com.pulumi.oci.Identity.outputs.GetDomainsIdentitySettingTag;
import com.pulumi.oci.Identity.outputs.GetDomainsIdentitySettingToken;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsIdentitySettingResult {
    private @Nullable List<String> attributeSets;
    private @Nullable String attributes;
    private @Nullable String authorization;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String compartmentOcid;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private @Nullable Boolean deleteInProgress;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String domainOcid;
    /**
     * @return Indicates whether to show the &#39;user-is-locked&#39; message during authentication if the user is already locked. The default value is false, which tells the system to show a generic &#39;authentication-failure&#39; message. This is the most secure behavior. If the option is set to true, the system shows a more detailed &#39;error-message&#39; that says the user is locked. This is more helpful but is less secure, for example, because the difference in error-messages could be used to determine which usernames exist and which do not.
     * 
     */
    private @Nullable Boolean emitLockedMessageWhenUserIsLocked;
    /**
     * @return An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     */
    private @Nullable String externalId;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private @Nullable String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private @Nullable List<GetDomainsIdentitySettingIdcsCreatedBy> idcsCreatedBies;
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private @Nullable List<GetDomainsIdentitySettingIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private @Nullable String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private @Nullable List<String> idcsPreventedOperations;
    private String identitySettingId;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private @Nullable List<GetDomainsIdentitySettingMeta> metas;
    /**
     * @return Whether to allow users to update their own profile.
     * 
     */
    private @Nullable List<GetDomainsIdentitySettingMyProfile> myProfiles;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private @Nullable String ocid;
    /**
     * @return A list of Posix Gid settings.
     * 
     */
    private @Nullable List<GetDomainsIdentitySettingPosixGid> posixGids;
    /**
     * @return A list of Posix Uid settings.
     * 
     */
    private @Nullable List<GetDomainsIdentitySettingPosixUid> posixUids;
    /**
     * @return Indicates whether the primary email is required.
     * 
     */
    private @Nullable Boolean primaryEmailRequired;
    /**
     * @return Indicates whether to remove non-RFC5322 compliant emails before creating a user.
     * 
     */
    private @Nullable Boolean removeInvalidEmails;
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return **Added In:** 2302092332
     * 
     */
    private @Nullable Boolean returnInactiveOverLockedMessage;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private @Nullable List<String> schemas;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private @Nullable List<GetDomainsIdentitySettingTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String tenancyOcid;
    /**
     * @return A list of tokens and their expiry length.
     * 
     */
    private @Nullable List<GetDomainsIdentitySettingToken> tokens;
    /**
     * @return Indicates whether a user is allowed to change their own recovery email.
     * 
     */
    private @Nullable Boolean userAllowedToSetRecoveryEmail;

    private GetDomainsIdentitySettingResult() {}
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> compartmentOcid() {
        return Optional.ofNullable(this.compartmentOcid);
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Optional<Boolean> deleteInProgress() {
        return Optional.ofNullable(this.deleteInProgress);
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> domainOcid() {
        return Optional.ofNullable(this.domainOcid);
    }
    /**
     * @return Indicates whether to show the &#39;user-is-locked&#39; message during authentication if the user is already locked. The default value is false, which tells the system to show a generic &#39;authentication-failure&#39; message. This is the most secure behavior. If the option is set to true, the system shows a more detailed &#39;error-message&#39; that says the user is locked. This is more helpful but is less secure, for example, because the difference in error-messages could be used to determine which usernames exist and which do not.
     * 
     */
    public Optional<Boolean> emitLockedMessageWhenUserIsLocked() {
        return Optional.ofNullable(this.emitLockedMessageWhenUserIsLocked);
    }
    /**
     * @return An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     */
    public Optional<String> externalId() {
        return Optional.ofNullable(this.externalId);
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsIdentitySettingIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies == null ? List.of() : this.idcsCreatedBies;
    }
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsIdentitySettingIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies == null ? List.of() : this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public Optional<String> idcsLastUpgradedInRelease() {
        return Optional.ofNullable(this.idcsLastUpgradedInRelease);
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations == null ? List.of() : this.idcsPreventedOperations;
    }
    public String identitySettingId() {
        return this.identitySettingId;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsIdentitySettingMeta> metas() {
        return this.metas == null ? List.of() : this.metas;
    }
    /**
     * @return Whether to allow users to update their own profile.
     * 
     */
    public List<GetDomainsIdentitySettingMyProfile> myProfiles() {
        return this.myProfiles == null ? List.of() : this.myProfiles;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public Optional<String> ocid() {
        return Optional.ofNullable(this.ocid);
    }
    /**
     * @return A list of Posix Gid settings.
     * 
     */
    public List<GetDomainsIdentitySettingPosixGid> posixGids() {
        return this.posixGids == null ? List.of() : this.posixGids;
    }
    /**
     * @return A list of Posix Uid settings.
     * 
     */
    public List<GetDomainsIdentitySettingPosixUid> posixUids() {
        return this.posixUids == null ? List.of() : this.posixUids;
    }
    /**
     * @return Indicates whether the primary email is required.
     * 
     */
    public Optional<Boolean> primaryEmailRequired() {
        return Optional.ofNullable(this.primaryEmailRequired);
    }
    /**
     * @return Indicates whether to remove non-RFC5322 compliant emails before creating a user.
     * 
     */
    public Optional<Boolean> removeInvalidEmails() {
        return Optional.ofNullable(this.removeInvalidEmails);
    }
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return **Added In:** 2302092332
     * 
     */
    public Optional<Boolean> returnInactiveOverLockedMessage() {
        return Optional.ofNullable(this.returnInactiveOverLockedMessage);
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas == null ? List.of() : this.schemas;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsIdentitySettingTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> tenancyOcid() {
        return Optional.ofNullable(this.tenancyOcid);
    }
    /**
     * @return A list of tokens and their expiry length.
     * 
     */
    public List<GetDomainsIdentitySettingToken> tokens() {
        return this.tokens == null ? List.of() : this.tokens;
    }
    /**
     * @return Indicates whether a user is allowed to change their own recovery email.
     * 
     */
    public Optional<Boolean> userAllowedToSetRecoveryEmail() {
        return Optional.ofNullable(this.userAllowedToSetRecoveryEmail);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsIdentitySettingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private @Nullable String authorization;
        private @Nullable String compartmentOcid;
        private @Nullable Boolean deleteInProgress;
        private @Nullable String domainOcid;
        private @Nullable Boolean emitLockedMessageWhenUserIsLocked;
        private @Nullable String externalId;
        private @Nullable String id;
        private @Nullable List<GetDomainsIdentitySettingIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private @Nullable List<GetDomainsIdentitySettingIdcsLastModifiedBy> idcsLastModifiedBies;
        private @Nullable String idcsLastUpgradedInRelease;
        private @Nullable List<String> idcsPreventedOperations;
        private String identitySettingId;
        private @Nullable List<GetDomainsIdentitySettingMeta> metas;
        private @Nullable List<GetDomainsIdentitySettingMyProfile> myProfiles;
        private @Nullable String ocid;
        private @Nullable List<GetDomainsIdentitySettingPosixGid> posixGids;
        private @Nullable List<GetDomainsIdentitySettingPosixUid> posixUids;
        private @Nullable Boolean primaryEmailRequired;
        private @Nullable Boolean removeInvalidEmails;
        private @Nullable String resourceTypeSchemaVersion;
        private @Nullable Boolean returnInactiveOverLockedMessage;
        private @Nullable List<String> schemas;
        private @Nullable List<GetDomainsIdentitySettingTag> tags;
        private @Nullable String tenancyOcid;
        private @Nullable List<GetDomainsIdentitySettingToken> tokens;
        private @Nullable Boolean userAllowedToSetRecoveryEmail;
        public Builder() {}
        public Builder(GetDomainsIdentitySettingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authorization = defaults.authorization;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.domainOcid = defaults.domainOcid;
    	      this.emitLockedMessageWhenUserIsLocked = defaults.emitLockedMessageWhenUserIsLocked;
    	      this.externalId = defaults.externalId;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.identitySettingId = defaults.identitySettingId;
    	      this.metas = defaults.metas;
    	      this.myProfiles = defaults.myProfiles;
    	      this.ocid = defaults.ocid;
    	      this.posixGids = defaults.posixGids;
    	      this.posixUids = defaults.posixUids;
    	      this.primaryEmailRequired = defaults.primaryEmailRequired;
    	      this.removeInvalidEmails = defaults.removeInvalidEmails;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.returnInactiveOverLockedMessage = defaults.returnInactiveOverLockedMessage;
    	      this.schemas = defaults.schemas;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.tokens = defaults.tokens;
    	      this.userAllowedToSetRecoveryEmail = defaults.userAllowedToSetRecoveryEmail;
        }

        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {
            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentOcid(@Nullable String compartmentOcid) {
            this.compartmentOcid = compartmentOcid;
            return this;
        }
        @CustomType.Setter
        public Builder deleteInProgress(@Nullable Boolean deleteInProgress) {
            this.deleteInProgress = deleteInProgress;
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(@Nullable String domainOcid) {
            this.domainOcid = domainOcid;
            return this;
        }
        @CustomType.Setter
        public Builder emitLockedMessageWhenUserIsLocked(@Nullable Boolean emitLockedMessageWhenUserIsLocked) {
            this.emitLockedMessageWhenUserIsLocked = emitLockedMessageWhenUserIsLocked;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(@Nullable String externalId) {
            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(@Nullable List<GetDomainsIdentitySettingIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = idcsCreatedBies;
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsIdentitySettingIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            this.idcsEndpoint = Objects.requireNonNull(idcsEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(@Nullable List<GetDomainsIdentitySettingIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsIdentitySettingIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(@Nullable String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(@Nullable List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder identitySettingId(String identitySettingId) {
            this.identitySettingId = Objects.requireNonNull(identitySettingId);
            return this;
        }
        @CustomType.Setter
        public Builder metas(@Nullable List<GetDomainsIdentitySettingMeta> metas) {
            this.metas = metas;
            return this;
        }
        public Builder metas(GetDomainsIdentitySettingMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder myProfiles(@Nullable List<GetDomainsIdentitySettingMyProfile> myProfiles) {
            this.myProfiles = myProfiles;
            return this;
        }
        public Builder myProfiles(GetDomainsIdentitySettingMyProfile... myProfiles) {
            return myProfiles(List.of(myProfiles));
        }
        @CustomType.Setter
        public Builder ocid(@Nullable String ocid) {
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder posixGids(@Nullable List<GetDomainsIdentitySettingPosixGid> posixGids) {
            this.posixGids = posixGids;
            return this;
        }
        public Builder posixGids(GetDomainsIdentitySettingPosixGid... posixGids) {
            return posixGids(List.of(posixGids));
        }
        @CustomType.Setter
        public Builder posixUids(@Nullable List<GetDomainsIdentitySettingPosixUid> posixUids) {
            this.posixUids = posixUids;
            return this;
        }
        public Builder posixUids(GetDomainsIdentitySettingPosixUid... posixUids) {
            return posixUids(List.of(posixUids));
        }
        @CustomType.Setter
        public Builder primaryEmailRequired(@Nullable Boolean primaryEmailRequired) {
            this.primaryEmailRequired = primaryEmailRequired;
            return this;
        }
        @CustomType.Setter
        public Builder removeInvalidEmails(@Nullable Boolean removeInvalidEmails) {
            this.removeInvalidEmails = removeInvalidEmails;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {
            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder returnInactiveOverLockedMessage(@Nullable Boolean returnInactiveOverLockedMessage) {
            this.returnInactiveOverLockedMessage = returnInactiveOverLockedMessage;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(@Nullable List<String> schemas) {
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetDomainsIdentitySettingTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetDomainsIdentitySettingTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(@Nullable String tenancyOcid) {
            this.tenancyOcid = tenancyOcid;
            return this;
        }
        @CustomType.Setter
        public Builder tokens(@Nullable List<GetDomainsIdentitySettingToken> tokens) {
            this.tokens = tokens;
            return this;
        }
        public Builder tokens(GetDomainsIdentitySettingToken... tokens) {
            return tokens(List.of(tokens));
        }
        @CustomType.Setter
        public Builder userAllowedToSetRecoveryEmail(@Nullable Boolean userAllowedToSetRecoveryEmail) {
            this.userAllowedToSetRecoveryEmail = userAllowedToSetRecoveryEmail;
            return this;
        }
        public GetDomainsIdentitySettingResult build() {
            final var o = new GetDomainsIdentitySettingResult();
            o.attributeSets = attributeSets;
            o.attributes = attributes;
            o.authorization = authorization;
            o.compartmentOcid = compartmentOcid;
            o.deleteInProgress = deleteInProgress;
            o.domainOcid = domainOcid;
            o.emitLockedMessageWhenUserIsLocked = emitLockedMessageWhenUserIsLocked;
            o.externalId = externalId;
            o.id = id;
            o.idcsCreatedBies = idcsCreatedBies;
            o.idcsEndpoint = idcsEndpoint;
            o.idcsLastModifiedBies = idcsLastModifiedBies;
            o.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            o.idcsPreventedOperations = idcsPreventedOperations;
            o.identitySettingId = identitySettingId;
            o.metas = metas;
            o.myProfiles = myProfiles;
            o.ocid = ocid;
            o.posixGids = posixGids;
            o.posixUids = posixUids;
            o.primaryEmailRequired = primaryEmailRequired;
            o.removeInvalidEmails = removeInvalidEmails;
            o.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            o.returnInactiveOverLockedMessage = returnInactiveOverLockedMessage;
            o.schemas = schemas;
            o.tags = tags;
            o.tenancyOcid = tenancyOcid;
            o.tokens = tokens;
            o.userAllowedToSetRecoveryEmail = userAllowedToSetRecoveryEmail;
            return o;
        }
    }
}
