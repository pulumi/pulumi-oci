// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppApp;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppOwner;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppTag;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppUserWalletArtifact;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsMyAppsMyApp {
    /**
     * @return Type of the Acccount
     * 
     */
    private String accountType;
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
     * 
     */
    private Boolean active;
    /**
     * @return Application on which the account is based
     * 
     */
    private List<GetDomainsMyAppsMyAppApp> apps;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private String compartmentOcid;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private Boolean deleteInProgress;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private String domainOcid;
    /**
     * @return If true, this account has been marked as a favorite of the User who owns it.
     * 
     */
    private Boolean favorite;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private List<GetDomainsMyAppsMyAppIdcsCreatedBy> idcsCreatedBies;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private List<GetDomainsMyAppsMyAppIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private List<String> idcsPreventedOperations;
    /**
     * @return If true, indicates that this managed object is an account, which is an identity that represents a user in the context of a specific application.
     * 
     */
    private Boolean isAccount;
    /**
     * @return Last accessed timestamp of an application
     * 
     */
    private String lastAccessed;
    /**
     * @return The URL that will be used to launch the application.
     * 
     */
    private String launchUrl;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private List<GetDomainsMyAppsMyAppMeta> metas;
    /**
     * @return Name of the Account
     * 
     */
    private String name;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private String ocid;
    /**
     * @return Owning user of the account
     * 
     */
    private List<GetDomainsMyAppsMyAppOwner> owners;
    /**
     * @return The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.
     * 
     */
    private List<String> schemas;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private List<GetDomainsMyAppsMyAppTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private String tenancyOcid;
    /**
     * @return Unique identifier of the Account.
     * 
     */
    private String uid;
    /**
     * @return The UserWalletArtifact that contains the credentials that the system will use in performing Secure Form-Fill to log the User into this application.
     * 
     */
    private List<GetDomainsMyAppsMyAppUserWalletArtifact> userWalletArtifacts;

    private GetDomainsMyAppsMyApp() {}
    /**
     * @return Type of the Acccount
     * 
     */
    public String accountType() {
        return this.accountType;
    }
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
     * 
     */
    public Boolean active() {
        return this.active;
    }
    /**
     * @return Application on which the account is based
     * 
     */
    public List<GetDomainsMyAppsMyAppApp> apps() {
        return this.apps;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public String compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Boolean deleteInProgress() {
        return this.deleteInProgress;
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public String domainOcid() {
        return this.domainOcid;
    }
    /**
     * @return If true, this account has been marked as a favorite of the User who owns it.
     * 
     */
    public Boolean favorite() {
        return this.favorite;
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsMyAppsMyAppIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsMyAppsMyAppIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public String idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * @return If true, indicates that this managed object is an account, which is an identity that represents a user in the context of a specific application.
     * 
     */
    public Boolean isAccount() {
        return this.isAccount;
    }
    /**
     * @return Last accessed timestamp of an application
     * 
     */
    public String lastAccessed() {
        return this.lastAccessed;
    }
    /**
     * @return The URL that will be used to launch the application.
     * 
     */
    public String launchUrl() {
        return this.launchUrl;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsMyAppsMyAppMeta> metas() {
        return this.metas;
    }
    /**
     * @return Name of the Account
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return Owning user of the account
     * 
     */
    public List<GetDomainsMyAppsMyAppOwner> owners() {
        return this.owners;
    }
    /**
     * @return The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.
     * 
     */
    public List<String> schemas() {
        return this.schemas;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsMyAppsMyAppTag> tags() {
        return this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public String tenancyOcid() {
        return this.tenancyOcid;
    }
    /**
     * @return Unique identifier of the Account.
     * 
     */
    public String uid() {
        return this.uid;
    }
    /**
     * @return The UserWalletArtifact that contains the credentials that the system will use in performing Secure Form-Fill to log the User into this application.
     * 
     */
    public List<GetDomainsMyAppsMyAppUserWalletArtifact> userWalletArtifacts() {
        return this.userWalletArtifacts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsMyAppsMyApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountType;
        private Boolean active;
        private List<GetDomainsMyAppsMyAppApp> apps;
        private String compartmentOcid;
        private Boolean deleteInProgress;
        private String domainOcid;
        private Boolean favorite;
        private String id;
        private List<GetDomainsMyAppsMyAppIdcsCreatedBy> idcsCreatedBies;
        private List<GetDomainsMyAppsMyAppIdcsLastModifiedBy> idcsLastModifiedBies;
        private String idcsLastUpgradedInRelease;
        private List<String> idcsPreventedOperations;
        private Boolean isAccount;
        private String lastAccessed;
        private String launchUrl;
        private List<GetDomainsMyAppsMyAppMeta> metas;
        private String name;
        private String ocid;
        private List<GetDomainsMyAppsMyAppOwner> owners;
        private List<String> schemas;
        private List<GetDomainsMyAppsMyAppTag> tags;
        private String tenancyOcid;
        private String uid;
        private List<GetDomainsMyAppsMyAppUserWalletArtifact> userWalletArtifacts;
        public Builder() {}
        public Builder(GetDomainsMyAppsMyApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountType = defaults.accountType;
    	      this.active = defaults.active;
    	      this.apps = defaults.apps;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.domainOcid = defaults.domainOcid;
    	      this.favorite = defaults.favorite;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.isAccount = defaults.isAccount;
    	      this.lastAccessed = defaults.lastAccessed;
    	      this.launchUrl = defaults.launchUrl;
    	      this.metas = defaults.metas;
    	      this.name = defaults.name;
    	      this.ocid = defaults.ocid;
    	      this.owners = defaults.owners;
    	      this.schemas = defaults.schemas;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.uid = defaults.uid;
    	      this.userWalletArtifacts = defaults.userWalletArtifacts;
        }

        @CustomType.Setter
        public Builder accountType(String accountType) {
            this.accountType = Objects.requireNonNull(accountType);
            return this;
        }
        @CustomType.Setter
        public Builder active(Boolean active) {
            this.active = Objects.requireNonNull(active);
            return this;
        }
        @CustomType.Setter
        public Builder apps(List<GetDomainsMyAppsMyAppApp> apps) {
            this.apps = Objects.requireNonNull(apps);
            return this;
        }
        public Builder apps(GetDomainsMyAppsMyAppApp... apps) {
            return apps(List.of(apps));
        }
        @CustomType.Setter
        public Builder compartmentOcid(String compartmentOcid) {
            this.compartmentOcid = Objects.requireNonNull(compartmentOcid);
            return this;
        }
        @CustomType.Setter
        public Builder deleteInProgress(Boolean deleteInProgress) {
            this.deleteInProgress = Objects.requireNonNull(deleteInProgress);
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(String domainOcid) {
            this.domainOcid = Objects.requireNonNull(domainOcid);
            return this;
        }
        @CustomType.Setter
        public Builder favorite(Boolean favorite) {
            this.favorite = Objects.requireNonNull(favorite);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(List<GetDomainsMyAppsMyAppIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = Objects.requireNonNull(idcsCreatedBies);
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsMyAppsMyAppIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(List<GetDomainsMyAppsMyAppIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = Objects.requireNonNull(idcsLastModifiedBies);
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsMyAppsMyAppIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = Objects.requireNonNull(idcsLastUpgradedInRelease);
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = Objects.requireNonNull(idcsPreventedOperations);
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder isAccount(Boolean isAccount) {
            this.isAccount = Objects.requireNonNull(isAccount);
            return this;
        }
        @CustomType.Setter
        public Builder lastAccessed(String lastAccessed) {
            this.lastAccessed = Objects.requireNonNull(lastAccessed);
            return this;
        }
        @CustomType.Setter
        public Builder launchUrl(String launchUrl) {
            this.launchUrl = Objects.requireNonNull(launchUrl);
            return this;
        }
        @CustomType.Setter
        public Builder metas(List<GetDomainsMyAppsMyAppMeta> metas) {
            this.metas = Objects.requireNonNull(metas);
            return this;
        }
        public Builder metas(GetDomainsMyAppsMyAppMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            this.ocid = Objects.requireNonNull(ocid);
            return this;
        }
        @CustomType.Setter
        public Builder owners(List<GetDomainsMyAppsMyAppOwner> owners) {
            this.owners = Objects.requireNonNull(owners);
            return this;
        }
        public Builder owners(GetDomainsMyAppsMyAppOwner... owners) {
            return owners(List.of(owners));
        }
        @CustomType.Setter
        public Builder schemas(List<String> schemas) {
            this.schemas = Objects.requireNonNull(schemas);
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder tags(List<GetDomainsMyAppsMyAppTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetDomainsMyAppsMyAppTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(String tenancyOcid) {
            this.tenancyOcid = Objects.requireNonNull(tenancyOcid);
            return this;
        }
        @CustomType.Setter
        public Builder uid(String uid) {
            this.uid = Objects.requireNonNull(uid);
            return this;
        }
        @CustomType.Setter
        public Builder userWalletArtifacts(List<GetDomainsMyAppsMyAppUserWalletArtifact> userWalletArtifacts) {
            this.userWalletArtifacts = Objects.requireNonNull(userWalletArtifacts);
            return this;
        }
        public Builder userWalletArtifacts(GetDomainsMyAppsMyAppUserWalletArtifact... userWalletArtifacts) {
            return userWalletArtifacts(List.of(userWalletArtifacts));
        }
        public GetDomainsMyAppsMyApp build() {
            final var _resultValue = new GetDomainsMyAppsMyApp();
            _resultValue.accountType = accountType;
            _resultValue.active = active;
            _resultValue.apps = apps;
            _resultValue.compartmentOcid = compartmentOcid;
            _resultValue.deleteInProgress = deleteInProgress;
            _resultValue.domainOcid = domainOcid;
            _resultValue.favorite = favorite;
            _resultValue.id = id;
            _resultValue.idcsCreatedBies = idcsCreatedBies;
            _resultValue.idcsLastModifiedBies = idcsLastModifiedBies;
            _resultValue.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            _resultValue.idcsPreventedOperations = idcsPreventedOperations;
            _resultValue.isAccount = isAccount;
            _resultValue.lastAccessed = lastAccessed;
            _resultValue.launchUrl = launchUrl;
            _resultValue.metas = metas;
            _resultValue.name = name;
            _resultValue.ocid = ocid;
            _resultValue.owners = owners;
            _resultValue.schemas = schemas;
            _resultValue.tags = tags;
            _resultValue.tenancyOcid = tenancyOcid;
            _resultValue.uid = uid;
            _resultValue.userWalletArtifacts = userWalletArtifacts;
            return _resultValue;
        }
    }
}
