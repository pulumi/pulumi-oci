// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppApp;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppOwner;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppTag;
import com.pulumi.oci.Identity.outputs.GetDomainsMyAppsMyAppUserWalletArtifact;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsMyAppsMyApp {
    /**
     * @return Type of the Acccount
     * 
     */
    private @Nullable String accountType;
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
     * 
     */
    private @Nullable Boolean active;
    /**
     * @return Application on which the account is based
     * 
     */
    private @Nullable List<GetDomainsMyAppsMyAppApp> apps;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String compartmentOcid;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private @Nullable Boolean deleteInProgress;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String domainOcid;
    /**
     * @return If true, this account has been marked as a favorite of the User who owns it.
     * 
     */
    private @Nullable Boolean favorite;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private @Nullable String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private @Nullable List<GetDomainsMyAppsMyAppIdcsCreatedBy> idcsCreatedBies;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private @Nullable List<GetDomainsMyAppsMyAppIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private @Nullable String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private @Nullable List<String> idcsPreventedOperations;
    /**
     * @return If true, indicates that this managed object is an account, which is an identity that represents a user in the context of a specific application.
     * 
     */
    private @Nullable Boolean isAccount;
    /**
     * @return Last accessed timestamp of an application
     * 
     */
    private @Nullable String lastAccessed;
    /**
     * @return The URL that will be used to launch the application.
     * 
     */
    private @Nullable String launchUrl;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private @Nullable List<GetDomainsMyAppsMyAppMeta> metas;
    /**
     * @return Name of the Account
     * 
     */
    private @Nullable String name;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private @Nullable String ocid;
    /**
     * @return Owning user of the account
     * 
     */
    private @Nullable List<GetDomainsMyAppsMyAppOwner> owners;
    /**
     * @return The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.
     * 
     */
    private @Nullable List<String> schemas;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private @Nullable List<GetDomainsMyAppsMyAppTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private @Nullable String tenancyOcid;
    /**
     * @return Unique identifier of the Account.
     * 
     */
    private @Nullable String uid;
    /**
     * @return The UserWalletArtifact that contains the credentials that the system will use in performing Secure Form-Fill to log the User into this application.
     * 
     */
    private @Nullable List<GetDomainsMyAppsMyAppUserWalletArtifact> userWalletArtifacts;

    private GetDomainsMyAppsMyApp() {}
    /**
     * @return Type of the Acccount
     * 
     */
    public Optional<String> accountType() {
        return Optional.ofNullable(this.accountType);
    }
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
     * 
     */
    public Optional<Boolean> active() {
        return Optional.ofNullable(this.active);
    }
    /**
     * @return Application on which the account is based
     * 
     */
    public List<GetDomainsMyAppsMyAppApp> apps() {
        return this.apps == null ? List.of() : this.apps;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> compartmentOcid() {
        return Optional.ofNullable(this.compartmentOcid);
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Optional<Boolean> deleteInProgress() {
        return Optional.ofNullable(this.deleteInProgress);
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> domainOcid() {
        return Optional.ofNullable(this.domainOcid);
    }
    /**
     * @return If true, this account has been marked as a favorite of the User who owns it.
     * 
     */
    public Optional<Boolean> favorite() {
        return Optional.ofNullable(this.favorite);
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsMyAppsMyAppIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies == null ? List.of() : this.idcsCreatedBies;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsMyAppsMyAppIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies == null ? List.of() : this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public Optional<String> idcsLastUpgradedInRelease() {
        return Optional.ofNullable(this.idcsLastUpgradedInRelease);
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations == null ? List.of() : this.idcsPreventedOperations;
    }
    /**
     * @return If true, indicates that this managed object is an account, which is an identity that represents a user in the context of a specific application.
     * 
     */
    public Optional<Boolean> isAccount() {
        return Optional.ofNullable(this.isAccount);
    }
    /**
     * @return Last accessed timestamp of an application
     * 
     */
    public Optional<String> lastAccessed() {
        return Optional.ofNullable(this.lastAccessed);
    }
    /**
     * @return The URL that will be used to launch the application.
     * 
     */
    public Optional<String> launchUrl() {
        return Optional.ofNullable(this.launchUrl);
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsMyAppsMyAppMeta> metas() {
        return this.metas == null ? List.of() : this.metas;
    }
    /**
     * @return Name of the Account
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public Optional<String> ocid() {
        return Optional.ofNullable(this.ocid);
    }
    /**
     * @return Owning user of the account
     * 
     */
    public List<GetDomainsMyAppsMyAppOwner> owners() {
        return this.owners == null ? List.of() : this.owners;
    }
    /**
     * @return The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior. REQUIRED.
     * 
     */
    public List<String> schemas() {
        return this.schemas == null ? List.of() : this.schemas;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsMyAppsMyAppTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public Optional<String> tenancyOcid() {
        return Optional.ofNullable(this.tenancyOcid);
    }
    /**
     * @return Unique identifier of the Account.
     * 
     */
    public Optional<String> uid() {
        return Optional.ofNullable(this.uid);
    }
    /**
     * @return The UserWalletArtifact that contains the credentials that the system will use in performing Secure Form-Fill to log the User into this application.
     * 
     */
    public List<GetDomainsMyAppsMyAppUserWalletArtifact> userWalletArtifacts() {
        return this.userWalletArtifacts == null ? List.of() : this.userWalletArtifacts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsMyAppsMyApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountType;
        private @Nullable Boolean active;
        private @Nullable List<GetDomainsMyAppsMyAppApp> apps;
        private @Nullable String compartmentOcid;
        private @Nullable Boolean deleteInProgress;
        private @Nullable String domainOcid;
        private @Nullable Boolean favorite;
        private @Nullable String id;
        private @Nullable List<GetDomainsMyAppsMyAppIdcsCreatedBy> idcsCreatedBies;
        private @Nullable List<GetDomainsMyAppsMyAppIdcsLastModifiedBy> idcsLastModifiedBies;
        private @Nullable String idcsLastUpgradedInRelease;
        private @Nullable List<String> idcsPreventedOperations;
        private @Nullable Boolean isAccount;
        private @Nullable String lastAccessed;
        private @Nullable String launchUrl;
        private @Nullable List<GetDomainsMyAppsMyAppMeta> metas;
        private @Nullable String name;
        private @Nullable String ocid;
        private @Nullable List<GetDomainsMyAppsMyAppOwner> owners;
        private @Nullable List<String> schemas;
        private @Nullable List<GetDomainsMyAppsMyAppTag> tags;
        private @Nullable String tenancyOcid;
        private @Nullable String uid;
        private @Nullable List<GetDomainsMyAppsMyAppUserWalletArtifact> userWalletArtifacts;
        public Builder() {}
        public Builder(GetDomainsMyAppsMyApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountType = defaults.accountType;
    	      this.active = defaults.active;
    	      this.apps = defaults.apps;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.domainOcid = defaults.domainOcid;
    	      this.favorite = defaults.favorite;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.isAccount = defaults.isAccount;
    	      this.lastAccessed = defaults.lastAccessed;
    	      this.launchUrl = defaults.launchUrl;
    	      this.metas = defaults.metas;
    	      this.name = defaults.name;
    	      this.ocid = defaults.ocid;
    	      this.owners = defaults.owners;
    	      this.schemas = defaults.schemas;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.uid = defaults.uid;
    	      this.userWalletArtifacts = defaults.userWalletArtifacts;
        }

        @CustomType.Setter
        public Builder accountType(@Nullable String accountType) {
            this.accountType = accountType;
            return this;
        }
        @CustomType.Setter
        public Builder active(@Nullable Boolean active) {
            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder apps(@Nullable List<GetDomainsMyAppsMyAppApp> apps) {
            this.apps = apps;
            return this;
        }
        public Builder apps(GetDomainsMyAppsMyAppApp... apps) {
            return apps(List.of(apps));
        }
        @CustomType.Setter
        public Builder compartmentOcid(@Nullable String compartmentOcid) {
            this.compartmentOcid = compartmentOcid;
            return this;
        }
        @CustomType.Setter
        public Builder deleteInProgress(@Nullable Boolean deleteInProgress) {
            this.deleteInProgress = deleteInProgress;
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(@Nullable String domainOcid) {
            this.domainOcid = domainOcid;
            return this;
        }
        @CustomType.Setter
        public Builder favorite(@Nullable Boolean favorite) {
            this.favorite = favorite;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(@Nullable List<GetDomainsMyAppsMyAppIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = idcsCreatedBies;
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsMyAppsMyAppIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(@Nullable List<GetDomainsMyAppsMyAppIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsMyAppsMyAppIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(@Nullable String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(@Nullable List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder isAccount(@Nullable Boolean isAccount) {
            this.isAccount = isAccount;
            return this;
        }
        @CustomType.Setter
        public Builder lastAccessed(@Nullable String lastAccessed) {
            this.lastAccessed = lastAccessed;
            return this;
        }
        @CustomType.Setter
        public Builder launchUrl(@Nullable String launchUrl) {
            this.launchUrl = launchUrl;
            return this;
        }
        @CustomType.Setter
        public Builder metas(@Nullable List<GetDomainsMyAppsMyAppMeta> metas) {
            this.metas = metas;
            return this;
        }
        public Builder metas(GetDomainsMyAppsMyAppMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ocid(@Nullable String ocid) {
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder owners(@Nullable List<GetDomainsMyAppsMyAppOwner> owners) {
            this.owners = owners;
            return this;
        }
        public Builder owners(GetDomainsMyAppsMyAppOwner... owners) {
            return owners(List.of(owners));
        }
        @CustomType.Setter
        public Builder schemas(@Nullable List<String> schemas) {
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<GetDomainsMyAppsMyAppTag> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(GetDomainsMyAppsMyAppTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(@Nullable String tenancyOcid) {
            this.tenancyOcid = tenancyOcid;
            return this;
        }
        @CustomType.Setter
        public Builder uid(@Nullable String uid) {
            this.uid = uid;
            return this;
        }
        @CustomType.Setter
        public Builder userWalletArtifacts(@Nullable List<GetDomainsMyAppsMyAppUserWalletArtifact> userWalletArtifacts) {
            this.userWalletArtifacts = userWalletArtifacts;
            return this;
        }
        public Builder userWalletArtifacts(GetDomainsMyAppsMyAppUserWalletArtifact... userWalletArtifacts) {
            return userWalletArtifacts(List.of(userWalletArtifacts));
        }
        public GetDomainsMyAppsMyApp build() {
            final var o = new GetDomainsMyAppsMyApp();
            o.accountType = accountType;
            o.active = active;
            o.apps = apps;
            o.compartmentOcid = compartmentOcid;
            o.deleteInProgress = deleteInProgress;
            o.domainOcid = domainOcid;
            o.favorite = favorite;
            o.id = id;
            o.idcsCreatedBies = idcsCreatedBies;
            o.idcsLastModifiedBies = idcsLastModifiedBies;
            o.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            o.idcsPreventedOperations = idcsPreventedOperations;
            o.isAccount = isAccount;
            o.lastAccessed = lastAccessed;
            o.launchUrl = launchUrl;
            o.metas = metas;
            o.name = name;
            o.ocid = ocid;
            o.owners = owners;
            o.schemas = schemas;
            o.tags = tags;
            o.tenancyOcid = tenancyOcid;
            o.uid = uid;
            o.userWalletArtifacts = userWalletArtifacts;
            return o;
        }
    }
}
