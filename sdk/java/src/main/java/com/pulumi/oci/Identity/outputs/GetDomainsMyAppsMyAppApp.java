// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsMyAppsMyAppApp {
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
     * 
     */
    private @Nullable Boolean active;
    /**
     * @return Application icon.
     * 
     */
    private @Nullable String appIcon;
    /**
     * @return Application thumbnail.
     * 
     */
    private @Nullable String appThumbnail;
    /**
     * @return Application description
     * 
     */
    private @Nullable String description;
    /**
     * @return User display name
     * 
     */
    private @Nullable String display;
    /**
     * @return If true, this App is an AliasApp and it cannot be granted to an end user directly
     * 
     */
    private @Nullable Boolean isAliasApp;
    /**
     * @return If true, this App allows runtime services to log end users into this App automatically.
     * 
     */
    private @Nullable Boolean isLoginTarget;
    /**
     * @return If true, this application is an Oracle Public Cloud service-instance.
     * 
     */
    private @Nullable Boolean isOpcService;
    /**
     * @return The protocol that runtime services will use to log end users in to this App automatically. If &#39;OIDC&#39;, then runtime services use the OpenID Connect protocol. If &#39;SAML&#39;, then runtime services use Security Assertion Markup Language protocol.
     * 
     */
    private @Nullable String loginMechanism;
    /**
     * @return UserWalletArtifact URI
     * 
     */
    private @Nullable String ref;
    /**
     * @return This Uniform Resource Name (URN) value identifies the type of Oracle Public Cloud service of which this app is an instance.
     * 
     */
    private @Nullable String serviceTypeUrn;
    /**
     * @return If true, this App will be displayed in the MyApps page of each end-user who has access to this App.
     * 
     */
    private @Nullable Boolean showInMyApps;
    /**
     * @return UserWalletArtifact identifier
     * 
     */
    private @Nullable String value;

    private GetDomainsMyAppsMyAppApp() {}
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
     * 
     */
    public Optional<Boolean> active() {
        return Optional.ofNullable(this.active);
    }
    /**
     * @return Application icon.
     * 
     */
    public Optional<String> appIcon() {
        return Optional.ofNullable(this.appIcon);
    }
    /**
     * @return Application thumbnail.
     * 
     */
    public Optional<String> appThumbnail() {
        return Optional.ofNullable(this.appThumbnail);
    }
    /**
     * @return Application description
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return User display name
     * 
     */
    public Optional<String> display() {
        return Optional.ofNullable(this.display);
    }
    /**
     * @return If true, this App is an AliasApp and it cannot be granted to an end user directly
     * 
     */
    public Optional<Boolean> isAliasApp() {
        return Optional.ofNullable(this.isAliasApp);
    }
    /**
     * @return If true, this App allows runtime services to log end users into this App automatically.
     * 
     */
    public Optional<Boolean> isLoginTarget() {
        return Optional.ofNullable(this.isLoginTarget);
    }
    /**
     * @return If true, this application is an Oracle Public Cloud service-instance.
     * 
     */
    public Optional<Boolean> isOpcService() {
        return Optional.ofNullable(this.isOpcService);
    }
    /**
     * @return The protocol that runtime services will use to log end users in to this App automatically. If &#39;OIDC&#39;, then runtime services use the OpenID Connect protocol. If &#39;SAML&#39;, then runtime services use Security Assertion Markup Language protocol.
     * 
     */
    public Optional<String> loginMechanism() {
        return Optional.ofNullable(this.loginMechanism);
    }
    /**
     * @return UserWalletArtifact URI
     * 
     */
    public Optional<String> ref() {
        return Optional.ofNullable(this.ref);
    }
    /**
     * @return This Uniform Resource Name (URN) value identifies the type of Oracle Public Cloud service of which this app is an instance.
     * 
     */
    public Optional<String> serviceTypeUrn() {
        return Optional.ofNullable(this.serviceTypeUrn);
    }
    /**
     * @return If true, this App will be displayed in the MyApps page of each end-user who has access to this App.
     * 
     */
    public Optional<Boolean> showInMyApps() {
        return Optional.ofNullable(this.showInMyApps);
    }
    /**
     * @return UserWalletArtifact identifier
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsMyAppsMyAppApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean active;
        private @Nullable String appIcon;
        private @Nullable String appThumbnail;
        private @Nullable String description;
        private @Nullable String display;
        private @Nullable Boolean isAliasApp;
        private @Nullable Boolean isLoginTarget;
        private @Nullable Boolean isOpcService;
        private @Nullable String loginMechanism;
        private @Nullable String ref;
        private @Nullable String serviceTypeUrn;
        private @Nullable Boolean showInMyApps;
        private @Nullable String value;
        public Builder() {}
        public Builder(GetDomainsMyAppsMyAppApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.appIcon = defaults.appIcon;
    	      this.appThumbnail = defaults.appThumbnail;
    	      this.description = defaults.description;
    	      this.display = defaults.display;
    	      this.isAliasApp = defaults.isAliasApp;
    	      this.isLoginTarget = defaults.isLoginTarget;
    	      this.isOpcService = defaults.isOpcService;
    	      this.loginMechanism = defaults.loginMechanism;
    	      this.ref = defaults.ref;
    	      this.serviceTypeUrn = defaults.serviceTypeUrn;
    	      this.showInMyApps = defaults.showInMyApps;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder active(@Nullable Boolean active) {
            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder appIcon(@Nullable String appIcon) {
            this.appIcon = appIcon;
            return this;
        }
        @CustomType.Setter
        public Builder appThumbnail(@Nullable String appThumbnail) {
            this.appThumbnail = appThumbnail;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder display(@Nullable String display) {
            this.display = display;
            return this;
        }
        @CustomType.Setter
        public Builder isAliasApp(@Nullable Boolean isAliasApp) {
            this.isAliasApp = isAliasApp;
            return this;
        }
        @CustomType.Setter
        public Builder isLoginTarget(@Nullable Boolean isLoginTarget) {
            this.isLoginTarget = isLoginTarget;
            return this;
        }
        @CustomType.Setter
        public Builder isOpcService(@Nullable Boolean isOpcService) {
            this.isOpcService = isOpcService;
            return this;
        }
        @CustomType.Setter
        public Builder loginMechanism(@Nullable String loginMechanism) {
            this.loginMechanism = loginMechanism;
            return this;
        }
        @CustomType.Setter
        public Builder ref(@Nullable String ref) {
            this.ref = ref;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTypeUrn(@Nullable String serviceTypeUrn) {
            this.serviceTypeUrn = serviceTypeUrn;
            return this;
        }
        @CustomType.Setter
        public Builder showInMyApps(@Nullable Boolean showInMyApps) {
            this.showInMyApps = showInMyApps;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {
            this.value = value;
            return this;
        }
        public GetDomainsMyAppsMyAppApp build() {
            final var o = new GetDomainsMyAppsMyAppApp();
            o.active = active;
            o.appIcon = appIcon;
            o.appThumbnail = appThumbnail;
            o.description = description;
            o.display = display;
            o.isAliasApp = isAliasApp;
            o.isLoginTarget = isLoginTarget;
            o.isOpcService = isOpcService;
            o.loginMechanism = loginMechanism;
            o.ref = ref;
            o.serviceTypeUrn = serviceTypeUrn;
            o.showInMyApps = showInMyApps;
            o.value = value;
            return o;
        }
    }
}
