// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainsMyAppsMyAppApp {
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
     * 
     */
    private Boolean active;
    /**
     * @return Application icon.
     * 
     */
    private String appIcon;
    /**
     * @return Application thumbnail.
     * 
     */
    private String appThumbnail;
    /**
     * @return Application description
     * 
     */
    private String description;
    /**
     * @return User display name
     * 
     */
    private String display;
    /**
     * @return If true, this App is an AliasApp and it cannot be granted to an end user directly
     * 
     */
    private Boolean isAliasApp;
    /**
     * @return If true, this App allows runtime services to log end users into this App automatically.
     * 
     */
    private Boolean isLoginTarget;
    /**
     * @return If true, this application is an Oracle Public Cloud service-instance.
     * 
     */
    private Boolean isOpcService;
    /**
     * @return The protocol that runtime services will use to log end users in to this App automatically. If &#39;OIDC&#39;, then runtime services use the OpenID Connect protocol. If &#39;SAML&#39;, then runtime services use Security Assertion Markup Language protocol.
     * 
     */
    private String loginMechanism;
    /**
     * @return UserWalletArtifact URI
     * 
     */
    private String ref;
    /**
     * @return This Uniform Resource Name (URN) value identifies the type of Oracle Public Cloud service of which this app is an instance.
     * 
     */
    private String serviceTypeUrn;
    /**
     * @return If true, this App will be displayed in the MyApps page of each end-user who has access to this App.
     * 
     */
    private Boolean showInMyApps;
    /**
     * @return UserWalletArtifact identifier
     * 
     */
    private String value;

    private GetDomainsMyAppsMyAppApp() {}
    /**
     * @return If true, this App is able to participate in runtime services, such as automatic-login, OAuth, and SAML. If false, all runtime services are disabled for this App, and only administrative operations can be performed.
     * 
     */
    public Boolean active() {
        return this.active;
    }
    /**
     * @return Application icon.
     * 
     */
    public String appIcon() {
        return this.appIcon;
    }
    /**
     * @return Application thumbnail.
     * 
     */
    public String appThumbnail() {
        return this.appThumbnail;
    }
    /**
     * @return Application description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return User display name
     * 
     */
    public String display() {
        return this.display;
    }
    /**
     * @return If true, this App is an AliasApp and it cannot be granted to an end user directly
     * 
     */
    public Boolean isAliasApp() {
        return this.isAliasApp;
    }
    /**
     * @return If true, this App allows runtime services to log end users into this App automatically.
     * 
     */
    public Boolean isLoginTarget() {
        return this.isLoginTarget;
    }
    /**
     * @return If true, this application is an Oracle Public Cloud service-instance.
     * 
     */
    public Boolean isOpcService() {
        return this.isOpcService;
    }
    /**
     * @return The protocol that runtime services will use to log end users in to this App automatically. If &#39;OIDC&#39;, then runtime services use the OpenID Connect protocol. If &#39;SAML&#39;, then runtime services use Security Assertion Markup Language protocol.
     * 
     */
    public String loginMechanism() {
        return this.loginMechanism;
    }
    /**
     * @return UserWalletArtifact URI
     * 
     */
    public String ref() {
        return this.ref;
    }
    /**
     * @return This Uniform Resource Name (URN) value identifies the type of Oracle Public Cloud service of which this app is an instance.
     * 
     */
    public String serviceTypeUrn() {
        return this.serviceTypeUrn;
    }
    /**
     * @return If true, this App will be displayed in the MyApps page of each end-user who has access to this App.
     * 
     */
    public Boolean showInMyApps() {
        return this.showInMyApps;
    }
    /**
     * @return UserWalletArtifact identifier
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsMyAppsMyAppApp defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean active;
        private String appIcon;
        private String appThumbnail;
        private String description;
        private String display;
        private Boolean isAliasApp;
        private Boolean isLoginTarget;
        private Boolean isOpcService;
        private String loginMechanism;
        private String ref;
        private String serviceTypeUrn;
        private Boolean showInMyApps;
        private String value;
        public Builder() {}
        public Builder(GetDomainsMyAppsMyAppApp defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.active = defaults.active;
    	      this.appIcon = defaults.appIcon;
    	      this.appThumbnail = defaults.appThumbnail;
    	      this.description = defaults.description;
    	      this.display = defaults.display;
    	      this.isAliasApp = defaults.isAliasApp;
    	      this.isLoginTarget = defaults.isLoginTarget;
    	      this.isOpcService = defaults.isOpcService;
    	      this.loginMechanism = defaults.loginMechanism;
    	      this.ref = defaults.ref;
    	      this.serviceTypeUrn = defaults.serviceTypeUrn;
    	      this.showInMyApps = defaults.showInMyApps;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder active(Boolean active) {
            this.active = Objects.requireNonNull(active);
            return this;
        }
        @CustomType.Setter
        public Builder appIcon(String appIcon) {
            this.appIcon = Objects.requireNonNull(appIcon);
            return this;
        }
        @CustomType.Setter
        public Builder appThumbnail(String appThumbnail) {
            this.appThumbnail = Objects.requireNonNull(appThumbnail);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder display(String display) {
            this.display = Objects.requireNonNull(display);
            return this;
        }
        @CustomType.Setter
        public Builder isAliasApp(Boolean isAliasApp) {
            this.isAliasApp = Objects.requireNonNull(isAliasApp);
            return this;
        }
        @CustomType.Setter
        public Builder isLoginTarget(Boolean isLoginTarget) {
            this.isLoginTarget = Objects.requireNonNull(isLoginTarget);
            return this;
        }
        @CustomType.Setter
        public Builder isOpcService(Boolean isOpcService) {
            this.isOpcService = Objects.requireNonNull(isOpcService);
            return this;
        }
        @CustomType.Setter
        public Builder loginMechanism(String loginMechanism) {
            this.loginMechanism = Objects.requireNonNull(loginMechanism);
            return this;
        }
        @CustomType.Setter
        public Builder ref(String ref) {
            this.ref = Objects.requireNonNull(ref);
            return this;
        }
        @CustomType.Setter
        public Builder serviceTypeUrn(String serviceTypeUrn) {
            this.serviceTypeUrn = Objects.requireNonNull(serviceTypeUrn);
            return this;
        }
        @CustomType.Setter
        public Builder showInMyApps(Boolean showInMyApps) {
            this.showInMyApps = Objects.requireNonNull(showInMyApps);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public GetDomainsMyAppsMyAppApp build() {
            final var _resultValue = new GetDomainsMyAppsMyAppApp();
            _resultValue.active = active;
            _resultValue.appIcon = appIcon;
            _resultValue.appThumbnail = appThumbnail;
            _resultValue.description = description;
            _resultValue.display = display;
            _resultValue.isAliasApp = isAliasApp;
            _resultValue.isLoginTarget = isLoginTarget;
            _resultValue.isOpcService = isOpcService;
            _resultValue.loginMechanism = loginMechanism;
            _resultValue.ref = ref;
            _resultValue.serviceTypeUrn = serviceTypeUrn;
            _resultValue.showInMyApps = showInMyApps;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
