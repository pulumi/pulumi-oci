// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsMyCompletedApprovalsMyCompletedApprovalMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsMyCompletedApprovalsMyCompletedApprovalTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsMyCompletedApprovalsMyCompletedApproval {
    /**
     * @return The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    private String authorization;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private String compartmentOcid;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private Boolean deleteInProgress;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private String domainOcid;
    /**
     * @return Time by when ApprovalWorkflowInstance expires
     * 
     */
    private String expires;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private List<GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsCreatedBy> idcsCreatedBies;
    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private List<GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private List<String> idcsPreventedOperations;
    /**
     * @return Justification for approval
     * 
     */
    private String justification;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private List<GetDomainsMyCompletedApprovalsMyCompletedApprovalMeta> metas;
    private String myCompletedApprovalId;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private String ocid;
    /**
     * @return The time that the Request was created
     * 
     */
    private String requestCreatedTime;
    /**
     * @return Request Details
     * 
     */
    private String requestDetails;
    /**
     * @return The Unique Identifier of the request.
     * 
     */
    private String requestId;
    /**
     * @return The Oracle Cloud Infrastructure Unique Identifier of the request.
     * 
     */
    private String requestOcid;
    /**
     * @return Requested Resource display name
     * 
     */
    private String resourceDisplayName;
    /**
     * @return Requested Resource type
     * 
     */
    private String resourceType;
    /**
     * @return An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    private String resourceTypeSchemaVersion;
    /**
     * @return The time that the user responded to the Approval
     * 
     */
    private String responseTime;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private List<String> schemas;
    /**
     * @return Status of the approver&#39;s response on the approval
     * 
     */
    private String status;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private List<GetDomainsMyCompletedApprovalsMyCompletedApprovalTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private String tenancyOcid;

    private GetDomainsMyCompletedApprovalsMyCompletedApproval() {}
    /**
     * @return The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public String authorization() {
        return this.authorization;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public String compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Boolean deleteInProgress() {
        return this.deleteInProgress;
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public String domainOcid() {
        return this.domainOcid;
    }
    /**
     * @return Time by when ApprovalWorkflowInstance expires
     * 
     */
    public String expires() {
        return this.expires;
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public String idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * @return Justification for approval
     * 
     */
    public String justification() {
        return this.justification;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsMyCompletedApprovalsMyCompletedApprovalMeta> metas() {
        return this.metas;
    }
    public String myCompletedApprovalId() {
        return this.myCompletedApprovalId;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return The time that the Request was created
     * 
     */
    public String requestCreatedTime() {
        return this.requestCreatedTime;
    }
    /**
     * @return Request Details
     * 
     */
    public String requestDetails() {
        return this.requestDetails;
    }
    /**
     * @return The Unique Identifier of the request.
     * 
     */
    public String requestId() {
        return this.requestId;
    }
    /**
     * @return The Oracle Cloud Infrastructure Unique Identifier of the request.
     * 
     */
    public String requestOcid() {
        return this.requestOcid;
    }
    /**
     * @return Requested Resource display name
     * 
     */
    public String resourceDisplayName() {
        return this.resourceDisplayName;
    }
    /**
     * @return Requested Resource type
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public String resourceTypeSchemaVersion() {
        return this.resourceTypeSchemaVersion;
    }
    /**
     * @return The time that the user responded to the Approval
     * 
     */
    public String responseTime() {
        return this.responseTime;
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas;
    }
    /**
     * @return Status of the approver&#39;s response on the approval
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsMyCompletedApprovalsMyCompletedApprovalTag> tags() {
        return this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public String tenancyOcid() {
        return this.tenancyOcid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsMyCompletedApprovalsMyCompletedApproval defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String authorization;
        private String compartmentOcid;
        private Boolean deleteInProgress;
        private String domainOcid;
        private String expires;
        private String id;
        private List<GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private List<GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsLastModifiedBy> idcsLastModifiedBies;
        private String idcsLastUpgradedInRelease;
        private List<String> idcsPreventedOperations;
        private String justification;
        private List<GetDomainsMyCompletedApprovalsMyCompletedApprovalMeta> metas;
        private String myCompletedApprovalId;
        private String ocid;
        private String requestCreatedTime;
        private String requestDetails;
        private String requestId;
        private String requestOcid;
        private String resourceDisplayName;
        private String resourceType;
        private String resourceTypeSchemaVersion;
        private String responseTime;
        private List<String> schemas;
        private String status;
        private List<GetDomainsMyCompletedApprovalsMyCompletedApprovalTag> tags;
        private String tenancyOcid;
        public Builder() {}
        public Builder(GetDomainsMyCompletedApprovalsMyCompletedApproval defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorization = defaults.authorization;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.domainOcid = defaults.domainOcid;
    	      this.expires = defaults.expires;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.justification = defaults.justification;
    	      this.metas = defaults.metas;
    	      this.myCompletedApprovalId = defaults.myCompletedApprovalId;
    	      this.ocid = defaults.ocid;
    	      this.requestCreatedTime = defaults.requestCreatedTime;
    	      this.requestDetails = defaults.requestDetails;
    	      this.requestId = defaults.requestId;
    	      this.requestOcid = defaults.requestOcid;
    	      this.resourceDisplayName = defaults.resourceDisplayName;
    	      this.resourceType = defaults.resourceType;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.responseTime = defaults.responseTime;
    	      this.schemas = defaults.schemas;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
        }

        @CustomType.Setter
        public Builder authorization(String authorization) {
            this.authorization = Objects.requireNonNull(authorization);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentOcid(String compartmentOcid) {
            this.compartmentOcid = Objects.requireNonNull(compartmentOcid);
            return this;
        }
        @CustomType.Setter
        public Builder deleteInProgress(Boolean deleteInProgress) {
            this.deleteInProgress = Objects.requireNonNull(deleteInProgress);
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(String domainOcid) {
            this.domainOcid = Objects.requireNonNull(domainOcid);
            return this;
        }
        @CustomType.Setter
        public Builder expires(String expires) {
            this.expires = Objects.requireNonNull(expires);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(List<GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = Objects.requireNonNull(idcsCreatedBies);
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            this.idcsEndpoint = Objects.requireNonNull(idcsEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(List<GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = Objects.requireNonNull(idcsLastModifiedBies);
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsMyCompletedApprovalsMyCompletedApprovalIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = Objects.requireNonNull(idcsLastUpgradedInRelease);
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = Objects.requireNonNull(idcsPreventedOperations);
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder justification(String justification) {
            this.justification = Objects.requireNonNull(justification);
            return this;
        }
        @CustomType.Setter
        public Builder metas(List<GetDomainsMyCompletedApprovalsMyCompletedApprovalMeta> metas) {
            this.metas = Objects.requireNonNull(metas);
            return this;
        }
        public Builder metas(GetDomainsMyCompletedApprovalsMyCompletedApprovalMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder myCompletedApprovalId(String myCompletedApprovalId) {
            this.myCompletedApprovalId = Objects.requireNonNull(myCompletedApprovalId);
            return this;
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            this.ocid = Objects.requireNonNull(ocid);
            return this;
        }
        @CustomType.Setter
        public Builder requestCreatedTime(String requestCreatedTime) {
            this.requestCreatedTime = Objects.requireNonNull(requestCreatedTime);
            return this;
        }
        @CustomType.Setter
        public Builder requestDetails(String requestDetails) {
            this.requestDetails = Objects.requireNonNull(requestDetails);
            return this;
        }
        @CustomType.Setter
        public Builder requestId(String requestId) {
            this.requestId = Objects.requireNonNull(requestId);
            return this;
        }
        @CustomType.Setter
        public Builder requestOcid(String requestOcid) {
            this.requestOcid = Objects.requireNonNull(requestOcid);
            return this;
        }
        @CustomType.Setter
        public Builder resourceDisplayName(String resourceDisplayName) {
            this.resourceDisplayName = Objects.requireNonNull(resourceDisplayName);
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(String resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(String resourceTypeSchemaVersion) {
            this.resourceTypeSchemaVersion = Objects.requireNonNull(resourceTypeSchemaVersion);
            return this;
        }
        @CustomType.Setter
        public Builder responseTime(String responseTime) {
            this.responseTime = Objects.requireNonNull(responseTime);
            return this;
        }
        @CustomType.Setter
        public Builder schemas(List<String> schemas) {
            this.schemas = Objects.requireNonNull(schemas);
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetDomainsMyCompletedApprovalsMyCompletedApprovalTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetDomainsMyCompletedApprovalsMyCompletedApprovalTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(String tenancyOcid) {
            this.tenancyOcid = Objects.requireNonNull(tenancyOcid);
            return this;
        }
        public GetDomainsMyCompletedApprovalsMyCompletedApproval build() {
            final var _resultValue = new GetDomainsMyCompletedApprovalsMyCompletedApproval();
            _resultValue.authorization = authorization;
            _resultValue.compartmentOcid = compartmentOcid;
            _resultValue.deleteInProgress = deleteInProgress;
            _resultValue.domainOcid = domainOcid;
            _resultValue.expires = expires;
            _resultValue.id = id;
            _resultValue.idcsCreatedBies = idcsCreatedBies;
            _resultValue.idcsEndpoint = idcsEndpoint;
            _resultValue.idcsLastModifiedBies = idcsLastModifiedBies;
            _resultValue.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            _resultValue.idcsPreventedOperations = idcsPreventedOperations;
            _resultValue.justification = justification;
            _resultValue.metas = metas;
            _resultValue.myCompletedApprovalId = myCompletedApprovalId;
            _resultValue.ocid = ocid;
            _resultValue.requestCreatedTime = requestCreatedTime;
            _resultValue.requestDetails = requestDetails;
            _resultValue.requestId = requestId;
            _resultValue.requestOcid = requestOcid;
            _resultValue.resourceDisplayName = resourceDisplayName;
            _resultValue.resourceType = resourceType;
            _resultValue.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            _resultValue.responseTime = responseTime;
            _resultValue.schemas = schemas;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.tenancyOcid = tenancyOcid;
            return _resultValue;
        }
    }
}
