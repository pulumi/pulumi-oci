// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsMyDeviceAdditionalAttribute;
import com.pulumi.oci.Identity.outputs.GetDomainsMyDeviceAuthenticationFactor;
import com.pulumi.oci.Identity.outputs.GetDomainsMyDeviceIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsMyDeviceIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsMyDeviceMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsMyDeviceNonCompliance;
import com.pulumi.oci.Identity.outputs.GetDomainsMyDevicePushNotificationTarget;
import com.pulumi.oci.Identity.outputs.GetDomainsMyDeviceTag;
import com.pulumi.oci.Identity.outputs.GetDomainsMyDeviceThirdPartyFactor;
import com.pulumi.oci.Identity.outputs.GetDomainsMyDeviceUser;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsMyDeviceResult {
    /**
     * @return Device additional attributes
     * 
     */
    private List<GetDomainsMyDeviceAdditionalAttribute> additionalAttributes;
    /**
     * @return Mobile Authenticator App Version
     * 
     */
    private String appVersion;
    private @Nullable List<String> attributeSets;
    private @Nullable String attributes;
    /**
     * @return Authentication Factors
     * 
     */
    private List<GetDomainsMyDeviceAuthenticationFactor> authenticationFactors;
    /**
     * @return Authentication method used in device. For FIDO, it will contain SECURITY_KEY/WINDOWS_HELLO etc
     * 
     */
    private String authenticationMethod;
    private @Nullable String authorization;
    /**
     * @return Device base public Key
     * 
     */
    private String basePublicKey;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private String compartmentOcid;
    /**
     * @return Country code of user&#39;s Phone Number
     * 
     */
    private String countryCode;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private Boolean deleteInProgress;
    /**
     * @return Device hardware name/model
     * 
     */
    private String deviceType;
    /**
     * @return Unique id sent from device
     * 
     */
    private String deviceUuid;
    /**
     * @return Device friendly display name
     * 
     */
    private String displayName;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private String domainOcid;
    /**
     * @return Attribute added for replication log, it is not used by IDCS, just added as place holder
     * 
     */
    private Integer expiresOn;
    /**
     * @return An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued be the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     */
    private String externalId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private List<GetDomainsMyDeviceIdcsCreatedBy> idcsCreatedBies;
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private List<GetDomainsMyDeviceIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private List<String> idcsPreventedOperations;
    /**
     * @return Flag that indicates whether the device is enrolled for account recovery
     * 
     */
    private Boolean isAccRecEnabled;
    /**
     * @return Device Compliance Status
     * 
     */
    private Boolean isCompliant;
    /**
     * @return Last Sync time for device
     * 
     */
    private String lastSyncTime;
    /**
     * @return The most recent timestamp when the device was successfully validated using one time passcode
     * 
     */
    private String lastValidatedTime;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private List<GetDomainsMyDeviceMeta> metas;
    private String myDeviceId;
    /**
     * @return Device Non Compliances
     * 
     */
    private List<GetDomainsMyDeviceNonCompliance> nonCompliances;
    /**
     * @return The OCID of the user
     * 
     */
    private String ocid;
    /**
     * @return Mobile Authenticator App Package Id
     * 
     */
    private String packageId;
    /**
     * @return User&#39;s Phone Number
     * 
     */
    private String phoneNumber;
    /**
     * @return Device Platform
     * 
     */
    private String platform;
    /**
     * @return Push Notification target. Reference to Device notification related resource
     * 
     */
    private List<GetDomainsMyDevicePushNotificationTarget> pushNotificationTargets;
    /**
     * @return Additional comments/reasons for the change in device status
     * 
     */
    private String reason;
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private List<String> schemas;
    /**
     * @return Attribute added for replication log, it is not used by IDCS, it is actual encrypted TOTP seed for the user
     * 
     */
    private String seed;
    /**
     * @return Attribute added for replication log, it is not used by IDCS, the DEK that encrypts the specific seed for that user
     * 
     */
    private String seedDekId;
    /**
     * @return Device Status
     * 
     */
    private String status;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private List<GetDomainsMyDeviceTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private String tenancyOcid;
    /**
     * @return User&#39;s third-party authentication factor details
     * 
     */
    private List<GetDomainsMyDeviceThirdPartyFactor> thirdPartyFactors;
    /**
     * @return Device member
     * 
     */
    private List<GetDomainsMyDeviceUser> users;

    private GetDomainsMyDeviceResult() {}
    /**
     * @return Device additional attributes
     * 
     */
    public List<GetDomainsMyDeviceAdditionalAttribute> additionalAttributes() {
        return this.additionalAttributes;
    }
    /**
     * @return Mobile Authenticator App Version
     * 
     */
    public String appVersion() {
        return this.appVersion;
    }
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    /**
     * @return Authentication Factors
     * 
     */
    public List<GetDomainsMyDeviceAuthenticationFactor> authenticationFactors() {
        return this.authenticationFactors;
    }
    /**
     * @return Authentication method used in device. For FIDO, it will contain SECURITY_KEY/WINDOWS_HELLO etc
     * 
     */
    public String authenticationMethod() {
        return this.authenticationMethod;
    }
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return Device base public Key
     * 
     */
    public String basePublicKey() {
        return this.basePublicKey;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public String compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * @return Country code of user&#39;s Phone Number
     * 
     */
    public String countryCode() {
        return this.countryCode;
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Boolean deleteInProgress() {
        return this.deleteInProgress;
    }
    /**
     * @return Device hardware name/model
     * 
     */
    public String deviceType() {
        return this.deviceType;
    }
    /**
     * @return Unique id sent from device
     * 
     */
    public String deviceUuid() {
        return this.deviceUuid;
    }
    /**
     * @return Device friendly display name
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public String domainOcid() {
        return this.domainOcid;
    }
    /**
     * @return Attribute added for replication log, it is not used by IDCS, just added as place holder
     * 
     */
    public Integer expiresOn() {
        return this.expiresOn;
    }
    /**
     * @return An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued be the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsMyDeviceIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsMyDeviceIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public String idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * @return Flag that indicates whether the device is enrolled for account recovery
     * 
     */
    public Boolean isAccRecEnabled() {
        return this.isAccRecEnabled;
    }
    /**
     * @return Device Compliance Status
     * 
     */
    public Boolean isCompliant() {
        return this.isCompliant;
    }
    /**
     * @return Last Sync time for device
     * 
     */
    public String lastSyncTime() {
        return this.lastSyncTime;
    }
    /**
     * @return The most recent timestamp when the device was successfully validated using one time passcode
     * 
     */
    public String lastValidatedTime() {
        return this.lastValidatedTime;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsMyDeviceMeta> metas() {
        return this.metas;
    }
    public String myDeviceId() {
        return this.myDeviceId;
    }
    /**
     * @return Device Non Compliances
     * 
     */
    public List<GetDomainsMyDeviceNonCompliance> nonCompliances() {
        return this.nonCompliances;
    }
    /**
     * @return The OCID of the user
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return Mobile Authenticator App Package Id
     * 
     */
    public String packageId() {
        return this.packageId;
    }
    /**
     * @return User&#39;s Phone Number
     * 
     */
    public String phoneNumber() {
        return this.phoneNumber;
    }
    /**
     * @return Device Platform
     * 
     */
    public String platform() {
        return this.platform;
    }
    /**
     * @return Push Notification target. Reference to Device notification related resource
     * 
     */
    public List<GetDomainsMyDevicePushNotificationTarget> pushNotificationTargets() {
        return this.pushNotificationTargets;
    }
    /**
     * @return Additional comments/reasons for the change in device status
     * 
     */
    public String reason() {
        return this.reason;
    }
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas;
    }
    /**
     * @return Attribute added for replication log, it is not used by IDCS, it is actual encrypted TOTP seed for the user
     * 
     */
    public String seed() {
        return this.seed;
    }
    /**
     * @return Attribute added for replication log, it is not used by IDCS, the DEK that encrypts the specific seed for that user
     * 
     */
    public String seedDekId() {
        return this.seedDekId;
    }
    /**
     * @return Device Status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsMyDeviceTag> tags() {
        return this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public String tenancyOcid() {
        return this.tenancyOcid;
    }
    /**
     * @return User&#39;s third-party authentication factor details
     * 
     */
    public List<GetDomainsMyDeviceThirdPartyFactor> thirdPartyFactors() {
        return this.thirdPartyFactors;
    }
    /**
     * @return Device member
     * 
     */
    public List<GetDomainsMyDeviceUser> users() {
        return this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsMyDeviceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDomainsMyDeviceAdditionalAttribute> additionalAttributes;
        private String appVersion;
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private List<GetDomainsMyDeviceAuthenticationFactor> authenticationFactors;
        private String authenticationMethod;
        private @Nullable String authorization;
        private String basePublicKey;
        private String compartmentOcid;
        private String countryCode;
        private Boolean deleteInProgress;
        private String deviceType;
        private String deviceUuid;
        private String displayName;
        private String domainOcid;
        private Integer expiresOn;
        private String externalId;
        private String id;
        private List<GetDomainsMyDeviceIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private List<GetDomainsMyDeviceIdcsLastModifiedBy> idcsLastModifiedBies;
        private String idcsLastUpgradedInRelease;
        private List<String> idcsPreventedOperations;
        private Boolean isAccRecEnabled;
        private Boolean isCompliant;
        private String lastSyncTime;
        private String lastValidatedTime;
        private List<GetDomainsMyDeviceMeta> metas;
        private String myDeviceId;
        private List<GetDomainsMyDeviceNonCompliance> nonCompliances;
        private String ocid;
        private String packageId;
        private String phoneNumber;
        private String platform;
        private List<GetDomainsMyDevicePushNotificationTarget> pushNotificationTargets;
        private String reason;
        private @Nullable String resourceTypeSchemaVersion;
        private List<String> schemas;
        private String seed;
        private String seedDekId;
        private String status;
        private List<GetDomainsMyDeviceTag> tags;
        private String tenancyOcid;
        private List<GetDomainsMyDeviceThirdPartyFactor> thirdPartyFactors;
        private List<GetDomainsMyDeviceUser> users;
        public Builder() {}
        public Builder(GetDomainsMyDeviceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalAttributes = defaults.additionalAttributes;
    	      this.appVersion = defaults.appVersion;
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authenticationFactors = defaults.authenticationFactors;
    	      this.authenticationMethod = defaults.authenticationMethod;
    	      this.authorization = defaults.authorization;
    	      this.basePublicKey = defaults.basePublicKey;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.countryCode = defaults.countryCode;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.deviceType = defaults.deviceType;
    	      this.deviceUuid = defaults.deviceUuid;
    	      this.displayName = defaults.displayName;
    	      this.domainOcid = defaults.domainOcid;
    	      this.expiresOn = defaults.expiresOn;
    	      this.externalId = defaults.externalId;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.isAccRecEnabled = defaults.isAccRecEnabled;
    	      this.isCompliant = defaults.isCompliant;
    	      this.lastSyncTime = defaults.lastSyncTime;
    	      this.lastValidatedTime = defaults.lastValidatedTime;
    	      this.metas = defaults.metas;
    	      this.myDeviceId = defaults.myDeviceId;
    	      this.nonCompliances = defaults.nonCompliances;
    	      this.ocid = defaults.ocid;
    	      this.packageId = defaults.packageId;
    	      this.phoneNumber = defaults.phoneNumber;
    	      this.platform = defaults.platform;
    	      this.pushNotificationTargets = defaults.pushNotificationTargets;
    	      this.reason = defaults.reason;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.schemas = defaults.schemas;
    	      this.seed = defaults.seed;
    	      this.seedDekId = defaults.seedDekId;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.thirdPartyFactors = defaults.thirdPartyFactors;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder additionalAttributes(List<GetDomainsMyDeviceAdditionalAttribute> additionalAttributes) {
            this.additionalAttributes = Objects.requireNonNull(additionalAttributes);
            return this;
        }
        public Builder additionalAttributes(GetDomainsMyDeviceAdditionalAttribute... additionalAttributes) {
            return additionalAttributes(List.of(additionalAttributes));
        }
        @CustomType.Setter
        public Builder appVersion(String appVersion) {
            this.appVersion = Objects.requireNonNull(appVersion);
            return this;
        }
        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {
            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationFactors(List<GetDomainsMyDeviceAuthenticationFactor> authenticationFactors) {
            this.authenticationFactors = Objects.requireNonNull(authenticationFactors);
            return this;
        }
        public Builder authenticationFactors(GetDomainsMyDeviceAuthenticationFactor... authenticationFactors) {
            return authenticationFactors(List.of(authenticationFactors));
        }
        @CustomType.Setter
        public Builder authenticationMethod(String authenticationMethod) {
            this.authenticationMethod = Objects.requireNonNull(authenticationMethod);
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder basePublicKey(String basePublicKey) {
            this.basePublicKey = Objects.requireNonNull(basePublicKey);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentOcid(String compartmentOcid) {
            this.compartmentOcid = Objects.requireNonNull(compartmentOcid);
            return this;
        }
        @CustomType.Setter
        public Builder countryCode(String countryCode) {
            this.countryCode = Objects.requireNonNull(countryCode);
            return this;
        }
        @CustomType.Setter
        public Builder deleteInProgress(Boolean deleteInProgress) {
            this.deleteInProgress = Objects.requireNonNull(deleteInProgress);
            return this;
        }
        @CustomType.Setter
        public Builder deviceType(String deviceType) {
            this.deviceType = Objects.requireNonNull(deviceType);
            return this;
        }
        @CustomType.Setter
        public Builder deviceUuid(String deviceUuid) {
            this.deviceUuid = Objects.requireNonNull(deviceUuid);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(String domainOcid) {
            this.domainOcid = Objects.requireNonNull(domainOcid);
            return this;
        }
        @CustomType.Setter
        public Builder expiresOn(Integer expiresOn) {
            this.expiresOn = Objects.requireNonNull(expiresOn);
            return this;
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            this.externalId = Objects.requireNonNull(externalId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(List<GetDomainsMyDeviceIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = Objects.requireNonNull(idcsCreatedBies);
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsMyDeviceIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            this.idcsEndpoint = Objects.requireNonNull(idcsEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(List<GetDomainsMyDeviceIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = Objects.requireNonNull(idcsLastModifiedBies);
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsMyDeviceIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = Objects.requireNonNull(idcsLastUpgradedInRelease);
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = Objects.requireNonNull(idcsPreventedOperations);
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder isAccRecEnabled(Boolean isAccRecEnabled) {
            this.isAccRecEnabled = Objects.requireNonNull(isAccRecEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isCompliant(Boolean isCompliant) {
            this.isCompliant = Objects.requireNonNull(isCompliant);
            return this;
        }
        @CustomType.Setter
        public Builder lastSyncTime(String lastSyncTime) {
            this.lastSyncTime = Objects.requireNonNull(lastSyncTime);
            return this;
        }
        @CustomType.Setter
        public Builder lastValidatedTime(String lastValidatedTime) {
            this.lastValidatedTime = Objects.requireNonNull(lastValidatedTime);
            return this;
        }
        @CustomType.Setter
        public Builder metas(List<GetDomainsMyDeviceMeta> metas) {
            this.metas = Objects.requireNonNull(metas);
            return this;
        }
        public Builder metas(GetDomainsMyDeviceMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder myDeviceId(String myDeviceId) {
            this.myDeviceId = Objects.requireNonNull(myDeviceId);
            return this;
        }
        @CustomType.Setter
        public Builder nonCompliances(List<GetDomainsMyDeviceNonCompliance> nonCompliances) {
            this.nonCompliances = Objects.requireNonNull(nonCompliances);
            return this;
        }
        public Builder nonCompliances(GetDomainsMyDeviceNonCompliance... nonCompliances) {
            return nonCompliances(List.of(nonCompliances));
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            this.ocid = Objects.requireNonNull(ocid);
            return this;
        }
        @CustomType.Setter
        public Builder packageId(String packageId) {
            this.packageId = Objects.requireNonNull(packageId);
            return this;
        }
        @CustomType.Setter
        public Builder phoneNumber(String phoneNumber) {
            this.phoneNumber = Objects.requireNonNull(phoneNumber);
            return this;
        }
        @CustomType.Setter
        public Builder platform(String platform) {
            this.platform = Objects.requireNonNull(platform);
            return this;
        }
        @CustomType.Setter
        public Builder pushNotificationTargets(List<GetDomainsMyDevicePushNotificationTarget> pushNotificationTargets) {
            this.pushNotificationTargets = Objects.requireNonNull(pushNotificationTargets);
            return this;
        }
        public Builder pushNotificationTargets(GetDomainsMyDevicePushNotificationTarget... pushNotificationTargets) {
            return pushNotificationTargets(List.of(pushNotificationTargets));
        }
        @CustomType.Setter
        public Builder reason(String reason) {
            this.reason = Objects.requireNonNull(reason);
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {
            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(List<String> schemas) {
            this.schemas = Objects.requireNonNull(schemas);
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder seed(String seed) {
            this.seed = Objects.requireNonNull(seed);
            return this;
        }
        @CustomType.Setter
        public Builder seedDekId(String seedDekId) {
            this.seedDekId = Objects.requireNonNull(seedDekId);
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetDomainsMyDeviceTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetDomainsMyDeviceTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(String tenancyOcid) {
            this.tenancyOcid = Objects.requireNonNull(tenancyOcid);
            return this;
        }
        @CustomType.Setter
        public Builder thirdPartyFactors(List<GetDomainsMyDeviceThirdPartyFactor> thirdPartyFactors) {
            this.thirdPartyFactors = Objects.requireNonNull(thirdPartyFactors);
            return this;
        }
        public Builder thirdPartyFactors(GetDomainsMyDeviceThirdPartyFactor... thirdPartyFactors) {
            return thirdPartyFactors(List.of(thirdPartyFactors));
        }
        @CustomType.Setter
        public Builder users(List<GetDomainsMyDeviceUser> users) {
            this.users = Objects.requireNonNull(users);
            return this;
        }
        public Builder users(GetDomainsMyDeviceUser... users) {
            return users(List.of(users));
        }
        public GetDomainsMyDeviceResult build() {
            final var _resultValue = new GetDomainsMyDeviceResult();
            _resultValue.additionalAttributes = additionalAttributes;
            _resultValue.appVersion = appVersion;
            _resultValue.attributeSets = attributeSets;
            _resultValue.attributes = attributes;
            _resultValue.authenticationFactors = authenticationFactors;
            _resultValue.authenticationMethod = authenticationMethod;
            _resultValue.authorization = authorization;
            _resultValue.basePublicKey = basePublicKey;
            _resultValue.compartmentOcid = compartmentOcid;
            _resultValue.countryCode = countryCode;
            _resultValue.deleteInProgress = deleteInProgress;
            _resultValue.deviceType = deviceType;
            _resultValue.deviceUuid = deviceUuid;
            _resultValue.displayName = displayName;
            _resultValue.domainOcid = domainOcid;
            _resultValue.expiresOn = expiresOn;
            _resultValue.externalId = externalId;
            _resultValue.id = id;
            _resultValue.idcsCreatedBies = idcsCreatedBies;
            _resultValue.idcsEndpoint = idcsEndpoint;
            _resultValue.idcsLastModifiedBies = idcsLastModifiedBies;
            _resultValue.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            _resultValue.idcsPreventedOperations = idcsPreventedOperations;
            _resultValue.isAccRecEnabled = isAccRecEnabled;
            _resultValue.isCompliant = isCompliant;
            _resultValue.lastSyncTime = lastSyncTime;
            _resultValue.lastValidatedTime = lastValidatedTime;
            _resultValue.metas = metas;
            _resultValue.myDeviceId = myDeviceId;
            _resultValue.nonCompliances = nonCompliances;
            _resultValue.ocid = ocid;
            _resultValue.packageId = packageId;
            _resultValue.phoneNumber = phoneNumber;
            _resultValue.platform = platform;
            _resultValue.pushNotificationTargets = pushNotificationTargets;
            _resultValue.reason = reason;
            _resultValue.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            _resultValue.schemas = schemas;
            _resultValue.seed = seed;
            _resultValue.seedDekId = seedDekId;
            _resultValue.status = status;
            _resultValue.tags = tags;
            _resultValue.tenancyOcid = tenancyOcid;
            _resultValue.thirdPartyFactors = thirdPartyFactors;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
