// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainsNotificationSettingsNotificationSettingEventSetting {
    /**
     * @return Specify if notifications are enabled for the event
     * 
     */
    private Boolean enabled;
    /**
     * @return IDCS-generated event
     * 
     */
    private String eventId;

    private GetDomainsNotificationSettingsNotificationSettingEventSetting() {}
    /**
     * @return Specify if notifications are enabled for the event
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return IDCS-generated event
     * 
     */
    public String eventId() {
        return this.eventId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsNotificationSettingsNotificationSettingEventSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private String eventId;
        public Builder() {}
        public Builder(GetDomainsNotificationSettingsNotificationSettingEventSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.eventId = defaults.eventId;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetDomainsNotificationSettingsNotificationSettingEventSetting", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder eventId(String eventId) {
            if (eventId == null) {
              throw new MissingRequiredPropertyException("GetDomainsNotificationSettingsNotificationSettingEventSetting", "eventId");
            }
            this.eventId = eventId;
            return this;
        }
        public GetDomainsNotificationSettingsNotificationSettingEventSetting build() {
            final var _resultValue = new GetDomainsNotificationSettingsNotificationSettingEventSetting();
            _resultValue.enabled = enabled;
            _resultValue.eventId = eventId;
            return _resultValue;
        }
    }
}
