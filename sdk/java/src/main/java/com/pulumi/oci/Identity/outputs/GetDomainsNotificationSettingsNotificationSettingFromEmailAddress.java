// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainsNotificationSettingsNotificationSettingFromEmailAddress {
    /**
     * @return Display name for the From email address
     * 
     */
    private String displayName;
    /**
     * @return From address verification mode. If postmaster account is available then &#39;domain&#39; mode is used or entire valid email can be verified using &#39;email&#39; mode
     * 
     */
    private String validate;
    /**
     * @return Validation status for the From email address
     * 
     */
    private String validationStatus;
    /**
     * @return Value of the tag.
     * 
     */
    private String value;

    private GetDomainsNotificationSettingsNotificationSettingFromEmailAddress() {}
    /**
     * @return Display name for the From email address
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return From address verification mode. If postmaster account is available then &#39;domain&#39; mode is used or entire valid email can be verified using &#39;email&#39; mode
     * 
     */
    public String validate() {
        return this.validate;
    }
    /**
     * @return Validation status for the From email address
     * 
     */
    public String validationStatus() {
        return this.validationStatus;
    }
    /**
     * @return Value of the tag.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsNotificationSettingsNotificationSettingFromEmailAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String validate;
        private String validationStatus;
        private String value;
        public Builder() {}
        public Builder(GetDomainsNotificationSettingsNotificationSettingFromEmailAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.validate = defaults.validate;
    	      this.validationStatus = defaults.validationStatus;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDomainsNotificationSettingsNotificationSettingFromEmailAddress", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder validate(String validate) {
            if (validate == null) {
              throw new MissingRequiredPropertyException("GetDomainsNotificationSettingsNotificationSettingFromEmailAddress", "validate");
            }
            this.validate = validate;
            return this;
        }
        @CustomType.Setter
        public Builder validationStatus(String validationStatus) {
            if (validationStatus == null) {
              throw new MissingRequiredPropertyException("GetDomainsNotificationSettingsNotificationSettingFromEmailAddress", "validationStatus");
            }
            this.validationStatus = validationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetDomainsNotificationSettingsNotificationSettingFromEmailAddress", "value");
            }
            this.value = value;
            return this;
        }
        public GetDomainsNotificationSettingsNotificationSettingFromEmailAddress build() {
            final var _resultValue = new GetDomainsNotificationSettingsNotificationSettingFromEmailAddress();
            _resultValue.displayName = displayName;
            _resultValue.validate = validate;
            _resultValue.validationStatus = validationStatus;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
