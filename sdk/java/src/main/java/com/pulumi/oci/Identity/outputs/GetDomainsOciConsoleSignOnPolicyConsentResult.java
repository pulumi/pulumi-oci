// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentConsentSignedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentModifiedResource;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentPolicyResource;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentTag;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsOciConsoleSignOnPolicyConsentResult {
    private @Nullable List<String> attributeSets;
    private @Nullable String attributes;
    private @Nullable String authorization;
    /**
     * @return Change Type - MODIFIED or RESTORED_TO_FACTORY_DEFAULT
     * 
     */
    private String changeType;
    /**
     * @return Client IP of the Consent Signer
     * 
     */
    private String clientIp;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private String compartmentOcid;
    /**
     * @return User or App that signs the consent.
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentConsentSignedBy> consentSignedBies;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private Boolean deleteInProgress;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private String domainOcid;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentIdcsCreatedBy> idcsCreatedBies;
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private List<String> idcsPreventedOperations;
    /**
     * @return The justification for the change when an identity domain administrator opts to modify the Oracle security defaults for the &#34;Security Policy for Oracle Cloud Infrastructure Console&#34; sign-on policy shipped by Oracle.
     * 
     */
    private String justification;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentMeta> metas;
    /**
     * @return The modified Policy, Rule, ConditionGroup or Condition during consent signing.
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentModifiedResource> modifiedResources;
    /**
     * @return The recipients of the email notification for the change in consent.
     * 
     */
    private List<String> notificationRecipients;
    private String ociConsoleSignOnPolicyConsentId;
    /**
     * @return Policy Resource Ocid
     * 
     */
    private String ocid;
    /**
     * @return Policy Resource
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentPolicyResource> policyResources;
    /**
     * @return The detailed reason for the change when an identity domain administrator opts to modify the Oracle security defaults for the &#34;Security Policy for Oracle Cloud Infrastructure Console&#34; sign-on policy shipped by Oracle.
     * 
     */
    private String reason;
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private List<String> schemas;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private String tenancyOcid;
    /**
     * @return Time when Consent was signed.
     * 
     */
    private String timeConsentSigned;

    private GetDomainsOciConsoleSignOnPolicyConsentResult() {}
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return Change Type - MODIFIED or RESTORED_TO_FACTORY_DEFAULT
     * 
     */
    public String changeType() {
        return this.changeType;
    }
    /**
     * @return Client IP of the Consent Signer
     * 
     */
    public String clientIp() {
        return this.clientIp;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public String compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * @return User or App that signs the consent.
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentConsentSignedBy> consentSignedBies() {
        return this.consentSignedBies;
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Boolean deleteInProgress() {
        return this.deleteInProgress;
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public String domainOcid() {
        return this.domainOcid;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public String idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * @return The justification for the change when an identity domain administrator opts to modify the Oracle security defaults for the &#34;Security Policy for Oracle Cloud Infrastructure Console&#34; sign-on policy shipped by Oracle.
     * 
     */
    public String justification() {
        return this.justification;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentMeta> metas() {
        return this.metas;
    }
    /**
     * @return The modified Policy, Rule, ConditionGroup or Condition during consent signing.
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentModifiedResource> modifiedResources() {
        return this.modifiedResources;
    }
    /**
     * @return The recipients of the email notification for the change in consent.
     * 
     */
    public List<String> notificationRecipients() {
        return this.notificationRecipients;
    }
    public String ociConsoleSignOnPolicyConsentId() {
        return this.ociConsoleSignOnPolicyConsentId;
    }
    /**
     * @return Policy Resource Ocid
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return Policy Resource
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentPolicyResource> policyResources() {
        return this.policyResources;
    }
    /**
     * @return The detailed reason for the change when an identity domain administrator opts to modify the Oracle security defaults for the &#34;Security Policy for Oracle Cloud Infrastructure Console&#34; sign-on policy shipped by Oracle.
     * 
     */
    public String reason() {
        return this.reason;
    }
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentTag> tags() {
        return this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public String tenancyOcid() {
        return this.tenancyOcid;
    }
    /**
     * @return Time when Consent was signed.
     * 
     */
    public String timeConsentSigned() {
        return this.timeConsentSigned;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsOciConsoleSignOnPolicyConsentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private @Nullable String authorization;
        private String changeType;
        private String clientIp;
        private String compartmentOcid;
        private List<GetDomainsOciConsoleSignOnPolicyConsentConsentSignedBy> consentSignedBies;
        private Boolean deleteInProgress;
        private String domainOcid;
        private String id;
        private List<GetDomainsOciConsoleSignOnPolicyConsentIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private List<GetDomainsOciConsoleSignOnPolicyConsentIdcsLastModifiedBy> idcsLastModifiedBies;
        private String idcsLastUpgradedInRelease;
        private List<String> idcsPreventedOperations;
        private String justification;
        private List<GetDomainsOciConsoleSignOnPolicyConsentMeta> metas;
        private List<GetDomainsOciConsoleSignOnPolicyConsentModifiedResource> modifiedResources;
        private List<String> notificationRecipients;
        private String ociConsoleSignOnPolicyConsentId;
        private String ocid;
        private List<GetDomainsOciConsoleSignOnPolicyConsentPolicyResource> policyResources;
        private String reason;
        private @Nullable String resourceTypeSchemaVersion;
        private List<String> schemas;
        private List<GetDomainsOciConsoleSignOnPolicyConsentTag> tags;
        private String tenancyOcid;
        private String timeConsentSigned;
        public Builder() {}
        public Builder(GetDomainsOciConsoleSignOnPolicyConsentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authorization = defaults.authorization;
    	      this.changeType = defaults.changeType;
    	      this.clientIp = defaults.clientIp;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.consentSignedBies = defaults.consentSignedBies;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.domainOcid = defaults.domainOcid;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.justification = defaults.justification;
    	      this.metas = defaults.metas;
    	      this.modifiedResources = defaults.modifiedResources;
    	      this.notificationRecipients = defaults.notificationRecipients;
    	      this.ociConsoleSignOnPolicyConsentId = defaults.ociConsoleSignOnPolicyConsentId;
    	      this.ocid = defaults.ocid;
    	      this.policyResources = defaults.policyResources;
    	      this.reason = defaults.reason;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.schemas = defaults.schemas;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.timeConsentSigned = defaults.timeConsentSigned;
        }

        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {

            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {

            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {

            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder changeType(String changeType) {
            if (changeType == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "changeType");
            }
            this.changeType = changeType;
            return this;
        }
        @CustomType.Setter
        public Builder clientIp(String clientIp) {
            if (clientIp == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "clientIp");
            }
            this.clientIp = clientIp;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentOcid(String compartmentOcid) {
            if (compartmentOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "compartmentOcid");
            }
            this.compartmentOcid = compartmentOcid;
            return this;
        }
        @CustomType.Setter
        public Builder consentSignedBies(List<GetDomainsOciConsoleSignOnPolicyConsentConsentSignedBy> consentSignedBies) {
            if (consentSignedBies == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "consentSignedBies");
            }
            this.consentSignedBies = consentSignedBies;
            return this;
        }
        public Builder consentSignedBies(GetDomainsOciConsoleSignOnPolicyConsentConsentSignedBy... consentSignedBies) {
            return consentSignedBies(List.of(consentSignedBies));
        }
        @CustomType.Setter
        public Builder deleteInProgress(Boolean deleteInProgress) {
            if (deleteInProgress == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "deleteInProgress");
            }
            this.deleteInProgress = deleteInProgress;
            return this;
        }
        @CustomType.Setter
        public Builder domainOcid(String domainOcid) {
            if (domainOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "domainOcid");
            }
            this.domainOcid = domainOcid;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(List<GetDomainsOciConsoleSignOnPolicyConsentIdcsCreatedBy> idcsCreatedBies) {
            if (idcsCreatedBies == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "idcsCreatedBies");
            }
            this.idcsCreatedBies = idcsCreatedBies;
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsOciConsoleSignOnPolicyConsentIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            if (idcsEndpoint == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "idcsEndpoint");
            }
            this.idcsEndpoint = idcsEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(List<GetDomainsOciConsoleSignOnPolicyConsentIdcsLastModifiedBy> idcsLastModifiedBies) {
            if (idcsLastModifiedBies == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "idcsLastModifiedBies");
            }
            this.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsOciConsoleSignOnPolicyConsentIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            if (idcsLastUpgradedInRelease == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "idcsLastUpgradedInRelease");
            }
            this.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            if (idcsPreventedOperations == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "idcsPreventedOperations");
            }
            this.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder justification(String justification) {
            if (justification == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "justification");
            }
            this.justification = justification;
            return this;
        }
        @CustomType.Setter
        public Builder metas(List<GetDomainsOciConsoleSignOnPolicyConsentMeta> metas) {
            if (metas == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "metas");
            }
            this.metas = metas;
            return this;
        }
        public Builder metas(GetDomainsOciConsoleSignOnPolicyConsentMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder modifiedResources(List<GetDomainsOciConsoleSignOnPolicyConsentModifiedResource> modifiedResources) {
            if (modifiedResources == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "modifiedResources");
            }
            this.modifiedResources = modifiedResources;
            return this;
        }
        public Builder modifiedResources(GetDomainsOciConsoleSignOnPolicyConsentModifiedResource... modifiedResources) {
            return modifiedResources(List.of(modifiedResources));
        }
        @CustomType.Setter
        public Builder notificationRecipients(List<String> notificationRecipients) {
            if (notificationRecipients == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "notificationRecipients");
            }
            this.notificationRecipients = notificationRecipients;
            return this;
        }
        public Builder notificationRecipients(String... notificationRecipients) {
            return notificationRecipients(List.of(notificationRecipients));
        }
        @CustomType.Setter
        public Builder ociConsoleSignOnPolicyConsentId(String ociConsoleSignOnPolicyConsentId) {
            if (ociConsoleSignOnPolicyConsentId == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "ociConsoleSignOnPolicyConsentId");
            }
            this.ociConsoleSignOnPolicyConsentId = ociConsoleSignOnPolicyConsentId;
            return this;
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            if (ocid == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "ocid");
            }
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder policyResources(List<GetDomainsOciConsoleSignOnPolicyConsentPolicyResource> policyResources) {
            if (policyResources == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "policyResources");
            }
            this.policyResources = policyResources;
            return this;
        }
        public Builder policyResources(GetDomainsOciConsoleSignOnPolicyConsentPolicyResource... policyResources) {
            return policyResources(List.of(policyResources));
        }
        @CustomType.Setter
        public Builder reason(String reason) {
            if (reason == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "reason");
            }
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {

            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(List<String> schemas) {
            if (schemas == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "schemas");
            }
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder tags(List<GetDomainsOciConsoleSignOnPolicyConsentTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetDomainsOciConsoleSignOnPolicyConsentTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(String tenancyOcid) {
            if (tenancyOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "tenancyOcid");
            }
            this.tenancyOcid = tenancyOcid;
            return this;
        }
        @CustomType.Setter
        public Builder timeConsentSigned(String timeConsentSigned) {
            if (timeConsentSigned == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentResult", "timeConsentSigned");
            }
            this.timeConsentSigned = timeConsentSigned;
            return this;
        }
        public GetDomainsOciConsoleSignOnPolicyConsentResult build() {
            final var _resultValue = new GetDomainsOciConsoleSignOnPolicyConsentResult();
            _resultValue.attributeSets = attributeSets;
            _resultValue.attributes = attributes;
            _resultValue.authorization = authorization;
            _resultValue.changeType = changeType;
            _resultValue.clientIp = clientIp;
            _resultValue.compartmentOcid = compartmentOcid;
            _resultValue.consentSignedBies = consentSignedBies;
            _resultValue.deleteInProgress = deleteInProgress;
            _resultValue.domainOcid = domainOcid;
            _resultValue.id = id;
            _resultValue.idcsCreatedBies = idcsCreatedBies;
            _resultValue.idcsEndpoint = idcsEndpoint;
            _resultValue.idcsLastModifiedBies = idcsLastModifiedBies;
            _resultValue.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            _resultValue.idcsPreventedOperations = idcsPreventedOperations;
            _resultValue.justification = justification;
            _resultValue.metas = metas;
            _resultValue.modifiedResources = modifiedResources;
            _resultValue.notificationRecipients = notificationRecipients;
            _resultValue.ociConsoleSignOnPolicyConsentId = ociConsoleSignOnPolicyConsentId;
            _resultValue.ocid = ocid;
            _resultValue.policyResources = policyResources;
            _resultValue.reason = reason;
            _resultValue.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            _resultValue.schemas = schemas;
            _resultValue.tags = tags;
            _resultValue.tenancyOcid = tenancyOcid;
            _resultValue.timeConsentSigned = timeConsentSigned;
            return _resultValue;
        }
    }
}
