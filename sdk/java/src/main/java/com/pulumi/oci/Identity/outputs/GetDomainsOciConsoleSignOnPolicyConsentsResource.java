// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentsResourceConsentSignedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentsResourceMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentsResourceModifiedResource;
import com.pulumi.oci.Identity.outputs.GetDomainsOciConsoleSignOnPolicyConsentsResourcePolicyResource;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsOciConsoleSignOnPolicyConsentsResource {
    /**
     * @return Change Type - MODIFIED or RESTORED_TO_FACTORY_DEFAULT
     * 
     */
    private String changeType;
    /**
     * @return Client IP of the Consent Signer
     * 
     */
    private String clientIp;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private String compartmentOcid;
    /**
     * @return User or App that signs the consent.
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentsResourceConsentSignedBy> consentSignedBies;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private String domainOcid;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsCreatedBy> idcsCreatedBies;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private List<String> idcsPreventedOperations;
    /**
     * @return The justification for the change when an identity domain administrator opts to modify the Oracle security defaults for the &#34;Security Policy for Oracle Cloud Infrastructure Console&#34; sign-on policy shipped by Oracle.
     * 
     */
    private String justification;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentsResourceMeta> metas;
    /**
     * @return The modified Policy, Rule, ConditionGroup or Condition during consent signing.
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentsResourceModifiedResource> modifiedResources;
    /**
     * @return The recipients of the email notification for the change in consent.
     * 
     */
    private List<String> notificationRecipients;
    /**
     * @return Policy Resource Ocid
     * 
     */
    private String ocid;
    /**
     * @return Policy Resource
     * 
     */
    private List<GetDomainsOciConsoleSignOnPolicyConsentsResourcePolicyResource> policyResources;
    /**
     * @return The detailed reason for the change when an identity domain administrator opts to modify the Oracle security defaults for the &#34;Security Policy for Oracle Cloud Infrastructure Console&#34; sign-on policy shipped by Oracle.
     * 
     */
    private String reason;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private String tenancyOcid;
    /**
     * @return Time when Consent was signed.
     * 
     */
    private String timeConsentSigned;

    private GetDomainsOciConsoleSignOnPolicyConsentsResource() {}
    /**
     * @return Change Type - MODIFIED or RESTORED_TO_FACTORY_DEFAULT
     * 
     */
    public String changeType() {
        return this.changeType;
    }
    /**
     * @return Client IP of the Consent Signer
     * 
     */
    public String clientIp() {
        return this.clientIp;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public String compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * @return User or App that signs the consent.
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentsResourceConsentSignedBy> consentSignedBies() {
        return this.consentSignedBies;
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public String domainOcid() {
        return this.domainOcid;
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public String idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * @return The justification for the change when an identity domain administrator opts to modify the Oracle security defaults for the &#34;Security Policy for Oracle Cloud Infrastructure Console&#34; sign-on policy shipped by Oracle.
     * 
     */
    public String justification() {
        return this.justification;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentsResourceMeta> metas() {
        return this.metas;
    }
    /**
     * @return The modified Policy, Rule, ConditionGroup or Condition during consent signing.
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentsResourceModifiedResource> modifiedResources() {
        return this.modifiedResources;
    }
    /**
     * @return The recipients of the email notification for the change in consent.
     * 
     */
    public List<String> notificationRecipients() {
        return this.notificationRecipients;
    }
    /**
     * @return Policy Resource Ocid
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return Policy Resource
     * 
     */
    public List<GetDomainsOciConsoleSignOnPolicyConsentsResourcePolicyResource> policyResources() {
        return this.policyResources;
    }
    /**
     * @return The detailed reason for the change when an identity domain administrator opts to modify the Oracle security defaults for the &#34;Security Policy for Oracle Cloud Infrastructure Console&#34; sign-on policy shipped by Oracle.
     * 
     */
    public String reason() {
        return this.reason;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public String tenancyOcid() {
        return this.tenancyOcid;
    }
    /**
     * @return Time when Consent was signed.
     * 
     */
    public String timeConsentSigned() {
        return this.timeConsentSigned;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsOciConsoleSignOnPolicyConsentsResource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String changeType;
        private String clientIp;
        private String compartmentOcid;
        private List<GetDomainsOciConsoleSignOnPolicyConsentsResourceConsentSignedBy> consentSignedBies;
        private String domainOcid;
        private String id;
        private List<GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsCreatedBy> idcsCreatedBies;
        private List<GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsLastModifiedBy> idcsLastModifiedBies;
        private String idcsLastUpgradedInRelease;
        private List<String> idcsPreventedOperations;
        private String justification;
        private List<GetDomainsOciConsoleSignOnPolicyConsentsResourceMeta> metas;
        private List<GetDomainsOciConsoleSignOnPolicyConsentsResourceModifiedResource> modifiedResources;
        private List<String> notificationRecipients;
        private String ocid;
        private List<GetDomainsOciConsoleSignOnPolicyConsentsResourcePolicyResource> policyResources;
        private String reason;
        private String tenancyOcid;
        private String timeConsentSigned;
        public Builder() {}
        public Builder(GetDomainsOciConsoleSignOnPolicyConsentsResource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.changeType = defaults.changeType;
    	      this.clientIp = defaults.clientIp;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.consentSignedBies = defaults.consentSignedBies;
    	      this.domainOcid = defaults.domainOcid;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.justification = defaults.justification;
    	      this.metas = defaults.metas;
    	      this.modifiedResources = defaults.modifiedResources;
    	      this.notificationRecipients = defaults.notificationRecipients;
    	      this.ocid = defaults.ocid;
    	      this.policyResources = defaults.policyResources;
    	      this.reason = defaults.reason;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.timeConsentSigned = defaults.timeConsentSigned;
        }

        @CustomType.Setter
        public Builder changeType(String changeType) {
            if (changeType == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "changeType");
            }
            this.changeType = changeType;
            return this;
        }
        @CustomType.Setter
        public Builder clientIp(String clientIp) {
            if (clientIp == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "clientIp");
            }
            this.clientIp = clientIp;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentOcid(String compartmentOcid) {
            if (compartmentOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "compartmentOcid");
            }
            this.compartmentOcid = compartmentOcid;
            return this;
        }
        @CustomType.Setter
        public Builder consentSignedBies(List<GetDomainsOciConsoleSignOnPolicyConsentsResourceConsentSignedBy> consentSignedBies) {
            if (consentSignedBies == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "consentSignedBies");
            }
            this.consentSignedBies = consentSignedBies;
            return this;
        }
        public Builder consentSignedBies(GetDomainsOciConsoleSignOnPolicyConsentsResourceConsentSignedBy... consentSignedBies) {
            return consentSignedBies(List.of(consentSignedBies));
        }
        @CustomType.Setter
        public Builder domainOcid(String domainOcid) {
            if (domainOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "domainOcid");
            }
            this.domainOcid = domainOcid;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(List<GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsCreatedBy> idcsCreatedBies) {
            if (idcsCreatedBies == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "idcsCreatedBies");
            }
            this.idcsCreatedBies = idcsCreatedBies;
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(List<GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsLastModifiedBy> idcsLastModifiedBies) {
            if (idcsLastModifiedBies == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "idcsLastModifiedBies");
            }
            this.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsOciConsoleSignOnPolicyConsentsResourceIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            if (idcsLastUpgradedInRelease == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "idcsLastUpgradedInRelease");
            }
            this.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            if (idcsPreventedOperations == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "idcsPreventedOperations");
            }
            this.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder justification(String justification) {
            if (justification == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "justification");
            }
            this.justification = justification;
            return this;
        }
        @CustomType.Setter
        public Builder metas(List<GetDomainsOciConsoleSignOnPolicyConsentsResourceMeta> metas) {
            if (metas == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "metas");
            }
            this.metas = metas;
            return this;
        }
        public Builder metas(GetDomainsOciConsoleSignOnPolicyConsentsResourceMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder modifiedResources(List<GetDomainsOciConsoleSignOnPolicyConsentsResourceModifiedResource> modifiedResources) {
            if (modifiedResources == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "modifiedResources");
            }
            this.modifiedResources = modifiedResources;
            return this;
        }
        public Builder modifiedResources(GetDomainsOciConsoleSignOnPolicyConsentsResourceModifiedResource... modifiedResources) {
            return modifiedResources(List.of(modifiedResources));
        }
        @CustomType.Setter
        public Builder notificationRecipients(List<String> notificationRecipients) {
            if (notificationRecipients == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "notificationRecipients");
            }
            this.notificationRecipients = notificationRecipients;
            return this;
        }
        public Builder notificationRecipients(String... notificationRecipients) {
            return notificationRecipients(List.of(notificationRecipients));
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            if (ocid == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "ocid");
            }
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder policyResources(List<GetDomainsOciConsoleSignOnPolicyConsentsResourcePolicyResource> policyResources) {
            if (policyResources == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "policyResources");
            }
            this.policyResources = policyResources;
            return this;
        }
        public Builder policyResources(GetDomainsOciConsoleSignOnPolicyConsentsResourcePolicyResource... policyResources) {
            return policyResources(List.of(policyResources));
        }
        @CustomType.Setter
        public Builder reason(String reason) {
            if (reason == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "reason");
            }
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder tenancyOcid(String tenancyOcid) {
            if (tenancyOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "tenancyOcid");
            }
            this.tenancyOcid = tenancyOcid;
            return this;
        }
        @CustomType.Setter
        public Builder timeConsentSigned(String timeConsentSigned) {
            if (timeConsentSigned == null) {
              throw new MissingRequiredPropertyException("GetDomainsOciConsoleSignOnPolicyConsentsResource", "timeConsentSigned");
            }
            this.timeConsentSigned = timeConsentSigned;
            return this;
        }
        public GetDomainsOciConsoleSignOnPolicyConsentsResource build() {
            final var _resultValue = new GetDomainsOciConsoleSignOnPolicyConsentsResource();
            _resultValue.changeType = changeType;
            _resultValue.clientIp = clientIp;
            _resultValue.compartmentOcid = compartmentOcid;
            _resultValue.consentSignedBies = consentSignedBies;
            _resultValue.domainOcid = domainOcid;
            _resultValue.id = id;
            _resultValue.idcsCreatedBies = idcsCreatedBies;
            _resultValue.idcsLastModifiedBies = idcsLastModifiedBies;
            _resultValue.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            _resultValue.idcsPreventedOperations = idcsPreventedOperations;
            _resultValue.justification = justification;
            _resultValue.metas = metas;
            _resultValue.modifiedResources = modifiedResources;
            _resultValue.notificationRecipients = notificationRecipients;
            _resultValue.ocid = ocid;
            _resultValue.policyResources = policyResources;
            _resultValue.reason = reason;
            _resultValue.tenancyOcid = tenancyOcid;
            _resultValue.timeConsentSigned = timeConsentSigned;
            return _resultValue;
        }
    }
}
