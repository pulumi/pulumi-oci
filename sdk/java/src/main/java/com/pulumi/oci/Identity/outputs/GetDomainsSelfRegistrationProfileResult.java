// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileAfterSubmitText;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileConsentText;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileDefaultGroup;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileDisplayName;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileEmailTemplate;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileFooterText;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileHeaderText;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileTag;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfileUserAttribute;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsSelfRegistrationProfileResult {
    /**
     * @return **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none A Boolean value that indicates whether Account verification email is required to be sent before login or not
     * 
     */
    private Boolean activationEmailRequired;
    /**
     * @return A Boolean value that indicates whether the profile is enabled or not
     * 
     */
    private Boolean active;
    /**
     * @return Text to be displayed on UI after doing self registration
     * 
     */
    private List<GetDomainsSelfRegistrationProfileAfterSubmitText> afterSubmitTexts;
    /**
     * @return A Multivalue String value for Email domains which are valid for this profile
     * 
     */
    private List<String> allowedEmailDomains;
    private @Nullable List<String> attributeSets;
    private @Nullable String attributes;
    private @Nullable String authorization;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private String compartmentOcid;
    /**
     * @return A boolean value that indicates whether the consent text is present.
     * 
     */
    private Boolean consentTextPresent;
    /**
     * @return Consent text
     * 
     */
    private List<GetDomainsSelfRegistrationProfileConsentText> consentTexts;
    /**
     * @return Default groups assigned to the user
     * 
     */
    private List<GetDomainsSelfRegistrationProfileDefaultGroup> defaultGroups;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private Boolean deleteInProgress;
    /**
     * @return A Multivalue String Value for Email domains to be handled as exceptions
     * 
     */
    private List<String> disallowedEmailDomains;
    /**
     * @return Registration page name
     * 
     */
    private List<GetDomainsSelfRegistrationProfileDisplayName> displayNames;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private String domainOcid;
    /**
     * @return Email template
     * 
     */
    private List<GetDomainsSelfRegistrationProfileEmailTemplate> emailTemplates;
    /**
     * @return An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     */
    private String externalId;
    /**
     * @return References to footer logo
     * 
     */
    private String footerLogo;
    /**
     * @return Footer text
     * 
     */
    private List<GetDomainsSelfRegistrationProfileFooterText> footerTexts;
    /**
     * @return Reference to header logo
     * 
     */
    private String headerLogo;
    /**
     * @return Header text
     * 
     */
    private List<GetDomainsSelfRegistrationProfileHeaderText> headerTexts;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private List<GetDomainsSelfRegistrationProfileIdcsCreatedBy> idcsCreatedBies;
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private List<GetDomainsSelfRegistrationProfileIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private List<String> idcsPreventedOperations;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private List<GetDomainsSelfRegistrationProfileMeta> metas;
    /**
     * @return Name of the profile
     * 
     */
    private String name;
    /**
     * @return Number of days redirect URL is valid
     * 
     */
    private Integer numberOfDaysRedirectUrlIsValid;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private String ocid;
    /**
     * @return This URL will be replaced in email notification sent to user. When activation email required is set to true, user is created in \&#34;pending verification\&#34; state, upon clicking this link user will be able to activate himself. When activation email required is set to false, user is created in \&#34;verified\&#34; state, this link will be used to verify user&#39;s email.
     * 
     */
    private String redirectUrl;
    private @Nullable String resourceTypeSchemaVersion;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private List<String> schemas;
    private String selfRegistrationProfileId;
    /**
     * @return A Boolean value that indicates whether the profile should be displayed on login page
     * 
     */
    private Boolean showOnLoginPage;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private List<GetDomainsSelfRegistrationProfileTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private String tenancyOcid;
    /**
     * @return **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none User Attributes
     * 
     */
    private List<GetDomainsSelfRegistrationProfileUserAttribute> userAttributes;

    private GetDomainsSelfRegistrationProfileResult() {}
    /**
     * @return **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none A Boolean value that indicates whether Account verification email is required to be sent before login or not
     * 
     */
    public Boolean activationEmailRequired() {
        return this.activationEmailRequired;
    }
    /**
     * @return A Boolean value that indicates whether the profile is enabled or not
     * 
     */
    public Boolean active() {
        return this.active;
    }
    /**
     * @return Text to be displayed on UI after doing self registration
     * 
     */
    public List<GetDomainsSelfRegistrationProfileAfterSubmitText> afterSubmitTexts() {
        return this.afterSubmitTexts;
    }
    /**
     * @return A Multivalue String value for Email domains which are valid for this profile
     * 
     */
    public List<String> allowedEmailDomains() {
        return this.allowedEmailDomains;
    }
    public List<String> attributeSets() {
        return this.attributeSets == null ? List.of() : this.attributeSets;
    }
    public Optional<String> attributes() {
        return Optional.ofNullable(this.attributes);
    }
    public Optional<String> authorization() {
        return Optional.ofNullable(this.authorization);
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public String compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * @return A boolean value that indicates whether the consent text is present.
     * 
     */
    public Boolean consentTextPresent() {
        return this.consentTextPresent;
    }
    /**
     * @return Consent text
     * 
     */
    public List<GetDomainsSelfRegistrationProfileConsentText> consentTexts() {
        return this.consentTexts;
    }
    /**
     * @return Default groups assigned to the user
     * 
     */
    public List<GetDomainsSelfRegistrationProfileDefaultGroup> defaultGroups() {
        return this.defaultGroups;
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Boolean deleteInProgress() {
        return this.deleteInProgress;
    }
    /**
     * @return A Multivalue String Value for Email domains to be handled as exceptions
     * 
     */
    public List<String> disallowedEmailDomains() {
        return this.disallowedEmailDomains;
    }
    /**
     * @return Registration page name
     * 
     */
    public List<GetDomainsSelfRegistrationProfileDisplayName> displayNames() {
        return this.displayNames;
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public String domainOcid() {
        return this.domainOcid;
    }
    /**
     * @return Email template
     * 
     */
    public List<GetDomainsSelfRegistrationProfileEmailTemplate> emailTemplates() {
        return this.emailTemplates;
    }
    /**
     * @return An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return References to footer logo
     * 
     */
    public String footerLogo() {
        return this.footerLogo;
    }
    /**
     * @return Footer text
     * 
     */
    public List<GetDomainsSelfRegistrationProfileFooterText> footerTexts() {
        return this.footerTexts;
    }
    /**
     * @return Reference to header logo
     * 
     */
    public String headerLogo() {
        return this.headerLogo;
    }
    /**
     * @return Header text
     * 
     */
    public List<GetDomainsSelfRegistrationProfileHeaderText> headerTexts() {
        return this.headerTexts;
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsSelfRegistrationProfileIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsSelfRegistrationProfileIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public String idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsSelfRegistrationProfileMeta> metas() {
        return this.metas;
    }
    /**
     * @return Name of the profile
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Number of days redirect URL is valid
     * 
     */
    public Integer numberOfDaysRedirectUrlIsValid() {
        return this.numberOfDaysRedirectUrlIsValid;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return This URL will be replaced in email notification sent to user. When activation email required is set to true, user is created in \&#34;pending verification\&#34; state, upon clicking this link user will be able to activate himself. When activation email required is set to false, user is created in \&#34;verified\&#34; state, this link will be used to verify user&#39;s email.
     * 
     */
    public String redirectUrl() {
        return this.redirectUrl;
    }
    public Optional<String> resourceTypeSchemaVersion() {
        return Optional.ofNullable(this.resourceTypeSchemaVersion);
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas;
    }
    public String selfRegistrationProfileId() {
        return this.selfRegistrationProfileId;
    }
    /**
     * @return A Boolean value that indicates whether the profile should be displayed on login page
     * 
     */
    public Boolean showOnLoginPage() {
        return this.showOnLoginPage;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsSelfRegistrationProfileTag> tags() {
        return this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public String tenancyOcid() {
        return this.tenancyOcid;
    }
    /**
     * @return **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none User Attributes
     * 
     */
    public List<GetDomainsSelfRegistrationProfileUserAttribute> userAttributes() {
        return this.userAttributes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsSelfRegistrationProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean activationEmailRequired;
        private Boolean active;
        private List<GetDomainsSelfRegistrationProfileAfterSubmitText> afterSubmitTexts;
        private List<String> allowedEmailDomains;
        private @Nullable List<String> attributeSets;
        private @Nullable String attributes;
        private @Nullable String authorization;
        private String compartmentOcid;
        private Boolean consentTextPresent;
        private List<GetDomainsSelfRegistrationProfileConsentText> consentTexts;
        private List<GetDomainsSelfRegistrationProfileDefaultGroup> defaultGroups;
        private Boolean deleteInProgress;
        private List<String> disallowedEmailDomains;
        private List<GetDomainsSelfRegistrationProfileDisplayName> displayNames;
        private String domainOcid;
        private List<GetDomainsSelfRegistrationProfileEmailTemplate> emailTemplates;
        private String externalId;
        private String footerLogo;
        private List<GetDomainsSelfRegistrationProfileFooterText> footerTexts;
        private String headerLogo;
        private List<GetDomainsSelfRegistrationProfileHeaderText> headerTexts;
        private String id;
        private List<GetDomainsSelfRegistrationProfileIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private List<GetDomainsSelfRegistrationProfileIdcsLastModifiedBy> idcsLastModifiedBies;
        private String idcsLastUpgradedInRelease;
        private List<String> idcsPreventedOperations;
        private List<GetDomainsSelfRegistrationProfileMeta> metas;
        private String name;
        private Integer numberOfDaysRedirectUrlIsValid;
        private String ocid;
        private String redirectUrl;
        private @Nullable String resourceTypeSchemaVersion;
        private List<String> schemas;
        private String selfRegistrationProfileId;
        private Boolean showOnLoginPage;
        private List<GetDomainsSelfRegistrationProfileTag> tags;
        private String tenancyOcid;
        private List<GetDomainsSelfRegistrationProfileUserAttribute> userAttributes;
        public Builder() {}
        public Builder(GetDomainsSelfRegistrationProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activationEmailRequired = defaults.activationEmailRequired;
    	      this.active = defaults.active;
    	      this.afterSubmitTexts = defaults.afterSubmitTexts;
    	      this.allowedEmailDomains = defaults.allowedEmailDomains;
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authorization = defaults.authorization;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.consentTextPresent = defaults.consentTextPresent;
    	      this.consentTexts = defaults.consentTexts;
    	      this.defaultGroups = defaults.defaultGroups;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.disallowedEmailDomains = defaults.disallowedEmailDomains;
    	      this.displayNames = defaults.displayNames;
    	      this.domainOcid = defaults.domainOcid;
    	      this.emailTemplates = defaults.emailTemplates;
    	      this.externalId = defaults.externalId;
    	      this.footerLogo = defaults.footerLogo;
    	      this.footerTexts = defaults.footerTexts;
    	      this.headerLogo = defaults.headerLogo;
    	      this.headerTexts = defaults.headerTexts;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.metas = defaults.metas;
    	      this.name = defaults.name;
    	      this.numberOfDaysRedirectUrlIsValid = defaults.numberOfDaysRedirectUrlIsValid;
    	      this.ocid = defaults.ocid;
    	      this.redirectUrl = defaults.redirectUrl;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.schemas = defaults.schemas;
    	      this.selfRegistrationProfileId = defaults.selfRegistrationProfileId;
    	      this.showOnLoginPage = defaults.showOnLoginPage;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.userAttributes = defaults.userAttributes;
        }

        @CustomType.Setter
        public Builder activationEmailRequired(Boolean activationEmailRequired) {
            this.activationEmailRequired = Objects.requireNonNull(activationEmailRequired);
            return this;
        }
        @CustomType.Setter
        public Builder active(Boolean active) {
            this.active = Objects.requireNonNull(active);
            return this;
        }
        @CustomType.Setter
        public Builder afterSubmitTexts(List<GetDomainsSelfRegistrationProfileAfterSubmitText> afterSubmitTexts) {
            this.afterSubmitTexts = Objects.requireNonNull(afterSubmitTexts);
            return this;
        }
        public Builder afterSubmitTexts(GetDomainsSelfRegistrationProfileAfterSubmitText... afterSubmitTexts) {
            return afterSubmitTexts(List.of(afterSubmitTexts));
        }
        @CustomType.Setter
        public Builder allowedEmailDomains(List<String> allowedEmailDomains) {
            this.allowedEmailDomains = Objects.requireNonNull(allowedEmailDomains);
            return this;
        }
        public Builder allowedEmailDomains(String... allowedEmailDomains) {
            return allowedEmailDomains(List.of(allowedEmailDomains));
        }
        @CustomType.Setter
        public Builder attributeSets(@Nullable List<String> attributeSets) {
            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(@Nullable String attributes) {
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(@Nullable String authorization) {
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentOcid(String compartmentOcid) {
            this.compartmentOcid = Objects.requireNonNull(compartmentOcid);
            return this;
        }
        @CustomType.Setter
        public Builder consentTextPresent(Boolean consentTextPresent) {
            this.consentTextPresent = Objects.requireNonNull(consentTextPresent);
            return this;
        }
        @CustomType.Setter
        public Builder consentTexts(List<GetDomainsSelfRegistrationProfileConsentText> consentTexts) {
            this.consentTexts = Objects.requireNonNull(consentTexts);
            return this;
        }
        public Builder consentTexts(GetDomainsSelfRegistrationProfileConsentText... consentTexts) {
            return consentTexts(List.of(consentTexts));
        }
        @CustomType.Setter
        public Builder defaultGroups(List<GetDomainsSelfRegistrationProfileDefaultGroup> defaultGroups) {
            this.defaultGroups = Objects.requireNonNull(defaultGroups);
            return this;
        }
        public Builder defaultGroups(GetDomainsSelfRegistrationProfileDefaultGroup... defaultGroups) {
            return defaultGroups(List.of(defaultGroups));
        }
        @CustomType.Setter
        public Builder deleteInProgress(Boolean deleteInProgress) {
            this.deleteInProgress = Objects.requireNonNull(deleteInProgress);
            return this;
        }
        @CustomType.Setter
        public Builder disallowedEmailDomains(List<String> disallowedEmailDomains) {
            this.disallowedEmailDomains = Objects.requireNonNull(disallowedEmailDomains);
            return this;
        }
        public Builder disallowedEmailDomains(String... disallowedEmailDomains) {
            return disallowedEmailDomains(List.of(disallowedEmailDomains));
        }
        @CustomType.Setter
        public Builder displayNames(List<GetDomainsSelfRegistrationProfileDisplayName> displayNames) {
            this.displayNames = Objects.requireNonNull(displayNames);
            return this;
        }
        public Builder displayNames(GetDomainsSelfRegistrationProfileDisplayName... displayNames) {
            return displayNames(List.of(displayNames));
        }
        @CustomType.Setter
        public Builder domainOcid(String domainOcid) {
            this.domainOcid = Objects.requireNonNull(domainOcid);
            return this;
        }
        @CustomType.Setter
        public Builder emailTemplates(List<GetDomainsSelfRegistrationProfileEmailTemplate> emailTemplates) {
            this.emailTemplates = Objects.requireNonNull(emailTemplates);
            return this;
        }
        public Builder emailTemplates(GetDomainsSelfRegistrationProfileEmailTemplate... emailTemplates) {
            return emailTemplates(List.of(emailTemplates));
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            this.externalId = Objects.requireNonNull(externalId);
            return this;
        }
        @CustomType.Setter
        public Builder footerLogo(String footerLogo) {
            this.footerLogo = Objects.requireNonNull(footerLogo);
            return this;
        }
        @CustomType.Setter
        public Builder footerTexts(List<GetDomainsSelfRegistrationProfileFooterText> footerTexts) {
            this.footerTexts = Objects.requireNonNull(footerTexts);
            return this;
        }
        public Builder footerTexts(GetDomainsSelfRegistrationProfileFooterText... footerTexts) {
            return footerTexts(List.of(footerTexts));
        }
        @CustomType.Setter
        public Builder headerLogo(String headerLogo) {
            this.headerLogo = Objects.requireNonNull(headerLogo);
            return this;
        }
        @CustomType.Setter
        public Builder headerTexts(List<GetDomainsSelfRegistrationProfileHeaderText> headerTexts) {
            this.headerTexts = Objects.requireNonNull(headerTexts);
            return this;
        }
        public Builder headerTexts(GetDomainsSelfRegistrationProfileHeaderText... headerTexts) {
            return headerTexts(List.of(headerTexts));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(List<GetDomainsSelfRegistrationProfileIdcsCreatedBy> idcsCreatedBies) {
            this.idcsCreatedBies = Objects.requireNonNull(idcsCreatedBies);
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsSelfRegistrationProfileIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            this.idcsEndpoint = Objects.requireNonNull(idcsEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(List<GetDomainsSelfRegistrationProfileIdcsLastModifiedBy> idcsLastModifiedBies) {
            this.idcsLastModifiedBies = Objects.requireNonNull(idcsLastModifiedBies);
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsSelfRegistrationProfileIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            this.idcsLastUpgradedInRelease = Objects.requireNonNull(idcsLastUpgradedInRelease);
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            this.idcsPreventedOperations = Objects.requireNonNull(idcsPreventedOperations);
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder metas(List<GetDomainsSelfRegistrationProfileMeta> metas) {
            this.metas = Objects.requireNonNull(metas);
            return this;
        }
        public Builder metas(GetDomainsSelfRegistrationProfileMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder numberOfDaysRedirectUrlIsValid(Integer numberOfDaysRedirectUrlIsValid) {
            this.numberOfDaysRedirectUrlIsValid = Objects.requireNonNull(numberOfDaysRedirectUrlIsValid);
            return this;
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            this.ocid = Objects.requireNonNull(ocid);
            return this;
        }
        @CustomType.Setter
        public Builder redirectUrl(String redirectUrl) {
            this.redirectUrl = Objects.requireNonNull(redirectUrl);
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(@Nullable String resourceTypeSchemaVersion) {
            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(List<String> schemas) {
            this.schemas = Objects.requireNonNull(schemas);
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder selfRegistrationProfileId(String selfRegistrationProfileId) {
            this.selfRegistrationProfileId = Objects.requireNonNull(selfRegistrationProfileId);
            return this;
        }
        @CustomType.Setter
        public Builder showOnLoginPage(Boolean showOnLoginPage) {
            this.showOnLoginPage = Objects.requireNonNull(showOnLoginPage);
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetDomainsSelfRegistrationProfileTag> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tags(GetDomainsSelfRegistrationProfileTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(String tenancyOcid) {
            this.tenancyOcid = Objects.requireNonNull(tenancyOcid);
            return this;
        }
        @CustomType.Setter
        public Builder userAttributes(List<GetDomainsSelfRegistrationProfileUserAttribute> userAttributes) {
            this.userAttributes = Objects.requireNonNull(userAttributes);
            return this;
        }
        public Builder userAttributes(GetDomainsSelfRegistrationProfileUserAttribute... userAttributes) {
            return userAttributes(List.of(userAttributes));
        }
        public GetDomainsSelfRegistrationProfileResult build() {
            final var o = new GetDomainsSelfRegistrationProfileResult();
            o.activationEmailRequired = activationEmailRequired;
            o.active = active;
            o.afterSubmitTexts = afterSubmitTexts;
            o.allowedEmailDomains = allowedEmailDomains;
            o.attributeSets = attributeSets;
            o.attributes = attributes;
            o.authorization = authorization;
            o.compartmentOcid = compartmentOcid;
            o.consentTextPresent = consentTextPresent;
            o.consentTexts = consentTexts;
            o.defaultGroups = defaultGroups;
            o.deleteInProgress = deleteInProgress;
            o.disallowedEmailDomains = disallowedEmailDomains;
            o.displayNames = displayNames;
            o.domainOcid = domainOcid;
            o.emailTemplates = emailTemplates;
            o.externalId = externalId;
            o.footerLogo = footerLogo;
            o.footerTexts = footerTexts;
            o.headerLogo = headerLogo;
            o.headerTexts = headerTexts;
            o.id = id;
            o.idcsCreatedBies = idcsCreatedBies;
            o.idcsEndpoint = idcsEndpoint;
            o.idcsLastModifiedBies = idcsLastModifiedBies;
            o.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            o.idcsPreventedOperations = idcsPreventedOperations;
            o.metas = metas;
            o.name = name;
            o.numberOfDaysRedirectUrlIsValid = numberOfDaysRedirectUrlIsValid;
            o.ocid = ocid;
            o.redirectUrl = redirectUrl;
            o.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            o.schemas = schemas;
            o.selfRegistrationProfileId = selfRegistrationProfileId;
            o.showOnLoginPage = showOnLoginPage;
            o.tags = tags;
            o.tenancyOcid = tenancyOcid;
            o.userAttributes = userAttributes;
            return o;
        }
    }
}
