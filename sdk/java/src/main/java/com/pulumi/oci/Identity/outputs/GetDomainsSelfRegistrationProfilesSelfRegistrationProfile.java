// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileAfterSubmitText;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileConsentText;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDefaultGroup;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDisplayName;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileEmailTemplate;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileFooterText;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileHeaderText;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsCreatedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsLastModifiedBy;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileMeta;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileTag;
import com.pulumi.oci.Identity.outputs.GetDomainsSelfRegistrationProfilesSelfRegistrationProfileUserAttribute;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsSelfRegistrationProfilesSelfRegistrationProfile {
    /**
     * @return **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none A Boolean value that indicates whether Account verification email is required to be sent before login or not
     * 
     */
    private Boolean activationEmailRequired;
    /**
     * @return A Boolean value that indicates whether the profile is enabled or not
     * 
     */
    private Boolean active;
    /**
     * @return Text to be displayed on UI after doing self registration
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileAfterSubmitText> afterSubmitTexts;
    /**
     * @return A Multivalue String value for Email domains which are valid for this profile
     * 
     */
    private List<String> allowedEmailDomains;
    /**
     * @return A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    private List<String> attributeSets;
    /**
     * @return A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    private String attributes;
    /**
     * @return The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    private String authorization;
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    private String compartmentOcid;
    /**
     * @return A boolean value that indicates whether the consent text is present.
     * 
     */
    private Boolean consentTextPresent;
    /**
     * @return Consent text
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileConsentText> consentTexts;
    /**
     * @return Default groups assigned to the user
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDefaultGroup> defaultGroups;
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    private Boolean deleteInProgress;
    /**
     * @return A Multivalue String Value for Email domains to be handled as exceptions
     * 
     */
    private List<String> disallowedEmailDomains;
    /**
     * @return Registration page name
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDisplayName> displayNames;
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    private String domainOcid;
    /**
     * @return Email template
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileEmailTemplate> emailTemplates;
    /**
     * @return An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     */
    private String externalId;
    /**
     * @return References to footer logo
     * 
     */
    private String footerLogo;
    /**
     * @return Footer text
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileFooterText> footerTexts;
    /**
     * @return Reference to header logo
     * 
     */
    private String headerLogo;
    /**
     * @return Header text
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileHeaderText> headerTexts;
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    private String id;
    /**
     * @return The User or App who created the Resource
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsCreatedBy> idcsCreatedBies;
    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    private String idcsEndpoint;
    /**
     * @return The User or App who modified the Resource
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsLastModifiedBy> idcsLastModifiedBies;
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    private String idcsLastUpgradedInRelease;
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    private List<String> idcsPreventedOperations;
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileMeta> metas;
    /**
     * @return Name of the profile
     * 
     */
    private String name;
    /**
     * @return Number of days redirect URL is valid
     * 
     */
    private Integer numberOfDaysRedirectUrlIsValid;
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    private String ocid;
    /**
     * @return This URL will be replaced in email notification sent to user. When activation email required is set to true, user is created in \&#34;pending verification\&#34; state, upon clicking this link user will be able to activate himself. When activation email required is set to false, user is created in \&#34;verified\&#34; state, this link will be used to verify user&#39;s email.
     * 
     */
    private String redirectUrl;
    /**
     * @return An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    private String resourceTypeSchemaVersion;
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    private List<String> schemas;
    /**
     * @return A Boolean value that indicates whether the profile should be displayed on login page
     * 
     */
    private Boolean showOnLoginPage;
    /**
     * @return A list of tags on this resource.
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileTag> tags;
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    private String tenancyOcid;
    /**
     * @return **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none User Attributes
     * 
     */
    private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileUserAttribute> userAttributes;

    private GetDomainsSelfRegistrationProfilesSelfRegistrationProfile() {}
    /**
     * @return **SCIM++ Properties:**
     * * caseExact: false
     * * idcsSearchable: true
     * * multiValued: false
     * * mutability: readWrite
     * * required: true
     * * returned: default
     * * type: boolean
     * * uniqueness: none A Boolean value that indicates whether Account verification email is required to be sent before login or not
     * 
     */
    public Boolean activationEmailRequired() {
        return this.activationEmailRequired;
    }
    /**
     * @return A Boolean value that indicates whether the profile is enabled or not
     * 
     */
    public Boolean active() {
        return this.active;
    }
    /**
     * @return Text to be displayed on UI after doing self registration
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileAfterSubmitText> afterSubmitTexts() {
        return this.afterSubmitTexts;
    }
    /**
     * @return A Multivalue String value for Email domains which are valid for this profile
     * 
     */
    public List<String> allowedEmailDomains() {
        return this.allowedEmailDomains;
    }
    /**
     * @return A multi-valued list of strings indicating the return type of attribute definition. The specified set of attributes can be fetched by the return type of the attribute. One or more values can be given together to fetch more than one group of attributes. If &#39;attributes&#39; query parameter is also available, union of the two is fetched. Valid values - all, always, never, request, default. Values are case-insensitive.
     * 
     */
    public List<String> attributeSets() {
        return this.attributeSets;
    }
    /**
     * @return A comma-delimited string that specifies the names of resource attributes that should be returned in the response. By default, a response that contains resource attributes contains only attributes that are defined in the schema for that resource type as returned=always or returned=default. An attribute that is defined as returned=request is returned in a response only if the request specifies its name in the value of this query parameter. If a request specifies this query parameter, the response contains the attributes that this query parameter specifies, as well as any attribute that is defined as returned=always.
     * 
     */
    public String attributes() {
        return this.attributes;
    }
    /**
     * @return The Authorization field value consists of credentials containing the authentication information of the user agent for the realm of the resource being requested.
     * 
     */
    public String authorization() {
        return this.authorization;
    }
    /**
     * @return Oracle Cloud Infrastructure Compartment Id (ocid) in which the resource lives.
     * 
     */
    public String compartmentOcid() {
        return this.compartmentOcid;
    }
    /**
     * @return A boolean value that indicates whether the consent text is present.
     * 
     */
    public Boolean consentTextPresent() {
        return this.consentTextPresent;
    }
    /**
     * @return Consent text
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileConsentText> consentTexts() {
        return this.consentTexts;
    }
    /**
     * @return Default groups assigned to the user
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDefaultGroup> defaultGroups() {
        return this.defaultGroups;
    }
    /**
     * @return A boolean flag indicating this resource in the process of being deleted. Usually set to true when synchronous deletion of the resource would take too long.
     * 
     */
    public Boolean deleteInProgress() {
        return this.deleteInProgress;
    }
    /**
     * @return A Multivalue String Value for Email domains to be handled as exceptions
     * 
     */
    public List<String> disallowedEmailDomains() {
        return this.disallowedEmailDomains;
    }
    /**
     * @return Registration page name
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDisplayName> displayNames() {
        return this.displayNames;
    }
    /**
     * @return Oracle Cloud Infrastructure Domain Id (ocid) in which the resource lives.
     * 
     */
    public String domainOcid() {
        return this.domainOcid;
    }
    /**
     * @return Email template
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileEmailTemplate> emailTemplates() {
        return this.emailTemplates;
    }
    /**
     * @return An identifier for the Resource as defined by the Service Consumer. The externalId may simplify identification of the Resource between Service Consumer and Service Provider by allowing the Consumer to refer to the Resource with its own identifier, obviating the need to store a local mapping between the local identifier of the Resource and the identifier used by the Service Provider. Each Resource MAY include a non-empty externalId value. The value of the externalId attribute is always issued by the Service Consumer and can never be specified by the Service Provider. The Service Provider MUST always interpret the externalId as scoped to the Service Consumer&#39;s tenant.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return References to footer logo
     * 
     */
    public String footerLogo() {
        return this.footerLogo;
    }
    /**
     * @return Footer text
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileFooterText> footerTexts() {
        return this.footerTexts;
    }
    /**
     * @return Reference to header logo
     * 
     */
    public String headerLogo() {
        return this.headerLogo;
    }
    /**
     * @return Header text
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileHeaderText> headerTexts() {
        return this.headerTexts;
    }
    /**
     * @return Unique identifier for the SCIM Resource as defined by the Service Provider. Each representation of the Resource MUST include a non-empty id value. This identifier MUST be unique across the Service Provider&#39;s entire set of Resources. It MUST be a stable, non-reassignable identifier that does not change when the same Resource is returned in subsequent requests. The value of the id attribute is always issued by the Service Provider and MUST never be specified by the Service Consumer. bulkId: is a reserved keyword and MUST NOT be used in the unique identifier.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The User or App who created the Resource
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsCreatedBy> idcsCreatedBies() {
        return this.idcsCreatedBies;
    }
    /**
     * @return The basic endpoint for the identity domain
     * 
     */
    public String idcsEndpoint() {
        return this.idcsEndpoint;
    }
    /**
     * @return The User or App who modified the Resource
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsLastModifiedBy> idcsLastModifiedBies() {
        return this.idcsLastModifiedBies;
    }
    /**
     * @return The release number when the resource was upgraded.
     * 
     */
    public String idcsLastUpgradedInRelease() {
        return this.idcsLastUpgradedInRelease;
    }
    /**
     * @return Each value of this attribute specifies an operation that only an internal client may perform on this particular resource.
     * 
     */
    public List<String> idcsPreventedOperations() {
        return this.idcsPreventedOperations;
    }
    /**
     * @return A complex attribute that contains resource metadata. All sub-attributes are OPTIONAL.
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileMeta> metas() {
        return this.metas;
    }
    /**
     * @return Name of the profile
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Number of days redirect URL is valid
     * 
     */
    public Integer numberOfDaysRedirectUrlIsValid() {
        return this.numberOfDaysRedirectUrlIsValid;
    }
    /**
     * @return Unique Oracle Cloud Infrastructure identifier for the SCIM Resource.
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    /**
     * @return This URL will be replaced in email notification sent to user. When activation email required is set to true, user is created in \&#34;pending verification\&#34; state, upon clicking this link user will be able to activate himself. When activation email required is set to false, user is created in \&#34;verified\&#34; state, this link will be used to verify user&#39;s email.
     * 
     */
    public String redirectUrl() {
        return this.redirectUrl;
    }
    /**
     * @return An endpoint-specific schema version number to use in the Request. Allowed version values are Earliest Version or Latest Version as specified in each REST API endpoint description, or any sequential number inbetween. All schema attributes/body parameters are a part of version 1. After version 1, any attributes added or deprecated will be tagged with the version that they were added to or deprecated in. If no version is provided, the latest schema version is returned.
     * 
     */
    public String resourceTypeSchemaVersion() {
        return this.resourceTypeSchemaVersion;
    }
    /**
     * @return REQUIRED. The schemas attribute is an array of Strings which allows introspection of the supported schema version for a SCIM representation as well any schema extensions supported by that representation. Each String value must be a unique URI. This specification defines URIs for User, Group, and a standard \&#34;enterprise\&#34; extension. All representations of SCIM schema MUST include a non-zero value array with value(s) of the URIs supported by that representation. Duplicate values MUST NOT be included. Value order is not specified and MUST not impact behavior.
     * 
     */
    public List<String> schemas() {
        return this.schemas;
    }
    /**
     * @return A Boolean value that indicates whether the profile should be displayed on login page
     * 
     */
    public Boolean showOnLoginPage() {
        return this.showOnLoginPage;
    }
    /**
     * @return A list of tags on this resource.
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileTag> tags() {
        return this.tags;
    }
    /**
     * @return Oracle Cloud Infrastructure Tenant Id (ocid) in which the resource lives.
     * 
     */
    public String tenancyOcid() {
        return this.tenancyOcid;
    }
    /**
     * @return **SCIM++ Properties:**
     * * idcsCompositeKey: [value]
     * * idcsSearchable: true
     * * multiValued: true
     * * mutability: readWrite
     * * required: false
     * * returned: default
     * * type: complex
     * * uniqueness: none User Attributes
     * 
     */
    public List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileUserAttribute> userAttributes() {
        return this.userAttributes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsSelfRegistrationProfilesSelfRegistrationProfile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean activationEmailRequired;
        private Boolean active;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileAfterSubmitText> afterSubmitTexts;
        private List<String> allowedEmailDomains;
        private List<String> attributeSets;
        private String attributes;
        private String authorization;
        private String compartmentOcid;
        private Boolean consentTextPresent;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileConsentText> consentTexts;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDefaultGroup> defaultGroups;
        private Boolean deleteInProgress;
        private List<String> disallowedEmailDomains;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDisplayName> displayNames;
        private String domainOcid;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileEmailTemplate> emailTemplates;
        private String externalId;
        private String footerLogo;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileFooterText> footerTexts;
        private String headerLogo;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileHeaderText> headerTexts;
        private String id;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsCreatedBy> idcsCreatedBies;
        private String idcsEndpoint;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsLastModifiedBy> idcsLastModifiedBies;
        private String idcsLastUpgradedInRelease;
        private List<String> idcsPreventedOperations;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileMeta> metas;
        private String name;
        private Integer numberOfDaysRedirectUrlIsValid;
        private String ocid;
        private String redirectUrl;
        private String resourceTypeSchemaVersion;
        private List<String> schemas;
        private Boolean showOnLoginPage;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileTag> tags;
        private String tenancyOcid;
        private List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileUserAttribute> userAttributes;
        public Builder() {}
        public Builder(GetDomainsSelfRegistrationProfilesSelfRegistrationProfile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activationEmailRequired = defaults.activationEmailRequired;
    	      this.active = defaults.active;
    	      this.afterSubmitTexts = defaults.afterSubmitTexts;
    	      this.allowedEmailDomains = defaults.allowedEmailDomains;
    	      this.attributeSets = defaults.attributeSets;
    	      this.attributes = defaults.attributes;
    	      this.authorization = defaults.authorization;
    	      this.compartmentOcid = defaults.compartmentOcid;
    	      this.consentTextPresent = defaults.consentTextPresent;
    	      this.consentTexts = defaults.consentTexts;
    	      this.defaultGroups = defaults.defaultGroups;
    	      this.deleteInProgress = defaults.deleteInProgress;
    	      this.disallowedEmailDomains = defaults.disallowedEmailDomains;
    	      this.displayNames = defaults.displayNames;
    	      this.domainOcid = defaults.domainOcid;
    	      this.emailTemplates = defaults.emailTemplates;
    	      this.externalId = defaults.externalId;
    	      this.footerLogo = defaults.footerLogo;
    	      this.footerTexts = defaults.footerTexts;
    	      this.headerLogo = defaults.headerLogo;
    	      this.headerTexts = defaults.headerTexts;
    	      this.id = defaults.id;
    	      this.idcsCreatedBies = defaults.idcsCreatedBies;
    	      this.idcsEndpoint = defaults.idcsEndpoint;
    	      this.idcsLastModifiedBies = defaults.idcsLastModifiedBies;
    	      this.idcsLastUpgradedInRelease = defaults.idcsLastUpgradedInRelease;
    	      this.idcsPreventedOperations = defaults.idcsPreventedOperations;
    	      this.metas = defaults.metas;
    	      this.name = defaults.name;
    	      this.numberOfDaysRedirectUrlIsValid = defaults.numberOfDaysRedirectUrlIsValid;
    	      this.ocid = defaults.ocid;
    	      this.redirectUrl = defaults.redirectUrl;
    	      this.resourceTypeSchemaVersion = defaults.resourceTypeSchemaVersion;
    	      this.schemas = defaults.schemas;
    	      this.showOnLoginPage = defaults.showOnLoginPage;
    	      this.tags = defaults.tags;
    	      this.tenancyOcid = defaults.tenancyOcid;
    	      this.userAttributes = defaults.userAttributes;
        }

        @CustomType.Setter
        public Builder activationEmailRequired(Boolean activationEmailRequired) {
            if (activationEmailRequired == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "activationEmailRequired");
            }
            this.activationEmailRequired = activationEmailRequired;
            return this;
        }
        @CustomType.Setter
        public Builder active(Boolean active) {
            if (active == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "active");
            }
            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder afterSubmitTexts(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileAfterSubmitText> afterSubmitTexts) {
            if (afterSubmitTexts == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "afterSubmitTexts");
            }
            this.afterSubmitTexts = afterSubmitTexts;
            return this;
        }
        public Builder afterSubmitTexts(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileAfterSubmitText... afterSubmitTexts) {
            return afterSubmitTexts(List.of(afterSubmitTexts));
        }
        @CustomType.Setter
        public Builder allowedEmailDomains(List<String> allowedEmailDomains) {
            if (allowedEmailDomains == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "allowedEmailDomains");
            }
            this.allowedEmailDomains = allowedEmailDomains;
            return this;
        }
        public Builder allowedEmailDomains(String... allowedEmailDomains) {
            return allowedEmailDomains(List.of(allowedEmailDomains));
        }
        @CustomType.Setter
        public Builder attributeSets(List<String> attributeSets) {
            if (attributeSets == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "attributeSets");
            }
            this.attributeSets = attributeSets;
            return this;
        }
        public Builder attributeSets(String... attributeSets) {
            return attributeSets(List.of(attributeSets));
        }
        @CustomType.Setter
        public Builder attributes(String attributes) {
            if (attributes == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "attributes");
            }
            this.attributes = attributes;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(String authorization) {
            if (authorization == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "authorization");
            }
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentOcid(String compartmentOcid) {
            if (compartmentOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "compartmentOcid");
            }
            this.compartmentOcid = compartmentOcid;
            return this;
        }
        @CustomType.Setter
        public Builder consentTextPresent(Boolean consentTextPresent) {
            if (consentTextPresent == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "consentTextPresent");
            }
            this.consentTextPresent = consentTextPresent;
            return this;
        }
        @CustomType.Setter
        public Builder consentTexts(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileConsentText> consentTexts) {
            if (consentTexts == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "consentTexts");
            }
            this.consentTexts = consentTexts;
            return this;
        }
        public Builder consentTexts(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileConsentText... consentTexts) {
            return consentTexts(List.of(consentTexts));
        }
        @CustomType.Setter
        public Builder defaultGroups(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDefaultGroup> defaultGroups) {
            if (defaultGroups == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "defaultGroups");
            }
            this.defaultGroups = defaultGroups;
            return this;
        }
        public Builder defaultGroups(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDefaultGroup... defaultGroups) {
            return defaultGroups(List.of(defaultGroups));
        }
        @CustomType.Setter
        public Builder deleteInProgress(Boolean deleteInProgress) {
            if (deleteInProgress == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "deleteInProgress");
            }
            this.deleteInProgress = deleteInProgress;
            return this;
        }
        @CustomType.Setter
        public Builder disallowedEmailDomains(List<String> disallowedEmailDomains) {
            if (disallowedEmailDomains == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "disallowedEmailDomains");
            }
            this.disallowedEmailDomains = disallowedEmailDomains;
            return this;
        }
        public Builder disallowedEmailDomains(String... disallowedEmailDomains) {
            return disallowedEmailDomains(List.of(disallowedEmailDomains));
        }
        @CustomType.Setter
        public Builder displayNames(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDisplayName> displayNames) {
            if (displayNames == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "displayNames");
            }
            this.displayNames = displayNames;
            return this;
        }
        public Builder displayNames(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileDisplayName... displayNames) {
            return displayNames(List.of(displayNames));
        }
        @CustomType.Setter
        public Builder domainOcid(String domainOcid) {
            if (domainOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "domainOcid");
            }
            this.domainOcid = domainOcid;
            return this;
        }
        @CustomType.Setter
        public Builder emailTemplates(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileEmailTemplate> emailTemplates) {
            if (emailTemplates == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "emailTemplates");
            }
            this.emailTemplates = emailTemplates;
            return this;
        }
        public Builder emailTemplates(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileEmailTemplate... emailTemplates) {
            return emailTemplates(List.of(emailTemplates));
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            if (externalId == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "externalId");
            }
            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder footerLogo(String footerLogo) {
            if (footerLogo == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "footerLogo");
            }
            this.footerLogo = footerLogo;
            return this;
        }
        @CustomType.Setter
        public Builder footerTexts(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileFooterText> footerTexts) {
            if (footerTexts == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "footerTexts");
            }
            this.footerTexts = footerTexts;
            return this;
        }
        public Builder footerTexts(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileFooterText... footerTexts) {
            return footerTexts(List.of(footerTexts));
        }
        @CustomType.Setter
        public Builder headerLogo(String headerLogo) {
            if (headerLogo == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "headerLogo");
            }
            this.headerLogo = headerLogo;
            return this;
        }
        @CustomType.Setter
        public Builder headerTexts(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileHeaderText> headerTexts) {
            if (headerTexts == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "headerTexts");
            }
            this.headerTexts = headerTexts;
            return this;
        }
        public Builder headerTexts(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileHeaderText... headerTexts) {
            return headerTexts(List.of(headerTexts));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsCreatedBies(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsCreatedBy> idcsCreatedBies) {
            if (idcsCreatedBies == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "idcsCreatedBies");
            }
            this.idcsCreatedBies = idcsCreatedBies;
            return this;
        }
        public Builder idcsCreatedBies(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsCreatedBy... idcsCreatedBies) {
            return idcsCreatedBies(List.of(idcsCreatedBies));
        }
        @CustomType.Setter
        public Builder idcsEndpoint(String idcsEndpoint) {
            if (idcsEndpoint == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "idcsEndpoint");
            }
            this.idcsEndpoint = idcsEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder idcsLastModifiedBies(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsLastModifiedBy> idcsLastModifiedBies) {
            if (idcsLastModifiedBies == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "idcsLastModifiedBies");
            }
            this.idcsLastModifiedBies = idcsLastModifiedBies;
            return this;
        }
        public Builder idcsLastModifiedBies(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileIdcsLastModifiedBy... idcsLastModifiedBies) {
            return idcsLastModifiedBies(List.of(idcsLastModifiedBies));
        }
        @CustomType.Setter
        public Builder idcsLastUpgradedInRelease(String idcsLastUpgradedInRelease) {
            if (idcsLastUpgradedInRelease == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "idcsLastUpgradedInRelease");
            }
            this.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            return this;
        }
        @CustomType.Setter
        public Builder idcsPreventedOperations(List<String> idcsPreventedOperations) {
            if (idcsPreventedOperations == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "idcsPreventedOperations");
            }
            this.idcsPreventedOperations = idcsPreventedOperations;
            return this;
        }
        public Builder idcsPreventedOperations(String... idcsPreventedOperations) {
            return idcsPreventedOperations(List.of(idcsPreventedOperations));
        }
        @CustomType.Setter
        public Builder metas(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileMeta> metas) {
            if (metas == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "metas");
            }
            this.metas = metas;
            return this;
        }
        public Builder metas(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileMeta... metas) {
            return metas(List.of(metas));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder numberOfDaysRedirectUrlIsValid(Integer numberOfDaysRedirectUrlIsValid) {
            if (numberOfDaysRedirectUrlIsValid == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "numberOfDaysRedirectUrlIsValid");
            }
            this.numberOfDaysRedirectUrlIsValid = numberOfDaysRedirectUrlIsValid;
            return this;
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            if (ocid == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "ocid");
            }
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder redirectUrl(String redirectUrl) {
            if (redirectUrl == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "redirectUrl");
            }
            this.redirectUrl = redirectUrl;
            return this;
        }
        @CustomType.Setter
        public Builder resourceTypeSchemaVersion(String resourceTypeSchemaVersion) {
            if (resourceTypeSchemaVersion == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "resourceTypeSchemaVersion");
            }
            this.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder schemas(List<String> schemas) {
            if (schemas == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "schemas");
            }
            this.schemas = schemas;
            return this;
        }
        public Builder schemas(String... schemas) {
            return schemas(List.of(schemas));
        }
        @CustomType.Setter
        public Builder showOnLoginPage(Boolean showOnLoginPage) {
            if (showOnLoginPage == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "showOnLoginPage");
            }
            this.showOnLoginPage = showOnLoginPage;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileTag> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileTag... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder tenancyOcid(String tenancyOcid) {
            if (tenancyOcid == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "tenancyOcid");
            }
            this.tenancyOcid = tenancyOcid;
            return this;
        }
        @CustomType.Setter
        public Builder userAttributes(List<GetDomainsSelfRegistrationProfilesSelfRegistrationProfileUserAttribute> userAttributes) {
            if (userAttributes == null) {
              throw new MissingRequiredPropertyException("GetDomainsSelfRegistrationProfilesSelfRegistrationProfile", "userAttributes");
            }
            this.userAttributes = userAttributes;
            return this;
        }
        public Builder userAttributes(GetDomainsSelfRegistrationProfilesSelfRegistrationProfileUserAttribute... userAttributes) {
            return userAttributes(List.of(userAttributes));
        }
        public GetDomainsSelfRegistrationProfilesSelfRegistrationProfile build() {
            final var _resultValue = new GetDomainsSelfRegistrationProfilesSelfRegistrationProfile();
            _resultValue.activationEmailRequired = activationEmailRequired;
            _resultValue.active = active;
            _resultValue.afterSubmitTexts = afterSubmitTexts;
            _resultValue.allowedEmailDomains = allowedEmailDomains;
            _resultValue.attributeSets = attributeSets;
            _resultValue.attributes = attributes;
            _resultValue.authorization = authorization;
            _resultValue.compartmentOcid = compartmentOcid;
            _resultValue.consentTextPresent = consentTextPresent;
            _resultValue.consentTexts = consentTexts;
            _resultValue.defaultGroups = defaultGroups;
            _resultValue.deleteInProgress = deleteInProgress;
            _resultValue.disallowedEmailDomains = disallowedEmailDomains;
            _resultValue.displayNames = displayNames;
            _resultValue.domainOcid = domainOcid;
            _resultValue.emailTemplates = emailTemplates;
            _resultValue.externalId = externalId;
            _resultValue.footerLogo = footerLogo;
            _resultValue.footerTexts = footerTexts;
            _resultValue.headerLogo = headerLogo;
            _resultValue.headerTexts = headerTexts;
            _resultValue.id = id;
            _resultValue.idcsCreatedBies = idcsCreatedBies;
            _resultValue.idcsEndpoint = idcsEndpoint;
            _resultValue.idcsLastModifiedBies = idcsLastModifiedBies;
            _resultValue.idcsLastUpgradedInRelease = idcsLastUpgradedInRelease;
            _resultValue.idcsPreventedOperations = idcsPreventedOperations;
            _resultValue.metas = metas;
            _resultValue.name = name;
            _resultValue.numberOfDaysRedirectUrlIsValid = numberOfDaysRedirectUrlIsValid;
            _resultValue.ocid = ocid;
            _resultValue.redirectUrl = redirectUrl;
            _resultValue.resourceTypeSchemaVersion = resourceTypeSchemaVersion;
            _resultValue.schemas = schemas;
            _resultValue.showOnLoginPage = showOnLoginPage;
            _resultValue.tags = tags;
            _resultValue.tenancyOcid = tenancyOcid;
            _resultValue.userAttributes = userAttributes;
            return _resultValue;
        }
    }
}
