// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainsSettingCertificateValidation {
    /**
     * @return Use CRL as Fallback.
     * 
     */
    private Boolean crlCheckOnOcspFailureEnabled;
    /**
     * @return CRL is enabled Configuration
     * 
     */
    private Boolean crlEnabled;
    /**
     * @return CRL Location.
     * 
     */
    private String crlLocation;
    /**
     * @return The CRL refresh interval in minutes
     * 
     */
    private Integer crlRefreshInterval;
    /**
     * @return OCSP is enabled Configuration
     * 
     */
    private Boolean ocspEnabled;
    /**
     * @return OCSP Responder URL
     * 
     */
    private String ocspResponderUrl;
    /**
     * @return This setting says, OCSP Responder URL present in the issued certificate must be used. Otherwise, OCSP Responder URL from IDP or Settings.
     * 
     */
    private Boolean ocspSettingsResponderUrlPreferred;
    /**
     * @return OCSP Signing Certificate Alias
     * 
     */
    private String ocspSigningCertificateAlias;
    /**
     * @return The OCSP Timeout duration in minutes
     * 
     */
    private Integer ocspTimeoutDuration;
    /**
     * @return OCSP Accept unknown response status from ocsp responder.
     * 
     */
    private Boolean ocspUnknownResponseStatusAllowed;

    private GetDomainsSettingCertificateValidation() {}
    /**
     * @return Use CRL as Fallback.
     * 
     */
    public Boolean crlCheckOnOcspFailureEnabled() {
        return this.crlCheckOnOcspFailureEnabled;
    }
    /**
     * @return CRL is enabled Configuration
     * 
     */
    public Boolean crlEnabled() {
        return this.crlEnabled;
    }
    /**
     * @return CRL Location.
     * 
     */
    public String crlLocation() {
        return this.crlLocation;
    }
    /**
     * @return The CRL refresh interval in minutes
     * 
     */
    public Integer crlRefreshInterval() {
        return this.crlRefreshInterval;
    }
    /**
     * @return OCSP is enabled Configuration
     * 
     */
    public Boolean ocspEnabled() {
        return this.ocspEnabled;
    }
    /**
     * @return OCSP Responder URL
     * 
     */
    public String ocspResponderUrl() {
        return this.ocspResponderUrl;
    }
    /**
     * @return This setting says, OCSP Responder URL present in the issued certificate must be used. Otherwise, OCSP Responder URL from IDP or Settings.
     * 
     */
    public Boolean ocspSettingsResponderUrlPreferred() {
        return this.ocspSettingsResponderUrlPreferred;
    }
    /**
     * @return OCSP Signing Certificate Alias
     * 
     */
    public String ocspSigningCertificateAlias() {
        return this.ocspSigningCertificateAlias;
    }
    /**
     * @return The OCSP Timeout duration in minutes
     * 
     */
    public Integer ocspTimeoutDuration() {
        return this.ocspTimeoutDuration;
    }
    /**
     * @return OCSP Accept unknown response status from ocsp responder.
     * 
     */
    public Boolean ocspUnknownResponseStatusAllowed() {
        return this.ocspUnknownResponseStatusAllowed;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsSettingCertificateValidation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean crlCheckOnOcspFailureEnabled;
        private Boolean crlEnabled;
        private String crlLocation;
        private Integer crlRefreshInterval;
        private Boolean ocspEnabled;
        private String ocspResponderUrl;
        private Boolean ocspSettingsResponderUrlPreferred;
        private String ocspSigningCertificateAlias;
        private Integer ocspTimeoutDuration;
        private Boolean ocspUnknownResponseStatusAllowed;
        public Builder() {}
        public Builder(GetDomainsSettingCertificateValidation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.crlCheckOnOcspFailureEnabled = defaults.crlCheckOnOcspFailureEnabled;
    	      this.crlEnabled = defaults.crlEnabled;
    	      this.crlLocation = defaults.crlLocation;
    	      this.crlRefreshInterval = defaults.crlRefreshInterval;
    	      this.ocspEnabled = defaults.ocspEnabled;
    	      this.ocspResponderUrl = defaults.ocspResponderUrl;
    	      this.ocspSettingsResponderUrlPreferred = defaults.ocspSettingsResponderUrlPreferred;
    	      this.ocspSigningCertificateAlias = defaults.ocspSigningCertificateAlias;
    	      this.ocspTimeoutDuration = defaults.ocspTimeoutDuration;
    	      this.ocspUnknownResponseStatusAllowed = defaults.ocspUnknownResponseStatusAllowed;
        }

        @CustomType.Setter
        public Builder crlCheckOnOcspFailureEnabled(Boolean crlCheckOnOcspFailureEnabled) {
            this.crlCheckOnOcspFailureEnabled = Objects.requireNonNull(crlCheckOnOcspFailureEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder crlEnabled(Boolean crlEnabled) {
            this.crlEnabled = Objects.requireNonNull(crlEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder crlLocation(String crlLocation) {
            this.crlLocation = Objects.requireNonNull(crlLocation);
            return this;
        }
        @CustomType.Setter
        public Builder crlRefreshInterval(Integer crlRefreshInterval) {
            this.crlRefreshInterval = Objects.requireNonNull(crlRefreshInterval);
            return this;
        }
        @CustomType.Setter
        public Builder ocspEnabled(Boolean ocspEnabled) {
            this.ocspEnabled = Objects.requireNonNull(ocspEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder ocspResponderUrl(String ocspResponderUrl) {
            this.ocspResponderUrl = Objects.requireNonNull(ocspResponderUrl);
            return this;
        }
        @CustomType.Setter
        public Builder ocspSettingsResponderUrlPreferred(Boolean ocspSettingsResponderUrlPreferred) {
            this.ocspSettingsResponderUrlPreferred = Objects.requireNonNull(ocspSettingsResponderUrlPreferred);
            return this;
        }
        @CustomType.Setter
        public Builder ocspSigningCertificateAlias(String ocspSigningCertificateAlias) {
            this.ocspSigningCertificateAlias = Objects.requireNonNull(ocspSigningCertificateAlias);
            return this;
        }
        @CustomType.Setter
        public Builder ocspTimeoutDuration(Integer ocspTimeoutDuration) {
            this.ocspTimeoutDuration = Objects.requireNonNull(ocspTimeoutDuration);
            return this;
        }
        @CustomType.Setter
        public Builder ocspUnknownResponseStatusAllowed(Boolean ocspUnknownResponseStatusAllowed) {
            this.ocspUnknownResponseStatusAllowed = Objects.requireNonNull(ocspUnknownResponseStatusAllowed);
            return this;
        }
        public GetDomainsSettingCertificateValidation build() {
            final var o = new GetDomainsSettingCertificateValidation();
            o.crlCheckOnOcspFailureEnabled = crlCheckOnOcspFailureEnabled;
            o.crlEnabled = crlEnabled;
            o.crlLocation = crlLocation;
            o.crlRefreshInterval = crlRefreshInterval;
            o.ocspEnabled = ocspEnabled;
            o.ocspResponderUrl = ocspResponderUrl;
            o.ocspSettingsResponderUrlPreferred = ocspSettingsResponderUrlPreferred;
            o.ocspSigningCertificateAlias = ocspSigningCertificateAlias;
            o.ocspTimeoutDuration = ocspTimeoutDuration;
            o.ocspUnknownResponseStatusAllowed = ocspUnknownResponseStatusAllowed;
            return o;
        }
    }
}
