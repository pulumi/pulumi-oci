// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser {
    /**
     * @return DB global roles to which the user is granted access.
     * 
     */
    private List<String> dbGlobalRoles;
    /**
     * @return DB domain level schema to which the user is granted access.
     * 
     */
    private String domainLevelSchema;
    /**
     * @return DB instance level schema to which the user is granted access.
     * 
     */
    private String instanceLevelSchema;
    /**
     * @return If true, indicates this is a database user.
     * 
     */
    private Boolean isDbUser;
    /**
     * @return Password Verifiers for DB User.
     * 
     */
    private List<GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier> passwordVerifiers;

    private GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser() {}
    /**
     * @return DB global roles to which the user is granted access.
     * 
     */
    public List<String> dbGlobalRoles() {
        return this.dbGlobalRoles;
    }
    /**
     * @return DB domain level schema to which the user is granted access.
     * 
     */
    public String domainLevelSchema() {
        return this.domainLevelSchema;
    }
    /**
     * @return DB instance level schema to which the user is granted access.
     * 
     */
    public String instanceLevelSchema() {
        return this.instanceLevelSchema;
    }
    /**
     * @return If true, indicates this is a database user.
     * 
     */
    public Boolean isDbUser() {
        return this.isDbUser;
    }
    /**
     * @return Password Verifiers for DB User.
     * 
     */
    public List<GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier> passwordVerifiers() {
        return this.passwordVerifiers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> dbGlobalRoles;
        private String domainLevelSchema;
        private String instanceLevelSchema;
        private Boolean isDbUser;
        private List<GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier> passwordVerifiers;
        public Builder() {}
        public Builder(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbGlobalRoles = defaults.dbGlobalRoles;
    	      this.domainLevelSchema = defaults.domainLevelSchema;
    	      this.instanceLevelSchema = defaults.instanceLevelSchema;
    	      this.isDbUser = defaults.isDbUser;
    	      this.passwordVerifiers = defaults.passwordVerifiers;
        }

        @CustomType.Setter
        public Builder dbGlobalRoles(List<String> dbGlobalRoles) {
            if (dbGlobalRoles == null) {
              throw new MissingRequiredPropertyException("GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser", "dbGlobalRoles");
            }
            this.dbGlobalRoles = dbGlobalRoles;
            return this;
        }
        public Builder dbGlobalRoles(String... dbGlobalRoles) {
            return dbGlobalRoles(List.of(dbGlobalRoles));
        }
        @CustomType.Setter
        public Builder domainLevelSchema(String domainLevelSchema) {
            if (domainLevelSchema == null) {
              throw new MissingRequiredPropertyException("GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser", "domainLevelSchema");
            }
            this.domainLevelSchema = domainLevelSchema;
            return this;
        }
        @CustomType.Setter
        public Builder instanceLevelSchema(String instanceLevelSchema) {
            if (instanceLevelSchema == null) {
              throw new MissingRequiredPropertyException("GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser", "instanceLevelSchema");
            }
            this.instanceLevelSchema = instanceLevelSchema;
            return this;
        }
        @CustomType.Setter
        public Builder isDbUser(Boolean isDbUser) {
            if (isDbUser == null) {
              throw new MissingRequiredPropertyException("GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser", "isDbUser");
            }
            this.isDbUser = isDbUser;
            return this;
        }
        @CustomType.Setter
        public Builder passwordVerifiers(List<GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier> passwordVerifiers) {
            if (passwordVerifiers == null) {
              throw new MissingRequiredPropertyException("GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser", "passwordVerifiers");
            }
            this.passwordVerifiers = passwordVerifiers;
            return this;
        }
        public Builder passwordVerifiers(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier... passwordVerifiers) {
            return passwordVerifiers(List.of(passwordVerifiers));
        }
        public GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser build() {
            final var _resultValue = new GetDomainsUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser();
            _resultValue.dbGlobalRoles = dbGlobalRoles;
            _resultValue.domainLevelSchema = domainLevelSchema;
            _resultValue.instanceLevelSchema = instanceLevelSchema;
            _resultValue.isDbUser = isDbUser;
            _resultValue.passwordVerifiers = passwordVerifiers;
            return _resultValue;
        }
    }
}
