// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant {
    /**
     * @return The ID of the App in this Grant.
     * 
     */
    private String appId;
    /**
     * @return Each value of grantMechanism indicates how (or by what component) some App (or App-Entitlement) was granted.\nA customer or the UI should use only grantMechanism values that start with &#39;ADMINISTRATOR&#39;:\n - &#39;ADMINISTRATOR_TO_USER&#39; is for a direct grant to a specific User.\n - &#39;ADMINISTRATOR_TO_GROUP&#39; is for a grant to a specific Group, which results in indirect grants to Users who are members of that Group.\n - &#39;ADMINISTRATOR_TO_APP&#39; is for a grant to a specific App.  The grantee (client) App gains access to the granted (server) App.
     * 
     */
    private String grantMechanism;
    /**
     * @return Grantor identifier
     * 
     */
    private String grantorId;
    /**
     * @return User Token URI
     * 
     */
    private String ref;
    /**
     * @return The value of a X509 certificate.
     * 
     */
    private String value;

    private GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant() {}
    /**
     * @return The ID of the App in this Grant.
     * 
     */
    public String appId() {
        return this.appId;
    }
    /**
     * @return Each value of grantMechanism indicates how (or by what component) some App (or App-Entitlement) was granted.\nA customer or the UI should use only grantMechanism values that start with &#39;ADMINISTRATOR&#39;:\n - &#39;ADMINISTRATOR_TO_USER&#39; is for a direct grant to a specific User.\n - &#39;ADMINISTRATOR_TO_GROUP&#39; is for a grant to a specific Group, which results in indirect grants to Users who are members of that Group.\n - &#39;ADMINISTRATOR_TO_APP&#39; is for a grant to a specific App.  The grantee (client) App gains access to the granted (server) App.
     * 
     */
    public String grantMechanism() {
        return this.grantMechanism;
    }
    /**
     * @return Grantor identifier
     * 
     */
    public String grantorId() {
        return this.grantorId;
    }
    /**
     * @return User Token URI
     * 
     */
    public String ref() {
        return this.ref;
    }
    /**
     * @return The value of a X509 certificate.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appId;
        private String grantMechanism;
        private String grantorId;
        private String ref;
        private String value;
        public Builder() {}
        public Builder(GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appId = defaults.appId;
    	      this.grantMechanism = defaults.grantMechanism;
    	      this.grantorId = defaults.grantorId;
    	      this.ref = defaults.ref;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder appId(String appId) {
            this.appId = Objects.requireNonNull(appId);
            return this;
        }
        @CustomType.Setter
        public Builder grantMechanism(String grantMechanism) {
            this.grantMechanism = Objects.requireNonNull(grantMechanism);
            return this;
        }
        @CustomType.Setter
        public Builder grantorId(String grantorId) {
            this.grantorId = Objects.requireNonNull(grantorId);
            return this;
        }
        @CustomType.Setter
        public Builder ref(String ref) {
            this.ref = Objects.requireNonNull(ref);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        public GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant build() {
            final var o = new GetDomainsUserUrnietfparamsscimschemasoracleidcsextensionuserUserGrant();
            o.appId = appId;
            o.grantMechanism = grantMechanism;
            o.grantorId = grantorId;
            o.ref = ref;
            o.value = value;
            return o;
        }
    }
}
