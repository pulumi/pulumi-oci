// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDomainsUsersUserName {
    /**
     * @return Last name
     * 
     */
    private @Nullable String familyName;
    /**
     * @return Full name
     * 
     */
    private @Nullable String formatted;
    /**
     * @return First name
     * 
     */
    private @Nullable String givenName;
    /**
     * @return Prefix
     * 
     */
    private @Nullable String honorificPrefix;
    /**
     * @return Suffix
     * 
     */
    private @Nullable String honorificSuffix;
    /**
     * @return Middle name
     * 
     */
    private @Nullable String middleName;

    private GetDomainsUsersUserName() {}
    /**
     * @return Last name
     * 
     */
    public Optional<String> familyName() {
        return Optional.ofNullable(this.familyName);
    }
    /**
     * @return Full name
     * 
     */
    public Optional<String> formatted() {
        return Optional.ofNullable(this.formatted);
    }
    /**
     * @return First name
     * 
     */
    public Optional<String> givenName() {
        return Optional.ofNullable(this.givenName);
    }
    /**
     * @return Prefix
     * 
     */
    public Optional<String> honorificPrefix() {
        return Optional.ofNullable(this.honorificPrefix);
    }
    /**
     * @return Suffix
     * 
     */
    public Optional<String> honorificSuffix() {
        return Optional.ofNullable(this.honorificSuffix);
    }
    /**
     * @return Middle name
     * 
     */
    public Optional<String> middleName() {
        return Optional.ofNullable(this.middleName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsUsersUserName defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String familyName;
        private @Nullable String formatted;
        private @Nullable String givenName;
        private @Nullable String honorificPrefix;
        private @Nullable String honorificSuffix;
        private @Nullable String middleName;
        public Builder() {}
        public Builder(GetDomainsUsersUserName defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.familyName = defaults.familyName;
    	      this.formatted = defaults.formatted;
    	      this.givenName = defaults.givenName;
    	      this.honorificPrefix = defaults.honorificPrefix;
    	      this.honorificSuffix = defaults.honorificSuffix;
    	      this.middleName = defaults.middleName;
        }

        @CustomType.Setter
        public Builder familyName(@Nullable String familyName) {
            this.familyName = familyName;
            return this;
        }
        @CustomType.Setter
        public Builder formatted(@Nullable String formatted) {
            this.formatted = formatted;
            return this;
        }
        @CustomType.Setter
        public Builder givenName(@Nullable String givenName) {
            this.givenName = givenName;
            return this;
        }
        @CustomType.Setter
        public Builder honorificPrefix(@Nullable String honorificPrefix) {
            this.honorificPrefix = honorificPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder honorificSuffix(@Nullable String honorificSuffix) {
            this.honorificSuffix = honorificSuffix;
            return this;
        }
        @CustomType.Setter
        public Builder middleName(@Nullable String middleName) {
            this.middleName = middleName;
            return this;
        }
        public GetDomainsUsersUserName build() {
            final var o = new GetDomainsUsersUserName();
            o.familyName = familyName;
            o.formatted = formatted;
            o.givenName = givenName;
            o.honorificPrefix = honorificPrefix;
            o.honorificSuffix = honorificSuffix;
            o.middleName = middleName;
            return o;
        }
    }
}
