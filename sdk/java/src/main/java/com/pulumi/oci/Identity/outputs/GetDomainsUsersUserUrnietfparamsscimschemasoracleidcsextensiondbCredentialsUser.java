// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser {
    /**
     * @return The number of failed login attempts. The value is reset to 0 after a successful login.
     * 
     */
    private Integer dbLoginAttempts;
    /**
     * @return The database username.
     * 
     */
    private String dbUserName;

    private GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser() {}
    /**
     * @return The number of failed login attempts. The value is reset to 0 after a successful login.
     * 
     */
    public Integer dbLoginAttempts() {
        return this.dbLoginAttempts;
    }
    /**
     * @return The database username.
     * 
     */
    public String dbUserName() {
        return this.dbUserName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer dbLoginAttempts;
        private String dbUserName;
        public Builder() {}
        public Builder(GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbLoginAttempts = defaults.dbLoginAttempts;
    	      this.dbUserName = defaults.dbUserName;
        }

        @CustomType.Setter
        public Builder dbLoginAttempts(Integer dbLoginAttempts) {
            this.dbLoginAttempts = Objects.requireNonNull(dbLoginAttempts);
            return this;
        }
        @CustomType.Setter
        public Builder dbUserName(String dbUserName) {
            this.dbUserName = Objects.requireNonNull(dbUserName);
            return this;
        }
        public GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser build() {
            final var o = new GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbCredentialsUser();
            o.dbLoginAttempts = dbLoginAttempts;
            o.dbUserName = dbUserName;
            return o;
        }
    }
}
