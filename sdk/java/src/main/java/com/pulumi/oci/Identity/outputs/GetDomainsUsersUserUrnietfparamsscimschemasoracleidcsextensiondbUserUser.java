// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser {
    /**
     * @return DB global roles to which the user is granted access.
     * 
     */
    private List<String> dbGlobalRoles;
    /**
     * @return DB domain level schema to which the user is granted access.
     * 
     */
    private String domainLevelSchema;
    /**
     * @return DB instance level schema to which the user is granted access.
     * 
     */
    private String instanceLevelSchema;
    /**
     * @return If true, indicates this is a database user.
     * 
     */
    private Boolean isDbUser;
    /**
     * @return Password Verifiers for DB User.
     * 
     */
    private List<GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier> passwordVerifiers;

    private GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser() {}
    /**
     * @return DB global roles to which the user is granted access.
     * 
     */
    public List<String> dbGlobalRoles() {
        return this.dbGlobalRoles;
    }
    /**
     * @return DB domain level schema to which the user is granted access.
     * 
     */
    public String domainLevelSchema() {
        return this.domainLevelSchema;
    }
    /**
     * @return DB instance level schema to which the user is granted access.
     * 
     */
    public String instanceLevelSchema() {
        return this.instanceLevelSchema;
    }
    /**
     * @return If true, indicates this is a database user.
     * 
     */
    public Boolean isDbUser() {
        return this.isDbUser;
    }
    /**
     * @return Password Verifiers for DB User.
     * 
     */
    public List<GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier> passwordVerifiers() {
        return this.passwordVerifiers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> dbGlobalRoles;
        private String domainLevelSchema;
        private String instanceLevelSchema;
        private Boolean isDbUser;
        private List<GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier> passwordVerifiers;
        public Builder() {}
        public Builder(GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbGlobalRoles = defaults.dbGlobalRoles;
    	      this.domainLevelSchema = defaults.domainLevelSchema;
    	      this.instanceLevelSchema = defaults.instanceLevelSchema;
    	      this.isDbUser = defaults.isDbUser;
    	      this.passwordVerifiers = defaults.passwordVerifiers;
        }

        @CustomType.Setter
        public Builder dbGlobalRoles(List<String> dbGlobalRoles) {
            this.dbGlobalRoles = Objects.requireNonNull(dbGlobalRoles);
            return this;
        }
        public Builder dbGlobalRoles(String... dbGlobalRoles) {
            return dbGlobalRoles(List.of(dbGlobalRoles));
        }
        @CustomType.Setter
        public Builder domainLevelSchema(String domainLevelSchema) {
            this.domainLevelSchema = Objects.requireNonNull(domainLevelSchema);
            return this;
        }
        @CustomType.Setter
        public Builder instanceLevelSchema(String instanceLevelSchema) {
            this.instanceLevelSchema = Objects.requireNonNull(instanceLevelSchema);
            return this;
        }
        @CustomType.Setter
        public Builder isDbUser(Boolean isDbUser) {
            this.isDbUser = Objects.requireNonNull(isDbUser);
            return this;
        }
        @CustomType.Setter
        public Builder passwordVerifiers(List<GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier> passwordVerifiers) {
            this.passwordVerifiers = Objects.requireNonNull(passwordVerifiers);
            return this;
        }
        public Builder passwordVerifiers(GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUserPasswordVerifier... passwordVerifiers) {
            return passwordVerifiers(List.of(passwordVerifiers));
        }
        public GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser build() {
            final var o = new GetDomainsUsersUserUrnietfparamsscimschemasoracleidcsextensiondbUserUser();
            o.dbGlobalRoles = dbGlobalRoles;
            o.domainLevelSchema = domainLevelSchema;
            o.instanceLevelSchema = instanceLevelSchema;
            o.isDbUser = isDbUser;
            o.passwordVerifiers = passwordVerifiers;
            return o;
        }
    }
}
