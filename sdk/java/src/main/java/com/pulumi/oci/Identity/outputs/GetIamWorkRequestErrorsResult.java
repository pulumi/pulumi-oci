// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetIamWorkRequestErrorsFilter;
import com.pulumi.oci.Identity.outputs.GetIamWorkRequestErrorsIamWorkRequestError;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetIamWorkRequestErrorsResult {
    private @Nullable List<GetIamWorkRequestErrorsFilter> filters;
    /**
     * @return The list of iam_work_request_errors.
     * 
     */
    private List<GetIamWorkRequestErrorsIamWorkRequestError> iamWorkRequestErrors;
    private String iamWorkRequestId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetIamWorkRequestErrorsResult() {}
    public List<GetIamWorkRequestErrorsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The list of iam_work_request_errors.
     * 
     */
    public List<GetIamWorkRequestErrorsIamWorkRequestError> iamWorkRequestErrors() {
        return this.iamWorkRequestErrors;
    }
    public String iamWorkRequestId() {
        return this.iamWorkRequestId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamWorkRequestErrorsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetIamWorkRequestErrorsFilter> filters;
        private List<GetIamWorkRequestErrorsIamWorkRequestError> iamWorkRequestErrors;
        private String iamWorkRequestId;
        private String id;
        public Builder() {}
        public Builder(GetIamWorkRequestErrorsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.iamWorkRequestErrors = defaults.iamWorkRequestErrors;
    	      this.iamWorkRequestId = defaults.iamWorkRequestId;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetIamWorkRequestErrorsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetIamWorkRequestErrorsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder iamWorkRequestErrors(List<GetIamWorkRequestErrorsIamWorkRequestError> iamWorkRequestErrors) {
            if (iamWorkRequestErrors == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestErrorsResult", "iamWorkRequestErrors");
            }
            this.iamWorkRequestErrors = iamWorkRequestErrors;
            return this;
        }
        public Builder iamWorkRequestErrors(GetIamWorkRequestErrorsIamWorkRequestError... iamWorkRequestErrors) {
            return iamWorkRequestErrors(List.of(iamWorkRequestErrors));
        }
        @CustomType.Setter
        public Builder iamWorkRequestId(String iamWorkRequestId) {
            if (iamWorkRequestId == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestErrorsResult", "iamWorkRequestId");
            }
            this.iamWorkRequestId = iamWorkRequestId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestErrorsResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetIamWorkRequestErrorsResult build() {
            final var _resultValue = new GetIamWorkRequestErrorsResult();
            _resultValue.filters = filters;
            _resultValue.iamWorkRequestErrors = iamWorkRequestErrors;
            _resultValue.iamWorkRequestId = iamWorkRequestId;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
