// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetIamWorkRequestResource;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIamWorkRequestResult {
    /**
     * @return The OCID of the compartment containing this IAM work request.
     * 
     */
    private @Nullable String compartmentId;
    private String iamWorkRequestId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The asynchronous operation tracked by this IAM work request.
     * 
     */
    private @Nullable String operationType;
    /**
     * @return How much progress the operation has made.
     * 
     */
    private @Nullable Double percentComplete;
    /**
     * @return The resources this work request affects.
     * 
     */
    private @Nullable List<GetIamWorkRequestResource> resources;
    /**
     * @return Status of the work request
     * 
     */
    private @Nullable String status;
    /**
     * @return Date and time the work was accepted, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeAccepted;
    /**
     * @return Date and time the work completed, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeFinished;
    /**
     * @return Date and time the work started, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeStarted;

    private GetIamWorkRequestResult() {}
    /**
     * @return The OCID of the compartment containing this IAM work request.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public String iamWorkRequestId() {
        return this.iamWorkRequestId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The asynchronous operation tracked by this IAM work request.
     * 
     */
    public Optional<String> operationType() {
        return Optional.ofNullable(this.operationType);
    }
    /**
     * @return How much progress the operation has made.
     * 
     */
    public Optional<Double> percentComplete() {
        return Optional.ofNullable(this.percentComplete);
    }
    /**
     * @return The resources this work request affects.
     * 
     */
    public List<GetIamWorkRequestResource> resources() {
        return this.resources == null ? List.of() : this.resources;
    }
    /**
     * @return Status of the work request
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Date and time the work was accepted, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeAccepted() {
        return Optional.ofNullable(this.timeAccepted);
    }
    /**
     * @return Date and time the work completed, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }
    /**
     * @return Date and time the work started, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamWorkRequestResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private String iamWorkRequestId;
        private @Nullable String id;
        private @Nullable String operationType;
        private @Nullable Double percentComplete;
        private @Nullable List<GetIamWorkRequestResource> resources;
        private @Nullable String status;
        private @Nullable String timeAccepted;
        private @Nullable String timeFinished;
        private @Nullable String timeStarted;
        public Builder() {}
        public Builder(GetIamWorkRequestResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.iamWorkRequestId = defaults.iamWorkRequestId;
    	      this.id = defaults.id;
    	      this.operationType = defaults.operationType;
    	      this.percentComplete = defaults.percentComplete;
    	      this.resources = defaults.resources;
    	      this.status = defaults.status;
    	      this.timeAccepted = defaults.timeAccepted;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder iamWorkRequestId(String iamWorkRequestId) {
            this.iamWorkRequestId = Objects.requireNonNull(iamWorkRequestId);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder operationType(@Nullable String operationType) {
            this.operationType = operationType;
            return this;
        }
        @CustomType.Setter
        public Builder percentComplete(@Nullable Double percentComplete) {
            this.percentComplete = percentComplete;
            return this;
        }
        @CustomType.Setter
        public Builder resources(@Nullable List<GetIamWorkRequestResource> resources) {
            this.resources = resources;
            return this;
        }
        public Builder resources(GetIamWorkRequestResource... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder timeAccepted(@Nullable String timeAccepted) {
            this.timeAccepted = timeAccepted;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(@Nullable String timeFinished) {
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {
            this.timeStarted = timeStarted;
            return this;
        }
        public GetIamWorkRequestResult build() {
            final var o = new GetIamWorkRequestResult();
            o.compartmentId = compartmentId;
            o.iamWorkRequestId = iamWorkRequestId;
            o.id = id;
            o.operationType = operationType;
            o.percentComplete = percentComplete;
            o.resources = resources;
            o.status = status;
            o.timeAccepted = timeAccepted;
            o.timeFinished = timeFinished;
            o.timeStarted = timeStarted;
            return o;
        }
    }
}
