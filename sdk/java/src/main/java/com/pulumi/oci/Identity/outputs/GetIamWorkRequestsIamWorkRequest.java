// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetIamWorkRequestsIamWorkRequestResource;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIamWorkRequestsIamWorkRequest {
    /**
     * @return The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    private String compartmentId;
    /**
     * @return The OCID of the work request.
     * 
     */
    private String id;
    /**
     * @return The asynchronous operation tracked by this IAM work request.
     * 
     */
    private String operationType;
    /**
     * @return How much progress the operation has made.
     * 
     */
    private Double percentComplete;
    /**
     * @return The resources this work request affects.
     * 
     */
    private List<GetIamWorkRequestsIamWorkRequestResource> resources;
    /**
     * @return Status of the work request
     * 
     */
    private String status;
    /**
     * @return Date and time the work was accepted, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeAccepted;
    /**
     * @return Date and time the work completed, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeFinished;
    /**
     * @return Date and time the work started, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeStarted;

    private GetIamWorkRequestsIamWorkRequest() {}
    /**
     * @return The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The OCID of the work request.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The asynchronous operation tracked by this IAM work request.
     * 
     */
    public String operationType() {
        return this.operationType;
    }
    /**
     * @return How much progress the operation has made.
     * 
     */
    public Double percentComplete() {
        return this.percentComplete;
    }
    /**
     * @return The resources this work request affects.
     * 
     */
    public List<GetIamWorkRequestsIamWorkRequestResource> resources() {
        return this.resources;
    }
    /**
     * @return Status of the work request
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Date and time the work was accepted, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeAccepted() {
        return this.timeAccepted;
    }
    /**
     * @return Date and time the work completed, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeFinished() {
        return this.timeFinished;
    }
    /**
     * @return Date and time the work started, in the format defined by RFC3339. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeStarted() {
        return this.timeStarted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIamWorkRequestsIamWorkRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String id;
        private String operationType;
        private Double percentComplete;
        private List<GetIamWorkRequestsIamWorkRequestResource> resources;
        private String status;
        private String timeAccepted;
        private String timeFinished;
        private String timeStarted;
        public Builder() {}
        public Builder(GetIamWorkRequestsIamWorkRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.id = defaults.id;
    	      this.operationType = defaults.operationType;
    	      this.percentComplete = defaults.percentComplete;
    	      this.resources = defaults.resources;
    	      this.status = defaults.status;
    	      this.timeAccepted = defaults.timeAccepted;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestsIamWorkRequest", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestsIamWorkRequest", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder operationType(String operationType) {
            if (operationType == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestsIamWorkRequest", "operationType");
            }
            this.operationType = operationType;
            return this;
        }
        @CustomType.Setter
        public Builder percentComplete(Double percentComplete) {
            if (percentComplete == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestsIamWorkRequest", "percentComplete");
            }
            this.percentComplete = percentComplete;
            return this;
        }
        @CustomType.Setter
        public Builder resources(List<GetIamWorkRequestsIamWorkRequestResource> resources) {
            if (resources == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestsIamWorkRequest", "resources");
            }
            this.resources = resources;
            return this;
        }
        public Builder resources(GetIamWorkRequestsIamWorkRequestResource... resources) {
            return resources(List.of(resources));
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestsIamWorkRequest", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder timeAccepted(String timeAccepted) {
            if (timeAccepted == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestsIamWorkRequest", "timeAccepted");
            }
            this.timeAccepted = timeAccepted;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(String timeFinished) {
            if (timeFinished == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestsIamWorkRequest", "timeFinished");
            }
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(String timeStarted) {
            if (timeStarted == null) {
              throw new MissingRequiredPropertyException("GetIamWorkRequestsIamWorkRequest", "timeStarted");
            }
            this.timeStarted = timeStarted;
            return this;
        }
        public GetIamWorkRequestsIamWorkRequest build() {
            final var _resultValue = new GetIamWorkRequestsIamWorkRequest();
            _resultValue.compartmentId = compartmentId;
            _resultValue.id = id;
            _resultValue.operationType = operationType;
            _resultValue.percentComplete = percentComplete;
            _resultValue.resources = resources;
            _resultValue.status = status;
            _resultValue.timeAccepted = timeAccepted;
            _resultValue.timeFinished = timeFinished;
            _resultValue.timeStarted = timeStarted;
            return _resultValue;
        }
    }
}
