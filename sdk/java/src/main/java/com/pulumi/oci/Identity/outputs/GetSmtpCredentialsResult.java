// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetSmtpCredentialsFilter;
import com.pulumi.oci.Identity.outputs.GetSmtpCredentialsSmtpCredential;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSmtpCredentialsResult {
    private @Nullable List<GetSmtpCredentialsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of smtp_credentials.
     * 
     */
    private List<GetSmtpCredentialsSmtpCredential> smtpCredentials;
    /**
     * @return The OCID of the user the SMTP credential belongs to.
     * 
     */
    private String userId;

    private GetSmtpCredentialsResult() {}
    public List<GetSmtpCredentialsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of smtp_credentials.
     * 
     */
    public List<GetSmtpCredentialsSmtpCredential> smtpCredentials() {
        return this.smtpCredentials;
    }
    /**
     * @return The OCID of the user the SMTP credential belongs to.
     * 
     */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSmtpCredentialsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetSmtpCredentialsFilter> filters;
        private String id;
        private List<GetSmtpCredentialsSmtpCredential> smtpCredentials;
        private String userId;
        public Builder() {}
        public Builder(GetSmtpCredentialsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.smtpCredentials = defaults.smtpCredentials;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetSmtpCredentialsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSmtpCredentialsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSmtpCredentialsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder smtpCredentials(List<GetSmtpCredentialsSmtpCredential> smtpCredentials) {
            if (smtpCredentials == null) {
              throw new MissingRequiredPropertyException("GetSmtpCredentialsResult", "smtpCredentials");
            }
            this.smtpCredentials = smtpCredentials;
            return this;
        }
        public Builder smtpCredentials(GetSmtpCredentialsSmtpCredential... smtpCredentials) {
            return smtpCredentials(List.of(smtpCredentials));
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetSmtpCredentialsResult", "userId");
            }
            this.userId = userId;
            return this;
        }
        public GetSmtpCredentialsResult build() {
            final var _resultValue = new GetSmtpCredentialsResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.smtpCredentials = smtpCredentials;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
