// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Identity.outputs.GetUserGroupMembershipsFilter;
import com.pulumi.oci.Identity.outputs.GetUserGroupMembershipsMembership;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUserGroupMembershipsResult {
    /**
     * @return The OCID of the tenancy containing the user, group, and membership object.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetUserGroupMembershipsFilter> filters;
    /**
     * @return The OCID of the group.
     * 
     */
    private @Nullable String groupId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of memberships.
     * 
     */
    private List<GetUserGroupMembershipsMembership> memberships;
    /**
     * @return The OCID of the user.
     * 
     */
    private @Nullable String userId;

    private GetUserGroupMembershipsResult() {}
    /**
     * @return The OCID of the tenancy containing the user, group, and membership object.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetUserGroupMembershipsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The OCID of the group.
     * 
     */
    public Optional<String> groupId() {
        return Optional.ofNullable(this.groupId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of memberships.
     * 
     */
    public List<GetUserGroupMembershipsMembership> memberships() {
        return this.memberships;
    }
    /**
     * @return The OCID of the user.
     * 
     */
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserGroupMembershipsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetUserGroupMembershipsFilter> filters;
        private @Nullable String groupId;
        private String id;
        private List<GetUserGroupMembershipsMembership> memberships;
        private @Nullable String userId;
        public Builder() {}
        public Builder(GetUserGroupMembershipsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.memberships = defaults.memberships;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetUserGroupMembershipsResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetUserGroupMembershipsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetUserGroupMembershipsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder groupId(@Nullable String groupId) {

            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUserGroupMembershipsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder memberships(List<GetUserGroupMembershipsMembership> memberships) {
            if (memberships == null) {
              throw new MissingRequiredPropertyException("GetUserGroupMembershipsResult", "memberships");
            }
            this.memberships = memberships;
            return this;
        }
        public Builder memberships(GetUserGroupMembershipsMembership... memberships) {
            return memberships(List.of(memberships));
        }
        @CustomType.Setter
        public Builder userId(@Nullable String userId) {

            this.userId = userId;
            return this;
        }
        public GetUserGroupMembershipsResult build() {
            final var _resultValue = new GetUserGroupMembershipsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.memberships = memberships;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
