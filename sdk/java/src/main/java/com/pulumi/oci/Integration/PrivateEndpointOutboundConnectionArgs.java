// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Integration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateEndpointOutboundConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateEndpointOutboundConnectionArgs Empty = new PrivateEndpointOutboundConnectionArgs();

    @Import(name="integrationInstanceId", required=true)
    private Output<String> integrationInstanceId;

    public Output<String> integrationInstanceId() {
        return this.integrationInstanceId;
    }

    @Import(name="nsgIds")
    private @Nullable Output<List<String>> nsgIds;

    public Optional<Output<List<String>>> nsgIds() {
        return Optional.ofNullable(this.nsgIds);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    public Output<String> subnetId() {
        return this.subnetId;
    }

    private PrivateEndpointOutboundConnectionArgs() {}

    private PrivateEndpointOutboundConnectionArgs(PrivateEndpointOutboundConnectionArgs $) {
        this.integrationInstanceId = $.integrationInstanceId;
        this.nsgIds = $.nsgIds;
        this.state = $.state;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateEndpointOutboundConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateEndpointOutboundConnectionArgs $;

        public Builder() {
            $ = new PrivateEndpointOutboundConnectionArgs();
        }

        public Builder(PrivateEndpointOutboundConnectionArgs defaults) {
            $ = new PrivateEndpointOutboundConnectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder integrationInstanceId(Output<String> integrationInstanceId) {
            $.integrationInstanceId = integrationInstanceId;
            return this;
        }

        public Builder integrationInstanceId(String integrationInstanceId) {
            return integrationInstanceId(Output.of(integrationInstanceId));
        }

        public Builder nsgIds(@Nullable Output<List<String>> nsgIds) {
            $.nsgIds = nsgIds;
            return this;
        }

        public Builder nsgIds(List<String> nsgIds) {
            return nsgIds(Output.of(nsgIds));
        }

        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public PrivateEndpointOutboundConnectionArgs build() {
            if ($.integrationInstanceId == null) {
                throw new MissingRequiredPropertyException("PrivateEndpointOutboundConnectionArgs", "integrationInstanceId");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("PrivateEndpointOutboundConnectionArgs", "subnetId");
            }
            return $;
        }
    }

}
