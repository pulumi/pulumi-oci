// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Integration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationInstancePrivateEndpointOutboundConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationInstancePrivateEndpointOutboundConnectionArgs Empty = new IntegrationInstancePrivateEndpointOutboundConnectionArgs();

    /**
     * One or more Network security group Ids. This is an optional argument.
     * 
     */
    @Import(name="nsgIds")
    private @Nullable Output<List<String>> nsgIds;

    /**
     * @return One or more Network security group Ids. This is an optional argument.
     * 
     */
    public Optional<Output<List<String>>> nsgIds() {
        return Optional.ofNullable(this.nsgIds);
    }

    /**
     * The type of Outbound Connection.
     * 
     */
    @Import(name="outboundConnectionType")
    private @Nullable Output<String> outboundConnectionType;

    /**
     * @return The type of Outbound Connection.
     * 
     */
    public Optional<Output<String>> outboundConnectionType() {
        return Optional.ofNullable(this.outboundConnectionType);
    }

    /**
     * Customer Private Network VCN Subnet OCID. This is a required argument.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return Customer Private Network VCN Subnet OCID. This is a required argument.
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    private IntegrationInstancePrivateEndpointOutboundConnectionArgs() {}

    private IntegrationInstancePrivateEndpointOutboundConnectionArgs(IntegrationInstancePrivateEndpointOutboundConnectionArgs $) {
        this.nsgIds = $.nsgIds;
        this.outboundConnectionType = $.outboundConnectionType;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationInstancePrivateEndpointOutboundConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationInstancePrivateEndpointOutboundConnectionArgs $;

        public Builder() {
            $ = new IntegrationInstancePrivateEndpointOutboundConnectionArgs();
        }

        public Builder(IntegrationInstancePrivateEndpointOutboundConnectionArgs defaults) {
            $ = new IntegrationInstancePrivateEndpointOutboundConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nsgIds One or more Network security group Ids. This is an optional argument.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(@Nullable Output<List<String>> nsgIds) {
            $.nsgIds = nsgIds;
            return this;
        }

        /**
         * @param nsgIds One or more Network security group Ids. This is an optional argument.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(List<String> nsgIds) {
            return nsgIds(Output.of(nsgIds));
        }

        /**
         * @param nsgIds One or more Network security group Ids. This is an optional argument.
         * 
         * @return builder
         * 
         */
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }

        /**
         * @param outboundConnectionType The type of Outbound Connection.
         * 
         * @return builder
         * 
         */
        public Builder outboundConnectionType(@Nullable Output<String> outboundConnectionType) {
            $.outboundConnectionType = outboundConnectionType;
            return this;
        }

        /**
         * @param outboundConnectionType The type of Outbound Connection.
         * 
         * @return builder
         * 
         */
        public Builder outboundConnectionType(String outboundConnectionType) {
            return outboundConnectionType(Output.of(outboundConnectionType));
        }

        /**
         * @param subnetId Customer Private Network VCN Subnet OCID. This is a required argument.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId Customer Private Network VCN Subnet OCID. This is a required argument.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public IntegrationInstancePrivateEndpointOutboundConnectionArgs build() {
            return $;
        }
    }

}
