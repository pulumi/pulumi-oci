// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Integration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Integration.inputs.IntegrationInstanceAlternateCustomEndpointArgs;
import com.pulumi.oci.Integration.inputs.IntegrationInstanceAttachmentArgs;
import com.pulumi.oci.Integration.inputs.IntegrationInstanceCustomEndpointArgs;
import com.pulumi.oci.Integration.inputs.IntegrationInstanceDisasterRecoveryDetailArgs;
import com.pulumi.oci.Integration.inputs.IntegrationInstanceIdcsInfoArgs;
import com.pulumi.oci.Integration.inputs.IntegrationInstanceNetworkEndpointDetailsArgs;
import com.pulumi.oci.Integration.inputs.IntegrationInstancePrivateEndpointOutboundConnectionArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationInstanceState Empty = new IntegrationInstanceState();

    /**
     * (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     * 
     */
    @Import(name="alternateCustomEndpoints")
    private @Nullable Output<List<IntegrationInstanceAlternateCustomEndpointArgs>> alternateCustomEndpoints;

    /**
     * @return (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
     * 
     */
    public Optional<Output<List<IntegrationInstanceAlternateCustomEndpointArgs>>> alternateCustomEndpoints() {
        return Optional.ofNullable(this.alternateCustomEndpoints);
    }

    /**
     * A list of associated attachments to other services
     * 
     */
    @Import(name="attachments")
    private @Nullable Output<List<IntegrationInstanceAttachmentArgs>> attachments;

    /**
     * @return A list of associated attachments to other services
     * 
     */
    public Optional<Output<List<IntegrationInstanceAttachmentArgs>>> attachments() {
        return Optional.ofNullable(this.attachments);
    }

    /**
     * (Updatable) Compartment Identifier.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     * 
     */
    @Import(name="consumptionModel")
    private @Nullable Output<String> consumptionModel;

    /**
     * @return Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
     * 
     */
    public Optional<Output<String>> consumptionModel() {
        return Optional.ofNullable(this.consumptionModel);
    }

    /**
     * (Updatable) Details for a custom endpoint for the integration instance (update).
     * 
     */
    @Import(name="customEndpoint")
    private @Nullable Output<IntegrationInstanceCustomEndpointArgs> customEndpoint;

    /**
     * @return (Updatable) Details for a custom endpoint for the integration instance (update).
     * 
     */
    public Optional<Output<IntegrationInstanceCustomEndpointArgs>> customEndpoint() {
        return Optional.ofNullable(this.customEndpoint);
    }

    /**
     * Data retention period set for given integration instance
     * 
     */
    @Import(name="dataRetentionPeriod")
    private @Nullable Output<String> dataRetentionPeriod;

    /**
     * @return Data retention period set for given integration instance
     * 
     */
    public Optional<Output<String>> dataRetentionPeriod() {
        return Optional.ofNullable(this.dataRetentionPeriod);
    }

    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * Disaster recovery details for the integration instance created in the region.
     * 
     */
    @Import(name="disasterRecoveryDetails")
    private @Nullable Output<List<IntegrationInstanceDisasterRecoveryDetailArgs>> disasterRecoveryDetails;

    /**
     * @return Disaster recovery details for the integration instance created in the region.
     * 
     */
    public Optional<Output<List<IntegrationInstanceDisasterRecoveryDetailArgs>>> disasterRecoveryDetails() {
        return Optional.ofNullable(this.disasterRecoveryDetails);
    }

    /**
     * (Updatable) Integration Instance Identifier.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Integration Instance Identifier.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The OCID of the identity domain, that will be used to determine the  corresponding Idcs Stripe and create an Idcs application within the stripe.  This parameter is mutually exclusive with parameter: idcsAt, i.e only one of  two parameters should be specified.
     * 
     */
    @Import(name="domainId")
    private @Nullable Output<String> domainId;

    /**
     * @return The OCID of the identity domain, that will be used to determine the  corresponding Idcs Stripe and create an Idcs application within the stripe.  This parameter is mutually exclusive with parameter: idcsAt, i.e only one of  two parameters should be specified.
     * 
     */
    public Optional<Output<String>> domainId() {
        return Optional.ofNullable(this.domainId);
    }

    /**
     * (Updatable) An optional property when incremented triggers Enable Process Automation. Could be set to any integer value.
     * 
     */
    @Import(name="enableProcessAutomationTrigger")
    private @Nullable Output<Integer> enableProcessAutomationTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Enable Process Automation. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> enableProcessAutomationTrigger() {
        return Optional.ofNullable(this.enableProcessAutomationTrigger);
    }

    /**
     * (Updatable) An optional property when incremented triggers Extend Data Retention. Could be set to any integer value.
     * 
     */
    @Import(name="extendDataRetentionTrigger")
    private @Nullable Output<Integer> extendDataRetentionTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Extend Data Retention. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> extendDataRetentionTrigger() {
        return Optional.ofNullable(this.extendDataRetentionTrigger);
    }

    /**
     * (Updatable) An optional property when incremented triggers Failover. Could be set to any integer value.
     * 
     */
    @Import(name="failoverTrigger")
    private @Nullable Output<Integer> failoverTrigger;

    /**
     * @return (Updatable) An optional property when incremented triggers Failover. Could be set to any integer value.
     * 
     */
    public Optional<Output<Integer>> failoverTrigger() {
        return Optional.ofNullable(this.failoverTrigger);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
     * 
     */
    @Import(name="idcsAt")
    private @Nullable Output<String> idcsAt;

    /**
     * @return (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
     * 
     */
    public Optional<Output<String>> idcsAt() {
        return Optional.ofNullable(this.idcsAt);
    }

    /**
     * Information for IDCS access
     * 
     */
    @Import(name="idcsInfos")
    private @Nullable Output<List<IntegrationInstanceIdcsInfoArgs>> idcsInfos;

    /**
     * @return Information for IDCS access
     * 
     */
    public Optional<Output<List<IntegrationInstanceIdcsInfoArgs>>> idcsInfos() {
        return Optional.ofNullable(this.idcsInfos);
    }

    @Import(name="instanceDesignTimeUrl")
    private @Nullable Output<String> instanceDesignTimeUrl;

    public Optional<Output<String>> instanceDesignTimeUrl() {
        return Optional.ofNullable(this.instanceDesignTimeUrl);
    }

    /**
     * The Integration Instance URL.
     * 
     */
    @Import(name="instanceUrl")
    private @Nullable Output<String> instanceUrl;

    /**
     * @return The Integration Instance URL.
     * 
     */
    public Optional<Output<String>> instanceUrl() {
        return Optional.ofNullable(this.instanceUrl);
    }

    /**
     * (Updatable) Standard or Enterprise type,  Oracle Integration Generation 2 uses ENTERPRISE and STANDARD,  Oracle Integration 3 uses ENTERPRISEX and STANDARDX
     * 
     */
    @Import(name="integrationInstanceType")
    private @Nullable Output<String> integrationInstanceType;

    /**
     * @return (Updatable) Standard or Enterprise type,  Oracle Integration Generation 2 uses ENTERPRISE and STANDARD,  Oracle Integration 3 uses ENTERPRISEX and STANDARDX
     * 
     */
    public Optional<Output<String>> integrationInstanceType() {
        return Optional.ofNullable(this.integrationInstanceType);
    }

    /**
     * (Updatable) Bring your own license.
     * 
     */
    @Import(name="isByol")
    private @Nullable Output<Boolean> isByol;

    /**
     * @return (Updatable) Bring your own license.
     * 
     */
    public Optional<Output<Boolean>> isByol() {
        return Optional.ofNullable(this.isByol);
    }

    /**
     * Is Disaster Recovery enabled or not.
     * 
     */
    @Import(name="isDisasterRecoveryEnabled")
    private @Nullable Output<Boolean> isDisasterRecoveryEnabled;

    /**
     * @return Is Disaster Recovery enabled or not.
     * 
     */
    public Optional<Output<Boolean>> isDisasterRecoveryEnabled() {
        return Optional.ofNullable(this.isDisasterRecoveryEnabled);
    }

    /**
     * (Updatable) The file server is enabled or not.
     * 
     */
    @Import(name="isFileServerEnabled")
    private @Nullable Output<Boolean> isFileServerEnabled;

    /**
     * @return (Updatable) The file server is enabled or not.
     * 
     */
    public Optional<Output<Boolean>> isFileServerEnabled() {
        return Optional.ofNullable(this.isFileServerEnabled);
    }

    /**
     * (Updatable) Visual Builder is enabled or not.
     * 
     */
    @Import(name="isVisualBuilderEnabled")
    private @Nullable Output<Boolean> isVisualBuilderEnabled;

    /**
     * @return (Updatable) Visual Builder is enabled or not.
     * 
     */
    public Optional<Output<Boolean>> isVisualBuilderEnabled() {
        return Optional.ofNullable(this.isVisualBuilderEnabled);
    }

    /**
     * Additional details of lifecycleState or substates
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Additional details of lifecycleState or substates
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * (Updatable) The number of configured message packs
     * 
     */
    @Import(name="messagePacks")
    private @Nullable Output<Integer> messagePacks;

    /**
     * @return (Updatable) The number of configured message packs
     * 
     */
    public Optional<Output<Integer>> messagePacks() {
        return Optional.ofNullable(this.messagePacks);
    }

    /**
     * Base representation of a network endpoint.
     * 
     */
    @Import(name="networkEndpointDetails")
    private @Nullable Output<IntegrationInstanceNetworkEndpointDetailsArgs> networkEndpointDetails;

    /**
     * @return Base representation of a network endpoint.
     * 
     */
    public Optional<Output<IntegrationInstanceNetworkEndpointDetailsArgs>> networkEndpointDetails() {
        return Optional.ofNullable(this.networkEndpointDetails);
    }

    /**
     * Base representation for Outbound Connection (Reverse Connection).
     * 
     */
    @Import(name="privateEndpointOutboundConnections")
    private @Nullable Output<List<IntegrationInstancePrivateEndpointOutboundConnectionArgs>> privateEndpointOutboundConnections;

    /**
     * @return Base representation for Outbound Connection (Reverse Connection).
     * 
     */
    public Optional<Output<List<IntegrationInstancePrivateEndpointOutboundConnectionArgs>>> privateEndpointOutboundConnections() {
        return Optional.ofNullable(this.privateEndpointOutboundConnections);
    }

    /**
     * Shape
     * 
     */
    @Import(name="shape")
    private @Nullable Output<String> shape;

    /**
     * @return Shape
     * 
     */
    public Optional<Output<String>> shape() {
        return Optional.ofNullable(this.shape);
    }

    /**
     * (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="stateMessage")
    private @Nullable Output<String> stateMessage;

    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> stateMessage() {
        return Optional.ofNullable(this.stateMessage);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time the the Integration Instance was created. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the the Integration Instance was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private IntegrationInstanceState() {}

    private IntegrationInstanceState(IntegrationInstanceState $) {
        this.alternateCustomEndpoints = $.alternateCustomEndpoints;
        this.attachments = $.attachments;
        this.compartmentId = $.compartmentId;
        this.consumptionModel = $.consumptionModel;
        this.customEndpoint = $.customEndpoint;
        this.dataRetentionPeriod = $.dataRetentionPeriod;
        this.definedTags = $.definedTags;
        this.disasterRecoveryDetails = $.disasterRecoveryDetails;
        this.displayName = $.displayName;
        this.domainId = $.domainId;
        this.enableProcessAutomationTrigger = $.enableProcessAutomationTrigger;
        this.extendDataRetentionTrigger = $.extendDataRetentionTrigger;
        this.failoverTrigger = $.failoverTrigger;
        this.freeformTags = $.freeformTags;
        this.idcsAt = $.idcsAt;
        this.idcsInfos = $.idcsInfos;
        this.instanceDesignTimeUrl = $.instanceDesignTimeUrl;
        this.instanceUrl = $.instanceUrl;
        this.integrationInstanceType = $.integrationInstanceType;
        this.isByol = $.isByol;
        this.isDisasterRecoveryEnabled = $.isDisasterRecoveryEnabled;
        this.isFileServerEnabled = $.isFileServerEnabled;
        this.isVisualBuilderEnabled = $.isVisualBuilderEnabled;
        this.lifecycleDetails = $.lifecycleDetails;
        this.messagePacks = $.messagePacks;
        this.networkEndpointDetails = $.networkEndpointDetails;
        this.privateEndpointOutboundConnections = $.privateEndpointOutboundConnections;
        this.shape = $.shape;
        this.state = $.state;
        this.stateMessage = $.stateMessage;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationInstanceState $;

        public Builder() {
            $ = new IntegrationInstanceState();
        }

        public Builder(IntegrationInstanceState defaults) {
            $ = new IntegrationInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param alternateCustomEndpoints (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
         * 
         * @return builder
         * 
         */
        public Builder alternateCustomEndpoints(@Nullable Output<List<IntegrationInstanceAlternateCustomEndpointArgs>> alternateCustomEndpoints) {
            $.alternateCustomEndpoints = alternateCustomEndpoints;
            return this;
        }

        /**
         * @param alternateCustomEndpoints (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
         * 
         * @return builder
         * 
         */
        public Builder alternateCustomEndpoints(List<IntegrationInstanceAlternateCustomEndpointArgs> alternateCustomEndpoints) {
            return alternateCustomEndpoints(Output.of(alternateCustomEndpoints));
        }

        /**
         * @param alternateCustomEndpoints (Updatable) A list of alternate custom endpoints to be used for the integration instance URL (contact Oracle for alternateCustomEndpoints availability for a specific instance).
         * 
         * @return builder
         * 
         */
        public Builder alternateCustomEndpoints(IntegrationInstanceAlternateCustomEndpointArgs... alternateCustomEndpoints) {
            return alternateCustomEndpoints(List.of(alternateCustomEndpoints));
        }

        /**
         * @param attachments A list of associated attachments to other services
         * 
         * @return builder
         * 
         */
        public Builder attachments(@Nullable Output<List<IntegrationInstanceAttachmentArgs>> attachments) {
            $.attachments = attachments;
            return this;
        }

        /**
         * @param attachments A list of associated attachments to other services
         * 
         * @return builder
         * 
         */
        public Builder attachments(List<IntegrationInstanceAttachmentArgs> attachments) {
            return attachments(Output.of(attachments));
        }

        /**
         * @param attachments A list of associated attachments to other services
         * 
         * @return builder
         * 
         */
        public Builder attachments(IntegrationInstanceAttachmentArgs... attachments) {
            return attachments(List.of(attachments));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param consumptionModel Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
         * 
         * @return builder
         * 
         */
        public Builder consumptionModel(@Nullable Output<String> consumptionModel) {
            $.consumptionModel = consumptionModel;
            return this;
        }

        /**
         * @param consumptionModel Optional parameter specifying which entitlement to use for billing purposes. Only required if the account possesses more than one entitlement.
         * 
         * @return builder
         * 
         */
        public Builder consumptionModel(String consumptionModel) {
            return consumptionModel(Output.of(consumptionModel));
        }

        /**
         * @param customEndpoint (Updatable) Details for a custom endpoint for the integration instance (update).
         * 
         * @return builder
         * 
         */
        public Builder customEndpoint(@Nullable Output<IntegrationInstanceCustomEndpointArgs> customEndpoint) {
            $.customEndpoint = customEndpoint;
            return this;
        }

        /**
         * @param customEndpoint (Updatable) Details for a custom endpoint for the integration instance (update).
         * 
         * @return builder
         * 
         */
        public Builder customEndpoint(IntegrationInstanceCustomEndpointArgs customEndpoint) {
            return customEndpoint(Output.of(customEndpoint));
        }

        /**
         * @param dataRetentionPeriod Data retention period set for given integration instance
         * 
         * @return builder
         * 
         */
        public Builder dataRetentionPeriod(@Nullable Output<String> dataRetentionPeriod) {
            $.dataRetentionPeriod = dataRetentionPeriod;
            return this;
        }

        /**
         * @param dataRetentionPeriod Data retention period set for given integration instance
         * 
         * @return builder
         * 
         */
        public Builder dataRetentionPeriod(String dataRetentionPeriod) {
            return dataRetentionPeriod(Output.of(dataRetentionPeriod));
        }

        /**
         * @param definedTags (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param disasterRecoveryDetails Disaster recovery details for the integration instance created in the region.
         * 
         * @return builder
         * 
         */
        public Builder disasterRecoveryDetails(@Nullable Output<List<IntegrationInstanceDisasterRecoveryDetailArgs>> disasterRecoveryDetails) {
            $.disasterRecoveryDetails = disasterRecoveryDetails;
            return this;
        }

        /**
         * @param disasterRecoveryDetails Disaster recovery details for the integration instance created in the region.
         * 
         * @return builder
         * 
         */
        public Builder disasterRecoveryDetails(List<IntegrationInstanceDisasterRecoveryDetailArgs> disasterRecoveryDetails) {
            return disasterRecoveryDetails(Output.of(disasterRecoveryDetails));
        }

        /**
         * @param disasterRecoveryDetails Disaster recovery details for the integration instance created in the region.
         * 
         * @return builder
         * 
         */
        public Builder disasterRecoveryDetails(IntegrationInstanceDisasterRecoveryDetailArgs... disasterRecoveryDetails) {
            return disasterRecoveryDetails(List.of(disasterRecoveryDetails));
        }

        /**
         * @param displayName (Updatable) Integration Instance Identifier.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Integration Instance Identifier.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param domainId The OCID of the identity domain, that will be used to determine the  corresponding Idcs Stripe and create an Idcs application within the stripe.  This parameter is mutually exclusive with parameter: idcsAt, i.e only one of  two parameters should be specified.
         * 
         * @return builder
         * 
         */
        public Builder domainId(@Nullable Output<String> domainId) {
            $.domainId = domainId;
            return this;
        }

        /**
         * @param domainId The OCID of the identity domain, that will be used to determine the  corresponding Idcs Stripe and create an Idcs application within the stripe.  This parameter is mutually exclusive with parameter: idcsAt, i.e only one of  two parameters should be specified.
         * 
         * @return builder
         * 
         */
        public Builder domainId(String domainId) {
            return domainId(Output.of(domainId));
        }

        /**
         * @param enableProcessAutomationTrigger (Updatable) An optional property when incremented triggers Enable Process Automation. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder enableProcessAutomationTrigger(@Nullable Output<Integer> enableProcessAutomationTrigger) {
            $.enableProcessAutomationTrigger = enableProcessAutomationTrigger;
            return this;
        }

        /**
         * @param enableProcessAutomationTrigger (Updatable) An optional property when incremented triggers Enable Process Automation. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder enableProcessAutomationTrigger(Integer enableProcessAutomationTrigger) {
            return enableProcessAutomationTrigger(Output.of(enableProcessAutomationTrigger));
        }

        /**
         * @param extendDataRetentionTrigger (Updatable) An optional property when incremented triggers Extend Data Retention. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder extendDataRetentionTrigger(@Nullable Output<Integer> extendDataRetentionTrigger) {
            $.extendDataRetentionTrigger = extendDataRetentionTrigger;
            return this;
        }

        /**
         * @param extendDataRetentionTrigger (Updatable) An optional property when incremented triggers Extend Data Retention. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder extendDataRetentionTrigger(Integer extendDataRetentionTrigger) {
            return extendDataRetentionTrigger(Output.of(extendDataRetentionTrigger));
        }

        /**
         * @param failoverTrigger (Updatable) An optional property when incremented triggers Failover. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder failoverTrigger(@Nullable Output<Integer> failoverTrigger) {
            $.failoverTrigger = failoverTrigger;
            return this;
        }

        /**
         * @param failoverTrigger (Updatable) An optional property when incremented triggers Failover. Could be set to any integer value.
         * 
         * @return builder
         * 
         */
        public Builder failoverTrigger(Integer failoverTrigger) {
            return failoverTrigger(Output.of(failoverTrigger));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param idcsAt (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
         * 
         * @return builder
         * 
         */
        public Builder idcsAt(@Nullable Output<String> idcsAt) {
            $.idcsAt = idcsAt;
            return this;
        }

        /**
         * @param idcsAt (Updatable) IDCS Authentication token. This is required for all realms with IDCS. Its optional as its not required for non IDCS realms.
         * 
         * @return builder
         * 
         */
        public Builder idcsAt(String idcsAt) {
            return idcsAt(Output.of(idcsAt));
        }

        /**
         * @param idcsInfos Information for IDCS access
         * 
         * @return builder
         * 
         */
        public Builder idcsInfos(@Nullable Output<List<IntegrationInstanceIdcsInfoArgs>> idcsInfos) {
            $.idcsInfos = idcsInfos;
            return this;
        }

        /**
         * @param idcsInfos Information for IDCS access
         * 
         * @return builder
         * 
         */
        public Builder idcsInfos(List<IntegrationInstanceIdcsInfoArgs> idcsInfos) {
            return idcsInfos(Output.of(idcsInfos));
        }

        /**
         * @param idcsInfos Information for IDCS access
         * 
         * @return builder
         * 
         */
        public Builder idcsInfos(IntegrationInstanceIdcsInfoArgs... idcsInfos) {
            return idcsInfos(List.of(idcsInfos));
        }

        public Builder instanceDesignTimeUrl(@Nullable Output<String> instanceDesignTimeUrl) {
            $.instanceDesignTimeUrl = instanceDesignTimeUrl;
            return this;
        }

        public Builder instanceDesignTimeUrl(String instanceDesignTimeUrl) {
            return instanceDesignTimeUrl(Output.of(instanceDesignTimeUrl));
        }

        /**
         * @param instanceUrl The Integration Instance URL.
         * 
         * @return builder
         * 
         */
        public Builder instanceUrl(@Nullable Output<String> instanceUrl) {
            $.instanceUrl = instanceUrl;
            return this;
        }

        /**
         * @param instanceUrl The Integration Instance URL.
         * 
         * @return builder
         * 
         */
        public Builder instanceUrl(String instanceUrl) {
            return instanceUrl(Output.of(instanceUrl));
        }

        /**
         * @param integrationInstanceType (Updatable) Standard or Enterprise type,  Oracle Integration Generation 2 uses ENTERPRISE and STANDARD,  Oracle Integration 3 uses ENTERPRISEX and STANDARDX
         * 
         * @return builder
         * 
         */
        public Builder integrationInstanceType(@Nullable Output<String> integrationInstanceType) {
            $.integrationInstanceType = integrationInstanceType;
            return this;
        }

        /**
         * @param integrationInstanceType (Updatable) Standard or Enterprise type,  Oracle Integration Generation 2 uses ENTERPRISE and STANDARD,  Oracle Integration 3 uses ENTERPRISEX and STANDARDX
         * 
         * @return builder
         * 
         */
        public Builder integrationInstanceType(String integrationInstanceType) {
            return integrationInstanceType(Output.of(integrationInstanceType));
        }

        /**
         * @param isByol (Updatable) Bring your own license.
         * 
         * @return builder
         * 
         */
        public Builder isByol(@Nullable Output<Boolean> isByol) {
            $.isByol = isByol;
            return this;
        }

        /**
         * @param isByol (Updatable) Bring your own license.
         * 
         * @return builder
         * 
         */
        public Builder isByol(Boolean isByol) {
            return isByol(Output.of(isByol));
        }

        /**
         * @param isDisasterRecoveryEnabled Is Disaster Recovery enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isDisasterRecoveryEnabled(@Nullable Output<Boolean> isDisasterRecoveryEnabled) {
            $.isDisasterRecoveryEnabled = isDisasterRecoveryEnabled;
            return this;
        }

        /**
         * @param isDisasterRecoveryEnabled Is Disaster Recovery enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isDisasterRecoveryEnabled(Boolean isDisasterRecoveryEnabled) {
            return isDisasterRecoveryEnabled(Output.of(isDisasterRecoveryEnabled));
        }

        /**
         * @param isFileServerEnabled (Updatable) The file server is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isFileServerEnabled(@Nullable Output<Boolean> isFileServerEnabled) {
            $.isFileServerEnabled = isFileServerEnabled;
            return this;
        }

        /**
         * @param isFileServerEnabled (Updatable) The file server is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isFileServerEnabled(Boolean isFileServerEnabled) {
            return isFileServerEnabled(Output.of(isFileServerEnabled));
        }

        /**
         * @param isVisualBuilderEnabled (Updatable) Visual Builder is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isVisualBuilderEnabled(@Nullable Output<Boolean> isVisualBuilderEnabled) {
            $.isVisualBuilderEnabled = isVisualBuilderEnabled;
            return this;
        }

        /**
         * @param isVisualBuilderEnabled (Updatable) Visual Builder is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isVisualBuilderEnabled(Boolean isVisualBuilderEnabled) {
            return isVisualBuilderEnabled(Output.of(isVisualBuilderEnabled));
        }

        /**
         * @param lifecycleDetails Additional details of lifecycleState or substates
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Additional details of lifecycleState or substates
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param messagePacks (Updatable) The number of configured message packs
         * 
         * @return builder
         * 
         */
        public Builder messagePacks(@Nullable Output<Integer> messagePacks) {
            $.messagePacks = messagePacks;
            return this;
        }

        /**
         * @param messagePacks (Updatable) The number of configured message packs
         * 
         * @return builder
         * 
         */
        public Builder messagePacks(Integer messagePacks) {
            return messagePacks(Output.of(messagePacks));
        }

        /**
         * @param networkEndpointDetails Base representation of a network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkEndpointDetails(@Nullable Output<IntegrationInstanceNetworkEndpointDetailsArgs> networkEndpointDetails) {
            $.networkEndpointDetails = networkEndpointDetails;
            return this;
        }

        /**
         * @param networkEndpointDetails Base representation of a network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkEndpointDetails(IntegrationInstanceNetworkEndpointDetailsArgs networkEndpointDetails) {
            return networkEndpointDetails(Output.of(networkEndpointDetails));
        }

        /**
         * @param privateEndpointOutboundConnections Base representation for Outbound Connection (Reverse Connection).
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointOutboundConnections(@Nullable Output<List<IntegrationInstancePrivateEndpointOutboundConnectionArgs>> privateEndpointOutboundConnections) {
            $.privateEndpointOutboundConnections = privateEndpointOutboundConnections;
            return this;
        }

        /**
         * @param privateEndpointOutboundConnections Base representation for Outbound Connection (Reverse Connection).
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointOutboundConnections(List<IntegrationInstancePrivateEndpointOutboundConnectionArgs> privateEndpointOutboundConnections) {
            return privateEndpointOutboundConnections(Output.of(privateEndpointOutboundConnections));
        }

        /**
         * @param privateEndpointOutboundConnections Base representation for Outbound Connection (Reverse Connection).
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointOutboundConnections(IntegrationInstancePrivateEndpointOutboundConnectionArgs... privateEndpointOutboundConnections) {
            return privateEndpointOutboundConnections(List.of(privateEndpointOutboundConnections));
        }

        /**
         * @param shape Shape
         * 
         * @return builder
         * 
         */
        public Builder shape(@Nullable Output<String> shape) {
            $.shape = shape;
            return this;
        }

        /**
         * @param shape Shape
         * 
         * @return builder
         * 
         */
        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param state (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The target state for the instance. Could be set to ACTIVE or INACTIVE
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param stateMessage An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder stateMessage(@Nullable Output<String> stateMessage) {
            $.stateMessage = stateMessage;
            return this;
        }

        /**
         * @param stateMessage An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder stateMessage(String stateMessage) {
            return stateMessage(Output.of(stateMessage));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,String>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,String> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time the the Integration Instance was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the the Integration Instance was created. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public IntegrationInstanceState build() {
            return $;
        }
    }

}
