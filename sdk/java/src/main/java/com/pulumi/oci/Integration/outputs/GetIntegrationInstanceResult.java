// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Integration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Integration.outputs.GetIntegrationInstanceAlternateCustomEndpoint;
import com.pulumi.oci.Integration.outputs.GetIntegrationInstanceAttachment;
import com.pulumi.oci.Integration.outputs.GetIntegrationInstanceCustomEndpoint;
import com.pulumi.oci.Integration.outputs.GetIntegrationInstanceIdcsInfo;
import com.pulumi.oci.Integration.outputs.GetIntegrationInstanceNetworkEndpointDetail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIntegrationInstanceResult {
    /**
     * @return A list of alternate custom endpoints used for the integration instance URL.
     * 
     */
    private @Nullable List<GetIntegrationInstanceAlternateCustomEndpoint> alternateCustomEndpoints;
    /**
     * @return A list of associated attachments to other services
     * 
     */
    private @Nullable List<GetIntegrationInstanceAttachment> attachments;
    /**
     * @return Compartment Identifier.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The entitlement used for billing purposes.
     * 
     */
    private @Nullable String consumptionModel;
    /**
     * @return Details for a custom endpoint for the integration instance.
     * 
     */
    private @Nullable List<GetIntegrationInstanceCustomEndpoint> customEndpoints;
    /**
     * @return Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Integration Instance Identifier, can be renamed.
     * 
     */
    private @Nullable String displayName;
    private @Nullable String domainId;
    private @Nullable Integer enableProcessAutomationTrigger;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The Virtual Cloud Network OCID.
     * 
     */
    private @Nullable String id;
    private @Nullable String idcsAt;
    /**
     * @return Information for IDCS access
     * 
     */
    private @Nullable List<GetIntegrationInstanceIdcsInfo> idcsInfos;
    /**
     * @return The Integration Instance URL.
     * 
     */
    private @Nullable String instanceUrl;
    private String integrationInstanceId;
    /**
     * @return Standard or Enterprise type,  Oracle Integration Generation 2 uses ENTERPRISE and STANDARD,  Oracle Integration 3 uses ENTERPRISEX and STANDARDX
     * 
     */
    private @Nullable String integrationInstanceType;
    /**
     * @return Bring your own license.
     * 
     */
    private @Nullable Boolean isByol;
    /**
     * @return The file server is enabled or not.
     * 
     */
    private @Nullable Boolean isFileServerEnabled;
    /**
     * @return Visual Builder is enabled or not.
     * 
     */
    private @Nullable Boolean isVisualBuilderEnabled;
    /**
     * @return The number of configured message packs (if any)
     * 
     */
    private @Nullable Integer messagePacks;
    /**
     * @return Base representation of a network endpoint.
     * 
     */
    private @Nullable List<GetIntegrationInstanceNetworkEndpointDetail> networkEndpointDetails;
    /**
     * @return Shape
     * 
     */
    private @Nullable String shape;
    /**
     * @return The current state of the integration instance.
     * 
     */
    private @Nullable String state;
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String stateMessage;
    /**
     * @return The time the the Integration Instance was created. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;

    private GetIntegrationInstanceResult() {}
    /**
     * @return A list of alternate custom endpoints used for the integration instance URL.
     * 
     */
    public List<GetIntegrationInstanceAlternateCustomEndpoint> alternateCustomEndpoints() {
        return this.alternateCustomEndpoints == null ? List.of() : this.alternateCustomEndpoints;
    }
    /**
     * @return A list of associated attachments to other services
     * 
     */
    public List<GetIntegrationInstanceAttachment> attachments() {
        return this.attachments == null ? List.of() : this.attachments;
    }
    /**
     * @return Compartment Identifier.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The entitlement used for billing purposes.
     * 
     */
    public Optional<String> consumptionModel() {
        return Optional.ofNullable(this.consumptionModel);
    }
    /**
     * @return Details for a custom endpoint for the integration instance.
     * 
     */
    public List<GetIntegrationInstanceCustomEndpoint> customEndpoints() {
        return this.customEndpoints == null ? List.of() : this.customEndpoints;
    }
    /**
     * @return Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Integration Instance Identifier, can be renamed.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public Optional<String> domainId() {
        return Optional.ofNullable(this.domainId);
    }
    public Optional<Integer> enableProcessAutomationTrigger() {
        return Optional.ofNullable(this.enableProcessAutomationTrigger);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The Virtual Cloud Network OCID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> idcsAt() {
        return Optional.ofNullable(this.idcsAt);
    }
    /**
     * @return Information for IDCS access
     * 
     */
    public List<GetIntegrationInstanceIdcsInfo> idcsInfos() {
        return this.idcsInfos == null ? List.of() : this.idcsInfos;
    }
    /**
     * @return The Integration Instance URL.
     * 
     */
    public Optional<String> instanceUrl() {
        return Optional.ofNullable(this.instanceUrl);
    }
    public String integrationInstanceId() {
        return this.integrationInstanceId;
    }
    /**
     * @return Standard or Enterprise type,  Oracle Integration Generation 2 uses ENTERPRISE and STANDARD,  Oracle Integration 3 uses ENTERPRISEX and STANDARDX
     * 
     */
    public Optional<String> integrationInstanceType() {
        return Optional.ofNullable(this.integrationInstanceType);
    }
    /**
     * @return Bring your own license.
     * 
     */
    public Optional<Boolean> isByol() {
        return Optional.ofNullable(this.isByol);
    }
    /**
     * @return The file server is enabled or not.
     * 
     */
    public Optional<Boolean> isFileServerEnabled() {
        return Optional.ofNullable(this.isFileServerEnabled);
    }
    /**
     * @return Visual Builder is enabled or not.
     * 
     */
    public Optional<Boolean> isVisualBuilderEnabled() {
        return Optional.ofNullable(this.isVisualBuilderEnabled);
    }
    /**
     * @return The number of configured message packs (if any)
     * 
     */
    public Optional<Integer> messagePacks() {
        return Optional.ofNullable(this.messagePacks);
    }
    /**
     * @return Base representation of a network endpoint.
     * 
     */
    public List<GetIntegrationInstanceNetworkEndpointDetail> networkEndpointDetails() {
        return this.networkEndpointDetails == null ? List.of() : this.networkEndpointDetails;
    }
    /**
     * @return Shape
     * 
     */
    public Optional<String> shape() {
        return Optional.ofNullable(this.shape);
    }
    /**
     * @return The current state of the integration instance.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> stateMessage() {
        return Optional.ofNullable(this.stateMessage);
    }
    /**
     * @return The time the the Integration Instance was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the IntegrationInstance was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIntegrationInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetIntegrationInstanceAlternateCustomEndpoint> alternateCustomEndpoints;
        private @Nullable List<GetIntegrationInstanceAttachment> attachments;
        private @Nullable String compartmentId;
        private @Nullable String consumptionModel;
        private @Nullable List<GetIntegrationInstanceCustomEndpoint> customEndpoints;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable String domainId;
        private @Nullable Integer enableProcessAutomationTrigger;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String idcsAt;
        private @Nullable List<GetIntegrationInstanceIdcsInfo> idcsInfos;
        private @Nullable String instanceUrl;
        private String integrationInstanceId;
        private @Nullable String integrationInstanceType;
        private @Nullable Boolean isByol;
        private @Nullable Boolean isFileServerEnabled;
        private @Nullable Boolean isVisualBuilderEnabled;
        private @Nullable Integer messagePacks;
        private @Nullable List<GetIntegrationInstanceNetworkEndpointDetail> networkEndpointDetails;
        private @Nullable String shape;
        private @Nullable String state;
        private @Nullable String stateMessage;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetIntegrationInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternateCustomEndpoints = defaults.alternateCustomEndpoints;
    	      this.attachments = defaults.attachments;
    	      this.compartmentId = defaults.compartmentId;
    	      this.consumptionModel = defaults.consumptionModel;
    	      this.customEndpoints = defaults.customEndpoints;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.domainId = defaults.domainId;
    	      this.enableProcessAutomationTrigger = defaults.enableProcessAutomationTrigger;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.idcsAt = defaults.idcsAt;
    	      this.idcsInfos = defaults.idcsInfos;
    	      this.instanceUrl = defaults.instanceUrl;
    	      this.integrationInstanceId = defaults.integrationInstanceId;
    	      this.integrationInstanceType = defaults.integrationInstanceType;
    	      this.isByol = defaults.isByol;
    	      this.isFileServerEnabled = defaults.isFileServerEnabled;
    	      this.isVisualBuilderEnabled = defaults.isVisualBuilderEnabled;
    	      this.messagePacks = defaults.messagePacks;
    	      this.networkEndpointDetails = defaults.networkEndpointDetails;
    	      this.shape = defaults.shape;
    	      this.state = defaults.state;
    	      this.stateMessage = defaults.stateMessage;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder alternateCustomEndpoints(@Nullable List<GetIntegrationInstanceAlternateCustomEndpoint> alternateCustomEndpoints) {
            this.alternateCustomEndpoints = alternateCustomEndpoints;
            return this;
        }
        public Builder alternateCustomEndpoints(GetIntegrationInstanceAlternateCustomEndpoint... alternateCustomEndpoints) {
            return alternateCustomEndpoints(List.of(alternateCustomEndpoints));
        }
        @CustomType.Setter
        public Builder attachments(@Nullable List<GetIntegrationInstanceAttachment> attachments) {
            this.attachments = attachments;
            return this;
        }
        public Builder attachments(GetIntegrationInstanceAttachment... attachments) {
            return attachments(List.of(attachments));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder consumptionModel(@Nullable String consumptionModel) {
            this.consumptionModel = consumptionModel;
            return this;
        }
        @CustomType.Setter
        public Builder customEndpoints(@Nullable List<GetIntegrationInstanceCustomEndpoint> customEndpoints) {
            this.customEndpoints = customEndpoints;
            return this;
        }
        public Builder customEndpoints(GetIntegrationInstanceCustomEndpoint... customEndpoints) {
            return customEndpoints(List.of(customEndpoints));
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder domainId(@Nullable String domainId) {
            this.domainId = domainId;
            return this;
        }
        @CustomType.Setter
        public Builder enableProcessAutomationTrigger(@Nullable Integer enableProcessAutomationTrigger) {
            this.enableProcessAutomationTrigger = enableProcessAutomationTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsAt(@Nullable String idcsAt) {
            this.idcsAt = idcsAt;
            return this;
        }
        @CustomType.Setter
        public Builder idcsInfos(@Nullable List<GetIntegrationInstanceIdcsInfo> idcsInfos) {
            this.idcsInfos = idcsInfos;
            return this;
        }
        public Builder idcsInfos(GetIntegrationInstanceIdcsInfo... idcsInfos) {
            return idcsInfos(List.of(idcsInfos));
        }
        @CustomType.Setter
        public Builder instanceUrl(@Nullable String instanceUrl) {
            this.instanceUrl = instanceUrl;
            return this;
        }
        @CustomType.Setter
        public Builder integrationInstanceId(String integrationInstanceId) {
            this.integrationInstanceId = Objects.requireNonNull(integrationInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder integrationInstanceType(@Nullable String integrationInstanceType) {
            this.integrationInstanceType = integrationInstanceType;
            return this;
        }
        @CustomType.Setter
        public Builder isByol(@Nullable Boolean isByol) {
            this.isByol = isByol;
            return this;
        }
        @CustomType.Setter
        public Builder isFileServerEnabled(@Nullable Boolean isFileServerEnabled) {
            this.isFileServerEnabled = isFileServerEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isVisualBuilderEnabled(@Nullable Boolean isVisualBuilderEnabled) {
            this.isVisualBuilderEnabled = isVisualBuilderEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder messagePacks(@Nullable Integer messagePacks) {
            this.messagePacks = messagePacks;
            return this;
        }
        @CustomType.Setter
        public Builder networkEndpointDetails(@Nullable List<GetIntegrationInstanceNetworkEndpointDetail> networkEndpointDetails) {
            this.networkEndpointDetails = networkEndpointDetails;
            return this;
        }
        public Builder networkEndpointDetails(GetIntegrationInstanceNetworkEndpointDetail... networkEndpointDetails) {
            return networkEndpointDetails(List.of(networkEndpointDetails));
        }
        @CustomType.Setter
        public Builder shape(@Nullable String shape) {
            this.shape = shape;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder stateMessage(@Nullable String stateMessage) {
            this.stateMessage = stateMessage;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetIntegrationInstanceResult build() {
            final var o = new GetIntegrationInstanceResult();
            o.alternateCustomEndpoints = alternateCustomEndpoints;
            o.attachments = attachments;
            o.compartmentId = compartmentId;
            o.consumptionModel = consumptionModel;
            o.customEndpoints = customEndpoints;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.domainId = domainId;
            o.enableProcessAutomationTrigger = enableProcessAutomationTrigger;
            o.freeformTags = freeformTags;
            o.id = id;
            o.idcsAt = idcsAt;
            o.idcsInfos = idcsInfos;
            o.instanceUrl = instanceUrl;
            o.integrationInstanceId = integrationInstanceId;
            o.integrationInstanceType = integrationInstanceType;
            o.isByol = isByol;
            o.isFileServerEnabled = isFileServerEnabled;
            o.isVisualBuilderEnabled = isVisualBuilderEnabled;
            o.messagePacks = messagePacks;
            o.networkEndpointDetails = networkEndpointDetails;
            o.shape = shape;
            o.state = state;
            o.stateMessage = stateMessage;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
