// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Integration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIntegrationInstancesIntegrationInstanceAttachment {
    /**
     * @return * If role == `PARENT`, the attached instance was created by this service instance
     * * If role == `CHILD`, this instance was created from attached instance on behalf of a user
     * 
     */
    private Boolean isImplicit;
    /**
     * @return The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
     * 
     */
    private String targetId;
    /**
     * @return The dataplane instance URL of the attached instance
     * 
     */
    private String targetInstanceUrl;
    /**
     * @return The role of the target attachment.
     * 
     */
    private String targetRole;
    /**
     * @return The type of the target instance, such as &#34;FUSION&#34;.
     * 
     */
    private String targetServiceType;

    private GetIntegrationInstancesIntegrationInstanceAttachment() {}
    /**
     * @return * If role == `PARENT`, the attached instance was created by this service instance
     * * If role == `CHILD`, this instance was created from attached instance on behalf of a user
     * 
     */
    public Boolean isImplicit() {
        return this.isImplicit;
    }
    /**
     * @return The OCID of the target instance (which could be any other Oracle Cloud Infrastructure PaaS/SaaS resource), to which this instance is attached.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The dataplane instance URL of the attached instance
     * 
     */
    public String targetInstanceUrl() {
        return this.targetInstanceUrl;
    }
    /**
     * @return The role of the target attachment.
     * 
     */
    public String targetRole() {
        return this.targetRole;
    }
    /**
     * @return The type of the target instance, such as &#34;FUSION&#34;.
     * 
     */
    public String targetServiceType() {
        return this.targetServiceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIntegrationInstancesIntegrationInstanceAttachment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isImplicit;
        private String targetId;
        private String targetInstanceUrl;
        private String targetRole;
        private String targetServiceType;
        public Builder() {}
        public Builder(GetIntegrationInstancesIntegrationInstanceAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isImplicit = defaults.isImplicit;
    	      this.targetId = defaults.targetId;
    	      this.targetInstanceUrl = defaults.targetInstanceUrl;
    	      this.targetRole = defaults.targetRole;
    	      this.targetServiceType = defaults.targetServiceType;
        }

        @CustomType.Setter
        public Builder isImplicit(Boolean isImplicit) {
            if (isImplicit == null) {
              throw new MissingRequiredPropertyException("GetIntegrationInstancesIntegrationInstanceAttachment", "isImplicit");
            }
            this.isImplicit = isImplicit;
            return this;
        }
        @CustomType.Setter
        public Builder targetId(String targetId) {
            if (targetId == null) {
              throw new MissingRequiredPropertyException("GetIntegrationInstancesIntegrationInstanceAttachment", "targetId");
            }
            this.targetId = targetId;
            return this;
        }
        @CustomType.Setter
        public Builder targetInstanceUrl(String targetInstanceUrl) {
            if (targetInstanceUrl == null) {
              throw new MissingRequiredPropertyException("GetIntegrationInstancesIntegrationInstanceAttachment", "targetInstanceUrl");
            }
            this.targetInstanceUrl = targetInstanceUrl;
            return this;
        }
        @CustomType.Setter
        public Builder targetRole(String targetRole) {
            if (targetRole == null) {
              throw new MissingRequiredPropertyException("GetIntegrationInstancesIntegrationInstanceAttachment", "targetRole");
            }
            this.targetRole = targetRole;
            return this;
        }
        @CustomType.Setter
        public Builder targetServiceType(String targetServiceType) {
            if (targetServiceType == null) {
              throw new MissingRequiredPropertyException("GetIntegrationInstancesIntegrationInstanceAttachment", "targetServiceType");
            }
            this.targetServiceType = targetServiceType;
            return this;
        }
        public GetIntegrationInstancesIntegrationInstanceAttachment build() {
            final var _resultValue = new GetIntegrationInstancesIntegrationInstanceAttachment();
            _resultValue.isImplicit = isImplicit;
            _resultValue.targetId = targetId;
            _resultValue.targetInstanceUrl = targetInstanceUrl;
            _resultValue.targetRole = targetRole;
            _resultValue.targetServiceType = targetServiceType;
            return _resultValue;
        }
    }
}
