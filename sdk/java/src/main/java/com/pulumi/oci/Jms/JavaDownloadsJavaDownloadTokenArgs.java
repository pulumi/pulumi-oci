// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JavaDownloadsJavaDownloadTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final JavaDownloadsJavaDownloadTokenArgs Empty = new JavaDownloadsJavaDownloadTokenArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy scoped to the JavaDownloadToken.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy scoped to the JavaDownloadToken.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) User provided description of the JavaDownloadToken.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return (Updatable) User provided description of the JavaDownloadToken.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * (Updatable) User provided display name of the JavaDownloadToken.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) User provided display name of the JavaDownloadToken.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The token default attribute.
     * 
     */
    @Import(name="isDefault")
    private @Nullable Output<Boolean> isDefault;

    /**
     * @return (Updatable) The token default attribute.
     * 
     */
    public Optional<Output<Boolean>> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }

    /**
     * The Java version associated with the token.
     * 
     */
    @Import(name="javaVersion", required=true)
    private Output<String> javaVersion;

    /**
     * @return The Java version associated with the token.
     * 
     */
    public Output<String> javaVersion() {
        return this.javaVersion;
    }

    /**
     * (Updatable) The license type(s) associated with the JavaDownloadToken.
     * 
     */
    @Import(name="licenseTypes", required=true)
    private Output<List<String>> licenseTypes;

    /**
     * @return (Updatable) The license type(s) associated with the JavaDownloadToken.
     * 
     */
    public Output<List<String>> licenseTypes() {
        return this.licenseTypes;
    }

    /**
     * (Updatable) Expiry time of the token.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="timeExpires", required=true)
    private Output<String> timeExpires;

    /**
     * @return (Updatable) Expiry time of the token.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> timeExpires() {
        return this.timeExpires;
    }

    private JavaDownloadsJavaDownloadTokenArgs() {}

    private JavaDownloadsJavaDownloadTokenArgs(JavaDownloadsJavaDownloadTokenArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isDefault = $.isDefault;
        this.javaVersion = $.javaVersion;
        this.licenseTypes = $.licenseTypes;
        this.timeExpires = $.timeExpires;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JavaDownloadsJavaDownloadTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JavaDownloadsJavaDownloadTokenArgs $;

        public Builder() {
            $ = new JavaDownloadsJavaDownloadTokenArgs();
        }

        public Builder(JavaDownloadsJavaDownloadTokenArgs defaults) {
            $ = new JavaDownloadsJavaDownloadTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy scoped to the JavaDownloadToken.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the tenancy scoped to the JavaDownloadToken.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`. (See [Understanding Free-form Tags](https://docs.cloud.oracle.com/iaas/Content/Tagging/Tasks/managingtagsandtagnamespaces.htm)).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) User provided description of the JavaDownloadToken.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) User provided description of the JavaDownloadToken.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) User provided display name of the JavaDownloadToken.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) User provided display name of the JavaDownloadToken.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`. (See [Managing Tags and Tag Namespaces](https://docs.cloud.oracle.com/iaas/Content/Tagging/Concepts/understandingfreeformtags.htm).)
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isDefault (Updatable) The token default attribute.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param isDefault (Updatable) The token default attribute.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        /**
         * @param javaVersion The Java version associated with the token.
         * 
         * @return builder
         * 
         */
        public Builder javaVersion(Output<String> javaVersion) {
            $.javaVersion = javaVersion;
            return this;
        }

        /**
         * @param javaVersion The Java version associated with the token.
         * 
         * @return builder
         * 
         */
        public Builder javaVersion(String javaVersion) {
            return javaVersion(Output.of(javaVersion));
        }

        /**
         * @param licenseTypes (Updatable) The license type(s) associated with the JavaDownloadToken.
         * 
         * @return builder
         * 
         */
        public Builder licenseTypes(Output<List<String>> licenseTypes) {
            $.licenseTypes = licenseTypes;
            return this;
        }

        /**
         * @param licenseTypes (Updatable) The license type(s) associated with the JavaDownloadToken.
         * 
         * @return builder
         * 
         */
        public Builder licenseTypes(List<String> licenseTypes) {
            return licenseTypes(Output.of(licenseTypes));
        }

        /**
         * @param licenseTypes (Updatable) The license type(s) associated with the JavaDownloadToken.
         * 
         * @return builder
         * 
         */
        public Builder licenseTypes(String... licenseTypes) {
            return licenseTypes(List.of(licenseTypes));
        }

        /**
         * @param timeExpires (Updatable) Expiry time of the token.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeExpires(Output<String> timeExpires) {
            $.timeExpires = timeExpires;
            return this;
        }

        /**
         * @param timeExpires (Updatable) Expiry time of the token.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder timeExpires(String timeExpires) {
            return timeExpires(Output.of(timeExpires));
        }

        public JavaDownloadsJavaDownloadTokenArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("JavaDownloadsJavaDownloadTokenArgs", "compartmentId");
            }
            if ($.description == null) {
                throw new MissingRequiredPropertyException("JavaDownloadsJavaDownloadTokenArgs", "description");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("JavaDownloadsJavaDownloadTokenArgs", "displayName");
            }
            if ($.javaVersion == null) {
                throw new MissingRequiredPropertyException("JavaDownloadsJavaDownloadTokenArgs", "javaVersion");
            }
            if ($.licenseTypes == null) {
                throw new MissingRequiredPropertyException("JavaDownloadsJavaDownloadTokenArgs", "licenseTypes");
            }
            if ($.timeExpires == null) {
                throw new MissingRequiredPropertyException("JavaDownloadsJavaDownloadTokenArgs", "timeExpires");
            }
            return $;
        }
    }

}
