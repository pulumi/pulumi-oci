// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class JavaDownloadsJavaLicenseAcceptanceRecordArgs extends com.pulumi.resources.ResourceArgs {

    public static final JavaDownloadsJavaLicenseAcceptanceRecordArgs Empty = new JavaDownloadsJavaLicenseAcceptanceRecordArgs();

    /**
     * The tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user accepting the license.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user accepting the license.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Status of license acceptance.
     * 
     */
    @Import(name="licenseAcceptanceStatus", required=true)
    private Output<String> licenseAcceptanceStatus;

    /**
     * @return (Updatable) Status of license acceptance.
     * 
     */
    public Output<String> licenseAcceptanceStatus() {
        return this.licenseAcceptanceStatus;
    }

    /**
     * License type for the Java version.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="licenseType", required=true)
    private Output<String> licenseType;

    /**
     * @return License type for the Java version.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> licenseType() {
        return this.licenseType;
    }

    private JavaDownloadsJavaLicenseAcceptanceRecordArgs() {}

    private JavaDownloadsJavaLicenseAcceptanceRecordArgs(JavaDownloadsJavaLicenseAcceptanceRecordArgs $) {
        this.compartmentId = $.compartmentId;
        this.licenseAcceptanceStatus = $.licenseAcceptanceStatus;
        this.licenseType = $.licenseType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JavaDownloadsJavaLicenseAcceptanceRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JavaDownloadsJavaLicenseAcceptanceRecordArgs $;

        public Builder() {
            $ = new JavaDownloadsJavaLicenseAcceptanceRecordArgs();
        }

        public Builder(JavaDownloadsJavaLicenseAcceptanceRecordArgs defaults) {
            $ = new JavaDownloadsJavaLicenseAcceptanceRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user accepting the license.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The tenancy [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user accepting the license.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param licenseAcceptanceStatus (Updatable) Status of license acceptance.
         * 
         * @return builder
         * 
         */
        public Builder licenseAcceptanceStatus(Output<String> licenseAcceptanceStatus) {
            $.licenseAcceptanceStatus = licenseAcceptanceStatus;
            return this;
        }

        /**
         * @param licenseAcceptanceStatus (Updatable) Status of license acceptance.
         * 
         * @return builder
         * 
         */
        public Builder licenseAcceptanceStatus(String licenseAcceptanceStatus) {
            return licenseAcceptanceStatus(Output.of(licenseAcceptanceStatus));
        }

        /**
         * @param licenseType License type for the Java version.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder licenseType(Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType License type for the Java version.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        public JavaDownloadsJavaLicenseAcceptanceRecordArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("JavaDownloadsJavaLicenseAcceptanceRecordArgs", "compartmentId");
            }
            if ($.licenseAcceptanceStatus == null) {
                throw new MissingRequiredPropertyException("JavaDownloadsJavaLicenseAcceptanceRecordArgs", "licenseAcceptanceStatus");
            }
            if ($.licenseType == null) {
                throw new MissingRequiredPropertyException("JavaDownloadsJavaLicenseAcceptanceRecordArgs", "licenseType");
            }
            return $;
        }
    }

}
