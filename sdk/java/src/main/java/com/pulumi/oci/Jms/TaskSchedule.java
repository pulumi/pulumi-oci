// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Jms.TaskScheduleArgs;
import com.pulumi.oci.Jms.inputs.TaskScheduleState;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetails;
import com.pulumi.oci.Utilities;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource provides the Task Schedule resource in Oracle Cloud Infrastructure Jms service.
 * 
 * Create a task schedule using the information provided.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Jms.TaskSchedule;
 * import com.pulumi.oci.Jms.TaskScheduleArgs;
 * import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsArgs;
 * import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsAddInstallationSiteTaskRequestArgs;
 * import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsCryptoTaskRequestArgs;
 * import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestArgs;
 * import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsJavaMigrationTaskRequestArgs;
 * import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsJfrTaskRequestArgs;
 * import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsPerformanceTuningTaskRequestArgs;
 * import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestArgs;
 * import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsScanJavaServerTaskRequestArgs;
 * import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsScanLibraryTaskRequestArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testTaskSchedule = new TaskSchedule("testTaskSchedule", TaskScheduleArgs.builder()
 *             .executionRecurrences(taskScheduleExecutionRecurrences)
 *             .fleetId(testFleet.id())
 *             .taskDetails(TaskScheduleTaskDetailsArgs.builder()
 *                 .taskType(taskScheduleTaskDetailsTaskType)
 *                 .addInstallationSiteTaskRequest(TaskScheduleTaskDetailsAddInstallationSiteTaskRequestArgs.builder()
 *                     .installationSites(TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs.builder()
 *                         .artifactContentType(taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesArtifactContentType)
 *                         .forceInstall(taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesForceInstall)
 *                         .headlessMode(taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesHeadlessMode)
 *                         .installationPath(taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesInstallationPath)
 *                         .managedInstanceId(testManagedInstance.id())
 *                         .releaseVersion(taskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSitesReleaseVersion)
 *                         .build())
 *                     .postInstallationActions(taskScheduleTaskDetailsAddInstallationSiteTaskRequestPostInstallationActions)
 *                     .build())
 *                 .cryptoTaskRequest(TaskScheduleTaskDetailsCryptoTaskRequestArgs.builder()
 *                     .recordingDurationInMinutes(taskScheduleTaskDetailsCryptoTaskRequestRecordingDurationInMinutes)
 *                     .targets(TaskScheduleTaskDetailsCryptoTaskRequestTargetArgs.builder()
 *                         .applicationInstallationKey(taskScheduleTaskDetailsCryptoTaskRequestTargetsApplicationInstallationKey)
 *                         .applicationKey(taskScheduleTaskDetailsCryptoTaskRequestTargetsApplicationKey)
 *                         .containerKey(taskScheduleTaskDetailsCryptoTaskRequestTargetsContainerKey)
 *                         .jreKey(taskScheduleTaskDetailsCryptoTaskRequestTargetsJreKey)
 *                         .managedInstanceId(testManagedInstance.id())
 *                         .build())
 *                     .waitingPeriodInMinutes(taskScheduleTaskDetailsCryptoTaskRequestWaitingPeriodInMinutes)
 *                     .build())
 *                 .deployedApplicationMigrationTaskRequest(TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestArgs.builder()
 *                     .targets(TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetArgs.builder()
 *                         .deployedApplicationInstallationKey(taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsDeployedApplicationInstallationKey)
 *                         .excludePackagePrefixes(taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsExcludePackagePrefixes)
 *                         .includePackagePrefixes(taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsIncludePackagePrefixes)
 *                         .managedInstanceId(testManagedInstance.id())
 *                         .sourceJdkVersion(taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsSourceJdkVersion)
 *                         .targetJdkVersion(taskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestTargetsTargetJdkVersion)
 *                         .build())
 *                     .build())
 *                 .javaMigrationTaskRequest(TaskScheduleTaskDetailsJavaMigrationTaskRequestArgs.builder()
 *                     .targets(TaskScheduleTaskDetailsJavaMigrationTaskRequestTargetArgs.builder()
 *                         .applicationInstallationKey(taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsApplicationInstallationKey)
 *                         .excludePackagePrefixes(taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsExcludePackagePrefixes)
 *                         .includePackagePrefixes(taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsIncludePackagePrefixes)
 *                         .managedInstanceId(testManagedInstance.id())
 *                         .sourceJdkVersion(taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsSourceJdkVersion)
 *                         .targetJdkVersion(taskScheduleTaskDetailsJavaMigrationTaskRequestTargetsTargetJdkVersion)
 *                         .build())
 *                     .build())
 *                 .jfrTaskRequest(TaskScheduleTaskDetailsJfrTaskRequestArgs.builder()
 *                     .jfcProfileName(testProfile.name())
 *                     .jfcV1(taskScheduleTaskDetailsJfrTaskRequestJfcV1)
 *                     .jfcV2(taskScheduleTaskDetailsJfrTaskRequestJfcV2)
 *                     .recordingDurationInMinutes(taskScheduleTaskDetailsJfrTaskRequestRecordingDurationInMinutes)
 *                     .recordingSizeInMb(taskScheduleTaskDetailsJfrTaskRequestRecordingSizeInMb)
 *                     .targets(TaskScheduleTaskDetailsJfrTaskRequestTargetArgs.builder()
 *                         .applicationInstallationKey(taskScheduleTaskDetailsJfrTaskRequestTargetsApplicationInstallationKey)
 *                         .applicationKey(taskScheduleTaskDetailsJfrTaskRequestTargetsApplicationKey)
 *                         .containerKey(taskScheduleTaskDetailsJfrTaskRequestTargetsContainerKey)
 *                         .jreKey(taskScheduleTaskDetailsJfrTaskRequestTargetsJreKey)
 *                         .managedInstanceId(testManagedInstance.id())
 *                         .build())
 *                     .waitingPeriodInMinutes(taskScheduleTaskDetailsJfrTaskRequestWaitingPeriodInMinutes)
 *                     .build())
 *                 .performanceTuningTaskRequest(TaskScheduleTaskDetailsPerformanceTuningTaskRequestArgs.builder()
 *                     .recordingDurationInMinutes(taskScheduleTaskDetailsPerformanceTuningTaskRequestRecordingDurationInMinutes)
 *                     .targets(TaskScheduleTaskDetailsPerformanceTuningTaskRequestTargetArgs.builder()
 *                         .applicationInstallationKey(taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsApplicationInstallationKey)
 *                         .applicationKey(taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsApplicationKey)
 *                         .containerKey(taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsContainerKey)
 *                         .jreKey(taskScheduleTaskDetailsPerformanceTuningTaskRequestTargetsJreKey)
 *                         .managedInstanceId(testManagedInstance.id())
 *                         .build())
 *                     .waitingPeriodInMinutes(taskScheduleTaskDetailsPerformanceTuningTaskRequestWaitingPeriodInMinutes)
 *                     .build())
 *                 .removeInstallationSiteTaskRequest(TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestArgs.builder()
 *                     .installationSites(TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSiteArgs.builder()
 *                         .installationKey(taskScheduleTaskDetailsRemoveInstallationSiteTaskRequestInstallationSitesInstallationKey)
 *                         .managedInstanceId(testManagedInstance.id())
 *                         .build())
 *                     .build())
 *                 .scanJavaServerTaskRequest(TaskScheduleTaskDetailsScanJavaServerTaskRequestArgs.builder()
 *                     .managedInstanceIds(taskScheduleTaskDetailsScanJavaServerTaskRequestManagedInstanceIds)
 *                     .build())
 *                 .scanLibraryTaskRequest(TaskScheduleTaskDetailsScanLibraryTaskRequestArgs.builder()
 *                     .dynamicScanDurationInMinutes(taskScheduleTaskDetailsScanLibraryTaskRequestDynamicScanDurationInMinutes)
 *                     .isDynamicScan(taskScheduleTaskDetailsScanLibraryTaskRequestIsDynamicScan)
 *                     .managedInstanceIds(taskScheduleTaskDetailsScanLibraryTaskRequestManagedInstanceIds)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * TaskSchedules can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Jms/taskSchedule:TaskSchedule test_task_schedule &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Jms/taskSchedule:TaskSchedule")
public class TaskSchedule extends com.pulumi.resources.CustomResource {
    /**
     * Name of the task creator.
     * 
     */
    @Export(name="createdBy", refs={String.class}, tree="[0]")
    private Output<String> createdBy;

    /**
     * @return Name of the task creator.
     * 
     */
    public Output<String> createdBy() {
        return this.createdBy;
    }
    /**
     * (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be &#39;DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10&#39;. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be &#39;DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z&#39;.
     * 
     */
    @Export(name="executionRecurrences", refs={String.class}, tree="[0]")
    private Output<String> executionRecurrences;

    /**
     * @return (Updatable) Recurrence specification for the task schedule execution (formatted according to [RFC-5545](https://icalendar.org/RFC-Specifications/iCalendar-RFC-5545/)). To run daily for 10 occurrences starts on September 2, 2024 09:00 EDT, it should be &#39;DTSTART;TZID=America/New_York:20240902T090000 RRULE:FREQ=DAILY;COUNT=10&#39;. To run every 3 hours from 9:00 AM to 5:00 PM on August 5, 2024 EDT, it should be &#39;DTSTART;TZID=America/New_York:20240805T090000 RRULE:FREQ=HOURLY;INTERVAL=3;UNTIL=20240805T170000Z&#39;.
     * 
     */
    public Output<String> executionRecurrences() {
        return this.executionRecurrences;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     * 
     */
    @Export(name="fleetId", refs={String.class}, tree="[0]")
    private Output<String> fleetId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     * 
     */
    public Output<String> fleetId() {
        return this.fleetId;
    }
    /**
     * The name of the task schedule.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the task schedule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * All possible status of task schedule.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return All possible status of task schedule.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * (Updatable) The minimum details of a task.
     * 
     */
    @Export(name="taskDetails", refs={TaskScheduleTaskDetails.class}, tree="[0]")
    private Output<TaskScheduleTaskDetails> taskDetails;

    /**
     * @return (Updatable) The minimum details of a task.
     * 
     */
    public Output<TaskScheduleTaskDetails> taskDetails() {
        return this.taskDetails;
    }
    /**
     * The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the task schedule was created (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Export(name="timeLastRun", refs={String.class}, tree="[0]")
    private Output<String> timeLastRun;

    /**
     * @return The date and time the task schedule ran last (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Output<String> timeLastRun() {
        return this.timeLastRun;
    }
    /**
     * The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Export(name="timeLastUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeLastUpdated;

    /**
     * @return The date and time the task schedule was last updated (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Output<String> timeLastUpdated() {
        return this.timeLastUpdated;
    }
    /**
     * The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Export(name="timeNextRun", refs={String.class}, tree="[0]")
    private Output<String> timeNextRun;

    /**
     * @return The date and time the task schedule will run next (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Output<String> timeNextRun() {
        return this.timeNextRun;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TaskSchedule(java.lang.String name) {
        this(name, TaskScheduleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TaskSchedule(java.lang.String name, TaskScheduleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TaskSchedule(java.lang.String name, TaskScheduleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Jms/taskSchedule:TaskSchedule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TaskSchedule(java.lang.String name, Output<java.lang.String> id, @Nullable TaskScheduleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Jms/taskSchedule:TaskSchedule", name, state, makeResourceOptions(options, id), false);
    }

    private static TaskScheduleArgs makeArgs(TaskScheduleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TaskScheduleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TaskSchedule get(java.lang.String name, Output<java.lang.String> id, @Nullable TaskScheduleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TaskSchedule(name, id, state, options);
    }
}
