// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Jms.inputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpathArgs;
import com.pulumi.oci.Jms.inputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJarArgs;
import com.pulumi.oci.Jms.inputs.FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTlArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs Empty = new FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs();

    /**
     * (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.certpath.disabledAlgorithms will be updated with the following supported actions:
     * * Changing minimum key length for RSA signed jars
     * * Changing minimum key length for EC
     * * Changing minimum key length for DSA
     * 
     */
    @Import(name="certpaths")
    private @Nullable Output<List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpathArgs>> certpaths;

    /**
     * @return (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.certpath.disabledAlgorithms will be updated with the following supported actions:
     * * Changing minimum key length for RSA signed jars
     * * Changing minimum key length for EC
     * * Changing minimum key length for DSA
     * 
     */
    public Optional<Output<List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpathArgs>>> certpaths() {
        return Optional.ofNullable(this.certpaths);
    }

    /**
     * (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.jar.disabledAlgorithms will be updated with the following supported actions:
     * * Changing minimum key length for RSA signed jars
     * * Changing minimum key length for EC
     * * Changing minimum key length for DSA
     * 
     */
    @Import(name="jars")
    private @Nullable Output<List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJarArgs>> jars;

    /**
     * @return (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.jar.disabledAlgorithms will be updated with the following supported actions:
     * * Changing minimum key length for RSA signed jars
     * * Changing minimum key length for EC
     * * Changing minimum key length for DSA
     * 
     */
    public Optional<Output<List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJarArgs>>> jars() {
        return Optional.ofNullable(this.jars);
    }

    /**
     * (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.tls.disabledAlgorithms will be updated with the following supported actions:
     * * Changing minimum key length for Diffie-Hellman
     * 
     */
    @Import(name="tls")
    private @Nullable Output<List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTlArgs>> tls;

    /**
     * @return (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.tls.disabledAlgorithms will be updated with the following supported actions:
     * * Changing minimum key length for Diffie-Hellman
     * 
     */
    public Optional<Output<List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTlArgs>>> tls() {
        return Optional.ofNullable(this.tls);
    }

    private FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs() {}

    private FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs(FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs $) {
        this.certpaths = $.certpaths;
        this.jars = $.jars;
        this.tls = $.tls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs $;

        public Builder() {
            $ = new FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs();
        }

        public Builder(FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs defaults) {
            $ = new FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certpaths (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.certpath.disabledAlgorithms will be updated with the following supported actions:
         * * Changing minimum key length for RSA signed jars
         * * Changing minimum key length for EC
         * * Changing minimum key length for DSA
         * 
         * @return builder
         * 
         */
        public Builder certpaths(@Nullable Output<List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpathArgs>> certpaths) {
            $.certpaths = certpaths;
            return this;
        }

        /**
         * @param certpaths (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.certpath.disabledAlgorithms will be updated with the following supported actions:
         * * Changing minimum key length for RSA signed jars
         * * Changing minimum key length for EC
         * * Changing minimum key length for DSA
         * 
         * @return builder
         * 
         */
        public Builder certpaths(List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpathArgs> certpaths) {
            return certpaths(Output.of(certpaths));
        }

        /**
         * @param certpaths (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.certpath.disabledAlgorithms will be updated with the following supported actions:
         * * Changing minimum key length for RSA signed jars
         * * Changing minimum key length for EC
         * * Changing minimum key length for DSA
         * 
         * @return builder
         * 
         */
        public Builder certpaths(FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsCertpathArgs... certpaths) {
            return certpaths(List.of(certpaths));
        }

        /**
         * @param jars (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.jar.disabledAlgorithms will be updated with the following supported actions:
         * * Changing minimum key length for RSA signed jars
         * * Changing minimum key length for EC
         * * Changing minimum key length for DSA
         * 
         * @return builder
         * 
         */
        public Builder jars(@Nullable Output<List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJarArgs>> jars) {
            $.jars = jars;
            return this;
        }

        /**
         * @param jars (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.jar.disabledAlgorithms will be updated with the following supported actions:
         * * Changing minimum key length for RSA signed jars
         * * Changing minimum key length for EC
         * * Changing minimum key length for DSA
         * 
         * @return builder
         * 
         */
        public Builder jars(List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJarArgs> jars) {
            return jars(Output.of(jars));
        }

        /**
         * @param jars (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.jar.disabledAlgorithms will be updated with the following supported actions:
         * * Changing minimum key length for RSA signed jars
         * * Changing minimum key length for EC
         * * Changing minimum key length for DSA
         * 
         * @return builder
         * 
         */
        public Builder jars(FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsJarArgs... jars) {
            return jars(List.of(jars));
        }

        /**
         * @param tls (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.tls.disabledAlgorithms will be updated with the following supported actions:
         * * Changing minimum key length for Diffie-Hellman
         * 
         * @return builder
         * 
         */
        public Builder tls(@Nullable Output<List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTlArgs>> tls) {
            $.tls = tls;
            return this;
        }

        /**
         * @param tls (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.tls.disabledAlgorithms will be updated with the following supported actions:
         * * Changing minimum key length for Diffie-Hellman
         * 
         * @return builder
         * 
         */
        public Builder tls(List<FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTlArgs> tls) {
            return tls(Output.of(tls));
        }

        /**
         * @param tls (Updatable) Updates the minimum key size for the specified encryption algorithm. The JDK property jdk.tls.disabledAlgorithms will be updated with the following supported actions:
         * * Changing minimum key length for Diffie-Hellman
         * 
         * @return builder
         * 
         */
        public Builder tls(FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsTlArgs... tls) {
            return tls(List.of(tls));
        }

        public FleetAdvancedFeatureConfigurationLcmPostInstallationActionsMinimumKeySizeSettingsArgs build() {
            return $;
        }
    }

}
