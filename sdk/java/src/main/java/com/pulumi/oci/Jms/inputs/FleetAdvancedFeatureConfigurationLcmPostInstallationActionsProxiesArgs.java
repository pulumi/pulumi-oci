// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs Empty = new FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs();

    /**
     * (Updatable) Ftp host to be set in net.properties file.
     * 
     */
    @Import(name="ftpProxyHost")
    private @Nullable Output<String> ftpProxyHost;

    /**
     * @return (Updatable) Ftp host to be set in net.properties file.
     * 
     */
    public Optional<Output<String>> ftpProxyHost() {
        return Optional.ofNullable(this.ftpProxyHost);
    }

    /**
     * (Updatable) Ftp port number to be set in net.properties file.
     * 
     */
    @Import(name="ftpProxyPort")
    private @Nullable Output<Integer> ftpProxyPort;

    /**
     * @return (Updatable) Ftp port number to be set in net.properties file.
     * 
     */
    public Optional<Output<Integer>> ftpProxyPort() {
        return Optional.ofNullable(this.ftpProxyPort);
    }

    /**
     * (Updatable) Http host to be set in net.properties file.
     * 
     */
    @Import(name="httpProxyHost")
    private @Nullable Output<String> httpProxyHost;

    /**
     * @return (Updatable) Http host to be set in net.properties file.
     * 
     */
    public Optional<Output<String>> httpProxyHost() {
        return Optional.ofNullable(this.httpProxyHost);
    }

    /**
     * (Updatable) Http port number to be set in net.properties file.
     * 
     */
    @Import(name="httpProxyPort")
    private @Nullable Output<Integer> httpProxyPort;

    /**
     * @return (Updatable) Http port number to be set in net.properties file.
     * 
     */
    public Optional<Output<Integer>> httpProxyPort() {
        return Optional.ofNullable(this.httpProxyPort);
    }

    /**
     * (Updatable) Https host to be set in net.properties file.
     * 
     */
    @Import(name="httpsProxyHost")
    private @Nullable Output<String> httpsProxyHost;

    /**
     * @return (Updatable) Https host to be set in net.properties file.
     * 
     */
    public Optional<Output<String>> httpsProxyHost() {
        return Optional.ofNullable(this.httpsProxyHost);
    }

    /**
     * (Updatable) Https port number to be set in net.properties file.
     * 
     */
    @Import(name="httpsProxyPort")
    private @Nullable Output<Integer> httpsProxyPort;

    /**
     * @return (Updatable) Https port number to be set in net.properties file.
     * 
     */
    public Optional<Output<Integer>> httpsProxyPort() {
        return Optional.ofNullable(this.httpsProxyPort);
    }

    /**
     * (Updatable) Socks host to be set in net.properties file.
     * 
     */
    @Import(name="socksProxyHost")
    private @Nullable Output<String> socksProxyHost;

    /**
     * @return (Updatable) Socks host to be set in net.properties file.
     * 
     */
    public Optional<Output<String>> socksProxyHost() {
        return Optional.ofNullable(this.socksProxyHost);
    }

    /**
     * (Updatable) Socks port number to be set in net.properties file.
     * 
     */
    @Import(name="socksProxyPort")
    private @Nullable Output<Integer> socksProxyPort;

    /**
     * @return (Updatable) Socks port number to be set in net.properties file.
     * 
     */
    public Optional<Output<Integer>> socksProxyPort() {
        return Optional.ofNullable(this.socksProxyPort);
    }

    /**
     * (Updatable) Sets &#34;java.net.useSystemProxies=true&#34; in net.properties when they exist.
     * 
     */
    @Import(name="useSystemProxies")
    private @Nullable Output<Boolean> useSystemProxies;

    /**
     * @return (Updatable) Sets &#34;java.net.useSystemProxies=true&#34; in net.properties when they exist.
     * 
     */
    public Optional<Output<Boolean>> useSystemProxies() {
        return Optional.ofNullable(this.useSystemProxies);
    }

    private FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs() {}

    private FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs(FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs $) {
        this.ftpProxyHost = $.ftpProxyHost;
        this.ftpProxyPort = $.ftpProxyPort;
        this.httpProxyHost = $.httpProxyHost;
        this.httpProxyPort = $.httpProxyPort;
        this.httpsProxyHost = $.httpsProxyHost;
        this.httpsProxyPort = $.httpsProxyPort;
        this.socksProxyHost = $.socksProxyHost;
        this.socksProxyPort = $.socksProxyPort;
        this.useSystemProxies = $.useSystemProxies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs $;

        public Builder() {
            $ = new FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs();
        }

        public Builder(FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs defaults) {
            $ = new FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ftpProxyHost (Updatable) Ftp host to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder ftpProxyHost(@Nullable Output<String> ftpProxyHost) {
            $.ftpProxyHost = ftpProxyHost;
            return this;
        }

        /**
         * @param ftpProxyHost (Updatable) Ftp host to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder ftpProxyHost(String ftpProxyHost) {
            return ftpProxyHost(Output.of(ftpProxyHost));
        }

        /**
         * @param ftpProxyPort (Updatable) Ftp port number to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder ftpProxyPort(@Nullable Output<Integer> ftpProxyPort) {
            $.ftpProxyPort = ftpProxyPort;
            return this;
        }

        /**
         * @param ftpProxyPort (Updatable) Ftp port number to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder ftpProxyPort(Integer ftpProxyPort) {
            return ftpProxyPort(Output.of(ftpProxyPort));
        }

        /**
         * @param httpProxyHost (Updatable) Http host to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder httpProxyHost(@Nullable Output<String> httpProxyHost) {
            $.httpProxyHost = httpProxyHost;
            return this;
        }

        /**
         * @param httpProxyHost (Updatable) Http host to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder httpProxyHost(String httpProxyHost) {
            return httpProxyHost(Output.of(httpProxyHost));
        }

        /**
         * @param httpProxyPort (Updatable) Http port number to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder httpProxyPort(@Nullable Output<Integer> httpProxyPort) {
            $.httpProxyPort = httpProxyPort;
            return this;
        }

        /**
         * @param httpProxyPort (Updatable) Http port number to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder httpProxyPort(Integer httpProxyPort) {
            return httpProxyPort(Output.of(httpProxyPort));
        }

        /**
         * @param httpsProxyHost (Updatable) Https host to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder httpsProxyHost(@Nullable Output<String> httpsProxyHost) {
            $.httpsProxyHost = httpsProxyHost;
            return this;
        }

        /**
         * @param httpsProxyHost (Updatable) Https host to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder httpsProxyHost(String httpsProxyHost) {
            return httpsProxyHost(Output.of(httpsProxyHost));
        }

        /**
         * @param httpsProxyPort (Updatable) Https port number to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder httpsProxyPort(@Nullable Output<Integer> httpsProxyPort) {
            $.httpsProxyPort = httpsProxyPort;
            return this;
        }

        /**
         * @param httpsProxyPort (Updatable) Https port number to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder httpsProxyPort(Integer httpsProxyPort) {
            return httpsProxyPort(Output.of(httpsProxyPort));
        }

        /**
         * @param socksProxyHost (Updatable) Socks host to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder socksProxyHost(@Nullable Output<String> socksProxyHost) {
            $.socksProxyHost = socksProxyHost;
            return this;
        }

        /**
         * @param socksProxyHost (Updatable) Socks host to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder socksProxyHost(String socksProxyHost) {
            return socksProxyHost(Output.of(socksProxyHost));
        }

        /**
         * @param socksProxyPort (Updatable) Socks port number to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder socksProxyPort(@Nullable Output<Integer> socksProxyPort) {
            $.socksProxyPort = socksProxyPort;
            return this;
        }

        /**
         * @param socksProxyPort (Updatable) Socks port number to be set in net.properties file.
         * 
         * @return builder
         * 
         */
        public Builder socksProxyPort(Integer socksProxyPort) {
            return socksProxyPort(Output.of(socksProxyPort));
        }

        /**
         * @param useSystemProxies (Updatable) Sets &#34;java.net.useSystemProxies=true&#34; in net.properties when they exist.
         * 
         * @return builder
         * 
         */
        public Builder useSystemProxies(@Nullable Output<Boolean> useSystemProxies) {
            $.useSystemProxies = useSystemProxies;
            return this;
        }

        /**
         * @param useSystemProxies (Updatable) Sets &#34;java.net.useSystemProxies=true&#34; in net.properties when they exist.
         * 
         * @return builder
         * 
         */
        public Builder useSystemProxies(Boolean useSystemProxies) {
            return useSystemProxies(Output.of(useSystemProxies));
        }

        public FleetAdvancedFeatureConfigurationLcmPostInstallationActionsProxiesArgs build() {
            return $;
        }
    }

}
