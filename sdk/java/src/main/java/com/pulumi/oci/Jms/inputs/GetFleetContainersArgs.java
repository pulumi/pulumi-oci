// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.inputs.GetFleetContainersFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFleetContainersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFleetContainersArgs Empty = new GetFleetContainersArgs();

    /**
     * The name of the application.
     * 
     */
    @Import(name="applicationName")
    private @Nullable Output<String> applicationName;

    /**
     * @return The name of the application.
     * 
     */
    public Optional<Output<String>> applicationName() {
        return Optional.ofNullable(this.applicationName);
    }

    /**
     * The display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetFleetContainersFilterArgs>> filters;

    public Optional<Output<List<GetFleetContainersFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     * 
     */
    @Import(name="fleetId", required=true)
    private Output<String> fleetId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     * 
     */
    public Output<String> fleetId() {
        return this.fleetId;
    }

    /**
     * The security status of the Java Runtime.
     * 
     */
    @Import(name="jreSecurityStatus")
    private @Nullable Output<String> jreSecurityStatus;

    /**
     * @return The security status of the Java Runtime.
     * 
     */
    public Optional<Output<String>> jreSecurityStatus() {
        return Optional.ofNullable(this.jreSecurityStatus);
    }

    /**
     * The version of the related Java Runtime.
     * 
     */
    @Import(name="jreVersion")
    private @Nullable Output<String> jreVersion;

    /**
     * @return The version of the related Java Runtime.
     * 
     */
    public Optional<Output<String>> jreVersion() {
        return Optional.ofNullable(this.jreVersion);
    }

    /**
     * The Fleet-unique identifier of the managed instance.
     * 
     */
    @Import(name="managedInstanceId")
    private @Nullable Output<String> managedInstanceId;

    /**
     * @return The Fleet-unique identifier of the managed instance.
     * 
     */
    public Optional<Output<String>> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }

    /**
     * If specified, only containers with a start time later than or equal to this parameter will be included in the response (formatted according to RFC3339).
     * 
     */
    @Import(name="timeStartedGreaterThanOrEqualTo")
    private @Nullable Output<String> timeStartedGreaterThanOrEqualTo;

    /**
     * @return If specified, only containers with a start time later than or equal to this parameter will be included in the response (formatted according to RFC3339).
     * 
     */
    public Optional<Output<String>> timeStartedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeStartedGreaterThanOrEqualTo);
    }

    /**
     * If specified, only containers with a start time earlier than or equal to this parameter will be included in the response (formatted according to RFC3339).
     * 
     */
    @Import(name="timeStartedLessThanOrEqualTo")
    private @Nullable Output<String> timeStartedLessThanOrEqualTo;

    /**
     * @return If specified, only containers with a start time earlier than or equal to this parameter will be included in the response (formatted according to RFC3339).
     * 
     */
    public Optional<Output<String>> timeStartedLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeStartedLessThanOrEqualTo);
    }

    private GetFleetContainersArgs() {}

    private GetFleetContainersArgs(GetFleetContainersArgs $) {
        this.applicationName = $.applicationName;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.fleetId = $.fleetId;
        this.jreSecurityStatus = $.jreSecurityStatus;
        this.jreVersion = $.jreVersion;
        this.managedInstanceId = $.managedInstanceId;
        this.timeStartedGreaterThanOrEqualTo = $.timeStartedGreaterThanOrEqualTo;
        this.timeStartedLessThanOrEqualTo = $.timeStartedLessThanOrEqualTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFleetContainersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFleetContainersArgs $;

        public Builder() {
            $ = new GetFleetContainersArgs();
        }

        public Builder(GetFleetContainersArgs defaults) {
            $ = new GetFleetContainersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationName The name of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationName(@Nullable Output<String> applicationName) {
            $.applicationName = applicationName;
            return this;
        }

        /**
         * @param applicationName The name of the application.
         * 
         * @return builder
         * 
         */
        public Builder applicationName(String applicationName) {
            return applicationName(Output.of(applicationName));
        }

        /**
         * @param displayName The display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetFleetContainersFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetFleetContainersFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetFleetContainersFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fleetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(Output<String> fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param fleetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            return fleetId(Output.of(fleetId));
        }

        /**
         * @param jreSecurityStatus The security status of the Java Runtime.
         * 
         * @return builder
         * 
         */
        public Builder jreSecurityStatus(@Nullable Output<String> jreSecurityStatus) {
            $.jreSecurityStatus = jreSecurityStatus;
            return this;
        }

        /**
         * @param jreSecurityStatus The security status of the Java Runtime.
         * 
         * @return builder
         * 
         */
        public Builder jreSecurityStatus(String jreSecurityStatus) {
            return jreSecurityStatus(Output.of(jreSecurityStatus));
        }

        /**
         * @param jreVersion The version of the related Java Runtime.
         * 
         * @return builder
         * 
         */
        public Builder jreVersion(@Nullable Output<String> jreVersion) {
            $.jreVersion = jreVersion;
            return this;
        }

        /**
         * @param jreVersion The version of the related Java Runtime.
         * 
         * @return builder
         * 
         */
        public Builder jreVersion(String jreVersion) {
            return jreVersion(Output.of(jreVersion));
        }

        /**
         * @param managedInstanceId The Fleet-unique identifier of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(@Nullable Output<String> managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        /**
         * @param managedInstanceId The Fleet-unique identifier of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            return managedInstanceId(Output.of(managedInstanceId));
        }

        /**
         * @param timeStartedGreaterThanOrEqualTo If specified, only containers with a start time later than or equal to this parameter will be included in the response (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeStartedGreaterThanOrEqualTo(@Nullable Output<String> timeStartedGreaterThanOrEqualTo) {
            $.timeStartedGreaterThanOrEqualTo = timeStartedGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeStartedGreaterThanOrEqualTo If specified, only containers with a start time later than or equal to this parameter will be included in the response (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeStartedGreaterThanOrEqualTo(String timeStartedGreaterThanOrEqualTo) {
            return timeStartedGreaterThanOrEqualTo(Output.of(timeStartedGreaterThanOrEqualTo));
        }

        /**
         * @param timeStartedLessThanOrEqualTo If specified, only containers with a start time earlier than or equal to this parameter will be included in the response (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeStartedLessThanOrEqualTo(@Nullable Output<String> timeStartedLessThanOrEqualTo) {
            $.timeStartedLessThanOrEqualTo = timeStartedLessThanOrEqualTo;
            return this;
        }

        /**
         * @param timeStartedLessThanOrEqualTo If specified, only containers with a start time earlier than or equal to this parameter will be included in the response (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeStartedLessThanOrEqualTo(String timeStartedLessThanOrEqualTo) {
            return timeStartedLessThanOrEqualTo(Output.of(timeStartedLessThanOrEqualTo));
        }

        public GetFleetContainersArgs build() {
            if ($.fleetId == null) {
                throw new MissingRequiredPropertyException("GetFleetContainersArgs", "fleetId");
            }
            return $;
        }
    }

}
