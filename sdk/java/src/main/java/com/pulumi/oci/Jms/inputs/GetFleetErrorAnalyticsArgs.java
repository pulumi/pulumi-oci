// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Jms.inputs.GetFleetErrorAnalyticsFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFleetErrorAnalyticsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFleetErrorAnalyticsArgs Empty = new GetFleetErrorAnalyticsArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Output<Boolean> compartmentIdInSubtree;

    /**
     * @return Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
     * 
     */
    public Optional<Output<Boolean>> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetFleetErrorAnalyticsFilterArgs>> filters;

    public Optional<Output<List<GetFleetErrorAnalyticsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetFleetErrorAnalyticsArgs() {}

    private GetFleetErrorAnalyticsArgs(GetFleetErrorAnalyticsArgs $) {
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFleetErrorAnalyticsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFleetErrorAnalyticsArgs $;

        public Builder() {
            $ = new GetFleetErrorAnalyticsArgs();
        }

        public Builder(GetFleetErrorAnalyticsArgs defaults) {
            $ = new GetFleetErrorAnalyticsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param compartmentIdInSubtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Output<Boolean> compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            return compartmentIdInSubtree(Output.of(compartmentIdInSubtree));
        }

        public Builder filters(@Nullable Output<List<GetFleetErrorAnalyticsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetFleetErrorAnalyticsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetFleetErrorAnalyticsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public GetFleetErrorAnalyticsArgs build() {
            return $;
        }
    }

}
