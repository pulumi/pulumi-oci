// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetJavaDownloadsJavaLicenseArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetJavaDownloadsJavaLicenseArgs Empty = new GetJavaDownloadsJavaLicenseArgs();

    /**
     * Unique Java license type.
     * 
     */
    @Import(name="licenseType", required=true)
    private Output<String> licenseType;

    /**
     * @return Unique Java license type.
     * 
     */
    public Output<String> licenseType() {
        return this.licenseType;
    }

    private GetJavaDownloadsJavaLicenseArgs() {}

    private GetJavaDownloadsJavaLicenseArgs(GetJavaDownloadsJavaLicenseArgs $) {
        this.licenseType = $.licenseType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJavaDownloadsJavaLicenseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJavaDownloadsJavaLicenseArgs $;

        public Builder() {
            $ = new GetJavaDownloadsJavaLicenseArgs();
        }

        public Builder(GetJavaDownloadsJavaLicenseArgs defaults) {
            $ = new GetJavaDownloadsJavaLicenseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param licenseType Unique Java license type.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType Unique Java license type.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        public GetJavaDownloadsJavaLicenseArgs build() {
            if ($.licenseType == null) {
                throw new MissingRequiredPropertyException("GetJavaDownloadsJavaLicenseArgs", "licenseType");
            }
            return $;
        }
    }

}
