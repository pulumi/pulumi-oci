// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Jms.inputs.GetJavaDownloadsJavaLicensesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetJavaDownloadsJavaLicensesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetJavaDownloadsJavaLicensesPlainArgs Empty = new GetJavaDownloadsJavaLicensesPlainArgs();

    /**
     * A filter to return only resources that match the display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetJavaDownloadsJavaLicensesFilter> filters;

    public Optional<List<GetJavaDownloadsJavaLicensesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Unique Java license type.
     * 
     */
    @Import(name="licenseType")
    private @Nullable String licenseType;

    /**
     * @return Unique Java license type.
     * 
     */
    public Optional<String> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }

    private GetJavaDownloadsJavaLicensesPlainArgs() {}

    private GetJavaDownloadsJavaLicensesPlainArgs(GetJavaDownloadsJavaLicensesPlainArgs $) {
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.licenseType = $.licenseType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJavaDownloadsJavaLicensesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJavaDownloadsJavaLicensesPlainArgs $;

        public Builder() {
            $ = new GetJavaDownloadsJavaLicensesPlainArgs();
        }

        public Builder(GetJavaDownloadsJavaLicensesPlainArgs defaults) {
            $ = new GetJavaDownloadsJavaLicensesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName A filter to return only resources that match the display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetJavaDownloadsJavaLicensesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetJavaDownloadsJavaLicensesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param licenseType Unique Java license type.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(@Nullable String licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        public GetJavaDownloadsJavaLicensesPlainArgs build() {
            return $;
        }
    }

}
