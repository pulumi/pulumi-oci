// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Jms.inputs.GetJavaFamiliesFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetJavaFamiliesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetJavaFamiliesArgs Empty = new GetJavaFamiliesArgs();

    /**
     * The display name for the Java family.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name for the Java family.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The version identifier for the Java family.
     * 
     */
    @Import(name="familyVersion")
    private @Nullable Output<String> familyVersion;

    /**
     * @return The version identifier for the Java family.
     * 
     */
    public Optional<Output<String>> familyVersion() {
        return Optional.ofNullable(this.familyVersion);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetJavaFamiliesFilterArgs>> filters;

    public Optional<Output<List<GetJavaFamiliesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Filter the Java Release Family versions by support status.
     * 
     */
    @Import(name="isSupportedVersion")
    private @Nullable Output<Boolean> isSupportedVersion;

    /**
     * @return Filter the Java Release Family versions by support status.
     * 
     */
    public Optional<Output<Boolean>> isSupportedVersion() {
        return Optional.ofNullable(this.isSupportedVersion);
    }

    private GetJavaFamiliesArgs() {}

    private GetJavaFamiliesArgs(GetJavaFamiliesArgs $) {
        this.displayName = $.displayName;
        this.familyVersion = $.familyVersion;
        this.filters = $.filters;
        this.isSupportedVersion = $.isSupportedVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJavaFamiliesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJavaFamiliesArgs $;

        public Builder() {
            $ = new GetJavaFamiliesArgs();
        }

        public Builder(GetJavaFamiliesArgs defaults) {
            $ = new GetJavaFamiliesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName The display name for the Java family.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name for the Java family.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param familyVersion The version identifier for the Java family.
         * 
         * @return builder
         * 
         */
        public Builder familyVersion(@Nullable Output<String> familyVersion) {
            $.familyVersion = familyVersion;
            return this;
        }

        /**
         * @param familyVersion The version identifier for the Java family.
         * 
         * @return builder
         * 
         */
        public Builder familyVersion(String familyVersion) {
            return familyVersion(Output.of(familyVersion));
        }

        public Builder filters(@Nullable Output<List<GetJavaFamiliesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetJavaFamiliesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetJavaFamiliesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isSupportedVersion Filter the Java Release Family versions by support status.
         * 
         * @return builder
         * 
         */
        public Builder isSupportedVersion(@Nullable Output<Boolean> isSupportedVersion) {
            $.isSupportedVersion = isSupportedVersion;
            return this;
        }

        /**
         * @param isSupportedVersion Filter the Java Release Family versions by support status.
         * 
         * @return builder
         * 
         */
        public Builder isSupportedVersion(Boolean isSupportedVersion) {
            return isSupportedVersion(Output.of(isSupportedVersion));
        }

        public GetJavaFamiliesArgs build() {
            return $;
        }
    }

}
