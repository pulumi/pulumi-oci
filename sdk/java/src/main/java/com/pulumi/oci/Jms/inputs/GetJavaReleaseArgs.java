// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetJavaReleaseArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetJavaReleaseArgs Empty = new GetJavaReleaseArgs();

    /**
     * Unique Java release version identifier
     * 
     */
    @Import(name="releaseVersion", required=true)
    private Output<String> releaseVersion;

    /**
     * @return Unique Java release version identifier
     * 
     */
    public Output<String> releaseVersion() {
        return this.releaseVersion;
    }

    private GetJavaReleaseArgs() {}

    private GetJavaReleaseArgs(GetJavaReleaseArgs $) {
        this.releaseVersion = $.releaseVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJavaReleaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJavaReleaseArgs $;

        public Builder() {
            $ = new GetJavaReleaseArgs();
        }

        public Builder(GetJavaReleaseArgs defaults) {
            $ = new GetJavaReleaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param releaseVersion Unique Java release version identifier
         * 
         * @return builder
         * 
         */
        public Builder releaseVersion(Output<String> releaseVersion) {
            $.releaseVersion = releaseVersion;
            return this;
        }

        /**
         * @param releaseVersion Unique Java release version identifier
         * 
         * @return builder
         * 
         */
        public Builder releaseVersion(String releaseVersion) {
            return releaseVersion(Output.of(releaseVersion));
        }

        public GetJavaReleaseArgs build() {
            if ($.releaseVersion == null) {
                throw new MissingRequiredPropertyException("GetJavaReleaseArgs", "releaseVersion");
            }
            return $;
        }
    }

}
