// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Jms.inputs.GetJavaReleasesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetJavaReleasesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetJavaReleasesArgs Empty = new GetJavaReleasesArgs();

    /**
     * The version identifier for the Java family.
     * 
     */
    @Import(name="familyVersion")
    private @Nullable Output<String> familyVersion;

    /**
     * @return The version identifier for the Java family.
     * 
     */
    public Optional<Output<String>> familyVersion() {
        return Optional.ofNullable(this.familyVersion);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetJavaReleasesFilterArgs>> filters;

    public Optional<Output<List<GetJavaReleasesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The security status of the Java Runtime.
     * 
     */
    @Import(name="jreSecurityStatus")
    private @Nullable Output<String> jreSecurityStatus;

    /**
     * @return The security status of the Java Runtime.
     * 
     */
    public Optional<Output<String>> jreSecurityStatus() {
        return Optional.ofNullable(this.jreSecurityStatus);
    }

    /**
     * Java license type.
     * 
     */
    @Import(name="licenseType")
    private @Nullable Output<String> licenseType;

    /**
     * @return Java license type.
     * 
     */
    public Optional<Output<String>> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }

    /**
     * Java release type.
     * 
     */
    @Import(name="releaseType")
    private @Nullable Output<String> releaseType;

    /**
     * @return Java release type.
     * 
     */
    public Optional<Output<String>> releaseType() {
        return Optional.ofNullable(this.releaseType);
    }

    /**
     * Unique Java release version identifier
     * 
     */
    @Import(name="releaseVersion")
    private @Nullable Output<String> releaseVersion;

    /**
     * @return Unique Java release version identifier
     * 
     */
    public Optional<Output<String>> releaseVersion() {
        return Optional.ofNullable(this.releaseVersion);
    }

    private GetJavaReleasesArgs() {}

    private GetJavaReleasesArgs(GetJavaReleasesArgs $) {
        this.familyVersion = $.familyVersion;
        this.filters = $.filters;
        this.jreSecurityStatus = $.jreSecurityStatus;
        this.licenseType = $.licenseType;
        this.releaseType = $.releaseType;
        this.releaseVersion = $.releaseVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJavaReleasesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJavaReleasesArgs $;

        public Builder() {
            $ = new GetJavaReleasesArgs();
        }

        public Builder(GetJavaReleasesArgs defaults) {
            $ = new GetJavaReleasesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param familyVersion The version identifier for the Java family.
         * 
         * @return builder
         * 
         */
        public Builder familyVersion(@Nullable Output<String> familyVersion) {
            $.familyVersion = familyVersion;
            return this;
        }

        /**
         * @param familyVersion The version identifier for the Java family.
         * 
         * @return builder
         * 
         */
        public Builder familyVersion(String familyVersion) {
            return familyVersion(Output.of(familyVersion));
        }

        public Builder filters(@Nullable Output<List<GetJavaReleasesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetJavaReleasesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetJavaReleasesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param jreSecurityStatus The security status of the Java Runtime.
         * 
         * @return builder
         * 
         */
        public Builder jreSecurityStatus(@Nullable Output<String> jreSecurityStatus) {
            $.jreSecurityStatus = jreSecurityStatus;
            return this;
        }

        /**
         * @param jreSecurityStatus The security status of the Java Runtime.
         * 
         * @return builder
         * 
         */
        public Builder jreSecurityStatus(String jreSecurityStatus) {
            return jreSecurityStatus(Output.of(jreSecurityStatus));
        }

        /**
         * @param licenseType Java license type.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(@Nullable Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType Java license type.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        /**
         * @param releaseType Java release type.
         * 
         * @return builder
         * 
         */
        public Builder releaseType(@Nullable Output<String> releaseType) {
            $.releaseType = releaseType;
            return this;
        }

        /**
         * @param releaseType Java release type.
         * 
         * @return builder
         * 
         */
        public Builder releaseType(String releaseType) {
            return releaseType(Output.of(releaseType));
        }

        /**
         * @param releaseVersion Unique Java release version identifier
         * 
         * @return builder
         * 
         */
        public Builder releaseVersion(@Nullable Output<String> releaseVersion) {
            $.releaseVersion = releaseVersion;
            return this;
        }

        /**
         * @param releaseVersion Unique Java release version identifier
         * 
         * @return builder
         * 
         */
        public Builder releaseVersion(String releaseVersion) {
            return releaseVersion(Output.of(releaseVersion));
        }

        public GetJavaReleasesArgs build() {
            return $;
        }
    }

}
