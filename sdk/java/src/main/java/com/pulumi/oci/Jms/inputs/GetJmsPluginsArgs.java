// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Jms.inputs.GetJmsPluginsFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetJmsPluginsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetJmsPluginsArgs Empty = new GetJmsPluginsArgs();

    /**
     * The ManagementAgent (OMA) or Instance (OCA) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that identifies the Agent.
     * 
     */
    @Import(name="agentId")
    private @Nullable Output<String> agentId;

    /**
     * @return The ManagementAgent (OMA) or Instance (OCA) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that identifies the Agent.
     * 
     */
    public Optional<Output<String>> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    /**
     * Filter JmsPlugin with agent type.
     * 
     */
    @Import(name="agentType")
    private @Nullable Output<String> agentType;

    /**
     * @return Filter JmsPlugin with agent type.
     * 
     */
    public Optional<Output<String>> agentType() {
        return Optional.ofNullable(this.agentType);
    }

    /**
     * Filter JmsPlugin with its availability status.
     * 
     */
    @Import(name="availabilityStatus")
    private @Nullable Output<String> availabilityStatus;

    /**
     * @return Filter JmsPlugin with its availability status.
     * 
     */
    public Optional<Output<String>> availabilityStatus() {
        return Optional.ofNullable(this.availabilityStatus);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Output<Boolean> compartmentIdInSubtree;

    /**
     * @return Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
     * 
     */
    public Optional<Output<Boolean>> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetJmsPluginsFilterArgs>> filters;

    public Optional<Output<List<GetJmsPluginsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The ID of the Fleet.
     * 
     */
    @Import(name="fleetId")
    private @Nullable Output<String> fleetId;

    /**
     * @return The ID of the Fleet.
     * 
     */
    public Optional<Output<String>> fleetId() {
        return Optional.ofNullable(this.fleetId);
    }

    /**
     * Filter the list with hostname contains the given value.
     * 
     */
    @Import(name="hostnameContains")
    private @Nullable Output<String> hostnameContains;

    /**
     * @return Filter the list with hostname contains the given value.
     * 
     */
    public Optional<Output<String>> hostnameContains() {
        return Optional.ofNullable(this.hostnameContains);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Filter JmsPlugin with its lifecycle state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Filter JmsPlugin with its lifecycle state.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * If present, only plugins with a last seen time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Import(name="timeLastSeenLessThanOrEqualTo")
    private @Nullable Output<String> timeLastSeenLessThanOrEqualTo;

    /**
     * @return If present, only plugins with a last seen time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Optional<Output<String>> timeLastSeenLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeLastSeenLessThanOrEqualTo);
    }

    /**
     * If present, only plugins with a registration time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Import(name="timeRegisteredLessThanOrEqualTo")
    private @Nullable Output<String> timeRegisteredLessThanOrEqualTo;

    /**
     * @return If present, only plugins with a registration time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Optional<Output<String>> timeRegisteredLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeRegisteredLessThanOrEqualTo);
    }

    private GetJmsPluginsArgs() {}

    private GetJmsPluginsArgs(GetJmsPluginsArgs $) {
        this.agentId = $.agentId;
        this.agentType = $.agentType;
        this.availabilityStatus = $.availabilityStatus;
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.filters = $.filters;
        this.fleetId = $.fleetId;
        this.hostnameContains = $.hostnameContains;
        this.id = $.id;
        this.state = $.state;
        this.timeLastSeenLessThanOrEqualTo = $.timeLastSeenLessThanOrEqualTo;
        this.timeRegisteredLessThanOrEqualTo = $.timeRegisteredLessThanOrEqualTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJmsPluginsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJmsPluginsArgs $;

        public Builder() {
            $ = new GetJmsPluginsArgs();
        }

        public Builder(GetJmsPluginsArgs defaults) {
            $ = new GetJmsPluginsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentId The ManagementAgent (OMA) or Instance (OCA) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that identifies the Agent.
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId The ManagementAgent (OMA) or Instance (OCA) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that identifies the Agent.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param agentType Filter JmsPlugin with agent type.
         * 
         * @return builder
         * 
         */
        public Builder agentType(@Nullable Output<String> agentType) {
            $.agentType = agentType;
            return this;
        }

        /**
         * @param agentType Filter JmsPlugin with agent type.
         * 
         * @return builder
         * 
         */
        public Builder agentType(String agentType) {
            return agentType(Output.of(agentType));
        }

        /**
         * @param availabilityStatus Filter JmsPlugin with its availability status.
         * 
         * @return builder
         * 
         */
        public Builder availabilityStatus(@Nullable Output<String> availabilityStatus) {
            $.availabilityStatus = availabilityStatus;
            return this;
        }

        /**
         * @param availabilityStatus Filter JmsPlugin with its availability status.
         * 
         * @return builder
         * 
         */
        public Builder availabilityStatus(String availabilityStatus) {
            return availabilityStatus(Output.of(availabilityStatus));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param compartmentIdInSubtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Output<Boolean> compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            return compartmentIdInSubtree(Output.of(compartmentIdInSubtree));
        }

        public Builder filters(@Nullable Output<List<GetJmsPluginsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetJmsPluginsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetJmsPluginsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fleetId The ID of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(@Nullable Output<String> fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param fleetId The ID of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            return fleetId(Output.of(fleetId));
        }

        /**
         * @param hostnameContains Filter the list with hostname contains the given value.
         * 
         * @return builder
         * 
         */
        public Builder hostnameContains(@Nullable Output<String> hostnameContains) {
            $.hostnameContains = hostnameContains;
            return this;
        }

        /**
         * @param hostnameContains Filter the list with hostname contains the given value.
         * 
         * @return builder
         * 
         */
        public Builder hostnameContains(String hostnameContains) {
            return hostnameContains(Output.of(hostnameContains));
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param state Filter JmsPlugin with its lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Filter JmsPlugin with its lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeLastSeenLessThanOrEqualTo If present, only plugins with a last seen time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         * 
         * @return builder
         * 
         */
        public Builder timeLastSeenLessThanOrEqualTo(@Nullable Output<String> timeLastSeenLessThanOrEqualTo) {
            $.timeLastSeenLessThanOrEqualTo = timeLastSeenLessThanOrEqualTo;
            return this;
        }

        /**
         * @param timeLastSeenLessThanOrEqualTo If present, only plugins with a last seen time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         * 
         * @return builder
         * 
         */
        public Builder timeLastSeenLessThanOrEqualTo(String timeLastSeenLessThanOrEqualTo) {
            return timeLastSeenLessThanOrEqualTo(Output.of(timeLastSeenLessThanOrEqualTo));
        }

        /**
         * @param timeRegisteredLessThanOrEqualTo If present, only plugins with a registration time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         * 
         * @return builder
         * 
         */
        public Builder timeRegisteredLessThanOrEqualTo(@Nullable Output<String> timeRegisteredLessThanOrEqualTo) {
            $.timeRegisteredLessThanOrEqualTo = timeRegisteredLessThanOrEqualTo;
            return this;
        }

        /**
         * @param timeRegisteredLessThanOrEqualTo If present, only plugins with a registration time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         * 
         * @return builder
         * 
         */
        public Builder timeRegisteredLessThanOrEqualTo(String timeRegisteredLessThanOrEqualTo) {
            return timeRegisteredLessThanOrEqualTo(Output.of(timeRegisteredLessThanOrEqualTo));
        }

        public GetJmsPluginsArgs build() {
            return $;
        }
    }

}
