// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Jms.inputs.GetJmsPluginsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetJmsPluginsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetJmsPluginsPlainArgs Empty = new GetJmsPluginsPlainArgs();

    /**
     * The ManagementAgent (OMA) or Instance (OCA) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that identifies the Agent.
     * 
     */
    @Import(name="agentId")
    private @Nullable String agentId;

    /**
     * @return The ManagementAgent (OMA) or Instance (OCA) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that identifies the Agent.
     * 
     */
    public Optional<String> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    /**
     * Filter JmsPlugin with agent type.
     * 
     */
    @Import(name="agentType")
    private @Nullable String agentType;

    /**
     * @return Filter JmsPlugin with agent type.
     * 
     */
    public Optional<String> agentType() {
        return Optional.ofNullable(this.agentType);
    }

    /**
     * Filter JmsPlugin with its availability status.
     * 
     */
    @Import(name="availabilityStatus")
    private @Nullable String availabilityStatus;

    /**
     * @return Filter JmsPlugin with its availability status.
     * 
     */
    public Optional<String> availabilityStatus() {
        return Optional.ofNullable(this.availabilityStatus);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Boolean compartmentIdInSubtree;

    /**
     * @return Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
     * 
     */
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    @Import(name="filters")
    private @Nullable List<GetJmsPluginsFilter> filters;

    public Optional<List<GetJmsPluginsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The ID of the Fleet.
     * 
     */
    @Import(name="fleetId")
    private @Nullable String fleetId;

    /**
     * @return The ID of the Fleet.
     * 
     */
    public Optional<String> fleetId() {
        return Optional.ofNullable(this.fleetId);
    }

    /**
     * Filter the list with hostname contains the given value.
     * 
     */
    @Import(name="hostnameContains")
    private @Nullable String hostnameContains;

    /**
     * @return Filter the list with hostname contains the given value.
     * 
     */
    public Optional<String> hostnameContains() {
        return Optional.ofNullable(this.hostnameContains);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Filter JmsPlugin with its lifecycle state.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return Filter JmsPlugin with its lifecycle state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * If present, only plugins with a last seen time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Import(name="timeLastSeenLessThanOrEqualTo")
    private @Nullable String timeLastSeenLessThanOrEqualTo;

    /**
     * @return If present, only plugins with a last seen time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Optional<String> timeLastSeenLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeLastSeenLessThanOrEqualTo);
    }

    /**
     * If present, only plugins with a registration time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    @Import(name="timeRegisteredLessThanOrEqualTo")
    private @Nullable String timeRegisteredLessThanOrEqualTo;

    /**
     * @return If present, only plugins with a registration time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public Optional<String> timeRegisteredLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeRegisteredLessThanOrEqualTo);
    }

    private GetJmsPluginsPlainArgs() {}

    private GetJmsPluginsPlainArgs(GetJmsPluginsPlainArgs $) {
        this.agentId = $.agentId;
        this.agentType = $.agentType;
        this.availabilityStatus = $.availabilityStatus;
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.filters = $.filters;
        this.fleetId = $.fleetId;
        this.hostnameContains = $.hostnameContains;
        this.id = $.id;
        this.state = $.state;
        this.timeLastSeenLessThanOrEqualTo = $.timeLastSeenLessThanOrEqualTo;
        this.timeRegisteredLessThanOrEqualTo = $.timeRegisteredLessThanOrEqualTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJmsPluginsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJmsPluginsPlainArgs $;

        public Builder() {
            $ = new GetJmsPluginsPlainArgs();
        }

        public Builder(GetJmsPluginsPlainArgs defaults) {
            $ = new GetJmsPluginsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentId The ManagementAgent (OMA) or Instance (OCA) [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) that identifies the Agent.
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable String agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentType Filter JmsPlugin with agent type.
         * 
         * @return builder
         * 
         */
        public Builder agentType(@Nullable String agentType) {
            $.agentType = agentType;
            return this;
        }

        /**
         * @param availabilityStatus Filter JmsPlugin with its availability status.
         * 
         * @return builder
         * 
         */
        public Builder availabilityStatus(@Nullable String availabilityStatus) {
            $.availabilityStatus = availabilityStatus;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        public Builder filters(@Nullable List<GetJmsPluginsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetJmsPluginsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fleetId The ID of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(@Nullable String fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param hostnameContains Filter the list with hostname contains the given value.
         * 
         * @return builder
         * 
         */
        public Builder hostnameContains(@Nullable String hostnameContains) {
            $.hostnameContains = hostnameContains;
            return this;
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the JmsPlugin.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param state Filter JmsPlugin with its lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param timeLastSeenLessThanOrEqualTo If present, only plugins with a last seen time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         * 
         * @return builder
         * 
         */
        public Builder timeLastSeenLessThanOrEqualTo(@Nullable String timeLastSeenLessThanOrEqualTo) {
            $.timeLastSeenLessThanOrEqualTo = timeLastSeenLessThanOrEqualTo;
            return this;
        }

        /**
         * @param timeRegisteredLessThanOrEqualTo If present, only plugins with a registration time before this parameter are searched (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
         * 
         * @return builder
         * 
         */
        public Builder timeRegisteredLessThanOrEqualTo(@Nullable String timeRegisteredLessThanOrEqualTo) {
            $.timeRegisteredLessThanOrEqualTo = timeRegisteredLessThanOrEqualTo;
            return this;
        }

        public GetJmsPluginsPlainArgs build() {
            return $;
        }
    }

}
