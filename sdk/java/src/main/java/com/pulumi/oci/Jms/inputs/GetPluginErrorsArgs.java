// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Jms.inputs.GetPluginErrorsFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPluginErrorsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPluginErrorsArgs Empty = new GetPluginErrorsArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Output<Boolean> compartmentIdInSubtree;

    /**
     * @return Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
     * 
     */
    public Optional<Output<Boolean>> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetPluginErrorsFilterArgs>> filters;

    public Optional<Output<List<GetPluginErrorsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The Fleet-unique identifier of the managed instance.
     * 
     */
    @Import(name="managedInstanceId")
    private @Nullable Output<String> managedInstanceId;

    /**
     * @return The Fleet-unique identifier of the managed instance.
     * 
     */
    public Optional<Output<String>> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }

    /**
     * If specified, only errors with a first seen time later than this parameter will be included in the search (formatted according to RFC3339).
     * 
     */
    @Import(name="timeFirstSeenGreaterThanOrEqualTo")
    private @Nullable Output<String> timeFirstSeenGreaterThanOrEqualTo;

    /**
     * @return If specified, only errors with a first seen time later than this parameter will be included in the search (formatted according to RFC3339).
     * 
     */
    public Optional<Output<String>> timeFirstSeenGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeFirstSeenGreaterThanOrEqualTo);
    }

    /**
     * If specified, only errors with a first seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
     * 
     */
    @Import(name="timeFirstSeenLessThanOrEqualTo")
    private @Nullable Output<String> timeFirstSeenLessThanOrEqualTo;

    /**
     * @return If specified, only errors with a first seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
     * 
     */
    public Optional<Output<String>> timeFirstSeenLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeFirstSeenLessThanOrEqualTo);
    }

    /**
     * If specified, only errors with a last seen time later than this parameter will be included in the search (formatted according to RFC3339).
     * 
     */
    @Import(name="timeLastSeenGreaterThanOrEqualTo")
    private @Nullable Output<String> timeLastSeenGreaterThanOrEqualTo;

    /**
     * @return If specified, only errors with a last seen time later than this parameter will be included in the search (formatted according to RFC3339).
     * 
     */
    public Optional<Output<String>> timeLastSeenGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeLastSeenGreaterThanOrEqualTo);
    }

    /**
     * If specified, only errors with a last seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
     * 
     */
    @Import(name="timeLastSeenLessThanOrEqualTo")
    private @Nullable Output<String> timeLastSeenLessThanOrEqualTo;

    /**
     * @return If specified, only errors with a last seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
     * 
     */
    public Optional<Output<String>> timeLastSeenLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeLastSeenLessThanOrEqualTo);
    }

    private GetPluginErrorsArgs() {}

    private GetPluginErrorsArgs(GetPluginErrorsArgs $) {
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.filters = $.filters;
        this.managedInstanceId = $.managedInstanceId;
        this.timeFirstSeenGreaterThanOrEqualTo = $.timeFirstSeenGreaterThanOrEqualTo;
        this.timeFirstSeenLessThanOrEqualTo = $.timeFirstSeenLessThanOrEqualTo;
        this.timeLastSeenGreaterThanOrEqualTo = $.timeLastSeenGreaterThanOrEqualTo;
        this.timeLastSeenLessThanOrEqualTo = $.timeLastSeenLessThanOrEqualTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPluginErrorsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPluginErrorsArgs $;

        public Builder() {
            $ = new GetPluginErrorsArgs();
        }

        public Builder(GetPluginErrorsArgs defaults) {
            $ = new GetPluginErrorsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param compartmentIdInSubtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Output<Boolean> compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Flag to determine whether the info should be gathered only in the compartment or in the compartment and its subcompartments.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            return compartmentIdInSubtree(Output.of(compartmentIdInSubtree));
        }

        public Builder filters(@Nullable Output<List<GetPluginErrorsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetPluginErrorsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetPluginErrorsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managedInstanceId The Fleet-unique identifier of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(@Nullable Output<String> managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        /**
         * @param managedInstanceId The Fleet-unique identifier of the managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            return managedInstanceId(Output.of(managedInstanceId));
        }

        /**
         * @param timeFirstSeenGreaterThanOrEqualTo If specified, only errors with a first seen time later than this parameter will be included in the search (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeFirstSeenGreaterThanOrEqualTo(@Nullable Output<String> timeFirstSeenGreaterThanOrEqualTo) {
            $.timeFirstSeenGreaterThanOrEqualTo = timeFirstSeenGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeFirstSeenGreaterThanOrEqualTo If specified, only errors with a first seen time later than this parameter will be included in the search (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeFirstSeenGreaterThanOrEqualTo(String timeFirstSeenGreaterThanOrEqualTo) {
            return timeFirstSeenGreaterThanOrEqualTo(Output.of(timeFirstSeenGreaterThanOrEqualTo));
        }

        /**
         * @param timeFirstSeenLessThanOrEqualTo If specified, only errors with a first seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeFirstSeenLessThanOrEqualTo(@Nullable Output<String> timeFirstSeenLessThanOrEqualTo) {
            $.timeFirstSeenLessThanOrEqualTo = timeFirstSeenLessThanOrEqualTo;
            return this;
        }

        /**
         * @param timeFirstSeenLessThanOrEqualTo If specified, only errors with a first seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeFirstSeenLessThanOrEqualTo(String timeFirstSeenLessThanOrEqualTo) {
            return timeFirstSeenLessThanOrEqualTo(Output.of(timeFirstSeenLessThanOrEqualTo));
        }

        /**
         * @param timeLastSeenGreaterThanOrEqualTo If specified, only errors with a last seen time later than this parameter will be included in the search (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeLastSeenGreaterThanOrEqualTo(@Nullable Output<String> timeLastSeenGreaterThanOrEqualTo) {
            $.timeLastSeenGreaterThanOrEqualTo = timeLastSeenGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeLastSeenGreaterThanOrEqualTo If specified, only errors with a last seen time later than this parameter will be included in the search (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeLastSeenGreaterThanOrEqualTo(String timeLastSeenGreaterThanOrEqualTo) {
            return timeLastSeenGreaterThanOrEqualTo(Output.of(timeLastSeenGreaterThanOrEqualTo));
        }

        /**
         * @param timeLastSeenLessThanOrEqualTo If specified, only errors with a last seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeLastSeenLessThanOrEqualTo(@Nullable Output<String> timeLastSeenLessThanOrEqualTo) {
            $.timeLastSeenLessThanOrEqualTo = timeLastSeenLessThanOrEqualTo;
            return this;
        }

        /**
         * @param timeLastSeenLessThanOrEqualTo If specified, only errors with a last seen time earlier than this parameter will be included in the search (formatted according to RFC3339).
         * 
         * @return builder
         * 
         */
        public Builder timeLastSeenLessThanOrEqualTo(String timeLastSeenLessThanOrEqualTo) {
            return timeLastSeenLessThanOrEqualTo(Output.of(timeLastSeenLessThanOrEqualTo));
        }

        public GetPluginErrorsArgs build() {
            return $;
        }
    }

}
