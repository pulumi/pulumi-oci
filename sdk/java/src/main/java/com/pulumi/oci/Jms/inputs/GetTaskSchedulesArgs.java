// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.inputs.GetTaskSchedulesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTaskSchedulesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTaskSchedulesArgs Empty = new GetTaskSchedulesArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetTaskSchedulesFilterArgs>> filters;

    public Optional<Output<List<GetTaskSchedulesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The ID of the Fleet.
     * 
     */
    @Import(name="fleetId", required=true)
    private Output<String> fleetId;

    /**
     * @return The ID of the Fleet.
     * 
     */
    public Output<String> fleetId() {
        return this.fleetId;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The Fleet-unique identifier of the related managed instance.
     * 
     */
    @Import(name="managedInstanceId")
    private @Nullable Output<String> managedInstanceId;

    /**
     * @return The Fleet-unique identifier of the related managed instance.
     * 
     */
    public Optional<Output<String>> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }

    /**
     * The task name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The task name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Filter the list with task schedule name contains the given value.
     * 
     */
    @Import(name="taskScheduleNameContains")
    private @Nullable Output<String> taskScheduleNameContains;

    /**
     * @return Filter the list with task schedule name contains the given value.
     * 
     */
    public Optional<Output<String>> taskScheduleNameContains() {
        return Optional.ofNullable(this.taskScheduleNameContains);
    }

    private GetTaskSchedulesArgs() {}

    private GetTaskSchedulesArgs(GetTaskSchedulesArgs $) {
        this.filters = $.filters;
        this.fleetId = $.fleetId;
        this.id = $.id;
        this.managedInstanceId = $.managedInstanceId;
        this.name = $.name;
        this.taskScheduleNameContains = $.taskScheduleNameContains;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTaskSchedulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTaskSchedulesArgs $;

        public Builder() {
            $ = new GetTaskSchedulesArgs();
        }

        public Builder(GetTaskSchedulesArgs defaults) {
            $ = new GetTaskSchedulesArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetTaskSchedulesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetTaskSchedulesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetTaskSchedulesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param fleetId The ID of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(Output<String> fleetId) {
            $.fleetId = fleetId;
            return this;
        }

        /**
         * @param fleetId The ID of the Fleet.
         * 
         * @return builder
         * 
         */
        public Builder fleetId(String fleetId) {
            return fleetId(Output.of(fleetId));
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this task schedule.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param managedInstanceId The Fleet-unique identifier of the related managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(@Nullable Output<String> managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        /**
         * @param managedInstanceId The Fleet-unique identifier of the related managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            return managedInstanceId(Output.of(managedInstanceId));
        }

        /**
         * @param name The task name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The task name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param taskScheduleNameContains Filter the list with task schedule name contains the given value.
         * 
         * @return builder
         * 
         */
        public Builder taskScheduleNameContains(@Nullable Output<String> taskScheduleNameContains) {
            $.taskScheduleNameContains = taskScheduleNameContains;
            return this;
        }

        /**
         * @param taskScheduleNameContains Filter the list with task schedule name contains the given value.
         * 
         * @return builder
         * 
         */
        public Builder taskScheduleNameContains(String taskScheduleNameContains) {
            return taskScheduleNameContains(Output.of(taskScheduleNameContains));
        }

        public GetTaskSchedulesArgs build() {
            if ($.fleetId == null) {
                throw new MissingRequiredPropertyException("GetTaskSchedulesArgs", "fleetId");
            }
            return $;
        }
    }

}
