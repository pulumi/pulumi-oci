// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs Empty = new TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs();

    /**
     * (Updatable) Artifact content type for the Java version.
     * 
     */
    @Import(name="artifactContentType")
    private @Nullable Output<String> artifactContentType;

    /**
     * @return (Updatable) Artifact content type for the Java version.
     * 
     */
    public Optional<Output<String>> artifactContentType() {
        return Optional.ofNullable(this.artifactContentType);
    }

    /**
     * (Updatable) Forces the installation request even if a more recent release is already present in the host.
     * 
     */
    @Import(name="forceInstall")
    private @Nullable Output<Boolean> forceInstall;

    /**
     * @return (Updatable) Forces the installation request even if a more recent release is already present in the host.
     * 
     */
    public Optional<Output<Boolean>> forceInstall() {
        return Optional.ofNullable(this.forceInstall);
    }

    /**
     * (Updatable) Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
     * 
     */
    @Import(name="headlessMode")
    private @Nullable Output<Boolean> headlessMode;

    /**
     * @return (Updatable) Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
     * 
     */
    public Optional<Output<Boolean>> headlessMode() {
        return Optional.ofNullable(this.headlessMode);
    }

    /**
     * (Updatable) Custom path to install new Java installation site.
     * 
     */
    @Import(name="installationPath")
    private @Nullable Output<String> installationPath;

    /**
     * @return (Updatable) Custom path to install new Java installation site.
     * 
     */
    public Optional<Output<String>> installationPath() {
        return Optional.ofNullable(this.installationPath);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
     * 
     */
    @Import(name="managedInstanceId")
    private @Nullable Output<String> managedInstanceId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
     * 
     */
    public Optional<Output<String>> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }

    /**
     * (Updatable) The release version of the Java Runtime.
     * 
     */
    @Import(name="releaseVersion")
    private @Nullable Output<String> releaseVersion;

    /**
     * @return (Updatable) The release version of the Java Runtime.
     * 
     */
    public Optional<Output<String>> releaseVersion() {
        return Optional.ofNullable(this.releaseVersion);
    }

    private TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs() {}

    private TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs(TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs $) {
        this.artifactContentType = $.artifactContentType;
        this.forceInstall = $.forceInstall;
        this.headlessMode = $.headlessMode;
        this.installationPath = $.installationPath;
        this.managedInstanceId = $.managedInstanceId;
        this.releaseVersion = $.releaseVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs $;

        public Builder() {
            $ = new TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs();
        }

        public Builder(TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs defaults) {
            $ = new TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param artifactContentType (Updatable) Artifact content type for the Java version.
         * 
         * @return builder
         * 
         */
        public Builder artifactContentType(@Nullable Output<String> artifactContentType) {
            $.artifactContentType = artifactContentType;
            return this;
        }

        /**
         * @param artifactContentType (Updatable) Artifact content type for the Java version.
         * 
         * @return builder
         * 
         */
        public Builder artifactContentType(String artifactContentType) {
            return artifactContentType(Output.of(artifactContentType));
        }

        /**
         * @param forceInstall (Updatable) Forces the installation request even if a more recent release is already present in the host.
         * 
         * @return builder
         * 
         */
        public Builder forceInstall(@Nullable Output<Boolean> forceInstall) {
            $.forceInstall = forceInstall;
            return this;
        }

        /**
         * @param forceInstall (Updatable) Forces the installation request even if a more recent release is already present in the host.
         * 
         * @return builder
         * 
         */
        public Builder forceInstall(Boolean forceInstall) {
            return forceInstall(Output.of(forceInstall));
        }

        /**
         * @param headlessMode (Updatable) Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
         * 
         * @return builder
         * 
         */
        public Builder headlessMode(@Nullable Output<Boolean> headlessMode) {
            $.headlessMode = headlessMode;
            return this;
        }

        /**
         * @param headlessMode (Updatable) Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
         * 
         * @return builder
         * 
         */
        public Builder headlessMode(Boolean headlessMode) {
            return headlessMode(Output.of(headlessMode));
        }

        /**
         * @param installationPath (Updatable) Custom path to install new Java installation site.
         * 
         * @return builder
         * 
         */
        public Builder installationPath(@Nullable Output<String> installationPath) {
            $.installationPath = installationPath;
            return this;
        }

        /**
         * @param installationPath (Updatable) Custom path to install new Java installation site.
         * 
         * @return builder
         * 
         */
        public Builder installationPath(String installationPath) {
            return installationPath(Output.of(installationPath));
        }

        /**
         * @param managedInstanceId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(@Nullable Output<String> managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        /**
         * @param managedInstanceId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            return managedInstanceId(Output.of(managedInstanceId));
        }

        /**
         * @param releaseVersion (Updatable) The release version of the Java Runtime.
         * 
         * @return builder
         * 
         */
        public Builder releaseVersion(@Nullable Output<String> releaseVersion) {
            $.releaseVersion = releaseVersion;
            return this;
        }

        /**
         * @param releaseVersion (Updatable) The release version of the Java Runtime.
         * 
         * @return builder
         * 
         */
        public Builder releaseVersion(String releaseVersion) {
            return releaseVersion(Output.of(releaseVersion));
        }

        public TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSiteArgs build() {
            return $;
        }
    }

}
