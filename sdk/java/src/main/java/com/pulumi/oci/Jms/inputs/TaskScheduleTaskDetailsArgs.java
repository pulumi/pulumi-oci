// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsAddInstallationSiteTaskRequestArgs;
import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsCryptoTaskRequestArgs;
import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestArgs;
import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsJavaMigrationTaskRequestArgs;
import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsJfrTaskRequestArgs;
import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsPerformanceTuningTaskRequestArgs;
import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestArgs;
import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsScanJavaServerTaskRequestArgs;
import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsScanLibraryTaskRequestArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskScheduleTaskDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskScheduleTaskDetailsArgs Empty = new TaskScheduleTaskDetailsArgs();

    /**
     * (Updatable) The list of Java installation sites to add.
     * 
     */
    @Import(name="addInstallationSiteTaskRequest")
    private @Nullable Output<TaskScheduleTaskDetailsAddInstallationSiteTaskRequestArgs> addInstallationSiteTaskRequest;

    /**
     * @return (Updatable) The list of Java installation sites to add.
     * 
     */
    public Optional<Output<TaskScheduleTaskDetailsAddInstallationSiteTaskRequestArgs>> addInstallationSiteTaskRequest() {
        return Optional.ofNullable(this.addInstallationSiteTaskRequest);
    }

    /**
     * (Updatable) Details of the request to start a JFR crypto event analysis. When the targets aren&#39;t specified, then all managed instances currently in the fleet are selected.
     * 
     */
    @Import(name="cryptoTaskRequest")
    private @Nullable Output<TaskScheduleTaskDetailsCryptoTaskRequestArgs> cryptoTaskRequest;

    /**
     * @return (Updatable) Details of the request to start a JFR crypto event analysis. When the targets aren&#39;t specified, then all managed instances currently in the fleet are selected.
     * 
     */
    public Optional<Output<TaskScheduleTaskDetailsCryptoTaskRequestArgs>> cryptoTaskRequest() {
        return Optional.ofNullable(this.cryptoTaskRequest);
    }

    /**
     * (Updatable) Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
     * 
     */
    @Import(name="deployedApplicationMigrationTaskRequest")
    private @Nullable Output<TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestArgs> deployedApplicationMigrationTaskRequest;

    /**
     * @return (Updatable) Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
     * 
     */
    public Optional<Output<TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestArgs>> deployedApplicationMigrationTaskRequest() {
        return Optional.ofNullable(this.deployedApplicationMigrationTaskRequest);
    }

    /**
     * (Updatable) Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
     * 
     */
    @Import(name="javaMigrationTaskRequest")
    private @Nullable Output<TaskScheduleTaskDetailsJavaMigrationTaskRequestArgs> javaMigrationTaskRequest;

    /**
     * @return (Updatable) Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
     * 
     */
    public Optional<Output<TaskScheduleTaskDetailsJavaMigrationTaskRequestArgs>> javaMigrationTaskRequest() {
        return Optional.ofNullable(this.javaMigrationTaskRequest);
    }

    /**
     * (Updatable) Details of the request to start JFR recordings. When the targets aren&#39;t specified, then all managed instances currently in the Fleet are selected.
     * 
     */
    @Import(name="jfrTaskRequest")
    private @Nullable Output<TaskScheduleTaskDetailsJfrTaskRequestArgs> jfrTaskRequest;

    /**
     * @return (Updatable) Details of the request to start JFR recordings. When the targets aren&#39;t specified, then all managed instances currently in the Fleet are selected.
     * 
     */
    public Optional<Output<TaskScheduleTaskDetailsJfrTaskRequestArgs>> jfrTaskRequest() {
        return Optional.ofNullable(this.jfrTaskRequest);
    }

    /**
     * (Updatable) Details of the request to start a JFR performance tuning analysis.
     * 
     */
    @Import(name="performanceTuningTaskRequest")
    private @Nullable Output<TaskScheduleTaskDetailsPerformanceTuningTaskRequestArgs> performanceTuningTaskRequest;

    /**
     * @return (Updatable) Details of the request to start a JFR performance tuning analysis.
     * 
     */
    public Optional<Output<TaskScheduleTaskDetailsPerformanceTuningTaskRequestArgs>> performanceTuningTaskRequest() {
        return Optional.ofNullable(this.performanceTuningTaskRequest);
    }

    /**
     * (Updatable) The list of Java installation sites to remove.
     * 
     */
    @Import(name="removeInstallationSiteTaskRequest")
    private @Nullable Output<TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestArgs> removeInstallationSiteTaskRequest;

    /**
     * @return (Updatable) The list of Java installation sites to remove.
     * 
     */
    public Optional<Output<TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestArgs>> removeInstallationSiteTaskRequest() {
        return Optional.ofNullable(this.removeInstallationSiteTaskRequest);
    }

    /**
     * (Updatable) The list of managed instances to scan.
     * 
     */
    @Import(name="scanJavaServerTaskRequest")
    private @Nullable Output<TaskScheduleTaskDetailsScanJavaServerTaskRequestArgs> scanJavaServerTaskRequest;

    /**
     * @return (Updatable) The list of managed instances to scan.
     * 
     */
    public Optional<Output<TaskScheduleTaskDetailsScanJavaServerTaskRequestArgs>> scanJavaServerTaskRequest() {
        return Optional.ofNullable(this.scanJavaServerTaskRequest);
    }

    /**
     * (Updatable) The list of managed instances to scan.
     * 
     */
    @Import(name="scanLibraryTaskRequest")
    private @Nullable Output<TaskScheduleTaskDetailsScanLibraryTaskRequestArgs> scanLibraryTaskRequest;

    /**
     * @return (Updatable) The list of managed instances to scan.
     * 
     */
    public Optional<Output<TaskScheduleTaskDetailsScanLibraryTaskRequestArgs>> scanLibraryTaskRequest() {
        return Optional.ofNullable(this.scanLibraryTaskRequest);
    }

    /**
     * (Updatable) Type of task.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="taskType", required=true)
    private Output<String> taskType;

    /**
     * @return (Updatable) Type of task.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> taskType() {
        return this.taskType;
    }

    private TaskScheduleTaskDetailsArgs() {}

    private TaskScheduleTaskDetailsArgs(TaskScheduleTaskDetailsArgs $) {
        this.addInstallationSiteTaskRequest = $.addInstallationSiteTaskRequest;
        this.cryptoTaskRequest = $.cryptoTaskRequest;
        this.deployedApplicationMigrationTaskRequest = $.deployedApplicationMigrationTaskRequest;
        this.javaMigrationTaskRequest = $.javaMigrationTaskRequest;
        this.jfrTaskRequest = $.jfrTaskRequest;
        this.performanceTuningTaskRequest = $.performanceTuningTaskRequest;
        this.removeInstallationSiteTaskRequest = $.removeInstallationSiteTaskRequest;
        this.scanJavaServerTaskRequest = $.scanJavaServerTaskRequest;
        this.scanLibraryTaskRequest = $.scanLibraryTaskRequest;
        this.taskType = $.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskScheduleTaskDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskScheduleTaskDetailsArgs $;

        public Builder() {
            $ = new TaskScheduleTaskDetailsArgs();
        }

        public Builder(TaskScheduleTaskDetailsArgs defaults) {
            $ = new TaskScheduleTaskDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addInstallationSiteTaskRequest (Updatable) The list of Java installation sites to add.
         * 
         * @return builder
         * 
         */
        public Builder addInstallationSiteTaskRequest(@Nullable Output<TaskScheduleTaskDetailsAddInstallationSiteTaskRequestArgs> addInstallationSiteTaskRequest) {
            $.addInstallationSiteTaskRequest = addInstallationSiteTaskRequest;
            return this;
        }

        /**
         * @param addInstallationSiteTaskRequest (Updatable) The list of Java installation sites to add.
         * 
         * @return builder
         * 
         */
        public Builder addInstallationSiteTaskRequest(TaskScheduleTaskDetailsAddInstallationSiteTaskRequestArgs addInstallationSiteTaskRequest) {
            return addInstallationSiteTaskRequest(Output.of(addInstallationSiteTaskRequest));
        }

        /**
         * @param cryptoTaskRequest (Updatable) Details of the request to start a JFR crypto event analysis. When the targets aren&#39;t specified, then all managed instances currently in the fleet are selected.
         * 
         * @return builder
         * 
         */
        public Builder cryptoTaskRequest(@Nullable Output<TaskScheduleTaskDetailsCryptoTaskRequestArgs> cryptoTaskRequest) {
            $.cryptoTaskRequest = cryptoTaskRequest;
            return this;
        }

        /**
         * @param cryptoTaskRequest (Updatable) Details of the request to start a JFR crypto event analysis. When the targets aren&#39;t specified, then all managed instances currently in the fleet are selected.
         * 
         * @return builder
         * 
         */
        public Builder cryptoTaskRequest(TaskScheduleTaskDetailsCryptoTaskRequestArgs cryptoTaskRequest) {
            return cryptoTaskRequest(Output.of(cryptoTaskRequest));
        }

        /**
         * @param deployedApplicationMigrationTaskRequest (Updatable) Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
         * 
         * @return builder
         * 
         */
        public Builder deployedApplicationMigrationTaskRequest(@Nullable Output<TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestArgs> deployedApplicationMigrationTaskRequest) {
            $.deployedApplicationMigrationTaskRequest = deployedApplicationMigrationTaskRequest;
            return this;
        }

        /**
         * @param deployedApplicationMigrationTaskRequest (Updatable) Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
         * 
         * @return builder
         * 
         */
        public Builder deployedApplicationMigrationTaskRequest(TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequestArgs deployedApplicationMigrationTaskRequest) {
            return deployedApplicationMigrationTaskRequest(Output.of(deployedApplicationMigrationTaskRequest));
        }

        /**
         * @param javaMigrationTaskRequest (Updatable) Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
         * 
         * @return builder
         * 
         */
        public Builder javaMigrationTaskRequest(@Nullable Output<TaskScheduleTaskDetailsJavaMigrationTaskRequestArgs> javaMigrationTaskRequest) {
            $.javaMigrationTaskRequest = javaMigrationTaskRequest;
            return this;
        }

        /**
         * @param javaMigrationTaskRequest (Updatable) Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
         * 
         * @return builder
         * 
         */
        public Builder javaMigrationTaskRequest(TaskScheduleTaskDetailsJavaMigrationTaskRequestArgs javaMigrationTaskRequest) {
            return javaMigrationTaskRequest(Output.of(javaMigrationTaskRequest));
        }

        /**
         * @param jfrTaskRequest (Updatable) Details of the request to start JFR recordings. When the targets aren&#39;t specified, then all managed instances currently in the Fleet are selected.
         * 
         * @return builder
         * 
         */
        public Builder jfrTaskRequest(@Nullable Output<TaskScheduleTaskDetailsJfrTaskRequestArgs> jfrTaskRequest) {
            $.jfrTaskRequest = jfrTaskRequest;
            return this;
        }

        /**
         * @param jfrTaskRequest (Updatable) Details of the request to start JFR recordings. When the targets aren&#39;t specified, then all managed instances currently in the Fleet are selected.
         * 
         * @return builder
         * 
         */
        public Builder jfrTaskRequest(TaskScheduleTaskDetailsJfrTaskRequestArgs jfrTaskRequest) {
            return jfrTaskRequest(Output.of(jfrTaskRequest));
        }

        /**
         * @param performanceTuningTaskRequest (Updatable) Details of the request to start a JFR performance tuning analysis.
         * 
         * @return builder
         * 
         */
        public Builder performanceTuningTaskRequest(@Nullable Output<TaskScheduleTaskDetailsPerformanceTuningTaskRequestArgs> performanceTuningTaskRequest) {
            $.performanceTuningTaskRequest = performanceTuningTaskRequest;
            return this;
        }

        /**
         * @param performanceTuningTaskRequest (Updatable) Details of the request to start a JFR performance tuning analysis.
         * 
         * @return builder
         * 
         */
        public Builder performanceTuningTaskRequest(TaskScheduleTaskDetailsPerformanceTuningTaskRequestArgs performanceTuningTaskRequest) {
            return performanceTuningTaskRequest(Output.of(performanceTuningTaskRequest));
        }

        /**
         * @param removeInstallationSiteTaskRequest (Updatable) The list of Java installation sites to remove.
         * 
         * @return builder
         * 
         */
        public Builder removeInstallationSiteTaskRequest(@Nullable Output<TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestArgs> removeInstallationSiteTaskRequest) {
            $.removeInstallationSiteTaskRequest = removeInstallationSiteTaskRequest;
            return this;
        }

        /**
         * @param removeInstallationSiteTaskRequest (Updatable) The list of Java installation sites to remove.
         * 
         * @return builder
         * 
         */
        public Builder removeInstallationSiteTaskRequest(TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequestArgs removeInstallationSiteTaskRequest) {
            return removeInstallationSiteTaskRequest(Output.of(removeInstallationSiteTaskRequest));
        }

        /**
         * @param scanJavaServerTaskRequest (Updatable) The list of managed instances to scan.
         * 
         * @return builder
         * 
         */
        public Builder scanJavaServerTaskRequest(@Nullable Output<TaskScheduleTaskDetailsScanJavaServerTaskRequestArgs> scanJavaServerTaskRequest) {
            $.scanJavaServerTaskRequest = scanJavaServerTaskRequest;
            return this;
        }

        /**
         * @param scanJavaServerTaskRequest (Updatable) The list of managed instances to scan.
         * 
         * @return builder
         * 
         */
        public Builder scanJavaServerTaskRequest(TaskScheduleTaskDetailsScanJavaServerTaskRequestArgs scanJavaServerTaskRequest) {
            return scanJavaServerTaskRequest(Output.of(scanJavaServerTaskRequest));
        }

        /**
         * @param scanLibraryTaskRequest (Updatable) The list of managed instances to scan.
         * 
         * @return builder
         * 
         */
        public Builder scanLibraryTaskRequest(@Nullable Output<TaskScheduleTaskDetailsScanLibraryTaskRequestArgs> scanLibraryTaskRequest) {
            $.scanLibraryTaskRequest = scanLibraryTaskRequest;
            return this;
        }

        /**
         * @param scanLibraryTaskRequest (Updatable) The list of managed instances to scan.
         * 
         * @return builder
         * 
         */
        public Builder scanLibraryTaskRequest(TaskScheduleTaskDetailsScanLibraryTaskRequestArgs scanLibraryTaskRequest) {
            return scanLibraryTaskRequest(Output.of(scanLibraryTaskRequest));
        }

        /**
         * @param taskType (Updatable) Type of task.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder taskType(Output<String> taskType) {
            $.taskType = taskType;
            return this;
        }

        /**
         * @param taskType (Updatable) Type of task.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder taskType(String taskType) {
            return taskType(Output.of(taskType));
        }

        public TaskScheduleTaskDetailsArgs build() {
            if ($.taskType == null) {
                throw new MissingRequiredPropertyException("TaskScheduleTaskDetailsArgs", "taskType");
            }
            return $;
        }
    }

}
