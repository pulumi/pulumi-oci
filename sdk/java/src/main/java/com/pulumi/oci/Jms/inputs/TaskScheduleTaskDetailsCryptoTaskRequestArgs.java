// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Jms.inputs.TaskScheduleTaskDetailsCryptoTaskRequestTargetArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TaskScheduleTaskDetailsCryptoTaskRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final TaskScheduleTaskDetailsCryptoTaskRequestArgs Empty = new TaskScheduleTaskDetailsCryptoTaskRequestArgs();

    /**
     * (Updatable) Duration of the JFR recording in minutes.
     * 
     */
    @Import(name="recordingDurationInMinutes")
    private @Nullable Output<Integer> recordingDurationInMinutes;

    /**
     * @return (Updatable) Duration of the JFR recording in minutes.
     * 
     */
    public Optional<Output<Integer>> recordingDurationInMinutes() {
        return Optional.ofNullable(this.recordingDurationInMinutes);
    }

    /**
     * (Updatable) The attachment targets to start JFR.
     * 
     */
    @Import(name="targets")
    private @Nullable Output<List<TaskScheduleTaskDetailsCryptoTaskRequestTargetArgs>> targets;

    /**
     * @return (Updatable) The attachment targets to start JFR.
     * 
     */
    public Optional<Output<List<TaskScheduleTaskDetailsCryptoTaskRequestTargetArgs>>> targets() {
        return Optional.ofNullable(this.targets);
    }

    /**
     * (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
     * 
     */
    @Import(name="waitingPeriodInMinutes")
    private @Nullable Output<Integer> waitingPeriodInMinutes;

    /**
     * @return (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
     * 
     */
    public Optional<Output<Integer>> waitingPeriodInMinutes() {
        return Optional.ofNullable(this.waitingPeriodInMinutes);
    }

    private TaskScheduleTaskDetailsCryptoTaskRequestArgs() {}

    private TaskScheduleTaskDetailsCryptoTaskRequestArgs(TaskScheduleTaskDetailsCryptoTaskRequestArgs $) {
        this.recordingDurationInMinutes = $.recordingDurationInMinutes;
        this.targets = $.targets;
        this.waitingPeriodInMinutes = $.waitingPeriodInMinutes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TaskScheduleTaskDetailsCryptoTaskRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TaskScheduleTaskDetailsCryptoTaskRequestArgs $;

        public Builder() {
            $ = new TaskScheduleTaskDetailsCryptoTaskRequestArgs();
        }

        public Builder(TaskScheduleTaskDetailsCryptoTaskRequestArgs defaults) {
            $ = new TaskScheduleTaskDetailsCryptoTaskRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recordingDurationInMinutes (Updatable) Duration of the JFR recording in minutes.
         * 
         * @return builder
         * 
         */
        public Builder recordingDurationInMinutes(@Nullable Output<Integer> recordingDurationInMinutes) {
            $.recordingDurationInMinutes = recordingDurationInMinutes;
            return this;
        }

        /**
         * @param recordingDurationInMinutes (Updatable) Duration of the JFR recording in minutes.
         * 
         * @return builder
         * 
         */
        public Builder recordingDurationInMinutes(Integer recordingDurationInMinutes) {
            return recordingDurationInMinutes(Output.of(recordingDurationInMinutes));
        }

        /**
         * @param targets (Updatable) The attachment targets to start JFR.
         * 
         * @return builder
         * 
         */
        public Builder targets(@Nullable Output<List<TaskScheduleTaskDetailsCryptoTaskRequestTargetArgs>> targets) {
            $.targets = targets;
            return this;
        }

        /**
         * @param targets (Updatable) The attachment targets to start JFR.
         * 
         * @return builder
         * 
         */
        public Builder targets(List<TaskScheduleTaskDetailsCryptoTaskRequestTargetArgs> targets) {
            return targets(Output.of(targets));
        }

        /**
         * @param targets (Updatable) The attachment targets to start JFR.
         * 
         * @return builder
         * 
         */
        public Builder targets(TaskScheduleTaskDetailsCryptoTaskRequestTargetArgs... targets) {
            return targets(List.of(targets));
        }

        /**
         * @param waitingPeriodInMinutes (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
         * 
         * @return builder
         * 
         */
        public Builder waitingPeriodInMinutes(@Nullable Output<Integer> waitingPeriodInMinutes) {
            $.waitingPeriodInMinutes = waitingPeriodInMinutes;
            return this;
        }

        /**
         * @param waitingPeriodInMinutes (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
         * 
         * @return builder
         * 
         */
        public Builder waitingPeriodInMinutes(Integer waitingPeriodInMinutes) {
            return waitingPeriodInMinutes(Output.of(waitingPeriodInMinutes));
        }

        public TaskScheduleTaskDetailsCryptoTaskRequestArgs build() {
            return $;
        }
    }

}
