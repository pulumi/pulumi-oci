// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAgentInstallersAgentInstallerCollectionItem {
    /**
     * @return Description of the agent installer artifact. The description typically includes the OS, architecture, and agent installer type.
     * 
     */
    private String agentInstallerDescription;
    /**
     * @return Unique identifier for the agent installer.
     * 
     */
    private String agentInstallerId;
    /**
     * @return Agent installer version.
     * 
     */
    private String agentInstallerVersion;
    /**
     * @return Agent image version.
     * 
     */
    private String agentVersion;
    /**
     * @return Approximate compressed file size in bytes.
     * 
     */
    private String approximateFileSizeInBytes;
    /**
     * @return Java version.
     * 
     */
    private String javaVersion;
    /**
     * @return The OS family for the agent installer.
     * 
     */
    private String osFamily;
    /**
     * @return The package type (typically the file extension) of the agent software included in the installer.
     * 
     */
    private String packageType;
    /**
     * @return The platform architecture for the agent installer.
     * 
     */
    private String platformArchitecture;
    /**
     * @return SHA256 checksum of the agent installer.
     * 
     */
    private String sha256;

    private GetAgentInstallersAgentInstallerCollectionItem() {}
    /**
     * @return Description of the agent installer artifact. The description typically includes the OS, architecture, and agent installer type.
     * 
     */
    public String agentInstallerDescription() {
        return this.agentInstallerDescription;
    }
    /**
     * @return Unique identifier for the agent installer.
     * 
     */
    public String agentInstallerId() {
        return this.agentInstallerId;
    }
    /**
     * @return Agent installer version.
     * 
     */
    public String agentInstallerVersion() {
        return this.agentInstallerVersion;
    }
    /**
     * @return Agent image version.
     * 
     */
    public String agentVersion() {
        return this.agentVersion;
    }
    /**
     * @return Approximate compressed file size in bytes.
     * 
     */
    public String approximateFileSizeInBytes() {
        return this.approximateFileSizeInBytes;
    }
    /**
     * @return Java version.
     * 
     */
    public String javaVersion() {
        return this.javaVersion;
    }
    /**
     * @return The OS family for the agent installer.
     * 
     */
    public String osFamily() {
        return this.osFamily;
    }
    /**
     * @return The package type (typically the file extension) of the agent software included in the installer.
     * 
     */
    public String packageType() {
        return this.packageType;
    }
    /**
     * @return The platform architecture for the agent installer.
     * 
     */
    public String platformArchitecture() {
        return this.platformArchitecture;
    }
    /**
     * @return SHA256 checksum of the agent installer.
     * 
     */
    public String sha256() {
        return this.sha256;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAgentInstallersAgentInstallerCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String agentInstallerDescription;
        private String agentInstallerId;
        private String agentInstallerVersion;
        private String agentVersion;
        private String approximateFileSizeInBytes;
        private String javaVersion;
        private String osFamily;
        private String packageType;
        private String platformArchitecture;
        private String sha256;
        public Builder() {}
        public Builder(GetAgentInstallersAgentInstallerCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentInstallerDescription = defaults.agentInstallerDescription;
    	      this.agentInstallerId = defaults.agentInstallerId;
    	      this.agentInstallerVersion = defaults.agentInstallerVersion;
    	      this.agentVersion = defaults.agentVersion;
    	      this.approximateFileSizeInBytes = defaults.approximateFileSizeInBytes;
    	      this.javaVersion = defaults.javaVersion;
    	      this.osFamily = defaults.osFamily;
    	      this.packageType = defaults.packageType;
    	      this.platformArchitecture = defaults.platformArchitecture;
    	      this.sha256 = defaults.sha256;
        }

        @CustomType.Setter
        public Builder agentInstallerDescription(String agentInstallerDescription) {
            if (agentInstallerDescription == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersAgentInstallerCollectionItem", "agentInstallerDescription");
            }
            this.agentInstallerDescription = agentInstallerDescription;
            return this;
        }
        @CustomType.Setter
        public Builder agentInstallerId(String agentInstallerId) {
            if (agentInstallerId == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersAgentInstallerCollectionItem", "agentInstallerId");
            }
            this.agentInstallerId = agentInstallerId;
            return this;
        }
        @CustomType.Setter
        public Builder agentInstallerVersion(String agentInstallerVersion) {
            if (agentInstallerVersion == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersAgentInstallerCollectionItem", "agentInstallerVersion");
            }
            this.agentInstallerVersion = agentInstallerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder agentVersion(String agentVersion) {
            if (agentVersion == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersAgentInstallerCollectionItem", "agentVersion");
            }
            this.agentVersion = agentVersion;
            return this;
        }
        @CustomType.Setter
        public Builder approximateFileSizeInBytes(String approximateFileSizeInBytes) {
            if (approximateFileSizeInBytes == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersAgentInstallerCollectionItem", "approximateFileSizeInBytes");
            }
            this.approximateFileSizeInBytes = approximateFileSizeInBytes;
            return this;
        }
        @CustomType.Setter
        public Builder javaVersion(String javaVersion) {
            if (javaVersion == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersAgentInstallerCollectionItem", "javaVersion");
            }
            this.javaVersion = javaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder osFamily(String osFamily) {
            if (osFamily == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersAgentInstallerCollectionItem", "osFamily");
            }
            this.osFamily = osFamily;
            return this;
        }
        @CustomType.Setter
        public Builder packageType(String packageType) {
            if (packageType == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersAgentInstallerCollectionItem", "packageType");
            }
            this.packageType = packageType;
            return this;
        }
        @CustomType.Setter
        public Builder platformArchitecture(String platformArchitecture) {
            if (platformArchitecture == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersAgentInstallerCollectionItem", "platformArchitecture");
            }
            this.platformArchitecture = platformArchitecture;
            return this;
        }
        @CustomType.Setter
        public Builder sha256(String sha256) {
            if (sha256 == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersAgentInstallerCollectionItem", "sha256");
            }
            this.sha256 = sha256;
            return this;
        }
        public GetAgentInstallersAgentInstallerCollectionItem build() {
            final var _resultValue = new GetAgentInstallersAgentInstallerCollectionItem();
            _resultValue.agentInstallerDescription = agentInstallerDescription;
            _resultValue.agentInstallerId = agentInstallerId;
            _resultValue.agentInstallerVersion = agentInstallerVersion;
            _resultValue.agentVersion = agentVersion;
            _resultValue.approximateFileSizeInBytes = approximateFileSizeInBytes;
            _resultValue.javaVersion = javaVersion;
            _resultValue.osFamily = osFamily;
            _resultValue.packageType = packageType;
            _resultValue.platformArchitecture = platformArchitecture;
            _resultValue.sha256 = sha256;
            return _resultValue;
        }
    }
}
