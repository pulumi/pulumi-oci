// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.outputs.GetAgentInstallersAgentInstallerCollection;
import com.pulumi.oci.Jms.outputs.GetAgentInstallersFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAgentInstallersResult {
    /**
     * @return The list of agent_installer_collection.
     * 
     */
    private List<GetAgentInstallersAgentInstallerCollection> agentInstallerCollections;
    private @Nullable String compartmentId;
    private @Nullable List<GetAgentInstallersFilter> filters;
    private @Nullable String fleetId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The target operating system family for the agent installer.
     * 
     */
    private @Nullable String osFamily;
    /**
     * @return The target operating system architecture for the installer.
     * 
     */
    private @Nullable String platformArchitecture;

    private GetAgentInstallersResult() {}
    /**
     * @return The list of agent_installer_collection.
     * 
     */
    public List<GetAgentInstallersAgentInstallerCollection> agentInstallerCollections() {
        return this.agentInstallerCollections;
    }
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public List<GetAgentInstallersFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> fleetId() {
        return Optional.ofNullable(this.fleetId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The target operating system family for the agent installer.
     * 
     */
    public Optional<String> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }
    /**
     * @return The target operating system architecture for the installer.
     * 
     */
    public Optional<String> platformArchitecture() {
        return Optional.ofNullable(this.platformArchitecture);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAgentInstallersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAgentInstallersAgentInstallerCollection> agentInstallerCollections;
        private @Nullable String compartmentId;
        private @Nullable List<GetAgentInstallersFilter> filters;
        private @Nullable String fleetId;
        private String id;
        private @Nullable String osFamily;
        private @Nullable String platformArchitecture;
        public Builder() {}
        public Builder(GetAgentInstallersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentInstallerCollections = defaults.agentInstallerCollections;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.fleetId = defaults.fleetId;
    	      this.id = defaults.id;
    	      this.osFamily = defaults.osFamily;
    	      this.platformArchitecture = defaults.platformArchitecture;
        }

        @CustomType.Setter
        public Builder agentInstallerCollections(List<GetAgentInstallersAgentInstallerCollection> agentInstallerCollections) {
            if (agentInstallerCollections == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersResult", "agentInstallerCollections");
            }
            this.agentInstallerCollections = agentInstallerCollections;
            return this;
        }
        public Builder agentInstallerCollections(GetAgentInstallersAgentInstallerCollection... agentInstallerCollections) {
            return agentInstallerCollections(List.of(agentInstallerCollections));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAgentInstallersFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetAgentInstallersFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder fleetId(@Nullable String fleetId) {

            this.fleetId = fleetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAgentInstallersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder osFamily(@Nullable String osFamily) {

            this.osFamily = osFamily;
            return this;
        }
        @CustomType.Setter
        public Builder platformArchitecture(@Nullable String platformArchitecture) {

            this.platformArchitecture = platformArchitecture;
            return this;
        }
        public GetAgentInstallersResult build() {
            final var _resultValue = new GetAgentInstallersResult();
            _resultValue.agentInstallerCollections = agentInstallerCollections;
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.fleetId = fleetId;
            _resultValue.id = id;
            _resultValue.osFamily = osFamily;
            _resultValue.platformArchitecture = platformArchitecture;
            return _resultValue;
        }
    }
}
