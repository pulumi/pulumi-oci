// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxy {
    /**
     * @return Ftp host to be set in net.properties file.
     * 
     */
    private @Nullable String ftpProxyHost;
    /**
     * @return Ftp port number to be set in net.properties file.
     * 
     */
    private @Nullable Integer ftpProxyPort;
    /**
     * @return Http host to be set in net.properties file.
     * 
     */
    private @Nullable String httpProxyHost;
    /**
     * @return Http port number to be set in net.properties file.
     * 
     */
    private @Nullable Integer httpProxyPort;
    /**
     * @return Https host to be set in net.properties file.
     * 
     */
    private @Nullable String httpsProxyHost;
    /**
     * @return Https port number to be set in net.properties file.
     * 
     */
    private @Nullable Integer httpsProxyPort;
    /**
     * @return Socks host to be set in net.properties file.
     * 
     */
    private @Nullable String socksProxyHost;
    /**
     * @return Socks port number to be set in net.properties file.
     * 
     */
    private @Nullable Integer socksProxyPort;
    /**
     * @return Sets &#34;java.net.useSystemProxies=true&#34; in net.properties when they exist.
     * 
     */
    private @Nullable Boolean useSystemProxies;

    private GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxy() {}
    /**
     * @return Ftp host to be set in net.properties file.
     * 
     */
    public Optional<String> ftpProxyHost() {
        return Optional.ofNullable(this.ftpProxyHost);
    }
    /**
     * @return Ftp port number to be set in net.properties file.
     * 
     */
    public Optional<Integer> ftpProxyPort() {
        return Optional.ofNullable(this.ftpProxyPort);
    }
    /**
     * @return Http host to be set in net.properties file.
     * 
     */
    public Optional<String> httpProxyHost() {
        return Optional.ofNullable(this.httpProxyHost);
    }
    /**
     * @return Http port number to be set in net.properties file.
     * 
     */
    public Optional<Integer> httpProxyPort() {
        return Optional.ofNullable(this.httpProxyPort);
    }
    /**
     * @return Https host to be set in net.properties file.
     * 
     */
    public Optional<String> httpsProxyHost() {
        return Optional.ofNullable(this.httpsProxyHost);
    }
    /**
     * @return Https port number to be set in net.properties file.
     * 
     */
    public Optional<Integer> httpsProxyPort() {
        return Optional.ofNullable(this.httpsProxyPort);
    }
    /**
     * @return Socks host to be set in net.properties file.
     * 
     */
    public Optional<String> socksProxyHost() {
        return Optional.ofNullable(this.socksProxyHost);
    }
    /**
     * @return Socks port number to be set in net.properties file.
     * 
     */
    public Optional<Integer> socksProxyPort() {
        return Optional.ofNullable(this.socksProxyPort);
    }
    /**
     * @return Sets &#34;java.net.useSystemProxies=true&#34; in net.properties when they exist.
     * 
     */
    public Optional<Boolean> useSystemProxies() {
        return Optional.ofNullable(this.useSystemProxies);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String ftpProxyHost;
        private @Nullable Integer ftpProxyPort;
        private @Nullable String httpProxyHost;
        private @Nullable Integer httpProxyPort;
        private @Nullable String httpsProxyHost;
        private @Nullable Integer httpsProxyPort;
        private @Nullable String socksProxyHost;
        private @Nullable Integer socksProxyPort;
        private @Nullable Boolean useSystemProxies;
        public Builder() {}
        public Builder(GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ftpProxyHost = defaults.ftpProxyHost;
    	      this.ftpProxyPort = defaults.ftpProxyPort;
    	      this.httpProxyHost = defaults.httpProxyHost;
    	      this.httpProxyPort = defaults.httpProxyPort;
    	      this.httpsProxyHost = defaults.httpsProxyHost;
    	      this.httpsProxyPort = defaults.httpsProxyPort;
    	      this.socksProxyHost = defaults.socksProxyHost;
    	      this.socksProxyPort = defaults.socksProxyPort;
    	      this.useSystemProxies = defaults.useSystemProxies;
        }

        @CustomType.Setter
        public Builder ftpProxyHost(@Nullable String ftpProxyHost) {
            this.ftpProxyHost = ftpProxyHost;
            return this;
        }
        @CustomType.Setter
        public Builder ftpProxyPort(@Nullable Integer ftpProxyPort) {
            this.ftpProxyPort = ftpProxyPort;
            return this;
        }
        @CustomType.Setter
        public Builder httpProxyHost(@Nullable String httpProxyHost) {
            this.httpProxyHost = httpProxyHost;
            return this;
        }
        @CustomType.Setter
        public Builder httpProxyPort(@Nullable Integer httpProxyPort) {
            this.httpProxyPort = httpProxyPort;
            return this;
        }
        @CustomType.Setter
        public Builder httpsProxyHost(@Nullable String httpsProxyHost) {
            this.httpsProxyHost = httpsProxyHost;
            return this;
        }
        @CustomType.Setter
        public Builder httpsProxyPort(@Nullable Integer httpsProxyPort) {
            this.httpsProxyPort = httpsProxyPort;
            return this;
        }
        @CustomType.Setter
        public Builder socksProxyHost(@Nullable String socksProxyHost) {
            this.socksProxyHost = socksProxyHost;
            return this;
        }
        @CustomType.Setter
        public Builder socksProxyPort(@Nullable Integer socksProxyPort) {
            this.socksProxyPort = socksProxyPort;
            return this;
        }
        @CustomType.Setter
        public Builder useSystemProxies(@Nullable Boolean useSystemProxies) {
            this.useSystemProxies = useSystemProxies;
            return this;
        }
        public GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxy build() {
            final var o = new GetFleetAdvancedFeatureConfigurationLcmPostInstallationActionProxy();
            o.ftpProxyHost = ftpProxyHost;
            o.ftpProxyPort = ftpProxyPort;
            o.httpProxyHost = httpProxyHost;
            o.httpProxyPort = httpProxyPort;
            o.httpsProxyHost = httpsProxyHost;
            o.httpsProxyPort = httpsProxyPort;
            o.socksProxyHost = socksProxyHost;
            o.socksProxyPort = socksProxyPort;
            o.useSystemProxies = useSystemProxies;
            return o;
        }
    }
}
