// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.outputs.GetFleetContainersContainerCollection;
import com.pulumi.oci.Jms.outputs.GetFleetContainersFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFleetContainersResult {
    /**
     * @return The name of the application running in the container.
     * 
     */
    private @Nullable String applicationName;
    /**
     * @return The list of container_collection.
     * 
     */
    private List<GetFleetContainersContainerCollection> containerCollections;
    /**
     * @return The name of the container.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetFleetContainersFilter> filters;
    private String fleetId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The security status of the Java runtime used to run the application in the container.
     * 
     */
    private @Nullable String jreSecurityStatus;
    private @Nullable String jreVersion;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated managed instance of type OCMA.
     * 
     */
    private @Nullable String managedInstanceId;
    private @Nullable String timeStartedGreaterThanOrEqualTo;
    private @Nullable String timeStartedLessThanOrEqualTo;

    private GetFleetContainersResult() {}
    /**
     * @return The name of the application running in the container.
     * 
     */
    public Optional<String> applicationName() {
        return Optional.ofNullable(this.applicationName);
    }
    /**
     * @return The list of container_collection.
     * 
     */
    public List<GetFleetContainersContainerCollection> containerCollections() {
        return this.containerCollections;
    }
    /**
     * @return The name of the container.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetFleetContainersFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public String fleetId() {
        return this.fleetId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The security status of the Java runtime used to run the application in the container.
     * 
     */
    public Optional<String> jreSecurityStatus() {
        return Optional.ofNullable(this.jreSecurityStatus);
    }
    public Optional<String> jreVersion() {
        return Optional.ofNullable(this.jreVersion);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated managed instance of type OCMA.
     * 
     */
    public Optional<String> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }
    public Optional<String> timeStartedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeStartedGreaterThanOrEqualTo);
    }
    public Optional<String> timeStartedLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeStartedLessThanOrEqualTo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetContainersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationName;
        private List<GetFleetContainersContainerCollection> containerCollections;
        private @Nullable String displayName;
        private @Nullable List<GetFleetContainersFilter> filters;
        private String fleetId;
        private String id;
        private @Nullable String jreSecurityStatus;
        private @Nullable String jreVersion;
        private @Nullable String managedInstanceId;
        private @Nullable String timeStartedGreaterThanOrEqualTo;
        private @Nullable String timeStartedLessThanOrEqualTo;
        public Builder() {}
        public Builder(GetFleetContainersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationName = defaults.applicationName;
    	      this.containerCollections = defaults.containerCollections;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.fleetId = defaults.fleetId;
    	      this.id = defaults.id;
    	      this.jreSecurityStatus = defaults.jreSecurityStatus;
    	      this.jreVersion = defaults.jreVersion;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.timeStartedGreaterThanOrEqualTo = defaults.timeStartedGreaterThanOrEqualTo;
    	      this.timeStartedLessThanOrEqualTo = defaults.timeStartedLessThanOrEqualTo;
        }

        @CustomType.Setter
        public Builder applicationName(@Nullable String applicationName) {

            this.applicationName = applicationName;
            return this;
        }
        @CustomType.Setter
        public Builder containerCollections(List<GetFleetContainersContainerCollection> containerCollections) {
            if (containerCollections == null) {
              throw new MissingRequiredPropertyException("GetFleetContainersResult", "containerCollections");
            }
            this.containerCollections = containerCollections;
            return this;
        }
        public Builder containerCollections(GetFleetContainersContainerCollection... containerCollections) {
            return containerCollections(List.of(containerCollections));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetFleetContainersFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetFleetContainersFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder fleetId(String fleetId) {
            if (fleetId == null) {
              throw new MissingRequiredPropertyException("GetFleetContainersResult", "fleetId");
            }
            this.fleetId = fleetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFleetContainersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jreSecurityStatus(@Nullable String jreSecurityStatus) {

            this.jreSecurityStatus = jreSecurityStatus;
            return this;
        }
        @CustomType.Setter
        public Builder jreVersion(@Nullable String jreVersion) {

            this.jreVersion = jreVersion;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(@Nullable String managedInstanceId) {

            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder timeStartedGreaterThanOrEqualTo(@Nullable String timeStartedGreaterThanOrEqualTo) {

            this.timeStartedGreaterThanOrEqualTo = timeStartedGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeStartedLessThanOrEqualTo(@Nullable String timeStartedLessThanOrEqualTo) {

            this.timeStartedLessThanOrEqualTo = timeStartedLessThanOrEqualTo;
            return this;
        }
        public GetFleetContainersResult build() {
            final var _resultValue = new GetFleetContainersResult();
            _resultValue.applicationName = applicationName;
            _resultValue.containerCollections = containerCollections;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.fleetId = fleetId;
            _resultValue.id = id;
            _resultValue.jreSecurityStatus = jreSecurityStatus;
            _resultValue.jreVersion = jreVersion;
            _resultValue.managedInstanceId = managedInstanceId;
            _resultValue.timeStartedGreaterThanOrEqualTo = timeStartedGreaterThanOrEqualTo;
            _resultValue.timeStartedLessThanOrEqualTo = timeStartedLessThanOrEqualTo;
            return _resultValue;
        }
    }
}
