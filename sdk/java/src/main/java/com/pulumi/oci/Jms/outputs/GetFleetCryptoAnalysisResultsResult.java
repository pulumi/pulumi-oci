// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Jms.outputs.GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollection;
import com.pulumi.oci.Jms.outputs.GetFleetCryptoAnalysisResultsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFleetCryptoAnalysisResultsResult {
    /**
     * @return The result aggregation mode
     * 
     */
    private @Nullable String aggregationMode;
    /**
     * @return The list of crypto_analysis_result_collection.
     * 
     */
    private List<GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollection> cryptoAnalysisResultCollections;
    private @Nullable List<GetFleetCryptoAnalysisResultsFilter> filters;
    /**
     * @return The fleet OCID.
     * 
     */
    private String fleetId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The managed instance OCID.
     * 
     */
    private @Nullable String managedInstanceId;
    private @Nullable String timeEnd;
    private @Nullable String timeStart;

    private GetFleetCryptoAnalysisResultsResult() {}
    /**
     * @return The result aggregation mode
     * 
     */
    public Optional<String> aggregationMode() {
        return Optional.ofNullable(this.aggregationMode);
    }
    /**
     * @return The list of crypto_analysis_result_collection.
     * 
     */
    public List<GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollection> cryptoAnalysisResultCollections() {
        return this.cryptoAnalysisResultCollections;
    }
    public List<GetFleetCryptoAnalysisResultsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The fleet OCID.
     * 
     */
    public String fleetId() {
        return this.fleetId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The managed instance OCID.
     * 
     */
    public Optional<String> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }
    public Optional<String> timeEnd() {
        return Optional.ofNullable(this.timeEnd);
    }
    public Optional<String> timeStart() {
        return Optional.ofNullable(this.timeStart);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetCryptoAnalysisResultsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String aggregationMode;
        private List<GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollection> cryptoAnalysisResultCollections;
        private @Nullable List<GetFleetCryptoAnalysisResultsFilter> filters;
        private String fleetId;
        private String id;
        private @Nullable String managedInstanceId;
        private @Nullable String timeEnd;
        private @Nullable String timeStart;
        public Builder() {}
        public Builder(GetFleetCryptoAnalysisResultsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregationMode = defaults.aggregationMode;
    	      this.cryptoAnalysisResultCollections = defaults.cryptoAnalysisResultCollections;
    	      this.filters = defaults.filters;
    	      this.fleetId = defaults.fleetId;
    	      this.id = defaults.id;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder aggregationMode(@Nullable String aggregationMode) {
            this.aggregationMode = aggregationMode;
            return this;
        }
        @CustomType.Setter
        public Builder cryptoAnalysisResultCollections(List<GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollection> cryptoAnalysisResultCollections) {
            this.cryptoAnalysisResultCollections = Objects.requireNonNull(cryptoAnalysisResultCollections);
            return this;
        }
        public Builder cryptoAnalysisResultCollections(GetFleetCryptoAnalysisResultsCryptoAnalysisResultCollection... cryptoAnalysisResultCollections) {
            return cryptoAnalysisResultCollections(List.of(cryptoAnalysisResultCollections));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetFleetCryptoAnalysisResultsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetFleetCryptoAnalysisResultsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder fleetId(String fleetId) {
            this.fleetId = Objects.requireNonNull(fleetId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(@Nullable String managedInstanceId) {
            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(@Nullable String timeEnd) {
            this.timeEnd = timeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(@Nullable String timeStart) {
            this.timeStart = timeStart;
            return this;
        }
        public GetFleetCryptoAnalysisResultsResult build() {
            final var _resultValue = new GetFleetCryptoAnalysisResultsResult();
            _resultValue.aggregationMode = aggregationMode;
            _resultValue.cryptoAnalysisResultCollections = cryptoAnalysisResultCollections;
            _resultValue.filters = filters;
            _resultValue.fleetId = fleetId;
            _resultValue.id = id;
            _resultValue.managedInstanceId = managedInstanceId;
            _resultValue.timeEnd = timeEnd;
            _resultValue.timeStart = timeStart;
            return _resultValue;
        }
    }
}
