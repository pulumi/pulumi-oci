// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFleetExportSettingExportDataFilter {
    /**
     * @return List of application names to filter by partial match
     * 
     */
    private List<String> applicationNameContains;
    /**
     * @return List of application names to filter by exact match
     * 
     */
    private List<String> applicationNameEqualTos;
    /**
     * @return List of Java major versions to filter by
     * 
     */
    private List<String> javaMajorVersions;
    /**
     * @return List of Java vendors to filter by
     * 
     */
    private List<String> javaVendors;
    /**
     * @return List of Java versions to filter by
     * 
     */
    private List<String> javaVersions;
    /**
     * @return The security statuses of the Java Runtime
     * 
     */
    private List<String> securityStatuses;

    private GetFleetExportSettingExportDataFilter() {}
    /**
     * @return List of application names to filter by partial match
     * 
     */
    public List<String> applicationNameContains() {
        return this.applicationNameContains;
    }
    /**
     * @return List of application names to filter by exact match
     * 
     */
    public List<String> applicationNameEqualTos() {
        return this.applicationNameEqualTos;
    }
    /**
     * @return List of Java major versions to filter by
     * 
     */
    public List<String> javaMajorVersions() {
        return this.javaMajorVersions;
    }
    /**
     * @return List of Java vendors to filter by
     * 
     */
    public List<String> javaVendors() {
        return this.javaVendors;
    }
    /**
     * @return List of Java versions to filter by
     * 
     */
    public List<String> javaVersions() {
        return this.javaVersions;
    }
    /**
     * @return The security statuses of the Java Runtime
     * 
     */
    public List<String> securityStatuses() {
        return this.securityStatuses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetExportSettingExportDataFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> applicationNameContains;
        private List<String> applicationNameEqualTos;
        private List<String> javaMajorVersions;
        private List<String> javaVendors;
        private List<String> javaVersions;
        private List<String> securityStatuses;
        public Builder() {}
        public Builder(GetFleetExportSettingExportDataFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationNameContains = defaults.applicationNameContains;
    	      this.applicationNameEqualTos = defaults.applicationNameEqualTos;
    	      this.javaMajorVersions = defaults.javaMajorVersions;
    	      this.javaVendors = defaults.javaVendors;
    	      this.javaVersions = defaults.javaVersions;
    	      this.securityStatuses = defaults.securityStatuses;
        }

        @CustomType.Setter
        public Builder applicationNameContains(List<String> applicationNameContains) {
            if (applicationNameContains == null) {
              throw new MissingRequiredPropertyException("GetFleetExportSettingExportDataFilter", "applicationNameContains");
            }
            this.applicationNameContains = applicationNameContains;
            return this;
        }
        public Builder applicationNameContains(String... applicationNameContains) {
            return applicationNameContains(List.of(applicationNameContains));
        }
        @CustomType.Setter
        public Builder applicationNameEqualTos(List<String> applicationNameEqualTos) {
            if (applicationNameEqualTos == null) {
              throw new MissingRequiredPropertyException("GetFleetExportSettingExportDataFilter", "applicationNameEqualTos");
            }
            this.applicationNameEqualTos = applicationNameEqualTos;
            return this;
        }
        public Builder applicationNameEqualTos(String... applicationNameEqualTos) {
            return applicationNameEqualTos(List.of(applicationNameEqualTos));
        }
        @CustomType.Setter
        public Builder javaMajorVersions(List<String> javaMajorVersions) {
            if (javaMajorVersions == null) {
              throw new MissingRequiredPropertyException("GetFleetExportSettingExportDataFilter", "javaMajorVersions");
            }
            this.javaMajorVersions = javaMajorVersions;
            return this;
        }
        public Builder javaMajorVersions(String... javaMajorVersions) {
            return javaMajorVersions(List.of(javaMajorVersions));
        }
        @CustomType.Setter
        public Builder javaVendors(List<String> javaVendors) {
            if (javaVendors == null) {
              throw new MissingRequiredPropertyException("GetFleetExportSettingExportDataFilter", "javaVendors");
            }
            this.javaVendors = javaVendors;
            return this;
        }
        public Builder javaVendors(String... javaVendors) {
            return javaVendors(List.of(javaVendors));
        }
        @CustomType.Setter
        public Builder javaVersions(List<String> javaVersions) {
            if (javaVersions == null) {
              throw new MissingRequiredPropertyException("GetFleetExportSettingExportDataFilter", "javaVersions");
            }
            this.javaVersions = javaVersions;
            return this;
        }
        public Builder javaVersions(String... javaVersions) {
            return javaVersions(List.of(javaVersions));
        }
        @CustomType.Setter
        public Builder securityStatuses(List<String> securityStatuses) {
            if (securityStatuses == null) {
              throw new MissingRequiredPropertyException("GetFleetExportSettingExportDataFilter", "securityStatuses");
            }
            this.securityStatuses = securityStatuses;
            return this;
        }
        public Builder securityStatuses(String... securityStatuses) {
            return securityStatuses(List.of(securityStatuses));
        }
        public GetFleetExportSettingExportDataFilter build() {
            final var _resultValue = new GetFleetExportSettingExportDataFilter();
            _resultValue.applicationNameContains = applicationNameContains;
            _resultValue.applicationNameEqualTos = applicationNameEqualTos;
            _resultValue.javaMajorVersions = javaMajorVersions;
            _resultValue.javaVendors = javaVendors;
            _resultValue.javaVersions = javaVersions;
            _resultValue.securityStatuses = securityStatuses;
            return _resultValue;
        }
    }
}
