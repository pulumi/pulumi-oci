// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFleetExportSettingResult {
    /**
     * @return The duration of data to be exported for fleets.
     * 
     */
    private String exportDuration;
    /**
     * @return Schedule at which data will be exported.
     * 
     */
    private String exportFrequency;
    /**
     * @return Resource to export data associated from the fleets.
     * 
     */
    private String exportResources;
    /**
     * @return The internal identifier of the export setting.
     * 
     */
    private String exportSettingKey;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet.
     * 
     */
    private String fleetId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Acknowledgement for cross region target bucket configuration.
     * 
     */
    private Boolean isCrossRegionAcknowledged;
    /**
     * @return ExportSetting flag to store enabled or disabled status.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The name of the bucket where data will be exported.
     * 
     */
    private String targetBucketName;
    /**
     * @return The namespace of the bucket where data will be exported.
     * 
     */
    private String targetBucketNamespace;
    /**
     * @return The namespace of the bucket where data will be exported.
     * 
     */
    private String targetBucketRegion;
    /**
     * @return The creation date and time of the export setting (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private String timeCreated;
    /**
     * @return The update date and time of the export setting (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private String timeLastModified;

    private GetFleetExportSettingResult() {}
    /**
     * @return The duration of data to be exported for fleets.
     * 
     */
    public String exportDuration() {
        return this.exportDuration;
    }
    /**
     * @return Schedule at which data will be exported.
     * 
     */
    public String exportFrequency() {
        return this.exportFrequency;
    }
    /**
     * @return Resource to export data associated from the fleets.
     * 
     */
    public String exportResources() {
        return this.exportResources;
    }
    /**
     * @return The internal identifier of the export setting.
     * 
     */
    public String exportSettingKey() {
        return this.exportSettingKey;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet.
     * 
     */
    public String fleetId() {
        return this.fleetId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Acknowledgement for cross region target bucket configuration.
     * 
     */
    public Boolean isCrossRegionAcknowledged() {
        return this.isCrossRegionAcknowledged;
    }
    /**
     * @return ExportSetting flag to store enabled or disabled status.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The name of the bucket where data will be exported.
     * 
     */
    public String targetBucketName() {
        return this.targetBucketName;
    }
    /**
     * @return The namespace of the bucket where data will be exported.
     * 
     */
    public String targetBucketNamespace() {
        return this.targetBucketNamespace;
    }
    /**
     * @return The namespace of the bucket where data will be exported.
     * 
     */
    public String targetBucketRegion() {
        return this.targetBucketRegion;
    }
    /**
     * @return The creation date and time of the export setting (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The update date and time of the export setting (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeLastModified() {
        return this.timeLastModified;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetExportSettingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String exportDuration;
        private String exportFrequency;
        private String exportResources;
        private String exportSettingKey;
        private String fleetId;
        private String id;
        private Boolean isCrossRegionAcknowledged;
        private Boolean isEnabled;
        private String targetBucketName;
        private String targetBucketNamespace;
        private String targetBucketRegion;
        private String timeCreated;
        private String timeLastModified;
        public Builder() {}
        public Builder(GetFleetExportSettingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exportDuration = defaults.exportDuration;
    	      this.exportFrequency = defaults.exportFrequency;
    	      this.exportResources = defaults.exportResources;
    	      this.exportSettingKey = defaults.exportSettingKey;
    	      this.fleetId = defaults.fleetId;
    	      this.id = defaults.id;
    	      this.isCrossRegionAcknowledged = defaults.isCrossRegionAcknowledged;
    	      this.isEnabled = defaults.isEnabled;
    	      this.targetBucketName = defaults.targetBucketName;
    	      this.targetBucketNamespace = defaults.targetBucketNamespace;
    	      this.targetBucketRegion = defaults.targetBucketRegion;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastModified = defaults.timeLastModified;
        }

        @CustomType.Setter
        public Builder exportDuration(String exportDuration) {
            this.exportDuration = Objects.requireNonNull(exportDuration);
            return this;
        }
        @CustomType.Setter
        public Builder exportFrequency(String exportFrequency) {
            this.exportFrequency = Objects.requireNonNull(exportFrequency);
            return this;
        }
        @CustomType.Setter
        public Builder exportResources(String exportResources) {
            this.exportResources = Objects.requireNonNull(exportResources);
            return this;
        }
        @CustomType.Setter
        public Builder exportSettingKey(String exportSettingKey) {
            this.exportSettingKey = Objects.requireNonNull(exportSettingKey);
            return this;
        }
        @CustomType.Setter
        public Builder fleetId(String fleetId) {
            this.fleetId = Objects.requireNonNull(fleetId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isCrossRegionAcknowledged(Boolean isCrossRegionAcknowledged) {
            this.isCrossRegionAcknowledged = Objects.requireNonNull(isCrossRegionAcknowledged);
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder targetBucketName(String targetBucketName) {
            this.targetBucketName = Objects.requireNonNull(targetBucketName);
            return this;
        }
        @CustomType.Setter
        public Builder targetBucketNamespace(String targetBucketNamespace) {
            this.targetBucketNamespace = Objects.requireNonNull(targetBucketNamespace);
            return this;
        }
        @CustomType.Setter
        public Builder targetBucketRegion(String targetBucketRegion) {
            this.targetBucketRegion = Objects.requireNonNull(targetBucketRegion);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeLastModified(String timeLastModified) {
            this.timeLastModified = Objects.requireNonNull(timeLastModified);
            return this;
        }
        public GetFleetExportSettingResult build() {
            final var o = new GetFleetExportSettingResult();
            o.exportDuration = exportDuration;
            o.exportFrequency = exportFrequency;
            o.exportResources = exportResources;
            o.exportSettingKey = exportSettingKey;
            o.fleetId = fleetId;
            o.id = id;
            o.isCrossRegionAcknowledged = isCrossRegionAcknowledged;
            o.isEnabled = isEnabled;
            o.targetBucketName = targetBucketName;
            o.targetBucketNamespace = targetBucketNamespace;
            o.targetBucketRegion = targetBucketRegion;
            o.timeCreated = timeCreated;
            o.timeLastModified = timeLastModified;
            return o;
        }
    }
}
