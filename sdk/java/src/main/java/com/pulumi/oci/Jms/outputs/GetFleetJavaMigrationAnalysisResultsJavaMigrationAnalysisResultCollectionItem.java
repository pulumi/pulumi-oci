// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem {
    /**
     * @return Execution type of the application for an application type, such as WAR and EAR, that is deployed or installed.
     * 
     */
    private String applicationExecutionType;
    /**
     * @return The unique key that identifies the application.
     * 
     */
    private String applicationKey;
    /**
     * @return The name of the application.
     * 
     */
    private String applicationName;
    /**
     * @return The installation path of the application for which the Java migration analysis was performed.
     * 
     */
    private String applicationPath;
    /**
     * @return The name of the object storage bucket that contains the results of the migration analysis.
     * 
     */
    private String bucket;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     * 
     */
    private String fleetId;
    /**
     * @return The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     * 
     */
    private String hostName;
    /**
     * @return The OCID of the migration analysis report.
     * 
     */
    private String id;
    /**
     * @return The Fleet-unique identifier of the related managed instance.
     * 
     */
    private String managedInstanceId;
    /**
     * @return Additional info reserved for future use.
     * 
     */
    private String metadata;
    /**
     * @return The object storage namespace that contains the results of the migration analysis.
     * 
     */
    private String namespace;
    /**
     * @return The names of the object storage objects that contain the results of the migration analysis.
     * 
     */
    private List<String> objectLists;
    /**
     * @return The directory path of the object storage bucket that contains the results of the migration analysis.
     * 
     */
    private String objectStorageUploadDirPath;
    /**
     * @return The source JDK version of the application that&#39;s currently running.
     * 
     */
    private String sourceJdkVersion;
    /**
     * @return The target JDK version of the application to be migrated.
     * 
     */
    private String targetJdkVersion;
    /**
     * @return The time the result is compiled.
     * 
     */
    private String timeCreated;
    /**
     * @return The OCID of the work request of this analysis.
     * 
     */
    private String workRequestId;

    private GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem() {}
    /**
     * @return Execution type of the application for an application type, such as WAR and EAR, that is deployed or installed.
     * 
     */
    public String applicationExecutionType() {
        return this.applicationExecutionType;
    }
    /**
     * @return The unique key that identifies the application.
     * 
     */
    public String applicationKey() {
        return this.applicationKey;
    }
    /**
     * @return The name of the application.
     * 
     */
    public String applicationName() {
        return this.applicationName;
    }
    /**
     * @return The installation path of the application for which the Java migration analysis was performed.
     * 
     */
    public String applicationPath() {
        return this.applicationPath;
    }
    /**
     * @return The name of the object storage bucket that contains the results of the migration analysis.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     * 
     */
    public String fleetId() {
        return this.fleetId;
    }
    /**
     * @return The host [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the managed instance.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The OCID of the migration analysis report.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Fleet-unique identifier of the related managed instance.
     * 
     */
    public String managedInstanceId() {
        return this.managedInstanceId;
    }
    /**
     * @return Additional info reserved for future use.
     * 
     */
    public String metadata() {
        return this.metadata;
    }
    /**
     * @return The object storage namespace that contains the results of the migration analysis.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The names of the object storage objects that contain the results of the migration analysis.
     * 
     */
    public List<String> objectLists() {
        return this.objectLists;
    }
    /**
     * @return The directory path of the object storage bucket that contains the results of the migration analysis.
     * 
     */
    public String objectStorageUploadDirPath() {
        return this.objectStorageUploadDirPath;
    }
    /**
     * @return The source JDK version of the application that&#39;s currently running.
     * 
     */
    public String sourceJdkVersion() {
        return this.sourceJdkVersion;
    }
    /**
     * @return The target JDK version of the application to be migrated.
     * 
     */
    public String targetJdkVersion() {
        return this.targetJdkVersion;
    }
    /**
     * @return The time the result is compiled.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The OCID of the work request of this analysis.
     * 
     */
    public String workRequestId() {
        return this.workRequestId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationExecutionType;
        private String applicationKey;
        private String applicationName;
        private String applicationPath;
        private String bucket;
        private String fleetId;
        private String hostName;
        private String id;
        private String managedInstanceId;
        private String metadata;
        private String namespace;
        private List<String> objectLists;
        private String objectStorageUploadDirPath;
        private String sourceJdkVersion;
        private String targetJdkVersion;
        private String timeCreated;
        private String workRequestId;
        public Builder() {}
        public Builder(GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationExecutionType = defaults.applicationExecutionType;
    	      this.applicationKey = defaults.applicationKey;
    	      this.applicationName = defaults.applicationName;
    	      this.applicationPath = defaults.applicationPath;
    	      this.bucket = defaults.bucket;
    	      this.fleetId = defaults.fleetId;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.metadata = defaults.metadata;
    	      this.namespace = defaults.namespace;
    	      this.objectLists = defaults.objectLists;
    	      this.objectStorageUploadDirPath = defaults.objectStorageUploadDirPath;
    	      this.sourceJdkVersion = defaults.sourceJdkVersion;
    	      this.targetJdkVersion = defaults.targetJdkVersion;
    	      this.timeCreated = defaults.timeCreated;
    	      this.workRequestId = defaults.workRequestId;
        }

        @CustomType.Setter
        public Builder applicationExecutionType(String applicationExecutionType) {
            if (applicationExecutionType == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "applicationExecutionType");
            }
            this.applicationExecutionType = applicationExecutionType;
            return this;
        }
        @CustomType.Setter
        public Builder applicationKey(String applicationKey) {
            if (applicationKey == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "applicationKey");
            }
            this.applicationKey = applicationKey;
            return this;
        }
        @CustomType.Setter
        public Builder applicationName(String applicationName) {
            if (applicationName == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "applicationName");
            }
            this.applicationName = applicationName;
            return this;
        }
        @CustomType.Setter
        public Builder applicationPath(String applicationPath) {
            if (applicationPath == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "applicationPath");
            }
            this.applicationPath = applicationPath;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder fleetId(String fleetId) {
            if (fleetId == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "fleetId");
            }
            this.fleetId = fleetId;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(String managedInstanceId) {
            if (managedInstanceId == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "managedInstanceId");
            }
            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(String metadata) {
            if (metadata == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "metadata");
            }
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder objectLists(List<String> objectLists) {
            if (objectLists == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "objectLists");
            }
            this.objectLists = objectLists;
            return this;
        }
        public Builder objectLists(String... objectLists) {
            return objectLists(List.of(objectLists));
        }
        @CustomType.Setter
        public Builder objectStorageUploadDirPath(String objectStorageUploadDirPath) {
            if (objectStorageUploadDirPath == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "objectStorageUploadDirPath");
            }
            this.objectStorageUploadDirPath = objectStorageUploadDirPath;
            return this;
        }
        @CustomType.Setter
        public Builder sourceJdkVersion(String sourceJdkVersion) {
            if (sourceJdkVersion == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "sourceJdkVersion");
            }
            this.sourceJdkVersion = sourceJdkVersion;
            return this;
        }
        @CustomType.Setter
        public Builder targetJdkVersion(String targetJdkVersion) {
            if (targetJdkVersion == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "targetJdkVersion");
            }
            this.targetJdkVersion = targetJdkVersion;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder workRequestId(String workRequestId) {
            if (workRequestId == null) {
              throw new MissingRequiredPropertyException("GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem", "workRequestId");
            }
            this.workRequestId = workRequestId;
            return this;
        }
        public GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem build() {
            final var _resultValue = new GetFleetJavaMigrationAnalysisResultsJavaMigrationAnalysisResultCollectionItem();
            _resultValue.applicationExecutionType = applicationExecutionType;
            _resultValue.applicationKey = applicationKey;
            _resultValue.applicationName = applicationName;
            _resultValue.applicationPath = applicationPath;
            _resultValue.bucket = bucket;
            _resultValue.fleetId = fleetId;
            _resultValue.hostName = hostName;
            _resultValue.id = id;
            _resultValue.managedInstanceId = managedInstanceId;
            _resultValue.metadata = metadata;
            _resultValue.namespace = namespace;
            _resultValue.objectLists = objectLists;
            _resultValue.objectStorageUploadDirPath = objectStorageUploadDirPath;
            _resultValue.sourceJdkVersion = sourceJdkVersion;
            _resultValue.targetJdkVersion = targetJdkVersion;
            _resultValue.timeCreated = timeCreated;
            _resultValue.workRequestId = workRequestId;
            return _resultValue;
        }
    }
}
