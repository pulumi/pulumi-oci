// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem {
    /**
     * @return The count of applications where the specified library was detected.
     * 
     */
    private Integer applicationCount;
    /**
     * @return The timestamp of the first time the specified library was detected in classpath.
     * 
     */
    private String firstSeenInClasspath;
    /**
     * @return The hostname of the managed instance.
     * 
     */
    private String hostname;
    /**
     * @return The date and time a library or Java package was _last_ detected in a dynamic library scan.
     * 
     */
    private String lastDetectedDynamically;
    /**
     * @return The timestamp of the last time the specified library was detected in classpath.
     * 
     */
    private String lastSeenInClasspath;
    /**
     * @return The Fleet-unique identifier of the managed instance.
     * 
     */
    private String managedInstanceId;

    private GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem() {}
    /**
     * @return The count of applications where the specified library was detected.
     * 
     */
    public Integer applicationCount() {
        return this.applicationCount;
    }
    /**
     * @return The timestamp of the first time the specified library was detected in classpath.
     * 
     */
    public String firstSeenInClasspath() {
        return this.firstSeenInClasspath;
    }
    /**
     * @return The hostname of the managed instance.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The date and time a library or Java package was _last_ detected in a dynamic library scan.
     * 
     */
    public String lastDetectedDynamically() {
        return this.lastDetectedDynamically;
    }
    /**
     * @return The timestamp of the last time the specified library was detected in classpath.
     * 
     */
    public String lastSeenInClasspath() {
        return this.lastSeenInClasspath;
    }
    /**
     * @return The Fleet-unique identifier of the managed instance.
     * 
     */
    public String managedInstanceId() {
        return this.managedInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer applicationCount;
        private String firstSeenInClasspath;
        private String hostname;
        private String lastDetectedDynamically;
        private String lastSeenInClasspath;
        private String managedInstanceId;
        public Builder() {}
        public Builder(GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationCount = defaults.applicationCount;
    	      this.firstSeenInClasspath = defaults.firstSeenInClasspath;
    	      this.hostname = defaults.hostname;
    	      this.lastDetectedDynamically = defaults.lastDetectedDynamically;
    	      this.lastSeenInClasspath = defaults.lastSeenInClasspath;
    	      this.managedInstanceId = defaults.managedInstanceId;
        }

        @CustomType.Setter
        public Builder applicationCount(Integer applicationCount) {
            if (applicationCount == null) {
              throw new MissingRequiredPropertyException("GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem", "applicationCount");
            }
            this.applicationCount = applicationCount;
            return this;
        }
        @CustomType.Setter
        public Builder firstSeenInClasspath(String firstSeenInClasspath) {
            if (firstSeenInClasspath == null) {
              throw new MissingRequiredPropertyException("GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem", "firstSeenInClasspath");
            }
            this.firstSeenInClasspath = firstSeenInClasspath;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder lastDetectedDynamically(String lastDetectedDynamically) {
            if (lastDetectedDynamically == null) {
              throw new MissingRequiredPropertyException("GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem", "lastDetectedDynamically");
            }
            this.lastDetectedDynamically = lastDetectedDynamically;
            return this;
        }
        @CustomType.Setter
        public Builder lastSeenInClasspath(String lastSeenInClasspath) {
            if (lastSeenInClasspath == null) {
              throw new MissingRequiredPropertyException("GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem", "lastSeenInClasspath");
            }
            this.lastSeenInClasspath = lastSeenInClasspath;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(String managedInstanceId) {
            if (managedInstanceId == null) {
              throw new MissingRequiredPropertyException("GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem", "managedInstanceId");
            }
            this.managedInstanceId = managedInstanceId;
            return this;
        }
        public GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem build() {
            final var _resultValue = new GetFleetLibraryManagedInstancesLibraryManagedInstanceUsageCollectionItem();
            _resultValue.applicationCount = applicationCount;
            _resultValue.firstSeenInClasspath = firstSeenInClasspath;
            _resultValue.hostname = hostname;
            _resultValue.lastDetectedDynamically = lastDetectedDynamically;
            _resultValue.lastSeenInClasspath = lastSeenInClasspath;
            _resultValue.managedInstanceId = managedInstanceId;
            return _resultValue;
        }
    }
}
