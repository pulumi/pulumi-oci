// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFleetPerformanceTuningAnalysisResultResult {
    /**
     * @return The OCID of the application for which the report has been generated.
     * 
     */
    private @Nullable String applicationId;
    /**
     * @return The internal identifier of the application installation for which the report has been generated.
     * 
     */
    private @Nullable String applicationInstallationId;
    /**
     * @return The installation path of the application for which the report has been generated.
     * 
     */
    private @Nullable String applicationInstallationPath;
    /**
     * @return The name of the application for which the report has been generated.
     * 
     */
    private @Nullable String applicationName;
    /**
     * @return The Object Storage bucket name of this analysis result.
     * 
     */
    private @Nullable String bucket;
    /**
     * @return The fleet OCID.
     * 
     */
    private String fleetId;
    /**
     * @return The hostname of the managed instance.
     * 
     */
    private @Nullable String hostName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The managed instance OCID.
     * 
     */
    private @Nullable String managedInstanceId;
    /**
     * @return The Object Storage namespace of this analysis result.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return The Object Storage object name of this analysis result.
     * 
     */
    private @Nullable String object;
    private String performanceTuningAnalysisResultId;
    /**
     * @return Result of the analysis based on whether warnings have been found or not.
     * 
     */
    private @Nullable String result;
    /**
     * @return The time the result is compiled.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the JFR capture finished.
     * 
     */
    private @Nullable String timeFinished;
    /**
     * @return The time the JFR capture started.
     * 
     */
    private @Nullable String timeStarted;
    /**
     * @return Total number of warnings reported by the analysis.
     * 
     */
    private @Nullable Integer warningCount;
    /**
     * @return The OCID of the work request to start the analysis.
     * 
     */
    private @Nullable String workRequestId;

    private GetFleetPerformanceTuningAnalysisResultResult() {}
    /**
     * @return The OCID of the application for which the report has been generated.
     * 
     */
    public Optional<String> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }
    /**
     * @return The internal identifier of the application installation for which the report has been generated.
     * 
     */
    public Optional<String> applicationInstallationId() {
        return Optional.ofNullable(this.applicationInstallationId);
    }
    /**
     * @return The installation path of the application for which the report has been generated.
     * 
     */
    public Optional<String> applicationInstallationPath() {
        return Optional.ofNullable(this.applicationInstallationPath);
    }
    /**
     * @return The name of the application for which the report has been generated.
     * 
     */
    public Optional<String> applicationName() {
        return Optional.ofNullable(this.applicationName);
    }
    /**
     * @return The Object Storage bucket name of this analysis result.
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return The fleet OCID.
     * 
     */
    public String fleetId() {
        return this.fleetId;
    }
    /**
     * @return The hostname of the managed instance.
     * 
     */
    public Optional<String> hostName() {
        return Optional.ofNullable(this.hostName);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The managed instance OCID.
     * 
     */
    public Optional<String> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }
    /**
     * @return The Object Storage namespace of this analysis result.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return The Object Storage object name of this analysis result.
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }
    public String performanceTuningAnalysisResultId() {
        return this.performanceTuningAnalysisResultId;
    }
    /**
     * @return Result of the analysis based on whether warnings have been found or not.
     * 
     */
    public Optional<String> result() {
        return Optional.ofNullable(this.result);
    }
    /**
     * @return The time the result is compiled.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the JFR capture finished.
     * 
     */
    public Optional<String> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }
    /**
     * @return The time the JFR capture started.
     * 
     */
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }
    /**
     * @return Total number of warnings reported by the analysis.
     * 
     */
    public Optional<Integer> warningCount() {
        return Optional.ofNullable(this.warningCount);
    }
    /**
     * @return The OCID of the work request to start the analysis.
     * 
     */
    public Optional<String> workRequestId() {
        return Optional.ofNullable(this.workRequestId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetPerformanceTuningAnalysisResultResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationId;
        private @Nullable String applicationInstallationId;
        private @Nullable String applicationInstallationPath;
        private @Nullable String applicationName;
        private @Nullable String bucket;
        private String fleetId;
        private @Nullable String hostName;
        private @Nullable String id;
        private @Nullable String managedInstanceId;
        private @Nullable String namespace;
        private @Nullable String object;
        private String performanceTuningAnalysisResultId;
        private @Nullable String result;
        private @Nullable String timeCreated;
        private @Nullable String timeFinished;
        private @Nullable String timeStarted;
        private @Nullable Integer warningCount;
        private @Nullable String workRequestId;
        public Builder() {}
        public Builder(GetFleetPerformanceTuningAnalysisResultResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.applicationInstallationId = defaults.applicationInstallationId;
    	      this.applicationInstallationPath = defaults.applicationInstallationPath;
    	      this.applicationName = defaults.applicationName;
    	      this.bucket = defaults.bucket;
    	      this.fleetId = defaults.fleetId;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.performanceTuningAnalysisResultId = defaults.performanceTuningAnalysisResultId;
    	      this.result = defaults.result;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeFinished = defaults.timeFinished;
    	      this.timeStarted = defaults.timeStarted;
    	      this.warningCount = defaults.warningCount;
    	      this.workRequestId = defaults.workRequestId;
        }

        @CustomType.Setter
        public Builder applicationId(@Nullable String applicationId) {
            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder applicationInstallationId(@Nullable String applicationInstallationId) {
            this.applicationInstallationId = applicationInstallationId;
            return this;
        }
        @CustomType.Setter
        public Builder applicationInstallationPath(@Nullable String applicationInstallationPath) {
            this.applicationInstallationPath = applicationInstallationPath;
            return this;
        }
        @CustomType.Setter
        public Builder applicationName(@Nullable String applicationName) {
            this.applicationName = applicationName;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder fleetId(String fleetId) {
            this.fleetId = Objects.requireNonNull(fleetId);
            return this;
        }
        @CustomType.Setter
        public Builder hostName(@Nullable String hostName) {
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(@Nullable String managedInstanceId) {
            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder object(@Nullable String object) {
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder performanceTuningAnalysisResultId(String performanceTuningAnalysisResultId) {
            this.performanceTuningAnalysisResultId = Objects.requireNonNull(performanceTuningAnalysisResultId);
            return this;
        }
        @CustomType.Setter
        public Builder result(@Nullable String result) {
            this.result = result;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(@Nullable String timeFinished) {
            this.timeFinished = timeFinished;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {
            this.timeStarted = timeStarted;
            return this;
        }
        @CustomType.Setter
        public Builder warningCount(@Nullable Integer warningCount) {
            this.warningCount = warningCount;
            return this;
        }
        @CustomType.Setter
        public Builder workRequestId(@Nullable String workRequestId) {
            this.workRequestId = workRequestId;
            return this;
        }
        public GetFleetPerformanceTuningAnalysisResultResult build() {
            final var o = new GetFleetPerformanceTuningAnalysisResultResult();
            o.applicationId = applicationId;
            o.applicationInstallationId = applicationInstallationId;
            o.applicationInstallationPath = applicationInstallationPath;
            o.applicationName = applicationName;
            o.bucket = bucket;
            o.fleetId = fleetId;
            o.hostName = hostName;
            o.id = id;
            o.managedInstanceId = managedInstanceId;
            o.namespace = namespace;
            o.object = object;
            o.performanceTuningAnalysisResultId = performanceTuningAnalysisResultId;
            o.result = result;
            o.timeCreated = timeCreated;
            o.timeFinished = timeFinished;
            o.timeStarted = timeStarted;
            o.warningCount = warningCount;
            o.workRequestId = workRequestId;
            return o;
        }
    }
}
