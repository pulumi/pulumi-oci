// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFleetSummarizeLibraryInventoryResult {
    private @Nullable String applicationId;
    private Integer dynamicallyDetectedLibraryCount;
    private @Nullable String fleetId;
    private Integer highSeverityLibraryCount;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Integer lowSeverityLibraryCount;
    private @Nullable String managedInstanceId;
    private Integer mediumSeverityLibraryCount;
    private Integer staticallyDetectedLibraryCount;
    private @Nullable String timeEnd;
    private @Nullable String timeStart;
    private Integer uncorrelatedPackageCount;

    private GetFleetSummarizeLibraryInventoryResult() {}
    public Optional<String> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }
    public Integer dynamicallyDetectedLibraryCount() {
        return this.dynamicallyDetectedLibraryCount;
    }
    public Optional<String> fleetId() {
        return Optional.ofNullable(this.fleetId);
    }
    public Integer highSeverityLibraryCount() {
        return this.highSeverityLibraryCount;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Integer lowSeverityLibraryCount() {
        return this.lowSeverityLibraryCount;
    }
    public Optional<String> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }
    public Integer mediumSeverityLibraryCount() {
        return this.mediumSeverityLibraryCount;
    }
    public Integer staticallyDetectedLibraryCount() {
        return this.staticallyDetectedLibraryCount;
    }
    public Optional<String> timeEnd() {
        return Optional.ofNullable(this.timeEnd);
    }
    public Optional<String> timeStart() {
        return Optional.ofNullable(this.timeStart);
    }
    public Integer uncorrelatedPackageCount() {
        return this.uncorrelatedPackageCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetSummarizeLibraryInventoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applicationId;
        private Integer dynamicallyDetectedLibraryCount;
        private @Nullable String fleetId;
        private Integer highSeverityLibraryCount;
        private String id;
        private Integer lowSeverityLibraryCount;
        private @Nullable String managedInstanceId;
        private Integer mediumSeverityLibraryCount;
        private Integer staticallyDetectedLibraryCount;
        private @Nullable String timeEnd;
        private @Nullable String timeStart;
        private Integer uncorrelatedPackageCount;
        public Builder() {}
        public Builder(GetFleetSummarizeLibraryInventoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.dynamicallyDetectedLibraryCount = defaults.dynamicallyDetectedLibraryCount;
    	      this.fleetId = defaults.fleetId;
    	      this.highSeverityLibraryCount = defaults.highSeverityLibraryCount;
    	      this.id = defaults.id;
    	      this.lowSeverityLibraryCount = defaults.lowSeverityLibraryCount;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.mediumSeverityLibraryCount = defaults.mediumSeverityLibraryCount;
    	      this.staticallyDetectedLibraryCount = defaults.staticallyDetectedLibraryCount;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
    	      this.uncorrelatedPackageCount = defaults.uncorrelatedPackageCount;
        }

        @CustomType.Setter
        public Builder applicationId(@Nullable String applicationId) {

            this.applicationId = applicationId;
            return this;
        }
        @CustomType.Setter
        public Builder dynamicallyDetectedLibraryCount(Integer dynamicallyDetectedLibraryCount) {
            if (dynamicallyDetectedLibraryCount == null) {
              throw new MissingRequiredPropertyException("GetFleetSummarizeLibraryInventoryResult", "dynamicallyDetectedLibraryCount");
            }
            this.dynamicallyDetectedLibraryCount = dynamicallyDetectedLibraryCount;
            return this;
        }
        @CustomType.Setter
        public Builder fleetId(@Nullable String fleetId) {

            this.fleetId = fleetId;
            return this;
        }
        @CustomType.Setter
        public Builder highSeverityLibraryCount(Integer highSeverityLibraryCount) {
            if (highSeverityLibraryCount == null) {
              throw new MissingRequiredPropertyException("GetFleetSummarizeLibraryInventoryResult", "highSeverityLibraryCount");
            }
            this.highSeverityLibraryCount = highSeverityLibraryCount;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFleetSummarizeLibraryInventoryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lowSeverityLibraryCount(Integer lowSeverityLibraryCount) {
            if (lowSeverityLibraryCount == null) {
              throw new MissingRequiredPropertyException("GetFleetSummarizeLibraryInventoryResult", "lowSeverityLibraryCount");
            }
            this.lowSeverityLibraryCount = lowSeverityLibraryCount;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(@Nullable String managedInstanceId) {

            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder mediumSeverityLibraryCount(Integer mediumSeverityLibraryCount) {
            if (mediumSeverityLibraryCount == null) {
              throw new MissingRequiredPropertyException("GetFleetSummarizeLibraryInventoryResult", "mediumSeverityLibraryCount");
            }
            this.mediumSeverityLibraryCount = mediumSeverityLibraryCount;
            return this;
        }
        @CustomType.Setter
        public Builder staticallyDetectedLibraryCount(Integer staticallyDetectedLibraryCount) {
            if (staticallyDetectedLibraryCount == null) {
              throw new MissingRequiredPropertyException("GetFleetSummarizeLibraryInventoryResult", "staticallyDetectedLibraryCount");
            }
            this.staticallyDetectedLibraryCount = staticallyDetectedLibraryCount;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(@Nullable String timeEnd) {

            this.timeEnd = timeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(@Nullable String timeStart) {

            this.timeStart = timeStart;
            return this;
        }
        @CustomType.Setter
        public Builder uncorrelatedPackageCount(Integer uncorrelatedPackageCount) {
            if (uncorrelatedPackageCount == null) {
              throw new MissingRequiredPropertyException("GetFleetSummarizeLibraryInventoryResult", "uncorrelatedPackageCount");
            }
            this.uncorrelatedPackageCount = uncorrelatedPackageCount;
            return this;
        }
        public GetFleetSummarizeLibraryInventoryResult build() {
            final var _resultValue = new GetFleetSummarizeLibraryInventoryResult();
            _resultValue.applicationId = applicationId;
            _resultValue.dynamicallyDetectedLibraryCount = dynamicallyDetectedLibraryCount;
            _resultValue.fleetId = fleetId;
            _resultValue.highSeverityLibraryCount = highSeverityLibraryCount;
            _resultValue.id = id;
            _resultValue.lowSeverityLibraryCount = lowSeverityLibraryCount;
            _resultValue.managedInstanceId = managedInstanceId;
            _resultValue.mediumSeverityLibraryCount = mediumSeverityLibraryCount;
            _resultValue.staticallyDetectedLibraryCount = staticallyDetectedLibraryCount;
            _resultValue.timeEnd = timeEnd;
            _resultValue.timeStart = timeStart;
            _resultValue.uncorrelatedPackageCount = uncorrelatedPackageCount;
            return _resultValue;
        }
    }
}
