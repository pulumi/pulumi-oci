// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItem {
    /**
     * @return The internal identifier of a Java application.
     * 
     */
    private String applicationKey;
    /**
     * @return The displayed name of the Java application.
     * 
     */
    private String applicationName;
    /**
     * @return The date and time a library or Java package was _last_ detected in a dynamic library scan.
     * 
     */
    private String lastDetectedDynamically;
    /**
     * @return The count of managed instances wherein the specified library was detected.
     * 
     */
    private Integer managedInstanceCount;

    private GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItem() {}
    /**
     * @return The internal identifier of a Java application.
     * 
     */
    public String applicationKey() {
        return this.applicationKey;
    }
    /**
     * @return The displayed name of the Java application.
     * 
     */
    public String applicationName() {
        return this.applicationName;
    }
    /**
     * @return The date and time a library or Java package was _last_ detected in a dynamic library scan.
     * 
     */
    public String lastDetectedDynamically() {
        return this.lastDetectedDynamically;
    }
    /**
     * @return The count of managed instances wherein the specified library was detected.
     * 
     */
    public Integer managedInstanceCount() {
        return this.managedInstanceCount;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationKey;
        private String applicationName;
        private String lastDetectedDynamically;
        private Integer managedInstanceCount;
        public Builder() {}
        public Builder(GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationKey = defaults.applicationKey;
    	      this.applicationName = defaults.applicationName;
    	      this.lastDetectedDynamically = defaults.lastDetectedDynamically;
    	      this.managedInstanceCount = defaults.managedInstanceCount;
        }

        @CustomType.Setter
        public Builder applicationKey(String applicationKey) {
            if (applicationKey == null) {
              throw new MissingRequiredPropertyException("GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItem", "applicationKey");
            }
            this.applicationKey = applicationKey;
            return this;
        }
        @CustomType.Setter
        public Builder applicationName(String applicationName) {
            if (applicationName == null) {
              throw new MissingRequiredPropertyException("GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItem", "applicationName");
            }
            this.applicationName = applicationName;
            return this;
        }
        @CustomType.Setter
        public Builder lastDetectedDynamically(String lastDetectedDynamically) {
            if (lastDetectedDynamically == null) {
              throw new MissingRequiredPropertyException("GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItem", "lastDetectedDynamically");
            }
            this.lastDetectedDynamically = lastDetectedDynamically;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceCount(Integer managedInstanceCount) {
            if (managedInstanceCount == null) {
              throw new MissingRequiredPropertyException("GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItem", "managedInstanceCount");
            }
            this.managedInstanceCount = managedInstanceCount;
            return this;
        }
        public GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItem build() {
            final var _resultValue = new GetFleetUncorrelatedPackageApplicationsUncorrelatedPackageApplicationUsageCollectionItem();
            _resultValue.applicationKey = applicationKey;
            _resultValue.applicationName = applicationName;
            _resultValue.lastDetectedDynamically = lastDetectedDynamically;
            _resultValue.managedInstanceCount = managedInstanceCount;
            return _resultValue;
        }
    }
}
