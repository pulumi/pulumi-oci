// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItem {
    /**
     * @return The count of applications wherein the specified package was detected.
     * 
     */
    private Integer applicationCount;
    /**
     * @return The date and time a library or Java package was _last_ detected in a dynamic library scan.
     * 
     */
    private String lastDetectedDynamically;
    /**
     * @return The count of managed instances wherein the specified package was detected.
     * 
     */
    private Integer managedInstanceCount;
    /**
     * @return The unique identifier of a Java package.
     * 
     */
    private String packageName;

    private GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItem() {}
    /**
     * @return The count of applications wherein the specified package was detected.
     * 
     */
    public Integer applicationCount() {
        return this.applicationCount;
    }
    /**
     * @return The date and time a library or Java package was _last_ detected in a dynamic library scan.
     * 
     */
    public String lastDetectedDynamically() {
        return this.lastDetectedDynamically;
    }
    /**
     * @return The count of managed instances wherein the specified package was detected.
     * 
     */
    public Integer managedInstanceCount() {
        return this.managedInstanceCount;
    }
    /**
     * @return The unique identifier of a Java package.
     * 
     */
    public String packageName() {
        return this.packageName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer applicationCount;
        private String lastDetectedDynamically;
        private Integer managedInstanceCount;
        private String packageName;
        public Builder() {}
        public Builder(GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationCount = defaults.applicationCount;
    	      this.lastDetectedDynamically = defaults.lastDetectedDynamically;
    	      this.managedInstanceCount = defaults.managedInstanceCount;
    	      this.packageName = defaults.packageName;
        }

        @CustomType.Setter
        public Builder applicationCount(Integer applicationCount) {
            if (applicationCount == null) {
              throw new MissingRequiredPropertyException("GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItem", "applicationCount");
            }
            this.applicationCount = applicationCount;
            return this;
        }
        @CustomType.Setter
        public Builder lastDetectedDynamically(String lastDetectedDynamically) {
            if (lastDetectedDynamically == null) {
              throw new MissingRequiredPropertyException("GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItem", "lastDetectedDynamically");
            }
            this.lastDetectedDynamically = lastDetectedDynamically;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceCount(Integer managedInstanceCount) {
            if (managedInstanceCount == null) {
              throw new MissingRequiredPropertyException("GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItem", "managedInstanceCount");
            }
            this.managedInstanceCount = managedInstanceCount;
            return this;
        }
        @CustomType.Setter
        public Builder packageName(String packageName) {
            if (packageName == null) {
              throw new MissingRequiredPropertyException("GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItem", "packageName");
            }
            this.packageName = packageName;
            return this;
        }
        public GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItem build() {
            final var _resultValue = new GetFleetUncorrelatedPackagesUncorrelatedPackageUsageCollectionItem();
            _resultValue.applicationCount = applicationCount;
            _resultValue.lastDetectedDynamically = lastDetectedDynamically;
            _resultValue.managedInstanceCount = managedInstanceCount;
            _resultValue.packageName = packageName;
            return _resultValue;
        }
    }
}
