// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetInstallationSiteItemOperatingSystem {
    /**
     * @return The architecture of the operating system as provided by the Java system property os.arch.
     * 
     */
    private @Nullable String architecture;
    /**
     * @return The operating system type, such as Windows or Linux
     * 
     */
    private @Nullable String family;
    /**
     * @return Number of instances running the operating system
     * 
     */
    private @Nullable Integer managedInstanceCount;
    /**
     * @return The name of the operating system as provided by the Java system property os.name.
     * 
     */
    private @Nullable String name;
    /**
     * @return The version of the operating system as provided by the Java system property os.version.
     * 
     */
    private @Nullable String version;

    private GetInstallationSiteItemOperatingSystem() {}
    /**
     * @return The architecture of the operating system as provided by the Java system property os.arch.
     * 
     */
    public Optional<String> architecture() {
        return Optional.ofNullable(this.architecture);
    }
    /**
     * @return The operating system type, such as Windows or Linux
     * 
     */
    public Optional<String> family() {
        return Optional.ofNullable(this.family);
    }
    /**
     * @return Number of instances running the operating system
     * 
     */
    public Optional<Integer> managedInstanceCount() {
        return Optional.ofNullable(this.managedInstanceCount);
    }
    /**
     * @return The name of the operating system as provided by the Java system property os.name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The version of the operating system as provided by the Java system property os.version.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstallationSiteItemOperatingSystem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String architecture;
        private @Nullable String family;
        private @Nullable Integer managedInstanceCount;
        private @Nullable String name;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetInstallationSiteItemOperatingSystem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.family = defaults.family;
    	      this.managedInstanceCount = defaults.managedInstanceCount;
    	      this.name = defaults.name;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder architecture(@Nullable String architecture) {
            this.architecture = architecture;
            return this;
        }
        @CustomType.Setter
        public Builder family(@Nullable String family) {
            this.family = family;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceCount(@Nullable Integer managedInstanceCount) {
            this.managedInstanceCount = managedInstanceCount;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetInstallationSiteItemOperatingSystem build() {
            final var o = new GetInstallationSiteItemOperatingSystem();
            o.architecture = architecture;
            o.family = family;
            o.managedInstanceCount = managedInstanceCount;
            o.name = name;
            o.version = version;
            return o;
        }
    }
}
