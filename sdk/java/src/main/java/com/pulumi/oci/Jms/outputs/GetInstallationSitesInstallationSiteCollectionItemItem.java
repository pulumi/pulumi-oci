// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Jms.outputs.GetInstallationSitesInstallationSiteCollectionItemItemBlocklist;
import com.pulumi.oci.Jms.outputs.GetInstallationSitesInstallationSiteCollectionItemItemJre;
import com.pulumi.oci.Jms.outputs.GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystem;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetInstallationSitesInstallationSiteCollectionItemItem {
    /**
     * @return The approximate count of applications running on this installation
     * 
     */
    private Integer approximateApplicationCount;
    /**
     * @return The list of operations that are blocklisted.
     * 
     */
    private List<GetInstallationSitesInstallationSiteCollectionItemItemBlocklist> blocklists;
    /**
     * @return The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
     * 
     */
    private String installationKey;
    /**
     * @return The essential properties to identify a Java Runtime.
     * 
     */
    private List<GetInstallationSitesInstallationSiteCollectionItemItemJre> jres;
    /**
     * @return The Fleet-unique identifier of the related managed instance.
     * 
     */
    private String managedInstanceId;
    /**
     * @return Operating System of the platform on which the Java Runtime was reported.
     * 
     */
    private List<GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystem> operatingSystems;
    /**
     * @return The file system path of the installation.
     * 
     */
    private String path;
    /**
     * @return The security status of the Java Runtime.
     * 
     */
    private String securityStatus;
    /**
     * @return The lifecycle state of the installation site.
     * 
     */
    private String state;
    /**
     * @return The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
     * 
     */
    private String timeLastSeen;

    private GetInstallationSitesInstallationSiteCollectionItemItem() {}
    /**
     * @return The approximate count of applications running on this installation
     * 
     */
    public Integer approximateApplicationCount() {
        return this.approximateApplicationCount;
    }
    /**
     * @return The list of operations that are blocklisted.
     * 
     */
    public List<GetInstallationSitesInstallationSiteCollectionItemItemBlocklist> blocklists() {
        return this.blocklists;
    }
    /**
     * @return The unique identifier for the installation of Java Runtime at a specific path on a specific operating system.
     * 
     */
    public String installationKey() {
        return this.installationKey;
    }
    /**
     * @return The essential properties to identify a Java Runtime.
     * 
     */
    public List<GetInstallationSitesInstallationSiteCollectionItemItemJre> jres() {
        return this.jres;
    }
    /**
     * @return The Fleet-unique identifier of the related managed instance.
     * 
     */
    public String managedInstanceId() {
        return this.managedInstanceId;
    }
    /**
     * @return Operating System of the platform on which the Java Runtime was reported.
     * 
     */
    public List<GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystem> operatingSystems() {
        return this.operatingSystems;
    }
    /**
     * @return The file system path of the installation.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return The security status of the Java Runtime.
     * 
     */
    public String securityStatus() {
        return this.securityStatus;
    }
    /**
     * @return The lifecycle state of the installation site.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the resource was _last_ reported to JMS. This is potentially _after_ the specified time period provided by the filters. For example, a resource can be last reported to JMS before the start of a specified time period, if it is also reported during the time period.
     * 
     */
    public String timeLastSeen() {
        return this.timeLastSeen;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstallationSitesInstallationSiteCollectionItemItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer approximateApplicationCount;
        private List<GetInstallationSitesInstallationSiteCollectionItemItemBlocklist> blocklists;
        private String installationKey;
        private List<GetInstallationSitesInstallationSiteCollectionItemItemJre> jres;
        private String managedInstanceId;
        private List<GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystem> operatingSystems;
        private String path;
        private String securityStatus;
        private String state;
        private String timeLastSeen;
        public Builder() {}
        public Builder(GetInstallationSitesInstallationSiteCollectionItemItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.approximateApplicationCount = defaults.approximateApplicationCount;
    	      this.blocklists = defaults.blocklists;
    	      this.installationKey = defaults.installationKey;
    	      this.jres = defaults.jres;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.operatingSystems = defaults.operatingSystems;
    	      this.path = defaults.path;
    	      this.securityStatus = defaults.securityStatus;
    	      this.state = defaults.state;
    	      this.timeLastSeen = defaults.timeLastSeen;
        }

        @CustomType.Setter
        public Builder approximateApplicationCount(Integer approximateApplicationCount) {
            this.approximateApplicationCount = Objects.requireNonNull(approximateApplicationCount);
            return this;
        }
        @CustomType.Setter
        public Builder blocklists(List<GetInstallationSitesInstallationSiteCollectionItemItemBlocklist> blocklists) {
            this.blocklists = Objects.requireNonNull(blocklists);
            return this;
        }
        public Builder blocklists(GetInstallationSitesInstallationSiteCollectionItemItemBlocklist... blocklists) {
            return blocklists(List.of(blocklists));
        }
        @CustomType.Setter
        public Builder installationKey(String installationKey) {
            this.installationKey = Objects.requireNonNull(installationKey);
            return this;
        }
        @CustomType.Setter
        public Builder jres(List<GetInstallationSitesInstallationSiteCollectionItemItemJre> jres) {
            this.jres = Objects.requireNonNull(jres);
            return this;
        }
        public Builder jres(GetInstallationSitesInstallationSiteCollectionItemItemJre... jres) {
            return jres(List.of(jres));
        }
        @CustomType.Setter
        public Builder managedInstanceId(String managedInstanceId) {
            this.managedInstanceId = Objects.requireNonNull(managedInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder operatingSystems(List<GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystem> operatingSystems) {
            this.operatingSystems = Objects.requireNonNull(operatingSystems);
            return this;
        }
        public Builder operatingSystems(GetInstallationSitesInstallationSiteCollectionItemItemOperatingSystem... operatingSystems) {
            return operatingSystems(List.of(operatingSystems));
        }
        @CustomType.Setter
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        @CustomType.Setter
        public Builder securityStatus(String securityStatus) {
            this.securityStatus = Objects.requireNonNull(securityStatus);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSeen(String timeLastSeen) {
            this.timeLastSeen = Objects.requireNonNull(timeLastSeen);
            return this;
        }
        public GetInstallationSitesInstallationSiteCollectionItemItem build() {
            final var o = new GetInstallationSitesInstallationSiteCollectionItemItem();
            o.approximateApplicationCount = approximateApplicationCount;
            o.blocklists = blocklists;
            o.installationKey = installationKey;
            o.jres = jres;
            o.managedInstanceId = managedInstanceId;
            o.operatingSystems = operatingSystems;
            o.path = path;
            o.securityStatus = securityStatus;
            o.state = state;
            o.timeLastSeen = timeLastSeen;
            return o;
        }
    }
}
