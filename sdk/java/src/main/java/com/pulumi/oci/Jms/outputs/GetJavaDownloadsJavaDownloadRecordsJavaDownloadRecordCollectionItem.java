// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem {
    /**
     * @return Target Operating System architecture of the artifact.
     * 
     */
    private String architecture;
    /**
     * @return Identifier of the source that downloaded the artifact.
     * 
     */
    private String downloadSourceId;
    /**
     * @return Type of download.
     * 
     */
    private String downloadType;
    /**
     * @return The Java family display name.
     * 
     */
    private String familyDisplayName;
    /**
     * @return Unique Java family version identifier.
     * 
     */
    private String familyVersion;
    /**
     * @return Target Operating System family of the artifact.
     * 
     */
    private String osFamily;
    /**
     * @return The package type (typically the file extension) of the artifact.
     * 
     */
    private String packageType;
    /**
     * @return Packaging type detail of the artifact.
     * 
     */
    private String packageTypeDetail;
    /**
     * @return Unique Java release version identifier.
     * 
     */
    private String releaseVersion;
    /**
     * @return Timestamp of download.
     * 
     */
    private String timeDownloaded;

    private GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem() {}
    /**
     * @return Target Operating System architecture of the artifact.
     * 
     */
    public String architecture() {
        return this.architecture;
    }
    /**
     * @return Identifier of the source that downloaded the artifact.
     * 
     */
    public String downloadSourceId() {
        return this.downloadSourceId;
    }
    /**
     * @return Type of download.
     * 
     */
    public String downloadType() {
        return this.downloadType;
    }
    /**
     * @return The Java family display name.
     * 
     */
    public String familyDisplayName() {
        return this.familyDisplayName;
    }
    /**
     * @return Unique Java family version identifier.
     * 
     */
    public String familyVersion() {
        return this.familyVersion;
    }
    /**
     * @return Target Operating System family of the artifact.
     * 
     */
    public String osFamily() {
        return this.osFamily;
    }
    /**
     * @return The package type (typically the file extension) of the artifact.
     * 
     */
    public String packageType() {
        return this.packageType;
    }
    /**
     * @return Packaging type detail of the artifact.
     * 
     */
    public String packageTypeDetail() {
        return this.packageTypeDetail;
    }
    /**
     * @return Unique Java release version identifier.
     * 
     */
    public String releaseVersion() {
        return this.releaseVersion;
    }
    /**
     * @return Timestamp of download.
     * 
     */
    public String timeDownloaded() {
        return this.timeDownloaded;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String architecture;
        private String downloadSourceId;
        private String downloadType;
        private String familyDisplayName;
        private String familyVersion;
        private String osFamily;
        private String packageType;
        private String packageTypeDetail;
        private String releaseVersion;
        private String timeDownloaded;
        public Builder() {}
        public Builder(GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.downloadSourceId = defaults.downloadSourceId;
    	      this.downloadType = defaults.downloadType;
    	      this.familyDisplayName = defaults.familyDisplayName;
    	      this.familyVersion = defaults.familyVersion;
    	      this.osFamily = defaults.osFamily;
    	      this.packageType = defaults.packageType;
    	      this.packageTypeDetail = defaults.packageTypeDetail;
    	      this.releaseVersion = defaults.releaseVersion;
    	      this.timeDownloaded = defaults.timeDownloaded;
        }

        @CustomType.Setter
        public Builder architecture(String architecture) {
            if (architecture == null) {
              throw new MissingRequiredPropertyException("GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem", "architecture");
            }
            this.architecture = architecture;
            return this;
        }
        @CustomType.Setter
        public Builder downloadSourceId(String downloadSourceId) {
            if (downloadSourceId == null) {
              throw new MissingRequiredPropertyException("GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem", "downloadSourceId");
            }
            this.downloadSourceId = downloadSourceId;
            return this;
        }
        @CustomType.Setter
        public Builder downloadType(String downloadType) {
            if (downloadType == null) {
              throw new MissingRequiredPropertyException("GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem", "downloadType");
            }
            this.downloadType = downloadType;
            return this;
        }
        @CustomType.Setter
        public Builder familyDisplayName(String familyDisplayName) {
            if (familyDisplayName == null) {
              throw new MissingRequiredPropertyException("GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem", "familyDisplayName");
            }
            this.familyDisplayName = familyDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder familyVersion(String familyVersion) {
            if (familyVersion == null) {
              throw new MissingRequiredPropertyException("GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem", "familyVersion");
            }
            this.familyVersion = familyVersion;
            return this;
        }
        @CustomType.Setter
        public Builder osFamily(String osFamily) {
            if (osFamily == null) {
              throw new MissingRequiredPropertyException("GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem", "osFamily");
            }
            this.osFamily = osFamily;
            return this;
        }
        @CustomType.Setter
        public Builder packageType(String packageType) {
            if (packageType == null) {
              throw new MissingRequiredPropertyException("GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem", "packageType");
            }
            this.packageType = packageType;
            return this;
        }
        @CustomType.Setter
        public Builder packageTypeDetail(String packageTypeDetail) {
            if (packageTypeDetail == null) {
              throw new MissingRequiredPropertyException("GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem", "packageTypeDetail");
            }
            this.packageTypeDetail = packageTypeDetail;
            return this;
        }
        @CustomType.Setter
        public Builder releaseVersion(String releaseVersion) {
            if (releaseVersion == null) {
              throw new MissingRequiredPropertyException("GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem", "releaseVersion");
            }
            this.releaseVersion = releaseVersion;
            return this;
        }
        @CustomType.Setter
        public Builder timeDownloaded(String timeDownloaded) {
            if (timeDownloaded == null) {
              throw new MissingRequiredPropertyException("GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem", "timeDownloaded");
            }
            this.timeDownloaded = timeDownloaded;
            return this;
        }
        public GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem build() {
            final var _resultValue = new GetJavaDownloadsJavaDownloadRecordsJavaDownloadRecordCollectionItem();
            _resultValue.architecture = architecture;
            _resultValue.downloadSourceId = downloadSourceId;
            _resultValue.downloadType = downloadType;
            _resultValue.familyDisplayName = familyDisplayName;
            _resultValue.familyVersion = familyVersion;
            _resultValue.osFamily = osFamily;
            _resultValue.packageType = packageType;
            _resultValue.packageTypeDetail = packageTypeDetail;
            _resultValue.releaseVersion = releaseVersion;
            _resultValue.timeDownloaded = timeDownloaded;
            return _resultValue;
        }
    }
}
