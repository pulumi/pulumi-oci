// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Jms.outputs.GetJavaFamiliesFilter;
import com.pulumi.oci.Jms.outputs.GetJavaFamiliesJavaFamilyCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetJavaFamiliesResult {
    /**
     * @return The display name of the release family.
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return The Java release family identifier.
     * 
     */
    private final @Nullable String familyVersion;
    private final @Nullable List<GetJavaFamiliesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of java_family_collection.
     * 
     */
    private final List<GetJavaFamiliesJavaFamilyCollection> javaFamilyCollections;

    @CustomType.Constructor
    private GetJavaFamiliesResult(
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("familyVersion") @Nullable String familyVersion,
        @CustomType.Parameter("filters") @Nullable List<GetJavaFamiliesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("javaFamilyCollections") List<GetJavaFamiliesJavaFamilyCollection> javaFamilyCollections) {
        this.displayName = displayName;
        this.familyVersion = familyVersion;
        this.filters = filters;
        this.id = id;
        this.javaFamilyCollections = javaFamilyCollections;
    }

    /**
     * @return The display name of the release family.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The Java release family identifier.
     * 
     */
    public Optional<String> familyVersion() {
        return Optional.ofNullable(this.familyVersion);
    }
    public List<GetJavaFamiliesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of java_family_collection.
     * 
     */
    public List<GetJavaFamiliesJavaFamilyCollection> javaFamilyCollections() {
        return this.javaFamilyCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJavaFamiliesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String displayName;
        private @Nullable String familyVersion;
        private @Nullable List<GetJavaFamiliesFilter> filters;
        private String id;
        private List<GetJavaFamiliesJavaFamilyCollection> javaFamilyCollections;

        public Builder() {
    	      // Empty
        }

        public Builder(GetJavaFamiliesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.familyVersion = defaults.familyVersion;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.javaFamilyCollections = defaults.javaFamilyCollections;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder familyVersion(@Nullable String familyVersion) {
            this.familyVersion = familyVersion;
            return this;
        }
        public Builder filters(@Nullable List<GetJavaFamiliesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetJavaFamiliesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder javaFamilyCollections(List<GetJavaFamiliesJavaFamilyCollection> javaFamilyCollections) {
            this.javaFamilyCollections = Objects.requireNonNull(javaFamilyCollections);
            return this;
        }
        public Builder javaFamilyCollections(GetJavaFamiliesJavaFamilyCollection... javaFamilyCollections) {
            return javaFamilyCollections(List.of(javaFamilyCollections));
        }        public GetJavaFamiliesResult build() {
            return new GetJavaFamiliesResult(displayName, familyVersion, filters, id, javaFamilyCollections);
        }
    }
}
