// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.outputs.GetJmsPluginsFilter;
import com.pulumi.oci.Jms.outputs.GetJmsPluginsJmsPluginCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetJmsPluginsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent (OMA), the Oracle Cloud Agent (OCA), or the Oracle Container Management Agent (OCMA) instance where the JMS plugin is deployed.
     * 
     */
    private @Nullable String agentId;
    /**
     * @return The agent type.
     * 
     */
    private @Nullable String agentType;
    /**
     * @return The availability status.
     * 
     */
    private @Nullable String availabilityStatus;
    /**
     * @return The OMA/OCA/OCMA agent&#39;s compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    private @Nullable List<GetJmsPluginsFilter> filters;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet.
     * 
     */
    private @Nullable String fleetId;
    private @Nullable String hostnameContains;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this JmsPlugin.
     * 
     */
    private @Nullable String id;
    /**
     * @return The list of jms_plugin_collection.
     * 
     */
    private List<GetJmsPluginsJmsPluginCollection> jmsPluginCollections;
    /**
     * @return The lifecycle state.
     * 
     */
    private @Nullable String state;
    private @Nullable String timeLastSeenLessThanOrEqualTo;
    private @Nullable String timeRegisteredLessThanOrEqualTo;

    private GetJmsPluginsResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Management Agent (OMA), the Oracle Cloud Agent (OCA), or the Oracle Container Management Agent (OCMA) instance where the JMS plugin is deployed.
     * 
     */
    public Optional<String> agentId() {
        return Optional.ofNullable(this.agentId);
    }
    /**
     * @return The agent type.
     * 
     */
    public Optional<String> agentType() {
        return Optional.ofNullable(this.agentType);
    }
    /**
     * @return The availability status.
     * 
     */
    public Optional<String> availabilityStatus() {
        return Optional.ofNullable(this.availabilityStatus);
    }
    /**
     * @return The OMA/OCA/OCMA agent&#39;s compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    public List<GetJmsPluginsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the fleet.
     * 
     */
    public Optional<String> fleetId() {
        return Optional.ofNullable(this.fleetId);
    }
    public Optional<String> hostnameContains() {
        return Optional.ofNullable(this.hostnameContains);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) to identify this JmsPlugin.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The list of jms_plugin_collection.
     * 
     */
    public List<GetJmsPluginsJmsPluginCollection> jmsPluginCollections() {
        return this.jmsPluginCollections;
    }
    /**
     * @return The lifecycle state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> timeLastSeenLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeLastSeenLessThanOrEqualTo);
    }
    public Optional<String> timeRegisteredLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeRegisteredLessThanOrEqualTo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJmsPluginsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String agentId;
        private @Nullable String agentType;
        private @Nullable String availabilityStatus;
        private @Nullable String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable List<GetJmsPluginsFilter> filters;
        private @Nullable String fleetId;
        private @Nullable String hostnameContains;
        private @Nullable String id;
        private List<GetJmsPluginsJmsPluginCollection> jmsPluginCollections;
        private @Nullable String state;
        private @Nullable String timeLastSeenLessThanOrEqualTo;
        private @Nullable String timeRegisteredLessThanOrEqualTo;
        public Builder() {}
        public Builder(GetJmsPluginsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentId = defaults.agentId;
    	      this.agentType = defaults.agentType;
    	      this.availabilityStatus = defaults.availabilityStatus;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.filters = defaults.filters;
    	      this.fleetId = defaults.fleetId;
    	      this.hostnameContains = defaults.hostnameContains;
    	      this.id = defaults.id;
    	      this.jmsPluginCollections = defaults.jmsPluginCollections;
    	      this.state = defaults.state;
    	      this.timeLastSeenLessThanOrEqualTo = defaults.timeLastSeenLessThanOrEqualTo;
    	      this.timeRegisteredLessThanOrEqualTo = defaults.timeRegisteredLessThanOrEqualTo;
        }

        @CustomType.Setter
        public Builder agentId(@Nullable String agentId) {

            this.agentId = agentId;
            return this;
        }
        @CustomType.Setter
        public Builder agentType(@Nullable String agentType) {

            this.agentType = agentType;
            return this;
        }
        @CustomType.Setter
        public Builder availabilityStatus(@Nullable String availabilityStatus) {

            this.availabilityStatus = availabilityStatus;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetJmsPluginsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetJmsPluginsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder fleetId(@Nullable String fleetId) {

            this.fleetId = fleetId;
            return this;
        }
        @CustomType.Setter
        public Builder hostnameContains(@Nullable String hostnameContains) {

            this.hostnameContains = hostnameContains;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jmsPluginCollections(List<GetJmsPluginsJmsPluginCollection> jmsPluginCollections) {
            if (jmsPluginCollections == null) {
              throw new MissingRequiredPropertyException("GetJmsPluginsResult", "jmsPluginCollections");
            }
            this.jmsPluginCollections = jmsPluginCollections;
            return this;
        }
        public Builder jmsPluginCollections(GetJmsPluginsJmsPluginCollection... jmsPluginCollections) {
            return jmsPluginCollections(List.of(jmsPluginCollections));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSeenLessThanOrEqualTo(@Nullable String timeLastSeenLessThanOrEqualTo) {

            this.timeLastSeenLessThanOrEqualTo = timeLastSeenLessThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeRegisteredLessThanOrEqualTo(@Nullable String timeRegisteredLessThanOrEqualTo) {

            this.timeRegisteredLessThanOrEqualTo = timeRegisteredLessThanOrEqualTo;
            return this;
        }
        public GetJmsPluginsResult build() {
            final var _resultValue = new GetJmsPluginsResult();
            _resultValue.agentId = agentId;
            _resultValue.agentType = agentType;
            _resultValue.availabilityStatus = availabilityStatus;
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.filters = filters;
            _resultValue.fleetId = fleetId;
            _resultValue.hostnameContains = hostnameContains;
            _resultValue.id = id;
            _resultValue.jmsPluginCollections = jmsPluginCollections;
            _resultValue.state = state;
            _resultValue.timeLastSeenLessThanOrEqualTo = timeLastSeenLessThanOrEqualTo;
            _resultValue.timeRegisteredLessThanOrEqualTo = timeRegisteredLessThanOrEqualTo;
            return _resultValue;
        }
    }
}
