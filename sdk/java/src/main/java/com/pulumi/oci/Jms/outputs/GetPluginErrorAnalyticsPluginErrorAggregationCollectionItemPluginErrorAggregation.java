// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregation {
    /**
     * @return Number of FleetErrors encountered for the specific reason.
     * 
     */
    private Integer pluginErrorAnalyticCount;
    /**
     * @return Enum that uniquely identifies the plugin error.
     * 
     */
    private String reason;

    private GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregation() {}
    /**
     * @return Number of FleetErrors encountered for the specific reason.
     * 
     */
    public Integer pluginErrorAnalyticCount() {
        return this.pluginErrorAnalyticCount;
    }
    /**
     * @return Enum that uniquely identifies the plugin error.
     * 
     */
    public String reason() {
        return this.reason;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer pluginErrorAnalyticCount;
        private String reason;
        public Builder() {}
        public Builder(GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pluginErrorAnalyticCount = defaults.pluginErrorAnalyticCount;
    	      this.reason = defaults.reason;
        }

        @CustomType.Setter
        public Builder pluginErrorAnalyticCount(Integer pluginErrorAnalyticCount) {
            if (pluginErrorAnalyticCount == null) {
              throw new MissingRequiredPropertyException("GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregation", "pluginErrorAnalyticCount");
            }
            this.pluginErrorAnalyticCount = pluginErrorAnalyticCount;
            return this;
        }
        @CustomType.Setter
        public Builder reason(String reason) {
            if (reason == null) {
              throw new MissingRequiredPropertyException("GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregation", "reason");
            }
            this.reason = reason;
            return this;
        }
        public GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregation build() {
            final var _resultValue = new GetPluginErrorAnalyticsPluginErrorAggregationCollectionItemPluginErrorAggregation();
            _resultValue.pluginErrorAnalyticCount = pluginErrorAnalyticCount;
            _resultValue.reason = reason;
            return _resultValue;
        }
    }
}
