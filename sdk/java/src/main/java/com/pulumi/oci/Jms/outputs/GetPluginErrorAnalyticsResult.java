// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.outputs.GetPluginErrorAnalyticsFilter;
import com.pulumi.oci.Jms.outputs.GetPluginErrorAnalyticsPluginErrorAggregationCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPluginErrorAnalyticsResult {
    private @Nullable String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    private @Nullable List<GetPluginErrorAnalyticsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of plugin_error_aggregation_collection.
     * 
     */
    private List<GetPluginErrorAnalyticsPluginErrorAggregationCollection> pluginErrorAggregationCollections;

    private GetPluginErrorAnalyticsResult() {}
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    public List<GetPluginErrorAnalyticsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of plugin_error_aggregation_collection.
     * 
     */
    public List<GetPluginErrorAnalyticsPluginErrorAggregationCollection> pluginErrorAggregationCollections() {
        return this.pluginErrorAggregationCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPluginErrorAnalyticsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable List<GetPluginErrorAnalyticsFilter> filters;
        private String id;
        private List<GetPluginErrorAnalyticsPluginErrorAggregationCollection> pluginErrorAggregationCollections;
        public Builder() {}
        public Builder(GetPluginErrorAnalyticsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.pluginErrorAggregationCollections = defaults.pluginErrorAggregationCollections;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetPluginErrorAnalyticsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetPluginErrorAnalyticsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPluginErrorAnalyticsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder pluginErrorAggregationCollections(List<GetPluginErrorAnalyticsPluginErrorAggregationCollection> pluginErrorAggregationCollections) {
            if (pluginErrorAggregationCollections == null) {
              throw new MissingRequiredPropertyException("GetPluginErrorAnalyticsResult", "pluginErrorAggregationCollections");
            }
            this.pluginErrorAggregationCollections = pluginErrorAggregationCollections;
            return this;
        }
        public Builder pluginErrorAggregationCollections(GetPluginErrorAnalyticsPluginErrorAggregationCollection... pluginErrorAggregationCollections) {
            return pluginErrorAggregationCollections(List.of(pluginErrorAggregationCollections));
        }
        public GetPluginErrorAnalyticsResult build() {
            final var _resultValue = new GetPluginErrorAnalyticsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.pluginErrorAggregationCollections = pluginErrorAggregationCollections;
            return _resultValue;
        }
    }
}
