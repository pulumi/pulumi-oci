// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPluginErrorsPluginErrorCollectionItemError {
    /**
     * @return Optional string containing additional details.
     * 
     */
    private String details;
    /**
     * @return The plugin error reason.
     * 
     */
    private String reason;
    /**
     * @return The timestamp of the last time an error was detected.
     * 
     */
    private String timeLastSeen;

    private GetPluginErrorsPluginErrorCollectionItemError() {}
    /**
     * @return Optional string containing additional details.
     * 
     */
    public String details() {
        return this.details;
    }
    /**
     * @return The plugin error reason.
     * 
     */
    public String reason() {
        return this.reason;
    }
    /**
     * @return The timestamp of the last time an error was detected.
     * 
     */
    public String timeLastSeen() {
        return this.timeLastSeen;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPluginErrorsPluginErrorCollectionItemError defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String details;
        private String reason;
        private String timeLastSeen;
        public Builder() {}
        public Builder(GetPluginErrorsPluginErrorCollectionItemError defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.details = defaults.details;
    	      this.reason = defaults.reason;
    	      this.timeLastSeen = defaults.timeLastSeen;
        }

        @CustomType.Setter
        public Builder details(String details) {
            if (details == null) {
              throw new MissingRequiredPropertyException("GetPluginErrorsPluginErrorCollectionItemError", "details");
            }
            this.details = details;
            return this;
        }
        @CustomType.Setter
        public Builder reason(String reason) {
            if (reason == null) {
              throw new MissingRequiredPropertyException("GetPluginErrorsPluginErrorCollectionItemError", "reason");
            }
            this.reason = reason;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSeen(String timeLastSeen) {
            if (timeLastSeen == null) {
              throw new MissingRequiredPropertyException("GetPluginErrorsPluginErrorCollectionItemError", "timeLastSeen");
            }
            this.timeLastSeen = timeLastSeen;
            return this;
        }
        public GetPluginErrorsPluginErrorCollectionItemError build() {
            final var _resultValue = new GetPluginErrorsPluginErrorCollectionItemError();
            _resultValue.details = details;
            _resultValue.reason = reason;
            _resultValue.timeLastSeen = timeLastSeen;
            return _resultValue;
        }
    }
}
