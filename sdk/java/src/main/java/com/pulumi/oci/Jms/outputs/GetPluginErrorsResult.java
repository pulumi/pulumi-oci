// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.outputs.GetPluginErrorsFilter;
import com.pulumi.oci.Jms.outputs.GetPluginErrorsPluginErrorCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPluginErrorsResult {
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     * 
     */
    private @Nullable String compartmentId;
    private @Nullable Boolean compartmentIdInSubtree;
    private @Nullable List<GetPluginErrorsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Instance running the plugin.
     * 
     */
    private @Nullable String managedInstanceId;
    /**
     * @return The list of plugin_error_collection.
     * 
     */
    private List<GetPluginErrorsPluginErrorCollection> pluginErrorCollections;
    private @Nullable String timeFirstSeenGreaterThanOrEqualTo;
    private @Nullable String timeFirstSeenLessThanOrEqualTo;
    private @Nullable String timeLastSeenGreaterThanOrEqualTo;
    private @Nullable String timeLastSeenLessThanOrEqualTo;

    private GetPluginErrorsResult() {}
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Fleet.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    public List<GetPluginErrorsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Instance running the plugin.
     * 
     */
    public Optional<String> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }
    /**
     * @return The list of plugin_error_collection.
     * 
     */
    public List<GetPluginErrorsPluginErrorCollection> pluginErrorCollections() {
        return this.pluginErrorCollections;
    }
    public Optional<String> timeFirstSeenGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeFirstSeenGreaterThanOrEqualTo);
    }
    public Optional<String> timeFirstSeenLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeFirstSeenLessThanOrEqualTo);
    }
    public Optional<String> timeLastSeenGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeLastSeenGreaterThanOrEqualTo);
    }
    public Optional<String> timeLastSeenLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeLastSeenLessThanOrEqualTo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPluginErrorsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable List<GetPluginErrorsFilter> filters;
        private String id;
        private @Nullable String managedInstanceId;
        private List<GetPluginErrorsPluginErrorCollection> pluginErrorCollections;
        private @Nullable String timeFirstSeenGreaterThanOrEqualTo;
        private @Nullable String timeFirstSeenLessThanOrEqualTo;
        private @Nullable String timeLastSeenGreaterThanOrEqualTo;
        private @Nullable String timeLastSeenLessThanOrEqualTo;
        public Builder() {}
        public Builder(GetPluginErrorsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.pluginErrorCollections = defaults.pluginErrorCollections;
    	      this.timeFirstSeenGreaterThanOrEqualTo = defaults.timeFirstSeenGreaterThanOrEqualTo;
    	      this.timeFirstSeenLessThanOrEqualTo = defaults.timeFirstSeenLessThanOrEqualTo;
    	      this.timeLastSeenGreaterThanOrEqualTo = defaults.timeLastSeenGreaterThanOrEqualTo;
    	      this.timeLastSeenLessThanOrEqualTo = defaults.timeLastSeenLessThanOrEqualTo;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {

            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetPluginErrorsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetPluginErrorsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPluginErrorsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(@Nullable String managedInstanceId) {

            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder pluginErrorCollections(List<GetPluginErrorsPluginErrorCollection> pluginErrorCollections) {
            if (pluginErrorCollections == null) {
              throw new MissingRequiredPropertyException("GetPluginErrorsResult", "pluginErrorCollections");
            }
            this.pluginErrorCollections = pluginErrorCollections;
            return this;
        }
        public Builder pluginErrorCollections(GetPluginErrorsPluginErrorCollection... pluginErrorCollections) {
            return pluginErrorCollections(List.of(pluginErrorCollections));
        }
        @CustomType.Setter
        public Builder timeFirstSeenGreaterThanOrEqualTo(@Nullable String timeFirstSeenGreaterThanOrEqualTo) {

            this.timeFirstSeenGreaterThanOrEqualTo = timeFirstSeenGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeFirstSeenLessThanOrEqualTo(@Nullable String timeFirstSeenLessThanOrEqualTo) {

            this.timeFirstSeenLessThanOrEqualTo = timeFirstSeenLessThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSeenGreaterThanOrEqualTo(@Nullable String timeLastSeenGreaterThanOrEqualTo) {

            this.timeLastSeenGreaterThanOrEqualTo = timeLastSeenGreaterThanOrEqualTo;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSeenLessThanOrEqualTo(@Nullable String timeLastSeenLessThanOrEqualTo) {

            this.timeLastSeenLessThanOrEqualTo = timeLastSeenLessThanOrEqualTo;
            return this;
        }
        public GetPluginErrorsResult build() {
            final var _resultValue = new GetPluginErrorsResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.compartmentIdInSubtree = compartmentIdInSubtree;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.managedInstanceId = managedInstanceId;
            _resultValue.pluginErrorCollections = pluginErrorCollections;
            _resultValue.timeFirstSeenGreaterThanOrEqualTo = timeFirstSeenGreaterThanOrEqualTo;
            _resultValue.timeFirstSeenLessThanOrEqualTo = timeFirstSeenLessThanOrEqualTo;
            _resultValue.timeLastSeenGreaterThanOrEqualTo = timeLastSeenGreaterThanOrEqualTo;
            _resultValue.timeLastSeenLessThanOrEqualTo = timeLastSeenLessThanOrEqualTo;
            return _resultValue;
        }
    }
}
