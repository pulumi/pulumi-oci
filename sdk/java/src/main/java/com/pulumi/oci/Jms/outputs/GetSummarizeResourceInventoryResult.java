// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSummarizeResourceInventoryResult {
    /**
     * @return The number of _active_ fleets.
     * 
     */
    private @Nullable Integer activeFleetCount;
    /**
     * @return The number of applications.
     * 
     */
    private @Nullable Integer applicationCount;
    private @Nullable String compartmentId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The number of Java installations.
     * 
     */
    private @Nullable Integer installationCount;
    /**
     * @return The number of Java Runtimes.
     * 
     */
    private @Nullable Integer jreCount;
    /**
     * @return The number of managed instances.
     * 
     */
    private @Nullable Integer managedInstanceCount;
    private @Nullable String timeEnd;
    private @Nullable String timeStart;

    private GetSummarizeResourceInventoryResult() {}
    /**
     * @return The number of _active_ fleets.
     * 
     */
    public Optional<Integer> activeFleetCount() {
        return Optional.ofNullable(this.activeFleetCount);
    }
    /**
     * @return The number of applications.
     * 
     */
    public Optional<Integer> applicationCount() {
        return Optional.ofNullable(this.applicationCount);
    }
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The number of Java installations.
     * 
     */
    public Optional<Integer> installationCount() {
        return Optional.ofNullable(this.installationCount);
    }
    /**
     * @return The number of Java Runtimes.
     * 
     */
    public Optional<Integer> jreCount() {
        return Optional.ofNullable(this.jreCount);
    }
    /**
     * @return The number of managed instances.
     * 
     */
    public Optional<Integer> managedInstanceCount() {
        return Optional.ofNullable(this.managedInstanceCount);
    }
    public Optional<String> timeEnd() {
        return Optional.ofNullable(this.timeEnd);
    }
    public Optional<String> timeStart() {
        return Optional.ofNullable(this.timeStart);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSummarizeResourceInventoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer activeFleetCount;
        private @Nullable Integer applicationCount;
        private @Nullable String compartmentId;
        private @Nullable String id;
        private @Nullable Integer installationCount;
        private @Nullable Integer jreCount;
        private @Nullable Integer managedInstanceCount;
        private @Nullable String timeEnd;
        private @Nullable String timeStart;
        public Builder() {}
        public Builder(GetSummarizeResourceInventoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeFleetCount = defaults.activeFleetCount;
    	      this.applicationCount = defaults.applicationCount;
    	      this.compartmentId = defaults.compartmentId;
    	      this.id = defaults.id;
    	      this.installationCount = defaults.installationCount;
    	      this.jreCount = defaults.jreCount;
    	      this.managedInstanceCount = defaults.managedInstanceCount;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        @CustomType.Setter
        public Builder activeFleetCount(@Nullable Integer activeFleetCount) {
            this.activeFleetCount = activeFleetCount;
            return this;
        }
        @CustomType.Setter
        public Builder applicationCount(@Nullable Integer applicationCount) {
            this.applicationCount = applicationCount;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder installationCount(@Nullable Integer installationCount) {
            this.installationCount = installationCount;
            return this;
        }
        @CustomType.Setter
        public Builder jreCount(@Nullable Integer jreCount) {
            this.jreCount = jreCount;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceCount(@Nullable Integer managedInstanceCount) {
            this.managedInstanceCount = managedInstanceCount;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnd(@Nullable String timeEnd) {
            this.timeEnd = timeEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeStart(@Nullable String timeStart) {
            this.timeStart = timeStart;
            return this;
        }
        public GetSummarizeResourceInventoryResult build() {
            final var o = new GetSummarizeResourceInventoryResult();
            o.activeFleetCount = activeFleetCount;
            o.applicationCount = applicationCount;
            o.compartmentId = compartmentId;
            o.id = id;
            o.installationCount = installationCount;
            o.jreCount = jreCount;
            o.managedInstanceCount = managedInstanceCount;
            o.timeEnd = timeEnd;
            o.timeStart = timeStart;
            return o;
        }
    }
}
