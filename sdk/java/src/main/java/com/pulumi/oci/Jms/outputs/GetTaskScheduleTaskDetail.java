// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.outputs.GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest;
import com.pulumi.oci.Jms.outputs.GetTaskScheduleTaskDetailCryptoTaskRequest;
import com.pulumi.oci.Jms.outputs.GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequest;
import com.pulumi.oci.Jms.outputs.GetTaskScheduleTaskDetailJavaMigrationTaskRequest;
import com.pulumi.oci.Jms.outputs.GetTaskScheduleTaskDetailJfrTaskRequest;
import com.pulumi.oci.Jms.outputs.GetTaskScheduleTaskDetailPerformanceTuningTaskRequest;
import com.pulumi.oci.Jms.outputs.GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequest;
import com.pulumi.oci.Jms.outputs.GetTaskScheduleTaskDetailScanJavaServerTaskRequest;
import com.pulumi.oci.Jms.outputs.GetTaskScheduleTaskDetailScanLibraryTaskRequest;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTaskScheduleTaskDetail {
    /**
     * @return The list of Java installation sites to add.
     * 
     */
    private List<GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest> addInstallationSiteTaskRequests;
    /**
     * @return Details of the request to start a JFR crypto event analysis. When the targets aren&#39;t specified, then all managed instances currently in the fleet are selected.
     * 
     */
    private List<GetTaskScheduleTaskDetailCryptoTaskRequest> cryptoTaskRequests;
    /**
     * @return Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
     * 
     */
    private List<GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequest> deployedApplicationMigrationTaskRequests;
    /**
     * @return Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
     * 
     */
    private List<GetTaskScheduleTaskDetailJavaMigrationTaskRequest> javaMigrationTaskRequests;
    /**
     * @return Details of the request to start JFR recordings. When the targets aren&#39;t specified, then all managed instances currently in the Fleet are selected.
     * 
     */
    private List<GetTaskScheduleTaskDetailJfrTaskRequest> jfrTaskRequests;
    /**
     * @return Details of the request to start a JFR performance tuning analysis.
     * 
     */
    private List<GetTaskScheduleTaskDetailPerformanceTuningTaskRequest> performanceTuningTaskRequests;
    /**
     * @return The list of Java installation sites to remove.
     * 
     */
    private List<GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequest> removeInstallationSiteTaskRequests;
    /**
     * @return The list of managed instances to scan.
     * 
     */
    private List<GetTaskScheduleTaskDetailScanJavaServerTaskRequest> scanJavaServerTaskRequests;
    /**
     * @return The list of managed instances to scan.
     * 
     */
    private List<GetTaskScheduleTaskDetailScanLibraryTaskRequest> scanLibraryTaskRequests;
    /**
     * @return Type of task.
     * 
     */
    private String taskType;

    private GetTaskScheduleTaskDetail() {}
    /**
     * @return The list of Java installation sites to add.
     * 
     */
    public List<GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest> addInstallationSiteTaskRequests() {
        return this.addInstallationSiteTaskRequests;
    }
    /**
     * @return Details of the request to start a JFR crypto event analysis. When the targets aren&#39;t specified, then all managed instances currently in the fleet are selected.
     * 
     */
    public List<GetTaskScheduleTaskDetailCryptoTaskRequest> cryptoTaskRequests() {
        return this.cryptoTaskRequests;
    }
    /**
     * @return Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
     * 
     */
    public List<GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequest> deployedApplicationMigrationTaskRequests() {
        return this.deployedApplicationMigrationTaskRequests;
    }
    /**
     * @return Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
     * 
     */
    public List<GetTaskScheduleTaskDetailJavaMigrationTaskRequest> javaMigrationTaskRequests() {
        return this.javaMigrationTaskRequests;
    }
    /**
     * @return Details of the request to start JFR recordings. When the targets aren&#39;t specified, then all managed instances currently in the Fleet are selected.
     * 
     */
    public List<GetTaskScheduleTaskDetailJfrTaskRequest> jfrTaskRequests() {
        return this.jfrTaskRequests;
    }
    /**
     * @return Details of the request to start a JFR performance tuning analysis.
     * 
     */
    public List<GetTaskScheduleTaskDetailPerformanceTuningTaskRequest> performanceTuningTaskRequests() {
        return this.performanceTuningTaskRequests;
    }
    /**
     * @return The list of Java installation sites to remove.
     * 
     */
    public List<GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequest> removeInstallationSiteTaskRequests() {
        return this.removeInstallationSiteTaskRequests;
    }
    /**
     * @return The list of managed instances to scan.
     * 
     */
    public List<GetTaskScheduleTaskDetailScanJavaServerTaskRequest> scanJavaServerTaskRequests() {
        return this.scanJavaServerTaskRequests;
    }
    /**
     * @return The list of managed instances to scan.
     * 
     */
    public List<GetTaskScheduleTaskDetailScanLibraryTaskRequest> scanLibraryTaskRequests() {
        return this.scanLibraryTaskRequests;
    }
    /**
     * @return Type of task.
     * 
     */
    public String taskType() {
        return this.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTaskScheduleTaskDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest> addInstallationSiteTaskRequests;
        private List<GetTaskScheduleTaskDetailCryptoTaskRequest> cryptoTaskRequests;
        private List<GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequest> deployedApplicationMigrationTaskRequests;
        private List<GetTaskScheduleTaskDetailJavaMigrationTaskRequest> javaMigrationTaskRequests;
        private List<GetTaskScheduleTaskDetailJfrTaskRequest> jfrTaskRequests;
        private List<GetTaskScheduleTaskDetailPerformanceTuningTaskRequest> performanceTuningTaskRequests;
        private List<GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequest> removeInstallationSiteTaskRequests;
        private List<GetTaskScheduleTaskDetailScanJavaServerTaskRequest> scanJavaServerTaskRequests;
        private List<GetTaskScheduleTaskDetailScanLibraryTaskRequest> scanLibraryTaskRequests;
        private String taskType;
        public Builder() {}
        public Builder(GetTaskScheduleTaskDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addInstallationSiteTaskRequests = defaults.addInstallationSiteTaskRequests;
    	      this.cryptoTaskRequests = defaults.cryptoTaskRequests;
    	      this.deployedApplicationMigrationTaskRequests = defaults.deployedApplicationMigrationTaskRequests;
    	      this.javaMigrationTaskRequests = defaults.javaMigrationTaskRequests;
    	      this.jfrTaskRequests = defaults.jfrTaskRequests;
    	      this.performanceTuningTaskRequests = defaults.performanceTuningTaskRequests;
    	      this.removeInstallationSiteTaskRequests = defaults.removeInstallationSiteTaskRequests;
    	      this.scanJavaServerTaskRequests = defaults.scanJavaServerTaskRequests;
    	      this.scanLibraryTaskRequests = defaults.scanLibraryTaskRequests;
    	      this.taskType = defaults.taskType;
        }

        @CustomType.Setter
        public Builder addInstallationSiteTaskRequests(List<GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest> addInstallationSiteTaskRequests) {
            if (addInstallationSiteTaskRequests == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetail", "addInstallationSiteTaskRequests");
            }
            this.addInstallationSiteTaskRequests = addInstallationSiteTaskRequests;
            return this;
        }
        public Builder addInstallationSiteTaskRequests(GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest... addInstallationSiteTaskRequests) {
            return addInstallationSiteTaskRequests(List.of(addInstallationSiteTaskRequests));
        }
        @CustomType.Setter
        public Builder cryptoTaskRequests(List<GetTaskScheduleTaskDetailCryptoTaskRequest> cryptoTaskRequests) {
            if (cryptoTaskRequests == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetail", "cryptoTaskRequests");
            }
            this.cryptoTaskRequests = cryptoTaskRequests;
            return this;
        }
        public Builder cryptoTaskRequests(GetTaskScheduleTaskDetailCryptoTaskRequest... cryptoTaskRequests) {
            return cryptoTaskRequests(List.of(cryptoTaskRequests));
        }
        @CustomType.Setter
        public Builder deployedApplicationMigrationTaskRequests(List<GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequest> deployedApplicationMigrationTaskRequests) {
            if (deployedApplicationMigrationTaskRequests == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetail", "deployedApplicationMigrationTaskRequests");
            }
            this.deployedApplicationMigrationTaskRequests = deployedApplicationMigrationTaskRequests;
            return this;
        }
        public Builder deployedApplicationMigrationTaskRequests(GetTaskScheduleTaskDetailDeployedApplicationMigrationTaskRequest... deployedApplicationMigrationTaskRequests) {
            return deployedApplicationMigrationTaskRequests(List.of(deployedApplicationMigrationTaskRequests));
        }
        @CustomType.Setter
        public Builder javaMigrationTaskRequests(List<GetTaskScheduleTaskDetailJavaMigrationTaskRequest> javaMigrationTaskRequests) {
            if (javaMigrationTaskRequests == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetail", "javaMigrationTaskRequests");
            }
            this.javaMigrationTaskRequests = javaMigrationTaskRequests;
            return this;
        }
        public Builder javaMigrationTaskRequests(GetTaskScheduleTaskDetailJavaMigrationTaskRequest... javaMigrationTaskRequests) {
            return javaMigrationTaskRequests(List.of(javaMigrationTaskRequests));
        }
        @CustomType.Setter
        public Builder jfrTaskRequests(List<GetTaskScheduleTaskDetailJfrTaskRequest> jfrTaskRequests) {
            if (jfrTaskRequests == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetail", "jfrTaskRequests");
            }
            this.jfrTaskRequests = jfrTaskRequests;
            return this;
        }
        public Builder jfrTaskRequests(GetTaskScheduleTaskDetailJfrTaskRequest... jfrTaskRequests) {
            return jfrTaskRequests(List.of(jfrTaskRequests));
        }
        @CustomType.Setter
        public Builder performanceTuningTaskRequests(List<GetTaskScheduleTaskDetailPerformanceTuningTaskRequest> performanceTuningTaskRequests) {
            if (performanceTuningTaskRequests == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetail", "performanceTuningTaskRequests");
            }
            this.performanceTuningTaskRequests = performanceTuningTaskRequests;
            return this;
        }
        public Builder performanceTuningTaskRequests(GetTaskScheduleTaskDetailPerformanceTuningTaskRequest... performanceTuningTaskRequests) {
            return performanceTuningTaskRequests(List.of(performanceTuningTaskRequests));
        }
        @CustomType.Setter
        public Builder removeInstallationSiteTaskRequests(List<GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequest> removeInstallationSiteTaskRequests) {
            if (removeInstallationSiteTaskRequests == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetail", "removeInstallationSiteTaskRequests");
            }
            this.removeInstallationSiteTaskRequests = removeInstallationSiteTaskRequests;
            return this;
        }
        public Builder removeInstallationSiteTaskRequests(GetTaskScheduleTaskDetailRemoveInstallationSiteTaskRequest... removeInstallationSiteTaskRequests) {
            return removeInstallationSiteTaskRequests(List.of(removeInstallationSiteTaskRequests));
        }
        @CustomType.Setter
        public Builder scanJavaServerTaskRequests(List<GetTaskScheduleTaskDetailScanJavaServerTaskRequest> scanJavaServerTaskRequests) {
            if (scanJavaServerTaskRequests == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetail", "scanJavaServerTaskRequests");
            }
            this.scanJavaServerTaskRequests = scanJavaServerTaskRequests;
            return this;
        }
        public Builder scanJavaServerTaskRequests(GetTaskScheduleTaskDetailScanJavaServerTaskRequest... scanJavaServerTaskRequests) {
            return scanJavaServerTaskRequests(List.of(scanJavaServerTaskRequests));
        }
        @CustomType.Setter
        public Builder scanLibraryTaskRequests(List<GetTaskScheduleTaskDetailScanLibraryTaskRequest> scanLibraryTaskRequests) {
            if (scanLibraryTaskRequests == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetail", "scanLibraryTaskRequests");
            }
            this.scanLibraryTaskRequests = scanLibraryTaskRequests;
            return this;
        }
        public Builder scanLibraryTaskRequests(GetTaskScheduleTaskDetailScanLibraryTaskRequest... scanLibraryTaskRequests) {
            return scanLibraryTaskRequests(List.of(scanLibraryTaskRequests));
        }
        @CustomType.Setter
        public Builder taskType(String taskType) {
            if (taskType == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetail", "taskType");
            }
            this.taskType = taskType;
            return this;
        }
        public GetTaskScheduleTaskDetail build() {
            final var _resultValue = new GetTaskScheduleTaskDetail();
            _resultValue.addInstallationSiteTaskRequests = addInstallationSiteTaskRequests;
            _resultValue.cryptoTaskRequests = cryptoTaskRequests;
            _resultValue.deployedApplicationMigrationTaskRequests = deployedApplicationMigrationTaskRequests;
            _resultValue.javaMigrationTaskRequests = javaMigrationTaskRequests;
            _resultValue.jfrTaskRequests = jfrTaskRequests;
            _resultValue.performanceTuningTaskRequests = performanceTuningTaskRequests;
            _resultValue.removeInstallationSiteTaskRequests = removeInstallationSiteTaskRequests;
            _resultValue.scanJavaServerTaskRequests = scanJavaServerTaskRequests;
            _resultValue.scanLibraryTaskRequests = scanLibraryTaskRequests;
            _resultValue.taskType = taskType;
            return _resultValue;
        }
    }
}
