// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.outputs.GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSite;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest {
    /**
     * @return The list of installation sites to remove.
     * 
     */
    private List<GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSite> installationSites;
    /**
     * @return Optional list of post java installation actions
     * 
     */
    private List<String> postInstallationActions;

    private GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest() {}
    /**
     * @return The list of installation sites to remove.
     * 
     */
    public List<GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSite> installationSites() {
        return this.installationSites;
    }
    /**
     * @return Optional list of post java installation actions
     * 
     */
    public List<String> postInstallationActions() {
        return this.postInstallationActions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSite> installationSites;
        private List<String> postInstallationActions;
        public Builder() {}
        public Builder(GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.installationSites = defaults.installationSites;
    	      this.postInstallationActions = defaults.postInstallationActions;
        }

        @CustomType.Setter
        public Builder installationSites(List<GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSite> installationSites) {
            if (installationSites == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest", "installationSites");
            }
            this.installationSites = installationSites;
            return this;
        }
        public Builder installationSites(GetTaskScheduleTaskDetailAddInstallationSiteTaskRequestInstallationSite... installationSites) {
            return installationSites(List.of(installationSites));
        }
        @CustomType.Setter
        public Builder postInstallationActions(List<String> postInstallationActions) {
            if (postInstallationActions == null) {
              throw new MissingRequiredPropertyException("GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest", "postInstallationActions");
            }
            this.postInstallationActions = postInstallationActions;
            return this;
        }
        public Builder postInstallationActions(String... postInstallationActions) {
            return postInstallationActions(List.of(postInstallationActions));
        }
        public GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest build() {
            final var _resultValue = new GetTaskScheduleTaskDetailAddInstallationSiteTaskRequest();
            _resultValue.installationSites = installationSites;
            _resultValue.postInstallationActions = postInstallationActions;
            return _resultValue;
        }
    }
}
