// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget {
    /**
     * @return Unique key that identifies the application installation for JFR data collection.
     * 
     */
    private String applicationInstallationKey;
    /**
     * @return Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
     * 
     */
    private List<String> excludePackagePrefixes;
    /**
     * @return includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
     * 
     */
    private List<String> includePackagePrefixes;
    /**
     * @return The Fleet-unique identifier of the related managed instance.
     * 
     */
    private String managedInstanceId;
    /**
     * @return The JDK version the application is currently running on.
     * 
     */
    private String sourceJdkVersion;
    /**
     * @return The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
     * 
     */
    private String targetJdkVersion;

    private GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget() {}
    /**
     * @return Unique key that identifies the application installation for JFR data collection.
     * 
     */
    public String applicationInstallationKey() {
        return this.applicationInstallationKey;
    }
    /**
     * @return Excludes the packages that starts with the prefix from the migration analysis result. Either this or includePackagePrefixes can be specified.
     * 
     */
    public List<String> excludePackagePrefixes() {
        return this.excludePackagePrefixes;
    }
    /**
     * @return includes the packages that starts with the prefix from the migration analysis result. Either this or excludePackagePrefixes can be specified.
     * 
     */
    public List<String> includePackagePrefixes() {
        return this.includePackagePrefixes;
    }
    /**
     * @return The Fleet-unique identifier of the related managed instance.
     * 
     */
    public String managedInstanceId() {
        return this.managedInstanceId;
    }
    /**
     * @return The JDK version the application is currently running on.
     * 
     */
    public String sourceJdkVersion() {
        return this.sourceJdkVersion;
    }
    /**
     * @return The JDK version against which the migration analysis was performed to identify effort required to move from source JDK.
     * 
     */
    public String targetJdkVersion() {
        return this.targetJdkVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationInstallationKey;
        private List<String> excludePackagePrefixes;
        private List<String> includePackagePrefixes;
        private String managedInstanceId;
        private String sourceJdkVersion;
        private String targetJdkVersion;
        public Builder() {}
        public Builder(GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationInstallationKey = defaults.applicationInstallationKey;
    	      this.excludePackagePrefixes = defaults.excludePackagePrefixes;
    	      this.includePackagePrefixes = defaults.includePackagePrefixes;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.sourceJdkVersion = defaults.sourceJdkVersion;
    	      this.targetJdkVersion = defaults.targetJdkVersion;
        }

        @CustomType.Setter
        public Builder applicationInstallationKey(String applicationInstallationKey) {
            if (applicationInstallationKey == null) {
              throw new MissingRequiredPropertyException("GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget", "applicationInstallationKey");
            }
            this.applicationInstallationKey = applicationInstallationKey;
            return this;
        }
        @CustomType.Setter
        public Builder excludePackagePrefixes(List<String> excludePackagePrefixes) {
            if (excludePackagePrefixes == null) {
              throw new MissingRequiredPropertyException("GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget", "excludePackagePrefixes");
            }
            this.excludePackagePrefixes = excludePackagePrefixes;
            return this;
        }
        public Builder excludePackagePrefixes(String... excludePackagePrefixes) {
            return excludePackagePrefixes(List.of(excludePackagePrefixes));
        }
        @CustomType.Setter
        public Builder includePackagePrefixes(List<String> includePackagePrefixes) {
            if (includePackagePrefixes == null) {
              throw new MissingRequiredPropertyException("GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget", "includePackagePrefixes");
            }
            this.includePackagePrefixes = includePackagePrefixes;
            return this;
        }
        public Builder includePackagePrefixes(String... includePackagePrefixes) {
            return includePackagePrefixes(List.of(includePackagePrefixes));
        }
        @CustomType.Setter
        public Builder managedInstanceId(String managedInstanceId) {
            if (managedInstanceId == null) {
              throw new MissingRequiredPropertyException("GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget", "managedInstanceId");
            }
            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceJdkVersion(String sourceJdkVersion) {
            if (sourceJdkVersion == null) {
              throw new MissingRequiredPropertyException("GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget", "sourceJdkVersion");
            }
            this.sourceJdkVersion = sourceJdkVersion;
            return this;
        }
        @CustomType.Setter
        public Builder targetJdkVersion(String targetJdkVersion) {
            if (targetJdkVersion == null) {
              throw new MissingRequiredPropertyException("GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget", "targetJdkVersion");
            }
            this.targetJdkVersion = targetJdkVersion;
            return this;
        }
        public GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget build() {
            final var _resultValue = new GetTaskSchedulesTaskScheduleCollectionItemTaskDetailJavaMigrationTaskRequestTarget();
            _resultValue.applicationInstallationKey = applicationInstallationKey;
            _resultValue.excludePackagePrefixes = excludePackagePrefixes;
            _resultValue.includePackagePrefixes = includePackagePrefixes;
            _resultValue.managedInstanceId = managedInstanceId;
            _resultValue.sourceJdkVersion = sourceJdkVersion;
            _resultValue.targetJdkVersion = targetJdkVersion;
            return _resultValue;
        }
    }
}
