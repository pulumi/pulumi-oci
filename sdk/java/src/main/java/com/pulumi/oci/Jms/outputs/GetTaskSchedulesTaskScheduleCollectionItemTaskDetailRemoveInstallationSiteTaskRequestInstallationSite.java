// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSite {
    /**
     * @return The unique identifier for the installation of a Java Runtime at a specific path on a specific operating system.
     * 
     */
    private String installationKey;
    /**
     * @return The Fleet-unique identifier of the related managed instance.
     * 
     */
    private String managedInstanceId;

    private GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSite() {}
    /**
     * @return The unique identifier for the installation of a Java Runtime at a specific path on a specific operating system.
     * 
     */
    public String installationKey() {
        return this.installationKey;
    }
    /**
     * @return The Fleet-unique identifier of the related managed instance.
     * 
     */
    public String managedInstanceId() {
        return this.managedInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSite defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String installationKey;
        private String managedInstanceId;
        public Builder() {}
        public Builder(GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSite defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.installationKey = defaults.installationKey;
    	      this.managedInstanceId = defaults.managedInstanceId;
        }

        @CustomType.Setter
        public Builder installationKey(String installationKey) {
            if (installationKey == null) {
              throw new MissingRequiredPropertyException("GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSite", "installationKey");
            }
            this.installationKey = installationKey;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(String managedInstanceId) {
            if (managedInstanceId == null) {
              throw new MissingRequiredPropertyException("GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSite", "managedInstanceId");
            }
            this.managedInstanceId = managedInstanceId;
            return this;
        }
        public GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSite build() {
            final var _resultValue = new GetTaskSchedulesTaskScheduleCollectionItemTaskDetailRemoveInstallationSiteTaskRequestInstallationSite();
            _resultValue.installationKey = installationKey;
            _resultValue.managedInstanceId = managedInstanceId;
            return _resultValue;
        }
    }
}
