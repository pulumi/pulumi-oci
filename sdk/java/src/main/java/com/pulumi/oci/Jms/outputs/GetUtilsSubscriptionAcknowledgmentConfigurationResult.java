// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUtilsSubscriptionAcknowledgmentConfigurationResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal that ackwnoledged the subscription.
     * 
     */
    private String acknowledgedBy;
    private String compartmentId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Flag to determine whether the subscription was acknowledged or not.
     * 
     */
    private Boolean isAcknowledged;
    /**
     * @return The date and time the subscription was acknowledged (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    private String timeAcknowledged;

    private GetUtilsSubscriptionAcknowledgmentConfigurationResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the principal that ackwnoledged the subscription.
     * 
     */
    public String acknowledgedBy() {
        return this.acknowledgedBy;
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Flag to determine whether the subscription was acknowledged or not.
     * 
     */
    public Boolean isAcknowledged() {
        return this.isAcknowledged;
    }
    /**
     * @return The date and time the subscription was acknowledged (formatted according to [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339)).
     * 
     */
    public String timeAcknowledged() {
        return this.timeAcknowledged;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUtilsSubscriptionAcknowledgmentConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String acknowledgedBy;
        private String compartmentId;
        private String id;
        private Boolean isAcknowledged;
        private String timeAcknowledged;
        public Builder() {}
        public Builder(GetUtilsSubscriptionAcknowledgmentConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acknowledgedBy = defaults.acknowledgedBy;
    	      this.compartmentId = defaults.compartmentId;
    	      this.id = defaults.id;
    	      this.isAcknowledged = defaults.isAcknowledged;
    	      this.timeAcknowledged = defaults.timeAcknowledged;
        }

        @CustomType.Setter
        public Builder acknowledgedBy(String acknowledgedBy) {
            if (acknowledgedBy == null) {
              throw new MissingRequiredPropertyException("GetUtilsSubscriptionAcknowledgmentConfigurationResult", "acknowledgedBy");
            }
            this.acknowledgedBy = acknowledgedBy;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetUtilsSubscriptionAcknowledgmentConfigurationResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUtilsSubscriptionAcknowledgmentConfigurationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAcknowledged(Boolean isAcknowledged) {
            if (isAcknowledged == null) {
              throw new MissingRequiredPropertyException("GetUtilsSubscriptionAcknowledgmentConfigurationResult", "isAcknowledged");
            }
            this.isAcknowledged = isAcknowledged;
            return this;
        }
        @CustomType.Setter
        public Builder timeAcknowledged(String timeAcknowledged) {
            if (timeAcknowledged == null) {
              throw new MissingRequiredPropertyException("GetUtilsSubscriptionAcknowledgmentConfigurationResult", "timeAcknowledged");
            }
            this.timeAcknowledged = timeAcknowledged;
            return this;
        }
        public GetUtilsSubscriptionAcknowledgmentConfigurationResult build() {
            final var _resultValue = new GetUtilsSubscriptionAcknowledgmentConfigurationResult();
            _resultValue.acknowledgedBy = acknowledgedBy;
            _resultValue.compartmentId = compartmentId;
            _resultValue.id = id;
            _resultValue.isAcknowledged = isAcknowledged;
            _resultValue.timeAcknowledged = timeAcknowledged;
            return _resultValue;
        }
    }
}
