// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetailsAddInstallationSiteTaskRequest;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetailsCryptoTaskRequest;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequest;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetailsJavaMigrationTaskRequest;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetailsJfrTaskRequest;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetailsPerformanceTuningTaskRequest;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetailsScanJavaServerTaskRequest;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetailsScanLibraryTaskRequest;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskScheduleTaskDetails {
    /**
     * @return (Updatable) The list of Java installation sites to add.
     * 
     */
    private @Nullable TaskScheduleTaskDetailsAddInstallationSiteTaskRequest addInstallationSiteTaskRequest;
    /**
     * @return (Updatable) Details of the request to start a JFR crypto event analysis. When the targets aren&#39;t specified, then all managed instances currently in the fleet are selected.
     * 
     */
    private @Nullable TaskScheduleTaskDetailsCryptoTaskRequest cryptoTaskRequest;
    /**
     * @return (Updatable) Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
     * 
     */
    private @Nullable TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequest deployedApplicationMigrationTaskRequest;
    /**
     * @return (Updatable) Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
     * 
     */
    private @Nullable TaskScheduleTaskDetailsJavaMigrationTaskRequest javaMigrationTaskRequest;
    /**
     * @return (Updatable) Details of the request to start JFR recordings. When the targets aren&#39;t specified, then all managed instances currently in the Fleet are selected.
     * 
     */
    private @Nullable TaskScheduleTaskDetailsJfrTaskRequest jfrTaskRequest;
    /**
     * @return (Updatable) Details of the request to start a JFR performance tuning analysis.
     * 
     */
    private @Nullable TaskScheduleTaskDetailsPerformanceTuningTaskRequest performanceTuningTaskRequest;
    /**
     * @return (Updatable) The list of Java installation sites to remove.
     * 
     */
    private @Nullable TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest removeInstallationSiteTaskRequest;
    /**
     * @return (Updatable) The list of managed instances to scan.
     * 
     */
    private @Nullable TaskScheduleTaskDetailsScanJavaServerTaskRequest scanJavaServerTaskRequest;
    /**
     * @return (Updatable) The list of managed instances to scan.
     * 
     */
    private @Nullable TaskScheduleTaskDetailsScanLibraryTaskRequest scanLibraryTaskRequest;
    /**
     * @return (Updatable) Type of task.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private String taskType;

    private TaskScheduleTaskDetails() {}
    /**
     * @return (Updatable) The list of Java installation sites to add.
     * 
     */
    public Optional<TaskScheduleTaskDetailsAddInstallationSiteTaskRequest> addInstallationSiteTaskRequest() {
        return Optional.ofNullable(this.addInstallationSiteTaskRequest);
    }
    /**
     * @return (Updatable) Details of the request to start a JFR crypto event analysis. When the targets aren&#39;t specified, then all managed instances currently in the fleet are selected.
     * 
     */
    public Optional<TaskScheduleTaskDetailsCryptoTaskRequest> cryptoTaskRequest() {
        return Optional.ofNullable(this.cryptoTaskRequest);
    }
    /**
     * @return (Updatable) Details of the request to start a Java migration analyses. The analyses requires the managed instance OCID, deployed application key, source JDK version, and target JDK version of each selected application.
     * 
     */
    public Optional<TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequest> deployedApplicationMigrationTaskRequest() {
        return Optional.ofNullable(this.deployedApplicationMigrationTaskRequest);
    }
    /**
     * @return (Updatable) Details of the request to start a Java migration analysis. The analysis requires the managed instance OCID, application installation key, source JDK version, and target JDK version of each selected application.
     * 
     */
    public Optional<TaskScheduleTaskDetailsJavaMigrationTaskRequest> javaMigrationTaskRequest() {
        return Optional.ofNullable(this.javaMigrationTaskRequest);
    }
    /**
     * @return (Updatable) Details of the request to start JFR recordings. When the targets aren&#39;t specified, then all managed instances currently in the Fleet are selected.
     * 
     */
    public Optional<TaskScheduleTaskDetailsJfrTaskRequest> jfrTaskRequest() {
        return Optional.ofNullable(this.jfrTaskRequest);
    }
    /**
     * @return (Updatable) Details of the request to start a JFR performance tuning analysis.
     * 
     */
    public Optional<TaskScheduleTaskDetailsPerformanceTuningTaskRequest> performanceTuningTaskRequest() {
        return Optional.ofNullable(this.performanceTuningTaskRequest);
    }
    /**
     * @return (Updatable) The list of Java installation sites to remove.
     * 
     */
    public Optional<TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest> removeInstallationSiteTaskRequest() {
        return Optional.ofNullable(this.removeInstallationSiteTaskRequest);
    }
    /**
     * @return (Updatable) The list of managed instances to scan.
     * 
     */
    public Optional<TaskScheduleTaskDetailsScanJavaServerTaskRequest> scanJavaServerTaskRequest() {
        return Optional.ofNullable(this.scanJavaServerTaskRequest);
    }
    /**
     * @return (Updatable) The list of managed instances to scan.
     * 
     */
    public Optional<TaskScheduleTaskDetailsScanLibraryTaskRequest> scanLibraryTaskRequest() {
        return Optional.ofNullable(this.scanLibraryTaskRequest);
    }
    /**
     * @return (Updatable) Type of task.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public String taskType() {
        return this.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskScheduleTaskDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable TaskScheduleTaskDetailsAddInstallationSiteTaskRequest addInstallationSiteTaskRequest;
        private @Nullable TaskScheduleTaskDetailsCryptoTaskRequest cryptoTaskRequest;
        private @Nullable TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequest deployedApplicationMigrationTaskRequest;
        private @Nullable TaskScheduleTaskDetailsJavaMigrationTaskRequest javaMigrationTaskRequest;
        private @Nullable TaskScheduleTaskDetailsJfrTaskRequest jfrTaskRequest;
        private @Nullable TaskScheduleTaskDetailsPerformanceTuningTaskRequest performanceTuningTaskRequest;
        private @Nullable TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest removeInstallationSiteTaskRequest;
        private @Nullable TaskScheduleTaskDetailsScanJavaServerTaskRequest scanJavaServerTaskRequest;
        private @Nullable TaskScheduleTaskDetailsScanLibraryTaskRequest scanLibraryTaskRequest;
        private String taskType;
        public Builder() {}
        public Builder(TaskScheduleTaskDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addInstallationSiteTaskRequest = defaults.addInstallationSiteTaskRequest;
    	      this.cryptoTaskRequest = defaults.cryptoTaskRequest;
    	      this.deployedApplicationMigrationTaskRequest = defaults.deployedApplicationMigrationTaskRequest;
    	      this.javaMigrationTaskRequest = defaults.javaMigrationTaskRequest;
    	      this.jfrTaskRequest = defaults.jfrTaskRequest;
    	      this.performanceTuningTaskRequest = defaults.performanceTuningTaskRequest;
    	      this.removeInstallationSiteTaskRequest = defaults.removeInstallationSiteTaskRequest;
    	      this.scanJavaServerTaskRequest = defaults.scanJavaServerTaskRequest;
    	      this.scanLibraryTaskRequest = defaults.scanLibraryTaskRequest;
    	      this.taskType = defaults.taskType;
        }

        @CustomType.Setter
        public Builder addInstallationSiteTaskRequest(@Nullable TaskScheduleTaskDetailsAddInstallationSiteTaskRequest addInstallationSiteTaskRequest) {

            this.addInstallationSiteTaskRequest = addInstallationSiteTaskRequest;
            return this;
        }
        @CustomType.Setter
        public Builder cryptoTaskRequest(@Nullable TaskScheduleTaskDetailsCryptoTaskRequest cryptoTaskRequest) {

            this.cryptoTaskRequest = cryptoTaskRequest;
            return this;
        }
        @CustomType.Setter
        public Builder deployedApplicationMigrationTaskRequest(@Nullable TaskScheduleTaskDetailsDeployedApplicationMigrationTaskRequest deployedApplicationMigrationTaskRequest) {

            this.deployedApplicationMigrationTaskRequest = deployedApplicationMigrationTaskRequest;
            return this;
        }
        @CustomType.Setter
        public Builder javaMigrationTaskRequest(@Nullable TaskScheduleTaskDetailsJavaMigrationTaskRequest javaMigrationTaskRequest) {

            this.javaMigrationTaskRequest = javaMigrationTaskRequest;
            return this;
        }
        @CustomType.Setter
        public Builder jfrTaskRequest(@Nullable TaskScheduleTaskDetailsJfrTaskRequest jfrTaskRequest) {

            this.jfrTaskRequest = jfrTaskRequest;
            return this;
        }
        @CustomType.Setter
        public Builder performanceTuningTaskRequest(@Nullable TaskScheduleTaskDetailsPerformanceTuningTaskRequest performanceTuningTaskRequest) {

            this.performanceTuningTaskRequest = performanceTuningTaskRequest;
            return this;
        }
        @CustomType.Setter
        public Builder removeInstallationSiteTaskRequest(@Nullable TaskScheduleTaskDetailsRemoveInstallationSiteTaskRequest removeInstallationSiteTaskRequest) {

            this.removeInstallationSiteTaskRequest = removeInstallationSiteTaskRequest;
            return this;
        }
        @CustomType.Setter
        public Builder scanJavaServerTaskRequest(@Nullable TaskScheduleTaskDetailsScanJavaServerTaskRequest scanJavaServerTaskRequest) {

            this.scanJavaServerTaskRequest = scanJavaServerTaskRequest;
            return this;
        }
        @CustomType.Setter
        public Builder scanLibraryTaskRequest(@Nullable TaskScheduleTaskDetailsScanLibraryTaskRequest scanLibraryTaskRequest) {

            this.scanLibraryTaskRequest = scanLibraryTaskRequest;
            return this;
        }
        @CustomType.Setter
        public Builder taskType(String taskType) {
            if (taskType == null) {
              throw new MissingRequiredPropertyException("TaskScheduleTaskDetails", "taskType");
            }
            this.taskType = taskType;
            return this;
        }
        public TaskScheduleTaskDetails build() {
            final var _resultValue = new TaskScheduleTaskDetails();
            _resultValue.addInstallationSiteTaskRequest = addInstallationSiteTaskRequest;
            _resultValue.cryptoTaskRequest = cryptoTaskRequest;
            _resultValue.deployedApplicationMigrationTaskRequest = deployedApplicationMigrationTaskRequest;
            _resultValue.javaMigrationTaskRequest = javaMigrationTaskRequest;
            _resultValue.jfrTaskRequest = jfrTaskRequest;
            _resultValue.performanceTuningTaskRequest = performanceTuningTaskRequest;
            _resultValue.removeInstallationSiteTaskRequest = removeInstallationSiteTaskRequest;
            _resultValue.scanJavaServerTaskRequest = scanJavaServerTaskRequest;
            _resultValue.scanLibraryTaskRequest = scanLibraryTaskRequest;
            _resultValue.taskType = taskType;
            return _resultValue;
        }
    }
}
