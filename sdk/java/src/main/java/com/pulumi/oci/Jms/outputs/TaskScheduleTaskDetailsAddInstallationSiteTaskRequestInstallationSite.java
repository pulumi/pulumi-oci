// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite {
    /**
     * @return (Updatable) Artifact content type for the Java version.
     * 
     */
    private @Nullable String artifactContentType;
    /**
     * @return (Updatable) Forces the installation request even if a more recent release is already present in the host.
     * 
     */
    private @Nullable Boolean forceInstall;
    /**
     * @return (Updatable) Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
     * 
     */
    private @Nullable Boolean headlessMode;
    /**
     * @return (Updatable) Custom path to install new Java installation site.
     * 
     */
    private @Nullable String installationPath;
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
     * 
     */
    private @Nullable String managedInstanceId;
    /**
     * @return (Updatable) The release version of the Java Runtime.
     * 
     */
    private @Nullable String releaseVersion;

    private TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite() {}
    /**
     * @return (Updatable) Artifact content type for the Java version.
     * 
     */
    public Optional<String> artifactContentType() {
        return Optional.ofNullable(this.artifactContentType);
    }
    /**
     * @return (Updatable) Forces the installation request even if a more recent release is already present in the host.
     * 
     */
    public Optional<Boolean> forceInstall() {
        return Optional.ofNullable(this.forceInstall);
    }
    /**
     * @return (Updatable) Flag to install headless or headful Java installation. Only valid for Oracle Linux in OCI.
     * 
     */
    public Optional<Boolean> headlessMode() {
        return Optional.ofNullable(this.headlessMode);
    }
    /**
     * @return (Updatable) Custom path to install new Java installation site.
     * 
     */
    public Optional<String> installationPath() {
        return Optional.ofNullable(this.installationPath);
    }
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the related managed instance.
     * 
     */
    public Optional<String> managedInstanceId() {
        return Optional.ofNullable(this.managedInstanceId);
    }
    /**
     * @return (Updatable) The release version of the Java Runtime.
     * 
     */
    public Optional<String> releaseVersion() {
        return Optional.ofNullable(this.releaseVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String artifactContentType;
        private @Nullable Boolean forceInstall;
        private @Nullable Boolean headlessMode;
        private @Nullable String installationPath;
        private @Nullable String managedInstanceId;
        private @Nullable String releaseVersion;
        public Builder() {}
        public Builder(TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactContentType = defaults.artifactContentType;
    	      this.forceInstall = defaults.forceInstall;
    	      this.headlessMode = defaults.headlessMode;
    	      this.installationPath = defaults.installationPath;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.releaseVersion = defaults.releaseVersion;
        }

        @CustomType.Setter
        public Builder artifactContentType(@Nullable String artifactContentType) {

            this.artifactContentType = artifactContentType;
            return this;
        }
        @CustomType.Setter
        public Builder forceInstall(@Nullable Boolean forceInstall) {

            this.forceInstall = forceInstall;
            return this;
        }
        @CustomType.Setter
        public Builder headlessMode(@Nullable Boolean headlessMode) {

            this.headlessMode = headlessMode;
            return this;
        }
        @CustomType.Setter
        public Builder installationPath(@Nullable String installationPath) {

            this.installationPath = installationPath;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceId(@Nullable String managedInstanceId) {

            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder releaseVersion(@Nullable String releaseVersion) {

            this.releaseVersion = releaseVersion;
            return this;
        }
        public TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite build() {
            final var _resultValue = new TaskScheduleTaskDetailsAddInstallationSiteTaskRequestInstallationSite();
            _resultValue.artifactContentType = artifactContentType;
            _resultValue.forceInstall = forceInstall;
            _resultValue.headlessMode = headlessMode;
            _resultValue.installationPath = installationPath;
            _resultValue.managedInstanceId = managedInstanceId;
            _resultValue.releaseVersion = releaseVersion;
            return _resultValue;
        }
    }
}
