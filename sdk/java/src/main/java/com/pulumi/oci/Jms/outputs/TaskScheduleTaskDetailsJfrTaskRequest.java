// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Jms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Jms.outputs.TaskScheduleTaskDetailsJfrTaskRequestTarget;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TaskScheduleTaskDetailsJfrTaskRequest {
    /**
     * @return (Updatable) The profile used for JFR events selection. If the name isn&#39;t recognized, the settings from jfcV1 or jfcV2 will be used depending on the JVM version. Both jfcV2 and jfcV1 should be provided to ensure JFR collection on different JVM versions.
     * 
     */
    private @Nullable String jfcProfileName;
    /**
     * @return (Updatable) The BASE64 encoded string of JFR settings XML with schema used by JDK 8.
     * 
     */
    private @Nullable String jfcV1;
    /**
     * @return (Updatable) The BASE64 encoded string of JFR settings XML with [schema used by JDK 9 and after](https://raw.githubusercontent.com/openjdk/jdk/master/src/jdk.jfr/share/classes/jdk/jfr/internal/jfc/jfc.xsd).
     * 
     */
    private @Nullable String jfcV2;
    /**
     * @return (Updatable) Duration of the JFR recording in minutes.
     * 
     */
    private @Nullable Integer recordingDurationInMinutes;
    /**
     * @return (Updatable) The maximum size limit for the JFR file collected.
     * 
     */
    private @Nullable Integer recordingSizeInMb;
    /**
     * @return (Updatable) The attachment targets to start JFR.
     * 
     */
    private @Nullable List<TaskScheduleTaskDetailsJfrTaskRequestTarget> targets;
    /**
     * @return (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
     * 
     */
    private @Nullable Integer waitingPeriodInMinutes;

    private TaskScheduleTaskDetailsJfrTaskRequest() {}
    /**
     * @return (Updatable) The profile used for JFR events selection. If the name isn&#39;t recognized, the settings from jfcV1 or jfcV2 will be used depending on the JVM version. Both jfcV2 and jfcV1 should be provided to ensure JFR collection on different JVM versions.
     * 
     */
    public Optional<String> jfcProfileName() {
        return Optional.ofNullable(this.jfcProfileName);
    }
    /**
     * @return (Updatable) The BASE64 encoded string of JFR settings XML with schema used by JDK 8.
     * 
     */
    public Optional<String> jfcV1() {
        return Optional.ofNullable(this.jfcV1);
    }
    /**
     * @return (Updatable) The BASE64 encoded string of JFR settings XML with [schema used by JDK 9 and after](https://raw.githubusercontent.com/openjdk/jdk/master/src/jdk.jfr/share/classes/jdk/jfr/internal/jfc/jfc.xsd).
     * 
     */
    public Optional<String> jfcV2() {
        return Optional.ofNullable(this.jfcV2);
    }
    /**
     * @return (Updatable) Duration of the JFR recording in minutes.
     * 
     */
    public Optional<Integer> recordingDurationInMinutes() {
        return Optional.ofNullable(this.recordingDurationInMinutes);
    }
    /**
     * @return (Updatable) The maximum size limit for the JFR file collected.
     * 
     */
    public Optional<Integer> recordingSizeInMb() {
        return Optional.ofNullable(this.recordingSizeInMb);
    }
    /**
     * @return (Updatable) The attachment targets to start JFR.
     * 
     */
    public List<TaskScheduleTaskDetailsJfrTaskRequestTarget> targets() {
        return this.targets == null ? List.of() : this.targets;
    }
    /**
     * @return (Updatable) Period to looking for JVMs. In addition to attach to running JVMs when given the command, JVM started within the waiting period will also be attached for JFR. The value should be larger than the agent polling interval setting for the fleet to ensure agent can get the instructions. If not specified, the agent polling interval for the fleet is used.
     * 
     */
    public Optional<Integer> waitingPeriodInMinutes() {
        return Optional.ofNullable(this.waitingPeriodInMinutes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TaskScheduleTaskDetailsJfrTaskRequest defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String jfcProfileName;
        private @Nullable String jfcV1;
        private @Nullable String jfcV2;
        private @Nullable Integer recordingDurationInMinutes;
        private @Nullable Integer recordingSizeInMb;
        private @Nullable List<TaskScheduleTaskDetailsJfrTaskRequestTarget> targets;
        private @Nullable Integer waitingPeriodInMinutes;
        public Builder() {}
        public Builder(TaskScheduleTaskDetailsJfrTaskRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jfcProfileName = defaults.jfcProfileName;
    	      this.jfcV1 = defaults.jfcV1;
    	      this.jfcV2 = defaults.jfcV2;
    	      this.recordingDurationInMinutes = defaults.recordingDurationInMinutes;
    	      this.recordingSizeInMb = defaults.recordingSizeInMb;
    	      this.targets = defaults.targets;
    	      this.waitingPeriodInMinutes = defaults.waitingPeriodInMinutes;
        }

        @CustomType.Setter
        public Builder jfcProfileName(@Nullable String jfcProfileName) {

            this.jfcProfileName = jfcProfileName;
            return this;
        }
        @CustomType.Setter
        public Builder jfcV1(@Nullable String jfcV1) {

            this.jfcV1 = jfcV1;
            return this;
        }
        @CustomType.Setter
        public Builder jfcV2(@Nullable String jfcV2) {

            this.jfcV2 = jfcV2;
            return this;
        }
        @CustomType.Setter
        public Builder recordingDurationInMinutes(@Nullable Integer recordingDurationInMinutes) {

            this.recordingDurationInMinutes = recordingDurationInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder recordingSizeInMb(@Nullable Integer recordingSizeInMb) {

            this.recordingSizeInMb = recordingSizeInMb;
            return this;
        }
        @CustomType.Setter
        public Builder targets(@Nullable List<TaskScheduleTaskDetailsJfrTaskRequestTarget> targets) {

            this.targets = targets;
            return this;
        }
        public Builder targets(TaskScheduleTaskDetailsJfrTaskRequestTarget... targets) {
            return targets(List.of(targets));
        }
        @CustomType.Setter
        public Builder waitingPeriodInMinutes(@Nullable Integer waitingPeriodInMinutes) {

            this.waitingPeriodInMinutes = waitingPeriodInMinutes;
            return this;
        }
        public TaskScheduleTaskDetailsJfrTaskRequest build() {
            final var _resultValue = new TaskScheduleTaskDetailsJfrTaskRequest();
            _resultValue.jfcProfileName = jfcProfileName;
            _resultValue.jfcV1 = jfcV1;
            _resultValue.jfcV2 = jfcV2;
            _resultValue.recordingDurationInMinutes = recordingDurationInMinutes;
            _resultValue.recordingSizeInMb = recordingSizeInMb;
            _resultValue.targets = targets;
            _resultValue.waitingPeriodInMinutes = waitingPeriodInMinutes;
            return _resultValue;
        }
    }
}
