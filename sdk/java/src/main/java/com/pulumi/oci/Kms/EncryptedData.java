// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Kms.EncryptedDataArgs;
import com.pulumi.oci.Kms.inputs.EncryptedDataState;
import com.pulumi.oci.Utilities;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Encrypted Data resource in Oracle Cloud Infrastructure Kms service.
 * 
 * Encrypts data using the given [EncryptDataDetails](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/datatypes/EncryptDataDetails) resource.
 * Plaintext included in the example request is a base64-encoded value of a UTF-8 string.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Kms.EncryptedData;
 * import com.pulumi.oci.Kms.EncryptedDataArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testEncryptedData = new EncryptedData(&#34;testEncryptedData&#34;, EncryptedDataArgs.builder()        
 *             .cryptoEndpoint(var_.encrypted_data_crypto_endpoint())
 *             .keyId(oci_kms_key.test_key().id())
 *             .plaintext(var_.encrypted_data_plaintext())
 *             .associatedData(var_.encrypted_data_associated_data())
 *             .encryptionAlgorithm(var_.encrypted_data_encryption_algorithm())
 *             .keyVersionId(oci_kms_key_version.test_key_version().id())
 *             .loggingContext(var_.encrypted_data_logging_context())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Import is not supported for this resource.
 * 
 */
@ResourceType(type="oci:Kms/encryptedData:EncryptedData")
public class EncryptedData extends com.pulumi.resources.CustomResource {
    /**
     * Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associated data must be fewer than 4096 characters.
     * 
     */
    @Export(name="associatedData", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> associatedData;

    /**
     * @return Information that can be used to provide an encryption context for the encrypted data. The length of the string representation of the associated data must be fewer than 4096 characters.
     * 
     */
    public Output<Optional<Map<String,Object>>> associatedData() {
        return Codegen.optional(this.associatedData);
    }
    /**
     * The encrypted data.
     * 
     */
    @Export(name="ciphertext", refs={String.class}, tree="[0]")
    private Output<String> ciphertext;

    /**
     * @return The encrypted data.
     * 
     */
    public Output<String> ciphertext() {
        return this.ciphertext;
    }
    /**
     * The service endpoint to perform cryptographic operations against. Cryptographic operations include &#39;Encrypt,&#39; &#39;Decrypt,&#39; and &#39;GenerateDataEncryptionKey&#39; operations. see Vault Crypto endpoint.
     * 
     */
    @Export(name="cryptoEndpoint", refs={String.class}, tree="[0]")
    private Output<String> cryptoEndpoint;

    /**
     * @return The service endpoint to perform cryptographic operations against. Cryptographic operations include &#39;Encrypt,&#39; &#39;Decrypt,&#39; and &#39;GenerateDataEncryptionKey&#39; operations. see Vault Crypto endpoint.
     * 
     */
    public Output<String> cryptoEndpoint() {
        return this.cryptoEndpoint;
    }
    /**
     * The encryption algorithm to use to encrypt and decrypt data with a customer-managed key. `AES_256_GCM` indicates that the key is a symmetric key that uses the Advanced Encryption Standard (AES) algorithm and that the mode of encryption is the Galois/Counter Mode (GCM). `RSA_OAEP_SHA_1` indicates that the key is an asymmetric key that uses the RSA encryption algorithm and uses Optimal Asymmetric Encryption Padding (OAEP). `RSA_OAEP_SHA_256` indicates that the key is an asymmetric key that uses the RSA encryption algorithm with a SHA-256 hash and uses OAEP.
     * 
     */
    @Export(name="encryptionAlgorithm", refs={String.class}, tree="[0]")
    private Output<String> encryptionAlgorithm;

    /**
     * @return The encryption algorithm to use to encrypt and decrypt data with a customer-managed key. `AES_256_GCM` indicates that the key is a symmetric key that uses the Advanced Encryption Standard (AES) algorithm and that the mode of encryption is the Galois/Counter Mode (GCM). `RSA_OAEP_SHA_1` indicates that the key is an asymmetric key that uses the RSA encryption algorithm and uses Optimal Asymmetric Encryption Padding (OAEP). `RSA_OAEP_SHA_256` indicates that the key is an asymmetric key that uses the RSA encryption algorithm with a SHA-256 hash and uses OAEP.
     * 
     */
    public Output<String> encryptionAlgorithm() {
        return this.encryptionAlgorithm;
    }
    /**
     * The OCID of the key to encrypt with.
     * 
     */
    @Export(name="keyId", refs={String.class}, tree="[0]")
    private Output<String> keyId;

    /**
     * @return The OCID of the key to encrypt with.
     * 
     */
    public Output<String> keyId() {
        return this.keyId;
    }
    /**
     * The OCID of the key version used to encrypt the ciphertext.
     * 
     */
    @Export(name="keyVersionId", refs={String.class}, tree="[0]")
    private Output<String> keyVersionId;

    /**
     * @return The OCID of the key version used to encrypt the ciphertext.
     * 
     */
    public Output<String> keyVersionId() {
        return this.keyVersionId;
    }
    /**
     * Information that provides context for audit logging. You can provide this additional data as key-value pairs to include in the audit logs when audit logging is enabled.
     * 
     */
    @Export(name="loggingContext", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> loggingContext;

    /**
     * @return Information that provides context for audit logging. You can provide this additional data as key-value pairs to include in the audit logs when audit logging is enabled.
     * 
     */
    public Output<Optional<Map<String,Object>>> loggingContext() {
        return Codegen.optional(this.loggingContext);
    }
    /**
     * The plaintext data to encrypt.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="plaintext", refs={String.class}, tree="[0]")
    private Output<String> plaintext;

    /**
     * @return The plaintext data to encrypt.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> plaintext() {
        return this.plaintext;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EncryptedData(String name) {
        this(name, EncryptedDataArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EncryptedData(String name, EncryptedDataArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EncryptedData(String name, EncryptedDataArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Kms/encryptedData:EncryptedData", name, args == null ? EncryptedDataArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EncryptedData(String name, Output<String> id, @Nullable EncryptedDataState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Kms/encryptedData:EncryptedData", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EncryptedData get(String name, Output<String> id, @Nullable EncryptedDataState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EncryptedData(name, id, state, options);
    }
}
