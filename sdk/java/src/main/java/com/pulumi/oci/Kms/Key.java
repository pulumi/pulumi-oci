// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Kms.KeyArgs;
import com.pulumi.oci.Kms.inputs.KeyState;
import com.pulumi.oci.Kms.outputs.KeyExternalKeyReference;
import com.pulumi.oci.Kms.outputs.KeyExternalKeyReferenceDetail;
import com.pulumi.oci.Kms.outputs.KeyKeyShape;
import com.pulumi.oci.Kms.outputs.KeyReplicaDetail;
import com.pulumi.oci.Kms.outputs.KeyRestoreFromFile;
import com.pulumi.oci.Kms.outputs.KeyRestoreFromObjectStore;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Key resource in Oracle Cloud Infrastructure Kms service.
 * 
 * Creates a new master encryption key.
 * 
 * As a management operation, this call is subject to a Key Management limit that applies to the total
 * number of requests across all management write operations. Key Management might throttle this call
 * to reject an otherwise valid request when the total rate of management write operations exceeds 10
 * requests per second for a given tenancy.
 * 
 * ## Import
 * 
 * Keys can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Kms/key:Key test_key &#34;managementEndpoint/{managementEndpoint}/keys/{keyId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Kms/key:Key")
public class Key extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The OCID of the compartment where you want to create the master encryption key.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment where you want to create the master encryption key.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
     * 
     */
    @Export(name="currentKeyVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> currentKeyVersion;

    /**
     * @return The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
     * 
     */
    public Output<Optional<String>> currentKeyVersion() {
        return Codegen.optional(this.currentKeyVersion);
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> definedTags() {
        return Codegen.optional(this.definedTags);
    }
    /**
     * (Updatable) Desired state of the key. Possible values : `ENABLED` or `DISABLED`
     * 
     */
    @Export(name="desiredState", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> desiredState;

    /**
     * @return (Updatable) Desired state of the key. Possible values : `ENABLED` or `DISABLED`
     * 
     */
    public Output<Optional<String>> desiredState() {
        return Codegen.optional(this.desiredState);
    }
    /**
     * (Updatable) A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * A reference to the key on external key manager.
     * 
     */
    @Export(name="externalKeyReference", refs={KeyExternalKeyReference.class}, tree="[0]")
    private Output</* @Nullable */ KeyExternalKeyReference> externalKeyReference;

    /**
     * @return A reference to the key on external key manager.
     * 
     */
    public Output<Optional<KeyExternalKeyReference>> externalKeyReference() {
        return Codegen.optional(this.externalKeyReference);
    }
    /**
     * Key reference data to be returned to the customer as a response.
     * 
     */
    @Export(name="externalKeyReferenceDetails", refs={List.class,KeyExternalKeyReferenceDetail.class}, tree="[0,1]")
    private Output</* @Nullable */ List<KeyExternalKeyReferenceDetail>> externalKeyReferenceDetails;

    /**
     * @return Key reference data to be returned to the customer as a response.
     * 
     */
    public Output<Optional<List<KeyExternalKeyReferenceDetail>>> externalKeyReferenceDetails() {
        return Codegen.optional(this.externalKeyReferenceDetails);
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> freeformTags() {
        return Codegen.optional(this.freeformTags);
    }
    /**
     * A Boolean value that indicates whether the Key belongs to primary Vault or replica vault.
     * 
     */
    @Export(name="isPrimary", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isPrimary;

    /**
     * @return A Boolean value that indicates whether the Key belongs to primary Vault or replica vault.
     * 
     */
    public Output<Optional<Boolean>> isPrimary() {
        return Codegen.optional(this.isPrimary);
    }
    /**
     * The cryptographic properties of a key.
     * 
     */
    @Export(name="keyShape", refs={KeyKeyShape.class}, tree="[0]")
    private Output<KeyKeyShape> keyShape;

    /**
     * @return The cryptographic properties of a key.
     * 
     */
    public Output<KeyKeyShape> keyShape() {
        return this.keyShape;
    }
    /**
     * The service endpoint to perform management operations against. Management operations include &#39;Create,&#39; &#39;Update,&#39; &#39;List,&#39; &#39;Get,&#39; and &#39;Delete&#39; operations. See Vault Management endpoint.
     * 
     */
    @Export(name="managementEndpoint", refs={String.class}, tree="[0]")
    private Output<String> managementEndpoint;

    /**
     * @return The service endpoint to perform management operations against. Management operations include &#39;Create,&#39; &#39;Update,&#39; &#39;List,&#39; &#39;Get,&#39; and &#39;Delete&#39; operations. See Vault Management endpoint.
     * 
     */
    public Output<String> managementEndpoint() {
        return this.managementEndpoint;
    }
    /**
     * The key&#39;s protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault&#39;s RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of `SOFTWARE` are performed on the server. By default, a key&#39;s protection mode is set to `HSM`. You can&#39;t change a key&#39;s protection mode after the key is created or imported. A protection mode of `EXTERNAL` mean that the key persists on the customer&#39;s external key manager which is hosted externally outside of oracle. Oracle only hold a reference to that key. All cryptographic operations that use a key with a protection mode of `EXTERNAL` are performed by external key manager.
     * 
     */
    @Export(name="protectionMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> protectionMode;

    /**
     * @return The key&#39;s protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault&#39;s RSA wrapping key which persists on the HSM. All cryptographic operations that use a key with a protection mode of `SOFTWARE` are performed on the server. By default, a key&#39;s protection mode is set to `HSM`. You can&#39;t change a key&#39;s protection mode after the key is created or imported. A protection mode of `EXTERNAL` mean that the key persists on the customer&#39;s external key manager which is hosted externally outside of oracle. Oracle only hold a reference to that key. All cryptographic operations that use a key with a protection mode of `EXTERNAL` are performed by external key manager.
     * 
     */
    public Output<Optional<String>> protectionMode() {
        return Codegen.optional(this.protectionMode);
    }
    /**
     * Key replica details
     * 
     */
    @Export(name="replicaDetails", refs={List.class,KeyReplicaDetail.class}, tree="[0,1]")
    private Output</* @Nullable */ List<KeyReplicaDetail>> replicaDetails;

    /**
     * @return Key replica details
     * 
     */
    public Output<Optional<List<KeyReplicaDetail>>> replicaDetails() {
        return Codegen.optional(this.replicaDetails);
    }
    /**
     * (Updatable) Details where key was backed up.
     * 
     */
    @Export(name="restoreFromFile", refs={KeyRestoreFromFile.class}, tree="[0]")
    private Output</* @Nullable */ KeyRestoreFromFile> restoreFromFile;

    /**
     * @return (Updatable) Details where key was backed up.
     * 
     */
    public Output<Optional<KeyRestoreFromFile>> restoreFromFile() {
        return Codegen.optional(this.restoreFromFile);
    }
    /**
     * (Updatable) Details where key was backed up
     * 
     */
    @Export(name="restoreFromObjectStore", refs={KeyRestoreFromObjectStore.class}, tree="[0]")
    private Output</* @Nullable */ KeyRestoreFromObjectStore> restoreFromObjectStore;

    /**
     * @return (Updatable) Details where key was backed up
     * 
     */
    public Output<Optional<KeyRestoreFromObjectStore>> restoreFromObjectStore() {
        return Codegen.optional(this.restoreFromObjectStore);
    }
    /**
     * (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
     * 
     */
    @Export(name="restoreTrigger", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> restoreTrigger;

    /**
     * @return (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
     * 
     */
    public Output<Optional<Boolean>> restoreTrigger() {
        return Codegen.optional(this.restoreTrigger);
    }
    /**
     * The OCID of the key from which this key was restored.
     * 
     */
    @Export(name="restoredFromKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> restoredFromKeyId;

    /**
     * @return The OCID of the key from which this key was restored.
     * 
     */
    public Output<Optional<String>> restoredFromKeyId() {
        return Codegen.optional(this.restoredFromKeyId);
    }
    /**
     * The key&#39;s current lifecycle state.  Example: `ENABLED`
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return The key&#39;s current lifecycle state.  Example: `ENABLED`
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeCreated;

    /**
     * @return The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    public Output<Optional<String>> timeCreated() {
        return Codegen.optional(this.timeCreated);
    }
    /**
     * (Updatable) An optional property for the deletion time of the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="timeOfDeletion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeOfDeletion;

    /**
     * @return (Updatable) An optional property for the deletion time of the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Optional<String>> timeOfDeletion() {
        return Codegen.optional(this.timeOfDeletion);
    }
    /**
     * The OCID of the vault that contains this key.
     * 
     */
    @Export(name="vaultId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vaultId;

    /**
     * @return The OCID of the vault that contains this key.
     * 
     */
    public Output<Optional<String>> vaultId() {
        return Codegen.optional(this.vaultId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Key(String name) {
        this(name, KeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Key(String name, KeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Key(String name, KeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Kms/key:Key", name, args == null ? KeyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Key(String name, Output<String> id, @Nullable KeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Kms/key:Key", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Key get(String name, Output<String> id, @Nullable KeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Key(name, id, state, options);
    }
}
