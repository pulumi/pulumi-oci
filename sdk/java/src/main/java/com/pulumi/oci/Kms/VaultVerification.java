// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Kms.VaultVerificationArgs;
import com.pulumi.oci.Kms.inputs.VaultVerificationState;
import com.pulumi.oci.Kms.outputs.VaultVerificationReplicaVaultMetadata;
import com.pulumi.oci.Utilities;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This source triggers action to create, update and delete replica for a vault in Oracle Cloud Infrastructure Kms service.
 * 
 * A vault replica is a mirror of that vault in a different region in the same realm.
 * The vault replica and all the resources have same OCID with corresponding original ones.
 * 
 * This only supports virtual private vault for now.
 * This supports only one replica in a region for a vault. Multiple replica will be supported in the future.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Kms.VaultVerification;
 * import com.pulumi.oci.Kms.VaultVerificationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testReplication = new VaultVerification("testReplication", VaultVerificationArgs.builder()
 *             .vaultId(testVault.id())
 *             .replicaRegion(replicaRegion)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="oci:Kms/vaultVerification:VaultVerification")
public class VaultVerification extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The region to be created replica to. When updated,
     * replica will be deleted from old region, and created to updated region.
     * 
     */
    @Export(name="replicaRegion", refs={String.class}, tree="[0]")
    private Output<String> replicaRegion;

    /**
     * @return (Updatable) The region to be created replica to. When updated,
     * replica will be deleted from old region, and created to updated region.
     * 
     */
    public Output<String> replicaRegion() {
        return this.replicaRegion;
    }
    @Export(name="replicaVaultMetadata", refs={VaultVerificationReplicaVaultMetadata.class}, tree="[0]")
    private Output<VaultVerificationReplicaVaultMetadata> replicaVaultMetadata;

    public Output<VaultVerificationReplicaVaultMetadata> replicaVaultMetadata() {
        return this.replicaVaultMetadata;
    }
    /**
     * The OCID of the primary vault to create replica from.
     * 
     */
    @Export(name="vaultId", refs={String.class}, tree="[0]")
    private Output<String> vaultId;

    /**
     * @return The OCID of the primary vault to create replica from.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VaultVerification(java.lang.String name) {
        this(name, VaultVerificationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VaultVerification(java.lang.String name, VaultVerificationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VaultVerification(java.lang.String name, VaultVerificationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Kms/vaultVerification:VaultVerification", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private VaultVerification(java.lang.String name, Output<java.lang.String> id, @Nullable VaultVerificationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Kms/vaultVerification:VaultVerification", name, state, makeResourceOptions(options, id), false);
    }

    private static VaultVerificationArgs makeArgs(VaultVerificationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VaultVerificationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VaultVerification get(java.lang.String name, Output<java.lang.String> id, @Nullable VaultVerificationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VaultVerification(name, id, state, options);
    }
}
