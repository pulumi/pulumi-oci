// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyAutoKeyRotationDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyAutoKeyRotationDetailsArgs Empty = new KeyAutoKeyRotationDetailsArgs();

    /**
     * (Updatable) The last execution status message of auto key rotation.
     * 
     */
    @Import(name="lastRotationMessage")
    private @Nullable Output<String> lastRotationMessage;

    /**
     * @return (Updatable) The last execution status message of auto key rotation.
     * 
     */
    public Optional<Output<String>> lastRotationMessage() {
        return Optional.ofNullable(this.lastRotationMessage);
    }

    /**
     * (Updatable) The status of last execution of auto key rotation.
     * 
     */
    @Import(name="lastRotationStatus")
    private @Nullable Output<String> lastRotationStatus;

    /**
     * @return (Updatable) The status of last execution of auto key rotation.
     * 
     */
    public Optional<Output<String>> lastRotationStatus() {
        return Optional.ofNullable(this.lastRotationStatus);
    }

    /**
     * (Updatable) The interval of auto key rotation. For auto key rotation the interval should between 60 day and 365 days (1 year). Note: User must specify this parameter when creating a new schedule.
     * 
     */
    @Import(name="rotationIntervalInDays")
    private @Nullable Output<Integer> rotationIntervalInDays;

    /**
     * @return (Updatable) The interval of auto key rotation. For auto key rotation the interval should between 60 day and 365 days (1 year). Note: User must specify this parameter when creating a new schedule.
     * 
     */
    public Optional<Output<Integer>> rotationIntervalInDays() {
        return Optional.ofNullable(this.rotationIntervalInDays);
    }

    /**
     * (Updatable) A property indicating Last rotation Date. Example: `2023-04-04T00:00:00Z`.
     * 
     */
    @Import(name="timeOfLastRotation")
    private @Nullable Output<String> timeOfLastRotation;

    /**
     * @return (Updatable) A property indicating Last rotation Date. Example: `2023-04-04T00:00:00Z`.
     * 
     */
    public Optional<Output<String>> timeOfLastRotation() {
        return Optional.ofNullable(this.timeOfLastRotation);
    }

    /**
     * (Updatable) A property indicating Next estimated scheduled Time, as per the interval, expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z`. The time has no significance when scheduling an auto key rotation as this can be done anytime approximately the scheduled day, KMS ignores the time and replaces it with 00:00, for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z.
     * 
     */
    @Import(name="timeOfNextRotation")
    private @Nullable Output<String> timeOfNextRotation;

    /**
     * @return (Updatable) A property indicating Next estimated scheduled Time, as per the interval, expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z`. The time has no significance when scheduling an auto key rotation as this can be done anytime approximately the scheduled day, KMS ignores the time and replaces it with 00:00, for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z.
     * 
     */
    public Optional<Output<String>> timeOfNextRotation() {
        return Optional.ofNullable(this.timeOfNextRotation);
    }

    /**
     * (Updatable) A property indicating  scheduled start date expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z. The time has no significance when scheduling an auto key rotation as this can be done anytime approximately the scheduled day, KMS ignores the time and replaces it with 00:00, for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z . Note : Today’s date will be used if not specified by customer.
     * 
     */
    @Import(name="timeOfScheduleStart")
    private @Nullable Output<String> timeOfScheduleStart;

    /**
     * @return (Updatable) A property indicating  scheduled start date expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z. The time has no significance when scheduling an auto key rotation as this can be done anytime approximately the scheduled day, KMS ignores the time and replaces it with 00:00, for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z . Note : Today’s date will be used if not specified by customer.
     * 
     */
    public Optional<Output<String>> timeOfScheduleStart() {
        return Optional.ofNullable(this.timeOfScheduleStart);
    }

    private KeyAutoKeyRotationDetailsArgs() {}

    private KeyAutoKeyRotationDetailsArgs(KeyAutoKeyRotationDetailsArgs $) {
        this.lastRotationMessage = $.lastRotationMessage;
        this.lastRotationStatus = $.lastRotationStatus;
        this.rotationIntervalInDays = $.rotationIntervalInDays;
        this.timeOfLastRotation = $.timeOfLastRotation;
        this.timeOfNextRotation = $.timeOfNextRotation;
        this.timeOfScheduleStart = $.timeOfScheduleStart;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyAutoKeyRotationDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyAutoKeyRotationDetailsArgs $;

        public Builder() {
            $ = new KeyAutoKeyRotationDetailsArgs();
        }

        public Builder(KeyAutoKeyRotationDetailsArgs defaults) {
            $ = new KeyAutoKeyRotationDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param lastRotationMessage (Updatable) The last execution status message of auto key rotation.
         * 
         * @return builder
         * 
         */
        public Builder lastRotationMessage(@Nullable Output<String> lastRotationMessage) {
            $.lastRotationMessage = lastRotationMessage;
            return this;
        }

        /**
         * @param lastRotationMessage (Updatable) The last execution status message of auto key rotation.
         * 
         * @return builder
         * 
         */
        public Builder lastRotationMessage(String lastRotationMessage) {
            return lastRotationMessage(Output.of(lastRotationMessage));
        }

        /**
         * @param lastRotationStatus (Updatable) The status of last execution of auto key rotation.
         * 
         * @return builder
         * 
         */
        public Builder lastRotationStatus(@Nullable Output<String> lastRotationStatus) {
            $.lastRotationStatus = lastRotationStatus;
            return this;
        }

        /**
         * @param lastRotationStatus (Updatable) The status of last execution of auto key rotation.
         * 
         * @return builder
         * 
         */
        public Builder lastRotationStatus(String lastRotationStatus) {
            return lastRotationStatus(Output.of(lastRotationStatus));
        }

        /**
         * @param rotationIntervalInDays (Updatable) The interval of auto key rotation. For auto key rotation the interval should between 60 day and 365 days (1 year). Note: User must specify this parameter when creating a new schedule.
         * 
         * @return builder
         * 
         */
        public Builder rotationIntervalInDays(@Nullable Output<Integer> rotationIntervalInDays) {
            $.rotationIntervalInDays = rotationIntervalInDays;
            return this;
        }

        /**
         * @param rotationIntervalInDays (Updatable) The interval of auto key rotation. For auto key rotation the interval should between 60 day and 365 days (1 year). Note: User must specify this parameter when creating a new schedule.
         * 
         * @return builder
         * 
         */
        public Builder rotationIntervalInDays(Integer rotationIntervalInDays) {
            return rotationIntervalInDays(Output.of(rotationIntervalInDays));
        }

        /**
         * @param timeOfLastRotation (Updatable) A property indicating Last rotation Date. Example: `2023-04-04T00:00:00Z`.
         * 
         * @return builder
         * 
         */
        public Builder timeOfLastRotation(@Nullable Output<String> timeOfLastRotation) {
            $.timeOfLastRotation = timeOfLastRotation;
            return this;
        }

        /**
         * @param timeOfLastRotation (Updatable) A property indicating Last rotation Date. Example: `2023-04-04T00:00:00Z`.
         * 
         * @return builder
         * 
         */
        public Builder timeOfLastRotation(String timeOfLastRotation) {
            return timeOfLastRotation(Output.of(timeOfLastRotation));
        }

        /**
         * @param timeOfNextRotation (Updatable) A property indicating Next estimated scheduled Time, as per the interval, expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z`. The time has no significance when scheduling an auto key rotation as this can be done anytime approximately the scheduled day, KMS ignores the time and replaces it with 00:00, for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z.
         * 
         * @return builder
         * 
         */
        public Builder timeOfNextRotation(@Nullable Output<String> timeOfNextRotation) {
            $.timeOfNextRotation = timeOfNextRotation;
            return this;
        }

        /**
         * @param timeOfNextRotation (Updatable) A property indicating Next estimated scheduled Time, as per the interval, expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z`. The time has no significance when scheduling an auto key rotation as this can be done anytime approximately the scheduled day, KMS ignores the time and replaces it with 00:00, for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z.
         * 
         * @return builder
         * 
         */
        public Builder timeOfNextRotation(String timeOfNextRotation) {
            return timeOfNextRotation(Output.of(timeOfNextRotation));
        }

        /**
         * @param timeOfScheduleStart (Updatable) A property indicating  scheduled start date expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z. The time has no significance when scheduling an auto key rotation as this can be done anytime approximately the scheduled day, KMS ignores the time and replaces it with 00:00, for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z . Note : Today’s date will be used if not specified by customer.
         * 
         * @return builder
         * 
         */
        public Builder timeOfScheduleStart(@Nullable Output<String> timeOfScheduleStart) {
            $.timeOfScheduleStart = timeOfScheduleStart;
            return this;
        }

        /**
         * @param timeOfScheduleStart (Updatable) A property indicating  scheduled start date expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z. The time has no significance when scheduling an auto key rotation as this can be done anytime approximately the scheduled day, KMS ignores the time and replaces it with 00:00, for example 2023-04-04T15:14:13Z will be used as 2023-04-04T00:00:00Z . Note : Today’s date will be used if not specified by customer.
         * 
         * @return builder
         * 
         */
        public Builder timeOfScheduleStart(String timeOfScheduleStart) {
            return timeOfScheduleStart(Output.of(timeOfScheduleStart));
        }

        public KeyAutoKeyRotationDetailsArgs build() {
            return $;
        }
    }

}
