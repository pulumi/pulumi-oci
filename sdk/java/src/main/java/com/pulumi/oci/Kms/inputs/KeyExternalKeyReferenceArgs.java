// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class KeyExternalKeyReferenceArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyExternalKeyReferenceArgs Empty = new KeyExternalKeyReferenceArgs();

    /**
     * ExternalKeyId refers to the globally unique key Id associated with the key created in external vault in CTM
     * 
     */
    @Import(name="externalKeyId", required=true)
    private Output<String> externalKeyId;

    /**
     * @return ExternalKeyId refers to the globally unique key Id associated with the key created in external vault in CTM
     * 
     */
    public Output<String> externalKeyId() {
        return this.externalKeyId;
    }

    private KeyExternalKeyReferenceArgs() {}

    private KeyExternalKeyReferenceArgs(KeyExternalKeyReferenceArgs $) {
        this.externalKeyId = $.externalKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyExternalKeyReferenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyExternalKeyReferenceArgs $;

        public Builder() {
            $ = new KeyExternalKeyReferenceArgs();
        }

        public Builder(KeyExternalKeyReferenceArgs defaults) {
            $ = new KeyExternalKeyReferenceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalKeyId ExternalKeyId refers to the globally unique key Id associated with the key created in external vault in CTM
         * 
         * @return builder
         * 
         */
        public Builder externalKeyId(Output<String> externalKeyId) {
            $.externalKeyId = externalKeyId;
            return this;
        }

        /**
         * @param externalKeyId ExternalKeyId refers to the globally unique key Id associated with the key created in external vault in CTM
         * 
         * @return builder
         * 
         */
        public Builder externalKeyId(String externalKeyId) {
            return externalKeyId(Output.of(externalKeyId));
        }

        public KeyExternalKeyReferenceArgs build() {
            if ($.externalKeyId == null) {
                throw new MissingRequiredPropertyException("KeyExternalKeyReferenceArgs", "externalKeyId");
            }
            return $;
        }
    }

}
