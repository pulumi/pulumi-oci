// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KeyExternalKeyReferenceDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final KeyExternalKeyReferenceDetailArgs Empty = new KeyExternalKeyReferenceDetailArgs();

    /**
     * ExternalKeyId refers to the globally unique key Id associated with the key created in external vault in CTM.
     * 
     */
    @Import(name="externalKeyId")
    private @Nullable Output<String> externalKeyId;

    /**
     * @return ExternalKeyId refers to the globally unique key Id associated with the key created in external vault in CTM.
     * 
     */
    public Optional<Output<String>> externalKeyId() {
        return Optional.ofNullable(this.externalKeyId);
    }

    /**
     * Key version ID associated with the external key.
     * 
     */
    @Import(name="externalKeyVersionId")
    private @Nullable Output<String> externalKeyVersionId;

    /**
     * @return Key version ID associated with the external key.
     * 
     */
    public Optional<Output<String>> externalKeyVersionId() {
        return Optional.ofNullable(this.externalKeyVersionId);
    }

    private KeyExternalKeyReferenceDetailArgs() {}

    private KeyExternalKeyReferenceDetailArgs(KeyExternalKeyReferenceDetailArgs $) {
        this.externalKeyId = $.externalKeyId;
        this.externalKeyVersionId = $.externalKeyVersionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KeyExternalKeyReferenceDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KeyExternalKeyReferenceDetailArgs $;

        public Builder() {
            $ = new KeyExternalKeyReferenceDetailArgs();
        }

        public Builder(KeyExternalKeyReferenceDetailArgs defaults) {
            $ = new KeyExternalKeyReferenceDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalKeyId ExternalKeyId refers to the globally unique key Id associated with the key created in external vault in CTM.
         * 
         * @return builder
         * 
         */
        public Builder externalKeyId(@Nullable Output<String> externalKeyId) {
            $.externalKeyId = externalKeyId;
            return this;
        }

        /**
         * @param externalKeyId ExternalKeyId refers to the globally unique key Id associated with the key created in external vault in CTM.
         * 
         * @return builder
         * 
         */
        public Builder externalKeyId(String externalKeyId) {
            return externalKeyId(Output.of(externalKeyId));
        }

        /**
         * @param externalKeyVersionId Key version ID associated with the external key.
         * 
         * @return builder
         * 
         */
        public Builder externalKeyVersionId(@Nullable Output<String> externalKeyVersionId) {
            $.externalKeyVersionId = externalKeyVersionId;
            return this;
        }

        /**
         * @param externalKeyVersionId Key version ID associated with the external key.
         * 
         * @return builder
         * 
         */
        public Builder externalKeyVersionId(String externalKeyVersionId) {
            return externalKeyVersionId(Output.of(externalKeyVersionId));
        }

        public KeyExternalKeyReferenceDetailArgs build() {
            return $;
        }
    }

}
