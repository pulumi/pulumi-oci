// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Kms.inputs.VaultExternalKeyManagerMetadataOauthMetadataArgs;
import java.lang.String;
import java.util.Objects;


public final class VaultExternalKeyManagerMetadataArgs extends com.pulumi.resources.ResourceArgs {

    public static final VaultExternalKeyManagerMetadataArgs Empty = new VaultExternalKeyManagerMetadataArgs();

    /**
     * URI of the vault on external key manager.
     * 
     */
    @Import(name="externalVaultEndpointUrl", required=true)
    private Output<String> externalVaultEndpointUrl;

    /**
     * @return URI of the vault on external key manager.
     * 
     */
    public Output<String> externalVaultEndpointUrl() {
        return this.externalVaultEndpointUrl;
    }

    /**
     * Authorization details required to get access token from IDP for accessing protected resources.
     * 
     */
    @Import(name="oauthMetadata", required=true)
    private Output<VaultExternalKeyManagerMetadataOauthMetadataArgs> oauthMetadata;

    /**
     * @return Authorization details required to get access token from IDP for accessing protected resources.
     * 
     */
    public Output<VaultExternalKeyManagerMetadataOauthMetadataArgs> oauthMetadata() {
        return this.oauthMetadata;
    }

    /**
     * OCID of private endpoint created by customer.
     * 
     */
    @Import(name="privateEndpointId", required=true)
    private Output<String> privateEndpointId;

    /**
     * @return OCID of private endpoint created by customer.
     * 
     */
    public Output<String> privateEndpointId() {
        return this.privateEndpointId;
    }

    private VaultExternalKeyManagerMetadataArgs() {}

    private VaultExternalKeyManagerMetadataArgs(VaultExternalKeyManagerMetadataArgs $) {
        this.externalVaultEndpointUrl = $.externalVaultEndpointUrl;
        this.oauthMetadata = $.oauthMetadata;
        this.privateEndpointId = $.privateEndpointId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VaultExternalKeyManagerMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VaultExternalKeyManagerMetadataArgs $;

        public Builder() {
            $ = new VaultExternalKeyManagerMetadataArgs();
        }

        public Builder(VaultExternalKeyManagerMetadataArgs defaults) {
            $ = new VaultExternalKeyManagerMetadataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalVaultEndpointUrl URI of the vault on external key manager.
         * 
         * @return builder
         * 
         */
        public Builder externalVaultEndpointUrl(Output<String> externalVaultEndpointUrl) {
            $.externalVaultEndpointUrl = externalVaultEndpointUrl;
            return this;
        }

        /**
         * @param externalVaultEndpointUrl URI of the vault on external key manager.
         * 
         * @return builder
         * 
         */
        public Builder externalVaultEndpointUrl(String externalVaultEndpointUrl) {
            return externalVaultEndpointUrl(Output.of(externalVaultEndpointUrl));
        }

        /**
         * @param oauthMetadata Authorization details required to get access token from IDP for accessing protected resources.
         * 
         * @return builder
         * 
         */
        public Builder oauthMetadata(Output<VaultExternalKeyManagerMetadataOauthMetadataArgs> oauthMetadata) {
            $.oauthMetadata = oauthMetadata;
            return this;
        }

        /**
         * @param oauthMetadata Authorization details required to get access token from IDP for accessing protected resources.
         * 
         * @return builder
         * 
         */
        public Builder oauthMetadata(VaultExternalKeyManagerMetadataOauthMetadataArgs oauthMetadata) {
            return oauthMetadata(Output.of(oauthMetadata));
        }

        /**
         * @param privateEndpointId OCID of private endpoint created by customer.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointId(Output<String> privateEndpointId) {
            $.privateEndpointId = privateEndpointId;
            return this;
        }

        /**
         * @param privateEndpointId OCID of private endpoint created by customer.
         * 
         * @return builder
         * 
         */
        public Builder privateEndpointId(String privateEndpointId) {
            return privateEndpointId(Output.of(privateEndpointId));
        }

        public VaultExternalKeyManagerMetadataArgs build() {
            $.externalVaultEndpointUrl = Objects.requireNonNull($.externalVaultEndpointUrl, "expected parameter 'externalVaultEndpointUrl' to be non-null");
            $.oauthMetadata = Objects.requireNonNull($.oauthMetadata, "expected parameter 'oauthMetadata' to be non-null");
            $.privateEndpointId = Objects.requireNonNull($.privateEndpointId, "expected parameter 'privateEndpointId' to be non-null");
            return $;
        }
    }

}
