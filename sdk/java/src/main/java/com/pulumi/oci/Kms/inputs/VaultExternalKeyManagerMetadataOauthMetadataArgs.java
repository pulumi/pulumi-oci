// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VaultExternalKeyManagerMetadataOauthMetadataArgs extends com.pulumi.resources.ResourceArgs {

    public static final VaultExternalKeyManagerMetadataOauthMetadataArgs Empty = new VaultExternalKeyManagerMetadataOauthMetadataArgs();

    /**
     * ID of the client app created in IDP.
     * 
     */
    @Import(name="clientAppId", required=true)
    private Output<String> clientAppId;

    /**
     * @return ID of the client app created in IDP.
     * 
     */
    public Output<String> clientAppId() {
        return this.clientAppId;
    }

    /**
     * Secret of the client app created in IDP.
     * 
     */
    @Import(name="clientAppSecret", required=true)
    private Output<String> clientAppSecret;

    /**
     * @return Secret of the client app created in IDP.
     * 
     */
    public Output<String> clientAppSecret() {
        return this.clientAppSecret;
    }

    /**
     * Base URL of the IDCS account where confidential client app is created.
     * 
     */
    @Import(name="idcsAccountNameUrl", required=true)
    private Output<String> idcsAccountNameUrl;

    /**
     * @return Base URL of the IDCS account where confidential client app is created.
     * 
     */
    public Output<String> idcsAccountNameUrl() {
        return this.idcsAccountNameUrl;
    }

    private VaultExternalKeyManagerMetadataOauthMetadataArgs() {}

    private VaultExternalKeyManagerMetadataOauthMetadataArgs(VaultExternalKeyManagerMetadataOauthMetadataArgs $) {
        this.clientAppId = $.clientAppId;
        this.clientAppSecret = $.clientAppSecret;
        this.idcsAccountNameUrl = $.idcsAccountNameUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VaultExternalKeyManagerMetadataOauthMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VaultExternalKeyManagerMetadataOauthMetadataArgs $;

        public Builder() {
            $ = new VaultExternalKeyManagerMetadataOauthMetadataArgs();
        }

        public Builder(VaultExternalKeyManagerMetadataOauthMetadataArgs defaults) {
            $ = new VaultExternalKeyManagerMetadataOauthMetadataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientAppId ID of the client app created in IDP.
         * 
         * @return builder
         * 
         */
        public Builder clientAppId(Output<String> clientAppId) {
            $.clientAppId = clientAppId;
            return this;
        }

        /**
         * @param clientAppId ID of the client app created in IDP.
         * 
         * @return builder
         * 
         */
        public Builder clientAppId(String clientAppId) {
            return clientAppId(Output.of(clientAppId));
        }

        /**
         * @param clientAppSecret Secret of the client app created in IDP.
         * 
         * @return builder
         * 
         */
        public Builder clientAppSecret(Output<String> clientAppSecret) {
            $.clientAppSecret = clientAppSecret;
            return this;
        }

        /**
         * @param clientAppSecret Secret of the client app created in IDP.
         * 
         * @return builder
         * 
         */
        public Builder clientAppSecret(String clientAppSecret) {
            return clientAppSecret(Output.of(clientAppSecret));
        }

        /**
         * @param idcsAccountNameUrl Base URL of the IDCS account where confidential client app is created.
         * 
         * @return builder
         * 
         */
        public Builder idcsAccountNameUrl(Output<String> idcsAccountNameUrl) {
            $.idcsAccountNameUrl = idcsAccountNameUrl;
            return this;
        }

        /**
         * @param idcsAccountNameUrl Base URL of the IDCS account where confidential client app is created.
         * 
         * @return builder
         * 
         */
        public Builder idcsAccountNameUrl(String idcsAccountNameUrl) {
            return idcsAccountNameUrl(Output.of(idcsAccountNameUrl));
        }

        public VaultExternalKeyManagerMetadataOauthMetadataArgs build() {
            if ($.clientAppId == null) {
                throw new MissingRequiredPropertyException("VaultExternalKeyManagerMetadataOauthMetadataArgs", "clientAppId");
            }
            if ($.clientAppSecret == null) {
                throw new MissingRequiredPropertyException("VaultExternalKeyManagerMetadataOauthMetadataArgs", "clientAppSecret");
            }
            if ($.idcsAccountNameUrl == null) {
                throw new MissingRequiredPropertyException("VaultExternalKeyManagerMetadataOauthMetadataArgs", "idcsAccountNameUrl");
            }
            return $;
        }
    }

}
