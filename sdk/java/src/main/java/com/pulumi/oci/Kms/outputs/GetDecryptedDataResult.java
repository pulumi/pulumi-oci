// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDecryptedDataResult {
    private @Nullable Map<String,Object> associatedData;
    private String ciphertext;
    private String cryptoEndpoint;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String keyId;
    /**
     * @return The decrypted data, in the form of a base64-encoded value.
     * 
     */
    private @Nullable String plaintext;
    /**
     * @return Checksum of the decrypted data.
     * 
     */
    private @Nullable String plaintextChecksum;

    private GetDecryptedDataResult() {}
    public Map<String,Object> associatedData() {
        return this.associatedData == null ? Map.of() : this.associatedData;
    }
    public String ciphertext() {
        return this.ciphertext;
    }
    public String cryptoEndpoint() {
        return this.cryptoEndpoint;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String keyId() {
        return this.keyId;
    }
    /**
     * @return The decrypted data, in the form of a base64-encoded value.
     * 
     */
    public Optional<String> plaintext() {
        return Optional.ofNullable(this.plaintext);
    }
    /**
     * @return Checksum of the decrypted data.
     * 
     */
    public Optional<String> plaintextChecksum() {
        return Optional.ofNullable(this.plaintextChecksum);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDecryptedDataResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Map<String,Object> associatedData;
        private String ciphertext;
        private String cryptoEndpoint;
        private @Nullable String id;
        private String keyId;
        private @Nullable String plaintext;
        private @Nullable String plaintextChecksum;
        public Builder() {}
        public Builder(GetDecryptedDataResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedData = defaults.associatedData;
    	      this.ciphertext = defaults.ciphertext;
    	      this.cryptoEndpoint = defaults.cryptoEndpoint;
    	      this.id = defaults.id;
    	      this.keyId = defaults.keyId;
    	      this.plaintext = defaults.plaintext;
    	      this.plaintextChecksum = defaults.plaintextChecksum;
        }

        @CustomType.Setter
        public Builder associatedData(@Nullable Map<String,Object> associatedData) {
            this.associatedData = associatedData;
            return this;
        }
        @CustomType.Setter
        public Builder ciphertext(String ciphertext) {
            this.ciphertext = Objects.requireNonNull(ciphertext);
            return this;
        }
        @CustomType.Setter
        public Builder cryptoEndpoint(String cryptoEndpoint) {
            this.cryptoEndpoint = Objects.requireNonNull(cryptoEndpoint);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keyId(String keyId) {
            this.keyId = Objects.requireNonNull(keyId);
            return this;
        }
        @CustomType.Setter
        public Builder plaintext(@Nullable String plaintext) {
            this.plaintext = plaintext;
            return this;
        }
        @CustomType.Setter
        public Builder plaintextChecksum(@Nullable String plaintextChecksum) {
            this.plaintextChecksum = plaintextChecksum;
            return this;
        }
        public GetDecryptedDataResult build() {
            final var o = new GetDecryptedDataResult();
            o.associatedData = associatedData;
            o.ciphertext = ciphertext;
            o.cryptoEndpoint = cryptoEndpoint;
            o.id = id;
            o.keyId = keyId;
            o.plaintext = plaintext;
            o.plaintextChecksum = plaintextChecksum;
            return o;
        }
    }
}
