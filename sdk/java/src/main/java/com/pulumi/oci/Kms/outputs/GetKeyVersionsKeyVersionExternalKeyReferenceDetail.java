// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKeyVersionsKeyVersionExternalKeyReferenceDetail {
    /**
     * @return ExternalKeyId refers to the globally unique key Id associated with the key created in external vault in CTM.
     * 
     */
    private String externalKeyId;
    /**
     * @return Key version ID associated with the external key.
     * 
     */
    private String externalKeyVersionId;

    private GetKeyVersionsKeyVersionExternalKeyReferenceDetail() {}
    /**
     * @return ExternalKeyId refers to the globally unique key Id associated with the key created in external vault in CTM.
     * 
     */
    public String externalKeyId() {
        return this.externalKeyId;
    }
    /**
     * @return Key version ID associated with the external key.
     * 
     */
    public String externalKeyVersionId() {
        return this.externalKeyVersionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeyVersionsKeyVersionExternalKeyReferenceDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String externalKeyId;
        private String externalKeyVersionId;
        public Builder() {}
        public Builder(GetKeyVersionsKeyVersionExternalKeyReferenceDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalKeyId = defaults.externalKeyId;
    	      this.externalKeyVersionId = defaults.externalKeyVersionId;
        }

        @CustomType.Setter
        public Builder externalKeyId(String externalKeyId) {
            if (externalKeyId == null) {
              throw new MissingRequiredPropertyException("GetKeyVersionsKeyVersionExternalKeyReferenceDetail", "externalKeyId");
            }
            this.externalKeyId = externalKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder externalKeyVersionId(String externalKeyVersionId) {
            if (externalKeyVersionId == null) {
              throw new MissingRequiredPropertyException("GetKeyVersionsKeyVersionExternalKeyReferenceDetail", "externalKeyVersionId");
            }
            this.externalKeyVersionId = externalKeyVersionId;
            return this;
        }
        public GetKeyVersionsKeyVersionExternalKeyReferenceDetail build() {
            final var _resultValue = new GetKeyVersionsKeyVersionExternalKeyReferenceDetail();
            _resultValue.externalKeyId = externalKeyId;
            _resultValue.externalKeyVersionId = externalKeyVersionId;
            return _resultValue;
        }
    }
}
