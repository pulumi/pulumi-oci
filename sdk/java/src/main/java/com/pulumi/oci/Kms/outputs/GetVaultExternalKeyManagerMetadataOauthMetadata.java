// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVaultExternalKeyManagerMetadataOauthMetadata {
    /**
     * @return ID of the client app created in IDP.
     * 
     */
    private String clientAppId;
    private String clientAppSecret;
    /**
     * @return Base URL of the IDCS account where confidential client app is created.
     * 
     */
    private String idcsAccountNameUrl;

    private GetVaultExternalKeyManagerMetadataOauthMetadata() {}
    /**
     * @return ID of the client app created in IDP.
     * 
     */
    public String clientAppId() {
        return this.clientAppId;
    }
    public String clientAppSecret() {
        return this.clientAppSecret;
    }
    /**
     * @return Base URL of the IDCS account where confidential client app is created.
     * 
     */
    public String idcsAccountNameUrl() {
        return this.idcsAccountNameUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVaultExternalKeyManagerMetadataOauthMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientAppId;
        private String clientAppSecret;
        private String idcsAccountNameUrl;
        public Builder() {}
        public Builder(GetVaultExternalKeyManagerMetadataOauthMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientAppId = defaults.clientAppId;
    	      this.clientAppSecret = defaults.clientAppSecret;
    	      this.idcsAccountNameUrl = defaults.idcsAccountNameUrl;
        }

        @CustomType.Setter
        public Builder clientAppId(String clientAppId) {
            if (clientAppId == null) {
              throw new MissingRequiredPropertyException("GetVaultExternalKeyManagerMetadataOauthMetadata", "clientAppId");
            }
            this.clientAppId = clientAppId;
            return this;
        }
        @CustomType.Setter
        public Builder clientAppSecret(String clientAppSecret) {
            if (clientAppSecret == null) {
              throw new MissingRequiredPropertyException("GetVaultExternalKeyManagerMetadataOauthMetadata", "clientAppSecret");
            }
            this.clientAppSecret = clientAppSecret;
            return this;
        }
        @CustomType.Setter
        public Builder idcsAccountNameUrl(String idcsAccountNameUrl) {
            if (idcsAccountNameUrl == null) {
              throw new MissingRequiredPropertyException("GetVaultExternalKeyManagerMetadataOauthMetadata", "idcsAccountNameUrl");
            }
            this.idcsAccountNameUrl = idcsAccountNameUrl;
            return this;
        }
        public GetVaultExternalKeyManagerMetadataOauthMetadata build() {
            final var _resultValue = new GetVaultExternalKeyManagerMetadataOauthMetadata();
            _resultValue.clientAppId = clientAppId;
            _resultValue.clientAppSecret = clientAppSecret;
            _resultValue.idcsAccountNameUrl = idcsAccountNameUrl;
            return _resultValue;
        }
    }
}
