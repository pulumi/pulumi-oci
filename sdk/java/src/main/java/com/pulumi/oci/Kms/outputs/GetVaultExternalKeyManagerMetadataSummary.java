// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Kms.outputs.GetVaultExternalKeyManagerMetadataSummaryOauthMetadataSummary;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVaultExternalKeyManagerMetadataSummary {
    /**
     * @return URL of the vault on external key manager.
     * 
     */
    private String externalVaultEndpointUrl;
    /**
     * @return Summary about authorization to be returned to the customer as a response.
     * 
     */
    private List<GetVaultExternalKeyManagerMetadataSummaryOauthMetadataSummary> oauthMetadataSummaries;
    /**
     * @return OCID of the private endpoint.
     * 
     */
    private String privateEndpointId;
    /**
     * @return Vendor of the external key manager.
     * 
     */
    private String vendor;

    private GetVaultExternalKeyManagerMetadataSummary() {}
    /**
     * @return URL of the vault on external key manager.
     * 
     */
    public String externalVaultEndpointUrl() {
        return this.externalVaultEndpointUrl;
    }
    /**
     * @return Summary about authorization to be returned to the customer as a response.
     * 
     */
    public List<GetVaultExternalKeyManagerMetadataSummaryOauthMetadataSummary> oauthMetadataSummaries() {
        return this.oauthMetadataSummaries;
    }
    /**
     * @return OCID of the private endpoint.
     * 
     */
    public String privateEndpointId() {
        return this.privateEndpointId;
    }
    /**
     * @return Vendor of the external key manager.
     * 
     */
    public String vendor() {
        return this.vendor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVaultExternalKeyManagerMetadataSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String externalVaultEndpointUrl;
        private List<GetVaultExternalKeyManagerMetadataSummaryOauthMetadataSummary> oauthMetadataSummaries;
        private String privateEndpointId;
        private String vendor;
        public Builder() {}
        public Builder(GetVaultExternalKeyManagerMetadataSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.externalVaultEndpointUrl = defaults.externalVaultEndpointUrl;
    	      this.oauthMetadataSummaries = defaults.oauthMetadataSummaries;
    	      this.privateEndpointId = defaults.privateEndpointId;
    	      this.vendor = defaults.vendor;
        }

        @CustomType.Setter
        public Builder externalVaultEndpointUrl(String externalVaultEndpointUrl) {
            if (externalVaultEndpointUrl == null) {
              throw new MissingRequiredPropertyException("GetVaultExternalKeyManagerMetadataSummary", "externalVaultEndpointUrl");
            }
            this.externalVaultEndpointUrl = externalVaultEndpointUrl;
            return this;
        }
        @CustomType.Setter
        public Builder oauthMetadataSummaries(List<GetVaultExternalKeyManagerMetadataSummaryOauthMetadataSummary> oauthMetadataSummaries) {
            if (oauthMetadataSummaries == null) {
              throw new MissingRequiredPropertyException("GetVaultExternalKeyManagerMetadataSummary", "oauthMetadataSummaries");
            }
            this.oauthMetadataSummaries = oauthMetadataSummaries;
            return this;
        }
        public Builder oauthMetadataSummaries(GetVaultExternalKeyManagerMetadataSummaryOauthMetadataSummary... oauthMetadataSummaries) {
            return oauthMetadataSummaries(List.of(oauthMetadataSummaries));
        }
        @CustomType.Setter
        public Builder privateEndpointId(String privateEndpointId) {
            if (privateEndpointId == null) {
              throw new MissingRequiredPropertyException("GetVaultExternalKeyManagerMetadataSummary", "privateEndpointId");
            }
            this.privateEndpointId = privateEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder vendor(String vendor) {
            if (vendor == null) {
              throw new MissingRequiredPropertyException("GetVaultExternalKeyManagerMetadataSummary", "vendor");
            }
            this.vendor = vendor;
            return this;
        }
        public GetVaultExternalKeyManagerMetadataSummary build() {
            final var _resultValue = new GetVaultExternalKeyManagerMetadataSummary();
            _resultValue.externalVaultEndpointUrl = externalVaultEndpointUrl;
            _resultValue.oauthMetadataSummaries = oauthMetadataSummaries;
            _resultValue.privateEndpointId = privateEndpointId;
            _resultValue.vendor = vendor;
            return _resultValue;
        }
    }
}
