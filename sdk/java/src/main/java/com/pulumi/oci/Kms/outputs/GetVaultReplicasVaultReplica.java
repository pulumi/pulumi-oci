// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVaultReplicasVaultReplica {
    /**
     * @return The vault replica&#39;s crypto endpoint
     * 
     */
    private String cryptoEndpoint;
    /**
     * @return The vault replica&#39;s management endpoint
     * 
     */
    private String managementEndpoint;
    /**
     * @return Region to which vault is replicated to
     * 
     */
    private String region;
    /**
     * @return Status of the Vault
     * 
     */
    private String status;

    private GetVaultReplicasVaultReplica() {}
    /**
     * @return The vault replica&#39;s crypto endpoint
     * 
     */
    public String cryptoEndpoint() {
        return this.cryptoEndpoint;
    }
    /**
     * @return The vault replica&#39;s management endpoint
     * 
     */
    public String managementEndpoint() {
        return this.managementEndpoint;
    }
    /**
     * @return Region to which vault is replicated to
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return Status of the Vault
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVaultReplicasVaultReplica defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cryptoEndpoint;
        private String managementEndpoint;
        private String region;
        private String status;
        public Builder() {}
        public Builder(GetVaultReplicasVaultReplica defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cryptoEndpoint = defaults.cryptoEndpoint;
    	      this.managementEndpoint = defaults.managementEndpoint;
    	      this.region = defaults.region;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder cryptoEndpoint(String cryptoEndpoint) {
            if (cryptoEndpoint == null) {
              throw new MissingRequiredPropertyException("GetVaultReplicasVaultReplica", "cryptoEndpoint");
            }
            this.cryptoEndpoint = cryptoEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder managementEndpoint(String managementEndpoint) {
            if (managementEndpoint == null) {
              throw new MissingRequiredPropertyException("GetVaultReplicasVaultReplica", "managementEndpoint");
            }
            this.managementEndpoint = managementEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetVaultReplicasVaultReplica", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetVaultReplicasVaultReplica", "status");
            }
            this.status = status;
            return this;
        }
        public GetVaultReplicasVaultReplica build() {
            final var _resultValue = new GetVaultReplicasVaultReplica();
            _resultValue.cryptoEndpoint = cryptoEndpoint;
            _resultValue.managementEndpoint = managementEndpoint;
            _resultValue.region = region;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
