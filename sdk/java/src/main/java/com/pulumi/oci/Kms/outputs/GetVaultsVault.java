// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Kms.outputs.GetVaultsVaultExternalKeyManagerMetadata;
import com.pulumi.oci.Kms.outputs.GetVaultsVaultExternalKeyManagerMetadataSummary;
import com.pulumi.oci.Kms.outputs.GetVaultsVaultReplicaDetail;
import com.pulumi.oci.Kms.outputs.GetVaultsVaultRestoreFromFile;
import com.pulumi.oci.Kms.outputs.GetVaultsVaultRestoreFromObjectStore;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVaultsVault {
    /**
     * @return The OCID of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
     * 
     */
    private @Nullable String cryptoEndpoint;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Summary about metadata of external key manager to be returned to the customer as a response.
     * 
     */
    private @Nullable List<GetVaultsVaultExternalKeyManagerMetadataSummary> externalKeyManagerMetadataSummaries;
    private @Nullable List<GetVaultsVaultExternalKeyManagerMetadata> externalKeyManagerMetadatas;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the vault.
     * 
     */
    private @Nullable String id;
    /**
     * @return A Boolean value that indicates whether the Vault is primary Vault or replica Vault.
     * 
     */
    private @Nullable Boolean isPrimary;
    /**
     * @return The service endpoint to perform management operations against. Management operations include &#34;Create,&#34; &#34;Update,&#34; &#34;List,&#34; &#34;Get,&#34; and &#34;Delete&#34; operations.
     * 
     */
    private @Nullable String managementEndpoint;
    /**
     * @return Vault replica details
     * 
     */
    private @Nullable List<GetVaultsVaultReplicaDetail> replicaDetails;
    private @Nullable List<GetVaultsVaultRestoreFromFile> restoreFromFiles;
    private @Nullable List<GetVaultsVaultRestoreFromObjectStore> restoreFromObjectStores;
    private @Nullable Boolean restoreTrigger;
    /**
     * @return The OCID of the vault from which this vault was restored, if it was restored from a backup file. If you restore a vault to the same region, the vault retains the same OCID that it had when you backed up the vault.
     * 
     */
    private @Nullable String restoredFromVaultId;
    /**
     * @return The vault&#39;s current lifecycle state.  Example: `DELETED`
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return An optional property to indicate when to delete the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    private @Nullable String timeOfDeletion;
    /**
     * @return The type of vault. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
     * 
     */
    private @Nullable String vaultType;

    private GetVaultsVault() {}
    /**
     * @return The OCID of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The service endpoint to perform cryptographic operations against. Cryptographic operations include [Encrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/EncryptedData/Encrypt), [Decrypt](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/DecryptedData/Decrypt), and [GenerateDataEncryptionKey](https://docs.cloud.oracle.com/iaas/api/#/en/key/latest/GeneratedKey/GenerateDataEncryptionKey) operations.
     * 
     */
    public Optional<String> cryptoEndpoint() {
        return Optional.ofNullable(this.cryptoEndpoint);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Summary about metadata of external key manager to be returned to the customer as a response.
     * 
     */
    public List<GetVaultsVaultExternalKeyManagerMetadataSummary> externalKeyManagerMetadataSummaries() {
        return this.externalKeyManagerMetadataSummaries == null ? List.of() : this.externalKeyManagerMetadataSummaries;
    }
    public List<GetVaultsVaultExternalKeyManagerMetadata> externalKeyManagerMetadatas() {
        return this.externalKeyManagerMetadatas == null ? List.of() : this.externalKeyManagerMetadatas;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the vault.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A Boolean value that indicates whether the Vault is primary Vault or replica Vault.
     * 
     */
    public Optional<Boolean> isPrimary() {
        return Optional.ofNullable(this.isPrimary);
    }
    /**
     * @return The service endpoint to perform management operations against. Management operations include &#34;Create,&#34; &#34;Update,&#34; &#34;List,&#34; &#34;Get,&#34; and &#34;Delete&#34; operations.
     * 
     */
    public Optional<String> managementEndpoint() {
        return Optional.ofNullable(this.managementEndpoint);
    }
    /**
     * @return Vault replica details
     * 
     */
    public List<GetVaultsVaultReplicaDetail> replicaDetails() {
        return this.replicaDetails == null ? List.of() : this.replicaDetails;
    }
    public List<GetVaultsVaultRestoreFromFile> restoreFromFiles() {
        return this.restoreFromFiles == null ? List.of() : this.restoreFromFiles;
    }
    public List<GetVaultsVaultRestoreFromObjectStore> restoreFromObjectStores() {
        return this.restoreFromObjectStores == null ? List.of() : this.restoreFromObjectStores;
    }
    public Optional<Boolean> restoreTrigger() {
        return Optional.ofNullable(this.restoreTrigger);
    }
    /**
     * @return The OCID of the vault from which this vault was restored, if it was restored from a backup file. If you restore a vault to the same region, the vault retains the same OCID that it had when you backed up the vault.
     * 
     */
    public Optional<String> restoredFromVaultId() {
        return Optional.ofNullable(this.restoredFromVaultId);
    }
    /**
     * @return The vault&#39;s current lifecycle state.  Example: `DELETED`
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time this vault was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return An optional property to indicate when to delete the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    public Optional<String> timeOfDeletion() {
        return Optional.ofNullable(this.timeOfDeletion);
    }
    /**
     * @return The type of vault. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
     * 
     */
    public Optional<String> vaultType() {
        return Optional.ofNullable(this.vaultType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVaultsVault defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable String cryptoEndpoint;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable List<GetVaultsVaultExternalKeyManagerMetadataSummary> externalKeyManagerMetadataSummaries;
        private @Nullable List<GetVaultsVaultExternalKeyManagerMetadata> externalKeyManagerMetadatas;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isPrimary;
        private @Nullable String managementEndpoint;
        private @Nullable List<GetVaultsVaultReplicaDetail> replicaDetails;
        private @Nullable List<GetVaultsVaultRestoreFromFile> restoreFromFiles;
        private @Nullable List<GetVaultsVaultRestoreFromObjectStore> restoreFromObjectStores;
        private @Nullable Boolean restoreTrigger;
        private @Nullable String restoredFromVaultId;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeOfDeletion;
        private @Nullable String vaultType;
        public Builder() {}
        public Builder(GetVaultsVault defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.cryptoEndpoint = defaults.cryptoEndpoint;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.externalKeyManagerMetadataSummaries = defaults.externalKeyManagerMetadataSummaries;
    	      this.externalKeyManagerMetadatas = defaults.externalKeyManagerMetadatas;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isPrimary = defaults.isPrimary;
    	      this.managementEndpoint = defaults.managementEndpoint;
    	      this.replicaDetails = defaults.replicaDetails;
    	      this.restoreFromFiles = defaults.restoreFromFiles;
    	      this.restoreFromObjectStores = defaults.restoreFromObjectStores;
    	      this.restoreTrigger = defaults.restoreTrigger;
    	      this.restoredFromVaultId = defaults.restoredFromVaultId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfDeletion = defaults.timeOfDeletion;
    	      this.vaultType = defaults.vaultType;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder cryptoEndpoint(@Nullable String cryptoEndpoint) {
            this.cryptoEndpoint = cryptoEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalKeyManagerMetadataSummaries(@Nullable List<GetVaultsVaultExternalKeyManagerMetadataSummary> externalKeyManagerMetadataSummaries) {
            this.externalKeyManagerMetadataSummaries = externalKeyManagerMetadataSummaries;
            return this;
        }
        public Builder externalKeyManagerMetadataSummaries(GetVaultsVaultExternalKeyManagerMetadataSummary... externalKeyManagerMetadataSummaries) {
            return externalKeyManagerMetadataSummaries(List.of(externalKeyManagerMetadataSummaries));
        }
        @CustomType.Setter
        public Builder externalKeyManagerMetadatas(@Nullable List<GetVaultsVaultExternalKeyManagerMetadata> externalKeyManagerMetadatas) {
            this.externalKeyManagerMetadatas = externalKeyManagerMetadatas;
            return this;
        }
        public Builder externalKeyManagerMetadatas(GetVaultsVaultExternalKeyManagerMetadata... externalKeyManagerMetadatas) {
            return externalKeyManagerMetadatas(List.of(externalKeyManagerMetadatas));
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isPrimary(@Nullable Boolean isPrimary) {
            this.isPrimary = isPrimary;
            return this;
        }
        @CustomType.Setter
        public Builder managementEndpoint(@Nullable String managementEndpoint) {
            this.managementEndpoint = managementEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder replicaDetails(@Nullable List<GetVaultsVaultReplicaDetail> replicaDetails) {
            this.replicaDetails = replicaDetails;
            return this;
        }
        public Builder replicaDetails(GetVaultsVaultReplicaDetail... replicaDetails) {
            return replicaDetails(List.of(replicaDetails));
        }
        @CustomType.Setter
        public Builder restoreFromFiles(@Nullable List<GetVaultsVaultRestoreFromFile> restoreFromFiles) {
            this.restoreFromFiles = restoreFromFiles;
            return this;
        }
        public Builder restoreFromFiles(GetVaultsVaultRestoreFromFile... restoreFromFiles) {
            return restoreFromFiles(List.of(restoreFromFiles));
        }
        @CustomType.Setter
        public Builder restoreFromObjectStores(@Nullable List<GetVaultsVaultRestoreFromObjectStore> restoreFromObjectStores) {
            this.restoreFromObjectStores = restoreFromObjectStores;
            return this;
        }
        public Builder restoreFromObjectStores(GetVaultsVaultRestoreFromObjectStore... restoreFromObjectStores) {
            return restoreFromObjectStores(List.of(restoreFromObjectStores));
        }
        @CustomType.Setter
        public Builder restoreTrigger(@Nullable Boolean restoreTrigger) {
            this.restoreTrigger = restoreTrigger;
            return this;
        }
        @CustomType.Setter
        public Builder restoredFromVaultId(@Nullable String restoredFromVaultId) {
            this.restoredFromVaultId = restoredFromVaultId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfDeletion(@Nullable String timeOfDeletion) {
            this.timeOfDeletion = timeOfDeletion;
            return this;
        }
        @CustomType.Setter
        public Builder vaultType(@Nullable String vaultType) {
            this.vaultType = vaultType;
            return this;
        }
        public GetVaultsVault build() {
            final var o = new GetVaultsVault();
            o.compartmentId = compartmentId;
            o.cryptoEndpoint = cryptoEndpoint;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.externalKeyManagerMetadataSummaries = externalKeyManagerMetadataSummaries;
            o.externalKeyManagerMetadatas = externalKeyManagerMetadatas;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isPrimary = isPrimary;
            o.managementEndpoint = managementEndpoint;
            o.replicaDetails = replicaDetails;
            o.restoreFromFiles = restoreFromFiles;
            o.restoreFromObjectStores = restoreFromObjectStores;
            o.restoreTrigger = restoreTrigger;
            o.restoredFromVaultId = restoredFromVaultId;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeOfDeletion = timeOfDeletion;
            o.vaultType = vaultType;
            return o;
        }
    }
}
