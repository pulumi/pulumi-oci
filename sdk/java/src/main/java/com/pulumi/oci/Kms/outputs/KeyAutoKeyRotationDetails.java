// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KeyAutoKeyRotationDetails {
    /**
     * @return (Updatable) The last execution status message.
     * 
     */
    private @Nullable String lastRotationMessage;
    /**
     * @return (Updatable) The status of last execution of auto key rotation.
     * 
     */
    private @Nullable String lastRotationStatus;
    /**
     * @return (Updatable) The interval of auto key rotation. For auto key rotation the interval should between 30 day and 365 days (1 year)
     * 
     */
    private @Nullable Integer rotationIntervalInDays;
    /**
     * @return (Updatable) A  property indicating Last rotation Date Example: `2023-04-04T00:00:00Z`.
     * 
     */
    private @Nullable String timeOfLastRotation;
    /**
     * @return (Updatable) A property indicating Next estimated scheduled Time, as per the interval, expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z` .
     * 
     */
    private @Nullable String timeOfNextRotation;
    /**
     * @return (Updatable) A property indicating  scheduled start date expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z` .
     * 
     */
    private @Nullable String timeOfScheduleStart;

    private KeyAutoKeyRotationDetails() {}
    /**
     * @return (Updatable) The last execution status message.
     * 
     */
    public Optional<String> lastRotationMessage() {
        return Optional.ofNullable(this.lastRotationMessage);
    }
    /**
     * @return (Updatable) The status of last execution of auto key rotation.
     * 
     */
    public Optional<String> lastRotationStatus() {
        return Optional.ofNullable(this.lastRotationStatus);
    }
    /**
     * @return (Updatable) The interval of auto key rotation. For auto key rotation the interval should between 30 day and 365 days (1 year)
     * 
     */
    public Optional<Integer> rotationIntervalInDays() {
        return Optional.ofNullable(this.rotationIntervalInDays);
    }
    /**
     * @return (Updatable) A  property indicating Last rotation Date Example: `2023-04-04T00:00:00Z`.
     * 
     */
    public Optional<String> timeOfLastRotation() {
        return Optional.ofNullable(this.timeOfLastRotation);
    }
    /**
     * @return (Updatable) A property indicating Next estimated scheduled Time, as per the interval, expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z` .
     * 
     */
    public Optional<String> timeOfNextRotation() {
        return Optional.ofNullable(this.timeOfNextRotation);
    }
    /**
     * @return (Updatable) A property indicating  scheduled start date expressed as date YYYY-MM-DD String. Example: `2023-04-04T00:00:00Z` .
     * 
     */
    public Optional<String> timeOfScheduleStart() {
        return Optional.ofNullable(this.timeOfScheduleStart);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyAutoKeyRotationDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String lastRotationMessage;
        private @Nullable String lastRotationStatus;
        private @Nullable Integer rotationIntervalInDays;
        private @Nullable String timeOfLastRotation;
        private @Nullable String timeOfNextRotation;
        private @Nullable String timeOfScheduleStart;
        public Builder() {}
        public Builder(KeyAutoKeyRotationDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lastRotationMessage = defaults.lastRotationMessage;
    	      this.lastRotationStatus = defaults.lastRotationStatus;
    	      this.rotationIntervalInDays = defaults.rotationIntervalInDays;
    	      this.timeOfLastRotation = defaults.timeOfLastRotation;
    	      this.timeOfNextRotation = defaults.timeOfNextRotation;
    	      this.timeOfScheduleStart = defaults.timeOfScheduleStart;
        }

        @CustomType.Setter
        public Builder lastRotationMessage(@Nullable String lastRotationMessage) {

            this.lastRotationMessage = lastRotationMessage;
            return this;
        }
        @CustomType.Setter
        public Builder lastRotationStatus(@Nullable String lastRotationStatus) {

            this.lastRotationStatus = lastRotationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder rotationIntervalInDays(@Nullable Integer rotationIntervalInDays) {

            this.rotationIntervalInDays = rotationIntervalInDays;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfLastRotation(@Nullable String timeOfLastRotation) {

            this.timeOfLastRotation = timeOfLastRotation;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfNextRotation(@Nullable String timeOfNextRotation) {

            this.timeOfNextRotation = timeOfNextRotation;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfScheduleStart(@Nullable String timeOfScheduleStart) {

            this.timeOfScheduleStart = timeOfScheduleStart;
            return this;
        }
        public KeyAutoKeyRotationDetails build() {
            final var _resultValue = new KeyAutoKeyRotationDetails();
            _resultValue.lastRotationMessage = lastRotationMessage;
            _resultValue.lastRotationStatus = lastRotationStatus;
            _resultValue.rotationIntervalInDays = rotationIntervalInDays;
            _resultValue.timeOfLastRotation = timeOfLastRotation;
            _resultValue.timeOfNextRotation = timeOfNextRotation;
            _resultValue.timeOfScheduleStart = timeOfScheduleStart;
            return _resultValue;
        }
    }
}
