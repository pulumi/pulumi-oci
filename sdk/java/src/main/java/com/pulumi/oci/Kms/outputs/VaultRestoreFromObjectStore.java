// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VaultRestoreFromObjectStore {
    /**
     * @return (Updatable) Name of the bucket where vault was backed up
     * 
     */
    private @Nullable String bucket;
    /**
     * @return (Updatable) Type of backup to restore from. Values of &#34;BUCKET&#34;, &#34;PRE_AUTHENTICATED_REQUEST_URI&#34; are supported
     * 
     */
    private String destination;
    /**
     * @return (Updatable) Namespace of the bucket where vault was backed up
     * 
     */
    private @Nullable String namespace;
    /**
     * @return (Updatable) Object containing the backup
     * 
     */
    private @Nullable String object;
    /**
     * @return (Updatable) Pre-authenticated-request-uri of the backup* `restore_trigger` - (Optional) (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
     * 
     */
    private @Nullable String uri;

    private VaultRestoreFromObjectStore() {}
    /**
     * @return (Updatable) Name of the bucket where vault was backed up
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return (Updatable) Type of backup to restore from. Values of &#34;BUCKET&#34;, &#34;PRE_AUTHENTICATED_REQUEST_URI&#34; are supported
     * 
     */
    public String destination() {
        return this.destination;
    }
    /**
     * @return (Updatable) Namespace of the bucket where vault was backed up
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return (Updatable) Object containing the backup
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }
    /**
     * @return (Updatable) Pre-authenticated-request-uri of the backup* `restore_trigger` - (Optional) (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
     * 
     */
    public Optional<String> uri() {
        return Optional.ofNullable(this.uri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VaultRestoreFromObjectStore defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucket;
        private String destination;
        private @Nullable String namespace;
        private @Nullable String object;
        private @Nullable String uri;
        public Builder() {}
        public Builder(VaultRestoreFromObjectStore defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.destination = defaults.destination;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.uri = defaults.uri;
        }

        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder destination(String destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder object(@Nullable String object) {
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder uri(@Nullable String uri) {
            this.uri = uri;
            return this;
        }
        public VaultRestoreFromObjectStore build() {
            final var _resultValue = new VaultRestoreFromObjectStore();
            _resultValue.bucket = bucket;
            _resultValue.destination = destination;
            _resultValue.namespace = namespace;
            _resultValue.object = object;
            _resultValue.uri = uri;
            return _resultValue;
        }
    }
}
