// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LicenseManager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.LicenseManager.LicenseRecordArgs;
import com.pulumi.oci.LicenseManager.inputs.LicenseRecordState;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the License Record resource in Oracle Cloud Infrastructure License Manager service.
 * 
 * Creates a new license record for the given product license ID.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.LicenseManager.LicenseRecord;
 * import com.pulumi.oci.LicenseManager.LicenseRecordArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testLicenseRecord = new LicenseRecord(&#34;testLicenseRecord&#34;, LicenseRecordArgs.builder()        
 *             .displayName(var_.license_record_display_name())
 *             .isPerpetual(var_.license_record_is_perpetual())
 *             .isUnlimited(var_.license_record_is_unlimited())
 *             .productLicenseId(oci_license_manager_product_license.test_product_license().id())
 *             .definedTags(Map.of(&#34;foo-namespace.bar-key&#34;, &#34;value&#34;))
 *             .expirationDate(var_.license_record_expiration_date())
 *             .freeformTags(Map.of(&#34;bar-key&#34;, &#34;value&#34;))
 *             .licenseCount(var_.license_record_license_count())
 *             .productId(oci_license_manager_product.test_product().id())
 *             .supportEndDate(var_.license_record_support_end_date())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * LicenseRecords can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:LicenseManager/licenseRecord:LicenseRecord test_license_record &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:LicenseManager/licenseRecord:LicenseRecord")
public class LicenseRecord extends com.pulumi.resources.CustomResource {
    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the license record is created.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the license record is created.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) License record name.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) License record name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) The license record end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     * 
     */
    @Export(name="expirationDate", refs={String.class}, tree="[0]")
    private Output<String> expirationDate;

    /**
     * @return (Updatable) The license record end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     * 
     */
    public Output<String> expirationDate() {
        return this.expirationDate;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) Specifies if the license record term is perpertual.
     * 
     */
    @Export(name="isPerpetual", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isPerpetual;

    /**
     * @return (Updatable) Specifies if the license record term is perpertual.
     * 
     */
    public Output<Boolean> isPerpetual() {
        return this.isPerpetual;
    }
    /**
     * (Updatable) Specifies if the license count is unlimited.
     * 
     */
    @Export(name="isUnlimited", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isUnlimited;

    /**
     * @return (Updatable) Specifies if the license count is unlimited.
     * 
     */
    public Output<Boolean> isUnlimited() {
        return this.isUnlimited;
    }
    /**
     * (Updatable) The number of license units added by a user in a license record. Default 1
     * 
     */
    @Export(name="licenseCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> licenseCount;

    /**
     * @return (Updatable) The number of license units added by a user in a license record. Default 1
     * 
     */
    public Output<Integer> licenseCount() {
        return this.licenseCount;
    }
    /**
     * The product license unit.
     * 
     */
    @Export(name="licenseUnit", refs={String.class}, tree="[0]")
    private Output<String> licenseUnit;

    /**
     * @return The product license unit.
     * 
     */
    public Output<String> licenseUnit() {
        return this.licenseUnit;
    }
    /**
     * (Updatable) The license record product ID.
     * 
     */
    @Export(name="productId", refs={String.class}, tree="[0]")
    private Output<String> productId;

    /**
     * @return (Updatable) The license record product ID.
     * 
     */
    public Output<String> productId() {
        return this.productId;
    }
    /**
     * The product license name with which the license record is associated.
     * 
     */
    @Export(name="productLicense", refs={String.class}, tree="[0]")
    private Output<String> productLicense;

    /**
     * @return The product license name with which the license record is associated.
     * 
     */
    public Output<String> productLicense() {
        return this.productLicense;
    }
    /**
     * Unique product license identifier.
     * 
     */
    @Export(name="productLicenseId", refs={String.class}, tree="[0]")
    private Output<String> productLicenseId;

    /**
     * @return Unique product license identifier.
     * 
     */
    public Output<String> productLicenseId() {
        return this.productLicenseId;
    }
    /**
     * The current license record state.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current license record state.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * (Updatable) The license record support end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="supportEndDate", refs={String.class}, tree="[0]")
    private Output<String> supportEndDate;

    /**
     * @return (Updatable) The license record support end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> supportEndDate() {
        return this.supportEndDate;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,Object>> systemTags() {
        return this.systemTags;
    }
    /**
     * The time the license record was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The time the license record was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time the license record was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The time the license record was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LicenseRecord(String name) {
        this(name, LicenseRecordArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LicenseRecord(String name, LicenseRecordArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LicenseRecord(String name, LicenseRecordArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:LicenseManager/licenseRecord:LicenseRecord", name, args == null ? LicenseRecordArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LicenseRecord(String name, Output<String> id, @Nullable LicenseRecordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:LicenseManager/licenseRecord:LicenseRecord", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LicenseRecord get(String name, Output<String> id, @Nullable LicenseRecordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LicenseRecord(name, id, state, options);
    }
}
