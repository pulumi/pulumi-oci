// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LicenseManager;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LicenseManager.inputs.ProductLicenseImageArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProductLicenseArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProductLicenseArgs Empty = new ProductLicenseArgs();

    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where product licenses are created.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where product licenses are created.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * Name of the product license.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return Name of the product license.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,String>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The image details associated with the product license.
     * 
     */
    @Import(name="images")
    private @Nullable Output<List<ProductLicenseImageArgs>> images;

    /**
     * @return (Updatable) The image details associated with the product license.
     * 
     */
    public Optional<Output<List<ProductLicenseImageArgs>>> images() {
        return Optional.ofNullable(this.images);
    }

    /**
     * Specifies if the product license vendor is Oracle or a third party.
     * 
     */
    @Import(name="isVendorOracle", required=true)
    private Output<Boolean> isVendorOracle;

    /**
     * @return Specifies if the product license vendor is Oracle or a third party.
     * 
     */
    public Output<Boolean> isVendorOracle() {
        return this.isVendorOracle;
    }

    /**
     * The product license unit.
     * 
     */
    @Import(name="licenseUnit", required=true)
    private Output<String> licenseUnit;

    /**
     * @return The product license unit.
     * 
     */
    public Output<String> licenseUnit() {
        return this.licenseUnit;
    }

    /**
     * The product license vendor name, for example: Microsoft, RHEL, and so on.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="vendorName")
    private @Nullable Output<String> vendorName;

    /**
     * @return The product license vendor name, for example: Microsoft, RHEL, and so on.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> vendorName() {
        return Optional.ofNullable(this.vendorName);
    }

    private ProductLicenseArgs() {}

    private ProductLicenseArgs(ProductLicenseArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.images = $.images;
        this.isVendorOracle = $.isVendorOracle;
        this.licenseUnit = $.licenseUnit;
        this.vendorName = $.vendorName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProductLicenseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProductLicenseArgs $;

        public Builder() {
            $ = new ProductLicenseArgs();
        }

        public Builder(ProductLicenseArgs defaults) {
            $ = new ProductLicenseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where product licenses are created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where product licenses are created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,String>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,String> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName Name of the product license.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Name of the product license.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,String>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,String> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param images (Updatable) The image details associated with the product license.
         * 
         * @return builder
         * 
         */
        public Builder images(@Nullable Output<List<ProductLicenseImageArgs>> images) {
            $.images = images;
            return this;
        }

        /**
         * @param images (Updatable) The image details associated with the product license.
         * 
         * @return builder
         * 
         */
        public Builder images(List<ProductLicenseImageArgs> images) {
            return images(Output.of(images));
        }

        /**
         * @param images (Updatable) The image details associated with the product license.
         * 
         * @return builder
         * 
         */
        public Builder images(ProductLicenseImageArgs... images) {
            return images(List.of(images));
        }

        /**
         * @param isVendorOracle Specifies if the product license vendor is Oracle or a third party.
         * 
         * @return builder
         * 
         */
        public Builder isVendorOracle(Output<Boolean> isVendorOracle) {
            $.isVendorOracle = isVendorOracle;
            return this;
        }

        /**
         * @param isVendorOracle Specifies if the product license vendor is Oracle or a third party.
         * 
         * @return builder
         * 
         */
        public Builder isVendorOracle(Boolean isVendorOracle) {
            return isVendorOracle(Output.of(isVendorOracle));
        }

        /**
         * @param licenseUnit The product license unit.
         * 
         * @return builder
         * 
         */
        public Builder licenseUnit(Output<String> licenseUnit) {
            $.licenseUnit = licenseUnit;
            return this;
        }

        /**
         * @param licenseUnit The product license unit.
         * 
         * @return builder
         * 
         */
        public Builder licenseUnit(String licenseUnit) {
            return licenseUnit(Output.of(licenseUnit));
        }

        /**
         * @param vendorName The product license vendor name, for example: Microsoft, RHEL, and so on.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vendorName(@Nullable Output<String> vendorName) {
            $.vendorName = vendorName;
            return this;
        }

        /**
         * @param vendorName The product license vendor name, for example: Microsoft, RHEL, and so on.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder vendorName(String vendorName) {
            return vendorName(Output.of(vendorName));
        }

        public ProductLicenseArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("ProductLicenseArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("ProductLicenseArgs", "displayName");
            }
            if ($.isVendorOracle == null) {
                throw new MissingRequiredPropertyException("ProductLicenseArgs", "isVendorOracle");
            }
            if ($.licenseUnit == null) {
                throw new MissingRequiredPropertyException("ProductLicenseArgs", "licenseUnit");
            }
            return $;
        }
    }

}
