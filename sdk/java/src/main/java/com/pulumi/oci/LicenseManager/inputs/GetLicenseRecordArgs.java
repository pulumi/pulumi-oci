// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LicenseManager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetLicenseRecordArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLicenseRecordArgs Empty = new GetLicenseRecordArgs();

    /**
     * Unique license record identifier.
     * 
     */
    @Import(name="licenseRecordId", required=true)
    private Output<String> licenseRecordId;

    /**
     * @return Unique license record identifier.
     * 
     */
    public Output<String> licenseRecordId() {
        return this.licenseRecordId;
    }

    private GetLicenseRecordArgs() {}

    private GetLicenseRecordArgs(GetLicenseRecordArgs $) {
        this.licenseRecordId = $.licenseRecordId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLicenseRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLicenseRecordArgs $;

        public Builder() {
            $ = new GetLicenseRecordArgs();
        }

        public Builder(GetLicenseRecordArgs defaults) {
            $ = new GetLicenseRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param licenseRecordId Unique license record identifier.
         * 
         * @return builder
         * 
         */
        public Builder licenseRecordId(Output<String> licenseRecordId) {
            $.licenseRecordId = licenseRecordId;
            return this;
        }

        /**
         * @param licenseRecordId Unique license record identifier.
         * 
         * @return builder
         * 
         */
        public Builder licenseRecordId(String licenseRecordId) {
            return licenseRecordId(Output.of(licenseRecordId));
        }

        public GetLicenseRecordArgs build() {
            if ($.licenseRecordId == null) {
                throw new MissingRequiredPropertyException("GetLicenseRecordArgs", "licenseRecordId");
            }
            return $;
        }
    }

}
