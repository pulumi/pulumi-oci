// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LicenseManager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLicenseRecordsLicenseRecordCollectionItem {
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the license record is created.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The license record display name. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The license record end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     * 
     */
    private @Nullable String expirationDate;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The license record [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String id;
    /**
     * @return Specifies if the license record term is perpertual.
     * 
     */
    private @Nullable Boolean isPerpetual;
    /**
     * @return Specifies if the license count is unlimited.
     * 
     */
    private @Nullable Boolean isUnlimited;
    /**
     * @return The number of license units added by the user for the given license record. Default 1
     * 
     */
    private @Nullable Integer licenseCount;
    /**
     * @return The product license unit.
     * 
     */
    private @Nullable String licenseUnit;
    /**
     * @return The license record product ID.
     * 
     */
    private @Nullable String productId;
    /**
     * @return The product license name with which the license record is associated.
     * 
     */
    private @Nullable String productLicense;
    /**
     * @return Unique product license identifier.
     * 
     */
    private @Nullable String productLicenseId;
    /**
     * @return The current license record state.
     * 
     */
    private @Nullable String state;
    /**
     * @return The license record support end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     * 
     */
    private @Nullable String supportEndDate;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time the license record was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the license record was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;

    private GetLicenseRecordsLicenseRecordCollectionItem() {}
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the license record is created.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The license record display name. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The license record end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     * 
     */
    public Optional<String> expirationDate() {
        return Optional.ofNullable(this.expirationDate);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The license record [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Specifies if the license record term is perpertual.
     * 
     */
    public Optional<Boolean> isPerpetual() {
        return Optional.ofNullable(this.isPerpetual);
    }
    /**
     * @return Specifies if the license count is unlimited.
     * 
     */
    public Optional<Boolean> isUnlimited() {
        return Optional.ofNullable(this.isUnlimited);
    }
    /**
     * @return The number of license units added by the user for the given license record. Default 1
     * 
     */
    public Optional<Integer> licenseCount() {
        return Optional.ofNullable(this.licenseCount);
    }
    /**
     * @return The product license unit.
     * 
     */
    public Optional<String> licenseUnit() {
        return Optional.ofNullable(this.licenseUnit);
    }
    /**
     * @return The license record product ID.
     * 
     */
    public Optional<String> productId() {
        return Optional.ofNullable(this.productId);
    }
    /**
     * @return The product license name with which the license record is associated.
     * 
     */
    public Optional<String> productLicense() {
        return Optional.ofNullable(this.productLicense);
    }
    /**
     * @return Unique product license identifier.
     * 
     */
    public Optional<String> productLicenseId() {
        return Optional.ofNullable(this.productLicenseId);
    }
    /**
     * @return The current license record state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The license record support end date in [RFC 3339](https://tools.ietf.org/html/rfc3339) date format. Example: `2018-09-12`
     * 
     */
    public Optional<String> supportEndDate() {
        return Optional.ofNullable(this.supportEndDate);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time the license record was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the license record was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLicenseRecordsLicenseRecordCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable String expirationDate;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isPerpetual;
        private @Nullable Boolean isUnlimited;
        private @Nullable Integer licenseCount;
        private @Nullable String licenseUnit;
        private @Nullable String productId;
        private @Nullable String productLicense;
        private @Nullable String productLicenseId;
        private @Nullable String state;
        private @Nullable String supportEndDate;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetLicenseRecordsLicenseRecordCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.expirationDate = defaults.expirationDate;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isPerpetual = defaults.isPerpetual;
    	      this.isUnlimited = defaults.isUnlimited;
    	      this.licenseCount = defaults.licenseCount;
    	      this.licenseUnit = defaults.licenseUnit;
    	      this.productId = defaults.productId;
    	      this.productLicense = defaults.productLicense;
    	      this.productLicenseId = defaults.productLicenseId;
    	      this.state = defaults.state;
    	      this.supportEndDate = defaults.supportEndDate;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder expirationDate(@Nullable String expirationDate) {
            this.expirationDate = expirationDate;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isPerpetual(@Nullable Boolean isPerpetual) {
            this.isPerpetual = isPerpetual;
            return this;
        }
        @CustomType.Setter
        public Builder isUnlimited(@Nullable Boolean isUnlimited) {
            this.isUnlimited = isUnlimited;
            return this;
        }
        @CustomType.Setter
        public Builder licenseCount(@Nullable Integer licenseCount) {
            this.licenseCount = licenseCount;
            return this;
        }
        @CustomType.Setter
        public Builder licenseUnit(@Nullable String licenseUnit) {
            this.licenseUnit = licenseUnit;
            return this;
        }
        @CustomType.Setter
        public Builder productId(@Nullable String productId) {
            this.productId = productId;
            return this;
        }
        @CustomType.Setter
        public Builder productLicense(@Nullable String productLicense) {
            this.productLicense = productLicense;
            return this;
        }
        @CustomType.Setter
        public Builder productLicenseId(@Nullable String productLicenseId) {
            this.productLicenseId = productLicenseId;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder supportEndDate(@Nullable String supportEndDate) {
            this.supportEndDate = supportEndDate;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetLicenseRecordsLicenseRecordCollectionItem build() {
            final var o = new GetLicenseRecordsLicenseRecordCollectionItem();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.expirationDate = expirationDate;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isPerpetual = isPerpetual;
            o.isUnlimited = isUnlimited;
            o.licenseCount = licenseCount;
            o.licenseUnit = licenseUnit;
            o.productId = productId;
            o.productLicense = productLicense;
            o.productLicenseId = productLicenseId;
            o.state = state;
            o.supportEndDate = supportEndDate;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
