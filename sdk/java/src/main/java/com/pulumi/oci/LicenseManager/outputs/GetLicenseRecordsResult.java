// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LicenseManager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LicenseManager.outputs.GetLicenseRecordsFilter;
import com.pulumi.oci.LicenseManager.outputs.GetLicenseRecordsLicenseRecordCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetLicenseRecordsResult {
    private @Nullable List<GetLicenseRecordsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of license_record_collection.
     * 
     */
    private List<GetLicenseRecordsLicenseRecordCollection> licenseRecordCollections;
    /**
     * @return The product license [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) with which the license record is associated.
     * 
     */
    private String productLicenseId;

    private GetLicenseRecordsResult() {}
    public List<GetLicenseRecordsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of license_record_collection.
     * 
     */
    public List<GetLicenseRecordsLicenseRecordCollection> licenseRecordCollections() {
        return this.licenseRecordCollections;
    }
    /**
     * @return The product license [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) with which the license record is associated.
     * 
     */
    public String productLicenseId() {
        return this.productLicenseId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLicenseRecordsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetLicenseRecordsFilter> filters;
        private String id;
        private List<GetLicenseRecordsLicenseRecordCollection> licenseRecordCollections;
        private String productLicenseId;
        public Builder() {}
        public Builder(GetLicenseRecordsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.licenseRecordCollections = defaults.licenseRecordCollections;
    	      this.productLicenseId = defaults.productLicenseId;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetLicenseRecordsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetLicenseRecordsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLicenseRecordsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder licenseRecordCollections(List<GetLicenseRecordsLicenseRecordCollection> licenseRecordCollections) {
            if (licenseRecordCollections == null) {
              throw new MissingRequiredPropertyException("GetLicenseRecordsResult", "licenseRecordCollections");
            }
            this.licenseRecordCollections = licenseRecordCollections;
            return this;
        }
        public Builder licenseRecordCollections(GetLicenseRecordsLicenseRecordCollection... licenseRecordCollections) {
            return licenseRecordCollections(List.of(licenseRecordCollections));
        }
        @CustomType.Setter
        public Builder productLicenseId(String productLicenseId) {
            if (productLicenseId == null) {
              throw new MissingRequiredPropertyException("GetLicenseRecordsResult", "productLicenseId");
            }
            this.productLicenseId = productLicenseId;
            return this;
        }
        public GetLicenseRecordsResult build() {
            final var _resultValue = new GetLicenseRecordsResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.licenseRecordCollections = licenseRecordCollections;
            _resultValue.productLicenseId = productLicenseId;
            return _resultValue;
        }
    }
}
