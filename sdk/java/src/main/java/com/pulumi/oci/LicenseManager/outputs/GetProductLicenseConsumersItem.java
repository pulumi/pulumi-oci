// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LicenseManager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.LicenseManager.outputs.GetProductLicenseConsumersItemMissingProduct;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProductLicenseConsumersItem {
    /**
     * @return Specifies if all options are available.
     * 
     */
    private final Boolean areAllOptionsAvailable;
    /**
     * @return Specifies if the base license is available.
     * 
     */
    private final Boolean isBaseLicenseAvailable;
    /**
     * @return The product license unit.
     * 
     */
    private final String licenseUnitType;
    /**
     * @return Number of license units consumed by the resource.
     * 
     */
    private final Double licenseUnitsConsumed;
    /**
     * @return Collection of missing product licenses.
     * 
     */
    private final List<GetProductLicenseConsumersItemMissingProduct> missingProducts;
    /**
     * @return The resource product name.
     * 
     */
    private final String productName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the resource.
     * 
     */
    private final String resourceCompartmentId;
    /**
     * @return The display name of the compartment that contains the resource.
     * 
     */
    private final String resourceCompartmentName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    private final String resourceId;
    /**
     * @return The display name of the resource.
     * 
     */
    private final String resourceName;
    /**
     * @return Number of units of the resource
     * 
     */
    private final Double resourceUnitCount;
    /**
     * @return The unit type for the resource.
     * 
     */
    private final String resourceUnitType;

    @CustomType.Constructor
    private GetProductLicenseConsumersItem(
        @CustomType.Parameter("areAllOptionsAvailable") Boolean areAllOptionsAvailable,
        @CustomType.Parameter("isBaseLicenseAvailable") Boolean isBaseLicenseAvailable,
        @CustomType.Parameter("licenseUnitType") String licenseUnitType,
        @CustomType.Parameter("licenseUnitsConsumed") Double licenseUnitsConsumed,
        @CustomType.Parameter("missingProducts") List<GetProductLicenseConsumersItemMissingProduct> missingProducts,
        @CustomType.Parameter("productName") String productName,
        @CustomType.Parameter("resourceCompartmentId") String resourceCompartmentId,
        @CustomType.Parameter("resourceCompartmentName") String resourceCompartmentName,
        @CustomType.Parameter("resourceId") String resourceId,
        @CustomType.Parameter("resourceName") String resourceName,
        @CustomType.Parameter("resourceUnitCount") Double resourceUnitCount,
        @CustomType.Parameter("resourceUnitType") String resourceUnitType) {
        this.areAllOptionsAvailable = areAllOptionsAvailable;
        this.isBaseLicenseAvailable = isBaseLicenseAvailable;
        this.licenseUnitType = licenseUnitType;
        this.licenseUnitsConsumed = licenseUnitsConsumed;
        this.missingProducts = missingProducts;
        this.productName = productName;
        this.resourceCompartmentId = resourceCompartmentId;
        this.resourceCompartmentName = resourceCompartmentName;
        this.resourceId = resourceId;
        this.resourceName = resourceName;
        this.resourceUnitCount = resourceUnitCount;
        this.resourceUnitType = resourceUnitType;
    }

    /**
     * @return Specifies if all options are available.
     * 
     */
    public Boolean areAllOptionsAvailable() {
        return this.areAllOptionsAvailable;
    }
    /**
     * @return Specifies if the base license is available.
     * 
     */
    public Boolean isBaseLicenseAvailable() {
        return this.isBaseLicenseAvailable;
    }
    /**
     * @return The product license unit.
     * 
     */
    public String licenseUnitType() {
        return this.licenseUnitType;
    }
    /**
     * @return Number of license units consumed by the resource.
     * 
     */
    public Double licenseUnitsConsumed() {
        return this.licenseUnitsConsumed;
    }
    /**
     * @return Collection of missing product licenses.
     * 
     */
    public List<GetProductLicenseConsumersItemMissingProduct> missingProducts() {
        return this.missingProducts;
    }
    /**
     * @return The resource product name.
     * 
     */
    public String productName() {
        return this.productName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the resource.
     * 
     */
    public String resourceCompartmentId() {
        return this.resourceCompartmentId;
    }
    /**
     * @return The display name of the compartment that contains the resource.
     * 
     */
    public String resourceCompartmentName() {
        return this.resourceCompartmentName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return The display name of the resource.
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }
    /**
     * @return Number of units of the resource
     * 
     */
    public Double resourceUnitCount() {
        return this.resourceUnitCount;
    }
    /**
     * @return The unit type for the resource.
     * 
     */
    public String resourceUnitType() {
        return this.resourceUnitType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductLicenseConsumersItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean areAllOptionsAvailable;
        private Boolean isBaseLicenseAvailable;
        private String licenseUnitType;
        private Double licenseUnitsConsumed;
        private List<GetProductLicenseConsumersItemMissingProduct> missingProducts;
        private String productName;
        private String resourceCompartmentId;
        private String resourceCompartmentName;
        private String resourceId;
        private String resourceName;
        private Double resourceUnitCount;
        private String resourceUnitType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProductLicenseConsumersItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areAllOptionsAvailable = defaults.areAllOptionsAvailable;
    	      this.isBaseLicenseAvailable = defaults.isBaseLicenseAvailable;
    	      this.licenseUnitType = defaults.licenseUnitType;
    	      this.licenseUnitsConsumed = defaults.licenseUnitsConsumed;
    	      this.missingProducts = defaults.missingProducts;
    	      this.productName = defaults.productName;
    	      this.resourceCompartmentId = defaults.resourceCompartmentId;
    	      this.resourceCompartmentName = defaults.resourceCompartmentName;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceUnitCount = defaults.resourceUnitCount;
    	      this.resourceUnitType = defaults.resourceUnitType;
        }

        public Builder areAllOptionsAvailable(Boolean areAllOptionsAvailable) {
            this.areAllOptionsAvailable = Objects.requireNonNull(areAllOptionsAvailable);
            return this;
        }
        public Builder isBaseLicenseAvailable(Boolean isBaseLicenseAvailable) {
            this.isBaseLicenseAvailable = Objects.requireNonNull(isBaseLicenseAvailable);
            return this;
        }
        public Builder licenseUnitType(String licenseUnitType) {
            this.licenseUnitType = Objects.requireNonNull(licenseUnitType);
            return this;
        }
        public Builder licenseUnitsConsumed(Double licenseUnitsConsumed) {
            this.licenseUnitsConsumed = Objects.requireNonNull(licenseUnitsConsumed);
            return this;
        }
        public Builder missingProducts(List<GetProductLicenseConsumersItemMissingProduct> missingProducts) {
            this.missingProducts = Objects.requireNonNull(missingProducts);
            return this;
        }
        public Builder missingProducts(GetProductLicenseConsumersItemMissingProduct... missingProducts) {
            return missingProducts(List.of(missingProducts));
        }
        public Builder productName(String productName) {
            this.productName = Objects.requireNonNull(productName);
            return this;
        }
        public Builder resourceCompartmentId(String resourceCompartmentId) {
            this.resourceCompartmentId = Objects.requireNonNull(resourceCompartmentId);
            return this;
        }
        public Builder resourceCompartmentName(String resourceCompartmentName) {
            this.resourceCompartmentName = Objects.requireNonNull(resourceCompartmentName);
            return this;
        }
        public Builder resourceId(String resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }
        public Builder resourceName(String resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        public Builder resourceUnitCount(Double resourceUnitCount) {
            this.resourceUnitCount = Objects.requireNonNull(resourceUnitCount);
            return this;
        }
        public Builder resourceUnitType(String resourceUnitType) {
            this.resourceUnitType = Objects.requireNonNull(resourceUnitType);
            return this;
        }        public GetProductLicenseConsumersItem build() {
            return new GetProductLicenseConsumersItem(areAllOptionsAvailable, isBaseLicenseAvailable, licenseUnitType, licenseUnitsConsumed, missingProducts, productName, resourceCompartmentId, resourceCompartmentName, resourceId, resourceName, resourceUnitCount, resourceUnitType);
        }
    }
}
