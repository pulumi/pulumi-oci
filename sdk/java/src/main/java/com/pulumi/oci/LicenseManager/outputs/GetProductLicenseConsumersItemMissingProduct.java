// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LicenseManager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProductLicenseConsumersItemMissingProduct {
    /**
     * @return Product category base or option.
     * 
     */
    private final String category;
    /**
     * @return Units required for the missing product.
     * 
     */
    private final Double count;
    /**
     * @return Name of the product.
     * 
     */
    private final String name;

    @CustomType.Constructor
    private GetProductLicenseConsumersItemMissingProduct(
        @CustomType.Parameter("category") String category,
        @CustomType.Parameter("count") Double count,
        @CustomType.Parameter("name") String name) {
        this.category = category;
        this.count = count;
        this.name = name;
    }

    /**
     * @return Product category base or option.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return Units required for the missing product.
     * 
     */
    public Double count() {
        return this.count;
    }
    /**
     * @return Name of the product.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductLicenseConsumersItemMissingProduct defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String category;
        private Double count;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProductLicenseConsumersItemMissingProduct defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.count = defaults.count;
    	      this.name = defaults.name;
        }

        public Builder category(String category) {
            this.category = Objects.requireNonNull(category);
            return this;
        }
        public Builder count(Double count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public GetProductLicenseConsumersItemMissingProduct build() {
            return new GetProductLicenseConsumersItemMissingProduct(category, count, name);
        }
    }
}
