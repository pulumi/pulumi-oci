// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LicenseManager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProductLicenseConsumersItemMissingProduct {
    /**
     * @return Product category base or option.
     * 
     */
    private @Nullable String category;
    /**
     * @return Units required for the missing product.
     * 
     */
    private @Nullable Double count;
    /**
     * @return Name of the product.
     * 
     */
    private @Nullable String name;

    private GetProductLicenseConsumersItemMissingProduct() {}
    /**
     * @return Product category base or option.
     * 
     */
    public Optional<String> category() {
        return Optional.ofNullable(this.category);
    }
    /**
     * @return Units required for the missing product.
     * 
     */
    public Optional<Double> count() {
        return Optional.ofNullable(this.count);
    }
    /**
     * @return Name of the product.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductLicenseConsumersItemMissingProduct defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String category;
        private @Nullable Double count;
        private @Nullable String name;
        public Builder() {}
        public Builder(GetProductLicenseConsumersItemMissingProduct defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.count = defaults.count;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder category(@Nullable String category) {
            this.category = category;
            return this;
        }
        @CustomType.Setter
        public Builder count(@Nullable Double count) {
            this.count = count;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public GetProductLicenseConsumersItemMissingProduct build() {
            final var o = new GetProductLicenseConsumersItemMissingProduct();
            o.category = category;
            o.count = count;
            o.name = name;
            return o;
        }
    }
}
