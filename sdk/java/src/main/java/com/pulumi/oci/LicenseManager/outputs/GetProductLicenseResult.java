// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LicenseManager.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.LicenseManager.outputs.GetProductLicenseImage;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProductLicenseResult {
    /**
     * @return The number of active license records associated with the product license.
     * 
     */
    private @Nullable Integer activeLicenseRecordCount;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the product license is created.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return License record name
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The image ID associated with the product license.
     * 
     */
    private @Nullable String id;
    /**
     * @return The images associated with the product license.
     * 
     */
    private @Nullable List<GetProductLicenseImage> images;
    /**
     * @return Specifies whether or not the product license is oversubscribed.
     * 
     */
    private @Nullable Boolean isOverSubscribed;
    /**
     * @return Specifies if the license unit count is unlimited.
     * 
     */
    private @Nullable Boolean isUnlimited;
    /**
     * @return Specifies whether the vendor is Oracle or a third party.
     * 
     */
    private @Nullable Boolean isVendorOracle;
    /**
     * @return The product license unit.
     * 
     */
    private @Nullable String licenseUnit;
    private String productLicenseId;
    /**
     * @return The current product license state.
     * 
     */
    private @Nullable String state;
    /**
     * @return The current product license status.
     * 
     */
    private @Nullable String status;
    /**
     * @return Status description for the current product license status.
     * 
     */
    private @Nullable String statusDescription;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time the product license was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the product license was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The total number of licenses available for the product license, calculated by adding up all the license counts for active license records associated with the product license.
     * 
     */
    private @Nullable Integer totalActiveLicenseUnitCount;
    /**
     * @return The number of license records associated with the product license.
     * 
     */
    private @Nullable Integer totalLicenseRecordCount;
    /**
     * @return The number of license units consumed. Updated after each allocation run.
     * 
     */
    private @Nullable Double totalLicenseUnitsConsumed;
    /**
     * @return The vendor of the ProductLicense
     * 
     */
    private @Nullable String vendorName;

    private GetProductLicenseResult() {}
    /**
     * @return The number of active license records associated with the product license.
     * 
     */
    public Optional<Integer> activeLicenseRecordCount() {
        return Optional.ofNullable(this.activeLicenseRecordCount);
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) where the product license is created.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return License record name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The image ID associated with the product license.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The images associated with the product license.
     * 
     */
    public List<GetProductLicenseImage> images() {
        return this.images == null ? List.of() : this.images;
    }
    /**
     * @return Specifies whether or not the product license is oversubscribed.
     * 
     */
    public Optional<Boolean> isOverSubscribed() {
        return Optional.ofNullable(this.isOverSubscribed);
    }
    /**
     * @return Specifies if the license unit count is unlimited.
     * 
     */
    public Optional<Boolean> isUnlimited() {
        return Optional.ofNullable(this.isUnlimited);
    }
    /**
     * @return Specifies whether the vendor is Oracle or a third party.
     * 
     */
    public Optional<Boolean> isVendorOracle() {
        return Optional.ofNullable(this.isVendorOracle);
    }
    /**
     * @return The product license unit.
     * 
     */
    public Optional<String> licenseUnit() {
        return Optional.ofNullable(this.licenseUnit);
    }
    public String productLicenseId() {
        return this.productLicenseId;
    }
    /**
     * @return The current product license state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The current product license status.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Status description for the current product license status.
     * 
     */
    public Optional<String> statusDescription() {
        return Optional.ofNullable(this.statusDescription);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time the product license was created. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the product license was updated. An [RFC 3339](https://tools.ietf.org/html/rfc3339)-formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The total number of licenses available for the product license, calculated by adding up all the license counts for active license records associated with the product license.
     * 
     */
    public Optional<Integer> totalActiveLicenseUnitCount() {
        return Optional.ofNullable(this.totalActiveLicenseUnitCount);
    }
    /**
     * @return The number of license records associated with the product license.
     * 
     */
    public Optional<Integer> totalLicenseRecordCount() {
        return Optional.ofNullable(this.totalLicenseRecordCount);
    }
    /**
     * @return The number of license units consumed. Updated after each allocation run.
     * 
     */
    public Optional<Double> totalLicenseUnitsConsumed() {
        return Optional.ofNullable(this.totalLicenseUnitsConsumed);
    }
    /**
     * @return The vendor of the ProductLicense
     * 
     */
    public Optional<String> vendorName() {
        return Optional.ofNullable(this.vendorName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductLicenseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer activeLicenseRecordCount;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable List<GetProductLicenseImage> images;
        private @Nullable Boolean isOverSubscribed;
        private @Nullable Boolean isUnlimited;
        private @Nullable Boolean isVendorOracle;
        private @Nullable String licenseUnit;
        private String productLicenseId;
        private @Nullable String state;
        private @Nullable String status;
        private @Nullable String statusDescription;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable Integer totalActiveLicenseUnitCount;
        private @Nullable Integer totalLicenseRecordCount;
        private @Nullable Double totalLicenseUnitsConsumed;
        private @Nullable String vendorName;
        public Builder() {}
        public Builder(GetProductLicenseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeLicenseRecordCount = defaults.activeLicenseRecordCount;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.images = defaults.images;
    	      this.isOverSubscribed = defaults.isOverSubscribed;
    	      this.isUnlimited = defaults.isUnlimited;
    	      this.isVendorOracle = defaults.isVendorOracle;
    	      this.licenseUnit = defaults.licenseUnit;
    	      this.productLicenseId = defaults.productLicenseId;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.statusDescription = defaults.statusDescription;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.totalActiveLicenseUnitCount = defaults.totalActiveLicenseUnitCount;
    	      this.totalLicenseRecordCount = defaults.totalLicenseRecordCount;
    	      this.totalLicenseUnitsConsumed = defaults.totalLicenseUnitsConsumed;
    	      this.vendorName = defaults.vendorName;
        }

        @CustomType.Setter
        public Builder activeLicenseRecordCount(@Nullable Integer activeLicenseRecordCount) {
            this.activeLicenseRecordCount = activeLicenseRecordCount;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder images(@Nullable List<GetProductLicenseImage> images) {
            this.images = images;
            return this;
        }
        public Builder images(GetProductLicenseImage... images) {
            return images(List.of(images));
        }
        @CustomType.Setter
        public Builder isOverSubscribed(@Nullable Boolean isOverSubscribed) {
            this.isOverSubscribed = isOverSubscribed;
            return this;
        }
        @CustomType.Setter
        public Builder isUnlimited(@Nullable Boolean isUnlimited) {
            this.isUnlimited = isUnlimited;
            return this;
        }
        @CustomType.Setter
        public Builder isVendorOracle(@Nullable Boolean isVendorOracle) {
            this.isVendorOracle = isVendorOracle;
            return this;
        }
        @CustomType.Setter
        public Builder licenseUnit(@Nullable String licenseUnit) {
            this.licenseUnit = licenseUnit;
            return this;
        }
        @CustomType.Setter
        public Builder productLicenseId(String productLicenseId) {
            this.productLicenseId = Objects.requireNonNull(productLicenseId);
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusDescription(@Nullable String statusDescription) {
            this.statusDescription = statusDescription;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder totalActiveLicenseUnitCount(@Nullable Integer totalActiveLicenseUnitCount) {
            this.totalActiveLicenseUnitCount = totalActiveLicenseUnitCount;
            return this;
        }
        @CustomType.Setter
        public Builder totalLicenseRecordCount(@Nullable Integer totalLicenseRecordCount) {
            this.totalLicenseRecordCount = totalLicenseRecordCount;
            return this;
        }
        @CustomType.Setter
        public Builder totalLicenseUnitsConsumed(@Nullable Double totalLicenseUnitsConsumed) {
            this.totalLicenseUnitsConsumed = totalLicenseUnitsConsumed;
            return this;
        }
        @CustomType.Setter
        public Builder vendorName(@Nullable String vendorName) {
            this.vendorName = vendorName;
            return this;
        }
        public GetProductLicenseResult build() {
            final var o = new GetProductLicenseResult();
            o.activeLicenseRecordCount = activeLicenseRecordCount;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.images = images;
            o.isOverSubscribed = isOverSubscribed;
            o.isUnlimited = isUnlimited;
            o.isVendorOracle = isVendorOracle;
            o.licenseUnit = licenseUnit;
            o.productLicenseId = productLicenseId;
            o.state = state;
            o.status = status;
            o.statusDescription = statusDescription;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.totalActiveLicenseUnitCount = totalActiveLicenseUnitCount;
            o.totalLicenseRecordCount = totalLicenseRecordCount;
            o.totalLicenseUnitsConsumed = totalLicenseUnitsConsumed;
            o.vendorName = vendorName;
            return o;
        }
    }
}
