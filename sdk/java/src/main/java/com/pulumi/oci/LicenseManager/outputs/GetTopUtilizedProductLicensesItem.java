// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LicenseManager.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTopUtilizedProductLicensesItem {
    /**
     * @return Specifies if the license unit count is unlimited.
     * 
     */
    private @Nullable Boolean isUnlimited;
    /**
     * @return The product license [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String productLicenseId;
    /**
     * @return The product type.
     * 
     */
    private @Nullable String productType;
    /**
     * @return The current product license status.
     * 
     */
    private @Nullable String status;
    /**
     * @return Total number of license units in the product license provided by the user.
     * 
     */
    private @Nullable Integer totalLicenseUnitCount;
    /**
     * @return Number of license units consumed.
     * 
     */
    private @Nullable Double totalUnitsConsumed;
    /**
     * @return The product license unit.
     * 
     */
    private @Nullable String unitType;

    private GetTopUtilizedProductLicensesItem() {}
    /**
     * @return Specifies if the license unit count is unlimited.
     * 
     */
    public Optional<Boolean> isUnlimited() {
        return Optional.ofNullable(this.isUnlimited);
    }
    /**
     * @return The product license [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> productLicenseId() {
        return Optional.ofNullable(this.productLicenseId);
    }
    /**
     * @return The product type.
     * 
     */
    public Optional<String> productType() {
        return Optional.ofNullable(this.productType);
    }
    /**
     * @return The current product license status.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return Total number of license units in the product license provided by the user.
     * 
     */
    public Optional<Integer> totalLicenseUnitCount() {
        return Optional.ofNullable(this.totalLicenseUnitCount);
    }
    /**
     * @return Number of license units consumed.
     * 
     */
    public Optional<Double> totalUnitsConsumed() {
        return Optional.ofNullable(this.totalUnitsConsumed);
    }
    /**
     * @return The product license unit.
     * 
     */
    public Optional<String> unitType() {
        return Optional.ofNullable(this.unitType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTopUtilizedProductLicensesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isUnlimited;
        private @Nullable String productLicenseId;
        private @Nullable String productType;
        private @Nullable String status;
        private @Nullable Integer totalLicenseUnitCount;
        private @Nullable Double totalUnitsConsumed;
        private @Nullable String unitType;
        public Builder() {}
        public Builder(GetTopUtilizedProductLicensesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isUnlimited = defaults.isUnlimited;
    	      this.productLicenseId = defaults.productLicenseId;
    	      this.productType = defaults.productType;
    	      this.status = defaults.status;
    	      this.totalLicenseUnitCount = defaults.totalLicenseUnitCount;
    	      this.totalUnitsConsumed = defaults.totalUnitsConsumed;
    	      this.unitType = defaults.unitType;
        }

        @CustomType.Setter
        public Builder isUnlimited(@Nullable Boolean isUnlimited) {
            this.isUnlimited = isUnlimited;
            return this;
        }
        @CustomType.Setter
        public Builder productLicenseId(@Nullable String productLicenseId) {
            this.productLicenseId = productLicenseId;
            return this;
        }
        @CustomType.Setter
        public Builder productType(@Nullable String productType) {
            this.productType = productType;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder totalLicenseUnitCount(@Nullable Integer totalLicenseUnitCount) {
            this.totalLicenseUnitCount = totalLicenseUnitCount;
            return this;
        }
        @CustomType.Setter
        public Builder totalUnitsConsumed(@Nullable Double totalUnitsConsumed) {
            this.totalUnitsConsumed = totalUnitsConsumed;
            return this;
        }
        @CustomType.Setter
        public Builder unitType(@Nullable String unitType) {
            this.unitType = unitType;
            return this;
        }
        public GetTopUtilizedProductLicensesItem build() {
            final var o = new GetTopUtilizedProductLicensesItem();
            o.isUnlimited = isUnlimited;
            o.productLicenseId = productLicenseId;
            o.productType = productType;
            o.status = status;
            o.totalLicenseUnitCount = totalLicenseUnitCount;
            o.totalUnitsConsumed = totalUnitsConsumed;
            o.unitType = unitType;
            return o;
        }
    }
}
