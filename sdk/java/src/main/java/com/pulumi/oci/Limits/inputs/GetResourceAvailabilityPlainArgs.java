// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Limits.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetResourceAvailabilityPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResourceAvailabilityPlainArgs Empty = new GetResourceAvailabilityPlainArgs();

    /**
     * This field is mandatory if the scopeType of the target resource limit is AD. Otherwise, this field should be omitted. If the above requirements are not met, the API returns a 400 - InvalidParameter response.
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable String availabilityDomain;

    /**
     * @return This field is mandatory if the scopeType of the target resource limit is AD. Otherwise, this field should be omitted. If the above requirements are not met, the API returns a 400 - InvalidParameter response.
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * The OCID of the compartment for which data is being fetched.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the compartment for which data is being fetched.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * The limit name for which to fetch the data.
     * 
     */
    @Import(name="limitName", required=true)
    private String limitName;

    /**
     * @return The limit name for which to fetch the data.
     * 
     */
    public String limitName() {
        return this.limitName;
    }

    /**
     * The service name of the target quota.
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    /**
     * @return The service name of the target quota.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    /**
     * The OCID of the subscription assigned to tenant
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable String subscriptionId;

    /**
     * @return The OCID of the subscription assigned to tenant
     * 
     */
    public Optional<String> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    private GetResourceAvailabilityPlainArgs() {}

    private GetResourceAvailabilityPlainArgs(GetResourceAvailabilityPlainArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.compartmentId = $.compartmentId;
        this.limitName = $.limitName;
        this.serviceName = $.serviceName;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResourceAvailabilityPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResourceAvailabilityPlainArgs $;

        public Builder() {
            $ = new GetResourceAvailabilityPlainArgs();
        }

        public Builder(GetResourceAvailabilityPlainArgs defaults) {
            $ = new GetResourceAvailabilityPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain This field is mandatory if the scopeType of the target resource limit is AD. Otherwise, this field should be omitted. If the above requirements are not met, the API returns a 400 - InvalidParameter response.
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment for which data is being fetched.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param limitName The limit name for which to fetch the data.
         * 
         * @return builder
         * 
         */
        public Builder limitName(String limitName) {
            $.limitName = limitName;
            return this;
        }

        /**
         * @param serviceName The service name of the target quota.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param subscriptionId The OCID of the subscription assigned to tenant
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable String subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        public GetResourceAvailabilityPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetResourceAvailabilityPlainArgs", "compartmentId");
            }
            if ($.limitName == null) {
                throw new MissingRequiredPropertyException("GetResourceAvailabilityPlainArgs", "limitName");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetResourceAvailabilityPlainArgs", "serviceName");
            }
            return $;
        }
    }

}
