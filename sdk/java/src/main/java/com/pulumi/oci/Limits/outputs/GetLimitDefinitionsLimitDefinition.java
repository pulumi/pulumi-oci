// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Limits.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLimitDefinitionsLimitDefinition {
    /**
     * @return If true, quota policies can be created on top of this resource limit.
     * 
     */
    private @Nullable Boolean areQuotasSupported;
    /**
     * @return The limit description.
     * 
     */
    private @Nullable String description;
    /**
     * @return Indicates if the limit has been deprecated.
     * 
     */
    private @Nullable Boolean isDeprecated;
    /**
     * @return The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
     * 
     */
    private @Nullable Boolean isDynamic;
    /**
     * @return Indicates if the customer can request a limit increase for this resource.
     * 
     */
    private @Nullable Boolean isEligibleForLimitIncrease;
    /**
     * @return Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
     * 
     */
    private @Nullable Boolean isResourceAvailabilitySupported;
    /**
     * @return Optional field, filter for a specific resource limit.
     * 
     */
    private @Nullable String name;
    /**
     * @return Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
     * 
     */
    private @Nullable String scopeType;
    /**
     * @return The target service name.
     * 
     */
    private @Nullable String serviceName;

    private GetLimitDefinitionsLimitDefinition() {}
    /**
     * @return If true, quota policies can be created on top of this resource limit.
     * 
     */
    public Optional<Boolean> areQuotasSupported() {
        return Optional.ofNullable(this.areQuotasSupported);
    }
    /**
     * @return The limit description.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Indicates if the limit has been deprecated.
     * 
     */
    public Optional<Boolean> isDeprecated() {
        return Optional.ofNullable(this.isDeprecated);
    }
    /**
     * @return The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
     * 
     */
    public Optional<Boolean> isDynamic() {
        return Optional.ofNullable(this.isDynamic);
    }
    /**
     * @return Indicates if the customer can request a limit increase for this resource.
     * 
     */
    public Optional<Boolean> isEligibleForLimitIncrease() {
        return Optional.ofNullable(this.isEligibleForLimitIncrease);
    }
    /**
     * @return Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
     * 
     */
    public Optional<Boolean> isResourceAvailabilitySupported() {
        return Optional.ofNullable(this.isResourceAvailabilitySupported);
    }
    /**
     * @return Optional field, filter for a specific resource limit.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
     * 
     */
    public Optional<String> scopeType() {
        return Optional.ofNullable(this.scopeType);
    }
    /**
     * @return The target service name.
     * 
     */
    public Optional<String> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLimitDefinitionsLimitDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean areQuotasSupported;
        private @Nullable String description;
        private @Nullable Boolean isDeprecated;
        private @Nullable Boolean isDynamic;
        private @Nullable Boolean isEligibleForLimitIncrease;
        private @Nullable Boolean isResourceAvailabilitySupported;
        private @Nullable String name;
        private @Nullable String scopeType;
        private @Nullable String serviceName;
        public Builder() {}
        public Builder(GetLimitDefinitionsLimitDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areQuotasSupported = defaults.areQuotasSupported;
    	      this.description = defaults.description;
    	      this.isDeprecated = defaults.isDeprecated;
    	      this.isDynamic = defaults.isDynamic;
    	      this.isEligibleForLimitIncrease = defaults.isEligibleForLimitIncrease;
    	      this.isResourceAvailabilitySupported = defaults.isResourceAvailabilitySupported;
    	      this.name = defaults.name;
    	      this.scopeType = defaults.scopeType;
    	      this.serviceName = defaults.serviceName;
        }

        @CustomType.Setter
        public Builder areQuotasSupported(@Nullable Boolean areQuotasSupported) {
            this.areQuotasSupported = areQuotasSupported;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder isDeprecated(@Nullable Boolean isDeprecated) {
            this.isDeprecated = isDeprecated;
            return this;
        }
        @CustomType.Setter
        public Builder isDynamic(@Nullable Boolean isDynamic) {
            this.isDynamic = isDynamic;
            return this;
        }
        @CustomType.Setter
        public Builder isEligibleForLimitIncrease(@Nullable Boolean isEligibleForLimitIncrease) {
            this.isEligibleForLimitIncrease = isEligibleForLimitIncrease;
            return this;
        }
        @CustomType.Setter
        public Builder isResourceAvailabilitySupported(@Nullable Boolean isResourceAvailabilitySupported) {
            this.isResourceAvailabilitySupported = isResourceAvailabilitySupported;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder scopeType(@Nullable String scopeType) {
            this.scopeType = scopeType;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = serviceName;
            return this;
        }
        public GetLimitDefinitionsLimitDefinition build() {
            final var o = new GetLimitDefinitionsLimitDefinition();
            o.areQuotasSupported = areQuotasSupported;
            o.description = description;
            o.isDeprecated = isDeprecated;
            o.isDynamic = isDynamic;
            o.isEligibleForLimitIncrease = isEligibleForLimitIncrease;
            o.isResourceAvailabilitySupported = isResourceAvailabilitySupported;
            o.name = name;
            o.scopeType = scopeType;
            o.serviceName = serviceName;
            return o;
        }
    }
}
