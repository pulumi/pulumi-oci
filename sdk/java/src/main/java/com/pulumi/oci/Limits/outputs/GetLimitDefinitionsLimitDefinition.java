// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Limits.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetLimitDefinitionsLimitDefinition {
    /**
     * @return If true, quota policies can be created on top of this resource limit.
     * 
     */
    private Boolean areQuotasSupported;
    /**
     * @return The limit description.
     * 
     */
    private String description;
    /**
     * @return Indicates if the limit has been deprecated.
     * 
     */
    private Boolean isDeprecated;
    /**
     * @return The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
     * 
     */
    private Boolean isDynamic;
    /**
     * @return Indicates if the customer can request a limit increase for this resource.
     * 
     */
    private Boolean isEligibleForLimitIncrease;
    /**
     * @return Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
     * 
     */
    private Boolean isResourceAvailabilitySupported;
    /**
     * @return Optional field, filter for a specific resource limit.
     * 
     */
    private String name;
    /**
     * @return Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
     * 
     */
    private String scopeType;
    /**
     * @return The target service name.
     * 
     */
    private String serviceName;
    /**
     * @return Supported quota family names for creation of quota policy.
     * 
     */
    private List<String> supportedQuotaFamilies;
    /**
     * @return An array of subscription types supported by the limit. e,g The type of subscription, such as &#39;SAAS&#39;, &#39;ERP&#39;, &#39;CRM&#39;.
     * 
     */
    private List<String> supportedSubscriptions;

    private GetLimitDefinitionsLimitDefinition() {}
    /**
     * @return If true, quota policies can be created on top of this resource limit.
     * 
     */
    public Boolean areQuotasSupported() {
        return this.areQuotasSupported;
    }
    /**
     * @return The limit description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Indicates if the limit has been deprecated.
     * 
     */
    public Boolean isDeprecated() {
        return this.isDeprecated;
    }
    /**
     * @return The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
     * 
     */
    public Boolean isDynamic() {
        return this.isDynamic;
    }
    /**
     * @return Indicates if the customer can request a limit increase for this resource.
     * 
     */
    public Boolean isEligibleForLimitIncrease() {
        return this.isEligibleForLimitIncrease;
    }
    /**
     * @return Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
     * 
     */
    public Boolean isResourceAvailabilitySupported() {
        return this.isResourceAvailabilitySupported;
    }
    /**
     * @return Optional field, filter for a specific resource limit.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
     * 
     */
    public String scopeType() {
        return this.scopeType;
    }
    /**
     * @return The target service name.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Supported quota family names for creation of quota policy.
     * 
     */
    public List<String> supportedQuotaFamilies() {
        return this.supportedQuotaFamilies;
    }
    /**
     * @return An array of subscription types supported by the limit. e,g The type of subscription, such as &#39;SAAS&#39;, &#39;ERP&#39;, &#39;CRM&#39;.
     * 
     */
    public List<String> supportedSubscriptions() {
        return this.supportedSubscriptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLimitDefinitionsLimitDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean areQuotasSupported;
        private String description;
        private Boolean isDeprecated;
        private Boolean isDynamic;
        private Boolean isEligibleForLimitIncrease;
        private Boolean isResourceAvailabilitySupported;
        private String name;
        private String scopeType;
        private String serviceName;
        private List<String> supportedQuotaFamilies;
        private List<String> supportedSubscriptions;
        public Builder() {}
        public Builder(GetLimitDefinitionsLimitDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areQuotasSupported = defaults.areQuotasSupported;
    	      this.description = defaults.description;
    	      this.isDeprecated = defaults.isDeprecated;
    	      this.isDynamic = defaults.isDynamic;
    	      this.isEligibleForLimitIncrease = defaults.isEligibleForLimitIncrease;
    	      this.isResourceAvailabilitySupported = defaults.isResourceAvailabilitySupported;
    	      this.name = defaults.name;
    	      this.scopeType = defaults.scopeType;
    	      this.serviceName = defaults.serviceName;
    	      this.supportedQuotaFamilies = defaults.supportedQuotaFamilies;
    	      this.supportedSubscriptions = defaults.supportedSubscriptions;
        }

        @CustomType.Setter
        public Builder areQuotasSupported(Boolean areQuotasSupported) {
            if (areQuotasSupported == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "areQuotasSupported");
            }
            this.areQuotasSupported = areQuotasSupported;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder isDeprecated(Boolean isDeprecated) {
            if (isDeprecated == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "isDeprecated");
            }
            this.isDeprecated = isDeprecated;
            return this;
        }
        @CustomType.Setter
        public Builder isDynamic(Boolean isDynamic) {
            if (isDynamic == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "isDynamic");
            }
            this.isDynamic = isDynamic;
            return this;
        }
        @CustomType.Setter
        public Builder isEligibleForLimitIncrease(Boolean isEligibleForLimitIncrease) {
            if (isEligibleForLimitIncrease == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "isEligibleForLimitIncrease");
            }
            this.isEligibleForLimitIncrease = isEligibleForLimitIncrease;
            return this;
        }
        @CustomType.Setter
        public Builder isResourceAvailabilitySupported(Boolean isResourceAvailabilitySupported) {
            if (isResourceAvailabilitySupported == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "isResourceAvailabilitySupported");
            }
            this.isResourceAvailabilitySupported = isResourceAvailabilitySupported;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder scopeType(String scopeType) {
            if (scopeType == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "scopeType");
            }
            this.scopeType = scopeType;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder supportedQuotaFamilies(List<String> supportedQuotaFamilies) {
            if (supportedQuotaFamilies == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "supportedQuotaFamilies");
            }
            this.supportedQuotaFamilies = supportedQuotaFamilies;
            return this;
        }
        public Builder supportedQuotaFamilies(String... supportedQuotaFamilies) {
            return supportedQuotaFamilies(List.of(supportedQuotaFamilies));
        }
        @CustomType.Setter
        public Builder supportedSubscriptions(List<String> supportedSubscriptions) {
            if (supportedSubscriptions == null) {
              throw new MissingRequiredPropertyException("GetLimitDefinitionsLimitDefinition", "supportedSubscriptions");
            }
            this.supportedSubscriptions = supportedSubscriptions;
            return this;
        }
        public Builder supportedSubscriptions(String... supportedSubscriptions) {
            return supportedSubscriptions(List.of(supportedSubscriptions));
        }
        public GetLimitDefinitionsLimitDefinition build() {
            final var _resultValue = new GetLimitDefinitionsLimitDefinition();
            _resultValue.areQuotasSupported = areQuotasSupported;
            _resultValue.description = description;
            _resultValue.isDeprecated = isDeprecated;
            _resultValue.isDynamic = isDynamic;
            _resultValue.isEligibleForLimitIncrease = isEligibleForLimitIncrease;
            _resultValue.isResourceAvailabilitySupported = isResourceAvailabilitySupported;
            _resultValue.name = name;
            _resultValue.scopeType = scopeType;
            _resultValue.serviceName = serviceName;
            _resultValue.supportedQuotaFamilies = supportedQuotaFamilies;
            _resultValue.supportedSubscriptions = supportedSubscriptions;
            return _resultValue;
        }
    }
}
