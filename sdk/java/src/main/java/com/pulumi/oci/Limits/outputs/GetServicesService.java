// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Limits.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServicesService {
    /**
     * @return The friendly service name.
     * 
     */
    private String description;
    /**
     * @return The service name. Use this when calling other APIs.
     * 
     */
    private String name;
    /**
     * @return An array of subscription types supported by the service. e,g The type of subscription, such as &#39;SAAS&#39;, &#39;ERP&#39;, &#39;CRM&#39;.
     * 
     */
    private List<String> supportedSubscriptions;

    private GetServicesService() {}
    /**
     * @return The friendly service name.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The service name. Use this when calling other APIs.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return An array of subscription types supported by the service. e,g The type of subscription, such as &#39;SAAS&#39;, &#39;ERP&#39;, &#39;CRM&#39;.
     * 
     */
    public List<String> supportedSubscriptions() {
        return this.supportedSubscriptions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServicesService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String name;
        private List<String> supportedSubscriptions;
        public Builder() {}
        public Builder(GetServicesService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.supportedSubscriptions = defaults.supportedSubscriptions;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetServicesService", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetServicesService", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder supportedSubscriptions(List<String> supportedSubscriptions) {
            if (supportedSubscriptions == null) {
              throw new MissingRequiredPropertyException("GetServicesService", "supportedSubscriptions");
            }
            this.supportedSubscriptions = supportedSubscriptions;
            return this;
        }
        public Builder supportedSubscriptions(String... supportedSubscriptions) {
            return supportedSubscriptions(List.of(supportedSubscriptions));
        }
        public GetServicesService build() {
            final var _resultValue = new GetServicesService();
            _resultValue.description = description;
            _resultValue.name = name;
            _resultValue.supportedSubscriptions = supportedSubscriptions;
            return _resultValue;
        }
    }
}
