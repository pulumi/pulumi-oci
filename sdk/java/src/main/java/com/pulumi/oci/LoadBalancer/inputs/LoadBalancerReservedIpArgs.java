// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerReservedIpArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerReservedIpArgs Empty = new LoadBalancerReservedIpArgs();

    /**
     * Ocid of the Reserved IP/Public Ip created with VCN.
     * 
     * Reserved IPs are IPs which already registered using VCN API.
     * 
     * Create a reserved Public IP and then while creating the load balancer pass the ocid of the reserved IP in this field reservedIp to attach the Ip to Load balancer. Load balancer will be configured to listen to traffic on this IP.
     * 
     * Reserved IPs will not be deleted when the Load balancer is deleted. They will be unattached from the Load balancer.
     * 
     * Example: &#34;ocid1.publicip.oc1.phx.unique_ID&#34;
     * 
     * IPV6 example: &#34;ocid1.ipv6.oc1.phx.unique_ID&#34; Ocid of the pre-created public IP that should be attached to this load balancer. The public IP will be attached to a private IP. **Note** If public IP resource is present in the config, the pulumi preview will throw `After applying this step and refreshing, the plan was not empty` error, and `privateIpId` needs to be added as an input argument to the public IP resource block or ignore from its lifecycle as shown in examples to resolve this error.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return Ocid of the Reserved IP/Public Ip created with VCN.
     * 
     * Reserved IPs are IPs which already registered using VCN API.
     * 
     * Create a reserved Public IP and then while creating the load balancer pass the ocid of the reserved IP in this field reservedIp to attach the Ip to Load balancer. Load balancer will be configured to listen to traffic on this IP.
     * 
     * Reserved IPs will not be deleted when the Load balancer is deleted. They will be unattached from the Load balancer.
     * 
     * Example: &#34;ocid1.publicip.oc1.phx.unique_ID&#34;
     * 
     * IPV6 example: &#34;ocid1.ipv6.oc1.phx.unique_ID&#34; Ocid of the pre-created public IP that should be attached to this load balancer. The public IP will be attached to a private IP. **Note** If public IP resource is present in the config, the pulumi preview will throw `After applying this step and refreshing, the plan was not empty` error, and `privateIpId` needs to be added as an input argument to the public IP resource block or ignore from its lifecycle as shown in examples to resolve this error.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    private LoadBalancerReservedIpArgs() {}

    private LoadBalancerReservedIpArgs(LoadBalancerReservedIpArgs $) {
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerReservedIpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerReservedIpArgs $;

        public Builder() {
            $ = new LoadBalancerReservedIpArgs();
        }

        public Builder(LoadBalancerReservedIpArgs defaults) {
            $ = new LoadBalancerReservedIpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Ocid of the Reserved IP/Public Ip created with VCN.
         * 
         * Reserved IPs are IPs which already registered using VCN API.
         * 
         * Create a reserved Public IP and then while creating the load balancer pass the ocid of the reserved IP in this field reservedIp to attach the Ip to Load balancer. Load balancer will be configured to listen to traffic on this IP.
         * 
         * Reserved IPs will not be deleted when the Load balancer is deleted. They will be unattached from the Load balancer.
         * 
         * Example: &#34;ocid1.publicip.oc1.phx.unique_ID&#34;
         * 
         * IPV6 example: &#34;ocid1.ipv6.oc1.phx.unique_ID&#34; Ocid of the pre-created public IP that should be attached to this load balancer. The public IP will be attached to a private IP. **Note** If public IP resource is present in the config, the pulumi preview will throw `After applying this step and refreshing, the plan was not empty` error, and `privateIpId` needs to be added as an input argument to the public IP resource block or ignore from its lifecycle as shown in examples to resolve this error.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Ocid of the Reserved IP/Public Ip created with VCN.
         * 
         * Reserved IPs are IPs which already registered using VCN API.
         * 
         * Create a reserved Public IP and then while creating the load balancer pass the ocid of the reserved IP in this field reservedIp to attach the Ip to Load balancer. Load balancer will be configured to listen to traffic on this IP.
         * 
         * Reserved IPs will not be deleted when the Load balancer is deleted. They will be unattached from the Load balancer.
         * 
         * Example: &#34;ocid1.publicip.oc1.phx.unique_ID&#34;
         * 
         * IPV6 example: &#34;ocid1.ipv6.oc1.phx.unique_ID&#34; Ocid of the pre-created public IP that should be attached to this load balancer. The public IP will be attached to a private IP. **Note** If public IP resource is present in the config, the pulumi preview will throw `After applying this step and refreshing, the plan was not empty` error, and `privateIpId` needs to be added as an input argument to the public IP resource block or ignore from its lifecycle as shown in examples to resolve this error.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public LoadBalancerReservedIpArgs build() {
            return $;
        }
    }

}
