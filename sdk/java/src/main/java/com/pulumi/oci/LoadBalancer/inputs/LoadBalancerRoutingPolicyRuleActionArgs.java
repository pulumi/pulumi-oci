// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LoadBalancerRoutingPolicyRuleActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerRoutingPolicyRuleActionArgs Empty = new LoadBalancerRoutingPolicyRuleActionArgs();

    /**
     * (Updatable) Name of the backend set the listener will forward the traffic to.  Example: `backendSetForImages`
     * 
     */
    @Import(name="backendSetName", required=true)
    private Output<String> backendSetName;

    /**
     * @return (Updatable) Name of the backend set the listener will forward the traffic to.  Example: `backendSetForImages`
     * 
     */
    public Output<String> backendSetName() {
        return this.backendSetName;
    }

    /**
     * (Updatable) A unique name for the routing policy rule. Avoid entering confidential information.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return (Updatable) A unique name for the routing policy rule. Avoid entering confidential information.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private LoadBalancerRoutingPolicyRuleActionArgs() {}

    private LoadBalancerRoutingPolicyRuleActionArgs(LoadBalancerRoutingPolicyRuleActionArgs $) {
        this.backendSetName = $.backendSetName;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerRoutingPolicyRuleActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerRoutingPolicyRuleActionArgs $;

        public Builder() {
            $ = new LoadBalancerRoutingPolicyRuleActionArgs();
        }

        public Builder(LoadBalancerRoutingPolicyRuleActionArgs defaults) {
            $ = new LoadBalancerRoutingPolicyRuleActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendSetName (Updatable) Name of the backend set the listener will forward the traffic to.  Example: `backendSetForImages`
         * 
         * @return builder
         * 
         */
        public Builder backendSetName(Output<String> backendSetName) {
            $.backendSetName = backendSetName;
            return this;
        }

        /**
         * @param backendSetName (Updatable) Name of the backend set the listener will forward the traffic to.  Example: `backendSetForImages`
         * 
         * @return builder
         * 
         */
        public Builder backendSetName(String backendSetName) {
            return backendSetName(Output.of(backendSetName));
        }

        /**
         * @param name (Updatable) A unique name for the routing policy rule. Avoid entering confidential information.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) A unique name for the routing policy rule. Avoid entering confidential information.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public LoadBalancerRoutingPolicyRuleActionArgs build() {
            if ($.backendSetName == null) {
                throw new MissingRequiredPropertyException("LoadBalancerRoutingPolicyRuleActionArgs", "backendSetName");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("LoadBalancerRoutingPolicyRuleActionArgs", "name");
            }
            return $;
        }
    }

}
