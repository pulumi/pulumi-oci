// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LoadBalancer.outputs.GetListenerRulesFilter;
import com.pulumi.oci.LoadBalancer.outputs.GetListenerRulesListenerRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetListenerRulesResult {
    private @Nullable List<GetListenerRulesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String listenerName;
    /**
     * @return The list of listener_rules.
     * 
     */
    private List<GetListenerRulesListenerRule> listenerRules;
    private String loadBalancerId;

    private GetListenerRulesResult() {}
    public List<GetListenerRulesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String listenerName() {
        return this.listenerName;
    }
    /**
     * @return The list of listener_rules.
     * 
     */
    public List<GetListenerRulesListenerRule> listenerRules() {
        return this.listenerRules;
    }
    public String loadBalancerId() {
        return this.loadBalancerId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenerRulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetListenerRulesFilter> filters;
        private String id;
        private String listenerName;
        private List<GetListenerRulesListenerRule> listenerRules;
        private String loadBalancerId;
        public Builder() {}
        public Builder(GetListenerRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.listenerName = defaults.listenerName;
    	      this.listenerRules = defaults.listenerRules;
    	      this.loadBalancerId = defaults.loadBalancerId;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetListenerRulesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetListenerRulesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetListenerRulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder listenerName(String listenerName) {
            if (listenerName == null) {
              throw new MissingRequiredPropertyException("GetListenerRulesResult", "listenerName");
            }
            this.listenerName = listenerName;
            return this;
        }
        @CustomType.Setter
        public Builder listenerRules(List<GetListenerRulesListenerRule> listenerRules) {
            if (listenerRules == null) {
              throw new MissingRequiredPropertyException("GetListenerRulesResult", "listenerRules");
            }
            this.listenerRules = listenerRules;
            return this;
        }
        public Builder listenerRules(GetListenerRulesListenerRule... listenerRules) {
            return listenerRules(List.of(listenerRules));
        }
        @CustomType.Setter
        public Builder loadBalancerId(String loadBalancerId) {
            if (loadBalancerId == null) {
              throw new MissingRequiredPropertyException("GetListenerRulesResult", "loadBalancerId");
            }
            this.loadBalancerId = loadBalancerId;
            return this;
        }
        public GetListenerRulesResult build() {
            final var _resultValue = new GetListenerRulesResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.listenerName = listenerName;
            _resultValue.listenerRules = listenerRules;
            _resultValue.loadBalancerId = loadBalancerId;
            return _resultValue;
        }
    }
}
