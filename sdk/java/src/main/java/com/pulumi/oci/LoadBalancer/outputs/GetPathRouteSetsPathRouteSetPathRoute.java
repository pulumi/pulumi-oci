// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LoadBalancer.outputs.GetPathRouteSetsPathRouteSetPathRoutePathMatchType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPathRouteSetsPathRouteSetPathRoute {
    /**
     * @return The name of the target backend set for requests where the incoming URI matches the specified path.  Example: `exampleBackendSet`
     * 
     */
    private String backendSetName;
    /**
     * @return The path string to match against the incoming URI path.
     * *  Path strings are case-insensitive.
     * *  Asterisk (*) wildcards are not supported.
     * *  Regular expressions are not supported.
     * 
     */
    private String path;
    /**
     * @return The type of matching to apply to incoming URIs.
     * 
     */
    private GetPathRouteSetsPathRouteSetPathRoutePathMatchType pathMatchType;

    private GetPathRouteSetsPathRouteSetPathRoute() {}
    /**
     * @return The name of the target backend set for requests where the incoming URI matches the specified path.  Example: `exampleBackendSet`
     * 
     */
    public String backendSetName() {
        return this.backendSetName;
    }
    /**
     * @return The path string to match against the incoming URI path.
     * *  Path strings are case-insensitive.
     * *  Asterisk (*) wildcards are not supported.
     * *  Regular expressions are not supported.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return The type of matching to apply to incoming URIs.
     * 
     */
    public GetPathRouteSetsPathRouteSetPathRoutePathMatchType pathMatchType() {
        return this.pathMatchType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPathRouteSetsPathRouteSetPathRoute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backendSetName;
        private String path;
        private GetPathRouteSetsPathRouteSetPathRoutePathMatchType pathMatchType;
        public Builder() {}
        public Builder(GetPathRouteSetsPathRouteSetPathRoute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendSetName = defaults.backendSetName;
    	      this.path = defaults.path;
    	      this.pathMatchType = defaults.pathMatchType;
        }

        @CustomType.Setter
        public Builder backendSetName(String backendSetName) {
            if (backendSetName == null) {
              throw new MissingRequiredPropertyException("GetPathRouteSetsPathRouteSetPathRoute", "backendSetName");
            }
            this.backendSetName = backendSetName;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetPathRouteSetsPathRouteSetPathRoute", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder pathMatchType(GetPathRouteSetsPathRouteSetPathRoutePathMatchType pathMatchType) {
            if (pathMatchType == null) {
              throw new MissingRequiredPropertyException("GetPathRouteSetsPathRouteSetPathRoute", "pathMatchType");
            }
            this.pathMatchType = pathMatchType;
            return this;
        }
        public GetPathRouteSetsPathRouteSetPathRoute build() {
            final var _resultValue = new GetPathRouteSetsPathRouteSetPathRoute();
            _resultValue.backendSetName = backendSetName;
            _resultValue.path = path;
            _resultValue.pathMatchType = pathMatchType;
            return _resultValue;
        }
    }
}
