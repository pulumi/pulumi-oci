// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRuleSetItemIpMaxConnection {
    /**
     * @return Each element in the list should be valid IPv4 or IPv6 CIDR Block address. Example: &#39;[&#34;129.213.176.0/24&#34;, &#34;150.136.187.0/24&#34;, &#34;2002::1234:abcd:ffff:c0a8:101/64&#34;]&#39;
     * 
     */
    private List<String> ipAddresses;
    /**
     * @return The maximum number of simultaneous connections that the specified IPs can make to the Listener. IPs without a maxConnections setting can make either defaultMaxConnections simultaneous connections to a listener or, if no defaultMaxConnections is specified, an unlimited number of simultaneous connections to a listener.
     * 
     */
    private Integer maxConnections;

    private GetRuleSetItemIpMaxConnection() {}
    /**
     * @return Each element in the list should be valid IPv4 or IPv6 CIDR Block address. Example: &#39;[&#34;129.213.176.0/24&#34;, &#34;150.136.187.0/24&#34;, &#34;2002::1234:abcd:ffff:c0a8:101/64&#34;]&#39;
     * 
     */
    public List<String> ipAddresses() {
        return this.ipAddresses;
    }
    /**
     * @return The maximum number of simultaneous connections that the specified IPs can make to the Listener. IPs without a maxConnections setting can make either defaultMaxConnections simultaneous connections to a listener or, if no defaultMaxConnections is specified, an unlimited number of simultaneous connections to a listener.
     * 
     */
    public Integer maxConnections() {
        return this.maxConnections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRuleSetItemIpMaxConnection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> ipAddresses;
        private Integer maxConnections;
        public Builder() {}
        public Builder(GetRuleSetItemIpMaxConnection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipAddresses = defaults.ipAddresses;
    	      this.maxConnections = defaults.maxConnections;
        }

        @CustomType.Setter
        public Builder ipAddresses(List<String> ipAddresses) {
            if (ipAddresses == null) {
              throw new MissingRequiredPropertyException("GetRuleSetItemIpMaxConnection", "ipAddresses");
            }
            this.ipAddresses = ipAddresses;
            return this;
        }
        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }
        @CustomType.Setter
        public Builder maxConnections(Integer maxConnections) {
            if (maxConnections == null) {
              throw new MissingRequiredPropertyException("GetRuleSetItemIpMaxConnection", "maxConnections");
            }
            this.maxConnections = maxConnections;
            return this;
        }
        public GetRuleSetItemIpMaxConnection build() {
            final var _resultValue = new GetRuleSetItemIpMaxConnection();
            _resultValue.ipAddresses = ipAddresses;
            _resultValue.maxConnections = maxConnections;
            return _resultValue;
        }
    }
}
