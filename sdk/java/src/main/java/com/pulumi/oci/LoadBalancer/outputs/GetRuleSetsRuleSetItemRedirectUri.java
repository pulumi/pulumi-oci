// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRuleSetsRuleSetItemRedirectUri {
    /**
     * @return The valid domain name (hostname) or IP address to use in the redirect URI.
     * 
     */
    private String host;
    /**
     * @return The HTTP URI path to use in the redirect URI.
     * 
     */
    private String path;
    /**
     * @return The communication port to use in the redirect URI.
     * 
     */
    private Integer port;
    /**
     * @return The HTTP protocol to use in the redirect URI.
     * 
     */
    private String protocol;
    /**
     * @return The query string to use in the redirect URI.
     * 
     */
    private String query;

    private GetRuleSetsRuleSetItemRedirectUri() {}
    /**
     * @return The valid domain name (hostname) or IP address to use in the redirect URI.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return The HTTP URI path to use in the redirect URI.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return The communication port to use in the redirect URI.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The HTTP protocol to use in the redirect URI.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return The query string to use in the redirect URI.
     * 
     */
    public String query() {
        return this.query;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRuleSetsRuleSetItemRedirectUri defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String host;
        private String path;
        private Integer port;
        private String protocol;
        private String query;
        public Builder() {}
        public Builder(GetRuleSetsRuleSetItemRedirectUri defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.path = defaults.path;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.query = defaults.query;
        }

        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("GetRuleSetsRuleSetItemRedirectUri", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetRuleSetsRuleSetItemRedirectUri", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetRuleSetsRuleSetItemRedirectUri", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetRuleSetsRuleSetItemRedirectUri", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            if (query == null) {
              throw new MissingRequiredPropertyException("GetRuleSetsRuleSetItemRedirectUri", "query");
            }
            this.query = query;
            return this;
        }
        public GetRuleSetsRuleSetItemRedirectUri build() {
            final var _resultValue = new GetRuleSetsRuleSetItemRedirectUri();
            _resultValue.host = host;
            _resultValue.path = path;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            _resultValue.query = query;
            return _resultValue;
        }
    }
}
