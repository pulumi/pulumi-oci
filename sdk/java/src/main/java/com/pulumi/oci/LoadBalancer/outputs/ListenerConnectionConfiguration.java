// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ListenerConnectionConfiguration {
    /**
     * @return (Updatable) An array that represents the PPV2 Options that can be enabled on TCP Listeners. Example: [&#34;PP2_TYPE_AUTHORITY&#34;]
     * 
     */
    private @Nullable List<String> backendTcpProxyProtocolOptions;
    /**
     * @return (Updatable) The backend TCP Proxy Protocol version.  Example: `1`
     * 
     */
    private @Nullable Integer backendTcpProxyProtocolVersion;
    /**
     * @return (Updatable) The maximum idle time, in seconds, allowed between two successive receive or two successive send operations between the client and backend servers. A send operation does not reset the timer for receive operations. A receive operation does not reset the timer for send operations.
     * 
     * For more information, see [Connection Configuration](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/connectionreuse.htm#ConnectionConfiguration).
     * 
     * Example: `1200`
     * 
     */
    private String idleTimeoutInSeconds;

    private ListenerConnectionConfiguration() {}
    /**
     * @return (Updatable) An array that represents the PPV2 Options that can be enabled on TCP Listeners. Example: [&#34;PP2_TYPE_AUTHORITY&#34;]
     * 
     */
    public List<String> backendTcpProxyProtocolOptions() {
        return this.backendTcpProxyProtocolOptions == null ? List.of() : this.backendTcpProxyProtocolOptions;
    }
    /**
     * @return (Updatable) The backend TCP Proxy Protocol version.  Example: `1`
     * 
     */
    public Optional<Integer> backendTcpProxyProtocolVersion() {
        return Optional.ofNullable(this.backendTcpProxyProtocolVersion);
    }
    /**
     * @return (Updatable) The maximum idle time, in seconds, allowed between two successive receive or two successive send operations between the client and backend servers. A send operation does not reset the timer for receive operations. A receive operation does not reset the timer for send operations.
     * 
     * For more information, see [Connection Configuration](https://docs.cloud.oracle.com/iaas/Content/Balance/Reference/connectionreuse.htm#ConnectionConfiguration).
     * 
     * Example: `1200`
     * 
     */
    public String idleTimeoutInSeconds() {
        return this.idleTimeoutInSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListenerConnectionConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> backendTcpProxyProtocolOptions;
        private @Nullable Integer backendTcpProxyProtocolVersion;
        private String idleTimeoutInSeconds;
        public Builder() {}
        public Builder(ListenerConnectionConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendTcpProxyProtocolOptions = defaults.backendTcpProxyProtocolOptions;
    	      this.backendTcpProxyProtocolVersion = defaults.backendTcpProxyProtocolVersion;
    	      this.idleTimeoutInSeconds = defaults.idleTimeoutInSeconds;
        }

        @CustomType.Setter
        public Builder backendTcpProxyProtocolOptions(@Nullable List<String> backendTcpProxyProtocolOptions) {

            this.backendTcpProxyProtocolOptions = backendTcpProxyProtocolOptions;
            return this;
        }
        public Builder backendTcpProxyProtocolOptions(String... backendTcpProxyProtocolOptions) {
            return backendTcpProxyProtocolOptions(List.of(backendTcpProxyProtocolOptions));
        }
        @CustomType.Setter
        public Builder backendTcpProxyProtocolVersion(@Nullable Integer backendTcpProxyProtocolVersion) {

            this.backendTcpProxyProtocolVersion = backendTcpProxyProtocolVersion;
            return this;
        }
        @CustomType.Setter
        public Builder idleTimeoutInSeconds(String idleTimeoutInSeconds) {
            if (idleTimeoutInSeconds == null) {
              throw new MissingRequiredPropertyException("ListenerConnectionConfiguration", "idleTimeoutInSeconds");
            }
            this.idleTimeoutInSeconds = idleTimeoutInSeconds;
            return this;
        }
        public ListenerConnectionConfiguration build() {
            final var _resultValue = new ListenerConnectionConfiguration();
            _resultValue.backendTcpProxyProtocolOptions = backendTcpProxyProtocolOptions;
            _resultValue.backendTcpProxyProtocolVersion = backendTcpProxyProtocolVersion;
            _resultValue.idleTimeoutInSeconds = idleTimeoutInSeconds;
            return _resultValue;
        }
    }
}
