// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.LogAnalytics.LogAnalyticsEntityArgs;
import com.pulumi.oci.LogAnalytics.inputs.LogAnalyticsEntityState;
import com.pulumi.oci.LogAnalytics.outputs.LogAnalyticsEntityMetadata;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
 * 
 * Create a new log analytics entity.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.LogAnalytics.LogAnalyticsEntity;
 * import com.pulumi.oci.LogAnalytics.LogAnalyticsEntityArgs;
 * import com.pulumi.oci.LogAnalytics.inputs.LogAnalyticsEntityMetadataArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testLogAnalyticsEntity = new LogAnalyticsEntity("testLogAnalyticsEntity", LogAnalyticsEntityArgs.builder()
 *             .compartmentId(compartmentId)
 *             .entityTypeName(logAnalyticsEntityEntityTypeName)
 *             .name(logAnalyticsEntityName)
 *             .namespace(logAnalyticsEntityNamespace)
 *             .cloudResourceId(testCloudResource.id())
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .freeformTags(Map.of("bar-key", "value"))
 *             .hostname(logAnalyticsEntityHostname)
 *             .managementAgentId(testManagementAgent.id())
 *             .metadata(LogAnalyticsEntityMetadataArgs.builder()
 *                 .items(LogAnalyticsEntityMetadataItemArgs.builder()
 *                     .name(logAnalyticsEntityMetadataItemsName)
 *                     .type(logAnalyticsEntityMetadataItemsType)
 *                     .value(logAnalyticsEntityMetadataItemsValue)
 *                     .build())
 *                 .build())
 *             .properties(logAnalyticsEntityProperties)
 *             .sourceId(testSource.id())
 *             .timeLastDiscovered(logAnalyticsEntityTimeLastDiscovered)
 *             .timezoneRegion(logAnalyticsEntityTimezoneRegion)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * LogAnalyticsEntities can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity test_log_analytics_entity &#34;namespaces/{namespaceName}/logAnalyticsEntities/{logAnalyticsEntityId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity")
public class LogAnalyticsEntity extends com.pulumi.resources.CustomResource {
    /**
     * The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
     * 
     */
    @Export(name="areLogsCollected", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> areLogsCollected;

    /**
     * @return The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
     * 
     */
    public Output<Boolean> areLogsCollected() {
        return this.areLogsCollected;
    }
    /**
     * The count of associated log sources for a given log analytics entity.
     * 
     */
    @Export(name="associatedSourcesCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> associatedSourcesCount;

    /**
     * @return The count of associated log sources for a given log analytics entity.
     * 
     */
    public Output<Integer> associatedSourcesCount() {
        return this.associatedSourcesCount;
    }
    /**
     * The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
     * 
     */
    @Export(name="cloudResourceId", refs={String.class}, tree="[0]")
    private Output<String> cloudResourceId;

    /**
     * @return The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
     * 
     */
    public Output<String> cloudResourceId() {
        return this.cloudResourceId;
    }
    /**
     * (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * Internal name for the log analytics entity type.
     * 
     */
    @Export(name="entityTypeInternalName", refs={String.class}, tree="[0]")
    private Output<String> entityTypeInternalName;

    /**
     * @return Internal name for the log analytics entity type.
     * 
     */
    public Output<String> entityTypeInternalName() {
        return this.entityTypeInternalName;
    }
    /**
     * Log analytics entity type name.
     * 
     */
    @Export(name="entityTypeName", refs={String.class}, tree="[0]")
    private Output<String> entityTypeName;

    /**
     * @return Log analytics entity type name.
     * 
     */
    public Output<String> entityTypeName() {
        return this.entityTypeName;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
     * 
     */
    @Export(name="hostname", refs={String.class}, tree="[0]")
    private Output<String> hostname;

    /**
     * @return (Updatable) The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * Management agent (management-agents resource kind) compartment OCID
     * 
     */
    @Export(name="managementAgentCompartmentId", refs={String.class}, tree="[0]")
    private Output<String> managementAgentCompartmentId;

    /**
     * @return Management agent (management-agents resource kind) compartment OCID
     * 
     */
    public Output<String> managementAgentCompartmentId() {
        return this.managementAgentCompartmentId;
    }
    /**
     * Management agent (management-agents resource kind) display name
     * 
     */
    @Export(name="managementAgentDisplayName", refs={String.class}, tree="[0]")
    private Output<String> managementAgentDisplayName;

    /**
     * @return Management agent (management-agents resource kind) display name
     * 
     */
    public Output<String> managementAgentDisplayName() {
        return this.managementAgentDisplayName;
    }
    /**
     * (Updatable) The OCID of the Management Agent.
     * 
     */
    @Export(name="managementAgentId", refs={String.class}, tree="[0]")
    private Output<String> managementAgentId;

    /**
     * @return (Updatable) The OCID of the Management Agent.
     * 
     */
    public Output<String> managementAgentId() {
        return this.managementAgentId;
    }
    /**
     * (Updatable) Details of Entity Metadata.
     * 
     */
    @Export(name="metadata", refs={LogAnalyticsEntityMetadata.class}, tree="[0]")
    private Output<LogAnalyticsEntityMetadata> metadata;

    /**
     * @return (Updatable) Details of Entity Metadata.
     * 
     */
    public Output<LogAnalyticsEntityMetadata> metadata() {
        return this.metadata;
    }
    /**
     * (Updatable) Log analytics entity name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return (Updatable) Log analytics entity name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Logging Analytics namespace used for the request.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output<String> namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }
    /**
     * (Updatable) The name/value pairs for parameter values to be used in file patterns specified in log sources.
     * 
     */
    @Export(name="properties", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> properties;

    /**
     * @return (Updatable) The name/value pairs for parameter values to be used in file patterns specified in log sources.
     * 
     */
    public Output<Map<String,String>> properties() {
        return this.properties;
    }
    /**
     * This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
     * 
     */
    @Export(name="sourceId", refs={String.class}, tree="[0]")
    private Output<String> sourceId;

    /**
     * @return This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
     * 
     */
    public Output<String> sourceId() {
        return this.sourceId;
    }
    /**
     * The current state of the log analytics entity.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the log analytics entity.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The date and time the resource was created, in the format defined by RFC3339.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the resource was created, in the format defined by RFC3339.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * (Updatable) The date and time the resource was last discovered, in the format defined by RFC3339.
     * 
     */
    @Export(name="timeLastDiscovered", refs={String.class}, tree="[0]")
    private Output<String> timeLastDiscovered;

    /**
     * @return (Updatable) The date and time the resource was last discovered, in the format defined by RFC3339.
     * 
     */
    public Output<String> timeLastDiscovered() {
        return this.timeLastDiscovered;
    }
    /**
     * The date and time the resource was last updated, in the format defined by RFC3339.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The date and time the resource was last updated, in the format defined by RFC3339.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * (Updatable) The timezone region of the log analytics entity.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="timezoneRegion", refs={String.class}, tree="[0]")
    private Output<String> timezoneRegion;

    /**
     * @return (Updatable) The timezone region of the log analytics entity.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> timezoneRegion() {
        return this.timezoneRegion;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LogAnalyticsEntity(java.lang.String name) {
        this(name, LogAnalyticsEntityArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LogAnalyticsEntity(java.lang.String name, LogAnalyticsEntityArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LogAnalyticsEntity(java.lang.String name, LogAnalyticsEntityArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private LogAnalyticsEntity(java.lang.String name, Output<java.lang.String> id, @Nullable LogAnalyticsEntityState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:LogAnalytics/logAnalyticsEntity:LogAnalyticsEntity", name, state, makeResourceOptions(options, id), false);
    }

    private static LogAnalyticsEntityArgs makeArgs(LogAnalyticsEntityArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LogAnalyticsEntityArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LogAnalyticsEntity get(java.lang.String name, Output<java.lang.String> id, @Nullable LogAnalyticsEntityState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LogAnalyticsEntity(name, id, state, options);
    }
}
