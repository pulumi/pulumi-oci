// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferencePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesPlainArgs;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsCategoriesListResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsCategoryResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntitiesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntitiesSummaryResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntityResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntityTopologyResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsLogGroupResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsLogGroupsResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsLogGroupsSummaryResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsObjectCollectionRuleResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsObjectCollectionRulesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsPreferenceResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsResourceCategoriesListResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsUnprocessedDataBucketResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogSetsCountResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceEffectivePropertiesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceIngestTimeRuleResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceIngestTimeRulesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespacePropertiesMetadataResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceRulesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceRulesSummaryResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceScheduledTaskResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceScheduledTasksResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceStorageEncryptionKeyInfoResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceStorageOverlappingRecallsResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceStorageRecallCountResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceStorageRecalledDataSizeResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespacesResult;
import com.pulumi.oci.Utilities;
import java.util.concurrent.CompletableFuture;

public final class LogAnalyticsFunctions {
    /**
     * This data source provides details about Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of categories, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as category name or description.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategoriesList = LogAnalyticsFunctions.getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs.builder()
     *             .namespace(var_.log_analytics_categories_list_namespace())
     *             .categoryDisplayText(var_.log_analytics_categories_list_category_display_text())
     *             .categoryType(var_.log_analytics_categories_list_category_type())
     *             .name(var_.log_analytics_categories_list_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsCategoriesListResult> getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs args) {
        return getLogAnalyticsCategoriesList(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of categories, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as category name or description.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategoriesList = LogAnalyticsFunctions.getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs.builder()
     *             .namespace(var_.log_analytics_categories_list_namespace())
     *             .categoryDisplayText(var_.log_analytics_categories_list_category_display_text())
     *             .categoryType(var_.log_analytics_categories_list_category_type())
     *             .name(var_.log_analytics_categories_list_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsCategoriesListResult> getLogAnalyticsCategoriesListPlain(GetLogAnalyticsCategoriesListPlainArgs args) {
        return getLogAnalyticsCategoriesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of categories, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as category name or description.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategoriesList = LogAnalyticsFunctions.getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs.builder()
     *             .namespace(var_.log_analytics_categories_list_namespace())
     *             .categoryDisplayText(var_.log_analytics_categories_list_category_display_text())
     *             .categoryType(var_.log_analytics_categories_list_category_type())
     *             .name(var_.log_analytics_categories_list_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsCategoriesListResult> getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsCategoriesList:getLogAnalyticsCategoriesList", TypeShape.of(GetLogAnalyticsCategoriesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of categories, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as category name or description.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategoriesList = LogAnalyticsFunctions.getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs.builder()
     *             .namespace(var_.log_analytics_categories_list_namespace())
     *             .categoryDisplayText(var_.log_analytics_categories_list_category_display_text())
     *             .categoryType(var_.log_analytics_categories_list_category_type())
     *             .name(var_.log_analytics_categories_list_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsCategoriesListResult> getLogAnalyticsCategoriesListPlain(GetLogAnalyticsCategoriesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsCategoriesList:getLogAnalyticsCategoriesList", TypeShape.of(GetLogAnalyticsCategoriesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Category resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the category with the specified name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategory = LogAnalyticsFunctions.getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs.builder()
     *             .name(var_.log_analytics_category_name())
     *             .namespace(var_.log_analytics_category_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsCategoryResult> getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs args) {
        return getLogAnalyticsCategory(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Category resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the category with the specified name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategory = LogAnalyticsFunctions.getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs.builder()
     *             .name(var_.log_analytics_category_name())
     *             .namespace(var_.log_analytics_category_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsCategoryResult> getLogAnalyticsCategoryPlain(GetLogAnalyticsCategoryPlainArgs args) {
        return getLogAnalyticsCategoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Category resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the category with the specified name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategory = LogAnalyticsFunctions.getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs.builder()
     *             .name(var_.log_analytics_category_name())
     *             .namespace(var_.log_analytics_category_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsCategoryResult> getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsCategory:getLogAnalyticsCategory", TypeShape.of(GetLogAnalyticsCategoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Category resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the category with the specified name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategory = LogAnalyticsFunctions.getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs.builder()
     *             .name(var_.log_analytics_category_name())
     *             .namespace(var_.log_analytics_category_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsCategoryResult> getLogAnalyticsCategoryPlain(GetLogAnalyticsCategoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsCategory:getLogAnalyticsCategory", TypeShape.of(GetLogAnalyticsCategoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entities.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntities = LogAnalyticsFunctions.getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_entity_namespace())
     *             .cloudResourceId(oci_log_analytics_cloud_resource.test_cloud_resource().id())
     *             .entityTypeNames(var_.log_analytics_entity_entity_type_name())
     *             .hostname(var_.log_analytics_entity_hostname())
     *             .hostnameContains(var_.log_analytics_entity_hostname_contains())
     *             .isManagementAgentIdNull(var_.log_analytics_entity_is_management_agent_id_null())
     *             .lifecycleDetailsContains(var_.log_analytics_entity_lifecycle_details_contains())
     *             .name(var_.log_analytics_entity_name())
     *             .nameContains(var_.log_analytics_entity_name_contains())
     *             .sourceId(oci_log_analytics_source.test_source().id())
     *             .state(var_.log_analytics_entity_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsEntitiesResult> getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs args) {
        return getLogAnalyticsEntities(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entities.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntities = LogAnalyticsFunctions.getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_entity_namespace())
     *             .cloudResourceId(oci_log_analytics_cloud_resource.test_cloud_resource().id())
     *             .entityTypeNames(var_.log_analytics_entity_entity_type_name())
     *             .hostname(var_.log_analytics_entity_hostname())
     *             .hostnameContains(var_.log_analytics_entity_hostname_contains())
     *             .isManagementAgentIdNull(var_.log_analytics_entity_is_management_agent_id_null())
     *             .lifecycleDetailsContains(var_.log_analytics_entity_lifecycle_details_contains())
     *             .name(var_.log_analytics_entity_name())
     *             .nameContains(var_.log_analytics_entity_name_contains())
     *             .sourceId(oci_log_analytics_source.test_source().id())
     *             .state(var_.log_analytics_entity_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntitiesResult> getLogAnalyticsEntitiesPlain(GetLogAnalyticsEntitiesPlainArgs args) {
        return getLogAnalyticsEntitiesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entities.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntities = LogAnalyticsFunctions.getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_entity_namespace())
     *             .cloudResourceId(oci_log_analytics_cloud_resource.test_cloud_resource().id())
     *             .entityTypeNames(var_.log_analytics_entity_entity_type_name())
     *             .hostname(var_.log_analytics_entity_hostname())
     *             .hostnameContains(var_.log_analytics_entity_hostname_contains())
     *             .isManagementAgentIdNull(var_.log_analytics_entity_is_management_agent_id_null())
     *             .lifecycleDetailsContains(var_.log_analytics_entity_lifecycle_details_contains())
     *             .name(var_.log_analytics_entity_name())
     *             .nameContains(var_.log_analytics_entity_name_contains())
     *             .sourceId(oci_log_analytics_source.test_source().id())
     *             .state(var_.log_analytics_entity_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsEntitiesResult> getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntities:getLogAnalyticsEntities", TypeShape.of(GetLogAnalyticsEntitiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entities.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntities = LogAnalyticsFunctions.getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_entity_namespace())
     *             .cloudResourceId(oci_log_analytics_cloud_resource.test_cloud_resource().id())
     *             .entityTypeNames(var_.log_analytics_entity_entity_type_name())
     *             .hostname(var_.log_analytics_entity_hostname())
     *             .hostnameContains(var_.log_analytics_entity_hostname_contains())
     *             .isManagementAgentIdNull(var_.log_analytics_entity_is_management_agent_id_null())
     *             .lifecycleDetailsContains(var_.log_analytics_entity_lifecycle_details_contains())
     *             .name(var_.log_analytics_entity_name())
     *             .nameContains(var_.log_analytics_entity_name_contains())
     *             .sourceId(oci_log_analytics_source.test_source().id())
     *             .state(var_.log_analytics_entity_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntitiesResult> getLogAnalyticsEntitiesPlain(GetLogAnalyticsEntitiesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsEntities:getLogAnalyticsEntities", TypeShape.of(GetLogAnalyticsEntitiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entities Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns log analytics entities count summary report.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntitiesSummary = LogAnalyticsFunctions.getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_entities_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsEntitiesSummaryResult> getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs args) {
        return getLogAnalyticsEntitiesSummary(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entities Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns log analytics entities count summary report.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntitiesSummary = LogAnalyticsFunctions.getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_entities_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntitiesSummaryResult> getLogAnalyticsEntitiesSummaryPlain(GetLogAnalyticsEntitiesSummaryPlainArgs args) {
        return getLogAnalyticsEntitiesSummaryPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entities Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns log analytics entities count summary report.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntitiesSummary = LogAnalyticsFunctions.getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_entities_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsEntitiesSummaryResult> getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntitiesSummary:getLogAnalyticsEntitiesSummary", TypeShape.of(GetLogAnalyticsEntitiesSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entities Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns log analytics entities count summary report.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntitiesSummary = LogAnalyticsFunctions.getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_entities_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntitiesSummaryResult> getLogAnalyticsEntitiesSummaryPlain(GetLogAnalyticsEntitiesSummaryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsEntitiesSummary:getLogAnalyticsEntitiesSummary", TypeShape.of(GetLogAnalyticsEntitiesSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity with the given id.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntity = LogAnalyticsFunctions.getLogAnalyticsEntity(GetLogAnalyticsEntityArgs.builder()
     *             .logAnalyticsEntityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .namespace(var_.log_analytics_entity_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsEntityResult> getLogAnalyticsEntity(GetLogAnalyticsEntityArgs args) {
        return getLogAnalyticsEntity(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity with the given id.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntity = LogAnalyticsFunctions.getLogAnalyticsEntity(GetLogAnalyticsEntityArgs.builder()
     *             .logAnalyticsEntityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .namespace(var_.log_analytics_entity_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityResult> getLogAnalyticsEntityPlain(GetLogAnalyticsEntityPlainArgs args) {
        return getLogAnalyticsEntityPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity with the given id.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntity = LogAnalyticsFunctions.getLogAnalyticsEntity(GetLogAnalyticsEntityArgs.builder()
     *             .logAnalyticsEntityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .namespace(var_.log_analytics_entity_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsEntityResult> getLogAnalyticsEntity(GetLogAnalyticsEntityArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntity:getLogAnalyticsEntity", TypeShape.of(GetLogAnalyticsEntityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity with the given id.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntity = LogAnalyticsFunctions.getLogAnalyticsEntity(GetLogAnalyticsEntityArgs.builder()
     *             .logAnalyticsEntityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .namespace(var_.log_analytics_entity_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityResult> getLogAnalyticsEntityPlain(GetLogAnalyticsEntityPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsEntity:getLogAnalyticsEntity", TypeShape.of(GetLogAnalyticsEntityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTopology = LogAnalyticsFunctions.getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs.builder()
     *             .logAnalyticsEntityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .namespace(var_.log_analytics_entity_topology_namespace())
     *             .state(var_.log_analytics_entity_topology_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsEntityTopologyResult> getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs args) {
        return getLogAnalyticsEntityTopology(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTopology = LogAnalyticsFunctions.getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs.builder()
     *             .logAnalyticsEntityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .namespace(var_.log_analytics_entity_topology_namespace())
     *             .state(var_.log_analytics_entity_topology_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityTopologyResult> getLogAnalyticsEntityTopologyPlain(GetLogAnalyticsEntityTopologyPlainArgs args) {
        return getLogAnalyticsEntityTopologyPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTopology = LogAnalyticsFunctions.getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs.builder()
     *             .logAnalyticsEntityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .namespace(var_.log_analytics_entity_topology_namespace())
     *             .state(var_.log_analytics_entity_topology_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsEntityTopologyResult> getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntityTopology:getLogAnalyticsEntityTopology", TypeShape.of(GetLogAnalyticsEntityTopologyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTopology = LogAnalyticsFunctions.getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs.builder()
     *             .logAnalyticsEntityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .namespace(var_.log_analytics_entity_topology_namespace())
     *             .state(var_.log_analytics_entity_topology_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityTopologyResult> getLogAnalyticsEntityTopologyPlain(GetLogAnalyticsEntityTopologyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsEntityTopology:getLogAnalyticsEntityTopology", TypeShape.of(GetLogAnalyticsEntityTopologyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Log Group resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified log group such as display name, description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroup = LogAnalyticsFunctions.getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs.builder()
     *             .logAnalyticsLogGroupId(oci_log_analytics_log_analytics_log_group.test_log_analytics_log_group().id())
     *             .namespace(var_.log_analytics_log_group_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsLogGroupResult> getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs args) {
        return getLogAnalyticsLogGroup(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Log Group resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified log group such as display name, description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroup = LogAnalyticsFunctions.getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs.builder()
     *             .logAnalyticsLogGroupId(oci_log_analytics_log_analytics_log_group.test_log_analytics_log_group().id())
     *             .namespace(var_.log_analytics_log_group_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupResult> getLogAnalyticsLogGroupPlain(GetLogAnalyticsLogGroupPlainArgs args) {
        return getLogAnalyticsLogGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Log Group resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified log group such as display name, description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroup = LogAnalyticsFunctions.getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs.builder()
     *             .logAnalyticsLogGroupId(oci_log_analytics_log_analytics_log_group.test_log_analytics_log_group().id())
     *             .namespace(var_.log_analytics_log_group_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsLogGroupResult> getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsLogGroup:getLogAnalyticsLogGroup", TypeShape.of(GetLogAnalyticsLogGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Log Group resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified log group such as display name, description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroup = LogAnalyticsFunctions.getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs.builder()
     *             .logAnalyticsLogGroupId(oci_log_analytics_log_analytics_log_group.test_log_analytics_log_group().id())
     *             .namespace(var_.log_analytics_log_group_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupResult> getLogAnalyticsLogGroupPlain(GetLogAnalyticsLogGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsLogGroup:getLogAnalyticsLogGroup", TypeShape.of(GetLogAnalyticsLogGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Log Groups in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of log groups in a compartment. You may limit the number of log groups, provide sorting options, and filter the results by specifying a display name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroups = LogAnalyticsFunctions.getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_log_group_namespace())
     *             .displayName(var_.log_analytics_log_group_display_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsLogGroupsResult> getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs args) {
        return getLogAnalyticsLogGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Log Groups in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of log groups in a compartment. You may limit the number of log groups, provide sorting options, and filter the results by specifying a display name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroups = LogAnalyticsFunctions.getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_log_group_namespace())
     *             .displayName(var_.log_analytics_log_group_display_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupsResult> getLogAnalyticsLogGroupsPlain(GetLogAnalyticsLogGroupsPlainArgs args) {
        return getLogAnalyticsLogGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Log Groups in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of log groups in a compartment. You may limit the number of log groups, provide sorting options, and filter the results by specifying a display name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroups = LogAnalyticsFunctions.getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_log_group_namespace())
     *             .displayName(var_.log_analytics_log_group_display_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsLogGroupsResult> getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsLogGroups:getLogAnalyticsLogGroups", TypeShape.of(GetLogAnalyticsLogGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Log Groups in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of log groups in a compartment. You may limit the number of log groups, provide sorting options, and filter the results by specifying a display name.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroups = LogAnalyticsFunctions.getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_log_group_namespace())
     *             .displayName(var_.log_analytics_log_group_display_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupsResult> getLogAnalyticsLogGroupsPlain(GetLogAnalyticsLogGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsLogGroups:getLogAnalyticsLogGroups", TypeShape.of(GetLogAnalyticsLogGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of log groups in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroupsSummary = LogAnalyticsFunctions.getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_log_groups_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsLogGroupsSummaryResult> getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs args) {
        return getLogAnalyticsLogGroupsSummary(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of log groups in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroupsSummary = LogAnalyticsFunctions.getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_log_groups_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupsSummaryResult> getLogAnalyticsLogGroupsSummaryPlain(GetLogAnalyticsLogGroupsSummaryPlainArgs args) {
        return getLogAnalyticsLogGroupsSummaryPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of log groups in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroupsSummary = LogAnalyticsFunctions.getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_log_groups_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsLogGroupsSummaryResult> getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsLogGroupsSummary:getLogAnalyticsLogGroupsSummary", TypeShape.of(GetLogAnalyticsLogGroupsSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of log groups in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroupsSummary = LogAnalyticsFunctions.getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_log_groups_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupsSummaryResult> getLogAnalyticsLogGroupsSummaryPlain(GetLogAnalyticsLogGroupsSummaryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsLogGroupsSummary:getLogAnalyticsLogGroupsSummary", TypeShape.of(GetLogAnalyticsLogGroupsSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets a configured object storage based collection rule by given id
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRule = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs.builder()
     *             .logAnalyticsObjectCollectionRuleId(oci_log_analytics_log_analytics_object_collection_rule.test_log_analytics_object_collection_rule().id())
     *             .namespace(var_.log_analytics_object_collection_rule_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsObjectCollectionRuleResult> getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs args) {
        return getLogAnalyticsObjectCollectionRule(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets a configured object storage based collection rule by given id
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRule = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs.builder()
     *             .logAnalyticsObjectCollectionRuleId(oci_log_analytics_log_analytics_object_collection_rule.test_log_analytics_object_collection_rule().id())
     *             .namespace(var_.log_analytics_object_collection_rule_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsObjectCollectionRuleResult> getLogAnalyticsObjectCollectionRulePlain(GetLogAnalyticsObjectCollectionRulePlainArgs args) {
        return getLogAnalyticsObjectCollectionRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets a configured object storage based collection rule by given id
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRule = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs.builder()
     *             .logAnalyticsObjectCollectionRuleId(oci_log_analytics_log_analytics_object_collection_rule.test_log_analytics_object_collection_rule().id())
     *             .namespace(var_.log_analytics_object_collection_rule_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsObjectCollectionRuleResult> getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsObjectCollectionRule:getLogAnalyticsObjectCollectionRule", TypeShape.of(GetLogAnalyticsObjectCollectionRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets a configured object storage based collection rule by given id
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRule = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs.builder()
     *             .logAnalyticsObjectCollectionRuleId(oci_log_analytics_log_analytics_object_collection_rule.test_log_analytics_object_collection_rule().id())
     *             .namespace(var_.log_analytics_object_collection_rule_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsObjectCollectionRuleResult> getLogAnalyticsObjectCollectionRulePlain(GetLogAnalyticsObjectCollectionRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsObjectCollectionRule:getLogAnalyticsObjectCollectionRule", TypeShape.of(GetLogAnalyticsObjectCollectionRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Object Collection Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets list of configuration details of Object Storage based collection rules.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRules = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_object_collection_rule_namespace())
     *             .name(var_.log_analytics_object_collection_rule_name())
     *             .state(var_.log_analytics_object_collection_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsObjectCollectionRulesResult> getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs args) {
        return getLogAnalyticsObjectCollectionRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Object Collection Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets list of configuration details of Object Storage based collection rules.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRules = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_object_collection_rule_namespace())
     *             .name(var_.log_analytics_object_collection_rule_name())
     *             .state(var_.log_analytics_object_collection_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsObjectCollectionRulesResult> getLogAnalyticsObjectCollectionRulesPlain(GetLogAnalyticsObjectCollectionRulesPlainArgs args) {
        return getLogAnalyticsObjectCollectionRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Object Collection Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets list of configuration details of Object Storage based collection rules.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRules = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_object_collection_rule_namespace())
     *             .name(var_.log_analytics_object_collection_rule_name())
     *             .state(var_.log_analytics_object_collection_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsObjectCollectionRulesResult> getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsObjectCollectionRules:getLogAnalyticsObjectCollectionRules", TypeShape.of(GetLogAnalyticsObjectCollectionRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Object Collection Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets list of configuration details of Object Storage based collection rules.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRules = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.log_analytics_object_collection_rule_namespace())
     *             .name(var_.log_analytics_object_collection_rule_name())
     *             .state(var_.log_analytics_object_collection_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsObjectCollectionRulesResult> getLogAnalyticsObjectCollectionRulesPlain(GetLogAnalyticsObjectCollectionRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsObjectCollectionRules:getLogAnalyticsObjectCollectionRules", TypeShape.of(GetLogAnalyticsObjectCollectionRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsPreference = LogAnalyticsFunctions.getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs.builder()
     *             .namespace(var_.log_analytics_preference_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsPreferenceResult> getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs args) {
        return getLogAnalyticsPreference(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsPreference = LogAnalyticsFunctions.getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs.builder()
     *             .namespace(var_.log_analytics_preference_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsPreferenceResult> getLogAnalyticsPreferencePlain(GetLogAnalyticsPreferencePlainArgs args) {
        return getLogAnalyticsPreferencePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsPreference = LogAnalyticsFunctions.getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs.builder()
     *             .namespace(var_.log_analytics_preference_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsPreferenceResult> getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsPreference:getLogAnalyticsPreference", TypeShape.of(GetLogAnalyticsPreferenceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsPreference = LogAnalyticsFunctions.getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs.builder()
     *             .namespace(var_.log_analytics_preference_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsPreferenceResult> getLogAnalyticsPreferencePlain(GetLogAnalyticsPreferencePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsPreference:getLogAnalyticsPreference", TypeShape.of(GetLogAnalyticsPreferenceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of resources and their category assignments.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsResourceCategoriesList = LogAnalyticsFunctions.getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs.builder()
     *             .namespace(var_.log_analytics_resource_categories_list_namespace())
     *             .resourceIds(var_.log_analytics_resource_categories_list_resource_ids())
     *             .resourceTypes(var_.log_analytics_resource_categories_list_resource_types())
     *             .resourceCategories(var_.log_analytics_resource_categories_list_resource_categories())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsResourceCategoriesListResult> getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs args) {
        return getLogAnalyticsResourceCategoriesList(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of resources and their category assignments.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsResourceCategoriesList = LogAnalyticsFunctions.getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs.builder()
     *             .namespace(var_.log_analytics_resource_categories_list_namespace())
     *             .resourceIds(var_.log_analytics_resource_categories_list_resource_ids())
     *             .resourceTypes(var_.log_analytics_resource_categories_list_resource_types())
     *             .resourceCategories(var_.log_analytics_resource_categories_list_resource_categories())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsResourceCategoriesListResult> getLogAnalyticsResourceCategoriesListPlain(GetLogAnalyticsResourceCategoriesListPlainArgs args) {
        return getLogAnalyticsResourceCategoriesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of resources and their category assignments.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsResourceCategoriesList = LogAnalyticsFunctions.getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs.builder()
     *             .namespace(var_.log_analytics_resource_categories_list_namespace())
     *             .resourceIds(var_.log_analytics_resource_categories_list_resource_ids())
     *             .resourceTypes(var_.log_analytics_resource_categories_list_resource_types())
     *             .resourceCategories(var_.log_analytics_resource_categories_list_resource_categories())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsResourceCategoriesListResult> getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", TypeShape.of(GetLogAnalyticsResourceCategoriesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of resources and their category assignments.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsResourceCategoriesList = LogAnalyticsFunctions.getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs.builder()
     *             .namespace(var_.log_analytics_resource_categories_list_namespace())
     *             .resourceIds(var_.log_analytics_resource_categories_list_resource_ids())
     *             .resourceTypes(var_.log_analytics_resource_categories_list_resource_types())
     *             .resourceCategories(var_.log_analytics_resource_categories_list_resource_categories())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsResourceCategoriesListResult> getLogAnalyticsResourceCategoriesListPlain(GetLogAnalyticsResourceCategoriesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", TypeShape.of(GetLogAnalyticsResourceCategoriesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Unprocessed Data Bucket resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API retrieves details of the configured bucket that stores unprocessed payloads.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsUnprocessedDataBucket = LogAnalyticsFunctions.getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs.builder()
     *             .namespace(var_.log_analytics_unprocessed_data_bucket_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsUnprocessedDataBucketResult> getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs args) {
        return getLogAnalyticsUnprocessedDataBucket(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Unprocessed Data Bucket resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API retrieves details of the configured bucket that stores unprocessed payloads.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsUnprocessedDataBucket = LogAnalyticsFunctions.getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs.builder()
     *             .namespace(var_.log_analytics_unprocessed_data_bucket_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsUnprocessedDataBucketResult> getLogAnalyticsUnprocessedDataBucketPlain(GetLogAnalyticsUnprocessedDataBucketPlainArgs args) {
        return getLogAnalyticsUnprocessedDataBucketPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Unprocessed Data Bucket resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API retrieves details of the configured bucket that stores unprocessed payloads.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsUnprocessedDataBucket = LogAnalyticsFunctions.getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs.builder()
     *             .namespace(var_.log_analytics_unprocessed_data_bucket_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogAnalyticsUnprocessedDataBucketResult> getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsUnprocessedDataBucket:getLogAnalyticsUnprocessedDataBucket", TypeShape.of(GetLogAnalyticsUnprocessedDataBucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Unprocessed Data Bucket resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API retrieves details of the configured bucket that stores unprocessed payloads.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsUnprocessedDataBucket = LogAnalyticsFunctions.getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs.builder()
     *             .namespace(var_.log_analytics_unprocessed_data_bucket_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogAnalyticsUnprocessedDataBucketResult> getLogAnalyticsUnprocessedDataBucketPlain(GetLogAnalyticsUnprocessedDataBucketPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsUnprocessedDataBucket:getLogAnalyticsUnprocessedDataBucket", TypeShape.of(GetLogAnalyticsUnprocessedDataBucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Sets Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the count of distinct log sets.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogSetsCount = LogAnalyticsFunctions.getLogSetsCount(GetLogSetsCountArgs.builder()
     *             .namespace(var_.log_sets_count_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogSetsCountResult> getLogSetsCount(GetLogSetsCountArgs args) {
        return getLogSetsCount(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Sets Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the count of distinct log sets.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogSetsCount = LogAnalyticsFunctions.getLogSetsCount(GetLogSetsCountArgs.builder()
     *             .namespace(var_.log_sets_count_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogSetsCountResult> getLogSetsCountPlain(GetLogSetsCountPlainArgs args) {
        return getLogSetsCountPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Sets Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the count of distinct log sets.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogSetsCount = LogAnalyticsFunctions.getLogSetsCount(GetLogSetsCountArgs.builder()
     *             .namespace(var_.log_sets_count_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetLogSetsCountResult> getLogSetsCount(GetLogSetsCountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogSetsCount:getLogSetsCount", TypeShape.of(GetLogSetsCountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Sets Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the count of distinct log sets.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogSetsCount = LogAnalyticsFunctions.getLogSetsCount(GetLogSetsCountArgs.builder()
     *             .namespace(var_.log_sets_count_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetLogSetsCountResult> getLogSetsCountPlain(GetLogSetsCountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogSetsCount:getLogSetsCount", TypeShape.of(GetLogSetsCountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespace = LogAnalyticsFunctions.getNamespace(GetNamespaceArgs.builder()
     *             .namespace(var_.namespace_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceResult> getNamespace(GetNamespaceArgs args) {
        return getNamespace(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespace = LogAnalyticsFunctions.getNamespace(GetNamespaceArgs.builder()
     *             .namespace(var_.namespace_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceResult> getNamespacePlain(GetNamespacePlainArgs args) {
        return getNamespacePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespace = LogAnalyticsFunctions.getNamespace(GetNamespaceArgs.builder()
     *             .namespace(var_.namespace_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceResult> getNamespace(GetNamespaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespace:getNamespace", TypeShape.of(GetNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespace = LogAnalyticsFunctions.getNamespace(GetNamespaceArgs.builder()
     *             .namespace(var_.namespace_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceResult> getNamespacePlain(GetNamespacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespace:getNamespace", TypeShape.of(GetNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Effective Properties in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of effective properties for the specified resource.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceEffectiveProperties = LogAnalyticsFunctions.getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs.builder()
     *             .namespace(var_.namespace_effective_property_namespace())
     *             .agentId(oci_cloud_bridge_agent.test_agent().id())
     *             .entityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .isIncludePatterns(var_.namespace_effective_property_is_include_patterns())
     *             .name(var_.namespace_effective_property_name())
     *             .patternId(oci_log_analytics_pattern.test_pattern().id())
     *             .sourceName(var_.namespace_effective_property_source_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceEffectivePropertiesResult> getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs args) {
        return getNamespaceEffectiveProperties(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Effective Properties in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of effective properties for the specified resource.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceEffectiveProperties = LogAnalyticsFunctions.getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs.builder()
     *             .namespace(var_.namespace_effective_property_namespace())
     *             .agentId(oci_cloud_bridge_agent.test_agent().id())
     *             .entityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .isIncludePatterns(var_.namespace_effective_property_is_include_patterns())
     *             .name(var_.namespace_effective_property_name())
     *             .patternId(oci_log_analytics_pattern.test_pattern().id())
     *             .sourceName(var_.namespace_effective_property_source_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceEffectivePropertiesResult> getNamespaceEffectivePropertiesPlain(GetNamespaceEffectivePropertiesPlainArgs args) {
        return getNamespaceEffectivePropertiesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Effective Properties in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of effective properties for the specified resource.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceEffectiveProperties = LogAnalyticsFunctions.getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs.builder()
     *             .namespace(var_.namespace_effective_property_namespace())
     *             .agentId(oci_cloud_bridge_agent.test_agent().id())
     *             .entityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .isIncludePatterns(var_.namespace_effective_property_is_include_patterns())
     *             .name(var_.namespace_effective_property_name())
     *             .patternId(oci_log_analytics_pattern.test_pattern().id())
     *             .sourceName(var_.namespace_effective_property_source_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceEffectivePropertiesResult> getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceEffectiveProperties:getNamespaceEffectiveProperties", TypeShape.of(GetNamespaceEffectivePropertiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Effective Properties in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of effective properties for the specified resource.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceEffectiveProperties = LogAnalyticsFunctions.getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs.builder()
     *             .namespace(var_.namespace_effective_property_namespace())
     *             .agentId(oci_cloud_bridge_agent.test_agent().id())
     *             .entityId(oci_log_analytics_log_analytics_entity.test_log_analytics_entity().id())
     *             .isIncludePatterns(var_.namespace_effective_property_is_include_patterns())
     *             .name(var_.namespace_effective_property_name())
     *             .patternId(oci_log_analytics_pattern.test_pattern().id())
     *             .sourceName(var_.namespace_effective_property_source_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceEffectivePropertiesResult> getNamespaceEffectivePropertiesPlain(GetNamespaceEffectivePropertiesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceEffectiveProperties:getNamespaceEffectiveProperties", TypeShape.of(GetNamespaceEffectivePropertiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRule = LogAnalyticsFunctions.getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs.builder()
     *             .ingestTimeRuleId(oci_events_rule.test_rule().id())
     *             .namespace(var_.namespace_ingest_time_rule_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceIngestTimeRuleResult> getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs args) {
        return getNamespaceIngestTimeRule(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRule = LogAnalyticsFunctions.getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs.builder()
     *             .ingestTimeRuleId(oci_events_rule.test_rule().id())
     *             .namespace(var_.namespace_ingest_time_rule_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceIngestTimeRuleResult> getNamespaceIngestTimeRulePlain(GetNamespaceIngestTimeRulePlainArgs args) {
        return getNamespaceIngestTimeRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRule = LogAnalyticsFunctions.getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs.builder()
     *             .ingestTimeRuleId(oci_events_rule.test_rule().id())
     *             .namespace(var_.namespace_ingest_time_rule_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceIngestTimeRuleResult> getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceIngestTimeRule:getNamespaceIngestTimeRule", TypeShape.of(GetNamespaceIngestTimeRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRule = LogAnalyticsFunctions.getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs.builder()
     *             .ingestTimeRuleId(oci_events_rule.test_rule().id())
     *             .namespace(var_.namespace_ingest_time_rule_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceIngestTimeRuleResult> getNamespaceIngestTimeRulePlain(GetNamespaceIngestTimeRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceIngestTimeRule:getNamespaceIngestTimeRule", TypeShape.of(GetNamespaceIngestTimeRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Ingest Time Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules in a compartment. You may limit the number of rules, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRules = LogAnalyticsFunctions.getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_ingest_time_rule_namespace())
     *             .conditionKind(var_.namespace_ingest_time_rule_condition_kind())
     *             .displayName(var_.namespace_ingest_time_rule_display_name())
     *             .fieldName(var_.namespace_ingest_time_rule_field_name())
     *             .fieldValue(var_.namespace_ingest_time_rule_field_value())
     *             .state(var_.namespace_ingest_time_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceIngestTimeRulesResult> getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs args) {
        return getNamespaceIngestTimeRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Ingest Time Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules in a compartment. You may limit the number of rules, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRules = LogAnalyticsFunctions.getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_ingest_time_rule_namespace())
     *             .conditionKind(var_.namespace_ingest_time_rule_condition_kind())
     *             .displayName(var_.namespace_ingest_time_rule_display_name())
     *             .fieldName(var_.namespace_ingest_time_rule_field_name())
     *             .fieldValue(var_.namespace_ingest_time_rule_field_value())
     *             .state(var_.namespace_ingest_time_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceIngestTimeRulesResult> getNamespaceIngestTimeRulesPlain(GetNamespaceIngestTimeRulesPlainArgs args) {
        return getNamespaceIngestTimeRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Ingest Time Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules in a compartment. You may limit the number of rules, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRules = LogAnalyticsFunctions.getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_ingest_time_rule_namespace())
     *             .conditionKind(var_.namespace_ingest_time_rule_condition_kind())
     *             .displayName(var_.namespace_ingest_time_rule_display_name())
     *             .fieldName(var_.namespace_ingest_time_rule_field_name())
     *             .fieldValue(var_.namespace_ingest_time_rule_field_value())
     *             .state(var_.namespace_ingest_time_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceIngestTimeRulesResult> getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceIngestTimeRules:getNamespaceIngestTimeRules", TypeShape.of(GetNamespaceIngestTimeRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Ingest Time Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules in a compartment. You may limit the number of rules, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRules = LogAnalyticsFunctions.getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_ingest_time_rule_namespace())
     *             .conditionKind(var_.namespace_ingest_time_rule_condition_kind())
     *             .displayName(var_.namespace_ingest_time_rule_display_name())
     *             .fieldName(var_.namespace_ingest_time_rule_field_name())
     *             .fieldValue(var_.namespace_ingest_time_rule_field_value())
     *             .state(var_.namespace_ingest_time_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceIngestTimeRulesResult> getNamespaceIngestTimeRulesPlain(GetNamespaceIngestTimeRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceIngestTimeRules:getNamespaceIngestTimeRules", TypeShape.of(GetNamespaceIngestTimeRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of properties along with their metadata.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespacePropertiesMetadata = LogAnalyticsFunctions.getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs.builder()
     *             .namespace(var_.namespace_properties_metadata_namespace())
     *             .constraints(var_.namespace_properties_metadata_constraints())
     *             .displayText(var_.namespace_properties_metadata_display_text())
     *             .level(var_.namespace_properties_metadata_level())
     *             .name(var_.namespace_properties_metadata_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespacePropertiesMetadataResult> getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs args) {
        return getNamespacePropertiesMetadata(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of properties along with their metadata.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespacePropertiesMetadata = LogAnalyticsFunctions.getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs.builder()
     *             .namespace(var_.namespace_properties_metadata_namespace())
     *             .constraints(var_.namespace_properties_metadata_constraints())
     *             .displayText(var_.namespace_properties_metadata_display_text())
     *             .level(var_.namespace_properties_metadata_level())
     *             .name(var_.namespace_properties_metadata_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespacePropertiesMetadataResult> getNamespacePropertiesMetadataPlain(GetNamespacePropertiesMetadataPlainArgs args) {
        return getNamespacePropertiesMetadataPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of properties along with their metadata.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespacePropertiesMetadata = LogAnalyticsFunctions.getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs.builder()
     *             .namespace(var_.namespace_properties_metadata_namespace())
     *             .constraints(var_.namespace_properties_metadata_constraints())
     *             .displayText(var_.namespace_properties_metadata_display_text())
     *             .level(var_.namespace_properties_metadata_level())
     *             .name(var_.namespace_properties_metadata_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespacePropertiesMetadataResult> getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespacePropertiesMetadata:getNamespacePropertiesMetadata", TypeShape.of(GetNamespacePropertiesMetadataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of properties along with their metadata.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespacePropertiesMetadata = LogAnalyticsFunctions.getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs.builder()
     *             .namespace(var_.namespace_properties_metadata_namespace())
     *             .constraints(var_.namespace_properties_metadata_constraints())
     *             .displayText(var_.namespace_properties_metadata_display_text())
     *             .level(var_.namespace_properties_metadata_level())
     *             .name(var_.namespace_properties_metadata_name())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespacePropertiesMetadataResult> getNamespacePropertiesMetadataPlain(GetNamespacePropertiesMetadataPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespacePropertiesMetadata:getNamespacePropertiesMetadata", TypeShape.of(GetNamespacePropertiesMetadataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRules = LogAnalyticsFunctions.getNamespaceRules(GetNamespaceRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_rule_namespace())
     *             .displayName(var_.namespace_rule_display_name())
     *             .kind(var_.namespace_rule_kind())
     *             .state(var_.namespace_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceRulesResult> getNamespaceRules(GetNamespaceRulesArgs args) {
        return getNamespaceRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRules = LogAnalyticsFunctions.getNamespaceRules(GetNamespaceRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_rule_namespace())
     *             .displayName(var_.namespace_rule_display_name())
     *             .kind(var_.namespace_rule_kind())
     *             .state(var_.namespace_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceRulesResult> getNamespaceRulesPlain(GetNamespaceRulesPlainArgs args) {
        return getNamespaceRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRules = LogAnalyticsFunctions.getNamespaceRules(GetNamespaceRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_rule_namespace())
     *             .displayName(var_.namespace_rule_display_name())
     *             .kind(var_.namespace_rule_kind())
     *             .state(var_.namespace_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceRulesResult> getNamespaceRules(GetNamespaceRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceRules:getNamespaceRules", TypeShape.of(GetNamespaceRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRules = LogAnalyticsFunctions.getNamespaceRules(GetNamespaceRulesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_rule_namespace())
     *             .displayName(var_.namespace_rule_display_name())
     *             .kind(var_.namespace_rule_kind())
     *             .state(var_.namespace_rule_state())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceRulesResult> getNamespaceRulesPlain(GetNamespaceRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceRules:getNamespaceRules", TypeShape.of(GetNamespaceRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Rules Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of detection rules in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRulesSummary = LogAnalyticsFunctions.getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_rules_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceRulesSummaryResult> getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs args) {
        return getNamespaceRulesSummary(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Rules Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of detection rules in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRulesSummary = LogAnalyticsFunctions.getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_rules_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceRulesSummaryResult> getNamespaceRulesSummaryPlain(GetNamespaceRulesSummaryPlainArgs args) {
        return getNamespaceRulesSummaryPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Rules Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of detection rules in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRulesSummary = LogAnalyticsFunctions.getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_rules_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceRulesSummaryResult> getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceRulesSummary:getNamespaceRulesSummary", TypeShape.of(GetNamespaceRulesSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Rules Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of detection rules in a compartment.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRulesSummary = LogAnalyticsFunctions.getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_rules_summary_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceRulesSummaryResult> getNamespaceRulesSummaryPlain(GetNamespaceRulesSummaryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceRulesSummary:getNamespaceRulesSummary", TypeShape.of(GetNamespaceRulesSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Get the scheduled task for the specified task identifier.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTask = LogAnalyticsFunctions.getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs.builder()
     *             .namespace(var_.namespace_scheduled_task_namespace())
     *             .scheduledTaskId(oci_log_analytics_scheduled_task.test_scheduled_task().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceScheduledTaskResult> getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs args) {
        return getNamespaceScheduledTask(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Get the scheduled task for the specified task identifier.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTask = LogAnalyticsFunctions.getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs.builder()
     *             .namespace(var_.namespace_scheduled_task_namespace())
     *             .scheduledTaskId(oci_log_analytics_scheduled_task.test_scheduled_task().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceScheduledTaskResult> getNamespaceScheduledTaskPlain(GetNamespaceScheduledTaskPlainArgs args) {
        return getNamespaceScheduledTaskPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Get the scheduled task for the specified task identifier.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTask = LogAnalyticsFunctions.getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs.builder()
     *             .namespace(var_.namespace_scheduled_task_namespace())
     *             .scheduledTaskId(oci_log_analytics_scheduled_task.test_scheduled_task().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceScheduledTaskResult> getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceScheduledTask:getNamespaceScheduledTask", TypeShape.of(GetNamespaceScheduledTaskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Get the scheduled task for the specified task identifier.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTask = LogAnalyticsFunctions.getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs.builder()
     *             .namespace(var_.namespace_scheduled_task_namespace())
     *             .scheduledTaskId(oci_log_analytics_scheduled_task.test_scheduled_task().id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceScheduledTaskResult> getNamespaceScheduledTaskPlain(GetNamespaceScheduledTaskPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceScheduledTask:getNamespaceScheduledTask", TypeShape.of(GetNamespaceScheduledTaskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists scheduled tasks.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTasks = LogAnalyticsFunctions.getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_scheduled_task_namespace())
     *             .displayName(var_.namespace_scheduled_task_display_name())
     *             .taskType(var_.namespace_scheduled_task_task_type())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceScheduledTasksResult> getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs args) {
        return getNamespaceScheduledTasks(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists scheduled tasks.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTasks = LogAnalyticsFunctions.getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_scheduled_task_namespace())
     *             .displayName(var_.namespace_scheduled_task_display_name())
     *             .taskType(var_.namespace_scheduled_task_task_type())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceScheduledTasksResult> getNamespaceScheduledTasksPlain(GetNamespaceScheduledTasksPlainArgs args) {
        return getNamespaceScheduledTasksPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists scheduled tasks.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTasks = LogAnalyticsFunctions.getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_scheduled_task_namespace())
     *             .displayName(var_.namespace_scheduled_task_display_name())
     *             .taskType(var_.namespace_scheduled_task_task_type())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceScheduledTasksResult> getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceScheduledTasks:getNamespaceScheduledTasks", TypeShape.of(GetNamespaceScheduledTasksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists scheduled tasks.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTasks = LogAnalyticsFunctions.getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .namespace(var_.namespace_scheduled_task_namespace())
     *             .displayName(var_.namespace_scheduled_task_display_name())
     *             .taskType(var_.namespace_scheduled_task_task_type())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceScheduledTasksResult> getNamespaceScheduledTasksPlain(GetNamespaceScheduledTasksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceScheduledTasks:getNamespaceScheduledTasks", TypeShape.of(GetNamespaceScheduledTasksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Encryption Key Info resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the list of customer owned encryption key info.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageEncryptionKeyInfo = LogAnalyticsFunctions.getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs.builder()
     *             .namespace(var_.namespace_storage_encryption_key_info_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceStorageEncryptionKeyInfoResult> getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs args) {
        return getNamespaceStorageEncryptionKeyInfo(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Encryption Key Info resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the list of customer owned encryption key info.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageEncryptionKeyInfo = LogAnalyticsFunctions.getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs.builder()
     *             .namespace(var_.namespace_storage_encryption_key_info_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceStorageEncryptionKeyInfoResult> getNamespaceStorageEncryptionKeyInfoPlain(GetNamespaceStorageEncryptionKeyInfoPlainArgs args) {
        return getNamespaceStorageEncryptionKeyInfoPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Encryption Key Info resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the list of customer owned encryption key info.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageEncryptionKeyInfo = LogAnalyticsFunctions.getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs.builder()
     *             .namespace(var_.namespace_storage_encryption_key_info_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceStorageEncryptionKeyInfoResult> getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageEncryptionKeyInfo:getNamespaceStorageEncryptionKeyInfo", TypeShape.of(GetNamespaceStorageEncryptionKeyInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Encryption Key Info resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the list of customer owned encryption key info.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageEncryptionKeyInfo = LogAnalyticsFunctions.getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs.builder()
     *             .namespace(var_.namespace_storage_encryption_key_info_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceStorageEncryptionKeyInfoResult> getNamespaceStorageEncryptionKeyInfoPlain(GetNamespaceStorageEncryptionKeyInfoPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceStorageEncryptionKeyInfo:getNamespaceStorageEncryptionKeyInfo", TypeShape.of(GetNamespaceStorageEncryptionKeyInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Storage Overlapping Recalls in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the list of overlapping recalls made in the given timeframe
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageOverlappingRecalls = LogAnalyticsFunctions.getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs.builder()
     *             .namespace(var_.namespace_storage_overlapping_recall_namespace())
     *             .timeDataEnded(var_.namespace_storage_overlapping_recall_time_data_ended())
     *             .timeDataStarted(var_.namespace_storage_overlapping_recall_time_data_started())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceStorageOverlappingRecallsResult> getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs args) {
        return getNamespaceStorageOverlappingRecalls(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Storage Overlapping Recalls in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the list of overlapping recalls made in the given timeframe
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageOverlappingRecalls = LogAnalyticsFunctions.getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs.builder()
     *             .namespace(var_.namespace_storage_overlapping_recall_namespace())
     *             .timeDataEnded(var_.namespace_storage_overlapping_recall_time_data_ended())
     *             .timeDataStarted(var_.namespace_storage_overlapping_recall_time_data_started())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceStorageOverlappingRecallsResult> getNamespaceStorageOverlappingRecallsPlain(GetNamespaceStorageOverlappingRecallsPlainArgs args) {
        return getNamespaceStorageOverlappingRecallsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Storage Overlapping Recalls in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the list of overlapping recalls made in the given timeframe
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageOverlappingRecalls = LogAnalyticsFunctions.getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs.builder()
     *             .namespace(var_.namespace_storage_overlapping_recall_namespace())
     *             .timeDataEnded(var_.namespace_storage_overlapping_recall_time_data_ended())
     *             .timeDataStarted(var_.namespace_storage_overlapping_recall_time_data_started())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceStorageOverlappingRecallsResult> getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageOverlappingRecalls:getNamespaceStorageOverlappingRecalls", TypeShape.of(GetNamespaceStorageOverlappingRecallsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Storage Overlapping Recalls in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the list of overlapping recalls made in the given timeframe
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageOverlappingRecalls = LogAnalyticsFunctions.getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs.builder()
     *             .namespace(var_.namespace_storage_overlapping_recall_namespace())
     *             .timeDataEnded(var_.namespace_storage_overlapping_recall_time_data_ended())
     *             .timeDataStarted(var_.namespace_storage_overlapping_recall_time_data_started())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceStorageOverlappingRecallsResult> getNamespaceStorageOverlappingRecallsPlain(GetNamespaceStorageOverlappingRecallsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceStorageOverlappingRecalls:getNamespaceStorageOverlappingRecalls", TypeShape.of(GetNamespaceStorageOverlappingRecallsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the number of recalls made and the maximum recalls that can be made
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecallCount = LogAnalyticsFunctions.getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs.builder()
     *             .namespace(var_.namespace_storage_recall_count_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceStorageRecallCountResult> getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs args) {
        return getNamespaceStorageRecallCount(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the number of recalls made and the maximum recalls that can be made
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecallCount = LogAnalyticsFunctions.getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs.builder()
     *             .namespace(var_.namespace_storage_recall_count_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceStorageRecallCountResult> getNamespaceStorageRecallCountPlain(GetNamespaceStorageRecallCountPlainArgs args) {
        return getNamespaceStorageRecallCountPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the number of recalls made and the maximum recalls that can be made
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecallCount = LogAnalyticsFunctions.getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs.builder()
     *             .namespace(var_.namespace_storage_recall_count_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceStorageRecallCountResult> getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageRecallCount:getNamespaceStorageRecallCount", TypeShape.of(GetNamespaceStorageRecallCountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the number of recalls made and the maximum recalls that can be made
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecallCount = LogAnalyticsFunctions.getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs.builder()
     *             .namespace(var_.namespace_storage_recall_count_namespace())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceStorageRecallCountResult> getNamespaceStorageRecallCountPlain(GetNamespaceStorageRecallCountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceStorageRecallCount:getNamespaceStorageRecallCount", TypeShape.of(GetNamespaceStorageRecallCountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the datasize of recalls for a given timeframe
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecalledDataSize = LogAnalyticsFunctions.getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs.builder()
     *             .namespace(var_.namespace_storage_recalled_data_size_namespace())
     *             .timeDataEnded(var_.namespace_storage_recalled_data_size_time_data_ended())
     *             .timeDataStarted(var_.namespace_storage_recalled_data_size_time_data_started())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceStorageRecalledDataSizeResult> getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs args) {
        return getNamespaceStorageRecalledDataSize(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the datasize of recalls for a given timeframe
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecalledDataSize = LogAnalyticsFunctions.getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs.builder()
     *             .namespace(var_.namespace_storage_recalled_data_size_namespace())
     *             .timeDataEnded(var_.namespace_storage_recalled_data_size_time_data_ended())
     *             .timeDataStarted(var_.namespace_storage_recalled_data_size_time_data_started())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceStorageRecalledDataSizeResult> getNamespaceStorageRecalledDataSizePlain(GetNamespaceStorageRecalledDataSizePlainArgs args) {
        return getNamespaceStorageRecalledDataSizePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the datasize of recalls for a given timeframe
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecalledDataSize = LogAnalyticsFunctions.getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs.builder()
     *             .namespace(var_.namespace_storage_recalled_data_size_namespace())
     *             .timeDataEnded(var_.namespace_storage_recalled_data_size_time_data_ended())
     *             .timeDataStarted(var_.namespace_storage_recalled_data_size_time_data_started())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespaceStorageRecalledDataSizeResult> getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageRecalledDataSize:getNamespaceStorageRecalledDataSize", TypeShape.of(GetNamespaceStorageRecalledDataSizeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the datasize of recalls for a given timeframe
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecalledDataSize = LogAnalyticsFunctions.getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs.builder()
     *             .namespace(var_.namespace_storage_recalled_data_size_namespace())
     *             .timeDataEnded(var_.namespace_storage_recalled_data_size_time_data_ended())
     *             .timeDataStarted(var_.namespace_storage_recalled_data_size_time_data_started())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespaceStorageRecalledDataSizeResult> getNamespaceStorageRecalledDataSizePlain(GetNamespaceStorageRecalledDataSizePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceStorageRecalledDataSize:getNamespaceStorageRecalledDataSize", TypeShape.of(GetNamespaceStorageRecalledDataSizeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespaces in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Given a tenancy OCID, this API returns the namespace of the tenancy if it is valid and subscribed to the region.  The
     * result also indicates if the tenancy is onboarded with Logging Analytics.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaces = LogAnalyticsFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces(GetNamespacesArgs args) {
        return getNamespaces(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespaces in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Given a tenancy OCID, this API returns the namespace of the tenancy if it is valid and subscribed to the region.  The
     * result also indicates if the tenancy is onboarded with Logging Analytics.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaces = LogAnalyticsFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespacesResult> getNamespacesPlain(GetNamespacesPlainArgs args) {
        return getNamespacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespaces in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Given a tenancy OCID, this API returns the namespace of the tenancy if it is valid and subscribed to the region.  The
     * result also indicates if the tenancy is onboarded with Logging Analytics.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaces = LogAnalyticsFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces(GetNamespacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaces:getNamespaces", TypeShape.of(GetNamespacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespaces in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Given a tenancy OCID, this API returns the namespace of the tenancy if it is valid and subscribed to the region.  The
     * result also indicates if the tenancy is onboarded with Logging Analytics.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaces = LogAnalyticsFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .compartmentId(var_.compartment_id())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetNamespacesResult> getNamespacesPlain(GetNamespacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaces:getNamespaces", TypeShape.of(GetNamespacesResult.class), args, Utilities.withVersion(options));
    }
}
