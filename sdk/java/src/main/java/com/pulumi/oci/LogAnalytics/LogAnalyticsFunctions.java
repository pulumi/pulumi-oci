// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypeArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferencePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceFieldUsageArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceFieldUsagePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceLookupArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceLookupPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceParserActionsArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceParserActionsPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageArchivalConfigArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageArchivalConfigPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplateArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplatePlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplatesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplatesPlainArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesPlainArgs;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsCategoriesListResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsCategoryResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntitiesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntitiesSummaryResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntityResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntityTopologyResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntityTypeResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntityTypesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsLogGroupResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsLogGroupsResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsLogGroupsSummaryResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsObjectCollectionRuleResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsObjectCollectionRulesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsPreferenceResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsResourceCategoriesListResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsUnprocessedDataBucketResult;
import com.pulumi.oci.LogAnalytics.outputs.GetLogSetsCountResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceEffectivePropertiesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceFieldUsageResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceIngestTimeRuleResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceIngestTimeRulesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceLookupResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceParserActionsResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespacePropertiesMetadataResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceRulesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceRulesSummaryResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceScheduledTaskResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceScheduledTasksResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceStorageArchivalConfigResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceStorageEncryptionKeyInfoResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceStorageOverlappingRecallsResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceStorageRecallCountResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceStorageRecalledDataSizeResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceTemplateResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceTemplatesResult;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespacesResult;
import com.pulumi.oci.Utilities;
import java.util.concurrent.CompletableFuture;

public final class LogAnalyticsFunctions {
    /**
     * This data source provides details about Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of categories, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as category name or description.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategoriesList = LogAnalyticsFunctions.getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs.builder()
     *             .namespace(logAnalyticsCategoriesListNamespace)
     *             .categoryDisplayText(logAnalyticsCategoriesListCategoryDisplayText)
     *             .categoryType(logAnalyticsCategoriesListCategoryType)
     *             .name(logAnalyticsCategoriesListName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsCategoriesListResult> getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs args) {
        return getLogAnalyticsCategoriesList(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of categories, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as category name or description.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategoriesList = LogAnalyticsFunctions.getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs.builder()
     *             .namespace(logAnalyticsCategoriesListNamespace)
     *             .categoryDisplayText(logAnalyticsCategoriesListCategoryDisplayText)
     *             .categoryType(logAnalyticsCategoriesListCategoryType)
     *             .name(logAnalyticsCategoriesListName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsCategoriesListResult> getLogAnalyticsCategoriesListPlain(GetLogAnalyticsCategoriesListPlainArgs args) {
        return getLogAnalyticsCategoriesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of categories, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as category name or description.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategoriesList = LogAnalyticsFunctions.getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs.builder()
     *             .namespace(logAnalyticsCategoriesListNamespace)
     *             .categoryDisplayText(logAnalyticsCategoriesListCategoryDisplayText)
     *             .categoryType(logAnalyticsCategoriesListCategoryType)
     *             .name(logAnalyticsCategoriesListName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsCategoriesListResult> getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsCategoriesList:getLogAnalyticsCategoriesList", TypeShape.of(GetLogAnalyticsCategoriesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of categories, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as category name or description.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategoriesList = LogAnalyticsFunctions.getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs.builder()
     *             .namespace(logAnalyticsCategoriesListNamespace)
     *             .categoryDisplayText(logAnalyticsCategoriesListCategoryDisplayText)
     *             .categoryType(logAnalyticsCategoriesListCategoryType)
     *             .name(logAnalyticsCategoriesListName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsCategoriesListResult> getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsCategoriesList:getLogAnalyticsCategoriesList", TypeShape.of(GetLogAnalyticsCategoriesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of categories, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as category name or description.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategoriesList = LogAnalyticsFunctions.getLogAnalyticsCategoriesList(GetLogAnalyticsCategoriesListArgs.builder()
     *             .namespace(logAnalyticsCategoriesListNamespace)
     *             .categoryDisplayText(logAnalyticsCategoriesListCategoryDisplayText)
     *             .categoryType(logAnalyticsCategoriesListCategoryType)
     *             .name(logAnalyticsCategoriesListName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsCategoriesListResult> getLogAnalyticsCategoriesListPlain(GetLogAnalyticsCategoriesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsCategoriesList:getLogAnalyticsCategoriesList", TypeShape.of(GetLogAnalyticsCategoriesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Category resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the category with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategory = LogAnalyticsFunctions.getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs.builder()
     *             .name(logAnalyticsCategoryName)
     *             .namespace(logAnalyticsCategoryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsCategoryResult> getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs args) {
        return getLogAnalyticsCategory(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Category resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the category with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategory = LogAnalyticsFunctions.getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs.builder()
     *             .name(logAnalyticsCategoryName)
     *             .namespace(logAnalyticsCategoryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsCategoryResult> getLogAnalyticsCategoryPlain(GetLogAnalyticsCategoryPlainArgs args) {
        return getLogAnalyticsCategoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Category resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the category with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategory = LogAnalyticsFunctions.getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs.builder()
     *             .name(logAnalyticsCategoryName)
     *             .namespace(logAnalyticsCategoryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsCategoryResult> getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsCategory:getLogAnalyticsCategory", TypeShape.of(GetLogAnalyticsCategoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Category resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the category with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategory = LogAnalyticsFunctions.getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs.builder()
     *             .name(logAnalyticsCategoryName)
     *             .namespace(logAnalyticsCategoryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsCategoryResult> getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsCategory:getLogAnalyticsCategory", TypeShape.of(GetLogAnalyticsCategoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Category resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the category with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsCategoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsCategory = LogAnalyticsFunctions.getLogAnalyticsCategory(GetLogAnalyticsCategoryArgs.builder()
     *             .name(logAnalyticsCategoryName)
     *             .namespace(logAnalyticsCategoryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsCategoryResult> getLogAnalyticsCategoryPlain(GetLogAnalyticsCategoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsCategory:getLogAnalyticsCategory", TypeShape.of(GetLogAnalyticsCategoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entities.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntities = LogAnalyticsFunctions.getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsEntityNamespace)
     *             .cloudResourceId(logAnalyticsEntityCloudResourceId)
     *             .definedTagEquals(logAnalyticsEntityDefinedTagEquals)
     *             .definedTagExists(logAnalyticsEntityDefinedTagExists)
     *             .entityTypeNames(logAnalyticsEntityEntityTypeName)
     *             .freeformTagEquals(logAnalyticsEntityFreeformTagEquals)
     *             .freeformTagExists(logAnalyticsEntityFreeformTagExists)
     *             .hostname(logAnalyticsEntityHostname)
     *             .hostnameContains(logAnalyticsEntityHostnameContains)
     *             .isManagementAgentIdNull(logAnalyticsEntityIsManagementAgentIdNull)
     *             .isShowAssociatedSourcesCount(logAnalyticsEntityIsShowAssociatedSourcesCount)
     *             .lifecycleDetailsContains(logAnalyticsEntityLifecycleDetailsContains)
     *             .metadataEquals(logAnalyticsEntityMetadataEquals)
     *             .name(logAnalyticsEntityName)
     *             .nameContains(logAnalyticsEntityNameContains)
     *             .sourceId(testSource.id())
     *             .state(logAnalyticsEntityState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntitiesResult> getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs args) {
        return getLogAnalyticsEntities(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entities.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntities = LogAnalyticsFunctions.getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsEntityNamespace)
     *             .cloudResourceId(logAnalyticsEntityCloudResourceId)
     *             .definedTagEquals(logAnalyticsEntityDefinedTagEquals)
     *             .definedTagExists(logAnalyticsEntityDefinedTagExists)
     *             .entityTypeNames(logAnalyticsEntityEntityTypeName)
     *             .freeformTagEquals(logAnalyticsEntityFreeformTagEquals)
     *             .freeformTagExists(logAnalyticsEntityFreeformTagExists)
     *             .hostname(logAnalyticsEntityHostname)
     *             .hostnameContains(logAnalyticsEntityHostnameContains)
     *             .isManagementAgentIdNull(logAnalyticsEntityIsManagementAgentIdNull)
     *             .isShowAssociatedSourcesCount(logAnalyticsEntityIsShowAssociatedSourcesCount)
     *             .lifecycleDetailsContains(logAnalyticsEntityLifecycleDetailsContains)
     *             .metadataEquals(logAnalyticsEntityMetadataEquals)
     *             .name(logAnalyticsEntityName)
     *             .nameContains(logAnalyticsEntityNameContains)
     *             .sourceId(testSource.id())
     *             .state(logAnalyticsEntityState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntitiesResult> getLogAnalyticsEntitiesPlain(GetLogAnalyticsEntitiesPlainArgs args) {
        return getLogAnalyticsEntitiesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entities.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntities = LogAnalyticsFunctions.getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsEntityNamespace)
     *             .cloudResourceId(logAnalyticsEntityCloudResourceId)
     *             .definedTagEquals(logAnalyticsEntityDefinedTagEquals)
     *             .definedTagExists(logAnalyticsEntityDefinedTagExists)
     *             .entityTypeNames(logAnalyticsEntityEntityTypeName)
     *             .freeformTagEquals(logAnalyticsEntityFreeformTagEquals)
     *             .freeformTagExists(logAnalyticsEntityFreeformTagExists)
     *             .hostname(logAnalyticsEntityHostname)
     *             .hostnameContains(logAnalyticsEntityHostnameContains)
     *             .isManagementAgentIdNull(logAnalyticsEntityIsManagementAgentIdNull)
     *             .isShowAssociatedSourcesCount(logAnalyticsEntityIsShowAssociatedSourcesCount)
     *             .lifecycleDetailsContains(logAnalyticsEntityLifecycleDetailsContains)
     *             .metadataEquals(logAnalyticsEntityMetadataEquals)
     *             .name(logAnalyticsEntityName)
     *             .nameContains(logAnalyticsEntityNameContains)
     *             .sourceId(testSource.id())
     *             .state(logAnalyticsEntityState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntitiesResult> getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntities:getLogAnalyticsEntities", TypeShape.of(GetLogAnalyticsEntitiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entities.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntities = LogAnalyticsFunctions.getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsEntityNamespace)
     *             .cloudResourceId(logAnalyticsEntityCloudResourceId)
     *             .definedTagEquals(logAnalyticsEntityDefinedTagEquals)
     *             .definedTagExists(logAnalyticsEntityDefinedTagExists)
     *             .entityTypeNames(logAnalyticsEntityEntityTypeName)
     *             .freeformTagEquals(logAnalyticsEntityFreeformTagEquals)
     *             .freeformTagExists(logAnalyticsEntityFreeformTagExists)
     *             .hostname(logAnalyticsEntityHostname)
     *             .hostnameContains(logAnalyticsEntityHostnameContains)
     *             .isManagementAgentIdNull(logAnalyticsEntityIsManagementAgentIdNull)
     *             .isShowAssociatedSourcesCount(logAnalyticsEntityIsShowAssociatedSourcesCount)
     *             .lifecycleDetailsContains(logAnalyticsEntityLifecycleDetailsContains)
     *             .metadataEquals(logAnalyticsEntityMetadataEquals)
     *             .name(logAnalyticsEntityName)
     *             .nameContains(logAnalyticsEntityNameContains)
     *             .sourceId(testSource.id())
     *             .state(logAnalyticsEntityState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntitiesResult> getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntities:getLogAnalyticsEntities", TypeShape.of(GetLogAnalyticsEntitiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Entities in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entities.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntities = LogAnalyticsFunctions.getLogAnalyticsEntities(GetLogAnalyticsEntitiesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsEntityNamespace)
     *             .cloudResourceId(logAnalyticsEntityCloudResourceId)
     *             .definedTagEquals(logAnalyticsEntityDefinedTagEquals)
     *             .definedTagExists(logAnalyticsEntityDefinedTagExists)
     *             .entityTypeNames(logAnalyticsEntityEntityTypeName)
     *             .freeformTagEquals(logAnalyticsEntityFreeformTagEquals)
     *             .freeformTagExists(logAnalyticsEntityFreeformTagExists)
     *             .hostname(logAnalyticsEntityHostname)
     *             .hostnameContains(logAnalyticsEntityHostnameContains)
     *             .isManagementAgentIdNull(logAnalyticsEntityIsManagementAgentIdNull)
     *             .isShowAssociatedSourcesCount(logAnalyticsEntityIsShowAssociatedSourcesCount)
     *             .lifecycleDetailsContains(logAnalyticsEntityLifecycleDetailsContains)
     *             .metadataEquals(logAnalyticsEntityMetadataEquals)
     *             .name(logAnalyticsEntityName)
     *             .nameContains(logAnalyticsEntityNameContains)
     *             .sourceId(testSource.id())
     *             .state(logAnalyticsEntityState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntitiesResult> getLogAnalyticsEntitiesPlain(GetLogAnalyticsEntitiesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsEntities:getLogAnalyticsEntities", TypeShape.of(GetLogAnalyticsEntitiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entities Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns log analytics entities count summary report.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntitiesSummary = LogAnalyticsFunctions.getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsEntitiesSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntitiesSummaryResult> getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs args) {
        return getLogAnalyticsEntitiesSummary(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entities Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns log analytics entities count summary report.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntitiesSummary = LogAnalyticsFunctions.getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsEntitiesSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntitiesSummaryResult> getLogAnalyticsEntitiesSummaryPlain(GetLogAnalyticsEntitiesSummaryPlainArgs args) {
        return getLogAnalyticsEntitiesSummaryPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entities Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns log analytics entities count summary report.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntitiesSummary = LogAnalyticsFunctions.getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsEntitiesSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntitiesSummaryResult> getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntitiesSummary:getLogAnalyticsEntitiesSummary", TypeShape.of(GetLogAnalyticsEntitiesSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entities Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns log analytics entities count summary report.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntitiesSummary = LogAnalyticsFunctions.getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsEntitiesSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntitiesSummaryResult> getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntitiesSummary:getLogAnalyticsEntitiesSummary", TypeShape.of(GetLogAnalyticsEntitiesSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entities Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns log analytics entities count summary report.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntitiesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntitiesSummary = LogAnalyticsFunctions.getLogAnalyticsEntitiesSummary(GetLogAnalyticsEntitiesSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsEntitiesSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntitiesSummaryResult> getLogAnalyticsEntitiesSummaryPlain(GetLogAnalyticsEntitiesSummaryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsEntitiesSummary:getLogAnalyticsEntitiesSummary", TypeShape.of(GetLogAnalyticsEntitiesSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity with the given id.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntity = LogAnalyticsFunctions.getLogAnalyticsEntity(GetLogAnalyticsEntityArgs.builder()
     *             .logAnalyticsEntityId(testLogAnalyticsEntityOciLogAnalyticsLogAnalyticsEntity.id())
     *             .namespace(logAnalyticsEntityNamespace)
     *             .isShowAssociatedSourcesCount(logAnalyticsEntityIsShowAssociatedSourcesCount)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityResult> getLogAnalyticsEntity(GetLogAnalyticsEntityArgs args) {
        return getLogAnalyticsEntity(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity with the given id.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntity = LogAnalyticsFunctions.getLogAnalyticsEntity(GetLogAnalyticsEntityArgs.builder()
     *             .logAnalyticsEntityId(testLogAnalyticsEntityOciLogAnalyticsLogAnalyticsEntity.id())
     *             .namespace(logAnalyticsEntityNamespace)
     *             .isShowAssociatedSourcesCount(logAnalyticsEntityIsShowAssociatedSourcesCount)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityResult> getLogAnalyticsEntityPlain(GetLogAnalyticsEntityPlainArgs args) {
        return getLogAnalyticsEntityPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity with the given id.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntity = LogAnalyticsFunctions.getLogAnalyticsEntity(GetLogAnalyticsEntityArgs.builder()
     *             .logAnalyticsEntityId(testLogAnalyticsEntityOciLogAnalyticsLogAnalyticsEntity.id())
     *             .namespace(logAnalyticsEntityNamespace)
     *             .isShowAssociatedSourcesCount(logAnalyticsEntityIsShowAssociatedSourcesCount)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityResult> getLogAnalyticsEntity(GetLogAnalyticsEntityArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntity:getLogAnalyticsEntity", TypeShape.of(GetLogAnalyticsEntityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity with the given id.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntity = LogAnalyticsFunctions.getLogAnalyticsEntity(GetLogAnalyticsEntityArgs.builder()
     *             .logAnalyticsEntityId(testLogAnalyticsEntityOciLogAnalyticsLogAnalyticsEntity.id())
     *             .namespace(logAnalyticsEntityNamespace)
     *             .isShowAssociatedSourcesCount(logAnalyticsEntityIsShowAssociatedSourcesCount)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityResult> getLogAnalyticsEntity(GetLogAnalyticsEntityArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntity:getLogAnalyticsEntity", TypeShape.of(GetLogAnalyticsEntityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity with the given id.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntity = LogAnalyticsFunctions.getLogAnalyticsEntity(GetLogAnalyticsEntityArgs.builder()
     *             .logAnalyticsEntityId(testLogAnalyticsEntityOciLogAnalyticsLogAnalyticsEntity.id())
     *             .namespace(logAnalyticsEntityNamespace)
     *             .isShowAssociatedSourcesCount(logAnalyticsEntityIsShowAssociatedSourcesCount)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityResult> getLogAnalyticsEntityPlain(GetLogAnalyticsEntityPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsEntity:getLogAnalyticsEntity", TypeShape.of(GetLogAnalyticsEntityResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTopology = LogAnalyticsFunctions.getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs.builder()
     *             .logAnalyticsEntityId(testLogAnalyticsEntity.id())
     *             .namespace(logAnalyticsEntityTopologyNamespace)
     *             .context(logAnalyticsEntityTopologyContext)
     *             .metadataEquals(logAnalyticsEntityTopologyMetadataEquals)
     *             .state(logAnalyticsEntityTopologyState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityTopologyResult> getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs args) {
        return getLogAnalyticsEntityTopology(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTopology = LogAnalyticsFunctions.getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs.builder()
     *             .logAnalyticsEntityId(testLogAnalyticsEntity.id())
     *             .namespace(logAnalyticsEntityTopologyNamespace)
     *             .context(logAnalyticsEntityTopologyContext)
     *             .metadataEquals(logAnalyticsEntityTopologyMetadataEquals)
     *             .state(logAnalyticsEntityTopologyState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityTopologyResult> getLogAnalyticsEntityTopologyPlain(GetLogAnalyticsEntityTopologyPlainArgs args) {
        return getLogAnalyticsEntityTopologyPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTopology = LogAnalyticsFunctions.getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs.builder()
     *             .logAnalyticsEntityId(testLogAnalyticsEntity.id())
     *             .namespace(logAnalyticsEntityTopologyNamespace)
     *             .context(logAnalyticsEntityTopologyContext)
     *             .metadataEquals(logAnalyticsEntityTopologyMetadataEquals)
     *             .state(logAnalyticsEntityTopologyState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityTopologyResult> getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntityTopology:getLogAnalyticsEntityTopology", TypeShape.of(GetLogAnalyticsEntityTopologyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTopology = LogAnalyticsFunctions.getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs.builder()
     *             .logAnalyticsEntityId(testLogAnalyticsEntity.id())
     *             .namespace(logAnalyticsEntityTopologyNamespace)
     *             .context(logAnalyticsEntityTopologyContext)
     *             .metadataEquals(logAnalyticsEntityTopologyMetadataEquals)
     *             .state(logAnalyticsEntityTopologyState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityTopologyResult> getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntityTopology:getLogAnalyticsEntityTopology", TypeShape.of(GetLogAnalyticsEntityTopologyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Topology resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a log analytics entity topology collection that contains a set of log analytics entities and a set of relationships between those, for the input source entity.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTopologyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTopology = LogAnalyticsFunctions.getLogAnalyticsEntityTopology(GetLogAnalyticsEntityTopologyArgs.builder()
     *             .logAnalyticsEntityId(testLogAnalyticsEntity.id())
     *             .namespace(logAnalyticsEntityTopologyNamespace)
     *             .context(logAnalyticsEntityTopologyContext)
     *             .metadataEquals(logAnalyticsEntityTopologyMetadataEquals)
     *             .state(logAnalyticsEntityTopologyState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityTopologyResult> getLogAnalyticsEntityTopologyPlain(GetLogAnalyticsEntityTopologyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsEntityTopology:getLogAnalyticsEntityTopology", TypeShape.of(GetLogAnalyticsEntityTopologyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Type resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity type with the given name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityType = LogAnalyticsFunctions.getLogAnalyticsEntityType(GetLogAnalyticsEntityTypeArgs.builder()
     *             .entityTypeName(logAnalyticsEntityTypeName)
     *             .namespace(logAnalyticsEntityTypeNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityTypeResult> getLogAnalyticsEntityType(GetLogAnalyticsEntityTypeArgs args) {
        return getLogAnalyticsEntityType(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Type resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity type with the given name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityType = LogAnalyticsFunctions.getLogAnalyticsEntityType(GetLogAnalyticsEntityTypeArgs.builder()
     *             .entityTypeName(logAnalyticsEntityTypeName)
     *             .namespace(logAnalyticsEntityTypeNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityTypeResult> getLogAnalyticsEntityTypePlain(GetLogAnalyticsEntityTypePlainArgs args) {
        return getLogAnalyticsEntityTypePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Type resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity type with the given name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityType = LogAnalyticsFunctions.getLogAnalyticsEntityType(GetLogAnalyticsEntityTypeArgs.builder()
     *             .entityTypeName(logAnalyticsEntityTypeName)
     *             .namespace(logAnalyticsEntityTypeNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityTypeResult> getLogAnalyticsEntityType(GetLogAnalyticsEntityTypeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntityType:getLogAnalyticsEntityType", TypeShape.of(GetLogAnalyticsEntityTypeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Type resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity type with the given name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityType = LogAnalyticsFunctions.getLogAnalyticsEntityType(GetLogAnalyticsEntityTypeArgs.builder()
     *             .entityTypeName(logAnalyticsEntityTypeName)
     *             .namespace(logAnalyticsEntityTypeNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityTypeResult> getLogAnalyticsEntityType(GetLogAnalyticsEntityTypeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntityType:getLogAnalyticsEntityType", TypeShape.of(GetLogAnalyticsEntityTypeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Entity Type resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Retrieve the log analytics entity type with the given name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityType = LogAnalyticsFunctions.getLogAnalyticsEntityType(GetLogAnalyticsEntityTypeArgs.builder()
     *             .entityTypeName(logAnalyticsEntityTypeName)
     *             .namespace(logAnalyticsEntityTypeNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityTypeResult> getLogAnalyticsEntityTypePlain(GetLogAnalyticsEntityTypePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsEntityType:getLogAnalyticsEntityType", TypeShape.of(GetLogAnalyticsEntityTypeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Entity Types in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entity types.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTypes = LogAnalyticsFunctions.getLogAnalyticsEntityTypes(GetLogAnalyticsEntityTypesArgs.builder()
     *             .namespace(logAnalyticsEntityTypeNamespace)
     *             .cloudType(logAnalyticsEntityTypeCloudType)
     *             .name(logAnalyticsEntityTypeName)
     *             .nameContains(logAnalyticsEntityTypeNameContains)
     *             .state(logAnalyticsEntityTypeState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityTypesResult> getLogAnalyticsEntityTypes(GetLogAnalyticsEntityTypesArgs args) {
        return getLogAnalyticsEntityTypes(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Entity Types in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entity types.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTypes = LogAnalyticsFunctions.getLogAnalyticsEntityTypes(GetLogAnalyticsEntityTypesArgs.builder()
     *             .namespace(logAnalyticsEntityTypeNamespace)
     *             .cloudType(logAnalyticsEntityTypeCloudType)
     *             .name(logAnalyticsEntityTypeName)
     *             .nameContains(logAnalyticsEntityTypeNameContains)
     *             .state(logAnalyticsEntityTypeState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityTypesResult> getLogAnalyticsEntityTypesPlain(GetLogAnalyticsEntityTypesPlainArgs args) {
        return getLogAnalyticsEntityTypesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Entity Types in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entity types.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTypes = LogAnalyticsFunctions.getLogAnalyticsEntityTypes(GetLogAnalyticsEntityTypesArgs.builder()
     *             .namespace(logAnalyticsEntityTypeNamespace)
     *             .cloudType(logAnalyticsEntityTypeCloudType)
     *             .name(logAnalyticsEntityTypeName)
     *             .nameContains(logAnalyticsEntityTypeNameContains)
     *             .state(logAnalyticsEntityTypeState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityTypesResult> getLogAnalyticsEntityTypes(GetLogAnalyticsEntityTypesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntityTypes:getLogAnalyticsEntityTypes", TypeShape.of(GetLogAnalyticsEntityTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Entity Types in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entity types.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTypes = LogAnalyticsFunctions.getLogAnalyticsEntityTypes(GetLogAnalyticsEntityTypesArgs.builder()
     *             .namespace(logAnalyticsEntityTypeNamespace)
     *             .cloudType(logAnalyticsEntityTypeCloudType)
     *             .name(logAnalyticsEntityTypeName)
     *             .nameContains(logAnalyticsEntityTypeNameContains)
     *             .state(logAnalyticsEntityTypeState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsEntityTypesResult> getLogAnalyticsEntityTypes(GetLogAnalyticsEntityTypesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsEntityTypes:getLogAnalyticsEntityTypes", TypeShape.of(GetLogAnalyticsEntityTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Entity Types in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Return a list of log analytics entity types.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsEntityTypesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsEntityTypes = LogAnalyticsFunctions.getLogAnalyticsEntityTypes(GetLogAnalyticsEntityTypesArgs.builder()
     *             .namespace(logAnalyticsEntityTypeNamespace)
     *             .cloudType(logAnalyticsEntityTypeCloudType)
     *             .name(logAnalyticsEntityTypeName)
     *             .nameContains(logAnalyticsEntityTypeNameContains)
     *             .state(logAnalyticsEntityTypeState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsEntityTypesResult> getLogAnalyticsEntityTypesPlain(GetLogAnalyticsEntityTypesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsEntityTypes:getLogAnalyticsEntityTypes", TypeShape.of(GetLogAnalyticsEntityTypesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Log Group resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified log group such as display name, description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroup = LogAnalyticsFunctions.getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs.builder()
     *             .logAnalyticsLogGroupId(testLogAnalyticsLogGroupOciLogAnalyticsLogAnalyticsLogGroup.id())
     *             .namespace(logAnalyticsLogGroupNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsLogGroupResult> getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs args) {
        return getLogAnalyticsLogGroup(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Log Group resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified log group such as display name, description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroup = LogAnalyticsFunctions.getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs.builder()
     *             .logAnalyticsLogGroupId(testLogAnalyticsLogGroupOciLogAnalyticsLogAnalyticsLogGroup.id())
     *             .namespace(logAnalyticsLogGroupNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupResult> getLogAnalyticsLogGroupPlain(GetLogAnalyticsLogGroupPlainArgs args) {
        return getLogAnalyticsLogGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Log Group resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified log group such as display name, description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroup = LogAnalyticsFunctions.getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs.builder()
     *             .logAnalyticsLogGroupId(testLogAnalyticsLogGroupOciLogAnalyticsLogAnalyticsLogGroup.id())
     *             .namespace(logAnalyticsLogGroupNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsLogGroupResult> getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsLogGroup:getLogAnalyticsLogGroup", TypeShape.of(GetLogAnalyticsLogGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Log Group resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified log group such as display name, description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroup = LogAnalyticsFunctions.getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs.builder()
     *             .logAnalyticsLogGroupId(testLogAnalyticsLogGroupOciLogAnalyticsLogAnalyticsLogGroup.id())
     *             .namespace(logAnalyticsLogGroupNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsLogGroupResult> getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsLogGroup:getLogAnalyticsLogGroup", TypeShape.of(GetLogAnalyticsLogGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Log Group resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified log group such as display name, description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroup = LogAnalyticsFunctions.getLogAnalyticsLogGroup(GetLogAnalyticsLogGroupArgs.builder()
     *             .logAnalyticsLogGroupId(testLogAnalyticsLogGroupOciLogAnalyticsLogAnalyticsLogGroup.id())
     *             .namespace(logAnalyticsLogGroupNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupResult> getLogAnalyticsLogGroupPlain(GetLogAnalyticsLogGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsLogGroup:getLogAnalyticsLogGroup", TypeShape.of(GetLogAnalyticsLogGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Log Groups in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of log groups in a compartment. You may limit the number of log groups, provide sorting options, and filter the results by specifying a display name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroups = LogAnalyticsFunctions.getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsLogGroupNamespace)
     *             .displayName(logAnalyticsLogGroupDisplayName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsLogGroupsResult> getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs args) {
        return getLogAnalyticsLogGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Log Groups in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of log groups in a compartment. You may limit the number of log groups, provide sorting options, and filter the results by specifying a display name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroups = LogAnalyticsFunctions.getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsLogGroupNamespace)
     *             .displayName(logAnalyticsLogGroupDisplayName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupsResult> getLogAnalyticsLogGroupsPlain(GetLogAnalyticsLogGroupsPlainArgs args) {
        return getLogAnalyticsLogGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Log Groups in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of log groups in a compartment. You may limit the number of log groups, provide sorting options, and filter the results by specifying a display name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroups = LogAnalyticsFunctions.getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsLogGroupNamespace)
     *             .displayName(logAnalyticsLogGroupDisplayName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsLogGroupsResult> getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsLogGroups:getLogAnalyticsLogGroups", TypeShape.of(GetLogAnalyticsLogGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Log Groups in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of log groups in a compartment. You may limit the number of log groups, provide sorting options, and filter the results by specifying a display name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroups = LogAnalyticsFunctions.getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsLogGroupNamespace)
     *             .displayName(logAnalyticsLogGroupDisplayName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsLogGroupsResult> getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsLogGroups:getLogAnalyticsLogGroups", TypeShape.of(GetLogAnalyticsLogGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Log Groups in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of log groups in a compartment. You may limit the number of log groups, provide sorting options, and filter the results by specifying a display name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroups = LogAnalyticsFunctions.getLogAnalyticsLogGroups(GetLogAnalyticsLogGroupsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsLogGroupNamespace)
     *             .displayName(logAnalyticsLogGroupDisplayName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupsResult> getLogAnalyticsLogGroupsPlain(GetLogAnalyticsLogGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsLogGroups:getLogAnalyticsLogGroups", TypeShape.of(GetLogAnalyticsLogGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of log groups in a compartment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroupsSummary = LogAnalyticsFunctions.getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsLogGroupsSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsLogGroupsSummaryResult> getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs args) {
        return getLogAnalyticsLogGroupsSummary(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of log groups in a compartment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroupsSummary = LogAnalyticsFunctions.getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsLogGroupsSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupsSummaryResult> getLogAnalyticsLogGroupsSummaryPlain(GetLogAnalyticsLogGroupsSummaryPlainArgs args) {
        return getLogAnalyticsLogGroupsSummaryPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of log groups in a compartment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroupsSummary = LogAnalyticsFunctions.getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsLogGroupsSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsLogGroupsSummaryResult> getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsLogGroupsSummary:getLogAnalyticsLogGroupsSummary", TypeShape.of(GetLogAnalyticsLogGroupsSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of log groups in a compartment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroupsSummary = LogAnalyticsFunctions.getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsLogGroupsSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsLogGroupsSummaryResult> getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsLogGroupsSummary:getLogAnalyticsLogGroupsSummary", TypeShape.of(GetLogAnalyticsLogGroupsSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Log Groups Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of log groups in a compartment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsLogGroupsSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsLogGroupsSummary = LogAnalyticsFunctions.getLogAnalyticsLogGroupsSummary(GetLogAnalyticsLogGroupsSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsLogGroupsSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsLogGroupsSummaryResult> getLogAnalyticsLogGroupsSummaryPlain(GetLogAnalyticsLogGroupsSummaryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsLogGroupsSummary:getLogAnalyticsLogGroupsSummary", TypeShape.of(GetLogAnalyticsLogGroupsSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets a configured object storage based collection rule by given id
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRule = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs.builder()
     *             .logAnalyticsObjectCollectionRuleId(testLogAnalyticsObjectCollectionRuleOciLogAnalyticsLogAnalyticsObjectCollectionRule.id())
     *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsObjectCollectionRuleResult> getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs args) {
        return getLogAnalyticsObjectCollectionRule(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets a configured object storage based collection rule by given id
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRule = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs.builder()
     *             .logAnalyticsObjectCollectionRuleId(testLogAnalyticsObjectCollectionRuleOciLogAnalyticsLogAnalyticsObjectCollectionRule.id())
     *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsObjectCollectionRuleResult> getLogAnalyticsObjectCollectionRulePlain(GetLogAnalyticsObjectCollectionRulePlainArgs args) {
        return getLogAnalyticsObjectCollectionRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets a configured object storage based collection rule by given id
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRule = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs.builder()
     *             .logAnalyticsObjectCollectionRuleId(testLogAnalyticsObjectCollectionRuleOciLogAnalyticsLogAnalyticsObjectCollectionRule.id())
     *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsObjectCollectionRuleResult> getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsObjectCollectionRule:getLogAnalyticsObjectCollectionRule", TypeShape.of(GetLogAnalyticsObjectCollectionRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets a configured object storage based collection rule by given id
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRule = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs.builder()
     *             .logAnalyticsObjectCollectionRuleId(testLogAnalyticsObjectCollectionRuleOciLogAnalyticsLogAnalyticsObjectCollectionRule.id())
     *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsObjectCollectionRuleResult> getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsObjectCollectionRule:getLogAnalyticsObjectCollectionRule", TypeShape.of(GetLogAnalyticsObjectCollectionRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets a configured object storage based collection rule by given id
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRule = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRule(GetLogAnalyticsObjectCollectionRuleArgs.builder()
     *             .logAnalyticsObjectCollectionRuleId(testLogAnalyticsObjectCollectionRuleOciLogAnalyticsLogAnalyticsObjectCollectionRule.id())
     *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsObjectCollectionRuleResult> getLogAnalyticsObjectCollectionRulePlain(GetLogAnalyticsObjectCollectionRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsObjectCollectionRule:getLogAnalyticsObjectCollectionRule", TypeShape.of(GetLogAnalyticsObjectCollectionRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Object Collection Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets list of configuration details of Object Storage based collection rules.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRules = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
     *             .name(logAnalyticsObjectCollectionRuleName)
     *             .state(logAnalyticsObjectCollectionRuleState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsObjectCollectionRulesResult> getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs args) {
        return getLogAnalyticsObjectCollectionRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Object Collection Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets list of configuration details of Object Storage based collection rules.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRules = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
     *             .name(logAnalyticsObjectCollectionRuleName)
     *             .state(logAnalyticsObjectCollectionRuleState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsObjectCollectionRulesResult> getLogAnalyticsObjectCollectionRulesPlain(GetLogAnalyticsObjectCollectionRulesPlainArgs args) {
        return getLogAnalyticsObjectCollectionRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Log Analytics Object Collection Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets list of configuration details of Object Storage based collection rules.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRules = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
     *             .name(logAnalyticsObjectCollectionRuleName)
     *             .state(logAnalyticsObjectCollectionRuleState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsObjectCollectionRulesResult> getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsObjectCollectionRules:getLogAnalyticsObjectCollectionRules", TypeShape.of(GetLogAnalyticsObjectCollectionRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Object Collection Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets list of configuration details of Object Storage based collection rules.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRules = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
     *             .name(logAnalyticsObjectCollectionRuleName)
     *             .state(logAnalyticsObjectCollectionRuleState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsObjectCollectionRulesResult> getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsObjectCollectionRules:getLogAnalyticsObjectCollectionRules", TypeShape.of(GetLogAnalyticsObjectCollectionRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Log Analytics Object Collection Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets list of configuration details of Object Storage based collection rules.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsObjectCollectionRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsObjectCollectionRules = LogAnalyticsFunctions.getLogAnalyticsObjectCollectionRules(GetLogAnalyticsObjectCollectionRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
     *             .name(logAnalyticsObjectCollectionRuleName)
     *             .state(logAnalyticsObjectCollectionRuleState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsObjectCollectionRulesResult> getLogAnalyticsObjectCollectionRulesPlain(GetLogAnalyticsObjectCollectionRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsObjectCollectionRules:getLogAnalyticsObjectCollectionRules", TypeShape.of(GetLogAnalyticsObjectCollectionRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsPreference = LogAnalyticsFunctions.getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs.builder()
     *             .namespace(logAnalyticsPreferenceNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsPreferenceResult> getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs args) {
        return getLogAnalyticsPreference(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsPreference = LogAnalyticsFunctions.getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs.builder()
     *             .namespace(logAnalyticsPreferenceNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsPreferenceResult> getLogAnalyticsPreferencePlain(GetLogAnalyticsPreferencePlainArgs args) {
        return getLogAnalyticsPreferencePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsPreference = LogAnalyticsFunctions.getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs.builder()
     *             .namespace(logAnalyticsPreferenceNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsPreferenceResult> getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsPreference:getLogAnalyticsPreference", TypeShape.of(GetLogAnalyticsPreferenceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsPreference = LogAnalyticsFunctions.getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs.builder()
     *             .namespace(logAnalyticsPreferenceNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsPreferenceResult> getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsPreference:getLogAnalyticsPreference", TypeShape.of(GetLogAnalyticsPreferenceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Preference resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists the tenant preferences such as DEFAULT_HOMEPAGE and collection properties.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsPreferenceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsPreference = LogAnalyticsFunctions.getLogAnalyticsPreference(GetLogAnalyticsPreferenceArgs.builder()
     *             .namespace(logAnalyticsPreferenceNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsPreferenceResult> getLogAnalyticsPreferencePlain(GetLogAnalyticsPreferencePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsPreference:getLogAnalyticsPreference", TypeShape.of(GetLogAnalyticsPreferenceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of resources and their category assignments.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsResourceCategoriesList = LogAnalyticsFunctions.getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs.builder()
     *             .namespace(logAnalyticsResourceCategoriesListNamespace)
     *             .compartmentId(logAnalyticsResourceCategoriesCompartmentId)
     *             .resourceIds(logAnalyticsResourceCategoriesListResourceIds)
     *             .resourceTypes(logAnalyticsResourceCategoriesListResourceTypes)
     *             .resourceCategories(logAnalyticsResourceCategoriesListResourceCategories)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsResourceCategoriesListResult> getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs args) {
        return getLogAnalyticsResourceCategoriesList(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of resources and their category assignments.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsResourceCategoriesList = LogAnalyticsFunctions.getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs.builder()
     *             .namespace(logAnalyticsResourceCategoriesListNamespace)
     *             .compartmentId(logAnalyticsResourceCategoriesCompartmentId)
     *             .resourceIds(logAnalyticsResourceCategoriesListResourceIds)
     *             .resourceTypes(logAnalyticsResourceCategoriesListResourceTypes)
     *             .resourceCategories(logAnalyticsResourceCategoriesListResourceCategories)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsResourceCategoriesListResult> getLogAnalyticsResourceCategoriesListPlain(GetLogAnalyticsResourceCategoriesListPlainArgs args) {
        return getLogAnalyticsResourceCategoriesListPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of resources and their category assignments.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsResourceCategoriesList = LogAnalyticsFunctions.getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs.builder()
     *             .namespace(logAnalyticsResourceCategoriesListNamespace)
     *             .compartmentId(logAnalyticsResourceCategoriesCompartmentId)
     *             .resourceIds(logAnalyticsResourceCategoriesListResourceIds)
     *             .resourceTypes(logAnalyticsResourceCategoriesListResourceTypes)
     *             .resourceCategories(logAnalyticsResourceCategoriesListResourceCategories)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsResourceCategoriesListResult> getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", TypeShape.of(GetLogAnalyticsResourceCategoriesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of resources and their category assignments.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsResourceCategoriesList = LogAnalyticsFunctions.getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs.builder()
     *             .namespace(logAnalyticsResourceCategoriesListNamespace)
     *             .compartmentId(logAnalyticsResourceCategoriesCompartmentId)
     *             .resourceIds(logAnalyticsResourceCategoriesListResourceIds)
     *             .resourceTypes(logAnalyticsResourceCategoriesListResourceTypes)
     *             .resourceCategories(logAnalyticsResourceCategoriesListResourceCategories)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsResourceCategoriesListResult> getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", TypeShape.of(GetLogAnalyticsResourceCategoriesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about Resource Categories in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of resources and their category assignments.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsResourceCategoriesListArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsResourceCategoriesList = LogAnalyticsFunctions.getLogAnalyticsResourceCategoriesList(GetLogAnalyticsResourceCategoriesListArgs.builder()
     *             .namespace(logAnalyticsResourceCategoriesListNamespace)
     *             .compartmentId(logAnalyticsResourceCategoriesCompartmentId)
     *             .resourceIds(logAnalyticsResourceCategoriesListResourceIds)
     *             .resourceTypes(logAnalyticsResourceCategoriesListResourceTypes)
     *             .resourceCategories(logAnalyticsResourceCategoriesListResourceCategories)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsResourceCategoriesListResult> getLogAnalyticsResourceCategoriesListPlain(GetLogAnalyticsResourceCategoriesListPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsResourceCategoriesList:getLogAnalyticsResourceCategoriesList", TypeShape.of(GetLogAnalyticsResourceCategoriesListResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Unprocessed Data Bucket resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API retrieves details of the configured bucket that stores unprocessed payloads.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsUnprocessedDataBucket = LogAnalyticsFunctions.getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs.builder()
     *             .namespace(logAnalyticsUnprocessedDataBucketNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsUnprocessedDataBucketResult> getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs args) {
        return getLogAnalyticsUnprocessedDataBucket(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Unprocessed Data Bucket resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API retrieves details of the configured bucket that stores unprocessed payloads.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsUnprocessedDataBucket = LogAnalyticsFunctions.getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs.builder()
     *             .namespace(logAnalyticsUnprocessedDataBucketNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsUnprocessedDataBucketResult> getLogAnalyticsUnprocessedDataBucketPlain(GetLogAnalyticsUnprocessedDataBucketPlainArgs args) {
        return getLogAnalyticsUnprocessedDataBucketPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Analytics Unprocessed Data Bucket resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API retrieves details of the configured bucket that stores unprocessed payloads.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsUnprocessedDataBucket = LogAnalyticsFunctions.getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs.builder()
     *             .namespace(logAnalyticsUnprocessedDataBucketNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsUnprocessedDataBucketResult> getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsUnprocessedDataBucket:getLogAnalyticsUnprocessedDataBucket", TypeShape.of(GetLogAnalyticsUnprocessedDataBucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Unprocessed Data Bucket resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API retrieves details of the configured bucket that stores unprocessed payloads.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsUnprocessedDataBucket = LogAnalyticsFunctions.getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs.builder()
     *             .namespace(logAnalyticsUnprocessedDataBucketNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogAnalyticsUnprocessedDataBucketResult> getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogAnalyticsUnprocessedDataBucket:getLogAnalyticsUnprocessedDataBucket", TypeShape.of(GetLogAnalyticsUnprocessedDataBucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Analytics Unprocessed Data Bucket resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API retrieves details of the configured bucket that stores unprocessed payloads.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogAnalyticsUnprocessedDataBucketArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogAnalyticsUnprocessedDataBucket = LogAnalyticsFunctions.getLogAnalyticsUnprocessedDataBucket(GetLogAnalyticsUnprocessedDataBucketArgs.builder()
     *             .namespace(logAnalyticsUnprocessedDataBucketNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogAnalyticsUnprocessedDataBucketResult> getLogAnalyticsUnprocessedDataBucketPlain(GetLogAnalyticsUnprocessedDataBucketPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogAnalyticsUnprocessedDataBucket:getLogAnalyticsUnprocessedDataBucket", TypeShape.of(GetLogAnalyticsUnprocessedDataBucketResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Sets Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the count of distinct log sets.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogSetsCount = LogAnalyticsFunctions.getLogSetsCount(GetLogSetsCountArgs.builder()
     *             .namespace(logSetsCountNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogSetsCountResult> getLogSetsCount(GetLogSetsCountArgs args) {
        return getLogSetsCount(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Sets Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the count of distinct log sets.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogSetsCount = LogAnalyticsFunctions.getLogSetsCount(GetLogSetsCountArgs.builder()
     *             .namespace(logSetsCountNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogSetsCountResult> getLogSetsCountPlain(GetLogSetsCountPlainArgs args) {
        return getLogSetsCountPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Log Sets Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the count of distinct log sets.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogSetsCount = LogAnalyticsFunctions.getLogSetsCount(GetLogSetsCountArgs.builder()
     *             .namespace(logSetsCountNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogSetsCountResult> getLogSetsCount(GetLogSetsCountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogSetsCount:getLogSetsCount", TypeShape.of(GetLogSetsCountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Sets Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the count of distinct log sets.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogSetsCount = LogAnalyticsFunctions.getLogSetsCount(GetLogSetsCountArgs.builder()
     *             .namespace(logSetsCountNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetLogSetsCountResult> getLogSetsCount(GetLogSetsCountArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getLogSetsCount:getLogSetsCount", TypeShape.of(GetLogSetsCountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Log Sets Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the count of distinct log sets.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetLogSetsCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testLogSetsCount = LogAnalyticsFunctions.getLogSetsCount(GetLogSetsCountArgs.builder()
     *             .namespace(logSetsCountNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetLogSetsCountResult> getLogSetsCountPlain(GetLogSetsCountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getLogSetsCount:getLogSetsCount", TypeShape.of(GetLogSetsCountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespace = LogAnalyticsFunctions.getNamespace(GetNamespaceArgs.builder()
     *             .namespace(namespaceNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceResult> getNamespace(GetNamespaceArgs args) {
        return getNamespace(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespace = LogAnalyticsFunctions.getNamespace(GetNamespaceArgs.builder()
     *             .namespace(namespaceNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceResult> getNamespacePlain(GetNamespacePlainArgs args) {
        return getNamespacePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespace = LogAnalyticsFunctions.getNamespace(GetNamespaceArgs.builder()
     *             .namespace(namespaceNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceResult> getNamespace(GetNamespaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespace:getNamespace", TypeShape.of(GetNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespace = LogAnalyticsFunctions.getNamespace(GetNamespaceArgs.builder()
     *             .namespace(namespaceNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceResult> getNamespace(GetNamespaceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespace:getNamespace", TypeShape.of(GetNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the namespace details of a tenancy already onboarded in Logging Analytics Application
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespace = LogAnalyticsFunctions.getNamespace(GetNamespaceArgs.builder()
     *             .namespace(namespaceNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceResult> getNamespacePlain(GetNamespacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespace:getNamespace", TypeShape.of(GetNamespaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Effective Properties in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of effective properties for the specified resource.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceEffectiveProperties = LogAnalyticsFunctions.getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs.builder()
     *             .namespace(namespaceEffectivePropertyNamespace)
     *             .agentId(testAgent.id())
     *             .entityId(testLogAnalyticsEntity.id())
     *             .isIncludePatterns(namespaceEffectivePropertyIsIncludePatterns)
     *             .name(namespaceEffectivePropertyName)
     *             .patternId(testPattern.id())
     *             .patternIdLong(namespaceEffectivePropertyPatternIdLong)
     *             .sourceName(namespaceEffectivePropertySourceName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceEffectivePropertiesResult> getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs args) {
        return getNamespaceEffectiveProperties(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Effective Properties in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of effective properties for the specified resource.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceEffectiveProperties = LogAnalyticsFunctions.getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs.builder()
     *             .namespace(namespaceEffectivePropertyNamespace)
     *             .agentId(testAgent.id())
     *             .entityId(testLogAnalyticsEntity.id())
     *             .isIncludePatterns(namespaceEffectivePropertyIsIncludePatterns)
     *             .name(namespaceEffectivePropertyName)
     *             .patternId(testPattern.id())
     *             .patternIdLong(namespaceEffectivePropertyPatternIdLong)
     *             .sourceName(namespaceEffectivePropertySourceName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceEffectivePropertiesResult> getNamespaceEffectivePropertiesPlain(GetNamespaceEffectivePropertiesPlainArgs args) {
        return getNamespaceEffectivePropertiesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Effective Properties in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of effective properties for the specified resource.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceEffectiveProperties = LogAnalyticsFunctions.getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs.builder()
     *             .namespace(namespaceEffectivePropertyNamespace)
     *             .agentId(testAgent.id())
     *             .entityId(testLogAnalyticsEntity.id())
     *             .isIncludePatterns(namespaceEffectivePropertyIsIncludePatterns)
     *             .name(namespaceEffectivePropertyName)
     *             .patternId(testPattern.id())
     *             .patternIdLong(namespaceEffectivePropertyPatternIdLong)
     *             .sourceName(namespaceEffectivePropertySourceName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceEffectivePropertiesResult> getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceEffectiveProperties:getNamespaceEffectiveProperties", TypeShape.of(GetNamespaceEffectivePropertiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Effective Properties in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of effective properties for the specified resource.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceEffectiveProperties = LogAnalyticsFunctions.getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs.builder()
     *             .namespace(namespaceEffectivePropertyNamespace)
     *             .agentId(testAgent.id())
     *             .entityId(testLogAnalyticsEntity.id())
     *             .isIncludePatterns(namespaceEffectivePropertyIsIncludePatterns)
     *             .name(namespaceEffectivePropertyName)
     *             .patternId(testPattern.id())
     *             .patternIdLong(namespaceEffectivePropertyPatternIdLong)
     *             .sourceName(namespaceEffectivePropertySourceName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceEffectivePropertiesResult> getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceEffectiveProperties:getNamespaceEffectiveProperties", TypeShape.of(GetNamespaceEffectivePropertiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Effective Properties in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of effective properties for the specified resource.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceEffectivePropertiesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceEffectiveProperties = LogAnalyticsFunctions.getNamespaceEffectiveProperties(GetNamespaceEffectivePropertiesArgs.builder()
     *             .namespace(namespaceEffectivePropertyNamespace)
     *             .agentId(testAgent.id())
     *             .entityId(testLogAnalyticsEntity.id())
     *             .isIncludePatterns(namespaceEffectivePropertyIsIncludePatterns)
     *             .name(namespaceEffectivePropertyName)
     *             .patternId(testPattern.id())
     *             .patternIdLong(namespaceEffectivePropertyPatternIdLong)
     *             .sourceName(namespaceEffectivePropertySourceName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceEffectivePropertiesResult> getNamespaceEffectivePropertiesPlain(GetNamespaceEffectivePropertiesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceEffectiveProperties:getNamespaceEffectiveProperties", TypeShape.of(GetNamespaceEffectivePropertiesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Field Usage resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets usage information about the field with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceFieldUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceFieldUsage = LogAnalyticsFunctions.getNamespaceFieldUsage(GetNamespaceFieldUsageArgs.builder()
     *             .fieldName(namespaceFieldUsageFieldName)
     *             .namespace(namespaceFieldUsageNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceFieldUsageResult> getNamespaceFieldUsage(GetNamespaceFieldUsageArgs args) {
        return getNamespaceFieldUsage(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Field Usage resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets usage information about the field with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceFieldUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceFieldUsage = LogAnalyticsFunctions.getNamespaceFieldUsage(GetNamespaceFieldUsageArgs.builder()
     *             .fieldName(namespaceFieldUsageFieldName)
     *             .namespace(namespaceFieldUsageNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceFieldUsageResult> getNamespaceFieldUsagePlain(GetNamespaceFieldUsagePlainArgs args) {
        return getNamespaceFieldUsagePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Field Usage resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets usage information about the field with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceFieldUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceFieldUsage = LogAnalyticsFunctions.getNamespaceFieldUsage(GetNamespaceFieldUsageArgs.builder()
     *             .fieldName(namespaceFieldUsageFieldName)
     *             .namespace(namespaceFieldUsageNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceFieldUsageResult> getNamespaceFieldUsage(GetNamespaceFieldUsageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceFieldUsage:getNamespaceFieldUsage", TypeShape.of(GetNamespaceFieldUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Field Usage resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets usage information about the field with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceFieldUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceFieldUsage = LogAnalyticsFunctions.getNamespaceFieldUsage(GetNamespaceFieldUsageArgs.builder()
     *             .fieldName(namespaceFieldUsageFieldName)
     *             .namespace(namespaceFieldUsageNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceFieldUsageResult> getNamespaceFieldUsage(GetNamespaceFieldUsageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceFieldUsage:getNamespaceFieldUsage", TypeShape.of(GetNamespaceFieldUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Field Usage resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets usage information about the field with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceFieldUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceFieldUsage = LogAnalyticsFunctions.getNamespaceFieldUsage(GetNamespaceFieldUsageArgs.builder()
     *             .fieldName(namespaceFieldUsageFieldName)
     *             .namespace(namespaceFieldUsageNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceFieldUsageResult> getNamespaceFieldUsagePlain(GetNamespaceFieldUsagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceFieldUsage:getNamespaceFieldUsage", TypeShape.of(GetNamespaceFieldUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRule = LogAnalyticsFunctions.getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs.builder()
     *             .ingestTimeRuleId(testRule.id())
     *             .namespace(namespaceIngestTimeRuleNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceIngestTimeRuleResult> getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs args) {
        return getNamespaceIngestTimeRule(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRule = LogAnalyticsFunctions.getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs.builder()
     *             .ingestTimeRuleId(testRule.id())
     *             .namespace(namespaceIngestTimeRuleNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceIngestTimeRuleResult> getNamespaceIngestTimeRulePlain(GetNamespaceIngestTimeRulePlainArgs args) {
        return getNamespaceIngestTimeRulePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRule = LogAnalyticsFunctions.getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs.builder()
     *             .ingestTimeRuleId(testRule.id())
     *             .namespace(namespaceIngestTimeRuleNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceIngestTimeRuleResult> getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceIngestTimeRule:getNamespaceIngestTimeRule", TypeShape.of(GetNamespaceIngestTimeRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRule = LogAnalyticsFunctions.getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs.builder()
     *             .ingestTimeRuleId(testRule.id())
     *             .namespace(namespaceIngestTimeRuleNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceIngestTimeRuleResult> getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceIngestTimeRule:getNamespaceIngestTimeRule", TypeShape.of(GetNamespaceIngestTimeRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the specified ingest time rule such as description, defined tags, and free-form tags.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRule = LogAnalyticsFunctions.getNamespaceIngestTimeRule(GetNamespaceIngestTimeRuleArgs.builder()
     *             .ingestTimeRuleId(testRule.id())
     *             .namespace(namespaceIngestTimeRuleNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceIngestTimeRuleResult> getNamespaceIngestTimeRulePlain(GetNamespaceIngestTimeRulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceIngestTimeRule:getNamespaceIngestTimeRule", TypeShape.of(GetNamespaceIngestTimeRuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Ingest Time Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules in a compartment. You may limit the number of rules, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRules = LogAnalyticsFunctions.getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceIngestTimeRuleNamespace)
     *             .conditionKind(namespaceIngestTimeRuleConditionKind)
     *             .displayName(namespaceIngestTimeRuleDisplayName)
     *             .fieldName(namespaceIngestTimeRuleFieldName)
     *             .fieldValue(namespaceIngestTimeRuleFieldValue)
     *             .state(namespaceIngestTimeRuleState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceIngestTimeRulesResult> getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs args) {
        return getNamespaceIngestTimeRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Ingest Time Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules in a compartment. You may limit the number of rules, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRules = LogAnalyticsFunctions.getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceIngestTimeRuleNamespace)
     *             .conditionKind(namespaceIngestTimeRuleConditionKind)
     *             .displayName(namespaceIngestTimeRuleDisplayName)
     *             .fieldName(namespaceIngestTimeRuleFieldName)
     *             .fieldValue(namespaceIngestTimeRuleFieldValue)
     *             .state(namespaceIngestTimeRuleState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceIngestTimeRulesResult> getNamespaceIngestTimeRulesPlain(GetNamespaceIngestTimeRulesPlainArgs args) {
        return getNamespaceIngestTimeRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Ingest Time Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules in a compartment. You may limit the number of rules, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRules = LogAnalyticsFunctions.getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceIngestTimeRuleNamespace)
     *             .conditionKind(namespaceIngestTimeRuleConditionKind)
     *             .displayName(namespaceIngestTimeRuleDisplayName)
     *             .fieldName(namespaceIngestTimeRuleFieldName)
     *             .fieldValue(namespaceIngestTimeRuleFieldValue)
     *             .state(namespaceIngestTimeRuleState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceIngestTimeRulesResult> getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceIngestTimeRules:getNamespaceIngestTimeRules", TypeShape.of(GetNamespaceIngestTimeRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Ingest Time Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules in a compartment. You may limit the number of rules, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRules = LogAnalyticsFunctions.getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceIngestTimeRuleNamespace)
     *             .conditionKind(namespaceIngestTimeRuleConditionKind)
     *             .displayName(namespaceIngestTimeRuleDisplayName)
     *             .fieldName(namespaceIngestTimeRuleFieldName)
     *             .fieldValue(namespaceIngestTimeRuleFieldValue)
     *             .state(namespaceIngestTimeRuleState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceIngestTimeRulesResult> getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceIngestTimeRules:getNamespaceIngestTimeRules", TypeShape.of(GetNamespaceIngestTimeRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Ingest Time Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules in a compartment. You may limit the number of rules, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceIngestTimeRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceIngestTimeRules = LogAnalyticsFunctions.getNamespaceIngestTimeRules(GetNamespaceIngestTimeRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceIngestTimeRuleNamespace)
     *             .conditionKind(namespaceIngestTimeRuleConditionKind)
     *             .displayName(namespaceIngestTimeRuleDisplayName)
     *             .fieldName(namespaceIngestTimeRuleFieldName)
     *             .fieldValue(namespaceIngestTimeRuleFieldValue)
     *             .state(namespaceIngestTimeRuleState)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceIngestTimeRulesResult> getNamespaceIngestTimeRulesPlain(GetNamespaceIngestTimeRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceIngestTimeRules:getNamespaceIngestTimeRules", TypeShape.of(GetNamespaceIngestTimeRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the lookup with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceLookupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceLookup = LogAnalyticsFunctions.getNamespaceLookup(GetNamespaceLookupArgs.builder()
     *             .lookupName(namespaceLookupLookupName)
     *             .namespace(namespaceLookupNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceLookupResult> getNamespaceLookup(GetNamespaceLookupArgs args) {
        return getNamespaceLookup(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the lookup with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceLookupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceLookup = LogAnalyticsFunctions.getNamespaceLookup(GetNamespaceLookupArgs.builder()
     *             .lookupName(namespaceLookupLookupName)
     *             .namespace(namespaceLookupNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceLookupResult> getNamespaceLookupPlain(GetNamespaceLookupPlainArgs args) {
        return getNamespaceLookupPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the lookup with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceLookupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceLookup = LogAnalyticsFunctions.getNamespaceLookup(GetNamespaceLookupArgs.builder()
     *             .lookupName(namespaceLookupLookupName)
     *             .namespace(namespaceLookupNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceLookupResult> getNamespaceLookup(GetNamespaceLookupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceLookup:getNamespaceLookup", TypeShape.of(GetNamespaceLookupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the lookup with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceLookupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceLookup = LogAnalyticsFunctions.getNamespaceLookup(GetNamespaceLookupArgs.builder()
     *             .lookupName(namespaceLookupLookupName)
     *             .namespace(namespaceLookupNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceLookupResult> getNamespaceLookup(GetNamespaceLookupArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceLookup:getNamespaceLookup", TypeShape.of(GetNamespaceLookupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Lookup resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the lookup with the specified name.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceLookupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceLookup = LogAnalyticsFunctions.getNamespaceLookup(GetNamespaceLookupArgs.builder()
     *             .lookupName(namespaceLookupLookupName)
     *             .namespace(namespaceLookupNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceLookupResult> getNamespaceLookupPlain(GetNamespaceLookupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceLookup:getNamespaceLookup", TypeShape.of(GetNamespaceLookupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Parser Actions in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of parser actions. You may limit the number of results and provide sorting order.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceParserActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceParserActions = LogAnalyticsFunctions.getNamespaceParserActions(GetNamespaceParserActionsArgs.builder()
     *             .namespace(namespaceParserActionNamespace)
     *             .actionDisplayText(namespaceParserActionActionDisplayText)
     *             .name(namespaceParserActionName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceParserActionsResult> getNamespaceParserActions(GetNamespaceParserActionsArgs args) {
        return getNamespaceParserActions(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Parser Actions in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of parser actions. You may limit the number of results and provide sorting order.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceParserActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceParserActions = LogAnalyticsFunctions.getNamespaceParserActions(GetNamespaceParserActionsArgs.builder()
     *             .namespace(namespaceParserActionNamespace)
     *             .actionDisplayText(namespaceParserActionActionDisplayText)
     *             .name(namespaceParserActionName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceParserActionsResult> getNamespaceParserActionsPlain(GetNamespaceParserActionsPlainArgs args) {
        return getNamespaceParserActionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Parser Actions in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of parser actions. You may limit the number of results and provide sorting order.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceParserActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceParserActions = LogAnalyticsFunctions.getNamespaceParserActions(GetNamespaceParserActionsArgs.builder()
     *             .namespace(namespaceParserActionNamespace)
     *             .actionDisplayText(namespaceParserActionActionDisplayText)
     *             .name(namespaceParserActionName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceParserActionsResult> getNamespaceParserActions(GetNamespaceParserActionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceParserActions:getNamespaceParserActions", TypeShape.of(GetNamespaceParserActionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Parser Actions in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of parser actions. You may limit the number of results and provide sorting order.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceParserActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceParserActions = LogAnalyticsFunctions.getNamespaceParserActions(GetNamespaceParserActionsArgs.builder()
     *             .namespace(namespaceParserActionNamespace)
     *             .actionDisplayText(namespaceParserActionActionDisplayText)
     *             .name(namespaceParserActionName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceParserActionsResult> getNamespaceParserActions(GetNamespaceParserActionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceParserActions:getNamespaceParserActions", TypeShape.of(GetNamespaceParserActionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Parser Actions in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of parser actions. You may limit the number of results and provide sorting order.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceParserActionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceParserActions = LogAnalyticsFunctions.getNamespaceParserActions(GetNamespaceParserActionsArgs.builder()
     *             .namespace(namespaceParserActionNamespace)
     *             .actionDisplayText(namespaceParserActionActionDisplayText)
     *             .name(namespaceParserActionName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceParserActionsResult> getNamespaceParserActionsPlain(GetNamespaceParserActionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceParserActions:getNamespaceParserActions", TypeShape.of(GetNamespaceParserActionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of properties along with their metadata.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespacePropertiesMetadata = LogAnalyticsFunctions.getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs.builder()
     *             .namespace(namespacePropertiesMetadataNamespace)
     *             .constraints(namespacePropertiesMetadataConstraints)
     *             .displayText(namespacePropertiesMetadataDisplayText)
     *             .level(namespacePropertiesMetadataLevel)
     *             .name(namespacePropertiesMetadataName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespacePropertiesMetadataResult> getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs args) {
        return getNamespacePropertiesMetadata(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of properties along with their metadata.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespacePropertiesMetadata = LogAnalyticsFunctions.getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs.builder()
     *             .namespace(namespacePropertiesMetadataNamespace)
     *             .constraints(namespacePropertiesMetadataConstraints)
     *             .displayText(namespacePropertiesMetadataDisplayText)
     *             .level(namespacePropertiesMetadataLevel)
     *             .name(namespacePropertiesMetadataName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespacePropertiesMetadataResult> getNamespacePropertiesMetadataPlain(GetNamespacePropertiesMetadataPlainArgs args) {
        return getNamespacePropertiesMetadataPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of properties along with their metadata.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespacePropertiesMetadata = LogAnalyticsFunctions.getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs.builder()
     *             .namespace(namespacePropertiesMetadataNamespace)
     *             .constraints(namespacePropertiesMetadataConstraints)
     *             .displayText(namespacePropertiesMetadataDisplayText)
     *             .level(namespacePropertiesMetadataLevel)
     *             .name(namespacePropertiesMetadataName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespacePropertiesMetadataResult> getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespacePropertiesMetadata:getNamespacePropertiesMetadata", TypeShape.of(GetNamespacePropertiesMetadataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of properties along with their metadata.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespacePropertiesMetadata = LogAnalyticsFunctions.getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs.builder()
     *             .namespace(namespacePropertiesMetadataNamespace)
     *             .constraints(namespacePropertiesMetadataConstraints)
     *             .displayText(namespacePropertiesMetadataDisplayText)
     *             .level(namespacePropertiesMetadataLevel)
     *             .name(namespacePropertiesMetadataName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespacePropertiesMetadataResult> getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespacePropertiesMetadata:getNamespacePropertiesMetadata", TypeShape.of(GetNamespacePropertiesMetadataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Properties Metadata in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of properties along with their metadata.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacePropertiesMetadataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespacePropertiesMetadata = LogAnalyticsFunctions.getNamespacePropertiesMetadata(GetNamespacePropertiesMetadataArgs.builder()
     *             .namespace(namespacePropertiesMetadataNamespace)
     *             .constraints(namespacePropertiesMetadataConstraints)
     *             .displayText(namespacePropertiesMetadataDisplayText)
     *             .level(namespacePropertiesMetadataLevel)
     *             .name(namespacePropertiesMetadataName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespacePropertiesMetadataResult> getNamespacePropertiesMetadataPlain(GetNamespacePropertiesMetadataPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespacePropertiesMetadata:getNamespacePropertiesMetadata", TypeShape.of(GetNamespacePropertiesMetadataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRules = LogAnalyticsFunctions.getNamespaceRules(GetNamespaceRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceRuleNamespace)
     *             .displayName(namespaceRuleDisplayName)
     *             .kind(namespaceRuleKind)
     *             .state(namespaceRuleState)
     *             .targetService(namespaceRuleTargetService)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceRulesResult> getNamespaceRules(GetNamespaceRulesArgs args) {
        return getNamespaceRules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRules = LogAnalyticsFunctions.getNamespaceRules(GetNamespaceRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceRuleNamespace)
     *             .displayName(namespaceRuleDisplayName)
     *             .kind(namespaceRuleKind)
     *             .state(namespaceRuleState)
     *             .targetService(namespaceRuleTargetService)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceRulesResult> getNamespaceRulesPlain(GetNamespaceRulesPlainArgs args) {
        return getNamespaceRulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRules = LogAnalyticsFunctions.getNamespaceRules(GetNamespaceRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceRuleNamespace)
     *             .displayName(namespaceRuleDisplayName)
     *             .kind(namespaceRuleKind)
     *             .state(namespaceRuleState)
     *             .targetService(namespaceRuleTargetService)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceRulesResult> getNamespaceRules(GetNamespaceRulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceRules:getNamespaceRules", TypeShape.of(GetNamespaceRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRules = LogAnalyticsFunctions.getNamespaceRules(GetNamespaceRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceRuleNamespace)
     *             .displayName(namespaceRuleDisplayName)
     *             .kind(namespaceRuleKind)
     *             .state(namespaceRuleState)
     *             .targetService(namespaceRuleTargetService)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceRulesResult> getNamespaceRules(GetNamespaceRulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceRules:getNamespaceRules", TypeShape.of(GetNamespaceRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Rules in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of ingest time rules and scheduled tasks in a compartment. You may limit the number of items returned, provide sorting options, and filter the results.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRules = LogAnalyticsFunctions.getNamespaceRules(GetNamespaceRulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceRuleNamespace)
     *             .displayName(namespaceRuleDisplayName)
     *             .kind(namespaceRuleKind)
     *             .state(namespaceRuleState)
     *             .targetService(namespaceRuleTargetService)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceRulesResult> getNamespaceRulesPlain(GetNamespaceRulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceRules:getNamespaceRules", TypeShape.of(GetNamespaceRulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Rules Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of detection rules in a compartment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRulesSummary = LogAnalyticsFunctions.getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceRulesSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceRulesSummaryResult> getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs args) {
        return getNamespaceRulesSummary(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Rules Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of detection rules in a compartment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRulesSummary = LogAnalyticsFunctions.getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceRulesSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceRulesSummaryResult> getNamespaceRulesSummaryPlain(GetNamespaceRulesSummaryPlainArgs args) {
        return getNamespaceRulesSummaryPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Rules Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of detection rules in a compartment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRulesSummary = LogAnalyticsFunctions.getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceRulesSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceRulesSummaryResult> getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceRulesSummary:getNamespaceRulesSummary", TypeShape.of(GetNamespaceRulesSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Rules Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of detection rules in a compartment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRulesSummary = LogAnalyticsFunctions.getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceRulesSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceRulesSummaryResult> getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceRulesSummary:getNamespaceRulesSummary", TypeShape.of(GetNamespaceRulesSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Rules Summary resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns the count of detection rules in a compartment.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceRulesSummaryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceRulesSummary = LogAnalyticsFunctions.getNamespaceRulesSummary(GetNamespaceRulesSummaryArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceRulesSummaryNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceRulesSummaryResult> getNamespaceRulesSummaryPlain(GetNamespaceRulesSummaryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceRulesSummary:getNamespaceRulesSummary", TypeShape.of(GetNamespaceRulesSummaryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Get the scheduled task for the specified task identifier.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTask = LogAnalyticsFunctions.getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs.builder()
     *             .namespace(namespaceScheduledTaskNamespace)
     *             .scheduledTaskId(testScheduledTask.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceScheduledTaskResult> getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs args) {
        return getNamespaceScheduledTask(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Get the scheduled task for the specified task identifier.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTask = LogAnalyticsFunctions.getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs.builder()
     *             .namespace(namespaceScheduledTaskNamespace)
     *             .scheduledTaskId(testScheduledTask.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceScheduledTaskResult> getNamespaceScheduledTaskPlain(GetNamespaceScheduledTaskPlainArgs args) {
        return getNamespaceScheduledTaskPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Get the scheduled task for the specified task identifier.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTask = LogAnalyticsFunctions.getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs.builder()
     *             .namespace(namespaceScheduledTaskNamespace)
     *             .scheduledTaskId(testScheduledTask.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceScheduledTaskResult> getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceScheduledTask:getNamespaceScheduledTask", TypeShape.of(GetNamespaceScheduledTaskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Get the scheduled task for the specified task identifier.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTask = LogAnalyticsFunctions.getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs.builder()
     *             .namespace(namespaceScheduledTaskNamespace)
     *             .scheduledTaskId(testScheduledTask.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceScheduledTaskResult> getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceScheduledTask:getNamespaceScheduledTask", TypeShape.of(GetNamespaceScheduledTaskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Scheduled Task resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Get the scheduled task for the specified task identifier.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTaskArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTask = LogAnalyticsFunctions.getNamespaceScheduledTask(GetNamespaceScheduledTaskArgs.builder()
     *             .namespace(namespaceScheduledTaskNamespace)
     *             .scheduledTaskId(testScheduledTask.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceScheduledTaskResult> getNamespaceScheduledTaskPlain(GetNamespaceScheduledTaskPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceScheduledTask:getNamespaceScheduledTask", TypeShape.of(GetNamespaceScheduledTaskResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists scheduled tasks.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTasks = LogAnalyticsFunctions.getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceScheduledTaskNamespace)
     *             .displayName(namespaceScheduledTaskDisplayName)
     *             .targetService(namespaceScheduledTaskTargetService)
     *             .taskType(namespaceScheduledTaskTaskType)
     *             .templateId(testTemplate.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceScheduledTasksResult> getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs args) {
        return getNamespaceScheduledTasks(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists scheduled tasks.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTasks = LogAnalyticsFunctions.getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceScheduledTaskNamespace)
     *             .displayName(namespaceScheduledTaskDisplayName)
     *             .targetService(namespaceScheduledTaskTargetService)
     *             .taskType(namespaceScheduledTaskTaskType)
     *             .templateId(testTemplate.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceScheduledTasksResult> getNamespaceScheduledTasksPlain(GetNamespaceScheduledTasksPlainArgs args) {
        return getNamespaceScheduledTasksPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists scheduled tasks.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTasks = LogAnalyticsFunctions.getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceScheduledTaskNamespace)
     *             .displayName(namespaceScheduledTaskDisplayName)
     *             .targetService(namespaceScheduledTaskTargetService)
     *             .taskType(namespaceScheduledTaskTaskType)
     *             .templateId(testTemplate.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceScheduledTasksResult> getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceScheduledTasks:getNamespaceScheduledTasks", TypeShape.of(GetNamespaceScheduledTasksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists scheduled tasks.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTasks = LogAnalyticsFunctions.getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceScheduledTaskNamespace)
     *             .displayName(namespaceScheduledTaskDisplayName)
     *             .targetService(namespaceScheduledTaskTargetService)
     *             .taskType(namespaceScheduledTaskTaskType)
     *             .templateId(testTemplate.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceScheduledTasksResult> getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceScheduledTasks:getNamespaceScheduledTasks", TypeShape.of(GetNamespaceScheduledTasksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Scheduled Tasks in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Lists scheduled tasks.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceScheduledTasks = LogAnalyticsFunctions.getNamespaceScheduledTasks(GetNamespaceScheduledTasksArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceScheduledTaskNamespace)
     *             .displayName(namespaceScheduledTaskDisplayName)
     *             .targetService(namespaceScheduledTaskTargetService)
     *             .taskType(namespaceScheduledTaskTaskType)
     *             .templateId(testTemplate.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceScheduledTasksResult> getNamespaceScheduledTasksPlain(GetNamespaceScheduledTasksPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceScheduledTasks:getNamespaceScheduledTasks", TypeShape.of(GetNamespaceScheduledTasksResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the storage configuration of a tenancy
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageArchivalConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageArchivalConfig = LogAnalyticsFunctions.getNamespaceStorageArchivalConfig(GetNamespaceStorageArchivalConfigArgs.builder()
     *             .namespace(namespaceStorageArchivalConfigNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageArchivalConfigResult> getNamespaceStorageArchivalConfig(GetNamespaceStorageArchivalConfigArgs args) {
        return getNamespaceStorageArchivalConfig(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the storage configuration of a tenancy
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageArchivalConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageArchivalConfig = LogAnalyticsFunctions.getNamespaceStorageArchivalConfig(GetNamespaceStorageArchivalConfigArgs.builder()
     *             .namespace(namespaceStorageArchivalConfigNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceStorageArchivalConfigResult> getNamespaceStorageArchivalConfigPlain(GetNamespaceStorageArchivalConfigPlainArgs args) {
        return getNamespaceStorageArchivalConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the storage configuration of a tenancy
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageArchivalConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageArchivalConfig = LogAnalyticsFunctions.getNamespaceStorageArchivalConfig(GetNamespaceStorageArchivalConfigArgs.builder()
     *             .namespace(namespaceStorageArchivalConfigNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageArchivalConfigResult> getNamespaceStorageArchivalConfig(GetNamespaceStorageArchivalConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageArchivalConfig:getNamespaceStorageArchivalConfig", TypeShape.of(GetNamespaceStorageArchivalConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the storage configuration of a tenancy
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageArchivalConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageArchivalConfig = LogAnalyticsFunctions.getNamespaceStorageArchivalConfig(GetNamespaceStorageArchivalConfigArgs.builder()
     *             .namespace(namespaceStorageArchivalConfigNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageArchivalConfigResult> getNamespaceStorageArchivalConfig(GetNamespaceStorageArchivalConfigArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageArchivalConfig:getNamespaceStorageArchivalConfig", TypeShape.of(GetNamespaceStorageArchivalConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Archival Config resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the storage configuration of a tenancy
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageArchivalConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageArchivalConfig = LogAnalyticsFunctions.getNamespaceStorageArchivalConfig(GetNamespaceStorageArchivalConfigArgs.builder()
     *             .namespace(namespaceStorageArchivalConfigNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceStorageArchivalConfigResult> getNamespaceStorageArchivalConfigPlain(GetNamespaceStorageArchivalConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceStorageArchivalConfig:getNamespaceStorageArchivalConfig", TypeShape.of(GetNamespaceStorageArchivalConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Encryption Key Info resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the list of customer owned encryption key info.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageEncryptionKeyInfo = LogAnalyticsFunctions.getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs.builder()
     *             .namespace(namespaceStorageEncryptionKeyInfoNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageEncryptionKeyInfoResult> getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs args) {
        return getNamespaceStorageEncryptionKeyInfo(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Encryption Key Info resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the list of customer owned encryption key info.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageEncryptionKeyInfo = LogAnalyticsFunctions.getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs.builder()
     *             .namespace(namespaceStorageEncryptionKeyInfoNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceStorageEncryptionKeyInfoResult> getNamespaceStorageEncryptionKeyInfoPlain(GetNamespaceStorageEncryptionKeyInfoPlainArgs args) {
        return getNamespaceStorageEncryptionKeyInfoPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Encryption Key Info resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the list of customer owned encryption key info.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageEncryptionKeyInfo = LogAnalyticsFunctions.getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs.builder()
     *             .namespace(namespaceStorageEncryptionKeyInfoNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageEncryptionKeyInfoResult> getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageEncryptionKeyInfo:getNamespaceStorageEncryptionKeyInfo", TypeShape.of(GetNamespaceStorageEncryptionKeyInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Encryption Key Info resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the list of customer owned encryption key info.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageEncryptionKeyInfo = LogAnalyticsFunctions.getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs.builder()
     *             .namespace(namespaceStorageEncryptionKeyInfoNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageEncryptionKeyInfoResult> getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageEncryptionKeyInfo:getNamespaceStorageEncryptionKeyInfo", TypeShape.of(GetNamespaceStorageEncryptionKeyInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Encryption Key Info resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API returns the list of customer owned encryption key info.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageEncryptionKeyInfoArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageEncryptionKeyInfo = LogAnalyticsFunctions.getNamespaceStorageEncryptionKeyInfo(GetNamespaceStorageEncryptionKeyInfoArgs.builder()
     *             .namespace(namespaceStorageEncryptionKeyInfoNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceStorageEncryptionKeyInfoResult> getNamespaceStorageEncryptionKeyInfoPlain(GetNamespaceStorageEncryptionKeyInfoPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceStorageEncryptionKeyInfo:getNamespaceStorageEncryptionKeyInfo", TypeShape.of(GetNamespaceStorageEncryptionKeyInfoResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Storage Overlapping Recalls in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the list of overlapping recalls made in the given timeframe
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageOverlappingRecalls = LogAnalyticsFunctions.getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs.builder()
     *             .namespace(namespaceStorageOverlappingRecallNamespace)
     *             .timeDataEnded(namespaceStorageOverlappingRecallTimeDataEnded)
     *             .timeDataStarted(namespaceStorageOverlappingRecallTimeDataStarted)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageOverlappingRecallsResult> getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs args) {
        return getNamespaceStorageOverlappingRecalls(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Storage Overlapping Recalls in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the list of overlapping recalls made in the given timeframe
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageOverlappingRecalls = LogAnalyticsFunctions.getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs.builder()
     *             .namespace(namespaceStorageOverlappingRecallNamespace)
     *             .timeDataEnded(namespaceStorageOverlappingRecallTimeDataEnded)
     *             .timeDataStarted(namespaceStorageOverlappingRecallTimeDataStarted)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceStorageOverlappingRecallsResult> getNamespaceStorageOverlappingRecallsPlain(GetNamespaceStorageOverlappingRecallsPlainArgs args) {
        return getNamespaceStorageOverlappingRecallsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Storage Overlapping Recalls in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the list of overlapping recalls made in the given timeframe
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageOverlappingRecalls = LogAnalyticsFunctions.getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs.builder()
     *             .namespace(namespaceStorageOverlappingRecallNamespace)
     *             .timeDataEnded(namespaceStorageOverlappingRecallTimeDataEnded)
     *             .timeDataStarted(namespaceStorageOverlappingRecallTimeDataStarted)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageOverlappingRecallsResult> getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageOverlappingRecalls:getNamespaceStorageOverlappingRecalls", TypeShape.of(GetNamespaceStorageOverlappingRecallsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Storage Overlapping Recalls in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the list of overlapping recalls made in the given timeframe
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageOverlappingRecalls = LogAnalyticsFunctions.getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs.builder()
     *             .namespace(namespaceStorageOverlappingRecallNamespace)
     *             .timeDataEnded(namespaceStorageOverlappingRecallTimeDataEnded)
     *             .timeDataStarted(namespaceStorageOverlappingRecallTimeDataStarted)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageOverlappingRecallsResult> getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageOverlappingRecalls:getNamespaceStorageOverlappingRecalls", TypeShape.of(GetNamespaceStorageOverlappingRecallsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Storage Overlapping Recalls in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the list of overlapping recalls made in the given timeframe
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageOverlappingRecallsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageOverlappingRecalls = LogAnalyticsFunctions.getNamespaceStorageOverlappingRecalls(GetNamespaceStorageOverlappingRecallsArgs.builder()
     *             .namespace(namespaceStorageOverlappingRecallNamespace)
     *             .timeDataEnded(namespaceStorageOverlappingRecallTimeDataEnded)
     *             .timeDataStarted(namespaceStorageOverlappingRecallTimeDataStarted)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceStorageOverlappingRecallsResult> getNamespaceStorageOverlappingRecallsPlain(GetNamespaceStorageOverlappingRecallsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceStorageOverlappingRecalls:getNamespaceStorageOverlappingRecalls", TypeShape.of(GetNamespaceStorageOverlappingRecallsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the number of recalls made and the maximum recalls that can be made
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecallCount = LogAnalyticsFunctions.getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs.builder()
     *             .namespace(namespaceStorageRecallCountNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageRecallCountResult> getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs args) {
        return getNamespaceStorageRecallCount(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the number of recalls made and the maximum recalls that can be made
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecallCount = LogAnalyticsFunctions.getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs.builder()
     *             .namespace(namespaceStorageRecallCountNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceStorageRecallCountResult> getNamespaceStorageRecallCountPlain(GetNamespaceStorageRecallCountPlainArgs args) {
        return getNamespaceStorageRecallCountPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the number of recalls made and the maximum recalls that can be made
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecallCount = LogAnalyticsFunctions.getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs.builder()
     *             .namespace(namespaceStorageRecallCountNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageRecallCountResult> getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageRecallCount:getNamespaceStorageRecallCount", TypeShape.of(GetNamespaceStorageRecallCountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the number of recalls made and the maximum recalls that can be made
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecallCount = LogAnalyticsFunctions.getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs.builder()
     *             .namespace(namespaceStorageRecallCountNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageRecallCountResult> getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageRecallCount:getNamespaceStorageRecallCount", TypeShape.of(GetNamespaceStorageRecallCountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Recall Count resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the number of recalls made and the maximum recalls that can be made
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecallCountArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecallCount = LogAnalyticsFunctions.getNamespaceStorageRecallCount(GetNamespaceStorageRecallCountArgs.builder()
     *             .namespace(namespaceStorageRecallCountNamespace)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceStorageRecallCountResult> getNamespaceStorageRecallCountPlain(GetNamespaceStorageRecallCountPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceStorageRecallCount:getNamespaceStorageRecallCount", TypeShape.of(GetNamespaceStorageRecallCountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the datasize of recalls for a given timeframe
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecalledDataSize = LogAnalyticsFunctions.getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs.builder()
     *             .namespace(namespaceStorageRecalledDataSizeNamespace)
     *             .timeDataEnded(namespaceStorageRecalledDataSizeTimeDataEnded)
     *             .timeDataStarted(namespaceStorageRecalledDataSizeTimeDataStarted)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageRecalledDataSizeResult> getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs args) {
        return getNamespaceStorageRecalledDataSize(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the datasize of recalls for a given timeframe
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecalledDataSize = LogAnalyticsFunctions.getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs.builder()
     *             .namespace(namespaceStorageRecalledDataSizeNamespace)
     *             .timeDataEnded(namespaceStorageRecalledDataSizeTimeDataEnded)
     *             .timeDataStarted(namespaceStorageRecalledDataSizeTimeDataStarted)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceStorageRecalledDataSizeResult> getNamespaceStorageRecalledDataSizePlain(GetNamespaceStorageRecalledDataSizePlainArgs args) {
        return getNamespaceStorageRecalledDataSizePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the datasize of recalls for a given timeframe
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecalledDataSize = LogAnalyticsFunctions.getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs.builder()
     *             .namespace(namespaceStorageRecalledDataSizeNamespace)
     *             .timeDataEnded(namespaceStorageRecalledDataSizeTimeDataEnded)
     *             .timeDataStarted(namespaceStorageRecalledDataSizeTimeDataStarted)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageRecalledDataSizeResult> getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageRecalledDataSize:getNamespaceStorageRecalledDataSize", TypeShape.of(GetNamespaceStorageRecalledDataSizeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the datasize of recalls for a given timeframe
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecalledDataSize = LogAnalyticsFunctions.getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs.builder()
     *             .namespace(namespaceStorageRecalledDataSizeNamespace)
     *             .timeDataEnded(namespaceStorageRecalledDataSizeTimeDataEnded)
     *             .timeDataStarted(namespaceStorageRecalledDataSizeTimeDataStarted)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceStorageRecalledDataSizeResult> getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceStorageRecalledDataSize:getNamespaceStorageRecalledDataSize", TypeShape.of(GetNamespaceStorageRecalledDataSizeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Storage Recalled Data Size resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * This API gets the datasize of recalls for a given timeframe
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceStorageRecalledDataSizeArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceStorageRecalledDataSize = LogAnalyticsFunctions.getNamespaceStorageRecalledDataSize(GetNamespaceStorageRecalledDataSizeArgs.builder()
     *             .namespace(namespaceStorageRecalledDataSizeNamespace)
     *             .timeDataEnded(namespaceStorageRecalledDataSizeTimeDataEnded)
     *             .timeDataStarted(namespaceStorageRecalledDataSizeTimeDataStarted)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceStorageRecalledDataSizeResult> getNamespaceStorageRecalledDataSizePlain(GetNamespaceStorageRecalledDataSizePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceStorageRecalledDataSize:getNamespaceStorageRecalledDataSize", TypeShape.of(GetNamespaceStorageRecalledDataSizeResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the template with the specified ocid.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceTemplate = LogAnalyticsFunctions.getNamespaceTemplate(GetNamespaceTemplateArgs.builder()
     *             .namespace(namespaceTemplateNamespace)
     *             .templateId(testTemplate.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceTemplateResult> getNamespaceTemplate(GetNamespaceTemplateArgs args) {
        return getNamespaceTemplate(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the template with the specified ocid.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceTemplate = LogAnalyticsFunctions.getNamespaceTemplate(GetNamespaceTemplateArgs.builder()
     *             .namespace(namespaceTemplateNamespace)
     *             .templateId(testTemplate.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceTemplateResult> getNamespaceTemplatePlain(GetNamespaceTemplatePlainArgs args) {
        return getNamespaceTemplatePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the template with the specified ocid.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceTemplate = LogAnalyticsFunctions.getNamespaceTemplate(GetNamespaceTemplateArgs.builder()
     *             .namespace(namespaceTemplateNamespace)
     *             .templateId(testTemplate.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceTemplateResult> getNamespaceTemplate(GetNamespaceTemplateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceTemplate:getNamespaceTemplate", TypeShape.of(GetNamespaceTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the template with the specified ocid.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceTemplate = LogAnalyticsFunctions.getNamespaceTemplate(GetNamespaceTemplateArgs.builder()
     *             .namespace(namespaceTemplateNamespace)
     *             .templateId(testTemplate.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceTemplateResult> getNamespaceTemplate(GetNamespaceTemplateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceTemplate:getNamespaceTemplate", TypeShape.of(GetNamespaceTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Namespace Template resource in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Gets detailed information about the template with the specified ocid.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceTemplate = LogAnalyticsFunctions.getNamespaceTemplate(GetNamespaceTemplateArgs.builder()
     *             .namespace(namespaceTemplateNamespace)
     *             .templateId(testTemplate.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceTemplateResult> getNamespaceTemplatePlain(GetNamespaceTemplatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceTemplate:getNamespaceTemplate", TypeShape.of(GetNamespaceTemplateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Templates in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of templates, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as template name, type, display name and description.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceTemplates = LogAnalyticsFunctions.getNamespaceTemplates(GetNamespaceTemplatesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceTemplateNamespace)
     *             .name(namespaceTemplateName)
     *             .namespaceTemplateFilter(namespaceTemplateNamespaceTemplateFilter)
     *             .state(namespaceTemplateState)
     *             .templateDisplayText(namespaceTemplateTemplateDisplayText)
     *             .type(namespaceTemplateType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceTemplatesResult> getNamespaceTemplates(GetNamespaceTemplatesArgs args) {
        return getNamespaceTemplates(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Templates in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of templates, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as template name, type, display name and description.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceTemplates = LogAnalyticsFunctions.getNamespaceTemplates(GetNamespaceTemplatesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceTemplateNamespace)
     *             .name(namespaceTemplateName)
     *             .namespaceTemplateFilter(namespaceTemplateNamespaceTemplateFilter)
     *             .state(namespaceTemplateState)
     *             .templateDisplayText(namespaceTemplateTemplateDisplayText)
     *             .type(namespaceTemplateType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceTemplatesResult> getNamespaceTemplatesPlain(GetNamespaceTemplatesPlainArgs args) {
        return getNamespaceTemplatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespace Templates in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of templates, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as template name, type, display name and description.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceTemplates = LogAnalyticsFunctions.getNamespaceTemplates(GetNamespaceTemplatesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceTemplateNamespace)
     *             .name(namespaceTemplateName)
     *             .namespaceTemplateFilter(namespaceTemplateNamespaceTemplateFilter)
     *             .state(namespaceTemplateState)
     *             .templateDisplayText(namespaceTemplateTemplateDisplayText)
     *             .type(namespaceTemplateType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceTemplatesResult> getNamespaceTemplates(GetNamespaceTemplatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceTemplates:getNamespaceTemplates", TypeShape.of(GetNamespaceTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Templates in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of templates, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as template name, type, display name and description.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceTemplates = LogAnalyticsFunctions.getNamespaceTemplates(GetNamespaceTemplatesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceTemplateNamespace)
     *             .name(namespaceTemplateName)
     *             .namespaceTemplateFilter(namespaceTemplateNamespaceTemplateFilter)
     *             .state(namespaceTemplateState)
     *             .templateDisplayText(namespaceTemplateTemplateDisplayText)
     *             .type(namespaceTemplateType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespaceTemplatesResult> getNamespaceTemplates(GetNamespaceTemplatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaceTemplates:getNamespaceTemplates", TypeShape.of(GetNamespaceTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespace Templates in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Returns a list of templates, containing detailed information about them. You may limit the number of results, provide sorting order, and filter by information such as template name, type, display name and description.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceTemplatesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaceTemplates = LogAnalyticsFunctions.getNamespaceTemplates(GetNamespaceTemplatesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .namespace(namespaceTemplateNamespace)
     *             .name(namespaceTemplateName)
     *             .namespaceTemplateFilter(namespaceTemplateNamespaceTemplateFilter)
     *             .state(namespaceTemplateState)
     *             .templateDisplayText(namespaceTemplateTemplateDisplayText)
     *             .type(namespaceTemplateType)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespaceTemplatesResult> getNamespaceTemplatesPlain(GetNamespaceTemplatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaceTemplates:getNamespaceTemplates", TypeShape.of(GetNamespaceTemplatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespaces in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Given a tenancy OCID, this API returns the namespace of the tenancy if it is valid and subscribed to the region.  The
     * result also indicates if the tenancy is onboarded with Logging Analytics.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaces = LogAnalyticsFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces(GetNamespacesArgs args) {
        return getNamespaces(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespaces in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Given a tenancy OCID, this API returns the namespace of the tenancy if it is valid and subscribed to the region.  The
     * result also indicates if the tenancy is onboarded with Logging Analytics.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaces = LogAnalyticsFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespacesResult> getNamespacesPlain(GetNamespacesPlainArgs args) {
        return getNamespacesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Namespaces in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Given a tenancy OCID, this API returns the namespace of the tenancy if it is valid and subscribed to the region.  The
     * result also indicates if the tenancy is onboarded with Logging Analytics.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaces = LogAnalyticsFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces(GetNamespacesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaces:getNamespaces", TypeShape.of(GetNamespacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespaces in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Given a tenancy OCID, this API returns the namespace of the tenancy if it is valid and subscribed to the region.  The
     * result also indicates if the tenancy is onboarded with Logging Analytics.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaces = LogAnalyticsFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static Output<GetNamespacesResult> getNamespaces(GetNamespacesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:LogAnalytics/getNamespaces:getNamespaces", TypeShape.of(GetNamespacesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Namespaces in Oracle Cloud Infrastructure Log Analytics service.
     * 
     * Given a tenancy OCID, this API returns the namespace of the tenancy if it is valid and subscribed to the region.  The
     * result also indicates if the tenancy is onboarded with Logging Analytics.
     * 
     * ## Example Usage
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.LogAnalytics.LogAnalyticsFunctions;
     * import com.pulumi.oci.LogAnalytics.inputs.GetNamespacesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testNamespaces = LogAnalyticsFunctions.getNamespaces(GetNamespacesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public static CompletableFuture<GetNamespacesResult> getNamespacesPlain(GetNamespacesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:LogAnalytics/getNamespaces:getNamespaces", TypeShape.of(GetNamespacesResult.class), args, Utilities.withVersion(options));
    }
}
