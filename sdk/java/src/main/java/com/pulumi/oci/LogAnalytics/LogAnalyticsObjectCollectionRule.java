// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.LogAnalytics.LogAnalyticsObjectCollectionRuleArgs;
import com.pulumi.oci.LogAnalytics.inputs.LogAnalyticsObjectCollectionRuleState;
import com.pulumi.oci.LogAnalytics.outputs.LogAnalyticsObjectCollectionRuleOverride;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
 * 
 * Create a configuration to collect logs from object storage bucket.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.LogAnalytics.LogAnalyticsObjectCollectionRule;
 * import com.pulumi.oci.LogAnalytics.LogAnalyticsObjectCollectionRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testLogAnalyticsObjectCollectionRule = new LogAnalyticsObjectCollectionRule("testLogAnalyticsObjectCollectionRule", LogAnalyticsObjectCollectionRuleArgs.builder()
 *             .compartmentId(compartmentId)
 *             .logGroupId(testLogGroup.id())
 *             .logSourceName(logAnalyticsObjectCollectionRuleLogSourceName)
 *             .name(logAnalyticsObjectCollectionRuleName)
 *             .namespace(logAnalyticsObjectCollectionRuleNamespace)
 *             .osBucketName(testBucket.name())
 *             .osNamespace(logAnalyticsObjectCollectionRuleOsNamespace)
 *             .charEncoding(logAnalyticsObjectCollectionRuleCharEncoding)
 *             .collectionType(logAnalyticsObjectCollectionRuleCollectionType)
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .description(logAnalyticsObjectCollectionRuleDescription)
 *             .entityId(testEntity.id())
 *             .freeformTags(Map.of("bar-key", "value"))
 *             .isEnabled(logAnalyticsObjectCollectionRuleIsEnabled)
 *             .isForceHistoricCollection(logAnalyticsObjectCollectionRuleIsForceHistoricCollection)
 *             .logSet(logAnalyticsObjectCollectionRuleLogSet)
 *             .logSetExtRegex(logAnalyticsObjectCollectionRuleLogSetExtRegex)
 *             .logSetKey(logAnalyticsObjectCollectionRuleLogSetKey)
 *             .logType(logAnalyticsObjectCollectionRuleLogType)
 *             .objectNameFilters(logAnalyticsObjectCollectionRuleObjectNameFilters)
 *             .overrides(logAnalyticsObjectCollectionRuleOverrides)
 *             .pollSince(logAnalyticsObjectCollectionRulePollSince)
 *             .pollTill(logAnalyticsObjectCollectionRulePollTill)
 *             .timezone(logAnalyticsObjectCollectionRuleTimezone)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * LogAnalyticsObjectCollectionRules can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule test_log_analytics_object_collection_rule &#34;namespaces/{namespaceName}/logAnalyticsObjectCollectionRules/{logAnalyticsObjectCollectionRuleId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule")
public class LogAnalyticsObjectCollectionRule extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     * 
     */
    @Export(name="charEncoding", refs={String.class}, tree="[0]")
    private Output<String> charEncoding;

    /**
     * @return (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     * 
     */
    public Output<String> charEncoding() {
        return this.charEncoding;
    }
    /**
     * The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     * 
     */
    @Export(name="collectionType", refs={String.class}, tree="[0]")
    private Output<String> collectionType;

    /**
     * @return The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     * 
     */
    public Output<String> collectionType() {
        return this.collectionType;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     * 
     */
    @Export(name="entityId", refs={String.class}, tree="[0]")
    private Output<String> entityId;

    /**
     * @return (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     * 
     */
    public Output<String> entityId() {
        return this.entityId;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) Whether or not this rule is currently enabled.
     * 
     */
    @Export(name="isEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isEnabled;

    /**
     * @return (Updatable) Whether or not this rule is currently enabled.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }
    /**
     * Flag to allow historic collection if poll period overlaps with existing ACTIVE collection rule
     * 
     */
    @Export(name="isForceHistoricCollection", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isForceHistoricCollection;

    /**
     * @return Flag to allow historic collection if poll period overlaps with existing ACTIVE collection rule
     * 
     */
    public Output<Boolean> isForceHistoricCollection() {
        return this.isForceHistoricCollection;
    }
    /**
     * A detailed status of the life cycle state.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return A detailed status of the life cycle state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
     * 
     */
    @Export(name="logGroupId", refs={String.class}, tree="[0]")
    private Output<String> logGroupId;

    /**
     * @return (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
     * 
     */
    public Output<String> logGroupId() {
        return this.logGroupId;
    }
    /**
     * (Updatable) The logSet to be associated with the processed logs. The logSet feature can be used by customers with high volume of data  and this feature has to be enabled for a given tenancy prior to its usage. When logSetExtRegex value is provided, it will take precedence over this logSet value and logSet will be computed dynamically  using logSetKey and logSetExtRegex.
     * 
     */
    @Export(name="logSet", refs={String.class}, tree="[0]")
    private Output<String> logSet;

    /**
     * @return (Updatable) The logSet to be associated with the processed logs. The logSet feature can be used by customers with high volume of data  and this feature has to be enabled for a given tenancy prior to its usage. When logSetExtRegex value is provided, it will take precedence over this logSet value and logSet will be computed dynamically  using logSetKey and logSetExtRegex.
     * 
     */
    public Output<String> logSet() {
        return this.logSet;
    }
    /**
     * (Updatable) The regex to be applied against given logSetKey. Regex has to be in string escaped format.
     * 
     */
    @Export(name="logSetExtRegex", refs={String.class}, tree="[0]")
    private Output<String> logSetExtRegex;

    /**
     * @return (Updatable) The regex to be applied against given logSetKey. Regex has to be in string escaped format.
     * 
     */
    public Output<String> logSetExtRegex() {
        return this.logSetExtRegex;
    }
    /**
     * (Updatable) An optional parameter to indicate from where the logSet to be extracted using logSetExtRegex. Default value is OBJECT_PATH (e.g. /n/&lt;namespace&gt;/b/&lt;bucketname&gt;/o/&lt;objectname&gt;).
     * 
     */
    @Export(name="logSetKey", refs={String.class}, tree="[0]")
    private Output<String> logSetKey;

    /**
     * @return (Updatable) An optional parameter to indicate from where the logSet to be extracted using logSetExtRegex. Default value is OBJECT_PATH (e.g. /n/&lt;namespace&gt;/b/&lt;bucketname&gt;/o/&lt;objectname&gt;).
     * 
     */
    public Output<String> logSetKey() {
        return this.logSetKey;
    }
    /**
     * (Updatable) Name of the Logging Analytics Source to use for the processing.
     * 
     */
    @Export(name="logSourceName", refs={String.class}, tree="[0]")
    private Output<String> logSourceName;

    /**
     * @return (Updatable) Name of the Logging Analytics Source to use for the processing.
     * 
     */
    public Output<String> logSourceName() {
        return this.logSourceName;
    }
    /**
     * Type of files/objects in this object collection rule.
     * 
     */
    @Export(name="logType", refs={String.class}, tree="[0]")
    private Output<String> logType;

    /**
     * @return Type of files/objects in this object collection rule.
     * 
     */
    public Output<String> logType() {
        return this.logType;
    }
    /**
     * A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Logging Analytics namespace used for the request.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output<String> namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }
    /**
     * (Updatable) When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard &#34;*&#34;. For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
     * 
     */
    @Export(name="objectNameFilters", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> objectNameFilters;

    /**
     * @return (Updatable) When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard &#34;*&#34;. For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
     * 
     */
    public Output<Optional<List<String>>> objectNameFilters() {
        return Codegen.optional(this.objectNameFilters);
    }
    /**
     * Name of the Object Storage bucket.
     * 
     */
    @Export(name="osBucketName", refs={String.class}, tree="[0]")
    private Output<String> osBucketName;

    /**
     * @return Name of the Object Storage bucket.
     * 
     */
    public Output<String> osBucketName() {
        return this.osBucketName;
    }
    /**
     * Object Storage namespace.
     * 
     */
    @Export(name="osNamespace", refs={String.class}, tree="[0]")
    private Output<String> osNamespace;

    /**
     * @return Object Storage namespace.
     * 
     */
    public Output<String> osNamespace() {
        return this.osNamespace;
    }
    /**
     * (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are: logSourceName, charEncoding, entityId. Supported matchType for override are &#34;contains&#34;.
     * 
     */
    @Export(name="overrides", refs={List.class,LogAnalyticsObjectCollectionRuleOverride.class}, tree="[0,1]")
    private Output<List<LogAnalyticsObjectCollectionRuleOverride>> overrides;

    /**
     * @return (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are: logSourceName, charEncoding, entityId. Supported matchType for override are &#34;contains&#34;.
     * 
     */
    public Output<List<LogAnalyticsObjectCollectionRuleOverride>> overrides() {
        return this.overrides;
    }
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. Use this for HISTORIC or HISTORIC_LIVE collection types. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     * 
     */
    @Export(name="pollSince", refs={String.class}, tree="[0]")
    private Output<String> pollSince;

    /**
     * @return The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. Use this for HISTORIC or HISTORIC_LIVE collection types. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     * 
     */
    public Output<String> pollSince() {
        return this.pollSince;
    }
    /**
     * The newest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. Use this for HISTORIC collection type. When collectionType is LIVE or HISTORIC_LIVE, specifying pollTill will result in error.
     * 
     */
    @Export(name="pollTill", refs={String.class}, tree="[0]")
    private Output<String> pollTill;

    /**
     * @return The newest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. Use this for HISTORIC collection type. When collectionType is LIVE or HISTORIC_LIVE, specifying pollTill will result in error.
     * 
     */
    public Output<String> pollTill() {
        return this.pollTill;
    }
    /**
     * The current state of the rule.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the rule.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The time when this rule was created. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The time when this rule was created. An RFC3339 formatted datetime string.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time when this rule was last updated. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The time when this rule was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * (Updatable) Timezone to be used when processing log entries whose timestamps do not include an explicit timezone.  When this property is not specified, the timezone of the entity specified is used.  If the entity is also not specified or do not have a valid timezone then UTC is used.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="timezone", refs={String.class}, tree="[0]")
    private Output<String> timezone;

    /**
     * @return (Updatable) Timezone to be used when processing log entries whose timestamps do not include an explicit timezone.  When this property is not specified, the timezone of the entity specified is used.  If the entity is also not specified or do not have a valid timezone then UTC is used.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> timezone() {
        return this.timezone;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LogAnalyticsObjectCollectionRule(String name) {
        this(name, LogAnalyticsObjectCollectionRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LogAnalyticsObjectCollectionRule(String name, LogAnalyticsObjectCollectionRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LogAnalyticsObjectCollectionRule(String name, LogAnalyticsObjectCollectionRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule", name, args == null ? LogAnalyticsObjectCollectionRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LogAnalyticsObjectCollectionRule(String name, Output<String> id, @Nullable LogAnalyticsObjectCollectionRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LogAnalyticsObjectCollectionRule get(String name, Output<String> id, @Nullable LogAnalyticsObjectCollectionRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LogAnalyticsObjectCollectionRule(name, id, state, options);
    }
}
