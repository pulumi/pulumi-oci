// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.LogAnalytics.NamespaceIngestTimeRuleArgs;
import com.pulumi.oci.LogAnalytics.inputs.NamespaceIngestTimeRuleState;
import com.pulumi.oci.LogAnalytics.outputs.NamespaceIngestTimeRuleAction;
import com.pulumi.oci.LogAnalytics.outputs.NamespaceIngestTimeRuleConditions;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Namespace Ingest Time Rule resource in Oracle Cloud Infrastructure Log Analytics service.
 * 
 * Creates a new ingest time rule in the specified compartment. You may also specify optional information such as description, defined tags, and free-form tags.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.LogAnalytics.NamespaceIngestTimeRule;
 * import com.pulumi.oci.LogAnalytics.NamespaceIngestTimeRuleArgs;
 * import com.pulumi.oci.LogAnalytics.inputs.NamespaceIngestTimeRuleActionArgs;
 * import com.pulumi.oci.LogAnalytics.inputs.NamespaceIngestTimeRuleConditionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testNamespaceIngestTimeRule = new NamespaceIngestTimeRule("testNamespaceIngestTimeRule", NamespaceIngestTimeRuleArgs.builder()
 *             .actions(NamespaceIngestTimeRuleActionArgs.builder()
 *                 .compartmentId(compartmentId)
 *                 .metricName(testMetric.name())
 *                 .namespace(namespaceIngestTimeRuleActionsNamespace)
 *                 .type(namespaceIngestTimeRuleActionsType)
 *                 .dimensions(namespaceIngestTimeRuleActionsDimensions)
 *                 .resourceGroup(namespaceIngestTimeRuleActionsResourceGroup)
 *                 .build())
 *             .compartmentId(compartmentId)
 *             .conditions(NamespaceIngestTimeRuleConditionsArgs.builder()
 *                 .fieldName(namespaceIngestTimeRuleConditionsFieldName)
 *                 .fieldOperator(namespaceIngestTimeRuleConditionsFieldOperator)
 *                 .fieldValue(namespaceIngestTimeRuleConditionsFieldValue)
 *                 .kind(namespaceIngestTimeRuleConditionsKind)
 *                 .additionalConditions(NamespaceIngestTimeRuleConditionsAdditionalConditionArgs.builder()
 *                     .conditionField(namespaceIngestTimeRuleConditionsAdditionalConditionsConditionField)
 *                     .conditionOperator(namespaceIngestTimeRuleConditionsAdditionalConditionsConditionOperator)
 *                     .conditionValue(namespaceIngestTimeRuleConditionsAdditionalConditionsConditionValue)
 *                     .build())
 *                 .build())
 *             .displayName(namespaceIngestTimeRuleDisplayName)
 *             .namespace(namespaceIngestTimeRuleNamespace)
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .description(namespaceIngestTimeRuleDescription)
 *             .freeformTags(Map.of("bar-key", "value"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * NamespaceIngestTimeRules can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule test_namespace_ingest_time_rule &#34;namespaces/{namespaceName}/ingestTimeRules/{ingestTimeRuleId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule")
public class NamespaceIngestTimeRule extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The action(s) to be performed if the ingest time rule condition(s) are satisfied.
     * 
     */
    @Export(name="actions", refs={List.class,NamespaceIngestTimeRuleAction.class}, tree="[0,1]")
    private Output<List<NamespaceIngestTimeRuleAction>> actions;

    /**
     * @return (Updatable) The action(s) to be performed if the ingest time rule condition(s) are satisfied.
     * 
     */
    public Output<List<NamespaceIngestTimeRuleAction>> actions() {
        return this.actions;
    }
    /**
     * (Updatable) Compartment Identifier [OCID] (&lt;https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)&gt;.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier [OCID] (&lt;https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)&gt;.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) The condition(s) to evaluate for an ingest time rule.
     * 
     */
    @Export(name="conditions", refs={NamespaceIngestTimeRuleConditions.class}, tree="[0]")
    private Output<NamespaceIngestTimeRuleConditions> conditions;

    /**
     * @return (Updatable) The condition(s) to evaluate for an ingest time rule.
     * 
     */
    public Output<NamespaceIngestTimeRuleConditions> conditions() {
        return this.conditions;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) Description for this resource.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) Description for this resource.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) The ingest time rule display name.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) The ingest time rule display name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    @Export(name="ingestTimeRuleId", refs={String.class}, tree="[0]")
    private Output<String> ingestTimeRuleId;

    public Output<String> ingestTimeRuleId() {
        return this.ingestTimeRuleId;
    }
    /**
     * A flag indicating whether or not the ingest time rule is enabled.
     * 
     */
    @Export(name="isEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isEnabled;

    /**
     * @return A flag indicating whether or not the ingest time rule is enabled.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }
    /**
     * The Logging Analytics namespace used for the request.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output<String> namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }
    /**
     * The current state of the ingest time rule.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The current state of the ingest time rule.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The date and time the resource was created, in the format defined by RFC3339.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The date and time the resource was created, in the format defined by RFC3339.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The date and time the resource was last updated, in the format defined by RFC3339.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The date and time the resource was last updated, in the format defined by RFC3339.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NamespaceIngestTimeRule(java.lang.String name) {
        this(name, NamespaceIngestTimeRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NamespaceIngestTimeRule(java.lang.String name, NamespaceIngestTimeRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NamespaceIngestTimeRule(java.lang.String name, NamespaceIngestTimeRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NamespaceIngestTimeRule(java.lang.String name, Output<java.lang.String> id, @Nullable NamespaceIngestTimeRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:LogAnalytics/namespaceIngestTimeRule:NamespaceIngestTimeRule", name, state, makeResourceOptions(options, id), false);
    }

    private static NamespaceIngestTimeRuleArgs makeArgs(NamespaceIngestTimeRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NamespaceIngestTimeRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NamespaceIngestTimeRule get(java.lang.String name, Output<java.lang.String> id, @Nullable NamespaceIngestTimeRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NamespaceIngestTimeRule(name, id, state, options);
    }
}
