// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class NamespaceStorageEnableDisableArchivingArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceStorageEnableDisableArchivingArgs Empty = new NamespaceStorageEnableDisableArchivingArgs();

    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="enableArchivingTenant", required=true)
    private Output<Boolean> enableArchivingTenant;

    /**
     * @return (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<Boolean> enableArchivingTenant() {
        return this.enableArchivingTenant;
    }

    /**
     * The Logging Analytics namespace used for the request.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    private NamespaceStorageEnableDisableArchivingArgs() {}

    private NamespaceStorageEnableDisableArchivingArgs(NamespaceStorageEnableDisableArchivingArgs $) {
        this.enableArchivingTenant = $.enableArchivingTenant;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceStorageEnableDisableArchivingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceStorageEnableDisableArchivingArgs $;

        public Builder() {
            $ = new NamespaceStorageEnableDisableArchivingArgs();
        }

        public Builder(NamespaceStorageEnableDisableArchivingArgs defaults) {
            $ = new NamespaceStorageEnableDisableArchivingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableArchivingTenant (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enableArchivingTenant(Output<Boolean> enableArchivingTenant) {
            $.enableArchivingTenant = enableArchivingTenant;
            return this;
        }

        /**
         * @param enableArchivingTenant (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enableArchivingTenant(Boolean enableArchivingTenant) {
            return enableArchivingTenant(Output.of(enableArchivingTenant));
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public NamespaceStorageEnableDisableArchivingArgs build() {
            if ($.enableArchivingTenant == null) {
                throw new MissingRequiredPropertyException("NamespaceStorageEnableDisableArchivingArgs", "enableArchivingTenant");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("NamespaceStorageEnableDisableArchivingArgs", "namespace");
            }
            return $;
        }
    }

}
