// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetNamespaceFieldUsageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNamespaceFieldUsageArgs Empty = new GetNamespaceFieldUsageArgs();

    /**
     * The field name.
     * 
     */
    @Import(name="fieldName", required=true)
    private Output<String> fieldName;

    /**
     * @return The field name.
     * 
     */
    public Output<String> fieldName() {
        return this.fieldName;
    }

    /**
     * The Logging Analytics namespace used for the request.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    private GetNamespaceFieldUsageArgs() {}

    private GetNamespaceFieldUsageArgs(GetNamespaceFieldUsageArgs $) {
        this.fieldName = $.fieldName;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNamespaceFieldUsageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNamespaceFieldUsageArgs $;

        public Builder() {
            $ = new GetNamespaceFieldUsageArgs();
        }

        public Builder(GetNamespaceFieldUsageArgs defaults) {
            $ = new GetNamespaceFieldUsageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fieldName The field name.
         * 
         * @return builder
         * 
         */
        public Builder fieldName(Output<String> fieldName) {
            $.fieldName = fieldName;
            return this;
        }

        /**
         * @param fieldName The field name.
         * 
         * @return builder
         * 
         */
        public Builder fieldName(String fieldName) {
            return fieldName(Output.of(fieldName));
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public GetNamespaceFieldUsageArgs build() {
            if ($.fieldName == null) {
                throw new MissingRequiredPropertyException("GetNamespaceFieldUsageArgs", "fieldName");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("GetNamespaceFieldUsageArgs", "namespace");
            }
            return $;
        }
    }

}
