// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceParserActionsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNamespaceParserActionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNamespaceParserActionsArgs Empty = new GetNamespaceParserActionsArgs();

    /**
     * The parser action display text used for filtering.
     * 
     */
    @Import(name="actionDisplayText")
    private @Nullable Output<String> actionDisplayText;

    /**
     * @return The parser action display text used for filtering.
     * 
     */
    public Optional<Output<String>> actionDisplayText() {
        return Optional.ofNullable(this.actionDisplayText);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetNamespaceParserActionsFilterArgs>> filters;

    public Optional<Output<List<GetNamespaceParserActionsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The parser action name used for filtering.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The parser action name used for filtering.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Logging Analytics namespace used for the request.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    private GetNamespaceParserActionsArgs() {}

    private GetNamespaceParserActionsArgs(GetNamespaceParserActionsArgs $) {
        this.actionDisplayText = $.actionDisplayText;
        this.filters = $.filters;
        this.name = $.name;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNamespaceParserActionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNamespaceParserActionsArgs $;

        public Builder() {
            $ = new GetNamespaceParserActionsArgs();
        }

        public Builder(GetNamespaceParserActionsArgs defaults) {
            $ = new GetNamespaceParserActionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionDisplayText The parser action display text used for filtering.
         * 
         * @return builder
         * 
         */
        public Builder actionDisplayText(@Nullable Output<String> actionDisplayText) {
            $.actionDisplayText = actionDisplayText;
            return this;
        }

        /**
         * @param actionDisplayText The parser action display text used for filtering.
         * 
         * @return builder
         * 
         */
        public Builder actionDisplayText(String actionDisplayText) {
            return actionDisplayText(Output.of(actionDisplayText));
        }

        public Builder filters(@Nullable Output<List<GetNamespaceParserActionsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetNamespaceParserActionsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetNamespaceParserActionsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name The parser action name used for filtering.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The parser action name used for filtering.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public GetNamespaceParserActionsArgs build() {
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("GetNamespaceParserActionsArgs", "namespace");
            }
            return $;
        }
    }

}
