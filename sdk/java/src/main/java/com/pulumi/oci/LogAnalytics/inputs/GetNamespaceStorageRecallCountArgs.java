// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetNamespaceStorageRecallCountArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNamespaceStorageRecallCountArgs Empty = new GetNamespaceStorageRecallCountArgs();

    /**
     * The Logging Analytics namespace used for the request.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    private GetNamespaceStorageRecallCountArgs() {}

    private GetNamespaceStorageRecallCountArgs(GetNamespaceStorageRecallCountArgs $) {
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNamespaceStorageRecallCountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNamespaceStorageRecallCountArgs $;

        public Builder() {
            $ = new GetNamespaceStorageRecallCountArgs();
        }

        public Builder(GetNamespaceStorageRecallCountArgs defaults) {
            $ = new GetNamespaceStorageRecallCountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public GetNamespaceStorageRecallCountArgs build() {
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            return $;
        }
    }

}
