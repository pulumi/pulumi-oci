// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetNamespaceTemplateArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNamespaceTemplateArgs Empty = new GetNamespaceTemplateArgs();

    /**
     * The Logging Analytics namespace used for the request.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * Unique ocid of the template.
     * 
     */
    @Import(name="templateId", required=true)
    private Output<String> templateId;

    /**
     * @return Unique ocid of the template.
     * 
     */
    public Output<String> templateId() {
        return this.templateId;
    }

    private GetNamespaceTemplateArgs() {}

    private GetNamespaceTemplateArgs(GetNamespaceTemplateArgs $) {
        this.namespace = $.namespace;
        this.templateId = $.templateId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNamespaceTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNamespaceTemplateArgs $;

        public Builder() {
            $ = new GetNamespaceTemplateArgs();
        }

        public Builder(GetNamespaceTemplateArgs defaults) {
            $ = new GetNamespaceTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param templateId Unique ocid of the template.
         * 
         * @return builder
         * 
         */
        public Builder templateId(Output<String> templateId) {
            $.templateId = templateId;
            return this;
        }

        /**
         * @param templateId Unique ocid of the template.
         * 
         * @return builder
         * 
         */
        public Builder templateId(String templateId) {
            return templateId(Output.of(templateId));
        }

        public GetNamespaceTemplateArgs build() {
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("GetNamespaceTemplateArgs", "namespace");
            }
            if ($.templateId == null) {
                throw new MissingRequiredPropertyException("GetNamespaceTemplateArgs", "templateId");
            }
            return $;
        }
    }

}
