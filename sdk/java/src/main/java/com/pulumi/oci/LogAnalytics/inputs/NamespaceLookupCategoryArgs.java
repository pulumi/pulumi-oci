// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamespaceLookupCategoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceLookupCategoryArgs Empty = new NamespaceLookupCategoryArgs();

    /**
     * (Updatable) The category description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) The category description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The category display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The category display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) The system flag. A value of false denotes a user-created category. A value of true denotes an Oracle-defined category.
     * 
     */
    @Import(name="isSystem")
    private @Nullable Output<Boolean> isSystem;

    /**
     * @return (Updatable) The system flag. A value of false denotes a user-created category. A value of true denotes an Oracle-defined category.
     * 
     */
    public Optional<Output<Boolean>> isSystem() {
        return Optional.ofNullable(this.isSystem);
    }

    /**
     * (Updatable) The unique name that identifies the category.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) The unique name that identifies the category.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) The category type. Values include &#34;PRODUCT&#34;, &#34;TIER&#34;, &#34;VENDOR&#34; and &#34;GENERIC&#34;.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return (Updatable) The category type. Values include &#34;PRODUCT&#34;, &#34;TIER&#34;, &#34;VENDOR&#34; and &#34;GENERIC&#34;.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private NamespaceLookupCategoryArgs() {}

    private NamespaceLookupCategoryArgs(NamespaceLookupCategoryArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.isSystem = $.isSystem;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceLookupCategoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceLookupCategoryArgs $;

        public Builder() {
            $ = new NamespaceLookupCategoryArgs();
        }

        public Builder(NamespaceLookupCategoryArgs defaults) {
            $ = new NamespaceLookupCategoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description (Updatable) The category description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The category description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The category display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The category display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param isSystem (Updatable) The system flag. A value of false denotes a user-created category. A value of true denotes an Oracle-defined category.
         * 
         * @return builder
         * 
         */
        public Builder isSystem(@Nullable Output<Boolean> isSystem) {
            $.isSystem = isSystem;
            return this;
        }

        /**
         * @param isSystem (Updatable) The system flag. A value of false denotes a user-created category. A value of true denotes an Oracle-defined category.
         * 
         * @return builder
         * 
         */
        public Builder isSystem(Boolean isSystem) {
            return isSystem(Output.of(isSystem));
        }

        /**
         * @param name (Updatable) The unique name that identifies the category.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) The unique name that identifies the category.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type (Updatable) The category type. Values include &#34;PRODUCT&#34;, &#34;TIER&#34;, &#34;VENDOR&#34; and &#34;GENERIC&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) The category type. Values include &#34;PRODUCT&#34;, &#34;TIER&#34;, &#34;VENDOR&#34; and &#34;GENERIC&#34;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public NamespaceLookupCategoryArgs build() {
            return $;
        }
    }

}
