// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamespaceLookupReferringSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceLookupReferringSourceArgs Empty = new NamespaceLookupReferringSourceArgs();

    /**
     * The canonical link.
     * 
     */
    @Import(name="canonicalLink")
    private @Nullable Output<String> canonicalLink;

    /**
     * @return The canonical link.
     * 
     */
    public Optional<Output<String>> canonicalLink() {
        return Optional.ofNullable(this.canonicalLink);
    }

    /**
     * The total count.
     * 
     */
    @Import(name="totalCount")
    private @Nullable Output<String> totalCount;

    /**
     * @return The total count.
     * 
     */
    public Optional<Output<String>> totalCount() {
        return Optional.ofNullable(this.totalCount);
    }

    private NamespaceLookupReferringSourceArgs() {}

    private NamespaceLookupReferringSourceArgs(NamespaceLookupReferringSourceArgs $) {
        this.canonicalLink = $.canonicalLink;
        this.totalCount = $.totalCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceLookupReferringSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceLookupReferringSourceArgs $;

        public Builder() {
            $ = new NamespaceLookupReferringSourceArgs();
        }

        public Builder(NamespaceLookupReferringSourceArgs defaults) {
            $ = new NamespaceLookupReferringSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param canonicalLink The canonical link.
         * 
         * @return builder
         * 
         */
        public Builder canonicalLink(@Nullable Output<String> canonicalLink) {
            $.canonicalLink = canonicalLink;
            return this;
        }

        /**
         * @param canonicalLink The canonical link.
         * 
         * @return builder
         * 
         */
        public Builder canonicalLink(String canonicalLink) {
            return canonicalLink(Output.of(canonicalLink));
        }

        /**
         * @param totalCount The total count.
         * 
         * @return builder
         * 
         */
        public Builder totalCount(@Nullable Output<String> totalCount) {
            $.totalCount = totalCount;
            return this;
        }

        /**
         * @param totalCount The total count.
         * 
         * @return builder
         * 
         */
        public Builder totalCount(String totalCount) {
            return totalCount(Output.of(totalCount));
        }

        public NamespaceLookupReferringSourceArgs build() {
            return $;
        }
    }

}
