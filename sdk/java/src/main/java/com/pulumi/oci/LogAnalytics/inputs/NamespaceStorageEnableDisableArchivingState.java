// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamespaceStorageEnableDisableArchivingState extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceStorageEnableDisableArchivingState Empty = new NamespaceStorageEnableDisableArchivingState();

    /**
     * (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="enableArchivingTenant")
    private @Nullable Output<Boolean> enableArchivingTenant;

    /**
     * @return (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<Boolean>> enableArchivingTenant() {
        return Optional.ofNullable(this.enableArchivingTenant);
    }

    /**
     * A human-readable success string.
     * 
     */
    @Import(name="message")
    private @Nullable Output<String> message;

    /**
     * @return A human-readable success string.
     * 
     */
    public Optional<Output<String>> message() {
        return Optional.ofNullable(this.message);
    }

    /**
     * The Logging Analytics namespace used for the request.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    private NamespaceStorageEnableDisableArchivingState() {}

    private NamespaceStorageEnableDisableArchivingState(NamespaceStorageEnableDisableArchivingState $) {
        this.enableArchivingTenant = $.enableArchivingTenant;
        this.message = $.message;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceStorageEnableDisableArchivingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceStorageEnableDisableArchivingState $;

        public Builder() {
            $ = new NamespaceStorageEnableDisableArchivingState();
        }

        public Builder(NamespaceStorageEnableDisableArchivingState defaults) {
            $ = new NamespaceStorageEnableDisableArchivingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableArchivingTenant (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enableArchivingTenant(@Nullable Output<Boolean> enableArchivingTenant) {
            $.enableArchivingTenant = enableArchivingTenant;
            return this;
        }

        /**
         * @param enableArchivingTenant (Updatable) A required field when set to `true` calls enable action and when set to `false` calls disable action.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder enableArchivingTenant(Boolean enableArchivingTenant) {
            return enableArchivingTenant(Output.of(enableArchivingTenant));
        }

        /**
         * @param message A human-readable success string.
         * 
         * @return builder
         * 
         */
        public Builder message(@Nullable Output<String> message) {
            $.message = message;
            return this;
        }

        /**
         * @param message A human-readable success string.
         * 
         * @return builder
         * 
         */
        public Builder message(String message) {
            return message(Output.of(message));
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public NamespaceStorageEnableDisableArchivingState build() {
            return $;
        }
    }

}
