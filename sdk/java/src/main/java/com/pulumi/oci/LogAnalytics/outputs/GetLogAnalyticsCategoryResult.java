// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLogAnalyticsCategoryResult {
    /**
     * @return The category description.
     * 
     */
    private String description;
    /**
     * @return The category display name.
     * 
     */
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The system flag. A value of false denotes a user-created category. A value of true denotes an Oracle-defined category.
     * 
     */
    private Boolean isSystem;
    /**
     * @return The unique name that identifies the category.
     * 
     */
    private String name;
    private String namespace;
    /**
     * @return The category type. Values include &#34;PRODUCT&#34;, &#34;TIER&#34;, &#34;VENDOR&#34; and &#34;GENERIC&#34;.
     * 
     */
    private String type;

    private GetLogAnalyticsCategoryResult() {}
    /**
     * @return The category description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The category display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The system flag. A value of false denotes a user-created category. A value of true denotes an Oracle-defined category.
     * 
     */
    public Boolean isSystem() {
        return this.isSystem;
    }
    /**
     * @return The unique name that identifies the category.
     * 
     */
    public String name() {
        return this.name;
    }
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The category type. Values include &#34;PRODUCT&#34;, &#34;TIER&#34;, &#34;VENDOR&#34; and &#34;GENERIC&#34;.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsCategoryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String displayName;
        private String id;
        private Boolean isSystem;
        private String name;
        private String namespace;
        private String type;
        public Builder() {}
        public Builder(GetLogAnalyticsCategoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.isSystem = defaults.isSystem;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsCategoryResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsCategoryResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsCategoryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isSystem(Boolean isSystem) {
            if (isSystem == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsCategoryResult", "isSystem");
            }
            this.isSystem = isSystem;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsCategoryResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsCategoryResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsCategoryResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetLogAnalyticsCategoryResult build() {
            final var _resultValue = new GetLogAnalyticsCategoryResult();
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.isSystem = isSystem;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
