// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLogAnalyticsEntitiesSummaryResult {
    /**
     * @return Total number of ACTIVE entities
     * 
     */
    private @Nullable Integer activeEntitiesCount;
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return Entities with log collection enabled
     * 
     */
    private @Nullable Integer entitiesWithHasLogsCollectedCount;
    /**
     * @return Entities with management agent
     * 
     */
    private @Nullable Integer entitiesWithManagementAgentCount;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String namespace;

    private GetLogAnalyticsEntitiesSummaryResult() {}
    /**
     * @return Total number of ACTIVE entities
     * 
     */
    public Optional<Integer> activeEntitiesCount() {
        return Optional.ofNullable(this.activeEntitiesCount);
    }
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Entities with log collection enabled
     * 
     */
    public Optional<Integer> entitiesWithHasLogsCollectedCount() {
        return Optional.ofNullable(this.entitiesWithHasLogsCollectedCount);
    }
    /**
     * @return Entities with management agent
     * 
     */
    public Optional<Integer> entitiesWithManagementAgentCount() {
        return Optional.ofNullable(this.entitiesWithManagementAgentCount);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String namespace() {
        return this.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsEntitiesSummaryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer activeEntitiesCount;
        private String compartmentId;
        private @Nullable Integer entitiesWithHasLogsCollectedCount;
        private @Nullable Integer entitiesWithManagementAgentCount;
        private @Nullable String id;
        private String namespace;
        public Builder() {}
        public Builder(GetLogAnalyticsEntitiesSummaryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeEntitiesCount = defaults.activeEntitiesCount;
    	      this.compartmentId = defaults.compartmentId;
    	      this.entitiesWithHasLogsCollectedCount = defaults.entitiesWithHasLogsCollectedCount;
    	      this.entitiesWithManagementAgentCount = defaults.entitiesWithManagementAgentCount;
    	      this.id = defaults.id;
    	      this.namespace = defaults.namespace;
        }

        @CustomType.Setter
        public Builder activeEntitiesCount(@Nullable Integer activeEntitiesCount) {
            this.activeEntitiesCount = activeEntitiesCount;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder entitiesWithHasLogsCollectedCount(@Nullable Integer entitiesWithHasLogsCollectedCount) {
            this.entitiesWithHasLogsCollectedCount = entitiesWithHasLogsCollectedCount;
            return this;
        }
        @CustomType.Setter
        public Builder entitiesWithManagementAgentCount(@Nullable Integer entitiesWithManagementAgentCount) {
            this.entitiesWithManagementAgentCount = entitiesWithManagementAgentCount;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public GetLogAnalyticsEntitiesSummaryResult build() {
            final var o = new GetLogAnalyticsEntitiesSummaryResult();
            o.activeEntitiesCount = activeEntitiesCount;
            o.compartmentId = compartmentId;
            o.entitiesWithHasLogsCollectedCount = entitiesWithHasLogsCollectedCount;
            o.entitiesWithManagementAgentCount = entitiesWithManagementAgentCount;
            o.id = id;
            o.namespace = namespace;
            return o;
        }
    }
}
