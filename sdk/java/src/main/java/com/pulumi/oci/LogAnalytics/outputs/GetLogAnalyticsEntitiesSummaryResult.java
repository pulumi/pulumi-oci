// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLogAnalyticsEntitiesSummaryResult {
    /**
     * @return Total number of ACTIVE entities
     * 
     */
    private Integer activeEntitiesCount;
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return Entities with log collection enabled
     * 
     */
    private Integer entitiesWithHasLogsCollectedCount;
    /**
     * @return Entities with management agent
     * 
     */
    private Integer entitiesWithManagementAgentCount;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String namespace;

    private GetLogAnalyticsEntitiesSummaryResult() {}
    /**
     * @return Total number of ACTIVE entities
     * 
     */
    public Integer activeEntitiesCount() {
        return this.activeEntitiesCount;
    }
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Entities with log collection enabled
     * 
     */
    public Integer entitiesWithHasLogsCollectedCount() {
        return this.entitiesWithHasLogsCollectedCount;
    }
    /**
     * @return Entities with management agent
     * 
     */
    public Integer entitiesWithManagementAgentCount() {
        return this.entitiesWithManagementAgentCount;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String namespace() {
        return this.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsEntitiesSummaryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer activeEntitiesCount;
        private String compartmentId;
        private Integer entitiesWithHasLogsCollectedCount;
        private Integer entitiesWithManagementAgentCount;
        private String id;
        private String namespace;
        public Builder() {}
        public Builder(GetLogAnalyticsEntitiesSummaryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeEntitiesCount = defaults.activeEntitiesCount;
    	      this.compartmentId = defaults.compartmentId;
    	      this.entitiesWithHasLogsCollectedCount = defaults.entitiesWithHasLogsCollectedCount;
    	      this.entitiesWithManagementAgentCount = defaults.entitiesWithManagementAgentCount;
    	      this.id = defaults.id;
    	      this.namespace = defaults.namespace;
        }

        @CustomType.Setter
        public Builder activeEntitiesCount(Integer activeEntitiesCount) {
            if (activeEntitiesCount == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntitiesSummaryResult", "activeEntitiesCount");
            }
            this.activeEntitiesCount = activeEntitiesCount;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntitiesSummaryResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder entitiesWithHasLogsCollectedCount(Integer entitiesWithHasLogsCollectedCount) {
            if (entitiesWithHasLogsCollectedCount == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntitiesSummaryResult", "entitiesWithHasLogsCollectedCount");
            }
            this.entitiesWithHasLogsCollectedCount = entitiesWithHasLogsCollectedCount;
            return this;
        }
        @CustomType.Setter
        public Builder entitiesWithManagementAgentCount(Integer entitiesWithManagementAgentCount) {
            if (entitiesWithManagementAgentCount == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntitiesSummaryResult", "entitiesWithManagementAgentCount");
            }
            this.entitiesWithManagementAgentCount = entitiesWithManagementAgentCount;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntitiesSummaryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntitiesSummaryResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        public GetLogAnalyticsEntitiesSummaryResult build() {
            final var _resultValue = new GetLogAnalyticsEntitiesSummaryResult();
            _resultValue.activeEntitiesCount = activeEntitiesCount;
            _resultValue.compartmentId = compartmentId;
            _resultValue.entitiesWithHasLogsCollectedCount = entitiesWithHasLogsCollectedCount;
            _resultValue.entitiesWithManagementAgentCount = entitiesWithManagementAgentCount;
            _resultValue.id = id;
            _resultValue.namespace = namespace;
            return _resultValue;
        }
    }
}
