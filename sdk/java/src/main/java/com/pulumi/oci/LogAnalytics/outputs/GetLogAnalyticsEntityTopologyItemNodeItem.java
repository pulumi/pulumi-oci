// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetLogAnalyticsEntityTopologyItemNodeItem {
    /**
     * @return The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
     * 
     */
    private Boolean areLogsCollected;
    /**
     * @return The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
     * 
     */
    private String cloudResourceId;
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return Internal name for the log analytics entity type.
     * 
     */
    private String entityTypeInternalName;
    /**
     * @return Log analytics entity type name.
     * 
     */
    private String entityTypeName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
     * 
     */
    private String id;
    /**
     * @return lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The OCID of the Management Agent.
     * 
     */
    private String managementAgentId;
    /**
     * @return Log analytics entity name.
     * 
     */
    private String name;
    /**
     * @return This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
     * 
     */
    private String sourceId;
    /**
     * @return A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
     * 
     */
    private String state;
    /**
     * @return The date and time the resource was created, in the format defined by RFC3339.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the resource was last updated, in the format defined by RFC3339.
     * 
     */
    private String timeUpdated;
    /**
     * @return The timezone region of the log analytics entity.
     * 
     */
    private String timezoneRegion;

    private GetLogAnalyticsEntityTopologyItemNodeItem() {}
    /**
     * @return The Boolean flag to indicate if logs are collected for an entity for log analytics usage.
     * 
     */
    public Boolean areLogsCollected() {
        return this.areLogsCollected;
    }
    /**
     * @return The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
     * 
     */
    public String cloudResourceId() {
        return this.cloudResourceId;
    }
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Internal name for the log analytics entity type.
     * 
     */
    public String entityTypeInternalName() {
        return this.entityTypeInternalName;
    }
    /**
     * @return Log analytics entity type name.
     * 
     */
    public String entityTypeName() {
        return this.entityTypeName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return lifecycleDetails has additional information regarding substeps such as management agent plugin deployment.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The OCID of the Management Agent.
     * 
     */
    public String managementAgentId() {
        return this.managementAgentId;
    }
    /**
     * @return Log analytics entity name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
     * 
     */
    public String sourceId() {
        return this.sourceId;
    }
    /**
     * @return A filter to return only those log analytics entities with the specified lifecycle state. The state value is case-insensitive.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the resource was created, in the format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the resource was last updated, in the format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The timezone region of the log analytics entity.
     * 
     */
    public String timezoneRegion() {
        return this.timezoneRegion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsEntityTopologyItemNodeItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean areLogsCollected;
        private String cloudResourceId;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String entityTypeInternalName;
        private String entityTypeName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String managementAgentId;
        private String name;
        private String sourceId;
        private String state;
        private String timeCreated;
        private String timeUpdated;
        private String timezoneRegion;
        public Builder() {}
        public Builder(GetLogAnalyticsEntityTopologyItemNodeItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areLogsCollected = defaults.areLogsCollected;
    	      this.cloudResourceId = defaults.cloudResourceId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.entityTypeInternalName = defaults.entityTypeInternalName;
    	      this.entityTypeName = defaults.entityTypeName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.managementAgentId = defaults.managementAgentId;
    	      this.name = defaults.name;
    	      this.sourceId = defaults.sourceId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.timezoneRegion = defaults.timezoneRegion;
        }

        @CustomType.Setter
        public Builder areLogsCollected(Boolean areLogsCollected) {
            if (areLogsCollected == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "areLogsCollected");
            }
            this.areLogsCollected = areLogsCollected;
            return this;
        }
        @CustomType.Setter
        public Builder cloudResourceId(String cloudResourceId) {
            if (cloudResourceId == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "cloudResourceId");
            }
            this.cloudResourceId = cloudResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder entityTypeInternalName(String entityTypeInternalName) {
            if (entityTypeInternalName == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "entityTypeInternalName");
            }
            this.entityTypeInternalName = entityTypeInternalName;
            return this;
        }
        @CustomType.Setter
        public Builder entityTypeName(String entityTypeName) {
            if (entityTypeName == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "entityTypeName");
            }
            this.entityTypeName = entityTypeName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder managementAgentId(String managementAgentId) {
            if (managementAgentId == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "managementAgentId");
            }
            this.managementAgentId = managementAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder sourceId(String sourceId) {
            if (sourceId == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "sourceId");
            }
            this.sourceId = sourceId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder timezoneRegion(String timezoneRegion) {
            if (timezoneRegion == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyItemNodeItem", "timezoneRegion");
            }
            this.timezoneRegion = timezoneRegion;
            return this;
        }
        public GetLogAnalyticsEntityTopologyItemNodeItem build() {
            final var _resultValue = new GetLogAnalyticsEntityTopologyItemNodeItem();
            _resultValue.areLogsCollected = areLogsCollected;
            _resultValue.cloudResourceId = cloudResourceId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.entityTypeInternalName = entityTypeInternalName;
            _resultValue.entityTypeName = entityTypeName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.managementAgentId = managementAgentId;
            _resultValue.name = name;
            _resultValue.sourceId = sourceId;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.timezoneRegion = timezoneRegion;
            return _resultValue;
        }
    }
}
