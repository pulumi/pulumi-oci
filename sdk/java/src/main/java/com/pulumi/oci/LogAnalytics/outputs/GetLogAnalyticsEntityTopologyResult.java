// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntityTopologyItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLogAnalyticsEntityTopologyResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Array of log analytics entity summary.
     * 
     */
    private List<GetLogAnalyticsEntityTopologyItem> items;
    private String logAnalyticsEntityId;
    private String namespace;
    /**
     * @return The current state of the log analytics entity.
     * 
     */
    private @Nullable String state;

    private GetLogAnalyticsEntityTopologyResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Array of log analytics entity summary.
     * 
     */
    public List<GetLogAnalyticsEntityTopologyItem> items() {
        return this.items;
    }
    public String logAnalyticsEntityId() {
        return this.logAnalyticsEntityId;
    }
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The current state of the log analytics entity.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsEntityTopologyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetLogAnalyticsEntityTopologyItem> items;
        private String logAnalyticsEntityId;
        private String namespace;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetLogAnalyticsEntityTopologyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.logAnalyticsEntityId = defaults.logAnalyticsEntityId;
    	      this.namespace = defaults.namespace;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetLogAnalyticsEntityTopologyItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetLogAnalyticsEntityTopologyItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder logAnalyticsEntityId(String logAnalyticsEntityId) {
            if (logAnalyticsEntityId == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyResult", "logAnalyticsEntityId");
            }
            this.logAnalyticsEntityId = logAnalyticsEntityId;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsEntityTopologyResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        public GetLogAnalyticsEntityTopologyResult build() {
            final var _resultValue = new GetLogAnalyticsEntityTopologyResult();
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.logAnalyticsEntityId = logAnalyticsEntityId;
            _resultValue.namespace = namespace;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
