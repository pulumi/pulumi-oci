// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLogAnalyticsLogGroupsSummaryResult {
    private String compartmentId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private Integer logGroupCount;
    private String namespace;

    private GetLogAnalyticsLogGroupsSummaryResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Integer logGroupCount() {
        return this.logGroupCount;
    }
    public String namespace() {
        return this.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsLogGroupsSummaryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String id;
        private Integer logGroupCount;
        private String namespace;
        public Builder() {}
        public Builder(GetLogAnalyticsLogGroupsSummaryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.id = defaults.id;
    	      this.logGroupCount = defaults.logGroupCount;
    	      this.namespace = defaults.namespace;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsLogGroupsSummaryResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsLogGroupsSummaryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder logGroupCount(Integer logGroupCount) {
            if (logGroupCount == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsLogGroupsSummaryResult", "logGroupCount");
            }
            this.logGroupCount = logGroupCount;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetLogAnalyticsLogGroupsSummaryResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        public GetLogAnalyticsLogGroupsSummaryResult build() {
            final var _resultValue = new GetLogAnalyticsLogGroupsSummaryResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.id = id;
            _resultValue.logGroupCount = logGroupCount;
            _resultValue.namespace = namespace;
            return _resultValue;
        }
    }
}
