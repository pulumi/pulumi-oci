// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsObjectCollectionRuleOverride;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLogAnalyticsObjectCollectionRuleResult {
    /**
     * @return An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     * 
     */
    private @Nullable String charEncoding;
    /**
     * @return The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     * 
     */
    private @Nullable String collectionType;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     * 
     */
    private @Nullable String description;
    /**
     * @return Logging Analytics entity OCID to associate the processed logs with.
     * 
     */
    private @Nullable String entityId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether or not this rule is currently enabled.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return A detailed status of the life cycle state.
     * 
     */
    private @Nullable String lifecycleDetails;
    private String logAnalyticsObjectCollectionRuleId;
    /**
     * @return Logging Analytics Log group OCID to associate the processed logs with.
     * 
     */
    private @Nullable String logGroupId;
    /**
     * @return The logSet to be associated with the processed logs. The logSet feature can be used by customers with high volume of data  and this feature has to be enabled for a given tenancy prior to its usage. When logSetExtRegex value is provided, it will take precedence over this logSet value and logSet will be computed dynamically  using logSetKey and logSetExtRegex.
     * 
     */
    private @Nullable String logSet;
    /**
     * @return The regex to be applied against given logSetKey. Regex has to be in string escaped format.
     * 
     */
    private @Nullable String logSetExtRegex;
    /**
     * @return An optional parameter to indicate from where the logSet to be extracted using logSetExtRegex. Default value is OBJECT_PATH (e.g. /n/&lt;namespace&gt;/b/&lt;bucketname&gt;/o/&lt;objectname&gt;).
     * 
     */
    private @Nullable String logSetKey;
    /**
     * @return Name of the Logging Analytics Source to use for the processing.
     * 
     */
    private @Nullable String logSourceName;
    /**
     * @return A unique name to the rule. The name must be unique, within the tenancy, and cannot be changed.
     * 
     */
    private @Nullable String name;
    private String namespace;
    /**
     * @return When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard &#34;*&#34;. For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
     * 
     */
    private @Nullable List<String> objectNameFilters;
    /**
     * @return Name of the Object Storage bucket.
     * 
     */
    private @Nullable String osBucketName;
    /**
     * @return Object Storage namespace.
     * 
     */
    private @Nullable String osNamespace;
    /**
     * @return Use this to override some property values which are defined at bucket level to the scope of object. Supported propeties for override are, logSourceName, charEncoding. Supported matchType for override are &#34;contains&#34;.
     * 
     */
    private @Nullable List<GetLogAnalyticsObjectCollectionRuleOverride> overrides;
    /**
     * @return The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     * 
     */
    private @Nullable String pollSince;
    /**
     * @return The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
     * 
     */
    private @Nullable String pollTill;
    /**
     * @return The current state of the rule.
     * 
     */
    private @Nullable String state;
    /**
     * @return The time when this rule was created. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time when this rule was last updated. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return Timezone to be used when processing log entries whose timestamps do not include an explicit timezone.  When this property is not specified, the timezone of the entity specified is used.  If the entity is also not specified or do not have a valid timezone then UTC is used.
     * 
     */
    private @Nullable String timezone;

    private GetLogAnalyticsObjectCollectionRuleResult() {}
    /**
     * @return An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     * 
     */
    public Optional<String> charEncoding() {
        return Optional.ofNullable(this.charEncoding);
    }
    /**
     * @return The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     * 
     */
    public Optional<String> collectionType() {
        return Optional.ofNullable(this.collectionType);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Logging Analytics entity OCID to associate the processed logs with.
     * 
     */
    public Optional<String> entityId() {
        return Optional.ofNullable(this.entityId);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this rule.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether or not this rule is currently enabled.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return A detailed status of the life cycle state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    public String logAnalyticsObjectCollectionRuleId() {
        return this.logAnalyticsObjectCollectionRuleId;
    }
    /**
     * @return Logging Analytics Log group OCID to associate the processed logs with.
     * 
     */
    public Optional<String> logGroupId() {
        return Optional.ofNullable(this.logGroupId);
    }
    /**
     * @return The logSet to be associated with the processed logs. The logSet feature can be used by customers with high volume of data  and this feature has to be enabled for a given tenancy prior to its usage. When logSetExtRegex value is provided, it will take precedence over this logSet value and logSet will be computed dynamically  using logSetKey and logSetExtRegex.
     * 
     */
    public Optional<String> logSet() {
        return Optional.ofNullable(this.logSet);
    }
    /**
     * @return The regex to be applied against given logSetKey. Regex has to be in string escaped format.
     * 
     */
    public Optional<String> logSetExtRegex() {
        return Optional.ofNullable(this.logSetExtRegex);
    }
    /**
     * @return An optional parameter to indicate from where the logSet to be extracted using logSetExtRegex. Default value is OBJECT_PATH (e.g. /n/&lt;namespace&gt;/b/&lt;bucketname&gt;/o/&lt;objectname&gt;).
     * 
     */
    public Optional<String> logSetKey() {
        return Optional.ofNullable(this.logSetKey);
    }
    /**
     * @return Name of the Logging Analytics Source to use for the processing.
     * 
     */
    public Optional<String> logSourceName() {
        return Optional.ofNullable(this.logSourceName);
    }
    /**
     * @return A unique name to the rule. The name must be unique, within the tenancy, and cannot be changed.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard &#34;*&#34;. For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
     * 
     */
    public List<String> objectNameFilters() {
        return this.objectNameFilters == null ? List.of() : this.objectNameFilters;
    }
    /**
     * @return Name of the Object Storage bucket.
     * 
     */
    public Optional<String> osBucketName() {
        return Optional.ofNullable(this.osBucketName);
    }
    /**
     * @return Object Storage namespace.
     * 
     */
    public Optional<String> osNamespace() {
        return Optional.ofNullable(this.osNamespace);
    }
    /**
     * @return Use this to override some property values which are defined at bucket level to the scope of object. Supported propeties for override are, logSourceName, charEncoding. Supported matchType for override are &#34;contains&#34;.
     * 
     */
    public List<GetLogAnalyticsObjectCollectionRuleOverride> overrides() {
        return this.overrides == null ? List.of() : this.overrides;
    }
    /**
     * @return The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     * 
     */
    public Optional<String> pollSince() {
        return Optional.ofNullable(this.pollSince);
    }
    /**
     * @return The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
     * 
     */
    public Optional<String> pollTill() {
        return Optional.ofNullable(this.pollTill);
    }
    /**
     * @return The current state of the rule.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The time when this rule was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time when this rule was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return Timezone to be used when processing log entries whose timestamps do not include an explicit timezone.  When this property is not specified, the timezone of the entity specified is used.  If the entity is also not specified or do not have a valid timezone then UTC is used.
     * 
     */
    public Optional<String> timezone() {
        return Optional.ofNullable(this.timezone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsObjectCollectionRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String charEncoding;
        private @Nullable String collectionType;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String entityId;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isEnabled;
        private @Nullable String lifecycleDetails;
        private String logAnalyticsObjectCollectionRuleId;
        private @Nullable String logGroupId;
        private @Nullable String logSet;
        private @Nullable String logSetExtRegex;
        private @Nullable String logSetKey;
        private @Nullable String logSourceName;
        private @Nullable String name;
        private String namespace;
        private @Nullable List<String> objectNameFilters;
        private @Nullable String osBucketName;
        private @Nullable String osNamespace;
        private @Nullable List<GetLogAnalyticsObjectCollectionRuleOverride> overrides;
        private @Nullable String pollSince;
        private @Nullable String pollTill;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String timezone;
        public Builder() {}
        public Builder(GetLogAnalyticsObjectCollectionRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.charEncoding = defaults.charEncoding;
    	      this.collectionType = defaults.collectionType;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.entityId = defaults.entityId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.logAnalyticsObjectCollectionRuleId = defaults.logAnalyticsObjectCollectionRuleId;
    	      this.logGroupId = defaults.logGroupId;
    	      this.logSet = defaults.logSet;
    	      this.logSetExtRegex = defaults.logSetExtRegex;
    	      this.logSetKey = defaults.logSetKey;
    	      this.logSourceName = defaults.logSourceName;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.objectNameFilters = defaults.objectNameFilters;
    	      this.osBucketName = defaults.osBucketName;
    	      this.osNamespace = defaults.osNamespace;
    	      this.overrides = defaults.overrides;
    	      this.pollSince = defaults.pollSince;
    	      this.pollTill = defaults.pollTill;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.timezone = defaults.timezone;
        }

        @CustomType.Setter
        public Builder charEncoding(@Nullable String charEncoding) {
            this.charEncoding = charEncoding;
            return this;
        }
        @CustomType.Setter
        public Builder collectionType(@Nullable String collectionType) {
            this.collectionType = collectionType;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder entityId(@Nullable String entityId) {
            this.entityId = entityId;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder logAnalyticsObjectCollectionRuleId(String logAnalyticsObjectCollectionRuleId) {
            this.logAnalyticsObjectCollectionRuleId = Objects.requireNonNull(logAnalyticsObjectCollectionRuleId);
            return this;
        }
        @CustomType.Setter
        public Builder logGroupId(@Nullable String logGroupId) {
            this.logGroupId = logGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder logSet(@Nullable String logSet) {
            this.logSet = logSet;
            return this;
        }
        @CustomType.Setter
        public Builder logSetExtRegex(@Nullable String logSetExtRegex) {
            this.logSetExtRegex = logSetExtRegex;
            return this;
        }
        @CustomType.Setter
        public Builder logSetKey(@Nullable String logSetKey) {
            this.logSetKey = logSetKey;
            return this;
        }
        @CustomType.Setter
        public Builder logSourceName(@Nullable String logSourceName) {
            this.logSourceName = logSourceName;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        @CustomType.Setter
        public Builder objectNameFilters(@Nullable List<String> objectNameFilters) {
            this.objectNameFilters = objectNameFilters;
            return this;
        }
        public Builder objectNameFilters(String... objectNameFilters) {
            return objectNameFilters(List.of(objectNameFilters));
        }
        @CustomType.Setter
        public Builder osBucketName(@Nullable String osBucketName) {
            this.osBucketName = osBucketName;
            return this;
        }
        @CustomType.Setter
        public Builder osNamespace(@Nullable String osNamespace) {
            this.osNamespace = osNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder overrides(@Nullable List<GetLogAnalyticsObjectCollectionRuleOverride> overrides) {
            this.overrides = overrides;
            return this;
        }
        public Builder overrides(GetLogAnalyticsObjectCollectionRuleOverride... overrides) {
            return overrides(List.of(overrides));
        }
        @CustomType.Setter
        public Builder pollSince(@Nullable String pollSince) {
            this.pollSince = pollSince;
            return this;
        }
        @CustomType.Setter
        public Builder pollTill(@Nullable String pollTill) {
            this.pollTill = pollTill;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder timezone(@Nullable String timezone) {
            this.timezone = timezone;
            return this;
        }
        public GetLogAnalyticsObjectCollectionRuleResult build() {
            final var o = new GetLogAnalyticsObjectCollectionRuleResult();
            o.charEncoding = charEncoding;
            o.collectionType = collectionType;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.entityId = entityId;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isEnabled = isEnabled;
            o.lifecycleDetails = lifecycleDetails;
            o.logAnalyticsObjectCollectionRuleId = logAnalyticsObjectCollectionRuleId;
            o.logGroupId = logGroupId;
            o.logSet = logSet;
            o.logSetExtRegex = logSetExtRegex;
            o.logSetKey = logSetKey;
            o.logSourceName = logSourceName;
            o.name = name;
            o.namespace = namespace;
            o.objectNameFilters = objectNameFilters;
            o.osBucketName = osBucketName;
            o.osNamespace = osNamespace;
            o.overrides = overrides;
            o.pollSince = pollSince;
            o.pollTill = pollTill;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.timezone = timezone;
            return o;
        }
    }
}
