// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLogAnalyticsUnprocessedDataBucketResult {
    /**
     * @return Name of the Object Storage bucket.
     * 
     */
    private @Nullable String bucket;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Flag that specifies if this configuration is enabled or not.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return Object Storage namespace.
     * 
     */
    private String namespace;
    /**
     * @return The time when this record is created. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The latest time when this record is updated. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;

    private GetLogAnalyticsUnprocessedDataBucketResult() {}
    /**
     * @return Name of the Object Storage bucket.
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Flag that specifies if this configuration is enabled or not.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return Object Storage namespace.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The time when this record is created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The latest time when this record is updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsUnprocessedDataBucketResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucket;
        private @Nullable String id;
        private @Nullable Boolean isEnabled;
        private String namespace;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetLogAnalyticsUnprocessedDataBucketResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.namespace = defaults.namespace;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetLogAnalyticsUnprocessedDataBucketResult build() {
            final var o = new GetLogAnalyticsUnprocessedDataBucketResult();
            o.bucket = bucket;
            o.id = id;
            o.isEnabled = isEnabled;
            o.namespace = namespace;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
