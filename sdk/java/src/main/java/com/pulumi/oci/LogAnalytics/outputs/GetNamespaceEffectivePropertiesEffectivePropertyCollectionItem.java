// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceEffectivePropertiesEffectivePropertyCollectionItemPattern;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNamespaceEffectivePropertiesEffectivePropertyCollectionItem {
    /**
     * @return The effective level of the property value.
     * 
     */
    private String effectiveLevel;
    /**
     * @return The property name used for filtering.
     * 
     */
    private String name;
    /**
     * @return A list of pattern level override values for the property.
     * 
     */
    private List<GetNamespaceEffectivePropertiesEffectivePropertyCollectionItemPattern> patterns;
    /**
     * @return The effective value of the property. This is determined by considering the value set at the most effective level.
     * 
     */
    private String value;

    private GetNamespaceEffectivePropertiesEffectivePropertyCollectionItem() {}
    /**
     * @return The effective level of the property value.
     * 
     */
    public String effectiveLevel() {
        return this.effectiveLevel;
    }
    /**
     * @return The property name used for filtering.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of pattern level override values for the property.
     * 
     */
    public List<GetNamespaceEffectivePropertiesEffectivePropertyCollectionItemPattern> patterns() {
        return this.patterns;
    }
    /**
     * @return The effective value of the property. This is determined by considering the value set at the most effective level.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceEffectivePropertiesEffectivePropertyCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String effectiveLevel;
        private String name;
        private List<GetNamespaceEffectivePropertiesEffectivePropertyCollectionItemPattern> patterns;
        private String value;
        public Builder() {}
        public Builder(GetNamespaceEffectivePropertiesEffectivePropertyCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.effectiveLevel = defaults.effectiveLevel;
    	      this.name = defaults.name;
    	      this.patterns = defaults.patterns;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder effectiveLevel(String effectiveLevel) {
            if (effectiveLevel == null) {
              throw new MissingRequiredPropertyException("GetNamespaceEffectivePropertiesEffectivePropertyCollectionItem", "effectiveLevel");
            }
            this.effectiveLevel = effectiveLevel;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNamespaceEffectivePropertiesEffectivePropertyCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder patterns(List<GetNamespaceEffectivePropertiesEffectivePropertyCollectionItemPattern> patterns) {
            if (patterns == null) {
              throw new MissingRequiredPropertyException("GetNamespaceEffectivePropertiesEffectivePropertyCollectionItem", "patterns");
            }
            this.patterns = patterns;
            return this;
        }
        public Builder patterns(GetNamespaceEffectivePropertiesEffectivePropertyCollectionItemPattern... patterns) {
            return patterns(List.of(patterns));
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetNamespaceEffectivePropertiesEffectivePropertyCollectionItem", "value");
            }
            this.value = value;
            return this;
        }
        public GetNamespaceEffectivePropertiesEffectivePropertyCollectionItem build() {
            final var _resultValue = new GetNamespaceEffectivePropertiesEffectivePropertyCollectionItem();
            _resultValue.effectiveLevel = effectiveLevel;
            _resultValue.name = name;
            _resultValue.patterns = patterns;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
