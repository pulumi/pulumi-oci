// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNamespaceFieldUsageDependentSourceEntityType {
    /**
     * @return The entity type.
     * 
     */
    private String entityType;
    /**
     * @return The type category.
     * 
     */
    private String entityTypeCategory;
    /**
     * @return The entity type display name.
     * 
     */
    private String entityTypeDisplayName;
    /**
     * @return The source unique identifier.
     * 
     */
    private String sourceId;

    private GetNamespaceFieldUsageDependentSourceEntityType() {}
    /**
     * @return The entity type.
     * 
     */
    public String entityType() {
        return this.entityType;
    }
    /**
     * @return The type category.
     * 
     */
    public String entityTypeCategory() {
        return this.entityTypeCategory;
    }
    /**
     * @return The entity type display name.
     * 
     */
    public String entityTypeDisplayName() {
        return this.entityTypeDisplayName;
    }
    /**
     * @return The source unique identifier.
     * 
     */
    public String sourceId() {
        return this.sourceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceFieldUsageDependentSourceEntityType defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String entityType;
        private String entityTypeCategory;
        private String entityTypeDisplayName;
        private String sourceId;
        public Builder() {}
        public Builder(GetNamespaceFieldUsageDependentSourceEntityType defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityType = defaults.entityType;
    	      this.entityTypeCategory = defaults.entityTypeCategory;
    	      this.entityTypeDisplayName = defaults.entityTypeDisplayName;
    	      this.sourceId = defaults.sourceId;
        }

        @CustomType.Setter
        public Builder entityType(String entityType) {
            if (entityType == null) {
              throw new MissingRequiredPropertyException("GetNamespaceFieldUsageDependentSourceEntityType", "entityType");
            }
            this.entityType = entityType;
            return this;
        }
        @CustomType.Setter
        public Builder entityTypeCategory(String entityTypeCategory) {
            if (entityTypeCategory == null) {
              throw new MissingRequiredPropertyException("GetNamespaceFieldUsageDependentSourceEntityType", "entityTypeCategory");
            }
            this.entityTypeCategory = entityTypeCategory;
            return this;
        }
        @CustomType.Setter
        public Builder entityTypeDisplayName(String entityTypeDisplayName) {
            if (entityTypeDisplayName == null) {
              throw new MissingRequiredPropertyException("GetNamespaceFieldUsageDependentSourceEntityType", "entityTypeDisplayName");
            }
            this.entityTypeDisplayName = entityTypeDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder sourceId(String sourceId) {
            if (sourceId == null) {
              throw new MissingRequiredPropertyException("GetNamespaceFieldUsageDependentSourceEntityType", "sourceId");
            }
            this.sourceId = sourceId;
            return this;
        }
        public GetNamespaceFieldUsageDependentSourceEntityType build() {
            final var _resultValue = new GetNamespaceFieldUsageDependentSourceEntityType();
            _resultValue.entityType = entityType;
            _resultValue.entityTypeCategory = entityTypeCategory;
            _resultValue.entityTypeDisplayName = entityTypeDisplayName;
            _resultValue.sourceId = sourceId;
            return _resultValue;
        }
    }
}
