// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceIngestTimeRuleConditionAdditionalCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamespaceIngestTimeRuleCondition {
    /**
     * @return Optional additional condition(s) to be evaluated.
     * 
     */
    private @Nullable List<GetNamespaceIngestTimeRuleConditionAdditionalCondition> additionalConditions;
    /**
     * @return The field name to be evaluated.
     * 
     */
    private @Nullable String fieldName;
    /**
     * @return The operator to be used for evaluating the field.
     * 
     */
    private @Nullable String fieldOperator;
    /**
     * @return The field value to be evaluated.
     * 
     */
    private @Nullable String fieldValue;
    /**
     * @return Discriminator.
     * 
     */
    private @Nullable String kind;

    private GetNamespaceIngestTimeRuleCondition() {}
    /**
     * @return Optional additional condition(s) to be evaluated.
     * 
     */
    public List<GetNamespaceIngestTimeRuleConditionAdditionalCondition> additionalConditions() {
        return this.additionalConditions == null ? List.of() : this.additionalConditions;
    }
    /**
     * @return The field name to be evaluated.
     * 
     */
    public Optional<String> fieldName() {
        return Optional.ofNullable(this.fieldName);
    }
    /**
     * @return The operator to be used for evaluating the field.
     * 
     */
    public Optional<String> fieldOperator() {
        return Optional.ofNullable(this.fieldOperator);
    }
    /**
     * @return The field value to be evaluated.
     * 
     */
    public Optional<String> fieldValue() {
        return Optional.ofNullable(this.fieldValue);
    }
    /**
     * @return Discriminator.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceIngestTimeRuleCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetNamespaceIngestTimeRuleConditionAdditionalCondition> additionalConditions;
        private @Nullable String fieldName;
        private @Nullable String fieldOperator;
        private @Nullable String fieldValue;
        private @Nullable String kind;
        public Builder() {}
        public Builder(GetNamespaceIngestTimeRuleCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalConditions = defaults.additionalConditions;
    	      this.fieldName = defaults.fieldName;
    	      this.fieldOperator = defaults.fieldOperator;
    	      this.fieldValue = defaults.fieldValue;
    	      this.kind = defaults.kind;
        }

        @CustomType.Setter
        public Builder additionalConditions(@Nullable List<GetNamespaceIngestTimeRuleConditionAdditionalCondition> additionalConditions) {
            this.additionalConditions = additionalConditions;
            return this;
        }
        public Builder additionalConditions(GetNamespaceIngestTimeRuleConditionAdditionalCondition... additionalConditions) {
            return additionalConditions(List.of(additionalConditions));
        }
        @CustomType.Setter
        public Builder fieldName(@Nullable String fieldName) {
            this.fieldName = fieldName;
            return this;
        }
        @CustomType.Setter
        public Builder fieldOperator(@Nullable String fieldOperator) {
            this.fieldOperator = fieldOperator;
            return this;
        }
        @CustomType.Setter
        public Builder fieldValue(@Nullable String fieldValue) {
            this.fieldValue = fieldValue;
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        public GetNamespaceIngestTimeRuleCondition build() {
            final var o = new GetNamespaceIngestTimeRuleCondition();
            o.additionalConditions = additionalConditions;
            o.fieldName = fieldName;
            o.fieldOperator = fieldOperator;
            o.fieldValue = fieldValue;
            o.kind = kind;
            return o;
        }
    }
}
