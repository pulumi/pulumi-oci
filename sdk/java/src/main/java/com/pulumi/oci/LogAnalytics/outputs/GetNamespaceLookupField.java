// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNamespaceLookupField {
    /**
     * @return The common field name.
     * 
     */
    private String commonFieldName;
    /**
     * @return The default match value.
     * 
     */
    private String defaultMatchValue;
    /**
     * @return The field display name.
     * 
     */
    private String displayName;
    /**
     * @return A flag indicating whether or not the lookup field is a common field.
     * 
     */
    private Boolean isCommonField;
    /**
     * @return The match operator.
     * 
     */
    private String matchOperator;
    /**
     * @return The field name.
     * 
     */
    private String name;
    /**
     * @return THe field position.
     * 
     */
    private String position;

    private GetNamespaceLookupField() {}
    /**
     * @return The common field name.
     * 
     */
    public String commonFieldName() {
        return this.commonFieldName;
    }
    /**
     * @return The default match value.
     * 
     */
    public String defaultMatchValue() {
        return this.defaultMatchValue;
    }
    /**
     * @return The field display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return A flag indicating whether or not the lookup field is a common field.
     * 
     */
    public Boolean isCommonField() {
        return this.isCommonField;
    }
    /**
     * @return The match operator.
     * 
     */
    public String matchOperator() {
        return this.matchOperator;
    }
    /**
     * @return The field name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return THe field position.
     * 
     */
    public String position() {
        return this.position;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceLookupField defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String commonFieldName;
        private String defaultMatchValue;
        private String displayName;
        private Boolean isCommonField;
        private String matchOperator;
        private String name;
        private String position;
        public Builder() {}
        public Builder(GetNamespaceLookupField defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonFieldName = defaults.commonFieldName;
    	      this.defaultMatchValue = defaults.defaultMatchValue;
    	      this.displayName = defaults.displayName;
    	      this.isCommonField = defaults.isCommonField;
    	      this.matchOperator = defaults.matchOperator;
    	      this.name = defaults.name;
    	      this.position = defaults.position;
        }

        @CustomType.Setter
        public Builder commonFieldName(String commonFieldName) {
            if (commonFieldName == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupField", "commonFieldName");
            }
            this.commonFieldName = commonFieldName;
            return this;
        }
        @CustomType.Setter
        public Builder defaultMatchValue(String defaultMatchValue) {
            if (defaultMatchValue == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupField", "defaultMatchValue");
            }
            this.defaultMatchValue = defaultMatchValue;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupField", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder isCommonField(Boolean isCommonField) {
            if (isCommonField == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupField", "isCommonField");
            }
            this.isCommonField = isCommonField;
            return this;
        }
        @CustomType.Setter
        public Builder matchOperator(String matchOperator) {
            if (matchOperator == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupField", "matchOperator");
            }
            this.matchOperator = matchOperator;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupField", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder position(String position) {
            if (position == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupField", "position");
            }
            this.position = position;
            return this;
        }
        public GetNamespaceLookupField build() {
            final var _resultValue = new GetNamespaceLookupField();
            _resultValue.commonFieldName = commonFieldName;
            _resultValue.defaultMatchValue = defaultMatchValue;
            _resultValue.displayName = displayName;
            _resultValue.isCommonField = isCommonField;
            _resultValue.matchOperator = matchOperator;
            _resultValue.name = name;
            _resultValue.position = position;
            return _resultValue;
        }
    }
}
