// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNamespaceLookupStatusSummary {
    /**
     * @return The number of chunks processed.
     * 
     */
    private String chunksProcessed;
    /**
     * @return The failure details, if any.
     * 
     */
    private String failureDetails;
    /**
     * @return The filename.
     * 
     */
    private String filename;
    /**
     * @return The status.
     * 
     */
    private String status;
    /**
     * @return The total number of chunks.
     * 
     */
    private String totalChunks;

    private GetNamespaceLookupStatusSummary() {}
    /**
     * @return The number of chunks processed.
     * 
     */
    public String chunksProcessed() {
        return this.chunksProcessed;
    }
    /**
     * @return The failure details, if any.
     * 
     */
    public String failureDetails() {
        return this.failureDetails;
    }
    /**
     * @return The filename.
     * 
     */
    public String filename() {
        return this.filename;
    }
    /**
     * @return The status.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The total number of chunks.
     * 
     */
    public String totalChunks() {
        return this.totalChunks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceLookupStatusSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String chunksProcessed;
        private String failureDetails;
        private String filename;
        private String status;
        private String totalChunks;
        public Builder() {}
        public Builder(GetNamespaceLookupStatusSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chunksProcessed = defaults.chunksProcessed;
    	      this.failureDetails = defaults.failureDetails;
    	      this.filename = defaults.filename;
    	      this.status = defaults.status;
    	      this.totalChunks = defaults.totalChunks;
        }

        @CustomType.Setter
        public Builder chunksProcessed(String chunksProcessed) {
            if (chunksProcessed == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupStatusSummary", "chunksProcessed");
            }
            this.chunksProcessed = chunksProcessed;
            return this;
        }
        @CustomType.Setter
        public Builder failureDetails(String failureDetails) {
            if (failureDetails == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupStatusSummary", "failureDetails");
            }
            this.failureDetails = failureDetails;
            return this;
        }
        @CustomType.Setter
        public Builder filename(String filename) {
            if (filename == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupStatusSummary", "filename");
            }
            this.filename = filename;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupStatusSummary", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder totalChunks(String totalChunks) {
            if (totalChunks == null) {
              throw new MissingRequiredPropertyException("GetNamespaceLookupStatusSummary", "totalChunks");
            }
            this.totalChunks = totalChunks;
            return this;
        }
        public GetNamespaceLookupStatusSummary build() {
            final var _resultValue = new GetNamespaceLookupStatusSummary();
            _resultValue.chunksProcessed = chunksProcessed;
            _resultValue.failureDetails = failureDetails;
            _resultValue.filename = filename;
            _resultValue.status = status;
            _resultValue.totalChunks = totalChunks;
            return _resultValue;
        }
    }
}
