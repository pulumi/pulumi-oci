// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceParserActionsFilter;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceParserActionsParserActionSummaryCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamespaceParserActionsResult {
    private @Nullable String actionDisplayText;
    private @Nullable List<GetNamespaceParserActionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The parser action name.
     * 
     */
    private @Nullable String name;
    private String namespace;
    /**
     * @return The list of parser_action_summary_collection.
     * 
     */
    private List<GetNamespaceParserActionsParserActionSummaryCollection> parserActionSummaryCollections;

    private GetNamespaceParserActionsResult() {}
    public Optional<String> actionDisplayText() {
        return Optional.ofNullable(this.actionDisplayText);
    }
    public List<GetNamespaceParserActionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The parser action name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The list of parser_action_summary_collection.
     * 
     */
    public List<GetNamespaceParserActionsParserActionSummaryCollection> parserActionSummaryCollections() {
        return this.parserActionSummaryCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceParserActionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String actionDisplayText;
        private @Nullable List<GetNamespaceParserActionsFilter> filters;
        private String id;
        private @Nullable String name;
        private String namespace;
        private List<GetNamespaceParserActionsParserActionSummaryCollection> parserActionSummaryCollections;
        public Builder() {}
        public Builder(GetNamespaceParserActionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionDisplayText = defaults.actionDisplayText;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.parserActionSummaryCollections = defaults.parserActionSummaryCollections;
        }

        @CustomType.Setter
        public Builder actionDisplayText(@Nullable String actionDisplayText) {

            this.actionDisplayText = actionDisplayText;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetNamespaceParserActionsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetNamespaceParserActionsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNamespaceParserActionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetNamespaceParserActionsResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder parserActionSummaryCollections(List<GetNamespaceParserActionsParserActionSummaryCollection> parserActionSummaryCollections) {
            if (parserActionSummaryCollections == null) {
              throw new MissingRequiredPropertyException("GetNamespaceParserActionsResult", "parserActionSummaryCollections");
            }
            this.parserActionSummaryCollections = parserActionSummaryCollections;
            return this;
        }
        public Builder parserActionSummaryCollections(GetNamespaceParserActionsParserActionSummaryCollection... parserActionSummaryCollections) {
            return parserActionSummaryCollections(List.of(parserActionSummaryCollections));
        }
        public GetNamespaceParserActionsResult build() {
            final var _resultValue = new GetNamespaceParserActionsResult();
            _resultValue.actionDisplayText = actionDisplayText;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.parserActionSummaryCollections = parserActionSummaryCollections;
            return _resultValue;
        }
    }
}
