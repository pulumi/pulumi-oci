// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespacePropertiesMetadataFilter;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespacePropertiesMetadataPropertyMetadataSummaryCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamespacePropertiesMetadataResult {
    /**
     * @return A string representation of constraints that apply at this level. For example, a property defined at SOURCE level could further be applicable only for SOURCE_TYPE:database_sql.
     * 
     */
    private @Nullable String constraints;
    private @Nullable String displayText;
    private @Nullable List<GetNamespacePropertiesMetadataFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String level;
    /**
     * @return The property name.
     * 
     */
    private @Nullable String name;
    private String namespace;
    /**
     * @return The list of property_metadata_summary_collection.
     * 
     */
    private List<GetNamespacePropertiesMetadataPropertyMetadataSummaryCollection> propertyMetadataSummaryCollections;

    private GetNamespacePropertiesMetadataResult() {}
    /**
     * @return A string representation of constraints that apply at this level. For example, a property defined at SOURCE level could further be applicable only for SOURCE_TYPE:database_sql.
     * 
     */
    public Optional<String> constraints() {
        return Optional.ofNullable(this.constraints);
    }
    public Optional<String> displayText() {
        return Optional.ofNullable(this.displayText);
    }
    public List<GetNamespacePropertiesMetadataFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> level() {
        return Optional.ofNullable(this.level);
    }
    /**
     * @return The property name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The list of property_metadata_summary_collection.
     * 
     */
    public List<GetNamespacePropertiesMetadataPropertyMetadataSummaryCollection> propertyMetadataSummaryCollections() {
        return this.propertyMetadataSummaryCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespacePropertiesMetadataResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String constraints;
        private @Nullable String displayText;
        private @Nullable List<GetNamespacePropertiesMetadataFilter> filters;
        private String id;
        private @Nullable String level;
        private @Nullable String name;
        private String namespace;
        private List<GetNamespacePropertiesMetadataPropertyMetadataSummaryCollection> propertyMetadataSummaryCollections;
        public Builder() {}
        public Builder(GetNamespacePropertiesMetadataResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.constraints = defaults.constraints;
    	      this.displayText = defaults.displayText;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.level = defaults.level;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.propertyMetadataSummaryCollections = defaults.propertyMetadataSummaryCollections;
        }

        @CustomType.Setter
        public Builder constraints(@Nullable String constraints) {
            this.constraints = constraints;
            return this;
        }
        @CustomType.Setter
        public Builder displayText(@Nullable String displayText) {
            this.displayText = displayText;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetNamespacePropertiesMetadataFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetNamespacePropertiesMetadataFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder level(@Nullable String level) {
            this.level = level;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        @CustomType.Setter
        public Builder propertyMetadataSummaryCollections(List<GetNamespacePropertiesMetadataPropertyMetadataSummaryCollection> propertyMetadataSummaryCollections) {
            this.propertyMetadataSummaryCollections = Objects.requireNonNull(propertyMetadataSummaryCollections);
            return this;
        }
        public Builder propertyMetadataSummaryCollections(GetNamespacePropertiesMetadataPropertyMetadataSummaryCollection... propertyMetadataSummaryCollections) {
            return propertyMetadataSummaryCollections(List.of(propertyMetadataSummaryCollections));
        }
        public GetNamespacePropertiesMetadataResult build() {
            final var o = new GetNamespacePropertiesMetadataResult();
            o.constraints = constraints;
            o.displayText = displayText;
            o.filters = filters;
            o.id = id;
            o.level = level;
            o.name = name;
            o.namespace = namespace;
            o.propertyMetadataSummaryCollections = propertyMetadataSummaryCollections;
            return o;
        }
    }
}
