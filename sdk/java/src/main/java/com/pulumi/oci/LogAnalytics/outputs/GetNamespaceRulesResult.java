// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceRulesFilter;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceRulesRuleSummaryCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamespaceRulesResult {
    /**
     * @return Compartment Identifier [OCID] (&lt;https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)&gt;.
     * 
     */
    private String compartmentId;
    /**
     * @return The ingest time rule or scheduled task display name.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetNamespaceRulesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The kind of rule - either an ingest time rule or a scheduled task.
     * 
     */
    private @Nullable String kind;
    private String namespace;
    /**
     * @return The list of rule_summary_collection.
     * 
     */
    private List<GetNamespaceRulesRuleSummaryCollection> ruleSummaryCollections;
    /**
     * @return The current state of the logging analytics rule.
     * 
     */
    private @Nullable String state;
    /**
     * @return The target service.
     * 
     */
    private @Nullable String targetService;

    private GetNamespaceRulesResult() {}
    /**
     * @return Compartment Identifier [OCID] (&lt;https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)&gt;.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The ingest time rule or scheduled task display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetNamespaceRulesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The kind of rule - either an ingest time rule or a scheduled task.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The list of rule_summary_collection.
     * 
     */
    public List<GetNamespaceRulesRuleSummaryCollection> ruleSummaryCollections() {
        return this.ruleSummaryCollections;
    }
    /**
     * @return The current state of the logging analytics rule.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The target service.
     * 
     */
    public Optional<String> targetService() {
        return Optional.ofNullable(this.targetService);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceRulesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetNamespaceRulesFilter> filters;
        private String id;
        private @Nullable String kind;
        private String namespace;
        private List<GetNamespaceRulesRuleSummaryCollection> ruleSummaryCollections;
        private @Nullable String state;
        private @Nullable String targetService;
        public Builder() {}
        public Builder(GetNamespaceRulesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.namespace = defaults.namespace;
    	      this.ruleSummaryCollections = defaults.ruleSummaryCollections;
    	      this.state = defaults.state;
    	      this.targetService = defaults.targetService;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetNamespaceRulesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetNamespaceRulesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetNamespaceRulesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNamespaceRulesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {

            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetNamespaceRulesResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder ruleSummaryCollections(List<GetNamespaceRulesRuleSummaryCollection> ruleSummaryCollections) {
            if (ruleSummaryCollections == null) {
              throw new MissingRequiredPropertyException("GetNamespaceRulesResult", "ruleSummaryCollections");
            }
            this.ruleSummaryCollections = ruleSummaryCollections;
            return this;
        }
        public Builder ruleSummaryCollections(GetNamespaceRulesRuleSummaryCollection... ruleSummaryCollections) {
            return ruleSummaryCollections(List.of(ruleSummaryCollections));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targetService(@Nullable String targetService) {

            this.targetService = targetService;
            return this;
        }
        public GetNamespaceRulesResult build() {
            final var _resultValue = new GetNamespaceRulesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.kind = kind;
            _resultValue.namespace = namespace;
            _resultValue.ruleSummaryCollections = ruleSummaryCollections;
            _resultValue.state = state;
            _resultValue.targetService = targetService;
            return _resultValue;
        }
    }
}
