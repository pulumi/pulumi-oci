// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamespaceRulesRuleSummaryCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Description for this resource.
     * 
     */
    private @Nullable String description;
    /**
     * @return A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
     * 
     */
    private @Nullable String id;
    /**
     * @return A flag indicating whether or not the ingest time rule or scheduled task is enabled.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return The rule kind used for filtering. Only rules of the specified kind will be returned.
     * 
     */
    private @Nullable String kind;
    /**
     * @return The most recent task execution status.
     * 
     */
    private @Nullable String lastExecutionStatus;
    /**
     * @return The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the resource was created, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the scheduled task last executed, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeLastExecuted;
    /**
     * @return The date and time the resource was last updated, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;

    private GetNamespaceRulesRuleSummaryCollectionItem() {}
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Description for this resource.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A filter to return rules whose displayName matches in whole or in part the specified value. The match is case-insensitive.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The log analytics entity OCID. This ID is a reference used by log analytics features and it represents a resource that is provisioned and managed by the customer on their premises or on the cloud.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A flag indicating whether or not the ingest time rule or scheduled task is enabled.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return The rule kind used for filtering. Only rules of the specified kind will be returned.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return The most recent task execution status.
     * 
     */
    public Optional<String> lastExecutionStatus() {
        return Optional.ofNullable(this.lastExecutionStatus);
    }
    /**
     * @return The rule lifecycle state used for filtering. Currently supported values are ACTIVE and DELETED.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the resource was created, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the scheduled task last executed, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeLastExecuted() {
        return Optional.ofNullable(this.timeLastExecuted);
    }
    /**
     * @return The date and time the resource was last updated, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceRulesRuleSummaryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isEnabled;
        private @Nullable String kind;
        private @Nullable String lastExecutionStatus;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeLastExecuted;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetNamespaceRulesRuleSummaryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.kind = defaults.kind;
    	      this.lastExecutionStatus = defaults.lastExecutionStatus;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastExecuted = defaults.timeLastExecuted;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder lastExecutionStatus(@Nullable String lastExecutionStatus) {
            this.lastExecutionStatus = lastExecutionStatus;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastExecuted(@Nullable String timeLastExecuted) {
            this.timeLastExecuted = timeLastExecuted;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetNamespaceRulesRuleSummaryCollectionItem build() {
            final var o = new GetNamespaceRulesRuleSummaryCollectionItem();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isEnabled = isEnabled;
            o.kind = kind;
            o.lastExecutionStatus = lastExecutionStatus;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeLastExecuted = timeLastExecuted;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
