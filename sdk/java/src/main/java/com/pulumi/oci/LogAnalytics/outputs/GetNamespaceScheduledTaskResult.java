// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceScheduledTaskAction;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceScheduledTaskSchedule;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamespaceScheduledTaskResult {
    /**
     * @return Action for scheduled task.
     * 
     */
    private @Nullable List<GetNamespaceScheduledTaskAction> actions;
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the data plane resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Discriminator.
     * 
     */
    private @Nullable String kind;
    /**
     * @return The namespace of the extracted metric. A valid value starts with an alphabetical character and includes only alphanumeric characters and underscores (_).
     * 
     */
    private String namespace;
    /**
     * @return Number of execution occurrences.
     * 
     */
    private @Nullable String numOccurrences;
    /**
     * @return The ManagementSavedSearch id [OCID] utilized in the action.
     * 
     */
    private @Nullable String savedSearchId;
    private String scheduledTaskId;
    /**
     * @return Schedules.
     * 
     */
    private @Nullable List<GetNamespaceScheduledTaskSchedule> schedules;
    /**
     * @return The current state of the scheduled task.
     * 
     */
    private @Nullable String state;
    /**
     * @return Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
     * 
     */
    private @Nullable String taskStatus;
    /**
     * @return Task type.
     * 
     */
    private @Nullable String taskType;
    /**
     * @return The date and time the scheduled task was created, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the scheduled task was last updated, in the format defined by RFC3339.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
     * 
     */
    private @Nullable String workRequestId;

    private GetNamespaceScheduledTaskResult() {}
    /**
     * @return Action for scheduled task.
     * 
     */
    public List<GetNamespaceScheduledTaskAction> actions() {
        return this.actions == null ? List.of() : this.actions;
    }
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A user-friendly name that is changeable and that does not have to be unique. Format: a leading alphanumeric, followed by zero or more alphanumerics, underscores, spaces, backslashes, or hyphens in any order). No trailing spaces allowed.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the data plane resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Discriminator.
     * 
     */
    public Optional<String> kind() {
        return Optional.ofNullable(this.kind);
    }
    /**
     * @return The namespace of the extracted metric. A valid value starts with an alphabetical character and includes only alphanumeric characters and underscores (_).
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return Number of execution occurrences.
     * 
     */
    public Optional<String> numOccurrences() {
        return Optional.ofNullable(this.numOccurrences);
    }
    /**
     * @return The ManagementSavedSearch id [OCID] utilized in the action.
     * 
     */
    public Optional<String> savedSearchId() {
        return Optional.ofNullable(this.savedSearchId);
    }
    public String scheduledTaskId() {
        return this.scheduledTaskId;
    }
    /**
     * @return Schedules.
     * 
     */
    public List<GetNamespaceScheduledTaskSchedule> schedules() {
        return this.schedules == null ? List.of() : this.schedules;
    }
    /**
     * @return The current state of the scheduled task.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Status of the scheduled task. - PURGE_RESOURCE_NOT_FOUND
     * 
     */
    public Optional<String> taskStatus() {
        return Optional.ofNullable(this.taskStatus);
    }
    /**
     * @return Task type.
     * 
     */
    public Optional<String> taskType() {
        return Optional.ofNullable(this.taskType);
    }
    /**
     * @return The date and time the scheduled task was created, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the scheduled task was last updated, in the format defined by RFC3339.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return most recent Work Request Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) for the asynchronous request.
     * 
     */
    public Optional<String> workRequestId() {
        return Optional.ofNullable(this.workRequestId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceScheduledTaskResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetNamespaceScheduledTaskAction> actions;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String kind;
        private String namespace;
        private @Nullable String numOccurrences;
        private @Nullable String savedSearchId;
        private String scheduledTaskId;
        private @Nullable List<GetNamespaceScheduledTaskSchedule> schedules;
        private @Nullable String state;
        private @Nullable String taskStatus;
        private @Nullable String taskType;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String workRequestId;
        public Builder() {}
        public Builder(GetNamespaceScheduledTaskResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.kind = defaults.kind;
    	      this.namespace = defaults.namespace;
    	      this.numOccurrences = defaults.numOccurrences;
    	      this.savedSearchId = defaults.savedSearchId;
    	      this.scheduledTaskId = defaults.scheduledTaskId;
    	      this.schedules = defaults.schedules;
    	      this.state = defaults.state;
    	      this.taskStatus = defaults.taskStatus;
    	      this.taskType = defaults.taskType;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.workRequestId = defaults.workRequestId;
        }

        @CustomType.Setter
        public Builder actions(@Nullable List<GetNamespaceScheduledTaskAction> actions) {
            this.actions = actions;
            return this;
        }
        public Builder actions(GetNamespaceScheduledTaskAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kind(@Nullable String kind) {
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        @CustomType.Setter
        public Builder numOccurrences(@Nullable String numOccurrences) {
            this.numOccurrences = numOccurrences;
            return this;
        }
        @CustomType.Setter
        public Builder savedSearchId(@Nullable String savedSearchId) {
            this.savedSearchId = savedSearchId;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledTaskId(String scheduledTaskId) {
            this.scheduledTaskId = Objects.requireNonNull(scheduledTaskId);
            return this;
        }
        @CustomType.Setter
        public Builder schedules(@Nullable List<GetNamespaceScheduledTaskSchedule> schedules) {
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(GetNamespaceScheduledTaskSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder taskStatus(@Nullable String taskStatus) {
            this.taskStatus = taskStatus;
            return this;
        }
        @CustomType.Setter
        public Builder taskType(@Nullable String taskType) {
            this.taskType = taskType;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder workRequestId(@Nullable String workRequestId) {
            this.workRequestId = workRequestId;
            return this;
        }
        public GetNamespaceScheduledTaskResult build() {
            final var o = new GetNamespaceScheduledTaskResult();
            o.actions = actions;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.kind = kind;
            o.namespace = namespace;
            o.numOccurrences = numOccurrences;
            o.savedSearchId = savedSearchId;
            o.scheduledTaskId = scheduledTaskId;
            o.schedules = schedules;
            o.state = state;
            o.taskStatus = taskStatus;
            o.taskType = taskType;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.workRequestId = workRequestId;
            return o;
        }
    }
}
