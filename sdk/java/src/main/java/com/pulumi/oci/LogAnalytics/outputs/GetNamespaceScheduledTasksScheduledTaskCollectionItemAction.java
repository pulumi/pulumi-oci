// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceScheduledTasksScheduledTaskCollectionItemActionMetricExtraction;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNamespaceScheduledTasksScheduledTaskCollectionItemAction {
    /**
     * @return if true, purge child compartments data
     * 
     */
    private Boolean compartmentIdInSubtree;
    /**
     * @return the type of the log data to be purged
     * 
     */
    private String dataType;
    private List<GetNamespaceScheduledTasksScheduledTaskCollectionItemActionMetricExtraction> metricExtractions;
    /**
     * @return the compartment OCID under which the data will be purged
     * 
     */
    private String purgeCompartmentId;
    /**
     * @return The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
     * 
     */
    private String purgeDuration;
    /**
     * @return Purge query string.
     * 
     */
    private String queryString;
    /**
     * @return The ManagementSavedSearch id [OCID] utilized in the action.
     * 
     */
    private String savedSearchId;
    /**
     * @return Schedule type discriminator.
     * 
     */
    private String type;

    private GetNamespaceScheduledTasksScheduledTaskCollectionItemAction() {}
    /**
     * @return if true, purge child compartments data
     * 
     */
    public Boolean compartmentIdInSubtree() {
        return this.compartmentIdInSubtree;
    }
    /**
     * @return the type of the log data to be purged
     * 
     */
    public String dataType() {
        return this.dataType;
    }
    public List<GetNamespaceScheduledTasksScheduledTaskCollectionItemActionMetricExtraction> metricExtractions() {
        return this.metricExtractions;
    }
    /**
     * @return the compartment OCID under which the data will be purged
     * 
     */
    public String purgeCompartmentId() {
        return this.purgeCompartmentId;
    }
    /**
     * @return The duration of data to be retained, which is used to calculate the timeDataEnded when the task fires. The value should be negative. Purge duration in ISO 8601 extended format as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. -P365D (not -P1Y) or -P14D (not -P2W).
     * 
     */
    public String purgeDuration() {
        return this.purgeDuration;
    }
    /**
     * @return Purge query string.
     * 
     */
    public String queryString() {
        return this.queryString;
    }
    /**
     * @return The ManagementSavedSearch id [OCID] utilized in the action.
     * 
     */
    public String savedSearchId() {
        return this.savedSearchId;
    }
    /**
     * @return Schedule type discriminator.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceScheduledTasksScheduledTaskCollectionItemAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean compartmentIdInSubtree;
        private String dataType;
        private List<GetNamespaceScheduledTasksScheduledTaskCollectionItemActionMetricExtraction> metricExtractions;
        private String purgeCompartmentId;
        private String purgeDuration;
        private String queryString;
        private String savedSearchId;
        private String type;
        public Builder() {}
        public Builder(GetNamespaceScheduledTasksScheduledTaskCollectionItemAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.dataType = defaults.dataType;
    	      this.metricExtractions = defaults.metricExtractions;
    	      this.purgeCompartmentId = defaults.purgeCompartmentId;
    	      this.purgeDuration = defaults.purgeDuration;
    	      this.queryString = defaults.queryString;
    	      this.savedSearchId = defaults.savedSearchId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = Objects.requireNonNull(compartmentIdInSubtree);
            return this;
        }
        @CustomType.Setter
        public Builder dataType(String dataType) {
            this.dataType = Objects.requireNonNull(dataType);
            return this;
        }
        @CustomType.Setter
        public Builder metricExtractions(List<GetNamespaceScheduledTasksScheduledTaskCollectionItemActionMetricExtraction> metricExtractions) {
            this.metricExtractions = Objects.requireNonNull(metricExtractions);
            return this;
        }
        public Builder metricExtractions(GetNamespaceScheduledTasksScheduledTaskCollectionItemActionMetricExtraction... metricExtractions) {
            return metricExtractions(List.of(metricExtractions));
        }
        @CustomType.Setter
        public Builder purgeCompartmentId(String purgeCompartmentId) {
            this.purgeCompartmentId = Objects.requireNonNull(purgeCompartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder purgeDuration(String purgeDuration) {
            this.purgeDuration = Objects.requireNonNull(purgeDuration);
            return this;
        }
        @CustomType.Setter
        public Builder queryString(String queryString) {
            this.queryString = Objects.requireNonNull(queryString);
            return this;
        }
        @CustomType.Setter
        public Builder savedSearchId(String savedSearchId) {
            this.savedSearchId = Objects.requireNonNull(savedSearchId);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetNamespaceScheduledTasksScheduledTaskCollectionItemAction build() {
            final var o = new GetNamespaceScheduledTasksScheduledTaskCollectionItemAction();
            o.compartmentIdInSubtree = compartmentIdInSubtree;
            o.dataType = dataType;
            o.metricExtractions = metricExtractions;
            o.purgeCompartmentId = purgeCompartmentId;
            o.purgeDuration = purgeDuration;
            o.queryString = queryString;
            o.savedSearchId = savedSearchId;
            o.type = type;
            return o;
        }
    }
}
