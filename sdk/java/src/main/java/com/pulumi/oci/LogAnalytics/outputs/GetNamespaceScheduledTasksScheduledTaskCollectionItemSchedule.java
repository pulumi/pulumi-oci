// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule {
    private List<GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule> schedules;

    private GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule() {}
    public List<GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule> schedules() {
        return this.schedules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule> schedules;
        public Builder() {}
        public Builder(GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.schedules = defaults.schedules;
        }

        @CustomType.Setter
        public Builder schedules(List<GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule> schedules) {
            if (schedules == null) {
              throw new MissingRequiredPropertyException("GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule", "schedules");
            }
            this.schedules = schedules;
            return this;
        }
        public Builder schedules(GetNamespaceScheduledTasksScheduledTaskCollectionItemScheduleSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        public GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule build() {
            final var _resultValue = new GetNamespaceScheduledTasksScheduledTaskCollectionItemSchedule();
            _resultValue.schedules = schedules;
            return _resultValue;
        }
    }
}
