// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNamespaceStorageArchivalConfigArchivingConfiguration {
    /**
     * @return This is the duration data in active storage before data is archived, as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P365D (not P1Y) or P14D (not P2W).
     * 
     */
    private String activeStorageDuration;
    /**
     * @return This is the duration before archived data is deleted from object storage, as described in https://en.wikipedia.org/wiki/ISO_8601#Durations The largest supported unit is D, e.g. P365D (not P1Y) or P14D (not P2W).
     * 
     */
    private String archivalStorageDuration;

    private GetNamespaceStorageArchivalConfigArchivingConfiguration() {}
    /**
     * @return This is the duration data in active storage before data is archived, as described in https://en.wikipedia.org/wiki/ISO_8601#Durations. The largest supported unit is D, e.g. P365D (not P1Y) or P14D (not P2W).
     * 
     */
    public String activeStorageDuration() {
        return this.activeStorageDuration;
    }
    /**
     * @return This is the duration before archived data is deleted from object storage, as described in https://en.wikipedia.org/wiki/ISO_8601#Durations The largest supported unit is D, e.g. P365D (not P1Y) or P14D (not P2W).
     * 
     */
    public String archivalStorageDuration() {
        return this.archivalStorageDuration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceStorageArchivalConfigArchivingConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String activeStorageDuration;
        private String archivalStorageDuration;
        public Builder() {}
        public Builder(GetNamespaceStorageArchivalConfigArchivingConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeStorageDuration = defaults.activeStorageDuration;
    	      this.archivalStorageDuration = defaults.archivalStorageDuration;
        }

        @CustomType.Setter
        public Builder activeStorageDuration(String activeStorageDuration) {
            if (activeStorageDuration == null) {
              throw new MissingRequiredPropertyException("GetNamespaceStorageArchivalConfigArchivingConfiguration", "activeStorageDuration");
            }
            this.activeStorageDuration = activeStorageDuration;
            return this;
        }
        @CustomType.Setter
        public Builder archivalStorageDuration(String archivalStorageDuration) {
            if (archivalStorageDuration == null) {
              throw new MissingRequiredPropertyException("GetNamespaceStorageArchivalConfigArchivingConfiguration", "archivalStorageDuration");
            }
            this.archivalStorageDuration = archivalStorageDuration;
            return this;
        }
        public GetNamespaceStorageArchivalConfigArchivingConfiguration build() {
            final var _resultValue = new GetNamespaceStorageArchivalConfigArchivingConfiguration();
            _resultValue.activeStorageDuration = activeStorageDuration;
            _resultValue.archivalStorageDuration = archivalStorageDuration;
            return _resultValue;
        }
    }
}
