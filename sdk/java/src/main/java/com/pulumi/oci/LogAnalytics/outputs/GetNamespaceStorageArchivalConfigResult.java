// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceStorageArchivalConfigArchivingConfiguration;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNamespaceStorageArchivalConfigResult {
    /**
     * @return This is the configuration for data archiving in object storage
     * 
     */
    private List<GetNamespaceStorageArchivalConfigArchivingConfiguration> archivingConfigurations;
    private String id;
    /**
     * @return This indicates if old data can be archived for a tenancy
     * 
     */
    private Boolean isArchivingEnabled;
    private String namespace;

    private GetNamespaceStorageArchivalConfigResult() {}
    /**
     * @return This is the configuration for data archiving in object storage
     * 
     */
    public List<GetNamespaceStorageArchivalConfigArchivingConfiguration> archivingConfigurations() {
        return this.archivingConfigurations;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return This indicates if old data can be archived for a tenancy
     * 
     */
    public Boolean isArchivingEnabled() {
        return this.isArchivingEnabled;
    }
    public String namespace() {
        return this.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceStorageArchivalConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetNamespaceStorageArchivalConfigArchivingConfiguration> archivingConfigurations;
        private String id;
        private Boolean isArchivingEnabled;
        private String namespace;
        public Builder() {}
        public Builder(GetNamespaceStorageArchivalConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archivingConfigurations = defaults.archivingConfigurations;
    	      this.id = defaults.id;
    	      this.isArchivingEnabled = defaults.isArchivingEnabled;
    	      this.namespace = defaults.namespace;
        }

        @CustomType.Setter
        public Builder archivingConfigurations(List<GetNamespaceStorageArchivalConfigArchivingConfiguration> archivingConfigurations) {
            if (archivingConfigurations == null) {
              throw new MissingRequiredPropertyException("GetNamespaceStorageArchivalConfigResult", "archivingConfigurations");
            }
            this.archivingConfigurations = archivingConfigurations;
            return this;
        }
        public Builder archivingConfigurations(GetNamespaceStorageArchivalConfigArchivingConfiguration... archivingConfigurations) {
            return archivingConfigurations(List.of(archivingConfigurations));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNamespaceStorageArchivalConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isArchivingEnabled(Boolean isArchivingEnabled) {
            if (isArchivingEnabled == null) {
              throw new MissingRequiredPropertyException("GetNamespaceStorageArchivalConfigResult", "isArchivingEnabled");
            }
            this.isArchivingEnabled = isArchivingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetNamespaceStorageArchivalConfigResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        public GetNamespaceStorageArchivalConfigResult build() {
            final var _resultValue = new GetNamespaceStorageArchivalConfigResult();
            _resultValue.archivingConfigurations = archivingConfigurations;
            _resultValue.id = id;
            _resultValue.isArchivingEnabled = isArchivingEnabled;
            _resultValue.namespace = namespace;
            return _resultValue;
        }
    }
}
