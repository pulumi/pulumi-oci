// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceTemplatesFilter;
import com.pulumi.oci.LogAnalytics.outputs.GetNamespaceTemplatesLogAnalyticsTemplateCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamespaceTemplatesResult {
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String compartmentId;
    private @Nullable List<GetNamespaceTemplatesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of log_analytics_template_collection.
     * 
     */
    private List<GetNamespaceTemplatesLogAnalyticsTemplateCollection> logAnalyticsTemplateCollections;
    /**
     * @return The template name.
     * 
     */
    private @Nullable String name;
    private String namespace;
    private @Nullable String namespaceTemplateFilter;
    /**
     * @return The current state of the template.
     * 
     */
    private @Nullable String state;
    private @Nullable String templateDisplayText;
    /**
     * @return The template type.
     * 
     */
    private @Nullable String type;

    private GetNamespaceTemplatesResult() {}
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetNamespaceTemplatesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of log_analytics_template_collection.
     * 
     */
    public List<GetNamespaceTemplatesLogAnalyticsTemplateCollection> logAnalyticsTemplateCollections() {
        return this.logAnalyticsTemplateCollections;
    }
    /**
     * @return The template name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String namespace() {
        return this.namespace;
    }
    public Optional<String> namespaceTemplateFilter() {
        return Optional.ofNullable(this.namespaceTemplateFilter);
    }
    /**
     * @return The current state of the template.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> templateDisplayText() {
        return Optional.ofNullable(this.templateDisplayText);
    }
    /**
     * @return The template type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceTemplatesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetNamespaceTemplatesFilter> filters;
        private String id;
        private List<GetNamespaceTemplatesLogAnalyticsTemplateCollection> logAnalyticsTemplateCollections;
        private @Nullable String name;
        private String namespace;
        private @Nullable String namespaceTemplateFilter;
        private @Nullable String state;
        private @Nullable String templateDisplayText;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetNamespaceTemplatesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.logAnalyticsTemplateCollections = defaults.logAnalyticsTemplateCollections;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.namespaceTemplateFilter = defaults.namespaceTemplateFilter;
    	      this.state = defaults.state;
    	      this.templateDisplayText = defaults.templateDisplayText;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetNamespaceTemplatesResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetNamespaceTemplatesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetNamespaceTemplatesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNamespaceTemplatesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder logAnalyticsTemplateCollections(List<GetNamespaceTemplatesLogAnalyticsTemplateCollection> logAnalyticsTemplateCollections) {
            if (logAnalyticsTemplateCollections == null) {
              throw new MissingRequiredPropertyException("GetNamespaceTemplatesResult", "logAnalyticsTemplateCollections");
            }
            this.logAnalyticsTemplateCollections = logAnalyticsTemplateCollections;
            return this;
        }
        public Builder logAnalyticsTemplateCollections(GetNamespaceTemplatesLogAnalyticsTemplateCollection... logAnalyticsTemplateCollections) {
            return logAnalyticsTemplateCollections(List.of(logAnalyticsTemplateCollections));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetNamespaceTemplatesResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceTemplateFilter(@Nullable String namespaceTemplateFilter) {

            this.namespaceTemplateFilter = namespaceTemplateFilter;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder templateDisplayText(@Nullable String templateDisplayText) {

            this.templateDisplayText = templateDisplayText;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public GetNamespaceTemplatesResult build() {
            final var _resultValue = new GetNamespaceTemplatesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.logAnalyticsTemplateCollections = logAnalyticsTemplateCollections;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.namespaceTemplateFilter = namespaceTemplateFilter;
            _resultValue.state = state;
            _resultValue.templateDisplayText = templateDisplayText;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
