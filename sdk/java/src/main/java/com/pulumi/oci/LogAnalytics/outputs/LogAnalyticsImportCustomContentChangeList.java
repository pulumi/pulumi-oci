// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class LogAnalyticsImportCustomContentChangeList {
    /**
     * @return A list of field display names with conflicts.
     * 
     */
    private @Nullable List<String> conflictFieldDisplayNames;
    /**
     * @return A list of parser names with conflicts.
     * 
     */
    private @Nullable List<String> conflictParserNames;
    /**
     * @return A list of source names with conflicts.
     * 
     */
    private @Nullable List<String> conflictSourceNames;
    /**
     * @return An array of created field display names.
     * 
     */
    private @Nullable List<String> createdFieldDisplayNames;
    /**
     * @return An array of created parser names.
     * 
     */
    private @Nullable List<String> createdParserNames;
    /**
     * @return An array of created source names.
     * 
     */
    private @Nullable List<String> createdSourceNames;
    /**
     * @return An array of updated field display names.
     * 
     */
    private @Nullable List<String> updatedFieldDisplayNames;
    /**
     * @return An array of updated parser names.
     * 
     */
    private @Nullable List<String> updatedParserNames;
    /**
     * @return An array of updated source names.
     * 
     */
    private @Nullable List<String> updatedSourceNames;

    private LogAnalyticsImportCustomContentChangeList() {}
    /**
     * @return A list of field display names with conflicts.
     * 
     */
    public List<String> conflictFieldDisplayNames() {
        return this.conflictFieldDisplayNames == null ? List.of() : this.conflictFieldDisplayNames;
    }
    /**
     * @return A list of parser names with conflicts.
     * 
     */
    public List<String> conflictParserNames() {
        return this.conflictParserNames == null ? List.of() : this.conflictParserNames;
    }
    /**
     * @return A list of source names with conflicts.
     * 
     */
    public List<String> conflictSourceNames() {
        return this.conflictSourceNames == null ? List.of() : this.conflictSourceNames;
    }
    /**
     * @return An array of created field display names.
     * 
     */
    public List<String> createdFieldDisplayNames() {
        return this.createdFieldDisplayNames == null ? List.of() : this.createdFieldDisplayNames;
    }
    /**
     * @return An array of created parser names.
     * 
     */
    public List<String> createdParserNames() {
        return this.createdParserNames == null ? List.of() : this.createdParserNames;
    }
    /**
     * @return An array of created source names.
     * 
     */
    public List<String> createdSourceNames() {
        return this.createdSourceNames == null ? List.of() : this.createdSourceNames;
    }
    /**
     * @return An array of updated field display names.
     * 
     */
    public List<String> updatedFieldDisplayNames() {
        return this.updatedFieldDisplayNames == null ? List.of() : this.updatedFieldDisplayNames;
    }
    /**
     * @return An array of updated parser names.
     * 
     */
    public List<String> updatedParserNames() {
        return this.updatedParserNames == null ? List.of() : this.updatedParserNames;
    }
    /**
     * @return An array of updated source names.
     * 
     */
    public List<String> updatedSourceNames() {
        return this.updatedSourceNames == null ? List.of() : this.updatedSourceNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogAnalyticsImportCustomContentChangeList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> conflictFieldDisplayNames;
        private @Nullable List<String> conflictParserNames;
        private @Nullable List<String> conflictSourceNames;
        private @Nullable List<String> createdFieldDisplayNames;
        private @Nullable List<String> createdParserNames;
        private @Nullable List<String> createdSourceNames;
        private @Nullable List<String> updatedFieldDisplayNames;
        private @Nullable List<String> updatedParserNames;
        private @Nullable List<String> updatedSourceNames;
        public Builder() {}
        public Builder(LogAnalyticsImportCustomContentChangeList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conflictFieldDisplayNames = defaults.conflictFieldDisplayNames;
    	      this.conflictParserNames = defaults.conflictParserNames;
    	      this.conflictSourceNames = defaults.conflictSourceNames;
    	      this.createdFieldDisplayNames = defaults.createdFieldDisplayNames;
    	      this.createdParserNames = defaults.createdParserNames;
    	      this.createdSourceNames = defaults.createdSourceNames;
    	      this.updatedFieldDisplayNames = defaults.updatedFieldDisplayNames;
    	      this.updatedParserNames = defaults.updatedParserNames;
    	      this.updatedSourceNames = defaults.updatedSourceNames;
        }

        @CustomType.Setter
        public Builder conflictFieldDisplayNames(@Nullable List<String> conflictFieldDisplayNames) {
            this.conflictFieldDisplayNames = conflictFieldDisplayNames;
            return this;
        }
        public Builder conflictFieldDisplayNames(String... conflictFieldDisplayNames) {
            return conflictFieldDisplayNames(List.of(conflictFieldDisplayNames));
        }
        @CustomType.Setter
        public Builder conflictParserNames(@Nullable List<String> conflictParserNames) {
            this.conflictParserNames = conflictParserNames;
            return this;
        }
        public Builder conflictParserNames(String... conflictParserNames) {
            return conflictParserNames(List.of(conflictParserNames));
        }
        @CustomType.Setter
        public Builder conflictSourceNames(@Nullable List<String> conflictSourceNames) {
            this.conflictSourceNames = conflictSourceNames;
            return this;
        }
        public Builder conflictSourceNames(String... conflictSourceNames) {
            return conflictSourceNames(List.of(conflictSourceNames));
        }
        @CustomType.Setter
        public Builder createdFieldDisplayNames(@Nullable List<String> createdFieldDisplayNames) {
            this.createdFieldDisplayNames = createdFieldDisplayNames;
            return this;
        }
        public Builder createdFieldDisplayNames(String... createdFieldDisplayNames) {
            return createdFieldDisplayNames(List.of(createdFieldDisplayNames));
        }
        @CustomType.Setter
        public Builder createdParserNames(@Nullable List<String> createdParserNames) {
            this.createdParserNames = createdParserNames;
            return this;
        }
        public Builder createdParserNames(String... createdParserNames) {
            return createdParserNames(List.of(createdParserNames));
        }
        @CustomType.Setter
        public Builder createdSourceNames(@Nullable List<String> createdSourceNames) {
            this.createdSourceNames = createdSourceNames;
            return this;
        }
        public Builder createdSourceNames(String... createdSourceNames) {
            return createdSourceNames(List.of(createdSourceNames));
        }
        @CustomType.Setter
        public Builder updatedFieldDisplayNames(@Nullable List<String> updatedFieldDisplayNames) {
            this.updatedFieldDisplayNames = updatedFieldDisplayNames;
            return this;
        }
        public Builder updatedFieldDisplayNames(String... updatedFieldDisplayNames) {
            return updatedFieldDisplayNames(List.of(updatedFieldDisplayNames));
        }
        @CustomType.Setter
        public Builder updatedParserNames(@Nullable List<String> updatedParserNames) {
            this.updatedParserNames = updatedParserNames;
            return this;
        }
        public Builder updatedParserNames(String... updatedParserNames) {
            return updatedParserNames(List.of(updatedParserNames));
        }
        @CustomType.Setter
        public Builder updatedSourceNames(@Nullable List<String> updatedSourceNames) {
            this.updatedSourceNames = updatedSourceNames;
            return this;
        }
        public Builder updatedSourceNames(String... updatedSourceNames) {
            return updatedSourceNames(List.of(updatedSourceNames));
        }
        public LogAnalyticsImportCustomContentChangeList build() {
            final var _resultValue = new LogAnalyticsImportCustomContentChangeList();
            _resultValue.conflictFieldDisplayNames = conflictFieldDisplayNames;
            _resultValue.conflictParserNames = conflictParserNames;
            _resultValue.conflictSourceNames = conflictSourceNames;
            _resultValue.createdFieldDisplayNames = createdFieldDisplayNames;
            _resultValue.createdParserNames = createdParserNames;
            _resultValue.createdSourceNames = createdSourceNames;
            _resultValue.updatedFieldDisplayNames = updatedFieldDisplayNames;
            _resultValue.updatedParserNames = updatedParserNames;
            _resultValue.updatedSourceNames = updatedSourceNames;
            return _resultValue;
        }
    }
}
