// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NamespaceLookupField {
    /**
     * @return (Updatable) The common field name.
     * 
     */
    private @Nullable String commonFieldName;
    /**
     * @return (Updatable) The default match value.
     * 
     */
    private @Nullable String defaultMatchValue;
    /**
     * @return (Updatable) The display name.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return (Updatable) A flag indicating whether or not the field is a common field.
     * 
     */
    private @Nullable Boolean isCommonField;
    /**
     * @return (Updatable) The match operator.
     * 
     */
    private @Nullable String matchOperator;
    /**
     * @return (Updatable) The field name.
     * 
     */
    private @Nullable String name;
    /**
     * @return (Updatable) The position.
     * 
     */
    private @Nullable String position;

    private NamespaceLookupField() {}
    /**
     * @return (Updatable) The common field name.
     * 
     */
    public Optional<String> commonFieldName() {
        return Optional.ofNullable(this.commonFieldName);
    }
    /**
     * @return (Updatable) The default match value.
     * 
     */
    public Optional<String> defaultMatchValue() {
        return Optional.ofNullable(this.defaultMatchValue);
    }
    /**
     * @return (Updatable) The display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return (Updatable) A flag indicating whether or not the field is a common field.
     * 
     */
    public Optional<Boolean> isCommonField() {
        return Optional.ofNullable(this.isCommonField);
    }
    /**
     * @return (Updatable) The match operator.
     * 
     */
    public Optional<String> matchOperator() {
        return Optional.ofNullable(this.matchOperator);
    }
    /**
     * @return (Updatable) The field name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return (Updatable) The position.
     * 
     */
    public Optional<String> position() {
        return Optional.ofNullable(this.position);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NamespaceLookupField defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String commonFieldName;
        private @Nullable String defaultMatchValue;
        private @Nullable String displayName;
        private @Nullable Boolean isCommonField;
        private @Nullable String matchOperator;
        private @Nullable String name;
        private @Nullable String position;
        public Builder() {}
        public Builder(NamespaceLookupField defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonFieldName = defaults.commonFieldName;
    	      this.defaultMatchValue = defaults.defaultMatchValue;
    	      this.displayName = defaults.displayName;
    	      this.isCommonField = defaults.isCommonField;
    	      this.matchOperator = defaults.matchOperator;
    	      this.name = defaults.name;
    	      this.position = defaults.position;
        }

        @CustomType.Setter
        public Builder commonFieldName(@Nullable String commonFieldName) {

            this.commonFieldName = commonFieldName;
            return this;
        }
        @CustomType.Setter
        public Builder defaultMatchValue(@Nullable String defaultMatchValue) {

            this.defaultMatchValue = defaultMatchValue;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder isCommonField(@Nullable Boolean isCommonField) {

            this.isCommonField = isCommonField;
            return this;
        }
        @CustomType.Setter
        public Builder matchOperator(@Nullable String matchOperator) {

            this.matchOperator = matchOperator;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder position(@Nullable String position) {

            this.position = position;
            return this;
        }
        public NamespaceLookupField build() {
            final var _resultValue = new NamespaceLookupField();
            _resultValue.commonFieldName = commonFieldName;
            _resultValue.defaultMatchValue = defaultMatchValue;
            _resultValue.displayName = displayName;
            _resultValue.isCommonField = isCommonField;
            _resultValue.matchOperator = matchOperator;
            _resultValue.name = name;
            _resultValue.position = position;
            return _resultValue;
        }
    }
}
