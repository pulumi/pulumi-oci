// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetLogArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogArgs Empty = new GetLogArgs();

    /**
     * OCID of a log group to work with.
     * 
     */
    @Import(name="logGroupId", required=true)
    private Output<String> logGroupId;

    /**
     * @return OCID of a log group to work with.
     * 
     */
    public Output<String> logGroupId() {
        return this.logGroupId;
    }

    /**
     * OCID of a log to work with.
     * 
     */
    @Import(name="logId", required=true)
    private Output<String> logId;

    /**
     * @return OCID of a log to work with.
     * 
     */
    public Output<String> logId() {
        return this.logId;
    }

    private GetLogArgs() {}

    private GetLogArgs(GetLogArgs $) {
        this.logGroupId = $.logGroupId;
        this.logId = $.logId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogArgs $;

        public Builder() {
            $ = new GetLogArgs();
        }

        public Builder(GetLogArgs defaults) {
            $ = new GetLogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logGroupId OCID of a log group to work with.
         * 
         * @return builder
         * 
         */
        public Builder logGroupId(Output<String> logGroupId) {
            $.logGroupId = logGroupId;
            return this;
        }

        /**
         * @param logGroupId OCID of a log group to work with.
         * 
         * @return builder
         * 
         */
        public Builder logGroupId(String logGroupId) {
            return logGroupId(Output.of(logGroupId));
        }

        /**
         * @param logId OCID of a log to work with.
         * 
         * @return builder
         * 
         */
        public Builder logId(Output<String> logId) {
            $.logId = logId;
            return this;
        }

        /**
         * @param logId OCID of a log to work with.
         * 
         * @return builder
         * 
         */
        public Builder logId(String logId) {
            return logId(Output.of(logId));
        }

        public GetLogArgs build() {
            if ($.logGroupId == null) {
                throw new MissingRequiredPropertyException("GetLogArgs", "logGroupId");
            }
            if ($.logId == null) {
                throw new MissingRequiredPropertyException("GetLogArgs", "logId");
            }
            return $;
        }
    }

}
