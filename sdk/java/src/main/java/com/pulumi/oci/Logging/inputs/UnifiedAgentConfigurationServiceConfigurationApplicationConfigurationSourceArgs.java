// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Logging.inputs.UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptionsArgs;
import com.pulumi.oci.Logging.inputs.UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs Empty = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs();

    /**
     * (Updatable) Advanced options for logging configuration
     * 
     */
    @Import(name="advancedOptions")
    private @Nullable Output<UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptionsArgs> advancedOptions;

    /**
     * @return (Updatable) Advanced options for logging configuration
     * 
     */
    public Optional<Output<UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptionsArgs>> advancedOptions() {
        return Optional.ofNullable(this.advancedOptions);
    }

    /**
     * (Updatable) The name key to tag this Grok pattern.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) The name key to tag this Grok pattern.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) Source parser object.
     * 
     */
    @Import(name="parser")
    private @Nullable Output<UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserArgs> parser;

    /**
     * @return (Updatable) Source parser object.
     * 
     */
    public Optional<Output<UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserArgs>> parser() {
        return Optional.ofNullable(this.parser);
    }

    /**
     * (Updatable) Absolute paths for log source files. Wildcards can be used.
     * 
     */
    @Import(name="paths")
    private @Nullable Output<List<String>> paths;

    /**
     * @return (Updatable) Absolute paths for log source files. Wildcards can be used.
     * 
     */
    public Optional<Output<List<String>>> paths() {
        return Optional.ofNullable(this.paths);
    }

    /**
     * (Updatable) Unified schema logging source type.
     * 
     */
    @Import(name="sourceType")
    private @Nullable Output<String> sourceType;

    /**
     * @return (Updatable) Unified schema logging source type.
     * 
     */
    public Optional<Output<String>> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs() {}

    private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs $) {
        this.advancedOptions = $.advancedOptions;
        this.name = $.name;
        this.parser = $.parser;
        this.paths = $.paths;
        this.sourceType = $.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs $;

        public Builder() {
            $ = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs();
        }

        public Builder(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs defaults) {
            $ = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param advancedOptions (Updatable) Advanced options for logging configuration
         * 
         * @return builder
         * 
         */
        public Builder advancedOptions(@Nullable Output<UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptionsArgs> advancedOptions) {
            $.advancedOptions = advancedOptions;
            return this;
        }

        /**
         * @param advancedOptions (Updatable) Advanced options for logging configuration
         * 
         * @return builder
         * 
         */
        public Builder advancedOptions(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptionsArgs advancedOptions) {
            return advancedOptions(Output.of(advancedOptions));
        }

        /**
         * @param name (Updatable) The name key to tag this Grok pattern.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) The name key to tag this Grok pattern.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parser (Updatable) Source parser object.
         * 
         * @return builder
         * 
         */
        public Builder parser(@Nullable Output<UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserArgs> parser) {
            $.parser = parser;
            return this;
        }

        /**
         * @param parser (Updatable) Source parser object.
         * 
         * @return builder
         * 
         */
        public Builder parser(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserArgs parser) {
            return parser(Output.of(parser));
        }

        /**
         * @param paths (Updatable) Absolute paths for log source files. Wildcards can be used.
         * 
         * @return builder
         * 
         */
        public Builder paths(@Nullable Output<List<String>> paths) {
            $.paths = paths;
            return this;
        }

        /**
         * @param paths (Updatable) Absolute paths for log source files. Wildcards can be used.
         * 
         * @return builder
         * 
         */
        public Builder paths(List<String> paths) {
            return paths(Output.of(paths));
        }

        /**
         * @param paths (Updatable) Absolute paths for log source files. Wildcards can be used.
         * 
         * @return builder
         * 
         */
        public Builder paths(String... paths) {
            return paths(List.of(paths));
        }

        /**
         * @param sourceType (Updatable) Unified schema logging source type.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(@Nullable Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType (Updatable) Unified schema logging source type.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceArgs build() {
            return $;
        }
    }

}
