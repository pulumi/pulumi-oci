// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs extends com.pulumi.resources.ResourceArgs {

    public static final UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs Empty = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs();

    /**
     * (Updatable) Specify the time field for the event time. If the event doesn&#39;t have this field, the current time is used.
     * 
     */
    @Import(name="fieldTimeKey")
    private @Nullable Output<String> fieldTimeKey;

    /**
     * @return (Updatable) Specify the time field for the event time. If the event doesn&#39;t have this field, the current time is used.
     * 
     */
    public Optional<Output<String>> fieldTimeKey() {
        return Optional.ofNullable(this.fieldTimeKey);
    }

    /**
     * (Updatable) If true, keep the time field in the record.
     * 
     */
    @Import(name="isKeepTimeKey")
    private @Nullable Output<Boolean> isKeepTimeKey;

    /**
     * @return (Updatable) If true, keep the time field in the record.
     * 
     */
    public Optional<Output<Boolean>> isKeepTimeKey() {
        return Optional.ofNullable(this.isKeepTimeKey);
    }

    /**
     * (Updatable) If true, a separator parameter can be further defined.
     * 
     */
    @Import(name="parseNested")
    private @Nullable Output<Boolean> parseNested;

    /**
     * @return (Updatable) If true, a separator parameter can be further defined.
     * 
     */
    public Optional<Output<Boolean>> parseNested() {
        return Optional.ofNullable(this.parseNested);
    }

    /**
     * (Updatable) Keys of adjacent levels are joined by the separator.
     * 
     */
    @Import(name="separator")
    private @Nullable Output<String> separator;

    /**
     * @return (Updatable) Keys of adjacent levels are joined by the separator.
     * 
     */
    public Optional<Output<String>> separator() {
        return Optional.ofNullable(this.separator);
    }

    /**
     * (Updatable) Process time value using the specified format.
     * 
     */
    @Import(name="timeFormat")
    private @Nullable Output<String> timeFormat;

    /**
     * @return (Updatable) Process time value using the specified format.
     * 
     */
    public Optional<Output<String>> timeFormat() {
        return Optional.ofNullable(this.timeFormat);
    }

    /**
     * (Updatable) JSON parser time type.
     * 
     */
    @Import(name="timeType")
    private @Nullable Output<String> timeType;

    /**
     * @return (Updatable) JSON parser time type.
     * 
     */
    public Optional<Output<String>> timeType() {
        return Optional.ofNullable(this.timeType);
    }

    private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs() {}

    private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs $) {
        this.fieldTimeKey = $.fieldTimeKey;
        this.isKeepTimeKey = $.isKeepTimeKey;
        this.parseNested = $.parseNested;
        this.separator = $.separator;
        this.timeFormat = $.timeFormat;
        this.timeType = $.timeType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs $;

        public Builder() {
            $ = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs();
        }

        public Builder(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs defaults) {
            $ = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fieldTimeKey (Updatable) Specify the time field for the event time. If the event doesn&#39;t have this field, the current time is used.
         * 
         * @return builder
         * 
         */
        public Builder fieldTimeKey(@Nullable Output<String> fieldTimeKey) {
            $.fieldTimeKey = fieldTimeKey;
            return this;
        }

        /**
         * @param fieldTimeKey (Updatable) Specify the time field for the event time. If the event doesn&#39;t have this field, the current time is used.
         * 
         * @return builder
         * 
         */
        public Builder fieldTimeKey(String fieldTimeKey) {
            return fieldTimeKey(Output.of(fieldTimeKey));
        }

        /**
         * @param isKeepTimeKey (Updatable) If true, keep the time field in the record.
         * 
         * @return builder
         * 
         */
        public Builder isKeepTimeKey(@Nullable Output<Boolean> isKeepTimeKey) {
            $.isKeepTimeKey = isKeepTimeKey;
            return this;
        }

        /**
         * @param isKeepTimeKey (Updatable) If true, keep the time field in the record.
         * 
         * @return builder
         * 
         */
        public Builder isKeepTimeKey(Boolean isKeepTimeKey) {
            return isKeepTimeKey(Output.of(isKeepTimeKey));
        }

        /**
         * @param parseNested (Updatable) If true, a separator parameter can be further defined.
         * 
         * @return builder
         * 
         */
        public Builder parseNested(@Nullable Output<Boolean> parseNested) {
            $.parseNested = parseNested;
            return this;
        }

        /**
         * @param parseNested (Updatable) If true, a separator parameter can be further defined.
         * 
         * @return builder
         * 
         */
        public Builder parseNested(Boolean parseNested) {
            return parseNested(Output.of(parseNested));
        }

        /**
         * @param separator (Updatable) Keys of adjacent levels are joined by the separator.
         * 
         * @return builder
         * 
         */
        public Builder separator(@Nullable Output<String> separator) {
            $.separator = separator;
            return this;
        }

        /**
         * @param separator (Updatable) Keys of adjacent levels are joined by the separator.
         * 
         * @return builder
         * 
         */
        public Builder separator(String separator) {
            return separator(Output.of(separator));
        }

        /**
         * @param timeFormat (Updatable) Process time value using the specified format.
         * 
         * @return builder
         * 
         */
        public Builder timeFormat(@Nullable Output<String> timeFormat) {
            $.timeFormat = timeFormat;
            return this;
        }

        /**
         * @param timeFormat (Updatable) Process time value using the specified format.
         * 
         * @return builder
         * 
         */
        public Builder timeFormat(String timeFormat) {
            return timeFormat(Output.of(timeFormat));
        }

        /**
         * @param timeType (Updatable) JSON parser time type.
         * 
         * @return builder
         * 
         */
        public Builder timeType(@Nullable Output<String> timeType) {
            $.timeType = timeType;
            return this;
        }

        /**
         * @param timeType (Updatable) JSON parser time type.
         * 
         * @return builder
         * 
         */
        public Builder timeType(String timeType) {
            return timeType(Output.of(timeType));
        }

        public UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParserNestedParserArgs build() {
            return $;
        }
    }

}
