// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs Empty = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs();

    /**
     * (Updatable) List of metrics regex to be allowed.
     * 
     */
    @Import(name="allowLists")
    private @Nullable Output<List<String>> allowLists;

    /**
     * @return (Updatable) List of metrics regex to be allowed.
     * 
     */
    public Optional<Output<List<String>>> allowLists() {
        return Optional.ofNullable(this.allowLists);
    }

    /**
     * (Updatable) List of metrics regex to be denied.
     * 
     */
    @Import(name="denyLists")
    private @Nullable Output<List<String>> denyLists;

    /**
     * @return (Updatable) List of metrics regex to be denied.
     * 
     */
    public Optional<Output<List<String>>> denyLists() {
        return Optional.ofNullable(this.denyLists);
    }

    /**
     * (Updatable) Unified schema logging filter type.
     * 
     */
    @Import(name="filterType")
    private @Nullable Output<String> filterType;

    /**
     * @return (Updatable) Unified schema logging filter type.
     * 
     */
    public Optional<Output<String>> filterType() {
        return Optional.ofNullable(this.filterType);
    }

    /**
     * (Updatable) Unique name for the filter.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) Unique name for the filter.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs() {}

    private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs $) {
        this.allowLists = $.allowLists;
        this.denyLists = $.denyLists;
        this.filterType = $.filterType;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs $;

        public Builder() {
            $ = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs();
        }

        public Builder(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs defaults) {
            $ = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowLists (Updatable) List of metrics regex to be allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowLists(@Nullable Output<List<String>> allowLists) {
            $.allowLists = allowLists;
            return this;
        }

        /**
         * @param allowLists (Updatable) List of metrics regex to be allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowLists(List<String> allowLists) {
            return allowLists(Output.of(allowLists));
        }

        /**
         * @param allowLists (Updatable) List of metrics regex to be allowed.
         * 
         * @return builder
         * 
         */
        public Builder allowLists(String... allowLists) {
            return allowLists(List.of(allowLists));
        }

        /**
         * @param denyLists (Updatable) List of metrics regex to be denied.
         * 
         * @return builder
         * 
         */
        public Builder denyLists(@Nullable Output<List<String>> denyLists) {
            $.denyLists = denyLists;
            return this;
        }

        /**
         * @param denyLists (Updatable) List of metrics regex to be denied.
         * 
         * @return builder
         * 
         */
        public Builder denyLists(List<String> denyLists) {
            return denyLists(Output.of(denyLists));
        }

        /**
         * @param denyLists (Updatable) List of metrics regex to be denied.
         * 
         * @return builder
         * 
         */
        public Builder denyLists(String... denyLists) {
            return denyLists(List.of(denyLists));
        }

        /**
         * @param filterType (Updatable) Unified schema logging filter type.
         * 
         * @return builder
         * 
         */
        public Builder filterType(@Nullable Output<String> filterType) {
            $.filterType = filterType;
            return this;
        }

        /**
         * @param filterType (Updatable) Unified schema logging filter type.
         * 
         * @return builder
         * 
         */
        public Builder filterType(String filterType) {
            return filterType(Output.of(filterType));
        }

        /**
         * @param name (Updatable) Unique name for the filter.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Unique name for the filter.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilterArgs build() {
            return $;
        }
    }

}
