// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter {
    /**
     * @return A list of filtering rules to include logs
     * 
     */
    private List<String> allowLists;
    /**
     * @return A list of filtering rules to reject logs
     * 
     */
    private List<String> denyLists;
    /**
     * @return Unified schema logging filter type.
     * 
     */
    private String filterType;
    /**
     * @return The name key to tag this Grok pattern.
     * 
     */
    private String name;

    private GetUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter() {}
    /**
     * @return A list of filtering rules to include logs
     * 
     */
    public List<String> allowLists() {
        return this.allowLists;
    }
    /**
     * @return A list of filtering rules to reject logs
     * 
     */
    public List<String> denyLists() {
        return this.denyLists;
    }
    /**
     * @return Unified schema logging filter type.
     * 
     */
    public String filterType() {
        return this.filterType;
    }
    /**
     * @return The name key to tag this Grok pattern.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowLists;
        private List<String> denyLists;
        private String filterType;
        private String name;
        public Builder() {}
        public Builder(GetUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowLists = defaults.allowLists;
    	      this.denyLists = defaults.denyLists;
    	      this.filterType = defaults.filterType;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder allowLists(List<String> allowLists) {
            if (allowLists == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter", "allowLists");
            }
            this.allowLists = allowLists;
            return this;
        }
        public Builder allowLists(String... allowLists) {
            return allowLists(List.of(allowLists));
        }
        @CustomType.Setter
        public Builder denyLists(List<String> denyLists) {
            if (denyLists == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter", "denyLists");
            }
            this.denyLists = denyLists;
            return this;
        }
        public Builder denyLists(String... denyLists) {
            return denyLists(List.of(denyLists));
        }
        @CustomType.Setter
        public Builder filterType(String filterType) {
            if (filterType == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter", "filterType");
            }
            this.filterType = filterType;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter", "name");
            }
            this.name = name;
            return this;
        }
        public GetUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter build() {
            final var _resultValue = new GetUnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter();
            _resultValue.allowLists = allowLists;
            _resultValue.denyLists = denyLists;
            _resultValue.filterType = filterType;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
