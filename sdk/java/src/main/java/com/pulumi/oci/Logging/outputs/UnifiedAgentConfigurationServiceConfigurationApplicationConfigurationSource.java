// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Logging.outputs.UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptions;
import com.pulumi.oci.Logging.outputs.UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParser;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSource {
    /**
     * @return (Updatable) Advanced options for logging configuration
     * 
     */
    private @Nullable UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptions advancedOptions;
    /**
     * @return (Updatable) Unique name for the source.
     * 
     */
    private @Nullable String name;
    /**
     * @return (Updatable) Source parser object.
     * 
     */
    private @Nullable UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParser parser;
    /**
     * @return (Updatable) Absolute paths for log source files. Wildcards can be used.
     * 
     */
    private @Nullable List<String> paths;
    /**
     * @return (Updatable) Unified schema logging source type.
     * 
     */
    private @Nullable String sourceType;

    private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSource() {}
    /**
     * @return (Updatable) Advanced options for logging configuration
     * 
     */
    public Optional<UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptions> advancedOptions() {
        return Optional.ofNullable(this.advancedOptions);
    }
    /**
     * @return (Updatable) Unique name for the source.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return (Updatable) Source parser object.
     * 
     */
    public Optional<UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParser> parser() {
        return Optional.ofNullable(this.parser);
    }
    /**
     * @return (Updatable) Absolute paths for log source files. Wildcards can be used.
     * 
     */
    public List<String> paths() {
        return this.paths == null ? List.of() : this.paths;
    }
    /**
     * @return (Updatable) Unified schema logging source type.
     * 
     */
    public Optional<String> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptions advancedOptions;
        private @Nullable String name;
        private @Nullable UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParser parser;
        private @Nullable List<String> paths;
        private @Nullable String sourceType;
        public Builder() {}
        public Builder(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedOptions = defaults.advancedOptions;
    	      this.name = defaults.name;
    	      this.parser = defaults.parser;
    	      this.paths = defaults.paths;
    	      this.sourceType = defaults.sourceType;
        }

        @CustomType.Setter
        public Builder advancedOptions(@Nullable UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceAdvancedOptions advancedOptions) {

            this.advancedOptions = advancedOptions;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parser(@Nullable UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSourceParser parser) {

            this.parser = parser;
            return this;
        }
        @CustomType.Setter
        public Builder paths(@Nullable List<String> paths) {

            this.paths = paths;
            return this;
        }
        public Builder paths(String... paths) {
            return paths(List.of(paths));
        }
        @CustomType.Setter
        public Builder sourceType(@Nullable String sourceType) {

            this.sourceType = sourceType;
            return this;
        }
        public UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSource build() {
            final var _resultValue = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationSource();
            _resultValue.advancedOptions = advancedOptions;
            _resultValue.name = name;
            _resultValue.parser = parser;
            _resultValue.paths = paths;
            _resultValue.sourceType = sourceType;
            return _resultValue;
        }
    }
}
