// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter {
    /**
     * @return (Updatable) List of metrics regex to be allowed.
     * 
     */
    private @Nullable List<String> allowLists;
    /**
     * @return (Updatable) List of metrics regex to be denied.
     * 
     */
    private @Nullable List<String> denyLists;
    /**
     * @return (Updatable) Unified schema logging filter type.
     * 
     */
    private @Nullable String filterType;
    /**
     * @return (Updatable) Unique name for the filter.
     * 
     */
    private @Nullable String name;

    private UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter() {}
    /**
     * @return (Updatable) List of metrics regex to be allowed.
     * 
     */
    public List<String> allowLists() {
        return this.allowLists == null ? List.of() : this.allowLists;
    }
    /**
     * @return (Updatable) List of metrics regex to be denied.
     * 
     */
    public List<String> denyLists() {
        return this.denyLists == null ? List.of() : this.denyLists;
    }
    /**
     * @return (Updatable) Unified schema logging filter type.
     * 
     */
    public Optional<String> filterType() {
        return Optional.ofNullable(this.filterType);
    }
    /**
     * @return (Updatable) Unique name for the filter.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> allowLists;
        private @Nullable List<String> denyLists;
        private @Nullable String filterType;
        private @Nullable String name;
        public Builder() {}
        public Builder(UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowLists = defaults.allowLists;
    	      this.denyLists = defaults.denyLists;
    	      this.filterType = defaults.filterType;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder allowLists(@Nullable List<String> allowLists) {

            this.allowLists = allowLists;
            return this;
        }
        public Builder allowLists(String... allowLists) {
            return allowLists(List.of(allowLists));
        }
        @CustomType.Setter
        public Builder denyLists(@Nullable List<String> denyLists) {

            this.denyLists = denyLists;
            return this;
        }
        public Builder denyLists(String... denyLists) {
            return denyLists(List.of(denyLists));
        }
        @CustomType.Setter
        public Builder filterType(@Nullable String filterType) {

            this.filterType = filterType;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        public UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter build() {
            final var _resultValue = new UnifiedAgentConfigurationServiceConfigurationApplicationConfigurationUnifiedAgentConfigurationFilter();
            _resultValue.allowLists = allowLists;
            _resultValue.denyLists = denyLists;
            _resultValue.filterType = filterType;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
