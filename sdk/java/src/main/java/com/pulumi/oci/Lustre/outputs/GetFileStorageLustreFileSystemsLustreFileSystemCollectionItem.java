// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Lustre.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Lustre.outputs.GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow;
import com.pulumi.oci.Lustre.outputs.GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem {
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private String availabilityDomain;
    /**
     * @return Capacity of the Lustre file system in GB.
     * 
     */
    private Integer capacityInGbs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group in which the Lustre file system exists.
     * 
     */
    private String clusterPlacementGroupId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private String displayName;
    /**
     * @return Short description of the Lustre file system. Avoid entering confidential information.
     * 
     */
    private String fileSystemDescription;
    /**
     * @return The Lustre file system name. This is used in mount commands and other aspects of the client command line interface. The default file system name is &#39;lustre&#39;. The file system name is limited to 8 characters. Allowed characters are lower and upper case English letters, numbers, and &#39;_&#39;.
     * 
     */
    private String fileSystemName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
     * 
     */
    private String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
     * 
     */
    private String kmsKeyId;
    /**
     * @return A message that describes the current state of the Lustre file system in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Type of network used by clients to mount the file system.   Example: `tcp`
     * 
     */
    private String lnet;
    /**
     * @return The preferred day and time to perform maintenance.
     * 
     */
    private List<GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow> maintenanceWindows;
    /**
     * @return Major version of Lustre running in the Lustre file system.  Example: `2.15`
     * 
     */
    private String majorVersion;
    /**
     * @return The IPv4 address of MGS (Lustre Management Service) used by clients to mount the file system. For example &#39;10.0.0.4&#39;.
     * 
     */
    private String managementServiceAddress;
    /**
     * @return A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this lustre file system. A maximum of 5 is allowed. Setting this to an empty array after the list is created removes the lustre file system from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm).
     * 
     */
    private List<String> nsgIds;
    /**
     * @return The Lustre file system performance tier. A value of `MBPS_PER_TB_125` represents 125 megabytes per second per terabyte.
     * 
     */
    private String performanceTier;
    /**
     * @return An administrative feature that allows you to restrict root level access from clients that try to access your Lustre file system as root.
     * 
     */
    private List<GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration> rootSquashConfigurations;
    /**
     * @return A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    private String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the Lustre file system is in.
     * 
     */
    private String subnetId;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time that the current billing cycle for the file system will end, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. After the current cycle ends, this date is updated automatically to the next timestamp, which is 30 days later. File systems deleted earlier than this time will still incur charges until the billing cycle ends.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeBillingCycleEnd;
    /**
     * @return The date and time the Lustre file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2024-04-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the Lustre file system was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2024-04-25T21:10:29.600Z`
     * 
     */
    private String timeUpdated;

    private GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem() {}
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return Capacity of the Lustre file system in GB.
     * 
     */
    public Integer capacityInGbs() {
        return this.capacityInGbs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the cluster placement group in which the Lustre file system exists.
     * 
     */
    public String clusterPlacementGroupId() {
        return this.clusterPlacementGroupId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Short description of the Lustre file system. Avoid entering confidential information.
     * 
     */
    public String fileSystemDescription() {
        return this.fileSystemDescription;
    }
    /**
     * @return The Lustre file system name. This is used in mount commands and other aspects of the client command line interface. The default file system name is &#39;lustre&#39;. The file system name is limited to 8 characters. Allowed characters are lower and upper case English letters, numbers, and &#39;_&#39;.
     * 
     */
    public String fileSystemName() {
        return this.fileSystemName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Lustre file system.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the KMS key used to encrypt the encryption keys associated with this file system.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return A message that describes the current state of the Lustre file system in more detail. For example, can be used to provide actionable information for a resource in the Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Type of network used by clients to mount the file system.   Example: `tcp`
     * 
     */
    public String lnet() {
        return this.lnet;
    }
    /**
     * @return The preferred day and time to perform maintenance.
     * 
     */
    public List<GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return Major version of Lustre running in the Lustre file system.  Example: `2.15`
     * 
     */
    public String majorVersion() {
        return this.majorVersion;
    }
    /**
     * @return The IPv4 address of MGS (Lustre Management Service) used by clients to mount the file system. For example &#39;10.0.0.4&#39;.
     * 
     */
    public String managementServiceAddress() {
        return this.managementServiceAddress;
    }
    /**
     * @return A list of Network Security Group [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with this lustre file system. A maximum of 5 is allowed. Setting this to an empty array after the list is created removes the lustre file system from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm).
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return The Lustre file system performance tier. A value of `MBPS_PER_TB_125` represents 125 megabytes per second per terabyte.
     * 
     */
    public String performanceTier() {
        return this.performanceTier;
    }
    /**
     * @return An administrative feature that allows you to restrict root level access from clients that try to access your Lustre file system as root.
     * 
     */
    public List<GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration> rootSquashConfigurations() {
        return this.rootSquashConfigurations;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the Lustre file system is in.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time that the current billing cycle for the file system will end, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format. After the current cycle ends, this date is updated automatically to the next timestamp, which is 30 days later. File systems deleted earlier than this time will still incur charges until the billing cycle ends.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeBillingCycleEnd() {
        return this.timeBillingCycleEnd;
    }
    /**
     * @return The date and time the Lustre file system was created, expressed in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2024-04-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the Lustre file system was updated, in the format defined by [RFC 3339](https://tools.ietf.org/html/rfc3339).  Example: `2024-04-25T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String availabilityDomain;
        private Integer capacityInGbs;
        private String clusterPlacementGroupId;
        private String compartmentId;
        private Map<String,String> definedTags;
        private String displayName;
        private String fileSystemDescription;
        private String fileSystemName;
        private Map<String,String> freeformTags;
        private String id;
        private String kmsKeyId;
        private String lifecycleDetails;
        private String lnet;
        private List<GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow> maintenanceWindows;
        private String majorVersion;
        private String managementServiceAddress;
        private List<String> nsgIds;
        private String performanceTier;
        private List<GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration> rootSquashConfigurations;
        private String state;
        private String subnetId;
        private Map<String,String> systemTags;
        private String timeBillingCycleEnd;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.capacityInGbs = defaults.capacityInGbs;
    	      this.clusterPlacementGroupId = defaults.clusterPlacementGroupId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.fileSystemDescription = defaults.fileSystemDescription;
    	      this.fileSystemName = defaults.fileSystemName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lnet = defaults.lnet;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.majorVersion = defaults.majorVersion;
    	      this.managementServiceAddress = defaults.managementServiceAddress;
    	      this.nsgIds = defaults.nsgIds;
    	      this.performanceTier = defaults.performanceTier;
    	      this.rootSquashConfigurations = defaults.rootSquashConfigurations;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.systemTags = defaults.systemTags;
    	      this.timeBillingCycleEnd = defaults.timeBillingCycleEnd;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder availabilityDomain(String availabilityDomain) {
            if (availabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "availabilityDomain");
            }
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder capacityInGbs(Integer capacityInGbs) {
            if (capacityInGbs == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "capacityInGbs");
            }
            this.capacityInGbs = capacityInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder clusterPlacementGroupId(String clusterPlacementGroupId) {
            if (clusterPlacementGroupId == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "clusterPlacementGroupId");
            }
            this.clusterPlacementGroupId = clusterPlacementGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemDescription(String fileSystemDescription) {
            if (fileSystemDescription == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "fileSystemDescription");
            }
            this.fileSystemDescription = fileSystemDescription;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemName(String fileSystemName) {
            if (fileSystemName == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "fileSystemName");
            }
            this.fileSystemName = fileSystemName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            if (kmsKeyId == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "kmsKeyId");
            }
            this.kmsKeyId = kmsKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder lnet(String lnet) {
            if (lnet == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "lnet");
            }
            this.lnet = lnet;
            return this;
        }
        @CustomType.Setter
        public Builder maintenanceWindows(List<GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow> maintenanceWindows) {
            if (maintenanceWindows == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "maintenanceWindows");
            }
            this.maintenanceWindows = maintenanceWindows;
            return this;
        }
        public Builder maintenanceWindows(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        @CustomType.Setter
        public Builder majorVersion(String majorVersion) {
            if (majorVersion == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "majorVersion");
            }
            this.majorVersion = majorVersion;
            return this;
        }
        @CustomType.Setter
        public Builder managementServiceAddress(String managementServiceAddress) {
            if (managementServiceAddress == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "managementServiceAddress");
            }
            this.managementServiceAddress = managementServiceAddress;
            return this;
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            if (nsgIds == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "nsgIds");
            }
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder performanceTier(String performanceTier) {
            if (performanceTier == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "performanceTier");
            }
            this.performanceTier = performanceTier;
            return this;
        }
        @CustomType.Setter
        public Builder rootSquashConfigurations(List<GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration> rootSquashConfigurations) {
            if (rootSquashConfigurations == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "rootSquashConfigurations");
            }
            this.rootSquashConfigurations = rootSquashConfigurations;
            return this;
        }
        public Builder rootSquashConfigurations(GetFileStorageLustreFileSystemsLustreFileSystemCollectionItemRootSquashConfiguration... rootSquashConfigurations) {
            return rootSquashConfigurations(List.of(rootSquashConfigurations));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeBillingCycleEnd(String timeBillingCycleEnd) {
            if (timeBillingCycleEnd == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "timeBillingCycleEnd");
            }
            this.timeBillingCycleEnd = timeBillingCycleEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem build() {
            final var _resultValue = new GetFileStorageLustreFileSystemsLustreFileSystemCollectionItem();
            _resultValue.availabilityDomain = availabilityDomain;
            _resultValue.capacityInGbs = capacityInGbs;
            _resultValue.clusterPlacementGroupId = clusterPlacementGroupId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.fileSystemDescription = fileSystemDescription;
            _resultValue.fileSystemName = fileSystemName;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.lnet = lnet;
            _resultValue.maintenanceWindows = maintenanceWindows;
            _resultValue.majorVersion = majorVersion;
            _resultValue.managementServiceAddress = managementServiceAddress;
            _resultValue.nsgIds = nsgIds;
            _resultValue.performanceTier = performanceTier;
            _resultValue.rootSquashConfigurations = rootSquashConfigurations;
            _resultValue.state = state;
            _resultValue.subnetId = subnetId;
            _resultValue.systemTags = systemTags;
            _resultValue.timeBillingCycleEnd = timeBillingCycleEnd;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
