// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ManagementAgent.inputs.GetManagementAgentDataSourcesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagementAgentDataSourcesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagementAgentDataSourcesArgs Empty = new GetManagementAgentDataSourcesArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetManagementAgentDataSourcesFilterArgs>> filters;

    public Optional<Output<List<GetManagementAgentDataSourcesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Unique Management Agent identifier
     * 
     */
    @Import(name="managementAgentId", required=true)
    private Output<String> managementAgentId;

    /**
     * @return Unique Management Agent identifier
     * 
     */
    public Output<String> managementAgentId() {
        return this.managementAgentId;
    }

    /**
     * Unique name of the dataSource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique name of the dataSource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private GetManagementAgentDataSourcesArgs() {}

    private GetManagementAgentDataSourcesArgs(GetManagementAgentDataSourcesArgs $) {
        this.filters = $.filters;
        this.managementAgentId = $.managementAgentId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagementAgentDataSourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagementAgentDataSourcesArgs $;

        public Builder() {
            $ = new GetManagementAgentDataSourcesArgs();
        }

        public Builder(GetManagementAgentDataSourcesArgs defaults) {
            $ = new GetManagementAgentDataSourcesArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetManagementAgentDataSourcesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetManagementAgentDataSourcesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetManagementAgentDataSourcesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managementAgentId Unique Management Agent identifier
         * 
         * @return builder
         * 
         */
        public Builder managementAgentId(Output<String> managementAgentId) {
            $.managementAgentId = managementAgentId;
            return this;
        }

        /**
         * @param managementAgentId Unique Management Agent identifier
         * 
         * @return builder
         * 
         */
        public Builder managementAgentId(String managementAgentId) {
            return managementAgentId(Output.of(managementAgentId));
        }

        /**
         * @param name Unique name of the dataSource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name of the dataSource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetManagementAgentDataSourcesArgs build() {
            if ($.managementAgentId == null) {
                throw new MissingRequiredPropertyException("GetManagementAgentDataSourcesArgs", "managementAgentId");
            }
            return $;
        }
    }

}
