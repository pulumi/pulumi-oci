// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ManagementAgent.inputs.GetManagementAgentPluginsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagementAgentPluginsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagementAgentPluginsArgs Empty = new GetManagementAgentPluginsArgs();

    /**
     * The ManagementAgentID of the agent from which the Management Agents to be filtered.
     * 
     */
    @Import(name="agentId")
    private @Nullable Output<String> agentId;

    /**
     * @return The ManagementAgentID of the agent from which the Management Agents to be filtered.
     * 
     */
    public Optional<Output<String>> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    /**
     * The OCID of the compartment to which a request will be scoped.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment to which a request will be scoped.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * Filter to return only Management Agent Plugins having the particular display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Filter to return only Management Agent Plugins having the particular display name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetManagementAgentPluginsFilterArgs>> filters;

    public Optional<Output<List<GetManagementAgentPluginsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Array of PlatformTypes to return only results having the particular platform types. Example: [&#34;LINUX&#34;]
     * 
     */
    @Import(name="platformTypes")
    private @Nullable Output<List<String>> platformTypes;

    /**
     * @return Array of PlatformTypes to return only results having the particular platform types. Example: [&#34;LINUX&#34;]
     * 
     */
    public Optional<Output<List<String>>> platformTypes() {
        return Optional.ofNullable(this.platformTypes);
    }

    /**
     * Filter to return only Management Agents in the particular lifecycle state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return Filter to return only Management Agents in the particular lifecycle state.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetManagementAgentPluginsArgs() {}

    private GetManagementAgentPluginsArgs(GetManagementAgentPluginsArgs $) {
        this.agentId = $.agentId;
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.platformTypes = $.platformTypes;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagementAgentPluginsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagementAgentPluginsArgs $;

        public Builder() {
            $ = new GetManagementAgentPluginsArgs();
        }

        public Builder(GetManagementAgentPluginsArgs defaults) {
            $ = new GetManagementAgentPluginsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentId The ManagementAgentID of the agent from which the Management Agents to be filtered.
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId The ManagementAgentID of the agent from which the Management Agents to be filtered.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param compartmentId The OCID of the compartment to which a request will be scoped.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment to which a request will be scoped.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName Filter to return only Management Agent Plugins having the particular display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Filter to return only Management Agent Plugins having the particular display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetManagementAgentPluginsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetManagementAgentPluginsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetManagementAgentPluginsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param platformTypes Array of PlatformTypes to return only results having the particular platform types. Example: [&#34;LINUX&#34;]
         * 
         * @return builder
         * 
         */
        public Builder platformTypes(@Nullable Output<List<String>> platformTypes) {
            $.platformTypes = platformTypes;
            return this;
        }

        /**
         * @param platformTypes Array of PlatformTypes to return only results having the particular platform types. Example: [&#34;LINUX&#34;]
         * 
         * @return builder
         * 
         */
        public Builder platformTypes(List<String> platformTypes) {
            return platformTypes(Output.of(platformTypes));
        }

        /**
         * @param platformTypes Array of PlatformTypes to return only results having the particular platform types. Example: [&#34;LINUX&#34;]
         * 
         * @return builder
         * 
         */
        public Builder platformTypes(String... platformTypes) {
            return platformTypes(List.of(platformTypes));
        }

        /**
         * @param state Filter to return only Management Agents in the particular lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Filter to return only Management Agents in the particular lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetManagementAgentPluginsArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetManagementAgentPluginsArgs", "compartmentId");
            }
            return $;
        }
    }

}
