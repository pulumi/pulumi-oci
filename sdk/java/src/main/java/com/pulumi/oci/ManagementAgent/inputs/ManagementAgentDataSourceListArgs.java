// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ManagementAgent.inputs.ManagementAgentDataSourceListMetricDimensionArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementAgentDataSourceListArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementAgentDataSourceListArgs Empty = new ManagementAgentDataSourceListArgs();

    /**
     * Comma separated metric name list. The complete set of desired scraped metrics. Use this property to limit the set of metrics uploaded if required.
     * 
     */
    @Import(name="allowMetrics")
    private @Nullable Output<String> allowMetrics;

    /**
     * @return Comma separated metric name list. The complete set of desired scraped metrics. Use this property to limit the set of metrics uploaded if required.
     * 
     */
    public Optional<Output<String>> allowMetrics() {
        return Optional.ofNullable(this.allowMetrics);
    }

    /**
     * Compartment owning this DataSource.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return Compartment owning this DataSource.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Number in milliseconds. The timeout for connecting to the Prometheus Exporter&#39;s endpoint.
     * 
     */
    @Import(name="connectionTimeout")
    private @Nullable Output<Integer> connectionTimeout;

    /**
     * @return Number in milliseconds. The timeout for connecting to the Prometheus Exporter&#39;s endpoint.
     * 
     */
    public Optional<Output<Integer>> connectionTimeout() {
        return Optional.ofNullable(this.connectionTimeout);
    }

    /**
     * If the Kubernetes cluster type is Daemon set then this will be set to true.
     * 
     */
    @Import(name="isDaemonSet")
    private @Nullable Output<Boolean> isDaemonSet;

    /**
     * @return If the Kubernetes cluster type is Daemon set then this will be set to true.
     * 
     */
    public Optional<Output<Boolean>> isDaemonSet() {
        return Optional.ofNullable(this.isDaemonSet);
    }

    /**
     * Identifier for DataSource. This represents the type and name for the data source associated with the Management Agent.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Identifier for DataSource. This represents the type and name for the data source associated with the Management Agent.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * The names of other user-supplied properties expressed as fixed values to be used as dimensions for every uploaded datapoint.
     * 
     */
    @Import(name="metricDimensions")
    private @Nullable Output<List<ManagementAgentDataSourceListMetricDimensionArgs>> metricDimensions;

    /**
     * @return The names of other user-supplied properties expressed as fixed values to be used as dimensions for every uploaded datapoint.
     * 
     */
    public Optional<Output<List<ManagementAgentDataSourceListMetricDimensionArgs>>> metricDimensions() {
        return Optional.ofNullable(this.metricDimensions);
    }

    /**
     * Name of the property
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the property
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Oracle Cloud Infrastructure monitoring namespace to which scraped metrics should be uploaded.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The Oracle Cloud Infrastructure monitoring namespace to which scraped metrics should be uploaded.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The url of the network proxy that provides access to the Prometheus Exporter&#39;s endpoint (url required property).
     * 
     */
    @Import(name="proxyUrl")
    private @Nullable Output<String> proxyUrl;

    /**
     * @return The url of the network proxy that provides access to the Prometheus Exporter&#39;s endpoint (url required property).
     * 
     */
    public Optional<Output<String>> proxyUrl() {
        return Optional.ofNullable(this.proxyUrl);
    }

    /**
     * Number in kilobytes. The limit on the data being sent, not to exceed the agent&#39;s fixed limit of 400 (KB).
     * 
     */
    @Import(name="readDataLimit")
    private @Nullable Output<Integer> readDataLimit;

    /**
     * @return Number in kilobytes. The limit on the data being sent, not to exceed the agent&#39;s fixed limit of 400 (KB).
     * 
     */
    public Optional<Output<Integer>> readDataLimit() {
        return Optional.ofNullable(this.readDataLimit);
    }

    /**
     * Number in milliseconds. The timeout for reading the response from the Prometheus Exporter&#39;s endpoint.
     * 
     */
    @Import(name="readTimeout")
    private @Nullable Output<Integer> readTimeout;

    /**
     * @return Number in milliseconds. The timeout for reading the response from the Prometheus Exporter&#39;s endpoint.
     * 
     */
    public Optional<Output<Integer>> readTimeout() {
        return Optional.ofNullable(this.readTimeout);
    }

    /**
     * Oracle Cloud Infrastructure monitoring resource group to assign the metric to.
     * 
     */
    @Import(name="resourceGroup")
    private @Nullable Output<String> resourceGroup;

    /**
     * @return Oracle Cloud Infrastructure monitoring resource group to assign the metric to.
     * 
     */
    public Optional<Output<String>> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }

    /**
     * Number in minutes. The scraping occurs at the specified interval.
     * 
     */
    @Import(name="scheduleMins")
    private @Nullable Output<Integer> scheduleMins;

    /**
     * @return Number in minutes. The scraping occurs at the specified interval.
     * 
     */
    public Optional<Output<Integer>> scheduleMins() {
        return Optional.ofNullable(this.scheduleMins);
    }

    /**
     * The current state of managementAgent
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of managementAgent
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The time the Management Agent was created. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the Management Agent was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the Management Agent was last updated. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the Management Agent was last updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The type of the DataSource.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the DataSource.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The url through which the Prometheus Exporter publishes its metrics. (http only)
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return The url through which the Prometheus Exporter publishes its metrics. (http only)
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private ManagementAgentDataSourceListArgs() {}

    private ManagementAgentDataSourceListArgs(ManagementAgentDataSourceListArgs $) {
        this.allowMetrics = $.allowMetrics;
        this.compartmentId = $.compartmentId;
        this.connectionTimeout = $.connectionTimeout;
        this.isDaemonSet = $.isDaemonSet;
        this.key = $.key;
        this.metricDimensions = $.metricDimensions;
        this.name = $.name;
        this.namespace = $.namespace;
        this.proxyUrl = $.proxyUrl;
        this.readDataLimit = $.readDataLimit;
        this.readTimeout = $.readTimeout;
        this.resourceGroup = $.resourceGroup;
        this.scheduleMins = $.scheduleMins;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.type = $.type;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementAgentDataSourceListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementAgentDataSourceListArgs $;

        public Builder() {
            $ = new ManagementAgentDataSourceListArgs();
        }

        public Builder(ManagementAgentDataSourceListArgs defaults) {
            $ = new ManagementAgentDataSourceListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowMetrics Comma separated metric name list. The complete set of desired scraped metrics. Use this property to limit the set of metrics uploaded if required.
         * 
         * @return builder
         * 
         */
        public Builder allowMetrics(@Nullable Output<String> allowMetrics) {
            $.allowMetrics = allowMetrics;
            return this;
        }

        /**
         * @param allowMetrics Comma separated metric name list. The complete set of desired scraped metrics. Use this property to limit the set of metrics uploaded if required.
         * 
         * @return builder
         * 
         */
        public Builder allowMetrics(String allowMetrics) {
            return allowMetrics(Output.of(allowMetrics));
        }

        /**
         * @param compartmentId Compartment owning this DataSource.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Compartment owning this DataSource.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param connectionTimeout Number in milliseconds. The timeout for connecting to the Prometheus Exporter&#39;s endpoint.
         * 
         * @return builder
         * 
         */
        public Builder connectionTimeout(@Nullable Output<Integer> connectionTimeout) {
            $.connectionTimeout = connectionTimeout;
            return this;
        }

        /**
         * @param connectionTimeout Number in milliseconds. The timeout for connecting to the Prometheus Exporter&#39;s endpoint.
         * 
         * @return builder
         * 
         */
        public Builder connectionTimeout(Integer connectionTimeout) {
            return connectionTimeout(Output.of(connectionTimeout));
        }

        /**
         * @param isDaemonSet If the Kubernetes cluster type is Daemon set then this will be set to true.
         * 
         * @return builder
         * 
         */
        public Builder isDaemonSet(@Nullable Output<Boolean> isDaemonSet) {
            $.isDaemonSet = isDaemonSet;
            return this;
        }

        /**
         * @param isDaemonSet If the Kubernetes cluster type is Daemon set then this will be set to true.
         * 
         * @return builder
         * 
         */
        public Builder isDaemonSet(Boolean isDaemonSet) {
            return isDaemonSet(Output.of(isDaemonSet));
        }

        /**
         * @param key Identifier for DataSource. This represents the type and name for the data source associated with the Management Agent.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Identifier for DataSource. This represents the type and name for the data source associated with the Management Agent.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param metricDimensions The names of other user-supplied properties expressed as fixed values to be used as dimensions for every uploaded datapoint.
         * 
         * @return builder
         * 
         */
        public Builder metricDimensions(@Nullable Output<List<ManagementAgentDataSourceListMetricDimensionArgs>> metricDimensions) {
            $.metricDimensions = metricDimensions;
            return this;
        }

        /**
         * @param metricDimensions The names of other user-supplied properties expressed as fixed values to be used as dimensions for every uploaded datapoint.
         * 
         * @return builder
         * 
         */
        public Builder metricDimensions(List<ManagementAgentDataSourceListMetricDimensionArgs> metricDimensions) {
            return metricDimensions(Output.of(metricDimensions));
        }

        /**
         * @param metricDimensions The names of other user-supplied properties expressed as fixed values to be used as dimensions for every uploaded datapoint.
         * 
         * @return builder
         * 
         */
        public Builder metricDimensions(ManagementAgentDataSourceListMetricDimensionArgs... metricDimensions) {
            return metricDimensions(List.of(metricDimensions));
        }

        /**
         * @param name Name of the property
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the property
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespace The Oracle Cloud Infrastructure monitoring namespace to which scraped metrics should be uploaded.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Oracle Cloud Infrastructure monitoring namespace to which scraped metrics should be uploaded.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param proxyUrl The url of the network proxy that provides access to the Prometheus Exporter&#39;s endpoint (url required property).
         * 
         * @return builder
         * 
         */
        public Builder proxyUrl(@Nullable Output<String> proxyUrl) {
            $.proxyUrl = proxyUrl;
            return this;
        }

        /**
         * @param proxyUrl The url of the network proxy that provides access to the Prometheus Exporter&#39;s endpoint (url required property).
         * 
         * @return builder
         * 
         */
        public Builder proxyUrl(String proxyUrl) {
            return proxyUrl(Output.of(proxyUrl));
        }

        /**
         * @param readDataLimit Number in kilobytes. The limit on the data being sent, not to exceed the agent&#39;s fixed limit of 400 (KB).
         * 
         * @return builder
         * 
         */
        public Builder readDataLimit(@Nullable Output<Integer> readDataLimit) {
            $.readDataLimit = readDataLimit;
            return this;
        }

        /**
         * @param readDataLimit Number in kilobytes. The limit on the data being sent, not to exceed the agent&#39;s fixed limit of 400 (KB).
         * 
         * @return builder
         * 
         */
        public Builder readDataLimit(Integer readDataLimit) {
            return readDataLimit(Output.of(readDataLimit));
        }

        /**
         * @param readTimeout Number in milliseconds. The timeout for reading the response from the Prometheus Exporter&#39;s endpoint.
         * 
         * @return builder
         * 
         */
        public Builder readTimeout(@Nullable Output<Integer> readTimeout) {
            $.readTimeout = readTimeout;
            return this;
        }

        /**
         * @param readTimeout Number in milliseconds. The timeout for reading the response from the Prometheus Exporter&#39;s endpoint.
         * 
         * @return builder
         * 
         */
        public Builder readTimeout(Integer readTimeout) {
            return readTimeout(Output.of(readTimeout));
        }

        /**
         * @param resourceGroup Oracle Cloud Infrastructure monitoring resource group to assign the metric to.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(@Nullable Output<String> resourceGroup) {
            $.resourceGroup = resourceGroup;
            return this;
        }

        /**
         * @param resourceGroup Oracle Cloud Infrastructure monitoring resource group to assign the metric to.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroup(String resourceGroup) {
            return resourceGroup(Output.of(resourceGroup));
        }

        /**
         * @param scheduleMins Number in minutes. The scraping occurs at the specified interval.
         * 
         * @return builder
         * 
         */
        public Builder scheduleMins(@Nullable Output<Integer> scheduleMins) {
            $.scheduleMins = scheduleMins;
            return this;
        }

        /**
         * @param scheduleMins Number in minutes. The scraping occurs at the specified interval.
         * 
         * @return builder
         * 
         */
        public Builder scheduleMins(Integer scheduleMins) {
            return scheduleMins(Output.of(scheduleMins));
        }

        /**
         * @param state The current state of managementAgent
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of managementAgent
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The time the Management Agent was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the Management Agent was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the Management Agent was last updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the Management Agent was last updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param type The type of the DataSource.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the DataSource.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param url The url through which the Prometheus Exporter publishes its metrics. (http only)
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The url through which the Prometheus Exporter publishes its metrics. (http only)
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public ManagementAgentDataSourceListArgs build() {
            return $;
        }
    }

}
