// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementAgentDataSourceSummaryListArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementAgentDataSourceSummaryListArgs Empty = new ManagementAgentDataSourceSummaryListArgs();

    @Import(name="isDaemonSet")
    private @Nullable Output<Boolean> isDaemonSet;

    public Optional<Output<Boolean>> isDaemonSet() {
        return Optional.ofNullable(this.isDaemonSet);
    }

    @Import(name="key")
    private @Nullable Output<String> key;

    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Name of the property
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the property
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The type of the DataSource.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the DataSource.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private ManagementAgentDataSourceSummaryListArgs() {}

    private ManagementAgentDataSourceSummaryListArgs(ManagementAgentDataSourceSummaryListArgs $) {
        this.isDaemonSet = $.isDaemonSet;
        this.key = $.key;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementAgentDataSourceSummaryListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementAgentDataSourceSummaryListArgs $;

        public Builder() {
            $ = new ManagementAgentDataSourceSummaryListArgs();
        }

        public Builder(ManagementAgentDataSourceSummaryListArgs defaults) {
            $ = new ManagementAgentDataSourceSummaryListArgs(Objects.requireNonNull(defaults));
        }

        public Builder isDaemonSet(@Nullable Output<Boolean> isDaemonSet) {
            $.isDaemonSet = isDaemonSet;
            return this;
        }

        public Builder isDaemonSet(Boolean isDaemonSet) {
            return isDaemonSet(Output.of(isDaemonSet));
        }

        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param name Name of the property
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the property
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type The type of the DataSource.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the DataSource.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ManagementAgentDataSourceSummaryListArgs build() {
            return $;
        }
    }

}
