// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ManagementAgent.outputs.GetManagementAgentDataSourcesDataSource;
import com.pulumi.oci.ManagementAgent.outputs.GetManagementAgentDataSourcesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagementAgentDataSourcesResult {
    /**
     * @return The list of data_sources.
     * 
     */
    private List<GetManagementAgentDataSourcesDataSource> dataSources;
    private @Nullable List<GetManagementAgentDataSourcesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String managementAgentId;
    /**
     * @return Unique name of the DataSource.
     * 
     */
    private @Nullable String name;

    private GetManagementAgentDataSourcesResult() {}
    /**
     * @return The list of data_sources.
     * 
     */
    public List<GetManagementAgentDataSourcesDataSource> dataSources() {
        return this.dataSources;
    }
    public List<GetManagementAgentDataSourcesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String managementAgentId() {
        return this.managementAgentId;
    }
    /**
     * @return Unique name of the DataSource.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementAgentDataSourcesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetManagementAgentDataSourcesDataSource> dataSources;
        private @Nullable List<GetManagementAgentDataSourcesFilter> filters;
        private String id;
        private String managementAgentId;
        private @Nullable String name;
        public Builder() {}
        public Builder(GetManagementAgentDataSourcesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSources = defaults.dataSources;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managementAgentId = defaults.managementAgentId;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder dataSources(List<GetManagementAgentDataSourcesDataSource> dataSources) {
            if (dataSources == null) {
              throw new MissingRequiredPropertyException("GetManagementAgentDataSourcesResult", "dataSources");
            }
            this.dataSources = dataSources;
            return this;
        }
        public Builder dataSources(GetManagementAgentDataSourcesDataSource... dataSources) {
            return dataSources(List.of(dataSources));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetManagementAgentDataSourcesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagementAgentDataSourcesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagementAgentDataSourcesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managementAgentId(String managementAgentId) {
            if (managementAgentId == null) {
              throw new MissingRequiredPropertyException("GetManagementAgentDataSourcesResult", "managementAgentId");
            }
            this.managementAgentId = managementAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        public GetManagementAgentDataSourcesResult build() {
            final var _resultValue = new GetManagementAgentDataSourcesResult();
            _resultValue.dataSources = dataSources;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.managementAgentId = managementAgentId;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
