// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagementAgentInstallKeyResult {
    /**
     * @return Total number of install for this keys
     * 
     */
    private @Nullable Integer allowedKeyInstallCount;
    /**
     * @return Compartment Identifier
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Principal id of user who created the Agent Install key
     * 
     */
    private @Nullable String createdByPrincipalId;
    /**
     * @return Total number of install for this keys
     * 
     */
    private @Nullable Integer currentKeyInstallCount;
    /**
     * @return Management Agent Install Key Name
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Agent install Key identifier
     * 
     */
    private @Nullable String id;
    /**
     * @return If set to true, the install key has no expiration date or usage limit. Properties allowedKeyInstallCount and timeExpires are ignored if set to true. Defaults to false.
     * 
     */
    private @Nullable Boolean isUnlimited;
    /**
     * @return Management Agent Install Key
     * 
     */
    private @Nullable String key;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String lifecycleDetails;
    private String managementAgentInstallKeyId;
    /**
     * @return Status of Key
     * 
     */
    private @Nullable String state;
    /**
     * @return The time when Management Agent install Key was created. An RFC3339 formatted date time string
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return date after which key would expire after creation
     * 
     */
    private @Nullable String timeExpires;
    /**
     * @return The time when Management Agent install Key was updated. An RFC3339 formatted date time string
     * 
     */
    private @Nullable String timeUpdated;

    private GetManagementAgentInstallKeyResult() {}
    /**
     * @return Total number of install for this keys
     * 
     */
    public Optional<Integer> allowedKeyInstallCount() {
        return Optional.ofNullable(this.allowedKeyInstallCount);
    }
    /**
     * @return Compartment Identifier
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Principal id of user who created the Agent Install key
     * 
     */
    public Optional<String> createdByPrincipalId() {
        return Optional.ofNullable(this.createdByPrincipalId);
    }
    /**
     * @return Total number of install for this keys
     * 
     */
    public Optional<Integer> currentKeyInstallCount() {
        return Optional.ofNullable(this.currentKeyInstallCount);
    }
    /**
     * @return Management Agent Install Key Name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Agent install Key identifier
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return If set to true, the install key has no expiration date or usage limit. Properties allowedKeyInstallCount and timeExpires are ignored if set to true. Defaults to false.
     * 
     */
    public Optional<Boolean> isUnlimited() {
        return Optional.ofNullable(this.isUnlimited);
    }
    /**
     * @return Management Agent Install Key
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    public String managementAgentInstallKeyId() {
        return this.managementAgentInstallKeyId;
    }
    /**
     * @return Status of Key
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The time when Management Agent install Key was created. An RFC3339 formatted date time string
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return date after which key would expire after creation
     * 
     */
    public Optional<String> timeExpires() {
        return Optional.ofNullable(this.timeExpires);
    }
    /**
     * @return The time when Management Agent install Key was updated. An RFC3339 formatted date time string
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementAgentInstallKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer allowedKeyInstallCount;
        private @Nullable String compartmentId;
        private @Nullable String createdByPrincipalId;
        private @Nullable Integer currentKeyInstallCount;
        private @Nullable String displayName;
        private @Nullable String id;
        private @Nullable Boolean isUnlimited;
        private @Nullable String key;
        private @Nullable String lifecycleDetails;
        private String managementAgentInstallKeyId;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeExpires;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetManagementAgentInstallKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedKeyInstallCount = defaults.allowedKeyInstallCount;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdByPrincipalId = defaults.createdByPrincipalId;
    	      this.currentKeyInstallCount = defaults.currentKeyInstallCount;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.isUnlimited = defaults.isUnlimited;
    	      this.key = defaults.key;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.managementAgentInstallKeyId = defaults.managementAgentInstallKeyId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeExpires = defaults.timeExpires;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder allowedKeyInstallCount(@Nullable Integer allowedKeyInstallCount) {
            this.allowedKeyInstallCount = allowedKeyInstallCount;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder createdByPrincipalId(@Nullable String createdByPrincipalId) {
            this.createdByPrincipalId = createdByPrincipalId;
            return this;
        }
        @CustomType.Setter
        public Builder currentKeyInstallCount(@Nullable Integer currentKeyInstallCount) {
            this.currentKeyInstallCount = currentKeyInstallCount;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isUnlimited(@Nullable Boolean isUnlimited) {
            this.isUnlimited = isUnlimited;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder managementAgentInstallKeyId(String managementAgentInstallKeyId) {
            this.managementAgentInstallKeyId = Objects.requireNonNull(managementAgentInstallKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeExpires(@Nullable String timeExpires) {
            this.timeExpires = timeExpires;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetManagementAgentInstallKeyResult build() {
            final var o = new GetManagementAgentInstallKeyResult();
            o.allowedKeyInstallCount = allowedKeyInstallCount;
            o.compartmentId = compartmentId;
            o.createdByPrincipalId = createdByPrincipalId;
            o.currentKeyInstallCount = currentKeyInstallCount;
            o.displayName = displayName;
            o.id = id;
            o.isUnlimited = isUnlimited;
            o.key = key;
            o.lifecycleDetails = lifecycleDetails;
            o.managementAgentInstallKeyId = managementAgentInstallKeyId;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeExpires = timeExpires;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
