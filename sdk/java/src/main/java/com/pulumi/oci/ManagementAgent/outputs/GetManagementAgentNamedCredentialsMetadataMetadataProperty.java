// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagementAgentNamedCredentialsMetadataMetadataProperty {
    /**
     * @return List of values which can be applied to the value when valueCategory is ALLOWED_VALUES
     * 
     */
    private List<String> allowedValues;
    /**
     * @return The default value which will be used if no value is set.  If defaultValue is empty, then no default will be set.
     * 
     */
    private String defaultValue;
    /**
     * @return The field display name
     * 
     */
    private String displayName;
    /**
     * @return Set to true if the field must be defined
     * 
     */
    private Boolean isRequired;
    /**
     * @return The field name
     * 
     */
    private String name;
    /**
     * @return Optional regular expression definition which will be applied to the value when valueCategory is CLEAR_TEXT
     * 
     */
    private String regex;
    /**
     * @return List of value categories of field allowed for this property
     * 
     */
    private List<String> valueCategories;

    private GetManagementAgentNamedCredentialsMetadataMetadataProperty() {}
    /**
     * @return List of values which can be applied to the value when valueCategory is ALLOWED_VALUES
     * 
     */
    public List<String> allowedValues() {
        return this.allowedValues;
    }
    /**
     * @return The default value which will be used if no value is set.  If defaultValue is empty, then no default will be set.
     * 
     */
    public String defaultValue() {
        return this.defaultValue;
    }
    /**
     * @return The field display name
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Set to true if the field must be defined
     * 
     */
    public Boolean isRequired() {
        return this.isRequired;
    }
    /**
     * @return The field name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Optional regular expression definition which will be applied to the value when valueCategory is CLEAR_TEXT
     * 
     */
    public String regex() {
        return this.regex;
    }
    /**
     * @return List of value categories of field allowed for this property
     * 
     */
    public List<String> valueCategories() {
        return this.valueCategories;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementAgentNamedCredentialsMetadataMetadataProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allowedValues;
        private String defaultValue;
        private String displayName;
        private Boolean isRequired;
        private String name;
        private String regex;
        private List<String> valueCategories;
        public Builder() {}
        public Builder(GetManagementAgentNamedCredentialsMetadataMetadataProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedValues = defaults.allowedValues;
    	      this.defaultValue = defaults.defaultValue;
    	      this.displayName = defaults.displayName;
    	      this.isRequired = defaults.isRequired;
    	      this.name = defaults.name;
    	      this.regex = defaults.regex;
    	      this.valueCategories = defaults.valueCategories;
        }

        @CustomType.Setter
        public Builder allowedValues(List<String> allowedValues) {
            if (allowedValues == null) {
              throw new MissingRequiredPropertyException("GetManagementAgentNamedCredentialsMetadataMetadataProperty", "allowedValues");
            }
            this.allowedValues = allowedValues;
            return this;
        }
        public Builder allowedValues(String... allowedValues) {
            return allowedValues(List.of(allowedValues));
        }
        @CustomType.Setter
        public Builder defaultValue(String defaultValue) {
            if (defaultValue == null) {
              throw new MissingRequiredPropertyException("GetManagementAgentNamedCredentialsMetadataMetadataProperty", "defaultValue");
            }
            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetManagementAgentNamedCredentialsMetadataMetadataProperty", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder isRequired(Boolean isRequired) {
            if (isRequired == null) {
              throw new MissingRequiredPropertyException("GetManagementAgentNamedCredentialsMetadataMetadataProperty", "isRequired");
            }
            this.isRequired = isRequired;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetManagementAgentNamedCredentialsMetadataMetadataProperty", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder regex(String regex) {
            if (regex == null) {
              throw new MissingRequiredPropertyException("GetManagementAgentNamedCredentialsMetadataMetadataProperty", "regex");
            }
            this.regex = regex;
            return this;
        }
        @CustomType.Setter
        public Builder valueCategories(List<String> valueCategories) {
            if (valueCategories == null) {
              throw new MissingRequiredPropertyException("GetManagementAgentNamedCredentialsMetadataMetadataProperty", "valueCategories");
            }
            this.valueCategories = valueCategories;
            return this;
        }
        public Builder valueCategories(String... valueCategories) {
            return valueCategories(List.of(valueCategories));
        }
        public GetManagementAgentNamedCredentialsMetadataMetadataProperty build() {
            final var _resultValue = new GetManagementAgentNamedCredentialsMetadataMetadataProperty();
            _resultValue.allowedValues = allowedValues;
            _resultValue.defaultValue = defaultValue;
            _resultValue.displayName = displayName;
            _resultValue.isRequired = isRequired;
            _resultValue.name = name;
            _resultValue.regex = regex;
            _resultValue.valueCategories = valueCategories;
            return _resultValue;
        }
    }
}
