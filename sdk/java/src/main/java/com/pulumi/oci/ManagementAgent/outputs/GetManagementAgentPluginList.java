// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagementAgentPluginList {
    /**
     * @return flag indicating whether the plugin is in enabled mode or disabled mode.
     * 
     */
    private final Boolean isEnabled;
    /**
     * @return Management Agent Plugin Identifier, can be renamed
     * 
     */
    private final String pluginDisplayName;
    /**
     * @return Plugin Id
     * 
     */
    private final String pluginId;
    /**
     * @return Management Agent Plugin Name
     * 
     */
    private final String pluginName;
    /**
     * @return Plugin Status
     * 
     */
    private final String pluginStatus;
    /**
     * @return Status message of the Plugin
     * 
     */
    private final String pluginStatusMessage;
    /**
     * @return Plugin Version
     * 
     */
    private final String pluginVersion;

    @CustomType.Constructor
    private GetManagementAgentPluginList(
        @CustomType.Parameter("isEnabled") Boolean isEnabled,
        @CustomType.Parameter("pluginDisplayName") String pluginDisplayName,
        @CustomType.Parameter("pluginId") String pluginId,
        @CustomType.Parameter("pluginName") String pluginName,
        @CustomType.Parameter("pluginStatus") String pluginStatus,
        @CustomType.Parameter("pluginStatusMessage") String pluginStatusMessage,
        @CustomType.Parameter("pluginVersion") String pluginVersion) {
        this.isEnabled = isEnabled;
        this.pluginDisplayName = pluginDisplayName;
        this.pluginId = pluginId;
        this.pluginName = pluginName;
        this.pluginStatus = pluginStatus;
        this.pluginStatusMessage = pluginStatusMessage;
        this.pluginVersion = pluginVersion;
    }

    /**
     * @return flag indicating whether the plugin is in enabled mode or disabled mode.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return Management Agent Plugin Identifier, can be renamed
     * 
     */
    public String pluginDisplayName() {
        return this.pluginDisplayName;
    }
    /**
     * @return Plugin Id
     * 
     */
    public String pluginId() {
        return this.pluginId;
    }
    /**
     * @return Management Agent Plugin Name
     * 
     */
    public String pluginName() {
        return this.pluginName;
    }
    /**
     * @return Plugin Status
     * 
     */
    public String pluginStatus() {
        return this.pluginStatus;
    }
    /**
     * @return Status message of the Plugin
     * 
     */
    public String pluginStatusMessage() {
        return this.pluginStatusMessage;
    }
    /**
     * @return Plugin Version
     * 
     */
    public String pluginVersion() {
        return this.pluginVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementAgentPluginList defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean isEnabled;
        private String pluginDisplayName;
        private String pluginId;
        private String pluginName;
        private String pluginStatus;
        private String pluginStatusMessage;
        private String pluginVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagementAgentPluginList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isEnabled = defaults.isEnabled;
    	      this.pluginDisplayName = defaults.pluginDisplayName;
    	      this.pluginId = defaults.pluginId;
    	      this.pluginName = defaults.pluginName;
    	      this.pluginStatus = defaults.pluginStatus;
    	      this.pluginStatusMessage = defaults.pluginStatusMessage;
    	      this.pluginVersion = defaults.pluginVersion;
        }

        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        public Builder pluginDisplayName(String pluginDisplayName) {
            this.pluginDisplayName = Objects.requireNonNull(pluginDisplayName);
            return this;
        }
        public Builder pluginId(String pluginId) {
            this.pluginId = Objects.requireNonNull(pluginId);
            return this;
        }
        public Builder pluginName(String pluginName) {
            this.pluginName = Objects.requireNonNull(pluginName);
            return this;
        }
        public Builder pluginStatus(String pluginStatus) {
            this.pluginStatus = Objects.requireNonNull(pluginStatus);
            return this;
        }
        public Builder pluginStatusMessage(String pluginStatusMessage) {
            this.pluginStatusMessage = Objects.requireNonNull(pluginStatusMessage);
            return this;
        }
        public Builder pluginVersion(String pluginVersion) {
            this.pluginVersion = Objects.requireNonNull(pluginVersion);
            return this;
        }        public GetManagementAgentPluginList build() {
            return new GetManagementAgentPluginList(isEnabled, pluginDisplayName, pluginId, pluginName, pluginStatus, pluginStatusMessage, pluginVersion);
        }
    }
}
