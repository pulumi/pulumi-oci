// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ManagementAgent.outputs.GetManagementAgentManagementAgentProperty;
import com.pulumi.oci.ManagementAgent.outputs.GetManagementAgentPluginList;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagementAgentResult {
    /**
     * @return The current availability status of managementAgent
     * 
     */
    private @Nullable String availabilityStatus;
    /**
     * @return Compartment Identifier
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    private @Nullable List<String> deployPluginsIds;
    /**
     * @return Management Agent Name
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Management Agent host machine name
     * 
     */
    private @Nullable String host;
    /**
     * @return Host resource ocid
     * 
     */
    private @Nullable String hostId;
    /**
     * @return agent identifier
     * 
     */
    private @Nullable String id;
    /**
     * @return agent install key identifier
     * 
     */
    private @Nullable String installKeyId;
    /**
     * @return Path where Management Agent is installed
     * 
     */
    private @Nullable String installPath;
    /**
     * @return The install type, either AGENT or GATEWAY
     * 
     */
    private @Nullable String installType;
    /**
     * @return true if the agent can be upgraded automatically; false if it must be upgraded manually. This flag is derived from the tenancy level auto upgrade preference.
     * 
     */
    private @Nullable Boolean isAgentAutoUpgradable;
    /**
     * @return true, if the agent image is manually downloaded and installed. false, if the agent is deployed as a plugin in Oracle Cloud Agent.
     * 
     */
    private @Nullable Boolean isCustomerDeployed;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String lifecycleDetails;
    private @Nullable String managedAgentId;
    private String managementAgentId;
    /**
     * @return Additional properties for this Management Agent
     * 
     */
    private @Nullable List<GetManagementAgentManagementAgentProperty> managementAgentProperties;
    /**
     * @return Platform Name
     * 
     */
    private @Nullable String platformName;
    /**
     * @return Platform Type
     * 
     */
    private @Nullable String platformType;
    /**
     * @return Platform Version
     * 
     */
    private @Nullable String platformVersion;
    /**
     * @return list of managementAgentPlugins associated with the agent
     * 
     */
    private @Nullable List<GetManagementAgentPluginList> pluginLists;
    /**
     * @return Version of the deployment artifact instantiated by this Management Agent. The format for Standalone resourceMode is YYMMDD.HHMM, and the format for other modes (whose artifacts are based upon Standalone but can advance independently) is YYMMDD.HHMM.VVVVVVVVVVVV. VVVVVVVVVVVV is always a numeric value between 000000000000 and 999999999999
     * 
     */
    private @Nullable String resourceArtifactVersion;
    /**
     * @return The current state of managementAgent
     * 
     */
    private @Nullable String state;
    /**
     * @return The time the Management Agent was created. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the Management Agent has last recorded its health status in telemetry. This value will be null if the agent has not recorded its health status in last 7 days. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeLastHeartbeat;
    /**
     * @return The time the Management Agent was last updated. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return Management Agent Version
     * 
     */
    private @Nullable String version;

    private GetManagementAgentResult() {}
    /**
     * @return The current availability status of managementAgent
     * 
     */
    public Optional<String> availabilityStatus() {
        return Optional.ofNullable(this.availabilityStatus);
    }
    /**
     * @return Compartment Identifier
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    public List<String> deployPluginsIds() {
        return this.deployPluginsIds == null ? List.of() : this.deployPluginsIds;
    }
    /**
     * @return Management Agent Name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Management Agent host machine name
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return Host resource ocid
     * 
     */
    public Optional<String> hostId() {
        return Optional.ofNullable(this.hostId);
    }
    /**
     * @return agent identifier
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return agent install key identifier
     * 
     */
    public Optional<String> installKeyId() {
        return Optional.ofNullable(this.installKeyId);
    }
    /**
     * @return Path where Management Agent is installed
     * 
     */
    public Optional<String> installPath() {
        return Optional.ofNullable(this.installPath);
    }
    /**
     * @return The install type, either AGENT or GATEWAY
     * 
     */
    public Optional<String> installType() {
        return Optional.ofNullable(this.installType);
    }
    /**
     * @return true if the agent can be upgraded automatically; false if it must be upgraded manually. This flag is derived from the tenancy level auto upgrade preference.
     * 
     */
    public Optional<Boolean> isAgentAutoUpgradable() {
        return Optional.ofNullable(this.isAgentAutoUpgradable);
    }
    /**
     * @return true, if the agent image is manually downloaded and installed. false, if the agent is deployed as a plugin in Oracle Cloud Agent.
     * 
     */
    public Optional<Boolean> isCustomerDeployed() {
        return Optional.ofNullable(this.isCustomerDeployed);
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    public Optional<String> managedAgentId() {
        return Optional.ofNullable(this.managedAgentId);
    }
    public String managementAgentId() {
        return this.managementAgentId;
    }
    /**
     * @return Additional properties for this Management Agent
     * 
     */
    public List<GetManagementAgentManagementAgentProperty> managementAgentProperties() {
        return this.managementAgentProperties == null ? List.of() : this.managementAgentProperties;
    }
    /**
     * @return Platform Name
     * 
     */
    public Optional<String> platformName() {
        return Optional.ofNullable(this.platformName);
    }
    /**
     * @return Platform Type
     * 
     */
    public Optional<String> platformType() {
        return Optional.ofNullable(this.platformType);
    }
    /**
     * @return Platform Version
     * 
     */
    public Optional<String> platformVersion() {
        return Optional.ofNullable(this.platformVersion);
    }
    /**
     * @return list of managementAgentPlugins associated with the agent
     * 
     */
    public List<GetManagementAgentPluginList> pluginLists() {
        return this.pluginLists == null ? List.of() : this.pluginLists;
    }
    /**
     * @return Version of the deployment artifact instantiated by this Management Agent. The format for Standalone resourceMode is YYMMDD.HHMM, and the format for other modes (whose artifacts are based upon Standalone but can advance independently) is YYMMDD.HHMM.VVVVVVVVVVVV. VVVVVVVVVVVV is always a numeric value between 000000000000 and 999999999999
     * 
     */
    public Optional<String> resourceArtifactVersion() {
        return Optional.ofNullable(this.resourceArtifactVersion);
    }
    /**
     * @return The current state of managementAgent
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The time the Management Agent was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the Management Agent has last recorded its health status in telemetry. This value will be null if the agent has not recorded its health status in last 7 days. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeLastHeartbeat() {
        return Optional.ofNullable(this.timeLastHeartbeat);
    }
    /**
     * @return The time the Management Agent was last updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return Management Agent Version
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementAgentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String availabilityStatus;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable List<String> deployPluginsIds;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String host;
        private @Nullable String hostId;
        private @Nullable String id;
        private @Nullable String installKeyId;
        private @Nullable String installPath;
        private @Nullable String installType;
        private @Nullable Boolean isAgentAutoUpgradable;
        private @Nullable Boolean isCustomerDeployed;
        private @Nullable String lifecycleDetails;
        private @Nullable String managedAgentId;
        private String managementAgentId;
        private @Nullable List<GetManagementAgentManagementAgentProperty> managementAgentProperties;
        private @Nullable String platformName;
        private @Nullable String platformType;
        private @Nullable String platformVersion;
        private @Nullable List<GetManagementAgentPluginList> pluginLists;
        private @Nullable String resourceArtifactVersion;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeLastHeartbeat;
        private @Nullable String timeUpdated;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetManagementAgentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityStatus = defaults.availabilityStatus;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deployPluginsIds = defaults.deployPluginsIds;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.host = defaults.host;
    	      this.hostId = defaults.hostId;
    	      this.id = defaults.id;
    	      this.installKeyId = defaults.installKeyId;
    	      this.installPath = defaults.installPath;
    	      this.installType = defaults.installType;
    	      this.isAgentAutoUpgradable = defaults.isAgentAutoUpgradable;
    	      this.isCustomerDeployed = defaults.isCustomerDeployed;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.managedAgentId = defaults.managedAgentId;
    	      this.managementAgentId = defaults.managementAgentId;
    	      this.managementAgentProperties = defaults.managementAgentProperties;
    	      this.platformName = defaults.platformName;
    	      this.platformType = defaults.platformType;
    	      this.platformVersion = defaults.platformVersion;
    	      this.pluginLists = defaults.pluginLists;
    	      this.resourceArtifactVersion = defaults.resourceArtifactVersion;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastHeartbeat = defaults.timeLastHeartbeat;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder availabilityStatus(@Nullable String availabilityStatus) {
            this.availabilityStatus = availabilityStatus;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder deployPluginsIds(@Nullable List<String> deployPluginsIds) {
            this.deployPluginsIds = deployPluginsIds;
            return this;
        }
        public Builder deployPluginsIds(String... deployPluginsIds) {
            return deployPluginsIds(List.of(deployPluginsIds));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder host(@Nullable String host) {
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder hostId(@Nullable String hostId) {
            this.hostId = hostId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder installKeyId(@Nullable String installKeyId) {
            this.installKeyId = installKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder installPath(@Nullable String installPath) {
            this.installPath = installPath;
            return this;
        }
        @CustomType.Setter
        public Builder installType(@Nullable String installType) {
            this.installType = installType;
            return this;
        }
        @CustomType.Setter
        public Builder isAgentAutoUpgradable(@Nullable Boolean isAgentAutoUpgradable) {
            this.isAgentAutoUpgradable = isAgentAutoUpgradable;
            return this;
        }
        @CustomType.Setter
        public Builder isCustomerDeployed(@Nullable Boolean isCustomerDeployed) {
            this.isCustomerDeployed = isCustomerDeployed;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder managedAgentId(@Nullable String managedAgentId) {
            this.managedAgentId = managedAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder managementAgentId(String managementAgentId) {
            this.managementAgentId = Objects.requireNonNull(managementAgentId);
            return this;
        }
        @CustomType.Setter
        public Builder managementAgentProperties(@Nullable List<GetManagementAgentManagementAgentProperty> managementAgentProperties) {
            this.managementAgentProperties = managementAgentProperties;
            return this;
        }
        public Builder managementAgentProperties(GetManagementAgentManagementAgentProperty... managementAgentProperties) {
            return managementAgentProperties(List.of(managementAgentProperties));
        }
        @CustomType.Setter
        public Builder platformName(@Nullable String platformName) {
            this.platformName = platformName;
            return this;
        }
        @CustomType.Setter
        public Builder platformType(@Nullable String platformType) {
            this.platformType = platformType;
            return this;
        }
        @CustomType.Setter
        public Builder platformVersion(@Nullable String platformVersion) {
            this.platformVersion = platformVersion;
            return this;
        }
        @CustomType.Setter
        public Builder pluginLists(@Nullable List<GetManagementAgentPluginList> pluginLists) {
            this.pluginLists = pluginLists;
            return this;
        }
        public Builder pluginLists(GetManagementAgentPluginList... pluginLists) {
            return pluginLists(List.of(pluginLists));
        }
        @CustomType.Setter
        public Builder resourceArtifactVersion(@Nullable String resourceArtifactVersion) {
            this.resourceArtifactVersion = resourceArtifactVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastHeartbeat(@Nullable String timeLastHeartbeat) {
            this.timeLastHeartbeat = timeLastHeartbeat;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetManagementAgentResult build() {
            final var o = new GetManagementAgentResult();
            o.availabilityStatus = availabilityStatus;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.deployPluginsIds = deployPluginsIds;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.host = host;
            o.hostId = hostId;
            o.id = id;
            o.installKeyId = installKeyId;
            o.installPath = installPath;
            o.installType = installType;
            o.isAgentAutoUpgradable = isAgentAutoUpgradable;
            o.isCustomerDeployed = isCustomerDeployed;
            o.lifecycleDetails = lifecycleDetails;
            o.managedAgentId = managedAgentId;
            o.managementAgentId = managementAgentId;
            o.managementAgentProperties = managementAgentProperties;
            o.platformName = platformName;
            o.platformType = platformType;
            o.platformVersion = platformVersion;
            o.pluginLists = pluginLists;
            o.resourceArtifactVersion = resourceArtifactVersion;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeLastHeartbeat = timeLastHeartbeat;
            o.timeUpdated = timeUpdated;
            o.version = version;
            return o;
        }
    }
}
