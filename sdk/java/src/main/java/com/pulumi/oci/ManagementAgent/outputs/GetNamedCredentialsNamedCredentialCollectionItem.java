// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ManagementAgent.outputs.GetNamedCredentialsNamedCredentialCollectionItemProperty;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNamedCredentialsNamedCredentialCollectionItem {
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return Description of the Named Credential.
     * 
     */
    private String description;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return Filter list for these Named credentials identifiers (ocid) values.
     * 
     */
    private String id;
    /**
     * @return The ManagementAgentID of the agent from which the named credentials are associated.
     * 
     */
    private String managementAgentId;
    /**
     * @return Filter list for these name items.
     * 
     */
    private String name;
    /**
     * @return Properties for the named credential
     * 
     */
    private List<GetNamedCredentialsNamedCredentialCollectionItemProperty> properties;
    /**
     * @return Filter list to return only Management Agents in the particular lifecycle state.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The time the Named Credential was created. An RFC3339 formatted datetime string
     * 
     */
    private String timeCreated;
    /**
     * @return The time the Named Credential data was last updated. An RFC3339 formatted datetime string
     * 
     */
    private String timeUpdated;
    /**
     * @return Filter list for these type values.
     * 
     */
    private String type;

    private GetNamedCredentialsNamedCredentialCollectionItem() {}
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of the Named Credential.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Filter list for these Named credentials identifiers (ocid) values.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ManagementAgentID of the agent from which the named credentials are associated.
     * 
     */
    public String managementAgentId() {
        return this.managementAgentId;
    }
    /**
     * @return Filter list for these name items.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Properties for the named credential
     * 
     */
    public List<GetNamedCredentialsNamedCredentialCollectionItemProperty> properties() {
        return this.properties;
    }
    /**
     * @return Filter list to return only Management Agents in the particular lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the Named Credential was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the Named Credential data was last updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Filter list for these type values.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamedCredentialsNamedCredentialCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> definedTags;
        private String description;
        private Map<String,String> freeformTags;
        private String id;
        private String managementAgentId;
        private String name;
        private List<GetNamedCredentialsNamedCredentialCollectionItemProperty> properties;
        private String state;
        private Map<String,String> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String type;
        public Builder() {}
        public Builder(GetNamedCredentialsNamedCredentialCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.managementAgentId = defaults.managementAgentId;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder managementAgentId(String managementAgentId) {
            if (managementAgentId == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "managementAgentId");
            }
            this.managementAgentId = managementAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder properties(List<GetNamedCredentialsNamedCredentialCollectionItemProperty> properties) {
            if (properties == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "properties");
            }
            this.properties = properties;
            return this;
        }
        public Builder properties(GetNamedCredentialsNamedCredentialCollectionItemProperty... properties) {
            return properties(List.of(properties));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsNamedCredentialCollectionItem", "type");
            }
            this.type = type;
            return this;
        }
        public GetNamedCredentialsNamedCredentialCollectionItem build() {
            final var _resultValue = new GetNamedCredentialsNamedCredentialCollectionItem();
            _resultValue.definedTags = definedTags;
            _resultValue.description = description;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.managementAgentId = managementAgentId;
            _resultValue.name = name;
            _resultValue.properties = properties;
            _resultValue.state = state;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
