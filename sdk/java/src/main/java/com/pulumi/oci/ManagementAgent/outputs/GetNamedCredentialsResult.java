// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ManagementAgent.outputs.GetNamedCredentialsFilter;
import com.pulumi.oci.ManagementAgent.outputs.GetNamedCredentialsNamedCredentialCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetNamedCredentialsResult {
    private @Nullable List<GetNamedCredentialsFilter> filters;
    /**
     * @return Identifier for Named Credential.
     * 
     */
    private @Nullable List<String> ids;
    /**
     * @return The Management Agent parent resource to associated with this named credential. This is the ManagementAgent resource OCID.
     * 
     */
    private String managementAgentId;
    /**
     * @return The list of named_credential_collection.
     * 
     */
    private List<GetNamedCredentialsNamedCredentialCollection> namedCredentialCollections;
    /**
     * @return Name of the property
     * 
     */
    private @Nullable List<String> names;
    /**
     * @return The current state of the named credential
     * 
     */
    private @Nullable List<String> states;
    /**
     * @return The type of the Named Credential.
     * 
     */
    private @Nullable List<String> types;

    private GetNamedCredentialsResult() {}
    public List<GetNamedCredentialsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return Identifier for Named Credential.
     * 
     */
    public List<String> ids() {
        return this.ids == null ? List.of() : this.ids;
    }
    /**
     * @return The Management Agent parent resource to associated with this named credential. This is the ManagementAgent resource OCID.
     * 
     */
    public String managementAgentId() {
        return this.managementAgentId;
    }
    /**
     * @return The list of named_credential_collection.
     * 
     */
    public List<GetNamedCredentialsNamedCredentialCollection> namedCredentialCollections() {
        return this.namedCredentialCollections;
    }
    /**
     * @return Name of the property
     * 
     */
    public List<String> names() {
        return this.names == null ? List.of() : this.names;
    }
    /**
     * @return The current state of the named credential
     * 
     */
    public List<String> states() {
        return this.states == null ? List.of() : this.states;
    }
    /**
     * @return The type of the Named Credential.
     * 
     */
    public List<String> types() {
        return this.types == null ? List.of() : this.types;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamedCredentialsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetNamedCredentialsFilter> filters;
        private @Nullable List<String> ids;
        private String managementAgentId;
        private List<GetNamedCredentialsNamedCredentialCollection> namedCredentialCollections;
        private @Nullable List<String> names;
        private @Nullable List<String> states;
        private @Nullable List<String> types;
        public Builder() {}
        public Builder(GetNamedCredentialsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.ids = defaults.ids;
    	      this.managementAgentId = defaults.managementAgentId;
    	      this.namedCredentialCollections = defaults.namedCredentialCollections;
    	      this.names = defaults.names;
    	      this.states = defaults.states;
    	      this.types = defaults.types;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetNamedCredentialsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetNamedCredentialsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder ids(@Nullable List<String> ids) {

            this.ids = ids;
            return this;
        }
        public Builder ids(String... ids) {
            return ids(List.of(ids));
        }
        @CustomType.Setter
        public Builder managementAgentId(String managementAgentId) {
            if (managementAgentId == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsResult", "managementAgentId");
            }
            this.managementAgentId = managementAgentId;
            return this;
        }
        @CustomType.Setter
        public Builder namedCredentialCollections(List<GetNamedCredentialsNamedCredentialCollection> namedCredentialCollections) {
            if (namedCredentialCollections == null) {
              throw new MissingRequiredPropertyException("GetNamedCredentialsResult", "namedCredentialCollections");
            }
            this.namedCredentialCollections = namedCredentialCollections;
            return this;
        }
        public Builder namedCredentialCollections(GetNamedCredentialsNamedCredentialCollection... namedCredentialCollections) {
            return namedCredentialCollections(List.of(namedCredentialCollections));
        }
        @CustomType.Setter
        public Builder names(@Nullable List<String> names) {

            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder states(@Nullable List<String> states) {

            this.states = states;
            return this;
        }
        public Builder states(String... states) {
            return states(List.of(states));
        }
        @CustomType.Setter
        public Builder types(@Nullable List<String> types) {

            this.types = types;
            return this;
        }
        public Builder types(String... types) {
            return types(List.of(types));
        }
        public GetNamedCredentialsResult build() {
            final var _resultValue = new GetNamedCredentialsResult();
            _resultValue.filters = filters;
            _resultValue.ids = ids;
            _resultValue.managementAgentId = managementAgentId;
            _resultValue.namedCredentialCollections = namedCredentialCollections;
            _resultValue.names = names;
            _resultValue.states = states;
            _resultValue.types = types;
            return _resultValue;
        }
    }
}
