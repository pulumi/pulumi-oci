// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagementAgentPluginList {
    /**
     * @return flag indicating whether the plugin is in enabled mode or disabled mode.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return Management Agent Plugin Identifier, can be renamed
     * 
     */
    private @Nullable String pluginDisplayName;
    /**
     * @return Plugin Id
     * 
     */
    private @Nullable String pluginId;
    /**
     * @return Management Agent Plugin Name
     * 
     */
    private @Nullable String pluginName;
    /**
     * @return Plugin Status
     * 
     */
    private @Nullable String pluginStatus;
    /**
     * @return Status message of the Plugin
     * 
     */
    private @Nullable String pluginStatusMessage;
    /**
     * @return Plugin Version
     * 
     */
    private @Nullable String pluginVersion;

    private ManagementAgentPluginList() {}
    /**
     * @return flag indicating whether the plugin is in enabled mode or disabled mode.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return Management Agent Plugin Identifier, can be renamed
     * 
     */
    public Optional<String> pluginDisplayName() {
        return Optional.ofNullable(this.pluginDisplayName);
    }
    /**
     * @return Plugin Id
     * 
     */
    public Optional<String> pluginId() {
        return Optional.ofNullable(this.pluginId);
    }
    /**
     * @return Management Agent Plugin Name
     * 
     */
    public Optional<String> pluginName() {
        return Optional.ofNullable(this.pluginName);
    }
    /**
     * @return Plugin Status
     * 
     */
    public Optional<String> pluginStatus() {
        return Optional.ofNullable(this.pluginStatus);
    }
    /**
     * @return Status message of the Plugin
     * 
     */
    public Optional<String> pluginStatusMessage() {
        return Optional.ofNullable(this.pluginStatusMessage);
    }
    /**
     * @return Plugin Version
     * 
     */
    public Optional<String> pluginVersion() {
        return Optional.ofNullable(this.pluginVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagementAgentPluginList defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isEnabled;
        private @Nullable String pluginDisplayName;
        private @Nullable String pluginId;
        private @Nullable String pluginName;
        private @Nullable String pluginStatus;
        private @Nullable String pluginStatusMessage;
        private @Nullable String pluginVersion;
        public Builder() {}
        public Builder(ManagementAgentPluginList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isEnabled = defaults.isEnabled;
    	      this.pluginDisplayName = defaults.pluginDisplayName;
    	      this.pluginId = defaults.pluginId;
    	      this.pluginName = defaults.pluginName;
    	      this.pluginStatus = defaults.pluginStatus;
    	      this.pluginStatusMessage = defaults.pluginStatusMessage;
    	      this.pluginVersion = defaults.pluginVersion;
        }

        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {

            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder pluginDisplayName(@Nullable String pluginDisplayName) {

            this.pluginDisplayName = pluginDisplayName;
            return this;
        }
        @CustomType.Setter
        public Builder pluginId(@Nullable String pluginId) {

            this.pluginId = pluginId;
            return this;
        }
        @CustomType.Setter
        public Builder pluginName(@Nullable String pluginName) {

            this.pluginName = pluginName;
            return this;
        }
        @CustomType.Setter
        public Builder pluginStatus(@Nullable String pluginStatus) {

            this.pluginStatus = pluginStatus;
            return this;
        }
        @CustomType.Setter
        public Builder pluginStatusMessage(@Nullable String pluginStatusMessage) {

            this.pluginStatusMessage = pluginStatusMessage;
            return this;
        }
        @CustomType.Setter
        public Builder pluginVersion(@Nullable String pluginVersion) {

            this.pluginVersion = pluginVersion;
            return this;
        }
        public ManagementAgentPluginList build() {
            final var _resultValue = new ManagementAgentPluginList();
            _resultValue.isEnabled = isEnabled;
            _resultValue.pluginDisplayName = pluginDisplayName;
            _resultValue.pluginId = pluginId;
            _resultValue.pluginName = pluginName;
            _resultValue.pluginStatus = pluginStatus;
            _resultValue.pluginStatusMessage = pluginStatusMessage;
            _resultValue.pluginVersion = pluginVersion;
            return _resultValue;
        }
    }
}
