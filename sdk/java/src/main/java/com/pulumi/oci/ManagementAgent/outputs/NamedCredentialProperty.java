// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class NamedCredentialProperty {
    /**
     * @return (Updatable) Name of the property
     * 
     */
    private String name;
    /**
     * @return (Updatable) Value of the property
     * 
     */
    private String value;
    /**
     * @return (Updatable) The category of the Named credential property value. CLEAR_TEXT indicates the value field contains a clear text value. SECRET_IDENTIFIER indicates the value field contains a vault secret ocid identifier. ADB_IDENTIFIER indicates the value field contains an Autonomous database ocid identifier. ALLOWED_VALUE indicates the value should be selected from the options in the allowedValues field.
     * 
     */
    private String valueCategory;

    private NamedCredentialProperty() {}
    /**
     * @return (Updatable) Name of the property
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return (Updatable) Value of the property
     * 
     */
    public String value() {
        return this.value;
    }
    /**
     * @return (Updatable) The category of the Named credential property value. CLEAR_TEXT indicates the value field contains a clear text value. SECRET_IDENTIFIER indicates the value field contains a vault secret ocid identifier. ADB_IDENTIFIER indicates the value field contains an Autonomous database ocid identifier. ALLOWED_VALUE indicates the value should be selected from the options in the allowedValues field.
     * 
     */
    public String valueCategory() {
        return this.valueCategory;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NamedCredentialProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String value;
        private String valueCategory;
        public Builder() {}
        public Builder(NamedCredentialProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.value = defaults.value;
    	      this.valueCategory = defaults.valueCategory;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("NamedCredentialProperty", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("NamedCredentialProperty", "value");
            }
            this.value = value;
            return this;
        }
        @CustomType.Setter
        public Builder valueCategory(String valueCategory) {
            if (valueCategory == null) {
              throw new MissingRequiredPropertyException("NamedCredentialProperty", "valueCategory");
            }
            this.valueCategory = valueCategory;
            return this;
        }
        public NamedCredentialProperty build() {
            final var _resultValue = new NamedCredentialProperty();
            _resultValue.name = name;
            _resultValue.value = value;
            _resultValue.valueCategory = valueCategory;
            return _resultValue;
        }
    }
}
