// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementDashboard.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementDashboardsImportState extends com.pulumi.resources.ResourceArgs {

    public static final ManagementDashboardsImportState Empty = new ManagementDashboardsImportState();

    @Import(name="importDetails")
    private @Nullable Output<String> importDetails;

    public Optional<Output<String>> importDetails() {
        return Optional.ofNullable(this.importDetails);
    }

    @Import(name="importDetailsFile")
    private @Nullable Output<String> importDetailsFile;

    public Optional<Output<String>> importDetailsFile() {
        return Optional.ofNullable(this.importDetailsFile);
    }

    /**
     * If this attribute is set, the dashboard resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
     * 
     */
    @Import(name="overrideDashboardCompartmentOcid")
    private @Nullable Output<String> overrideDashboardCompartmentOcid;

    /**
     * @return If this attribute is set, the dashboard resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
     * 
     */
    public Optional<Output<String>> overrideDashboardCompartmentOcid() {
        return Optional.ofNullable(this.overrideDashboardCompartmentOcid);
    }

    /**
     * By default, if a resource with the same OCID exists in the target compartment, it is updated during the import process, otherwise, a new resource is created. However, if this attribute is set to true, then during the import process if a resource with the same displayName exists in the compartment, then it is updated even if the OCIDs are different. This is useful when importing the same resource multiple times. If the compartment and displayName remain the same, the resource is only updated and multiple copies of a resource are not created.
     * 
     */
    @Import(name="overrideSameName")
    private @Nullable Output<String> overrideSameName;

    /**
     * @return By default, if a resource with the same OCID exists in the target compartment, it is updated during the import process, otherwise, a new resource is created. However, if this attribute is set to true, then during the import process if a resource with the same displayName exists in the compartment, then it is updated even if the OCIDs are different. This is useful when importing the same resource multiple times. If the compartment and displayName remain the same, the resource is only updated and multiple copies of a resource are not created.
     * 
     */
    public Optional<Output<String>> overrideSameName() {
        return Optional.ofNullable(this.overrideSameName);
    }

    /**
     * If this attribute is set, the saved search resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="overrideSavedSearchCompartmentOcid")
    private @Nullable Output<String> overrideSavedSearchCompartmentOcid;

    /**
     * @return If this attribute is set, the saved search resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> overrideSavedSearchCompartmentOcid() {
        return Optional.ofNullable(this.overrideSavedSearchCompartmentOcid);
    }

    private ManagementDashboardsImportState() {}

    private ManagementDashboardsImportState(ManagementDashboardsImportState $) {
        this.importDetails = $.importDetails;
        this.importDetailsFile = $.importDetailsFile;
        this.overrideDashboardCompartmentOcid = $.overrideDashboardCompartmentOcid;
        this.overrideSameName = $.overrideSameName;
        this.overrideSavedSearchCompartmentOcid = $.overrideSavedSearchCompartmentOcid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementDashboardsImportState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementDashboardsImportState $;

        public Builder() {
            $ = new ManagementDashboardsImportState();
        }

        public Builder(ManagementDashboardsImportState defaults) {
            $ = new ManagementDashboardsImportState(Objects.requireNonNull(defaults));
        }

        public Builder importDetails(@Nullable Output<String> importDetails) {
            $.importDetails = importDetails;
            return this;
        }

        public Builder importDetails(String importDetails) {
            return importDetails(Output.of(importDetails));
        }

        public Builder importDetailsFile(@Nullable Output<String> importDetailsFile) {
            $.importDetailsFile = importDetailsFile;
            return this;
        }

        public Builder importDetailsFile(String importDetailsFile) {
            return importDetailsFile(Output.of(importDetailsFile));
        }

        /**
         * @param overrideDashboardCompartmentOcid If this attribute is set, the dashboard resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
         * 
         * @return builder
         * 
         */
        public Builder overrideDashboardCompartmentOcid(@Nullable Output<String> overrideDashboardCompartmentOcid) {
            $.overrideDashboardCompartmentOcid = overrideDashboardCompartmentOcid;
            return this;
        }

        /**
         * @param overrideDashboardCompartmentOcid If this attribute is set, the dashboard resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
         * 
         * @return builder
         * 
         */
        public Builder overrideDashboardCompartmentOcid(String overrideDashboardCompartmentOcid) {
            return overrideDashboardCompartmentOcid(Output.of(overrideDashboardCompartmentOcid));
        }

        /**
         * @param overrideSameName By default, if a resource with the same OCID exists in the target compartment, it is updated during the import process, otherwise, a new resource is created. However, if this attribute is set to true, then during the import process if a resource with the same displayName exists in the compartment, then it is updated even if the OCIDs are different. This is useful when importing the same resource multiple times. If the compartment and displayName remain the same, the resource is only updated and multiple copies of a resource are not created.
         * 
         * @return builder
         * 
         */
        public Builder overrideSameName(@Nullable Output<String> overrideSameName) {
            $.overrideSameName = overrideSameName;
            return this;
        }

        /**
         * @param overrideSameName By default, if a resource with the same OCID exists in the target compartment, it is updated during the import process, otherwise, a new resource is created. However, if this attribute is set to true, then during the import process if a resource with the same displayName exists in the compartment, then it is updated even if the OCIDs are different. This is useful when importing the same resource multiple times. If the compartment and displayName remain the same, the resource is only updated and multiple copies of a resource are not created.
         * 
         * @return builder
         * 
         */
        public Builder overrideSameName(String overrideSameName) {
            return overrideSameName(Output.of(overrideSameName));
        }

        /**
         * @param overrideSavedSearchCompartmentOcid If this attribute is set, the saved search resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder overrideSavedSearchCompartmentOcid(@Nullable Output<String> overrideSavedSearchCompartmentOcid) {
            $.overrideSavedSearchCompartmentOcid = overrideSavedSearchCompartmentOcid;
            return this;
        }

        /**
         * @param overrideSavedSearchCompartmentOcid If this attribute is set, the saved search resources are created or updated in the compartment specified by OCID. If this attribute is not set, the compartment specified in the JSON metadata is used.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder overrideSavedSearchCompartmentOcid(String overrideSavedSearchCompartmentOcid) {
            return overrideSavedSearchCompartmentOcid(Output.of(overrideSavedSearchCompartmentOcid));
        }

        public ManagementDashboardsImportState build() {
            return $;
        }
    }

}
