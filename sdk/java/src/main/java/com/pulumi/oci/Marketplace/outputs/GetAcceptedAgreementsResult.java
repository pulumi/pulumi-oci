// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Marketplace.outputs.GetAcceptedAgreementsAcceptedAgreement;
import com.pulumi.oci.Marketplace.outputs.GetAcceptedAgreementsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAcceptedAgreementsResult {
    private @Nullable String acceptedAgreementId;
    /**
     * @return The list of accepted_agreements.
     * 
     */
    private @Nullable List<GetAcceptedAgreementsAcceptedAgreement> acceptedAgreements;
    /**
     * @return The unique identifier for the compartment where the agreement was accepted.
     * 
     */
    private String compartmentId;
    /**
     * @return A display name for the accepted agreement.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetAcceptedAgreementsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The unique identifier for the listing associated with the agreement.
     * 
     */
    private @Nullable String listingId;
    /**
     * @return The package version associated with the agreement.
     * 
     */
    private @Nullable String packageVersion;

    private GetAcceptedAgreementsResult() {}
    public Optional<String> acceptedAgreementId() {
        return Optional.ofNullable(this.acceptedAgreementId);
    }
    /**
     * @return The list of accepted_agreements.
     * 
     */
    public List<GetAcceptedAgreementsAcceptedAgreement> acceptedAgreements() {
        return this.acceptedAgreements == null ? List.of() : this.acceptedAgreements;
    }
    /**
     * @return The unique identifier for the compartment where the agreement was accepted.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A display name for the accepted agreement.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetAcceptedAgreementsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The unique identifier for the listing associated with the agreement.
     * 
     */
    public Optional<String> listingId() {
        return Optional.ofNullable(this.listingId);
    }
    /**
     * @return The package version associated with the agreement.
     * 
     */
    public Optional<String> packageVersion() {
        return Optional.ofNullable(this.packageVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAcceptedAgreementsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String acceptedAgreementId;
        private @Nullable List<GetAcceptedAgreementsAcceptedAgreement> acceptedAgreements;
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetAcceptedAgreementsFilter> filters;
        private @Nullable String id;
        private @Nullable String listingId;
        private @Nullable String packageVersion;
        public Builder() {}
        public Builder(GetAcceptedAgreementsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceptedAgreementId = defaults.acceptedAgreementId;
    	      this.acceptedAgreements = defaults.acceptedAgreements;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.listingId = defaults.listingId;
    	      this.packageVersion = defaults.packageVersion;
        }

        @CustomType.Setter
        public Builder acceptedAgreementId(@Nullable String acceptedAgreementId) {
            this.acceptedAgreementId = acceptedAgreementId;
            return this;
        }
        @CustomType.Setter
        public Builder acceptedAgreements(@Nullable List<GetAcceptedAgreementsAcceptedAgreement> acceptedAgreements) {
            this.acceptedAgreements = acceptedAgreements;
            return this;
        }
        public Builder acceptedAgreements(GetAcceptedAgreementsAcceptedAgreement... acceptedAgreements) {
            return acceptedAgreements(List.of(acceptedAgreements));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetAcceptedAgreementsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAcceptedAgreementsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder listingId(@Nullable String listingId) {
            this.listingId = listingId;
            return this;
        }
        @CustomType.Setter
        public Builder packageVersion(@Nullable String packageVersion) {
            this.packageVersion = packageVersion;
            return this;
        }
        public GetAcceptedAgreementsResult build() {
            final var o = new GetAcceptedAgreementsResult();
            o.acceptedAgreementId = acceptedAgreementId;
            o.acceptedAgreements = acceptedAgreements;
            o.compartmentId = compartmentId;
            o.displayName = displayName;
            o.filters = filters;
            o.id = id;
            o.listingId = listingId;
            o.packageVersion = packageVersion;
            return o;
        }
    }
}
