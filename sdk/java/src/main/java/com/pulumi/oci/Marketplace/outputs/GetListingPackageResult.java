// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Marketplace.outputs.GetListingPackageOperatingSystem;
import com.pulumi.oci.Marketplace.outputs.GetListingPackagePricing;
import com.pulumi.oci.Marketplace.outputs.GetListingPackageRegion;
import com.pulumi.oci.Marketplace.outputs.GetListingPackageVariable;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetListingPackageResult {
    /**
     * @return The ID of the listing resource associated with this listing package. For more information, see [AppCatalogListing](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/AppCatalogListing/) in the Core Services API.
     * 
     */
    private String appCatalogListingId;
    /**
     * @return The resource version of the listing resource associated with this listing package.
     * 
     */
    private String appCatalogListingResourceVersion;
    private @Nullable String compartmentId;
    /**
     * @return A description of the variable.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The ID of the image corresponding to the package.
     * 
     */
    private String imageId;
    /**
     * @return The ID of the listing that the specified package belongs to.
     * 
     */
    private String listingId;
    /**
     * @return The operating system used by the listing.
     * 
     */
    private List<GetListingPackageOperatingSystem> operatingSystems;
    /**
     * @return The specified package&#39;s type.
     * 
     */
    private String packageType;
    private String packageVersion;
    /**
     * @return The model for pricing.
     * 
     */
    private List<GetListingPackagePricing> pricings;
    /**
     * @return The regions where you can deploy the listing package. (Some packages have restrictions that limit their deployment to United States regions only.)
     * 
     */
    private List<GetListingPackageRegion> regions;
    /**
     * @return The unique identifier for the package resource.
     * 
     */
    private String resourceId;
    /**
     * @return Link to the orchestration resource.
     * 
     */
    private String resourceLink;
    /**
     * @return The date and time this listing package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return List of variables for the orchestration resource.
     * 
     */
    private List<GetListingPackageVariable> variables;
    /**
     * @return The package version.
     * 
     */
    private String version;

    private GetListingPackageResult() {}
    /**
     * @return The ID of the listing resource associated with this listing package. For more information, see [AppCatalogListing](https://docs.cloud.oracle.com/en-us/iaas/api/#/en/iaas/latest/AppCatalogListing/) in the Core Services API.
     * 
     */
    public String appCatalogListingId() {
        return this.appCatalogListingId;
    }
    /**
     * @return The resource version of the listing resource associated with this listing package.
     * 
     */
    public String appCatalogListingResourceVersion() {
        return this.appCatalogListingResourceVersion;
    }
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return A description of the variable.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the image corresponding to the package.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return The ID of the listing that the specified package belongs to.
     * 
     */
    public String listingId() {
        return this.listingId;
    }
    /**
     * @return The operating system used by the listing.
     * 
     */
    public List<GetListingPackageOperatingSystem> operatingSystems() {
        return this.operatingSystems;
    }
    /**
     * @return The specified package&#39;s type.
     * 
     */
    public String packageType() {
        return this.packageType;
    }
    public String packageVersion() {
        return this.packageVersion;
    }
    /**
     * @return The model for pricing.
     * 
     */
    public List<GetListingPackagePricing> pricings() {
        return this.pricings;
    }
    /**
     * @return The regions where you can deploy the listing package. (Some packages have restrictions that limit their deployment to United States regions only.)
     * 
     */
    public List<GetListingPackageRegion> regions() {
        return this.regions;
    }
    /**
     * @return The unique identifier for the package resource.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return Link to the orchestration resource.
     * 
     */
    public String resourceLink() {
        return this.resourceLink;
    }
    /**
     * @return The date and time this listing package was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return List of variables for the orchestration resource.
     * 
     */
    public List<GetListingPackageVariable> variables() {
        return this.variables;
    }
    /**
     * @return The package version.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListingPackageResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appCatalogListingId;
        private String appCatalogListingResourceVersion;
        private @Nullable String compartmentId;
        private String description;
        private String id;
        private String imageId;
        private String listingId;
        private List<GetListingPackageOperatingSystem> operatingSystems;
        private String packageType;
        private String packageVersion;
        private List<GetListingPackagePricing> pricings;
        private List<GetListingPackageRegion> regions;
        private String resourceId;
        private String resourceLink;
        private String timeCreated;
        private List<GetListingPackageVariable> variables;
        private String version;
        public Builder() {}
        public Builder(GetListingPackageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appCatalogListingId = defaults.appCatalogListingId;
    	      this.appCatalogListingResourceVersion = defaults.appCatalogListingResourceVersion;
    	      this.compartmentId = defaults.compartmentId;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.imageId = defaults.imageId;
    	      this.listingId = defaults.listingId;
    	      this.operatingSystems = defaults.operatingSystems;
    	      this.packageType = defaults.packageType;
    	      this.packageVersion = defaults.packageVersion;
    	      this.pricings = defaults.pricings;
    	      this.regions = defaults.regions;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceLink = defaults.resourceLink;
    	      this.timeCreated = defaults.timeCreated;
    	      this.variables = defaults.variables;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder appCatalogListingId(String appCatalogListingId) {
            if (appCatalogListingId == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "appCatalogListingId");
            }
            this.appCatalogListingId = appCatalogListingId;
            return this;
        }
        @CustomType.Setter
        public Builder appCatalogListingResourceVersion(String appCatalogListingResourceVersion) {
            if (appCatalogListingResourceVersion == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "appCatalogListingResourceVersion");
            }
            this.appCatalogListingResourceVersion = appCatalogListingResourceVersion;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder listingId(String listingId) {
            if (listingId == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "listingId");
            }
            this.listingId = listingId;
            return this;
        }
        @CustomType.Setter
        public Builder operatingSystems(List<GetListingPackageOperatingSystem> operatingSystems) {
            if (operatingSystems == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "operatingSystems");
            }
            this.operatingSystems = operatingSystems;
            return this;
        }
        public Builder operatingSystems(GetListingPackageOperatingSystem... operatingSystems) {
            return operatingSystems(List.of(operatingSystems));
        }
        @CustomType.Setter
        public Builder packageType(String packageType) {
            if (packageType == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "packageType");
            }
            this.packageType = packageType;
            return this;
        }
        @CustomType.Setter
        public Builder packageVersion(String packageVersion) {
            if (packageVersion == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "packageVersion");
            }
            this.packageVersion = packageVersion;
            return this;
        }
        @CustomType.Setter
        public Builder pricings(List<GetListingPackagePricing> pricings) {
            if (pricings == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "pricings");
            }
            this.pricings = pricings;
            return this;
        }
        public Builder pricings(GetListingPackagePricing... pricings) {
            return pricings(List.of(pricings));
        }
        @CustomType.Setter
        public Builder regions(List<GetListingPackageRegion> regions) {
            if (regions == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "regions");
            }
            this.regions = regions;
            return this;
        }
        public Builder regions(GetListingPackageRegion... regions) {
            return regions(List.of(regions));
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            if (resourceId == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "resourceId");
            }
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceLink(String resourceLink) {
            if (resourceLink == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "resourceLink");
            }
            this.resourceLink = resourceLink;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder variables(List<GetListingPackageVariable> variables) {
            if (variables == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "variables");
            }
            this.variables = variables;
            return this;
        }
        public Builder variables(GetListingPackageVariable... variables) {
            return variables(List.of(variables));
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetListingPackageResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetListingPackageResult build() {
            final var _resultValue = new GetListingPackageResult();
            _resultValue.appCatalogListingId = appCatalogListingId;
            _resultValue.appCatalogListingResourceVersion = appCatalogListingResourceVersion;
            _resultValue.compartmentId = compartmentId;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.imageId = imageId;
            _resultValue.listingId = listingId;
            _resultValue.operatingSystems = operatingSystems;
            _resultValue.packageType = packageType;
            _resultValue.packageVersion = packageVersion;
            _resultValue.pricings = pricings;
            _resultValue.regions = regions;
            _resultValue.resourceId = resourceId;
            _resultValue.resourceLink = resourceLink;
            _resultValue.timeCreated = timeCreated;
            _resultValue.variables = variables;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
