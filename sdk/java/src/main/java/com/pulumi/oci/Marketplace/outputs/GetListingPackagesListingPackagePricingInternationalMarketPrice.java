// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetListingPackagesListingPackagePricingInternationalMarketPrice {
    /**
     * @return The currency of the pricing model.
     * 
     */
    private String currencyCode;
    /**
     * @return The symbol of the currency
     * 
     */
    private String currencySymbol;
    /**
     * @return The pricing rate.
     * 
     */
    private Double rate;

    private GetListingPackagesListingPackagePricingInternationalMarketPrice() {}
    /**
     * @return The currency of the pricing model.
     * 
     */
    public String currencyCode() {
        return this.currencyCode;
    }
    /**
     * @return The symbol of the currency
     * 
     */
    public String currencySymbol() {
        return this.currencySymbol;
    }
    /**
     * @return The pricing rate.
     * 
     */
    public Double rate() {
        return this.rate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListingPackagesListingPackagePricingInternationalMarketPrice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String currencyCode;
        private String currencySymbol;
        private Double rate;
        public Builder() {}
        public Builder(GetListingPackagesListingPackagePricingInternationalMarketPrice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currencyCode = defaults.currencyCode;
    	      this.currencySymbol = defaults.currencySymbol;
    	      this.rate = defaults.rate;
        }

        @CustomType.Setter
        public Builder currencyCode(String currencyCode) {
            if (currencyCode == null) {
              throw new MissingRequiredPropertyException("GetListingPackagesListingPackagePricingInternationalMarketPrice", "currencyCode");
            }
            this.currencyCode = currencyCode;
            return this;
        }
        @CustomType.Setter
        public Builder currencySymbol(String currencySymbol) {
            if (currencySymbol == null) {
              throw new MissingRequiredPropertyException("GetListingPackagesListingPackagePricingInternationalMarketPrice", "currencySymbol");
            }
            this.currencySymbol = currencySymbol;
            return this;
        }
        @CustomType.Setter
        public Builder rate(Double rate) {
            if (rate == null) {
              throw new MissingRequiredPropertyException("GetListingPackagesListingPackagePricingInternationalMarketPrice", "rate");
            }
            this.rate = rate;
            return this;
        }
        public GetListingPackagesListingPackagePricingInternationalMarketPrice build() {
            final var _resultValue = new GetListingPackagesListingPackagePricingInternationalMarketPrice();
            _resultValue.currencyCode = currencyCode;
            _resultValue.currencySymbol = currencySymbol;
            _resultValue.rate = rate;
            return _resultValue;
        }
    }
}
