// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetListingPackagesListingPackagePricingInternationalMarketPrice {
    /**
     * @return The currency of the pricing model.
     * 
     */
    private @Nullable String currencyCode;
    /**
     * @return The symbol of the currency
     * 
     */
    private @Nullable String currencySymbol;
    /**
     * @return The pricing rate.
     * 
     */
    private @Nullable Double rate;

    private GetListingPackagesListingPackagePricingInternationalMarketPrice() {}
    /**
     * @return The currency of the pricing model.
     * 
     */
    public Optional<String> currencyCode() {
        return Optional.ofNullable(this.currencyCode);
    }
    /**
     * @return The symbol of the currency
     * 
     */
    public Optional<String> currencySymbol() {
        return Optional.ofNullable(this.currencySymbol);
    }
    /**
     * @return The pricing rate.
     * 
     */
    public Optional<Double> rate() {
        return Optional.ofNullable(this.rate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListingPackagesListingPackagePricingInternationalMarketPrice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String currencyCode;
        private @Nullable String currencySymbol;
        private @Nullable Double rate;
        public Builder() {}
        public Builder(GetListingPackagesListingPackagePricingInternationalMarketPrice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currencyCode = defaults.currencyCode;
    	      this.currencySymbol = defaults.currencySymbol;
    	      this.rate = defaults.rate;
        }

        @CustomType.Setter
        public Builder currencyCode(@Nullable String currencyCode) {
            this.currencyCode = currencyCode;
            return this;
        }
        @CustomType.Setter
        public Builder currencySymbol(@Nullable String currencySymbol) {
            this.currencySymbol = currencySymbol;
            return this;
        }
        @CustomType.Setter
        public Builder rate(@Nullable Double rate) {
            this.rate = rate;
            return this;
        }
        public GetListingPackagesListingPackagePricingInternationalMarketPrice build() {
            final var o = new GetListingPackagesListingPackagePricingInternationalMarketPrice();
            o.currencyCode = currencyCode;
            o.currencySymbol = currencySymbol;
            o.rate = rate;
            return o;
        }
    }
}
