// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Marketplace.outputs.GetListingTaxesFilter;
import com.pulumi.oci.Marketplace.outputs.GetListingTaxesTax;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetListingTaxesResult {
    private @Nullable String compartmentId;
    private @Nullable List<GetListingTaxesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String listingId;
    /**
     * @return The list of taxes.
     * 
     */
    private List<GetListingTaxesTax> taxes;

    private GetListingTaxesResult() {}
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public List<GetListingTaxesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String listingId() {
        return this.listingId;
    }
    /**
     * @return The list of taxes.
     * 
     */
    public List<GetListingTaxesTax> taxes() {
        return this.taxes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListingTaxesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable List<GetListingTaxesFilter> filters;
        private String id;
        private String listingId;
        private List<GetListingTaxesTax> taxes;
        public Builder() {}
        public Builder(GetListingTaxesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.listingId = defaults.listingId;
    	      this.taxes = defaults.taxes;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetListingTaxesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetListingTaxesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder listingId(String listingId) {
            this.listingId = Objects.requireNonNull(listingId);
            return this;
        }
        @CustomType.Setter
        public Builder taxes(List<GetListingTaxesTax> taxes) {
            this.taxes = Objects.requireNonNull(taxes);
            return this;
        }
        public Builder taxes(GetListingTaxesTax... taxes) {
            return taxes(List.of(taxes));
        }
        public GetListingTaxesResult build() {
            final var _resultValue = new GetListingTaxesResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.listingId = listingId;
            _resultValue.taxes = taxes;
            return _resultValue;
        }
    }
}
