// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Marketplace.outputs.GetPublicationIcon;
import com.pulumi.oci.Marketplace.outputs.GetPublicationPackageDetail;
import com.pulumi.oci.Marketplace.outputs.GetPublicationSupportContact;
import com.pulumi.oci.Marketplace.outputs.GetPublicationSupportedOperatingSystem;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPublicationResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the publication exists.
     * 
     */
    private String compartmentId;
    /**
     * @return The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,String> definedTags;
    /**
     * @return The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,String> freeformTags;
    /**
     * @return The model for upload data for images and icons.
     * 
     */
    private List<GetPublicationIcon> icons;
    /**
     * @return The unique identifier for the publication in Marketplace.
     * 
     */
    private String id;
    private Boolean isAgreementAcknowledged;
    /**
     * @return The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
     * 
     */
    private String listingType;
    /**
     * @return A long description of the publication to use in the listing.
     * 
     */
    private String longDescription;
    /**
     * @return The name of the operating system.
     * 
     */
    private String name;
    private List<GetPublicationPackageDetail> packageDetails;
    /**
     * @return The listing&#39;s package type.
     * 
     */
    private String packageType;
    private String publicationId;
    /**
     * @return A short description of the publication to use in the listing.
     * 
     */
    private String shortDescription;
    /**
     * @return The lifecycle state of the publication.
     * 
     */
    private String state;
    /**
     * @return Contact information for getting support from the publisher for the listing.
     * 
     */
    private List<GetPublicationSupportContact> supportContacts;
    /**
     * @return The list of operating systems supported by the listing.
     * 
     */
    private List<GetPublicationSupportedOperatingSystem> supportedOperatingSystems;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private Map<String,String> systemTags;
    /**
     * @return The date and time the publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;

    private GetPublicationResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the publication exists.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,String> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,String> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The model for upload data for images and icons.
     * 
     */
    public List<GetPublicationIcon> icons() {
        return this.icons;
    }
    /**
     * @return The unique identifier for the publication in Marketplace.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean isAgreementAcknowledged() {
        return this.isAgreementAcknowledged;
    }
    /**
     * @return The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
     * 
     */
    public String listingType() {
        return this.listingType;
    }
    /**
     * @return A long description of the publication to use in the listing.
     * 
     */
    public String longDescription() {
        return this.longDescription;
    }
    /**
     * @return The name of the operating system.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<GetPublicationPackageDetail> packageDetails() {
        return this.packageDetails;
    }
    /**
     * @return The listing&#39;s package type.
     * 
     */
    public String packageType() {
        return this.packageType;
    }
    public String publicationId() {
        return this.publicationId;
    }
    /**
     * @return A short description of the publication to use in the listing.
     * 
     */
    public String shortDescription() {
        return this.shortDescription;
    }
    /**
     * @return The lifecycle state of the publication.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Contact information for getting support from the publisher for the listing.
     * 
     */
    public List<GetPublicationSupportContact> supportContacts() {
        return this.supportContacts;
    }
    /**
     * @return The list of operating systems supported by the listing.
     * 
     */
    public List<GetPublicationSupportedOperatingSystem> supportedOperatingSystems() {
        return this.supportedOperatingSystems;
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,String> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the publication was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublicationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private Map<String,String> definedTags;
        private Map<String,String> freeformTags;
        private List<GetPublicationIcon> icons;
        private String id;
        private Boolean isAgreementAcknowledged;
        private String listingType;
        private String longDescription;
        private String name;
        private List<GetPublicationPackageDetail> packageDetails;
        private String packageType;
        private String publicationId;
        private String shortDescription;
        private String state;
        private List<GetPublicationSupportContact> supportContacts;
        private List<GetPublicationSupportedOperatingSystem> supportedOperatingSystems;
        private Map<String,String> systemTags;
        private String timeCreated;
        public Builder() {}
        public Builder(GetPublicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.icons = defaults.icons;
    	      this.id = defaults.id;
    	      this.isAgreementAcknowledged = defaults.isAgreementAcknowledged;
    	      this.listingType = defaults.listingType;
    	      this.longDescription = defaults.longDescription;
    	      this.name = defaults.name;
    	      this.packageDetails = defaults.packageDetails;
    	      this.packageType = defaults.packageType;
    	      this.publicationId = defaults.publicationId;
    	      this.shortDescription = defaults.shortDescription;
    	      this.state = defaults.state;
    	      this.supportContacts = defaults.supportContacts;
    	      this.supportedOperatingSystems = defaults.supportedOperatingSystems;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,String> definedTags) {
            if (definedTags == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "definedTags");
            }
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,String> freeformTags) {
            if (freeformTags == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "freeformTags");
            }
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder icons(List<GetPublicationIcon> icons) {
            if (icons == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "icons");
            }
            this.icons = icons;
            return this;
        }
        public Builder icons(GetPublicationIcon... icons) {
            return icons(List.of(icons));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAgreementAcknowledged(Boolean isAgreementAcknowledged) {
            if (isAgreementAcknowledged == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "isAgreementAcknowledged");
            }
            this.isAgreementAcknowledged = isAgreementAcknowledged;
            return this;
        }
        @CustomType.Setter
        public Builder listingType(String listingType) {
            if (listingType == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "listingType");
            }
            this.listingType = listingType;
            return this;
        }
        @CustomType.Setter
        public Builder longDescription(String longDescription) {
            if (longDescription == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "longDescription");
            }
            this.longDescription = longDescription;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder packageDetails(List<GetPublicationPackageDetail> packageDetails) {
            if (packageDetails == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "packageDetails");
            }
            this.packageDetails = packageDetails;
            return this;
        }
        public Builder packageDetails(GetPublicationPackageDetail... packageDetails) {
            return packageDetails(List.of(packageDetails));
        }
        @CustomType.Setter
        public Builder packageType(String packageType) {
            if (packageType == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "packageType");
            }
            this.packageType = packageType;
            return this;
        }
        @CustomType.Setter
        public Builder publicationId(String publicationId) {
            if (publicationId == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "publicationId");
            }
            this.publicationId = publicationId;
            return this;
        }
        @CustomType.Setter
        public Builder shortDescription(String shortDescription) {
            if (shortDescription == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "shortDescription");
            }
            this.shortDescription = shortDescription;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder supportContacts(List<GetPublicationSupportContact> supportContacts) {
            if (supportContacts == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "supportContacts");
            }
            this.supportContacts = supportContacts;
            return this;
        }
        public Builder supportContacts(GetPublicationSupportContact... supportContacts) {
            return supportContacts(List.of(supportContacts));
        }
        @CustomType.Setter
        public Builder supportedOperatingSystems(List<GetPublicationSupportedOperatingSystem> supportedOperatingSystems) {
            if (supportedOperatingSystems == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "supportedOperatingSystems");
            }
            this.supportedOperatingSystems = supportedOperatingSystems;
            return this;
        }
        public Builder supportedOperatingSystems(GetPublicationSupportedOperatingSystem... supportedOperatingSystems) {
            return supportedOperatingSystems(List.of(supportedOperatingSystems));
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,String> systemTags) {
            if (systemTags == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "systemTags");
            }
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetPublicationResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        public GetPublicationResult build() {
            final var _resultValue = new GetPublicationResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.definedTags = definedTags;
            _resultValue.freeformTags = freeformTags;
            _resultValue.icons = icons;
            _resultValue.id = id;
            _resultValue.isAgreementAcknowledged = isAgreementAcknowledged;
            _resultValue.listingType = listingType;
            _resultValue.longDescription = longDescription;
            _resultValue.name = name;
            _resultValue.packageDetails = packageDetails;
            _resultValue.packageType = packageType;
            _resultValue.publicationId = publicationId;
            _resultValue.shortDescription = shortDescription;
            _resultValue.state = state;
            _resultValue.supportContacts = supportContacts;
            _resultValue.supportedOperatingSystems = supportedOperatingSystems;
            _resultValue.systemTags = systemTags;
            _resultValue.timeCreated = timeCreated;
            return _resultValue;
        }
    }
}
