// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Marketplace.outputs.GetPublicationsPublicationPackageDetailEula;
import com.pulumi.oci.Marketplace.outputs.GetPublicationsPublicationPackageDetailOperatingSystem;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetPublicationsPublicationPackageDetail {
    private List<GetPublicationsPublicationPackageDetailEula> eulas;
    private String imageId;
    private List<GetPublicationsPublicationPackageDetailOperatingSystem> operatingSystems;
    /**
     * @return The listing&#39;s package type.
     * 
     */
    private String packageType;
    private String packageVersion;

    private GetPublicationsPublicationPackageDetail() {}
    public List<GetPublicationsPublicationPackageDetailEula> eulas() {
        return this.eulas;
    }
    public String imageId() {
        return this.imageId;
    }
    public List<GetPublicationsPublicationPackageDetailOperatingSystem> operatingSystems() {
        return this.operatingSystems;
    }
    /**
     * @return The listing&#39;s package type.
     * 
     */
    public String packageType() {
        return this.packageType;
    }
    public String packageVersion() {
        return this.packageVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublicationsPublicationPackageDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetPublicationsPublicationPackageDetailEula> eulas;
        private String imageId;
        private List<GetPublicationsPublicationPackageDetailOperatingSystem> operatingSystems;
        private String packageType;
        private String packageVersion;
        public Builder() {}
        public Builder(GetPublicationsPublicationPackageDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eulas = defaults.eulas;
    	      this.imageId = defaults.imageId;
    	      this.operatingSystems = defaults.operatingSystems;
    	      this.packageType = defaults.packageType;
    	      this.packageVersion = defaults.packageVersion;
        }

        @CustomType.Setter
        public Builder eulas(List<GetPublicationsPublicationPackageDetailEula> eulas) {
            if (eulas == null) {
              throw new MissingRequiredPropertyException("GetPublicationsPublicationPackageDetail", "eulas");
            }
            this.eulas = eulas;
            return this;
        }
        public Builder eulas(GetPublicationsPublicationPackageDetailEula... eulas) {
            return eulas(List.of(eulas));
        }
        @CustomType.Setter
        public Builder imageId(String imageId) {
            if (imageId == null) {
              throw new MissingRequiredPropertyException("GetPublicationsPublicationPackageDetail", "imageId");
            }
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder operatingSystems(List<GetPublicationsPublicationPackageDetailOperatingSystem> operatingSystems) {
            if (operatingSystems == null) {
              throw new MissingRequiredPropertyException("GetPublicationsPublicationPackageDetail", "operatingSystems");
            }
            this.operatingSystems = operatingSystems;
            return this;
        }
        public Builder operatingSystems(GetPublicationsPublicationPackageDetailOperatingSystem... operatingSystems) {
            return operatingSystems(List.of(operatingSystems));
        }
        @CustomType.Setter
        public Builder packageType(String packageType) {
            if (packageType == null) {
              throw new MissingRequiredPropertyException("GetPublicationsPublicationPackageDetail", "packageType");
            }
            this.packageType = packageType;
            return this;
        }
        @CustomType.Setter
        public Builder packageVersion(String packageVersion) {
            if (packageVersion == null) {
              throw new MissingRequiredPropertyException("GetPublicationsPublicationPackageDetail", "packageVersion");
            }
            this.packageVersion = packageVersion;
            return this;
        }
        public GetPublicationsPublicationPackageDetail build() {
            final var _resultValue = new GetPublicationsPublicationPackageDetail();
            _resultValue.eulas = eulas;
            _resultValue.imageId = imageId;
            _resultValue.operatingSystems = operatingSystems;
            _resultValue.packageType = packageType;
            _resultValue.packageVersion = packageVersion;
            return _resultValue;
        }
    }
}
