// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Marketplace.outputs.GetPublicationsFilter;
import com.pulumi.oci.Marketplace.outputs.GetPublicationsPublication;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPublicationsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the publication exists.
     * 
     */
    private String compartmentId;
    private @Nullable List<GetPublicationsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
     * 
     */
    private String listingType;
    /**
     * @return The name of the operating system.
     * 
     */
    private @Nullable List<String> names;
    private @Nullable List<String> operatingSystems;
    private @Nullable String publicationId;
    /**
     * @return The list of publications.
     * 
     */
    private @Nullable List<GetPublicationsPublication> publications;

    private GetPublicationsResult() {}
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where the publication exists.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetPublicationsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
     * 
     */
    public String listingType() {
        return this.listingType;
    }
    /**
     * @return The name of the operating system.
     * 
     */
    public List<String> names() {
        return this.names == null ? List.of() : this.names;
    }
    public List<String> operatingSystems() {
        return this.operatingSystems == null ? List.of() : this.operatingSystems;
    }
    public Optional<String> publicationId() {
        return Optional.ofNullable(this.publicationId);
    }
    /**
     * @return The list of publications.
     * 
     */
    public List<GetPublicationsPublication> publications() {
        return this.publications == null ? List.of() : this.publications;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublicationsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetPublicationsFilter> filters;
        private @Nullable String id;
        private String listingType;
        private @Nullable List<String> names;
        private @Nullable List<String> operatingSystems;
        private @Nullable String publicationId;
        private @Nullable List<GetPublicationsPublication> publications;
        public Builder() {}
        public Builder(GetPublicationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.listingType = defaults.listingType;
    	      this.names = defaults.names;
    	      this.operatingSystems = defaults.operatingSystems;
    	      this.publicationId = defaults.publicationId;
    	      this.publications = defaults.publications;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetPublicationsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetPublicationsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder listingType(String listingType) {
            this.listingType = Objects.requireNonNull(listingType);
            return this;
        }
        @CustomType.Setter
        public Builder names(@Nullable List<String> names) {
            this.names = names;
            return this;
        }
        public Builder names(String... names) {
            return names(List.of(names));
        }
        @CustomType.Setter
        public Builder operatingSystems(@Nullable List<String> operatingSystems) {
            this.operatingSystems = operatingSystems;
            return this;
        }
        public Builder operatingSystems(String... operatingSystems) {
            return operatingSystems(List.of(operatingSystems));
        }
        @CustomType.Setter
        public Builder publicationId(@Nullable String publicationId) {
            this.publicationId = publicationId;
            return this;
        }
        @CustomType.Setter
        public Builder publications(@Nullable List<GetPublicationsPublication> publications) {
            this.publications = publications;
            return this;
        }
        public Builder publications(GetPublicationsPublication... publications) {
            return publications(List.of(publications));
        }
        public GetPublicationsResult build() {
            final var o = new GetPublicationsResult();
            o.compartmentId = compartmentId;
            o.filters = filters;
            o.id = id;
            o.listingType = listingType;
            o.names = names;
            o.operatingSystems = operatingSystems;
            o.publicationId = publicationId;
            o.publications = publications;
            return o;
        }
    }
}
