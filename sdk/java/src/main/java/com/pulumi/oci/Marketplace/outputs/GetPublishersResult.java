// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Marketplace.outputs.GetPublishersFilter;
import com.pulumi.oci.Marketplace.outputs.GetPublishersPublisher;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPublishersResult {
    private @Nullable String compartmentId;
    private @Nullable List<GetPublishersFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String publisherId;
    /**
     * @return The list of publishers.
     * 
     */
    private List<GetPublishersPublisher> publishers;

    private GetPublishersResult() {}
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public List<GetPublishersFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> publisherId() {
        return Optional.ofNullable(this.publisherId);
    }
    /**
     * @return The list of publishers.
     * 
     */
    public List<GetPublishersPublisher> publishers() {
        return this.publishers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublishersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable List<GetPublishersFilter> filters;
        private String id;
        private @Nullable String publisherId;
        private List<GetPublishersPublisher> publishers;
        public Builder() {}
        public Builder(GetPublishersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.publisherId = defaults.publisherId;
    	      this.publishers = defaults.publishers;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {

            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetPublishersFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetPublishersFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPublishersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder publisherId(@Nullable String publisherId) {

            this.publisherId = publisherId;
            return this;
        }
        @CustomType.Setter
        public Builder publishers(List<GetPublishersPublisher> publishers) {
            if (publishers == null) {
              throw new MissingRequiredPropertyException("GetPublishersResult", "publishers");
            }
            this.publishers = publishers;
            return this;
        }
        public Builder publishers(GetPublishersPublisher... publishers) {
            return publishers(List.of(publishers));
        }
        public GetPublishersResult build() {
            final var _resultValue = new GetPublishersResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.publisherId = publisherId;
            _resultValue.publishers = publishers;
            return _resultValue;
        }
    }
}
