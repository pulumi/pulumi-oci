// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Marketplace.outputs.PublicationPackageDetailsEula;
import com.pulumi.oci.Marketplace.outputs.PublicationPackageDetailsOperatingSystem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PublicationPackageDetails {
    /**
     * @return The end user license agreeement (EULA) that consumers of this listing must accept.
     * 
     */
    private List<PublicationPackageDetailsEula> eulas;
    /**
     * @return The unique identifier for the base image of the publication.
     * 
     */
    private @Nullable String imageId;
    /**
     * @return The operating system used by the listing.
     * 
     */
    private PublicationPackageDetailsOperatingSystem operatingSystem;
    /**
     * @return The package&#39;s type.
     * 
     */
    private String packageType;
    /**
     * @return The package version.
     * 
     */
    private String packageVersion;

    private PublicationPackageDetails() {}
    /**
     * @return The end user license agreeement (EULA) that consumers of this listing must accept.
     * 
     */
    public List<PublicationPackageDetailsEula> eulas() {
        return this.eulas;
    }
    /**
     * @return The unique identifier for the base image of the publication.
     * 
     */
    public Optional<String> imageId() {
        return Optional.ofNullable(this.imageId);
    }
    /**
     * @return The operating system used by the listing.
     * 
     */
    public PublicationPackageDetailsOperatingSystem operatingSystem() {
        return this.operatingSystem;
    }
    /**
     * @return The package&#39;s type.
     * 
     */
    public String packageType() {
        return this.packageType;
    }
    /**
     * @return The package version.
     * 
     */
    public String packageVersion() {
        return this.packageVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicationPackageDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<PublicationPackageDetailsEula> eulas;
        private @Nullable String imageId;
        private PublicationPackageDetailsOperatingSystem operatingSystem;
        private String packageType;
        private String packageVersion;
        public Builder() {}
        public Builder(PublicationPackageDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eulas = defaults.eulas;
    	      this.imageId = defaults.imageId;
    	      this.operatingSystem = defaults.operatingSystem;
    	      this.packageType = defaults.packageType;
    	      this.packageVersion = defaults.packageVersion;
        }

        @CustomType.Setter
        public Builder eulas(List<PublicationPackageDetailsEula> eulas) {
            this.eulas = Objects.requireNonNull(eulas);
            return this;
        }
        public Builder eulas(PublicationPackageDetailsEula... eulas) {
            return eulas(List.of(eulas));
        }
        @CustomType.Setter
        public Builder imageId(@Nullable String imageId) {
            this.imageId = imageId;
            return this;
        }
        @CustomType.Setter
        public Builder operatingSystem(PublicationPackageDetailsOperatingSystem operatingSystem) {
            this.operatingSystem = Objects.requireNonNull(operatingSystem);
            return this;
        }
        @CustomType.Setter
        public Builder packageType(String packageType) {
            this.packageType = Objects.requireNonNull(packageType);
            return this;
        }
        @CustomType.Setter
        public Builder packageVersion(String packageVersion) {
            this.packageVersion = Objects.requireNonNull(packageVersion);
            return this;
        }
        public PublicationPackageDetails build() {
            final var o = new PublicationPackageDetails();
            o.eulas = eulas;
            o.imageId = imageId;
            o.operatingSystem = operatingSystem;
            o.packageType = packageType;
            o.packageVersion = packageVersion;
            return o;
        }
    }
}
