// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.MediaServices.MediaAssetArgs;
import com.pulumi.oci.MediaServices.inputs.MediaAssetState;
import com.pulumi.oci.MediaServices.outputs.MediaAssetMediaAssetTag;
import com.pulumi.oci.MediaServices.outputs.MediaAssetMetadata;
import com.pulumi.oci.Utilities;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Media Asset resource in Oracle Cloud Infrastructure Media Services service.
 * 
 * Creates a new MediaAsset.
 * 
 * ## Import
 * 
 * MediaAssets can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:MediaServices/mediaAsset:MediaAsset test_media_asset &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:MediaServices/mediaAsset:MediaAsset")
public class MediaAsset extends com.pulumi.resources.CustomResource {
    /**
     * The name of the object storage bucket where this asset is located.
     * 
     */
    @Export(name="bucket", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bucket;

    /**
     * @return The name of the object storage bucket where this asset is located.
     * 
     */
    public Output<Optional<String>> bucket() {
        return Codegen.optional(this.bucket);
    }
    /**
     * (Updatable) Compartment Identifier.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> definedTags() {
        return Codegen.optional(this.definedTags);
    }
    /**
     * (Updatable) Display name for the Media Asset. Does not have to be unique. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return (Updatable) Display name for the Media Asset. Does not have to be unique. Avoid entering confidential information.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> freeformTags() {
        return Codegen.optional(this.freeformTags);
    }
    /**
     * (Updatable) The ID of the senior most asset from which this asset is derived.
     * 
     */
    @Export(name="masterMediaAssetId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> masterMediaAssetId;

    /**
     * @return (Updatable) The ID of the senior most asset from which this asset is derived.
     * 
     */
    public Output<Optional<String>> masterMediaAssetId() {
        return Codegen.optional(this.masterMediaAssetId);
    }
    /**
     * (Updatable) list of tags for the MediaAsset.
     * 
     */
    @Export(name="mediaAssetTags", refs={List.class,MediaAssetMediaAssetTag.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MediaAssetMediaAssetTag>> mediaAssetTags;

    /**
     * @return (Updatable) list of tags for the MediaAsset.
     * 
     */
    public Output<Optional<List<MediaAssetMediaAssetTag>>> mediaAssetTags() {
        return Codegen.optional(this.mediaAssetTags);
    }
    /**
     * The ID of the MediaWorkflowJob used to produce this asset.
     * 
     */
    @Export(name="mediaWorkflowJobId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mediaWorkflowJobId;

    /**
     * @return The ID of the MediaWorkflowJob used to produce this asset.
     * 
     */
    public Output<Optional<String>> mediaWorkflowJobId() {
        return Codegen.optional(this.mediaWorkflowJobId);
    }
    /**
     * (Updatable) JSON string containing the technial metadata for the media asset.
     * 
     */
    @Export(name="metadatas", refs={List.class,MediaAssetMetadata.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MediaAssetMetadata>> metadatas;

    /**
     * @return (Updatable) JSON string containing the technial metadata for the media asset.
     * 
     */
    public Output<Optional<List<MediaAssetMetadata>>> metadatas() {
        return Codegen.optional(this.metadatas);
    }
    /**
     * The object storage namespace where this asset is located.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> namespace;

    /**
     * @return The object storage namespace where this asset is located.
     * 
     */
    public Output<Optional<String>> namespace() {
        return Codegen.optional(this.namespace);
    }
    /**
     * The object storage object name that identifies this asset.
     * 
     */
    @Export(name="object", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> object;

    /**
     * @return The object storage object name that identifies this asset.
     * 
     */
    public Output<Optional<String>> object() {
        return Codegen.optional(this.object);
    }
    /**
     * eTag of the underlying object storage object.
     * 
     */
    @Export(name="objectEtag", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> objectEtag;

    /**
     * @return eTag of the underlying object storage object.
     * 
     */
    public Output<Optional<String>> objectEtag() {
        return Codegen.optional(this.objectEtag);
    }
    /**
     * (Updatable) The ID of the parent asset from which this asset is derived.
     * 
     */
    @Export(name="parentMediaAssetId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> parentMediaAssetId;

    /**
     * @return (Updatable) The ID of the parent asset from which this asset is derived.
     * 
     */
    public Output<Optional<String>> parentMediaAssetId() {
        return Codegen.optional(this.parentMediaAssetId);
    }
    /**
     * The end index for video segment files.
     * 
     */
    @Export(name="segmentRangeEndIndex", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> segmentRangeEndIndex;

    /**
     * @return The end index for video segment files.
     * 
     */
    public Output<Optional<String>> segmentRangeEndIndex() {
        return Codegen.optional(this.segmentRangeEndIndex);
    }
    /**
     * The start index for video segment files.
     * 
     */
    @Export(name="segmentRangeStartIndex", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> segmentRangeStartIndex;

    /**
     * @return The start index for video segment files.
     * 
     */
    public Output<Optional<String>> segmentRangeStartIndex() {
        return Codegen.optional(this.segmentRangeStartIndex);
    }
    /**
     * The ID of the MediaWorkflow used to produce this asset.
     * 
     */
    @Export(name="sourceMediaWorkflowId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceMediaWorkflowId;

    /**
     * @return The ID of the MediaWorkflow used to produce this asset.
     * 
     */
    public Output<Optional<String>> sourceMediaWorkflowId() {
        return Codegen.optional(this.sourceMediaWorkflowId);
    }
    /**
     * The version of the MediaWorkflow used to produce this asset.
     * 
     */
    @Export(name="sourceMediaWorkflowVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sourceMediaWorkflowVersion;

    /**
     * @return The version of the MediaWorkflow used to produce this asset.
     * 
     */
    public Output<Optional<String>> sourceMediaWorkflowVersion() {
        return Codegen.optional(this.sourceMediaWorkflowVersion);
    }
    /**
     * The current state of the MediaAsset.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return The current state of the MediaAsset.
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> systemTags() {
        return Codegen.optional(this.systemTags);
    }
    /**
     * The time when the MediaAsset was created. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeCreated;

    /**
     * @return The time when the MediaAsset was created. An RFC3339 formatted datetime string.
     * 
     */
    public Output<Optional<String>> timeCreated() {
        return Codegen.optional(this.timeCreated);
    }
    /**
     * The time when the MediaAsset was updated. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeUpdated;

    /**
     * @return The time when the MediaAsset was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Output<Optional<String>> timeUpdated() {
        return Codegen.optional(this.timeUpdated);
    }
    /**
     * (Updatable) The type of the media asset.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return (Updatable) The type of the media asset.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MediaAsset(String name) {
        this(name, MediaAssetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MediaAsset(String name, MediaAssetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MediaAsset(String name, MediaAssetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:MediaServices/mediaAsset:MediaAsset", name, args == null ? MediaAssetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MediaAsset(String name, Output<String> id, @Nullable MediaAssetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:MediaServices/mediaAsset:MediaAsset", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MediaAsset get(String name, Output<String> id, @Nullable MediaAssetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MediaAsset(name, id, state, options);
    }
}
