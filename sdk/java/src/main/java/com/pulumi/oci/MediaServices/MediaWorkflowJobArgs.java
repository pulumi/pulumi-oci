// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.MediaServices.inputs.MediaWorkflowJobLockArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MediaWorkflowJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final MediaWorkflowJobArgs Empty = new MediaWorkflowJobArgs();

    /**
     * (Updatable) ID of the compartment in which the job should be created.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) ID of the compartment in which the job should be created.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    @Import(name="isLockOverride")
    private @Nullable Output<Boolean> isLockOverride;

    public Optional<Output<Boolean>> isLockOverride() {
        return Optional.ofNullable(this.isLockOverride);
    }

    /**
     * Locks associated with this resource.
     * 
     */
    @Import(name="locks")
    private @Nullable Output<List<MediaWorkflowJobLockArgs>> locks;

    /**
     * @return Locks associated with this resource.
     * 
     */
    public Optional<Output<List<MediaWorkflowJobLockArgs>>> locks() {
        return Optional.ofNullable(this.locks);
    }

    /**
     * Configurations to be applied to this run of the workflow.
     * 
     */
    @Import(name="mediaWorkflowConfigurationIds")
    private @Nullable Output<List<String>> mediaWorkflowConfigurationIds;

    /**
     * @return Configurations to be applied to this run of the workflow.
     * 
     */
    public Optional<Output<List<String>>> mediaWorkflowConfigurationIds() {
        return Optional.ofNullable(this.mediaWorkflowConfigurationIds);
    }

    /**
     * OCID of the MediaWorkflow that should be run.
     * 
     */
    @Import(name="mediaWorkflowId")
    private @Nullable Output<String> mediaWorkflowId;

    /**
     * @return OCID of the MediaWorkflow that should be run.
     * 
     */
    public Optional<Output<String>> mediaWorkflowId() {
        return Optional.ofNullable(this.mediaWorkflowId);
    }

    /**
     * Name of the system MediaWorkflow that should be run.
     * 
     */
    @Import(name="mediaWorkflowName")
    private @Nullable Output<String> mediaWorkflowName;

    /**
     * @return Name of the system MediaWorkflow that should be run.
     * 
     */
    public Optional<Output<String>> mediaWorkflowName() {
        return Optional.ofNullable(this.mediaWorkflowName);
    }

    /**
     * Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow&#39;s MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON. The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task&#39;s key and the 2nd level keys refer to a parameter&#39;s name.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<String> parameters;

    /**
     * @return Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow&#39;s MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON. The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task&#39;s key and the 2nd level keys refer to a parameter&#39;s name.
     * 
     */
    public Optional<Output<String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * Discriminate identification of a workflow by name versus a workflow by ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="workflowIdentifierType", required=true)
    private Output<String> workflowIdentifierType;

    /**
     * @return Discriminate identification of a workflow by name versus a workflow by ID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> workflowIdentifierType() {
        return this.workflowIdentifierType;
    }

    private MediaWorkflowJobArgs() {}

    private MediaWorkflowJobArgs(MediaWorkflowJobArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isLockOverride = $.isLockOverride;
        this.locks = $.locks;
        this.mediaWorkflowConfigurationIds = $.mediaWorkflowConfigurationIds;
        this.mediaWorkflowId = $.mediaWorkflowId;
        this.mediaWorkflowName = $.mediaWorkflowName;
        this.parameters = $.parameters;
        this.workflowIdentifierType = $.workflowIdentifierType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MediaWorkflowJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MediaWorkflowJobArgs $;

        public Builder() {
            $ = new MediaWorkflowJobArgs();
        }

        public Builder(MediaWorkflowJobArgs defaults) {
            $ = new MediaWorkflowJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) ID of the compartment in which the job should be created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) ID of the compartment in which the job should be created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        public Builder isLockOverride(@Nullable Output<Boolean> isLockOverride) {
            $.isLockOverride = isLockOverride;
            return this;
        }

        public Builder isLockOverride(Boolean isLockOverride) {
            return isLockOverride(Output.of(isLockOverride));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(@Nullable Output<List<MediaWorkflowJobLockArgs>> locks) {
            $.locks = locks;
            return this;
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(List<MediaWorkflowJobLockArgs> locks) {
            return locks(Output.of(locks));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(MediaWorkflowJobLockArgs... locks) {
            return locks(List.of(locks));
        }

        /**
         * @param mediaWorkflowConfigurationIds Configurations to be applied to this run of the workflow.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowConfigurationIds(@Nullable Output<List<String>> mediaWorkflowConfigurationIds) {
            $.mediaWorkflowConfigurationIds = mediaWorkflowConfigurationIds;
            return this;
        }

        /**
         * @param mediaWorkflowConfigurationIds Configurations to be applied to this run of the workflow.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowConfigurationIds(List<String> mediaWorkflowConfigurationIds) {
            return mediaWorkflowConfigurationIds(Output.of(mediaWorkflowConfigurationIds));
        }

        /**
         * @param mediaWorkflowConfigurationIds Configurations to be applied to this run of the workflow.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowConfigurationIds(String... mediaWorkflowConfigurationIds) {
            return mediaWorkflowConfigurationIds(List.of(mediaWorkflowConfigurationIds));
        }

        /**
         * @param mediaWorkflowId OCID of the MediaWorkflow that should be run.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowId(@Nullable Output<String> mediaWorkflowId) {
            $.mediaWorkflowId = mediaWorkflowId;
            return this;
        }

        /**
         * @param mediaWorkflowId OCID of the MediaWorkflow that should be run.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowId(String mediaWorkflowId) {
            return mediaWorkflowId(Output.of(mediaWorkflowId));
        }

        /**
         * @param mediaWorkflowName Name of the system MediaWorkflow that should be run.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowName(@Nullable Output<String> mediaWorkflowName) {
            $.mediaWorkflowName = mediaWorkflowName;
            return this;
        }

        /**
         * @param mediaWorkflowName Name of the system MediaWorkflow that should be run.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowName(String mediaWorkflowName) {
            return mediaWorkflowName(Output.of(mediaWorkflowName));
        }

        /**
         * @param parameters Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow&#39;s MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON. The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task&#39;s key and the 2nd level keys refer to a parameter&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<String> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow&#39;s MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON. The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task&#39;s key and the 2nd level keys refer to a parameter&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder parameters(String parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param workflowIdentifierType Discriminate identification of a workflow by name versus a workflow by ID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder workflowIdentifierType(Output<String> workflowIdentifierType) {
            $.workflowIdentifierType = workflowIdentifierType;
            return this;
        }

        /**
         * @param workflowIdentifierType Discriminate identification of a workflow by name versus a workflow by ID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder workflowIdentifierType(String workflowIdentifierType) {
            return workflowIdentifierType(Output.of(workflowIdentifierType));
        }

        public MediaWorkflowJobArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("MediaWorkflowJobArgs", "compartmentId");
            }
            if ($.workflowIdentifierType == null) {
                throw new MissingRequiredPropertyException("MediaWorkflowJobArgs", "workflowIdentifierType");
            }
            return $;
        }
    }

}
