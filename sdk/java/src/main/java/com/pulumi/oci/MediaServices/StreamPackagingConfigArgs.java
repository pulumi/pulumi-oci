// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.MediaServices.inputs.StreamPackagingConfigEncryptionArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamPackagingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamPackagingConfigArgs Empty = new StreamPackagingConfigArgs();

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The name of the stream Packaging Configuration. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) The name of the stream Packaging Configuration. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Unique identifier of the Distribution Channel that this stream packaging configuration belongs to.
     * 
     */
    @Import(name="distributionChannelId", required=true)
    private Output<String> distributionChannelId;

    /**
     * @return Unique identifier of the Distribution Channel that this stream packaging configuration belongs to.
     * 
     */
    public Output<String> distributionChannelId() {
        return this.distributionChannelId;
    }

    /**
     * The encryption used by the stream packaging configuration.
     * 
     */
    @Import(name="encryption")
    private @Nullable Output<StreamPackagingConfigEncryptionArgs> encryption;

    /**
     * @return The encryption used by the stream packaging configuration.
     * 
     */
    public Optional<Output<StreamPackagingConfigEncryptionArgs>> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The duration in seconds for each fragment.
     * 
     */
    @Import(name="segmentTimeInSeconds", required=true)
    private Output<Integer> segmentTimeInSeconds;

    /**
     * @return The duration in seconds for each fragment.
     * 
     */
    public Output<Integer> segmentTimeInSeconds() {
        return this.segmentTimeInSeconds;
    }

    /**
     * The output format for the package.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="streamPackagingFormat", required=true)
    private Output<String> streamPackagingFormat;

    /**
     * @return The output format for the package.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> streamPackagingFormat() {
        return this.streamPackagingFormat;
    }

    private StreamPackagingConfigArgs() {}

    private StreamPackagingConfigArgs(StreamPackagingConfigArgs $) {
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.distributionChannelId = $.distributionChannelId;
        this.encryption = $.encryption;
        this.freeformTags = $.freeformTags;
        this.segmentTimeInSeconds = $.segmentTimeInSeconds;
        this.streamPackagingFormat = $.streamPackagingFormat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamPackagingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamPackagingConfigArgs $;

        public Builder() {
            $ = new StreamPackagingConfigArgs();
        }

        public Builder(StreamPackagingConfigArgs defaults) {
            $ = new StreamPackagingConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The name of the stream Packaging Configuration. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The name of the stream Packaging Configuration. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param distributionChannelId Unique identifier of the Distribution Channel that this stream packaging configuration belongs to.
         * 
         * @return builder
         * 
         */
        public Builder distributionChannelId(Output<String> distributionChannelId) {
            $.distributionChannelId = distributionChannelId;
            return this;
        }

        /**
         * @param distributionChannelId Unique identifier of the Distribution Channel that this stream packaging configuration belongs to.
         * 
         * @return builder
         * 
         */
        public Builder distributionChannelId(String distributionChannelId) {
            return distributionChannelId(Output.of(distributionChannelId));
        }

        /**
         * @param encryption The encryption used by the stream packaging configuration.
         * 
         * @return builder
         * 
         */
        public Builder encryption(@Nullable Output<StreamPackagingConfigEncryptionArgs> encryption) {
            $.encryption = encryption;
            return this;
        }

        /**
         * @param encryption The encryption used by the stream packaging configuration.
         * 
         * @return builder
         * 
         */
        public Builder encryption(StreamPackagingConfigEncryptionArgs encryption) {
            return encryption(Output.of(encryption));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param segmentTimeInSeconds The duration in seconds for each fragment.
         * 
         * @return builder
         * 
         */
        public Builder segmentTimeInSeconds(Output<Integer> segmentTimeInSeconds) {
            $.segmentTimeInSeconds = segmentTimeInSeconds;
            return this;
        }

        /**
         * @param segmentTimeInSeconds The duration in seconds for each fragment.
         * 
         * @return builder
         * 
         */
        public Builder segmentTimeInSeconds(Integer segmentTimeInSeconds) {
            return segmentTimeInSeconds(Output.of(segmentTimeInSeconds));
        }

        /**
         * @param streamPackagingFormat The output format for the package.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder streamPackagingFormat(Output<String> streamPackagingFormat) {
            $.streamPackagingFormat = streamPackagingFormat;
            return this;
        }

        /**
         * @param streamPackagingFormat The output format for the package.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder streamPackagingFormat(String streamPackagingFormat) {
            return streamPackagingFormat(Output.of(streamPackagingFormat));
        }

        public StreamPackagingConfigArgs build() {
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.distributionChannelId = Objects.requireNonNull($.distributionChannelId, "expected parameter 'distributionChannelId' to be non-null");
            $.segmentTimeInSeconds = Objects.requireNonNull($.segmentTimeInSeconds, "expected parameter 'segmentTimeInSeconds' to be non-null");
            $.streamPackagingFormat = Objects.requireNonNull($.streamPackagingFormat, "expected parameter 'streamPackagingFormat' to be non-null");
            return $;
        }
    }

}
