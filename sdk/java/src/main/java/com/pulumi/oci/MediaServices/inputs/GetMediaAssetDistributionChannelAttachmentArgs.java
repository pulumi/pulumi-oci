// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.MediaServices.inputs.GetMediaAssetDistributionChannelAttachmentLockArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMediaAssetDistributionChannelAttachmentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMediaAssetDistributionChannelAttachmentArgs Empty = new GetMediaAssetDistributionChannelAttachmentArgs();

    /**
     * Unique DistributionChannel identifier.
     * 
     */
    @Import(name="distributionChannelId", required=true)
    private Output<String> distributionChannelId;

    /**
     * @return Unique DistributionChannel identifier.
     * 
     */
    public Output<String> distributionChannelId() {
        return this.distributionChannelId;
    }

    @Import(name="isLockOverride")
    private @Nullable Output<Boolean> isLockOverride;

    public Optional<Output<Boolean>> isLockOverride() {
        return Optional.ofNullable(this.isLockOverride);
    }

    /**
     * Locks associated with this resource.
     * 
     */
    @Import(name="locks")
    private @Nullable Output<List<GetMediaAssetDistributionChannelAttachmentLockArgs>> locks;

    /**
     * @return Locks associated with this resource.
     * 
     */
    public Optional<Output<List<GetMediaAssetDistributionChannelAttachmentLockArgs>>> locks() {
        return Optional.ofNullable(this.locks);
    }

    /**
     * Unique MediaAsset identifier
     * 
     */
    @Import(name="mediaAssetId", required=true)
    private Output<String> mediaAssetId;

    /**
     * @return Unique MediaAsset identifier
     * 
     */
    public Output<String> mediaAssetId() {
        return this.mediaAssetId;
    }

    private GetMediaAssetDistributionChannelAttachmentArgs() {}

    private GetMediaAssetDistributionChannelAttachmentArgs(GetMediaAssetDistributionChannelAttachmentArgs $) {
        this.distributionChannelId = $.distributionChannelId;
        this.isLockOverride = $.isLockOverride;
        this.locks = $.locks;
        this.mediaAssetId = $.mediaAssetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMediaAssetDistributionChannelAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMediaAssetDistributionChannelAttachmentArgs $;

        public Builder() {
            $ = new GetMediaAssetDistributionChannelAttachmentArgs();
        }

        public Builder(GetMediaAssetDistributionChannelAttachmentArgs defaults) {
            $ = new GetMediaAssetDistributionChannelAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param distributionChannelId Unique DistributionChannel identifier.
         * 
         * @return builder
         * 
         */
        public Builder distributionChannelId(Output<String> distributionChannelId) {
            $.distributionChannelId = distributionChannelId;
            return this;
        }

        /**
         * @param distributionChannelId Unique DistributionChannel identifier.
         * 
         * @return builder
         * 
         */
        public Builder distributionChannelId(String distributionChannelId) {
            return distributionChannelId(Output.of(distributionChannelId));
        }

        public Builder isLockOverride(@Nullable Output<Boolean> isLockOverride) {
            $.isLockOverride = isLockOverride;
            return this;
        }

        public Builder isLockOverride(Boolean isLockOverride) {
            return isLockOverride(Output.of(isLockOverride));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(@Nullable Output<List<GetMediaAssetDistributionChannelAttachmentLockArgs>> locks) {
            $.locks = locks;
            return this;
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(List<GetMediaAssetDistributionChannelAttachmentLockArgs> locks) {
            return locks(Output.of(locks));
        }

        /**
         * @param locks Locks associated with this resource.
         * 
         * @return builder
         * 
         */
        public Builder locks(GetMediaAssetDistributionChannelAttachmentLockArgs... locks) {
            return locks(List.of(locks));
        }

        /**
         * @param mediaAssetId Unique MediaAsset identifier
         * 
         * @return builder
         * 
         */
        public Builder mediaAssetId(Output<String> mediaAssetId) {
            $.mediaAssetId = mediaAssetId;
            return this;
        }

        /**
         * @param mediaAssetId Unique MediaAsset identifier
         * 
         * @return builder
         * 
         */
        public Builder mediaAssetId(String mediaAssetId) {
            return mediaAssetId(Output.of(mediaAssetId));
        }

        public GetMediaAssetDistributionChannelAttachmentArgs build() {
            if ($.distributionChannelId == null) {
                throw new MissingRequiredPropertyException("GetMediaAssetDistributionChannelAttachmentArgs", "distributionChannelId");
            }
            if ($.mediaAssetId == null) {
                throw new MissingRequiredPropertyException("GetMediaAssetDistributionChannelAttachmentArgs", "mediaAssetId");
            }
            return $;
        }
    }

}
