// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.MediaServices.inputs.GetMediaWorkflowJobFactsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMediaWorkflowJobFactsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMediaWorkflowJobFactsArgs Empty = new GetMediaWorkflowJobFactsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetMediaWorkflowJobFactsFilterArgs>> filters;

    public Optional<Output<List<GetMediaWorkflowJobFactsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Filter by MediaWorkflowJob ID and MediaWorkflowJobFact key.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Filter by MediaWorkflowJob ID and MediaWorkflowJobFact key.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Unique MediaWorkflowJob identifier.
     * 
     */
    @Import(name="mediaWorkflowJobId", required=true)
    private Output<String> mediaWorkflowJobId;

    /**
     * @return Unique MediaWorkflowJob identifier.
     * 
     */
    public Output<String> mediaWorkflowJobId() {
        return this.mediaWorkflowJobId;
    }

    /**
     * Types of details to include.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Types of details to include.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private GetMediaWorkflowJobFactsArgs() {}

    private GetMediaWorkflowJobFactsArgs(GetMediaWorkflowJobFactsArgs $) {
        this.filters = $.filters;
        this.key = $.key;
        this.mediaWorkflowJobId = $.mediaWorkflowJobId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMediaWorkflowJobFactsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMediaWorkflowJobFactsArgs $;

        public Builder() {
            $ = new GetMediaWorkflowJobFactsArgs();
        }

        public Builder(GetMediaWorkflowJobFactsArgs defaults) {
            $ = new GetMediaWorkflowJobFactsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetMediaWorkflowJobFactsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetMediaWorkflowJobFactsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetMediaWorkflowJobFactsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param key Filter by MediaWorkflowJob ID and MediaWorkflowJobFact key.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Filter by MediaWorkflowJob ID and MediaWorkflowJobFact key.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param mediaWorkflowJobId Unique MediaWorkflowJob identifier.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowJobId(Output<String> mediaWorkflowJobId) {
            $.mediaWorkflowJobId = mediaWorkflowJobId;
            return this;
        }

        /**
         * @param mediaWorkflowJobId Unique MediaWorkflowJob identifier.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowJobId(String mediaWorkflowJobId) {
            return mediaWorkflowJobId(Output.of(mediaWorkflowJobId));
        }

        /**
         * @param type Types of details to include.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Types of details to include.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetMediaWorkflowJobFactsArgs build() {
            if ($.mediaWorkflowJobId == null) {
                throw new MissingRequiredPropertyException("GetMediaWorkflowJobFactsArgs", "mediaWorkflowJobId");
            }
            return $;
        }
    }

}
