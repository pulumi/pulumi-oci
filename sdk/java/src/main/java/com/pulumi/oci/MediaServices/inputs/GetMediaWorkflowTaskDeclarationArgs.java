// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMediaWorkflowTaskDeclarationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMediaWorkflowTaskDeclarationArgs Empty = new GetMediaWorkflowTaskDeclarationArgs();

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A filter to only select the newest version for each MediaWorkflowTaskDeclaration name.
     * 
     */
    @Import(name="isCurrent")
    private @Nullable Output<Boolean> isCurrent;

    /**
     * @return A filter to only select the newest version for each MediaWorkflowTaskDeclaration name.
     * 
     */
    public Optional<Output<Boolean>> isCurrent() {
        return Optional.ofNullable(this.isCurrent);
    }

    /**
     * A filter to return only the resources with their system defined, unique name matching the given name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A filter to return only the resources with their system defined, unique name matching the given name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to select MediaWorkflowTaskDeclaration by version.
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return A filter to select MediaWorkflowTaskDeclaration by version.
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private GetMediaWorkflowTaskDeclarationArgs() {}

    private GetMediaWorkflowTaskDeclarationArgs(GetMediaWorkflowTaskDeclarationArgs $) {
        this.compartmentId = $.compartmentId;
        this.isCurrent = $.isCurrent;
        this.name = $.name;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMediaWorkflowTaskDeclarationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMediaWorkflowTaskDeclarationArgs $;

        public Builder() {
            $ = new GetMediaWorkflowTaskDeclarationArgs();
        }

        public Builder(GetMediaWorkflowTaskDeclarationArgs defaults) {
            $ = new GetMediaWorkflowTaskDeclarationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param isCurrent A filter to only select the newest version for each MediaWorkflowTaskDeclaration name.
         * 
         * @return builder
         * 
         */
        public Builder isCurrent(@Nullable Output<Boolean> isCurrent) {
            $.isCurrent = isCurrent;
            return this;
        }

        /**
         * @param isCurrent A filter to only select the newest version for each MediaWorkflowTaskDeclaration name.
         * 
         * @return builder
         * 
         */
        public Builder isCurrent(Boolean isCurrent) {
            return isCurrent(Output.of(isCurrent));
        }

        /**
         * @param name A filter to return only the resources with their system defined, unique name matching the given name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A filter to return only the resources with their system defined, unique name matching the given name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param version A filter to select MediaWorkflowTaskDeclaration by version.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version A filter to select MediaWorkflowTaskDeclaration by version.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public GetMediaWorkflowTaskDeclarationArgs build() {
            return $;
        }
    }

}
