// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.MediaServices.inputs.MediaWorkflowJobOutputArgs;
import com.pulumi.oci.MediaServices.inputs.MediaWorkflowJobTaskLifecycleStateArgs;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MediaWorkflowJobState extends com.pulumi.resources.ResourceArgs {

    public static final MediaWorkflowJobState Empty = new MediaWorkflowJobState();

    /**
     * (Updatable) ID of the compartment in which the job should be created.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) ID of the compartment in which the job should be created.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The lifecycle details of MediaWorkflowJob task.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return The lifecycle details of MediaWorkflowJob task.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * Configurations to be applied to this run of the workflow.
     * 
     */
    @Import(name="mediaWorkflowConfigurationIds")
    private @Nullable Output<List<String>> mediaWorkflowConfigurationIds;

    /**
     * @return Configurations to be applied to this run of the workflow.
     * 
     */
    public Optional<Output<List<String>>> mediaWorkflowConfigurationIds() {
        return Optional.ofNullable(this.mediaWorkflowConfigurationIds);
    }

    /**
     * OCID of the MediaWorkflow that should be run.
     * 
     */
    @Import(name="mediaWorkflowId")
    private @Nullable Output<String> mediaWorkflowId;

    /**
     * @return OCID of the MediaWorkflow that should be run.
     * 
     */
    public Optional<Output<String>> mediaWorkflowId() {
        return Optional.ofNullable(this.mediaWorkflowId);
    }

    /**
     * Name of the system MediaWorkflow that should be run.
     * 
     */
    @Import(name="mediaWorkflowName")
    private @Nullable Output<String> mediaWorkflowName;

    /**
     * @return Name of the system MediaWorkflow that should be run.
     * 
     */
    public Optional<Output<String>> mediaWorkflowName() {
        return Optional.ofNullable(this.mediaWorkflowName);
    }

    /**
     * A list of JobOutput for the workflowJob.
     * 
     */
    @Import(name="outputs")
    private @Nullable Output<List<MediaWorkflowJobOutputArgs>> outputs;

    /**
     * @return A list of JobOutput for the workflowJob.
     * 
     */
    public Optional<Output<List<MediaWorkflowJobOutputArgs>>> outputs() {
        return Optional.ofNullable(this.outputs);
    }

    /**
     * Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow&#39;s MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON. The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task&#39;s key and the 2nd level keys refer to a parameter&#39;s name.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<String> parameters;

    /**
     * @return Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow&#39;s MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON. The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task&#39;s key and the 2nd level keys refer to a parameter&#39;s name.
     * 
     */
    public Optional<Output<String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
     * 
     */
    @Import(name="runnable")
    private @Nullable Output<String> runnable;

    /**
     * @return A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
     * 
     */
    public Optional<Output<String>> runnable() {
        return Optional.ofNullable(this.runnable);
    }

    /**
     * The current state of the MediaWorkflowJob task.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the MediaWorkflowJob task.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * Status of each task.
     * 
     */
    @Import(name="taskLifecycleStates")
    private @Nullable Output<List<MediaWorkflowJobTaskLifecycleStateArgs>> taskLifecycleStates;

    /**
     * @return Status of each task.
     * 
     */
    public Optional<Output<List<MediaWorkflowJobTaskLifecycleStateArgs>>> taskLifecycleStates() {
        return Optional.ofNullable(this.taskLifecycleStates);
    }

    /**
     * Creation time of the job. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return Creation time of the job. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * Time when the job finished. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeEnded")
    private @Nullable Output<String> timeEnded;

    /**
     * @return Time when the job finished. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeEnded() {
        return Optional.ofNullable(this.timeEnded);
    }

    /**
     * Time when the job started to execute. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeStarted")
    private @Nullable Output<String> timeStarted;

    /**
     * @return Time when the job started to execute. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }

    /**
     * Updated time of the job. An RFC3339 formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return Updated time of the job. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * Discriminate identification of a workflow by name versus a workflow by ID.
     * 
     */
    @Import(name="workflowIdentifierType")
    private @Nullable Output<String> workflowIdentifierType;

    /**
     * @return Discriminate identification of a workflow by name versus a workflow by ID.
     * 
     */
    public Optional<Output<String>> workflowIdentifierType() {
        return Optional.ofNullable(this.workflowIdentifierType);
    }

    private MediaWorkflowJobState() {}

    private MediaWorkflowJobState(MediaWorkflowJobState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.lifecycleDetails = $.lifecycleDetails;
        this.mediaWorkflowConfigurationIds = $.mediaWorkflowConfigurationIds;
        this.mediaWorkflowId = $.mediaWorkflowId;
        this.mediaWorkflowName = $.mediaWorkflowName;
        this.outputs = $.outputs;
        this.parameters = $.parameters;
        this.runnable = $.runnable;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.taskLifecycleStates = $.taskLifecycleStates;
        this.timeCreated = $.timeCreated;
        this.timeEnded = $.timeEnded;
        this.timeStarted = $.timeStarted;
        this.timeUpdated = $.timeUpdated;
        this.workflowIdentifierType = $.workflowIdentifierType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MediaWorkflowJobState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MediaWorkflowJobState $;

        public Builder() {
            $ = new MediaWorkflowJobState();
        }

        public Builder(MediaWorkflowJobState defaults) {
            $ = new MediaWorkflowJobState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) ID of the compartment in which the job should be created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) ID of the compartment in which the job should be created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param lifecycleDetails The lifecycle details of MediaWorkflowJob task.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails The lifecycle details of MediaWorkflowJob task.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param mediaWorkflowConfigurationIds Configurations to be applied to this run of the workflow.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowConfigurationIds(@Nullable Output<List<String>> mediaWorkflowConfigurationIds) {
            $.mediaWorkflowConfigurationIds = mediaWorkflowConfigurationIds;
            return this;
        }

        /**
         * @param mediaWorkflowConfigurationIds Configurations to be applied to this run of the workflow.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowConfigurationIds(List<String> mediaWorkflowConfigurationIds) {
            return mediaWorkflowConfigurationIds(Output.of(mediaWorkflowConfigurationIds));
        }

        /**
         * @param mediaWorkflowConfigurationIds Configurations to be applied to this run of the workflow.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowConfigurationIds(String... mediaWorkflowConfigurationIds) {
            return mediaWorkflowConfigurationIds(List.of(mediaWorkflowConfigurationIds));
        }

        /**
         * @param mediaWorkflowId OCID of the MediaWorkflow that should be run.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowId(@Nullable Output<String> mediaWorkflowId) {
            $.mediaWorkflowId = mediaWorkflowId;
            return this;
        }

        /**
         * @param mediaWorkflowId OCID of the MediaWorkflow that should be run.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowId(String mediaWorkflowId) {
            return mediaWorkflowId(Output.of(mediaWorkflowId));
        }

        /**
         * @param mediaWorkflowName Name of the system MediaWorkflow that should be run.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowName(@Nullable Output<String> mediaWorkflowName) {
            $.mediaWorkflowName = mediaWorkflowName;
            return this;
        }

        /**
         * @param mediaWorkflowName Name of the system MediaWorkflow that should be run.
         * 
         * @return builder
         * 
         */
        public Builder mediaWorkflowName(String mediaWorkflowName) {
            return mediaWorkflowName(Output.of(mediaWorkflowName));
        }

        /**
         * @param outputs A list of JobOutput for the workflowJob.
         * 
         * @return builder
         * 
         */
        public Builder outputs(@Nullable Output<List<MediaWorkflowJobOutputArgs>> outputs) {
            $.outputs = outputs;
            return this;
        }

        /**
         * @param outputs A list of JobOutput for the workflowJob.
         * 
         * @return builder
         * 
         */
        public Builder outputs(List<MediaWorkflowJobOutputArgs> outputs) {
            return outputs(Output.of(outputs));
        }

        /**
         * @param outputs A list of JobOutput for the workflowJob.
         * 
         * @return builder
         * 
         */
        public Builder outputs(MediaWorkflowJobOutputArgs... outputs) {
            return outputs(List.of(outputs));
        }

        /**
         * @param parameters Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow&#39;s MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON. The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task&#39;s key and the 2nd level keys refer to a parameter&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<String> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow&#39;s MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON. The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task&#39;s key and the 2nd level keys refer to a parameter&#39;s name.
         * 
         * @return builder
         * 
         */
        public Builder parameters(String parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param runnable A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
         * 
         * @return builder
         * 
         */
        public Builder runnable(@Nullable Output<String> runnable) {
            $.runnable = runnable;
            return this;
        }

        /**
         * @param runnable A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
         * 
         * @return builder
         * 
         */
        public Builder runnable(String runnable) {
            return runnable(Output.of(runnable));
        }

        /**
         * @param state The current state of the MediaWorkflowJob task.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the MediaWorkflowJob task.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param taskLifecycleStates Status of each task.
         * 
         * @return builder
         * 
         */
        public Builder taskLifecycleStates(@Nullable Output<List<MediaWorkflowJobTaskLifecycleStateArgs>> taskLifecycleStates) {
            $.taskLifecycleStates = taskLifecycleStates;
            return this;
        }

        /**
         * @param taskLifecycleStates Status of each task.
         * 
         * @return builder
         * 
         */
        public Builder taskLifecycleStates(List<MediaWorkflowJobTaskLifecycleStateArgs> taskLifecycleStates) {
            return taskLifecycleStates(Output.of(taskLifecycleStates));
        }

        /**
         * @param taskLifecycleStates Status of each task.
         * 
         * @return builder
         * 
         */
        public Builder taskLifecycleStates(MediaWorkflowJobTaskLifecycleStateArgs... taskLifecycleStates) {
            return taskLifecycleStates(List.of(taskLifecycleStates));
        }

        /**
         * @param timeCreated Creation time of the job. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated Creation time of the job. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeEnded Time when the job finished. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeEnded(@Nullable Output<String> timeEnded) {
            $.timeEnded = timeEnded;
            return this;
        }

        /**
         * @param timeEnded Time when the job finished. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeEnded(String timeEnded) {
            return timeEnded(Output.of(timeEnded));
        }

        /**
         * @param timeStarted Time when the job started to execute. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeStarted(@Nullable Output<String> timeStarted) {
            $.timeStarted = timeStarted;
            return this;
        }

        /**
         * @param timeStarted Time when the job started to execute. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeStarted(String timeStarted) {
            return timeStarted(Output.of(timeStarted));
        }

        /**
         * @param timeUpdated Updated time of the job. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated Updated time of the job. An RFC3339 formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param workflowIdentifierType Discriminate identification of a workflow by name versus a workflow by ID.
         * 
         * @return builder
         * 
         */
        public Builder workflowIdentifierType(@Nullable Output<String> workflowIdentifierType) {
            $.workflowIdentifierType = workflowIdentifierType;
            return this;
        }

        /**
         * @param workflowIdentifierType Discriminate identification of a workflow by name versus a workflow by ID.
         * 
         * @return builder
         * 
         */
        public Builder workflowIdentifierType(String workflowIdentifierType) {
            return workflowIdentifierType(Output.of(workflowIdentifierType));
        }

        public MediaWorkflowJobState build() {
            return $;
        }
    }

}
