// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamPackagingConfigEncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamPackagingConfigEncryptionArgs Empty = new StreamPackagingConfigEncryptionArgs();

    /**
     * The encryption algorithm for the stream packaging configuration.
     * 
     */
    @Import(name="algorithm", required=true)
    private Output<String> algorithm;

    /**
     * @return The encryption algorithm for the stream packaging configuration.
     * 
     */
    public Output<String> algorithm() {
        return this.algorithm;
    }

    /**
     * The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    private StreamPackagingConfigEncryptionArgs() {}

    private StreamPackagingConfigEncryptionArgs(StreamPackagingConfigEncryptionArgs $) {
        this.algorithm = $.algorithm;
        this.kmsKeyId = $.kmsKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamPackagingConfigEncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamPackagingConfigEncryptionArgs $;

        public Builder() {
            $ = new StreamPackagingConfigEncryptionArgs();
        }

        public Builder(StreamPackagingConfigEncryptionArgs defaults) {
            $ = new StreamPackagingConfigEncryptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param algorithm The encryption algorithm for the stream packaging configuration.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(Output<String> algorithm) {
            $.algorithm = algorithm;
            return this;
        }

        /**
         * @param algorithm The encryption algorithm for the stream packaging configuration.
         * 
         * @return builder
         * 
         */
        public Builder algorithm(String algorithm) {
            return algorithm(Output.of(algorithm));
        }

        /**
         * @param kmsKeyId The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The identifier of the customer managed Vault KMS symmetric encryption key (null if Oracle managed).
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        public StreamPackagingConfigEncryptionArgs build() {
            if ($.algorithm == null) {
                throw new MissingRequiredPropertyException("StreamPackagingConfigEncryptionArgs", "algorithm");
            }
            return $;
        }
    }

}
