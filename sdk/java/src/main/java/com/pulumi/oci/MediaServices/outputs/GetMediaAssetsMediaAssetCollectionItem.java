// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.MediaServices.outputs.GetMediaAssetsMediaAssetCollectionItemMediaAssetTag;
import com.pulumi.oci.MediaServices.outputs.GetMediaAssetsMediaAssetCollectionItemMetadata;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMediaAssetsMediaAssetCollectionItem {
    /**
     * @return Filter MediaAsset by the bucket where the object is stored.
     * 
     */
    private @Nullable String bucket;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A filter to return only the resources that match the entire display name given.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return Unique MediaAsset identifier of the first asset upload.
     * 
     */
    private @Nullable String masterMediaAssetId;
    /**
     * @return List of tags for the MediaAsset.
     * 
     */
    private @Nullable List<GetMediaAssetsMediaAssetCollectionItemMediaAssetTag> mediaAssetTags;
    /**
     * @return The ID of the MediaWorkflowJob used to produce this asset, if this parameter is supplied then the workflow ID must also be supplied.
     * 
     */
    private @Nullable String mediaWorkflowJobId;
    /**
     * @return JSON string containing the technial metadata for the media asset.
     * 
     */
    private @Nullable List<GetMediaAssetsMediaAssetCollectionItemMetadata> metadatas;
    /**
     * @return The object storage namespace where this asset is located.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return Filter MediaAsset by the name of the object in object storage.
     * 
     */
    private @Nullable String object;
    /**
     * @return eTag of the underlying object storage object.
     * 
     */
    private @Nullable String objectEtag;
    /**
     * @return Unique MediaAsset identifier of the asset from which this asset is derived.
     * 
     */
    private @Nullable String parentMediaAssetId;
    /**
     * @return The end index of video segment files.
     * 
     */
    private @Nullable String segmentRangeEndIndex;
    /**
     * @return The start index for video segment files.
     * 
     */
    private @Nullable String segmentRangeStartIndex;
    /**
     * @return The ID of the MediaWorkflow used to produce this asset.
     * 
     */
    private @Nullable String sourceMediaWorkflowId;
    /**
     * @return The version of the MediaWorkflow used to produce this asset.
     * 
     */
    private @Nullable String sourceMediaWorkflowVersion;
    /**
     * @return A filter to return only the resources with lifecycleState matching the given lifecycleState.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The time when the MediaAsset was created. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time when the MediaAsset was updated. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return Filter MediaAsset by the asset type.
     * 
     */
    private @Nullable String type;

    private GetMediaAssetsMediaAssetCollectionItem() {}
    /**
     * @return Filter MediaAsset by the bucket where the object is stored.
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A filter to return only the resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Unique MediaAsset identifier of the first asset upload.
     * 
     */
    public Optional<String> masterMediaAssetId() {
        return Optional.ofNullable(this.masterMediaAssetId);
    }
    /**
     * @return List of tags for the MediaAsset.
     * 
     */
    public List<GetMediaAssetsMediaAssetCollectionItemMediaAssetTag> mediaAssetTags() {
        return this.mediaAssetTags == null ? List.of() : this.mediaAssetTags;
    }
    /**
     * @return The ID of the MediaWorkflowJob used to produce this asset, if this parameter is supplied then the workflow ID must also be supplied.
     * 
     */
    public Optional<String> mediaWorkflowJobId() {
        return Optional.ofNullable(this.mediaWorkflowJobId);
    }
    /**
     * @return JSON string containing the technial metadata for the media asset.
     * 
     */
    public List<GetMediaAssetsMediaAssetCollectionItemMetadata> metadatas() {
        return this.metadatas == null ? List.of() : this.metadatas;
    }
    /**
     * @return The object storage namespace where this asset is located.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return Filter MediaAsset by the name of the object in object storage.
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }
    /**
     * @return eTag of the underlying object storage object.
     * 
     */
    public Optional<String> objectEtag() {
        return Optional.ofNullable(this.objectEtag);
    }
    /**
     * @return Unique MediaAsset identifier of the asset from which this asset is derived.
     * 
     */
    public Optional<String> parentMediaAssetId() {
        return Optional.ofNullable(this.parentMediaAssetId);
    }
    /**
     * @return The end index of video segment files.
     * 
     */
    public Optional<String> segmentRangeEndIndex() {
        return Optional.ofNullable(this.segmentRangeEndIndex);
    }
    /**
     * @return The start index for video segment files.
     * 
     */
    public Optional<String> segmentRangeStartIndex() {
        return Optional.ofNullable(this.segmentRangeStartIndex);
    }
    /**
     * @return The ID of the MediaWorkflow used to produce this asset.
     * 
     */
    public Optional<String> sourceMediaWorkflowId() {
        return Optional.ofNullable(this.sourceMediaWorkflowId);
    }
    /**
     * @return The version of the MediaWorkflow used to produce this asset.
     * 
     */
    public Optional<String> sourceMediaWorkflowVersion() {
        return Optional.ofNullable(this.sourceMediaWorkflowVersion);
    }
    /**
     * @return A filter to return only the resources with lifecycleState matching the given lifecycleState.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The time when the MediaAsset was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time when the MediaAsset was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return Filter MediaAsset by the asset type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMediaAssetsMediaAssetCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucket;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String masterMediaAssetId;
        private @Nullable List<GetMediaAssetsMediaAssetCollectionItemMediaAssetTag> mediaAssetTags;
        private @Nullable String mediaWorkflowJobId;
        private @Nullable List<GetMediaAssetsMediaAssetCollectionItemMetadata> metadatas;
        private @Nullable String namespace;
        private @Nullable String object;
        private @Nullable String objectEtag;
        private @Nullable String parentMediaAssetId;
        private @Nullable String segmentRangeEndIndex;
        private @Nullable String segmentRangeStartIndex;
        private @Nullable String sourceMediaWorkflowId;
        private @Nullable String sourceMediaWorkflowVersion;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetMediaAssetsMediaAssetCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.masterMediaAssetId = defaults.masterMediaAssetId;
    	      this.mediaAssetTags = defaults.mediaAssetTags;
    	      this.mediaWorkflowJobId = defaults.mediaWorkflowJobId;
    	      this.metadatas = defaults.metadatas;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.objectEtag = defaults.objectEtag;
    	      this.parentMediaAssetId = defaults.parentMediaAssetId;
    	      this.segmentRangeEndIndex = defaults.segmentRangeEndIndex;
    	      this.segmentRangeStartIndex = defaults.segmentRangeStartIndex;
    	      this.sourceMediaWorkflowId = defaults.sourceMediaWorkflowId;
    	      this.sourceMediaWorkflowVersion = defaults.sourceMediaWorkflowVersion;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder masterMediaAssetId(@Nullable String masterMediaAssetId) {
            this.masterMediaAssetId = masterMediaAssetId;
            return this;
        }
        @CustomType.Setter
        public Builder mediaAssetTags(@Nullable List<GetMediaAssetsMediaAssetCollectionItemMediaAssetTag> mediaAssetTags) {
            this.mediaAssetTags = mediaAssetTags;
            return this;
        }
        public Builder mediaAssetTags(GetMediaAssetsMediaAssetCollectionItemMediaAssetTag... mediaAssetTags) {
            return mediaAssetTags(List.of(mediaAssetTags));
        }
        @CustomType.Setter
        public Builder mediaWorkflowJobId(@Nullable String mediaWorkflowJobId) {
            this.mediaWorkflowJobId = mediaWorkflowJobId;
            return this;
        }
        @CustomType.Setter
        public Builder metadatas(@Nullable List<GetMediaAssetsMediaAssetCollectionItemMetadata> metadatas) {
            this.metadatas = metadatas;
            return this;
        }
        public Builder metadatas(GetMediaAssetsMediaAssetCollectionItemMetadata... metadatas) {
            return metadatas(List.of(metadatas));
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder object(@Nullable String object) {
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder objectEtag(@Nullable String objectEtag) {
            this.objectEtag = objectEtag;
            return this;
        }
        @CustomType.Setter
        public Builder parentMediaAssetId(@Nullable String parentMediaAssetId) {
            this.parentMediaAssetId = parentMediaAssetId;
            return this;
        }
        @CustomType.Setter
        public Builder segmentRangeEndIndex(@Nullable String segmentRangeEndIndex) {
            this.segmentRangeEndIndex = segmentRangeEndIndex;
            return this;
        }
        @CustomType.Setter
        public Builder segmentRangeStartIndex(@Nullable String segmentRangeStartIndex) {
            this.segmentRangeStartIndex = segmentRangeStartIndex;
            return this;
        }
        @CustomType.Setter
        public Builder sourceMediaWorkflowId(@Nullable String sourceMediaWorkflowId) {
            this.sourceMediaWorkflowId = sourceMediaWorkflowId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceMediaWorkflowVersion(@Nullable String sourceMediaWorkflowVersion) {
            this.sourceMediaWorkflowVersion = sourceMediaWorkflowVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetMediaAssetsMediaAssetCollectionItem build() {
            final var o = new GetMediaAssetsMediaAssetCollectionItem();
            o.bucket = bucket;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.masterMediaAssetId = masterMediaAssetId;
            o.mediaAssetTags = mediaAssetTags;
            o.mediaWorkflowJobId = mediaWorkflowJobId;
            o.metadatas = metadatas;
            o.namespace = namespace;
            o.object = object;
            o.objectEtag = objectEtag;
            o.parentMediaAssetId = parentMediaAssetId;
            o.segmentRangeEndIndex = segmentRangeEndIndex;
            o.segmentRangeStartIndex = segmentRangeStartIndex;
            o.sourceMediaWorkflowId = sourceMediaWorkflowId;
            o.sourceMediaWorkflowVersion = sourceMediaWorkflowVersion;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.type = type;
            return o;
        }
    }
}
