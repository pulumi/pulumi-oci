// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.MediaServices.outputs.GetMediaAssetsFilter;
import com.pulumi.oci.MediaServices.outputs.GetMediaAssetsMediaAssetCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMediaAssetsResult {
    /**
     * @return The name of the object storage bucket where this represented asset is located.
     * 
     */
    private @Nullable String bucket;
    /**
     * @return The ID of the compartment containing the MediaAsset.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    private @Nullable String distributionChannelId;
    private @Nullable List<GetMediaAssetsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The ID of the senior most asset from which this asset is derived.
     * 
     */
    private @Nullable String masterMediaAssetId;
    /**
     * @return The list of media_asset_collection.
     * 
     */
    private @Nullable List<GetMediaAssetsMediaAssetCollection> mediaAssetCollections;
    /**
     * @return The ID of the MediaWorkflowJob used to produce this asset.
     * 
     */
    private @Nullable String mediaWorkflowJobId;
    /**
     * @return The object storage object name that identifies this asset.
     * 
     */
    private @Nullable String object;
    /**
     * @return The ID of the parent asset from which this asset is derived.
     * 
     */
    private @Nullable String parentMediaAssetId;
    /**
     * @return The ID of the MediaWorkflow used to produce this asset.
     * 
     */
    private @Nullable String sourceMediaWorkflowId;
    /**
     * @return The version of the MediaWorkflow used to produce this asset.
     * 
     */
    private @Nullable String sourceMediaWorkflowVersion;
    /**
     * @return The current state of the MediaAsset.
     * 
     */
    private @Nullable String state;
    /**
     * @return The type of the media asset.
     * 
     */
    private @Nullable String type;

    private GetMediaAssetsResult() {}
    /**
     * @return The name of the object storage bucket where this represented asset is located.
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return The ID of the compartment containing the MediaAsset.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public Optional<String> distributionChannelId() {
        return Optional.ofNullable(this.distributionChannelId);
    }
    public List<GetMediaAssetsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The ID of the senior most asset from which this asset is derived.
     * 
     */
    public Optional<String> masterMediaAssetId() {
        return Optional.ofNullable(this.masterMediaAssetId);
    }
    /**
     * @return The list of media_asset_collection.
     * 
     */
    public List<GetMediaAssetsMediaAssetCollection> mediaAssetCollections() {
        return this.mediaAssetCollections == null ? List.of() : this.mediaAssetCollections;
    }
    /**
     * @return The ID of the MediaWorkflowJob used to produce this asset.
     * 
     */
    public Optional<String> mediaWorkflowJobId() {
        return Optional.ofNullable(this.mediaWorkflowJobId);
    }
    /**
     * @return The object storage object name that identifies this asset.
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }
    /**
     * @return The ID of the parent asset from which this asset is derived.
     * 
     */
    public Optional<String> parentMediaAssetId() {
        return Optional.ofNullable(this.parentMediaAssetId);
    }
    /**
     * @return The ID of the MediaWorkflow used to produce this asset.
     * 
     */
    public Optional<String> sourceMediaWorkflowId() {
        return Optional.ofNullable(this.sourceMediaWorkflowId);
    }
    /**
     * @return The version of the MediaWorkflow used to produce this asset.
     * 
     */
    public Optional<String> sourceMediaWorkflowVersion() {
        return Optional.ofNullable(this.sourceMediaWorkflowVersion);
    }
    /**
     * @return The current state of the MediaAsset.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The type of the media asset.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMediaAssetsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucket;
        private @Nullable String compartmentId;
        private @Nullable String displayName;
        private @Nullable String distributionChannelId;
        private @Nullable List<GetMediaAssetsFilter> filters;
        private @Nullable String id;
        private @Nullable String masterMediaAssetId;
        private @Nullable List<GetMediaAssetsMediaAssetCollection> mediaAssetCollections;
        private @Nullable String mediaWorkflowJobId;
        private @Nullable String object;
        private @Nullable String parentMediaAssetId;
        private @Nullable String sourceMediaWorkflowId;
        private @Nullable String sourceMediaWorkflowVersion;
        private @Nullable String state;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetMediaAssetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.distributionChannelId = defaults.distributionChannelId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.masterMediaAssetId = defaults.masterMediaAssetId;
    	      this.mediaAssetCollections = defaults.mediaAssetCollections;
    	      this.mediaWorkflowJobId = defaults.mediaWorkflowJobId;
    	      this.object = defaults.object;
    	      this.parentMediaAssetId = defaults.parentMediaAssetId;
    	      this.sourceMediaWorkflowId = defaults.sourceMediaWorkflowId;
    	      this.sourceMediaWorkflowVersion = defaults.sourceMediaWorkflowVersion;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder distributionChannelId(@Nullable String distributionChannelId) {
            this.distributionChannelId = distributionChannelId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetMediaAssetsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetMediaAssetsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder masterMediaAssetId(@Nullable String masterMediaAssetId) {
            this.masterMediaAssetId = masterMediaAssetId;
            return this;
        }
        @CustomType.Setter
        public Builder mediaAssetCollections(@Nullable List<GetMediaAssetsMediaAssetCollection> mediaAssetCollections) {
            this.mediaAssetCollections = mediaAssetCollections;
            return this;
        }
        public Builder mediaAssetCollections(GetMediaAssetsMediaAssetCollection... mediaAssetCollections) {
            return mediaAssetCollections(List.of(mediaAssetCollections));
        }
        @CustomType.Setter
        public Builder mediaWorkflowJobId(@Nullable String mediaWorkflowJobId) {
            this.mediaWorkflowJobId = mediaWorkflowJobId;
            return this;
        }
        @CustomType.Setter
        public Builder object(@Nullable String object) {
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder parentMediaAssetId(@Nullable String parentMediaAssetId) {
            this.parentMediaAssetId = parentMediaAssetId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceMediaWorkflowId(@Nullable String sourceMediaWorkflowId) {
            this.sourceMediaWorkflowId = sourceMediaWorkflowId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceMediaWorkflowVersion(@Nullable String sourceMediaWorkflowVersion) {
            this.sourceMediaWorkflowVersion = sourceMediaWorkflowVersion;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetMediaAssetsResult build() {
            final var o = new GetMediaAssetsResult();
            o.bucket = bucket;
            o.compartmentId = compartmentId;
            o.displayName = displayName;
            o.distributionChannelId = distributionChannelId;
            o.filters = filters;
            o.id = id;
            o.masterMediaAssetId = masterMediaAssetId;
            o.mediaAssetCollections = mediaAssetCollections;
            o.mediaWorkflowJobId = mediaWorkflowJobId;
            o.object = object;
            o.parentMediaAssetId = parentMediaAssetId;
            o.sourceMediaWorkflowId = sourceMediaWorkflowId;
            o.sourceMediaWorkflowVersion = sourceMediaWorkflowVersion;
            o.state = state;
            o.type = type;
            return o;
        }
    }
}
