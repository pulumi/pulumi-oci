// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMediaWorkflowJobFactResult {
    /**
     * @return The body of the detail captured as JSON.
     * 
     */
    private @Nullable String detail;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return System generated serial number to uniquely identify a detail in order within a MediaWorkflowJob.
     * 
     */
    private String key;
    /**
     * @return Reference to the parent job.
     * 
     */
    private String mediaWorkflowJobId;
    /**
     * @return Unique name. It is read-only and generated for the fact.
     * 
     */
    private @Nullable String name;
    /**
     * @return The type of information contained in this detail.
     * 
     */
    private @Nullable String type;

    private GetMediaWorkflowJobFactResult() {}
    /**
     * @return The body of the detail captured as JSON.
     * 
     */
    public Optional<String> detail() {
        return Optional.ofNullable(this.detail);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return System generated serial number to uniquely identify a detail in order within a MediaWorkflowJob.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Reference to the parent job.
     * 
     */
    public String mediaWorkflowJobId() {
        return this.mediaWorkflowJobId;
    }
    /**
     * @return Unique name. It is read-only and generated for the fact.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The type of information contained in this detail.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMediaWorkflowJobFactResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String detail;
        private @Nullable String id;
        private String key;
        private String mediaWorkflowJobId;
        private @Nullable String name;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetMediaWorkflowJobFactResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detail = defaults.detail;
    	      this.id = defaults.id;
    	      this.key = defaults.key;
    	      this.mediaWorkflowJobId = defaults.mediaWorkflowJobId;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder detail(@Nullable String detail) {
            this.detail = detail;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        @CustomType.Setter
        public Builder mediaWorkflowJobId(String mediaWorkflowJobId) {
            this.mediaWorkflowJobId = Objects.requireNonNull(mediaWorkflowJobId);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public GetMediaWorkflowJobFactResult build() {
            final var o = new GetMediaWorkflowJobFactResult();
            o.detail = detail;
            o.id = id;
            o.key = key;
            o.mediaWorkflowJobId = mediaWorkflowJobId;
            o.name = name;
            o.type = type;
            return o;
        }
    }
}
