// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.MediaServices.outputs.GetMediaWorkflowJobFactsFilter;
import com.pulumi.oci.MediaServices.outputs.GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMediaWorkflowJobFactsResult {
    private @Nullable List<GetMediaWorkflowJobFactsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return System generated serial number to uniquely identify a detail in order within a MediaWorkflowJob.
     * 
     */
    private @Nullable String key;
    /**
     * @return The list of media_workflow_job_fact_collection.
     * 
     */
    private List<GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection> mediaWorkflowJobFactCollections;
    /**
     * @return Reference to the parent job.
     * 
     */
    private String mediaWorkflowJobId;
    /**
     * @return The type of information contained in this detail.
     * 
     */
    private @Nullable String type;

    private GetMediaWorkflowJobFactsResult() {}
    public List<GetMediaWorkflowJobFactsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return System generated serial number to uniquely identify a detail in order within a MediaWorkflowJob.
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return The list of media_workflow_job_fact_collection.
     * 
     */
    public List<GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection> mediaWorkflowJobFactCollections() {
        return this.mediaWorkflowJobFactCollections;
    }
    /**
     * @return Reference to the parent job.
     * 
     */
    public String mediaWorkflowJobId() {
        return this.mediaWorkflowJobId;
    }
    /**
     * @return The type of information contained in this detail.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMediaWorkflowJobFactsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetMediaWorkflowJobFactsFilter> filters;
        private String id;
        private @Nullable String key;
        private List<GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection> mediaWorkflowJobFactCollections;
        private String mediaWorkflowJobId;
        private @Nullable String type;
        public Builder() {}
        public Builder(GetMediaWorkflowJobFactsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.key = defaults.key;
    	      this.mediaWorkflowJobFactCollections = defaults.mediaWorkflowJobFactCollections;
    	      this.mediaWorkflowJobId = defaults.mediaWorkflowJobId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<GetMediaWorkflowJobFactsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetMediaWorkflowJobFactsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMediaWorkflowJobFactsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {

            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder mediaWorkflowJobFactCollections(List<GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection> mediaWorkflowJobFactCollections) {
            if (mediaWorkflowJobFactCollections == null) {
              throw new MissingRequiredPropertyException("GetMediaWorkflowJobFactsResult", "mediaWorkflowJobFactCollections");
            }
            this.mediaWorkflowJobFactCollections = mediaWorkflowJobFactCollections;
            return this;
        }
        public Builder mediaWorkflowJobFactCollections(GetMediaWorkflowJobFactsMediaWorkflowJobFactCollection... mediaWorkflowJobFactCollections) {
            return mediaWorkflowJobFactCollections(List.of(mediaWorkflowJobFactCollections));
        }
        @CustomType.Setter
        public Builder mediaWorkflowJobId(String mediaWorkflowJobId) {
            if (mediaWorkflowJobId == null) {
              throw new MissingRequiredPropertyException("GetMediaWorkflowJobFactsResult", "mediaWorkflowJobId");
            }
            this.mediaWorkflowJobId = mediaWorkflowJobId;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {

            this.type = type;
            return this;
        }
        public GetMediaWorkflowJobFactsResult build() {
            final var _resultValue = new GetMediaWorkflowJobFactsResult();
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.key = key;
            _resultValue.mediaWorkflowJobFactCollections = mediaWorkflowJobFactCollections;
            _resultValue.mediaWorkflowJobId = mediaWorkflowJobId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
