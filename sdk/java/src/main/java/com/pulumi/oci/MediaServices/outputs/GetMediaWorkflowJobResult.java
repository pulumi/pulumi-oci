// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.MediaServices.outputs.GetMediaWorkflowJobOutput;
import com.pulumi.oci.MediaServices.outputs.GetMediaWorkflowJobTaskLifecycleState;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMediaWorkflowJobResult {
    /**
     * @return Compartment Identifier.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The ID associated with the job output.
     * 
     */
    private @Nullable String id;
    /**
     * @return The lifecycle details of MediaWorkflowJob task.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return Configurations to be applied to this run of the workflow.
     * 
     */
    private @Nullable List<String> mediaWorkflowConfigurationIds;
    /**
     * @return The workflow to execute.
     * 
     */
    private @Nullable String mediaWorkflowId;
    private String mediaWorkflowJobId;
    private @Nullable String mediaWorkflowName;
    /**
     * @return A list of JobOutput for the workflowJob.
     * 
     */
    private @Nullable List<GetMediaWorkflowJobOutput> outputs;
    /**
     * @return Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow&#39;s MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON.  The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task&#39;s key and the 2nd level keys refer to a parameter&#39;s name.
     * 
     */
    private @Nullable String parameters;
    /**
     * @return A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
     * 
     */
    private @Nullable String runnable;
    /**
     * @return The current state of the MediaWorkflowJob task.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return Status of each task.
     * 
     */
    private @Nullable List<GetMediaWorkflowJobTaskLifecycleState> taskLifecycleStates;
    /**
     * @return Creation time of the job. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Time when the job finished. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeEnded;
    /**
     * @return Time when the job started to execute. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeStarted;
    /**
     * @return Updated time of the job. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;
    private @Nullable String workflowIdentifierType;

    private GetMediaWorkflowJobResult() {}
    /**
     * @return Compartment Identifier.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Name of the Media Workflow Job. Does not have to be unique. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The ID associated with the job output.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The lifecycle details of MediaWorkflowJob task.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return Configurations to be applied to this run of the workflow.
     * 
     */
    public List<String> mediaWorkflowConfigurationIds() {
        return this.mediaWorkflowConfigurationIds == null ? List.of() : this.mediaWorkflowConfigurationIds;
    }
    /**
     * @return The workflow to execute.
     * 
     */
    public Optional<String> mediaWorkflowId() {
        return Optional.ofNullable(this.mediaWorkflowId);
    }
    public String mediaWorkflowJobId() {
        return this.mediaWorkflowJobId;
    }
    public Optional<String> mediaWorkflowName() {
        return Optional.ofNullable(this.mediaWorkflowName);
    }
    /**
     * @return A list of JobOutput for the workflowJob.
     * 
     */
    public List<GetMediaWorkflowJobOutput> outputs() {
        return this.outputs == null ? List.of() : this.outputs;
    }
    /**
     * @return Parameters that override parameters specified in MediaWorkflowTaskDeclarations, the MediaWorkflow, the MediaWorkflow&#39;s MediaWorkflowConfigurations and the MediaWorkflowConfigurations of this MediaWorkflowJob. The parameters are given as JSON.  The top level and 2nd level elements must be JSON objects (vs arrays, scalars, etc). The top level keys refer to a task&#39;s key and the 2nd level keys refer to a parameter&#39;s name.
     * 
     */
    public Optional<String> parameters() {
        return Optional.ofNullable(this.parameters);
    }
    /**
     * @return A JSON representation of the job as it will be run by the system. All the task declarations, configurations and parameters are merged. Parameter values are all fully resolved.
     * 
     */
    public Optional<String> runnable() {
        return Optional.ofNullable(this.runnable);
    }
    /**
     * @return The current state of the MediaWorkflowJob task.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return Status of each task.
     * 
     */
    public List<GetMediaWorkflowJobTaskLifecycleState> taskLifecycleStates() {
        return this.taskLifecycleStates == null ? List.of() : this.taskLifecycleStates;
    }
    /**
     * @return Creation time of the job. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Time when the job finished. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeEnded() {
        return Optional.ofNullable(this.timeEnded);
    }
    /**
     * @return Time when the job started to execute. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }
    /**
     * @return Updated time of the job. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    public Optional<String> workflowIdentifierType() {
        return Optional.ofNullable(this.workflowIdentifierType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMediaWorkflowJobResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable List<String> mediaWorkflowConfigurationIds;
        private @Nullable String mediaWorkflowId;
        private String mediaWorkflowJobId;
        private @Nullable String mediaWorkflowName;
        private @Nullable List<GetMediaWorkflowJobOutput> outputs;
        private @Nullable String parameters;
        private @Nullable String runnable;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable List<GetMediaWorkflowJobTaskLifecycleState> taskLifecycleStates;
        private @Nullable String timeCreated;
        private @Nullable String timeEnded;
        private @Nullable String timeStarted;
        private @Nullable String timeUpdated;
        private @Nullable String workflowIdentifierType;
        public Builder() {}
        public Builder(GetMediaWorkflowJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.mediaWorkflowConfigurationIds = defaults.mediaWorkflowConfigurationIds;
    	      this.mediaWorkflowId = defaults.mediaWorkflowId;
    	      this.mediaWorkflowJobId = defaults.mediaWorkflowJobId;
    	      this.mediaWorkflowName = defaults.mediaWorkflowName;
    	      this.outputs = defaults.outputs;
    	      this.parameters = defaults.parameters;
    	      this.runnable = defaults.runnable;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.taskLifecycleStates = defaults.taskLifecycleStates;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeEnded = defaults.timeEnded;
    	      this.timeStarted = defaults.timeStarted;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.workflowIdentifierType = defaults.workflowIdentifierType;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder mediaWorkflowConfigurationIds(@Nullable List<String> mediaWorkflowConfigurationIds) {
            this.mediaWorkflowConfigurationIds = mediaWorkflowConfigurationIds;
            return this;
        }
        public Builder mediaWorkflowConfigurationIds(String... mediaWorkflowConfigurationIds) {
            return mediaWorkflowConfigurationIds(List.of(mediaWorkflowConfigurationIds));
        }
        @CustomType.Setter
        public Builder mediaWorkflowId(@Nullable String mediaWorkflowId) {
            this.mediaWorkflowId = mediaWorkflowId;
            return this;
        }
        @CustomType.Setter
        public Builder mediaWorkflowJobId(String mediaWorkflowJobId) {
            this.mediaWorkflowJobId = Objects.requireNonNull(mediaWorkflowJobId);
            return this;
        }
        @CustomType.Setter
        public Builder mediaWorkflowName(@Nullable String mediaWorkflowName) {
            this.mediaWorkflowName = mediaWorkflowName;
            return this;
        }
        @CustomType.Setter
        public Builder outputs(@Nullable List<GetMediaWorkflowJobOutput> outputs) {
            this.outputs = outputs;
            return this;
        }
        public Builder outputs(GetMediaWorkflowJobOutput... outputs) {
            return outputs(List.of(outputs));
        }
        @CustomType.Setter
        public Builder parameters(@Nullable String parameters) {
            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder runnable(@Nullable String runnable) {
            this.runnable = runnable;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder taskLifecycleStates(@Nullable List<GetMediaWorkflowJobTaskLifecycleState> taskLifecycleStates) {
            this.taskLifecycleStates = taskLifecycleStates;
            return this;
        }
        public Builder taskLifecycleStates(GetMediaWorkflowJobTaskLifecycleState... taskLifecycleStates) {
            return taskLifecycleStates(List.of(taskLifecycleStates));
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeEnded(@Nullable String timeEnded) {
            this.timeEnded = timeEnded;
            return this;
        }
        @CustomType.Setter
        public Builder timeStarted(@Nullable String timeStarted) {
            this.timeStarted = timeStarted;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder workflowIdentifierType(@Nullable String workflowIdentifierType) {
            this.workflowIdentifierType = workflowIdentifierType;
            return this;
        }
        public GetMediaWorkflowJobResult build() {
            final var o = new GetMediaWorkflowJobResult();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.mediaWorkflowConfigurationIds = mediaWorkflowConfigurationIds;
            o.mediaWorkflowId = mediaWorkflowId;
            o.mediaWorkflowJobId = mediaWorkflowJobId;
            o.mediaWorkflowName = mediaWorkflowName;
            o.outputs = outputs;
            o.parameters = parameters;
            o.runnable = runnable;
            o.state = state;
            o.systemTags = systemTags;
            o.taskLifecycleStates = taskLifecycleStates;
            o.timeCreated = timeCreated;
            o.timeEnded = timeEnded;
            o.timeStarted = timeStarted;
            o.timeUpdated = timeUpdated;
            o.workflowIdentifierType = workflowIdentifierType;
            return o;
        }
    }
}
