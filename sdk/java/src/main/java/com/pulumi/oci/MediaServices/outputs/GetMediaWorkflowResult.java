// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.MediaServices.outputs.GetMediaWorkflowTask;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMediaWorkflowResult {
    /**
     * @return Compartment Identifier.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return Name of the Media Workflow. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private @Nullable String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String lifecyleDetails;
    /**
     * @return Configurations to be applied to all the runs of this workflow. Parameters in these configurations are overridden by parameters in the MediaWorkflowConfigurations of the MediaWorkflowJob and the parameters of the MediaWorkflowJob. If the same parameter appears in multiple configurations, the values that appear in the configuration at the highest index will be used.
     * 
     */
    private @Nullable List<String> mediaWorkflowConfigurationIds;
    private String mediaWorkflowId;
    /**
     * @return Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
     * 
     */
    private @Nullable String parameters;
    /**
     * @return The current state of the MediaWorkflow.
     * 
     */
    private @Nullable String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array.  The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
     * 
     */
    private @Nullable List<GetMediaWorkflowTask> tasks;
    /**
     * @return The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time when the MediaWorkflow was updated. An RFC3339 formatted datetime string.
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The version of the MediaWorkflow.
     * 
     */
    private @Nullable String version;

    private GetMediaWorkflowResult() {}
    /**
     * @return Compartment Identifier.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return Name of the Media Workflow. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> lifecyleDetails() {
        return Optional.ofNullable(this.lifecyleDetails);
    }
    /**
     * @return Configurations to be applied to all the runs of this workflow. Parameters in these configurations are overridden by parameters in the MediaWorkflowConfigurations of the MediaWorkflowJob and the parameters of the MediaWorkflowJob. If the same parameter appears in multiple configurations, the values that appear in the configuration at the highest index will be used.
     * 
     */
    public List<String> mediaWorkflowConfigurationIds() {
        return this.mediaWorkflowConfigurationIds == null ? List.of() : this.mediaWorkflowConfigurationIds;
    }
    public String mediaWorkflowId() {
        return this.mediaWorkflowId;
    }
    /**
     * @return Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
     * 
     */
    public Optional<String> parameters() {
        return Optional.ofNullable(this.parameters);
    }
    /**
     * @return The current state of the MediaWorkflow.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array.  The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
     * 
     */
    public List<GetMediaWorkflowTask> tasks() {
        return this.tasks == null ? List.of() : this.tasks;
    }
    /**
     * @return The time when the MediaWorkflow was created. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time when the MediaWorkflow was updated. An RFC3339 formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The version of the MediaWorkflow.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMediaWorkflowResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable String lifecyleDetails;
        private @Nullable List<String> mediaWorkflowConfigurationIds;
        private String mediaWorkflowId;
        private @Nullable String parameters;
        private @Nullable String state;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable List<GetMediaWorkflowTask> tasks;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String version;
        public Builder() {}
        public Builder(GetMediaWorkflowResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecyleDetails = defaults.lifecyleDetails;
    	      this.mediaWorkflowConfigurationIds = defaults.mediaWorkflowConfigurationIds;
    	      this.mediaWorkflowId = defaults.mediaWorkflowId;
    	      this.parameters = defaults.parameters;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.tasks = defaults.tasks;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecyleDetails(@Nullable String lifecyleDetails) {
            this.lifecyleDetails = lifecyleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder mediaWorkflowConfigurationIds(@Nullable List<String> mediaWorkflowConfigurationIds) {
            this.mediaWorkflowConfigurationIds = mediaWorkflowConfigurationIds;
            return this;
        }
        public Builder mediaWorkflowConfigurationIds(String... mediaWorkflowConfigurationIds) {
            return mediaWorkflowConfigurationIds(List.of(mediaWorkflowConfigurationIds));
        }
        @CustomType.Setter
        public Builder mediaWorkflowId(String mediaWorkflowId) {
            this.mediaWorkflowId = Objects.requireNonNull(mediaWorkflowId);
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable String parameters) {
            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder tasks(@Nullable List<GetMediaWorkflowTask> tasks) {
            this.tasks = tasks;
            return this;
        }
        public Builder tasks(GetMediaWorkflowTask... tasks) {
            return tasks(List.of(tasks));
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public GetMediaWorkflowResult build() {
            final var o = new GetMediaWorkflowResult();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.lifecyleDetails = lifecyleDetails;
            o.mediaWorkflowConfigurationIds = mediaWorkflowConfigurationIds;
            o.mediaWorkflowId = mediaWorkflowId;
            o.parameters = parameters;
            o.state = state;
            o.systemTags = systemTags;
            o.tasks = tasks;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.version = version;
            return o;
        }
    }
}
