// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMediaWorkflowTaskDeclarationItem {
    /**
     * @return A filter to return only the resources with their system defined, unique name matching the given name.
     * 
     */
    private @Nullable String name;
    /**
     * @return JSON schema specifying the parameters supported by this type of task. This is used to validate tasks&#39; parameters when jobs are created.
     * 
     */
    private @Nullable String parametersSchema;
    /**
     * @return JSON schema similar to the parameterSchema, but permits parameter values to refer to other parameters using the ${/path/to/another/parmeter} syntax.  This is used to validate task parameters when workflows are created.
     * 
     */
    private @Nullable String parametersSchemaAllowingReferences;
    /**
     * @return A filter to select MediaWorkflowTaskDeclaration by version.
     * 
     */
    private @Nullable Integer version;

    private GetMediaWorkflowTaskDeclarationItem() {}
    /**
     * @return A filter to return only the resources with their system defined, unique name matching the given name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return JSON schema specifying the parameters supported by this type of task. This is used to validate tasks&#39; parameters when jobs are created.
     * 
     */
    public Optional<String> parametersSchema() {
        return Optional.ofNullable(this.parametersSchema);
    }
    /**
     * @return JSON schema similar to the parameterSchema, but permits parameter values to refer to other parameters using the ${/path/to/another/parmeter} syntax.  This is used to validate task parameters when workflows are created.
     * 
     */
    public Optional<String> parametersSchemaAllowingReferences() {
        return Optional.ofNullable(this.parametersSchemaAllowingReferences);
    }
    /**
     * @return A filter to select MediaWorkflowTaskDeclaration by version.
     * 
     */
    public Optional<Integer> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMediaWorkflowTaskDeclarationItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String name;
        private @Nullable String parametersSchema;
        private @Nullable String parametersSchemaAllowingReferences;
        private @Nullable Integer version;
        public Builder() {}
        public Builder(GetMediaWorkflowTaskDeclarationItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.parametersSchema = defaults.parametersSchema;
    	      this.parametersSchemaAllowingReferences = defaults.parametersSchemaAllowingReferences;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parametersSchema(@Nullable String parametersSchema) {
            this.parametersSchema = parametersSchema;
            return this;
        }
        @CustomType.Setter
        public Builder parametersSchemaAllowingReferences(@Nullable String parametersSchemaAllowingReferences) {
            this.parametersSchemaAllowingReferences = parametersSchemaAllowingReferences;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable Integer version) {
            this.version = version;
            return this;
        }
        public GetMediaWorkflowTaskDeclarationItem build() {
            final var o = new GetMediaWorkflowTaskDeclarationItem();
            o.name = name;
            o.parametersSchema = parametersSchema;
            o.parametersSchemaAllowingReferences = parametersSchemaAllowingReferences;
            o.version = version;
            return o;
        }
    }
}
