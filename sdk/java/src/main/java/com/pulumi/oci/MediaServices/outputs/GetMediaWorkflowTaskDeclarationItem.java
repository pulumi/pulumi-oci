// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMediaWorkflowTaskDeclarationItem {
    /**
     * @return A filter to return only the resources with their system defined, unique name matching the given name.
     * 
     */
    private String name;
    /**
     * @return JSON schema specifying the parameters supported by this type of task. This is used to validate tasks&#39; parameters when jobs are created.
     * 
     */
    private String parametersSchema;
    /**
     * @return JSON schema similar to the parameterSchema, but permits parameter values to refer to other parameters using the ${/path/to/another/parmeter} syntax.  This is used to validate task parameters when workflows are created.
     * 
     */
    private String parametersSchemaAllowingReferences;
    /**
     * @return A filter to select MediaWorkflowTaskDeclaration by version.
     * 
     */
    private Integer version;

    private GetMediaWorkflowTaskDeclarationItem() {}
    /**
     * @return A filter to return only the resources with their system defined, unique name matching the given name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return JSON schema specifying the parameters supported by this type of task. This is used to validate tasks&#39; parameters when jobs are created.
     * 
     */
    public String parametersSchema() {
        return this.parametersSchema;
    }
    /**
     * @return JSON schema similar to the parameterSchema, but permits parameter values to refer to other parameters using the ${/path/to/another/parmeter} syntax.  This is used to validate task parameters when workflows are created.
     * 
     */
    public String parametersSchemaAllowingReferences() {
        return this.parametersSchemaAllowingReferences;
    }
    /**
     * @return A filter to select MediaWorkflowTaskDeclaration by version.
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMediaWorkflowTaskDeclarationItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private String parametersSchema;
        private String parametersSchemaAllowingReferences;
        private Integer version;
        public Builder() {}
        public Builder(GetMediaWorkflowTaskDeclarationItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.parametersSchema = defaults.parametersSchema;
    	      this.parametersSchemaAllowingReferences = defaults.parametersSchemaAllowingReferences;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetMediaWorkflowTaskDeclarationItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parametersSchema(String parametersSchema) {
            if (parametersSchema == null) {
              throw new MissingRequiredPropertyException("GetMediaWorkflowTaskDeclarationItem", "parametersSchema");
            }
            this.parametersSchema = parametersSchema;
            return this;
        }
        @CustomType.Setter
        public Builder parametersSchemaAllowingReferences(String parametersSchemaAllowingReferences) {
            if (parametersSchemaAllowingReferences == null) {
              throw new MissingRequiredPropertyException("GetMediaWorkflowTaskDeclarationItem", "parametersSchemaAllowingReferences");
            }
            this.parametersSchemaAllowingReferences = parametersSchemaAllowingReferences;
            return this;
        }
        @CustomType.Setter
        public Builder version(Integer version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetMediaWorkflowTaskDeclarationItem", "version");
            }
            this.version = version;
            return this;
        }
        public GetMediaWorkflowTaskDeclarationItem build() {
            final var _resultValue = new GetMediaWorkflowTaskDeclarationItem();
            _resultValue.name = name;
            _resultValue.parametersSchema = parametersSchema;
            _resultValue.parametersSchemaAllowingReferences = parametersSchemaAllowingReferences;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
