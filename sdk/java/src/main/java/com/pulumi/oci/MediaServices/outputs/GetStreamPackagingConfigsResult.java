// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.MediaServices.outputs.GetStreamPackagingConfigsFilter;
import com.pulumi.oci.MediaServices.outputs.GetStreamPackagingConfigsStreamPackagingConfigCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetStreamPackagingConfigsResult {
    /**
     * @return The name of the stream packaging configuration. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Unique identifier of the Distribution Channel that this stream packaging configuration belongs to.
     * 
     */
    private String distributionChannelId;
    private @Nullable List<GetStreamPackagingConfigsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The current state of the Packaging Configuration.
     * 
     */
    private @Nullable String state;
    /**
     * @return The list of stream_packaging_config_collection.
     * 
     */
    private List<GetStreamPackagingConfigsStreamPackagingConfigCollection> streamPackagingConfigCollections;
    private @Nullable String streamPackagingConfigId;

    private GetStreamPackagingConfigsResult() {}
    /**
     * @return The name of the stream packaging configuration. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Unique identifier of the Distribution Channel that this stream packaging configuration belongs to.
     * 
     */
    public String distributionChannelId() {
        return this.distributionChannelId;
    }
    public List<GetStreamPackagingConfigsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of the Packaging Configuration.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The list of stream_packaging_config_collection.
     * 
     */
    public List<GetStreamPackagingConfigsStreamPackagingConfigCollection> streamPackagingConfigCollections() {
        return this.streamPackagingConfigCollections;
    }
    public Optional<String> streamPackagingConfigId() {
        return Optional.ofNullable(this.streamPackagingConfigId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamPackagingConfigsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String displayName;
        private String distributionChannelId;
        private @Nullable List<GetStreamPackagingConfigsFilter> filters;
        private String id;
        private @Nullable String state;
        private List<GetStreamPackagingConfigsStreamPackagingConfigCollection> streamPackagingConfigCollections;
        private @Nullable String streamPackagingConfigId;
        public Builder() {}
        public Builder(GetStreamPackagingConfigsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.distributionChannelId = defaults.distributionChannelId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.streamPackagingConfigCollections = defaults.streamPackagingConfigCollections;
    	      this.streamPackagingConfigId = defaults.streamPackagingConfigId;
        }

        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder distributionChannelId(String distributionChannelId) {
            if (distributionChannelId == null) {
              throw new MissingRequiredPropertyException("GetStreamPackagingConfigsResult", "distributionChannelId");
            }
            this.distributionChannelId = distributionChannelId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetStreamPackagingConfigsFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetStreamPackagingConfigsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStreamPackagingConfigsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {

            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder streamPackagingConfigCollections(List<GetStreamPackagingConfigsStreamPackagingConfigCollection> streamPackagingConfigCollections) {
            if (streamPackagingConfigCollections == null) {
              throw new MissingRequiredPropertyException("GetStreamPackagingConfigsResult", "streamPackagingConfigCollections");
            }
            this.streamPackagingConfigCollections = streamPackagingConfigCollections;
            return this;
        }
        public Builder streamPackagingConfigCollections(GetStreamPackagingConfigsStreamPackagingConfigCollection... streamPackagingConfigCollections) {
            return streamPackagingConfigCollections(List.of(streamPackagingConfigCollections));
        }
        @CustomType.Setter
        public Builder streamPackagingConfigId(@Nullable String streamPackagingConfigId) {

            this.streamPackagingConfigId = streamPackagingConfigId;
            return this;
        }
        public GetStreamPackagingConfigsResult build() {
            final var _resultValue = new GetStreamPackagingConfigsResult();
            _resultValue.displayName = displayName;
            _resultValue.distributionChannelId = distributionChannelId;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.state = state;
            _resultValue.streamPackagingConfigCollections = streamPackagingConfigCollections;
            _resultValue.streamPackagingConfigId = streamPackagingConfigId;
            return _resultValue;
        }
    }
}
