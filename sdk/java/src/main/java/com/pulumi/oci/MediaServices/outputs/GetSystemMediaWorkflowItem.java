// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MediaServices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.MediaServices.outputs.GetSystemMediaWorkflowItemTask;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSystemMediaWorkflowItem {
    /**
     * @return Description of this workflow&#39;s processing and how that processing can be customized by specifying parameter values.
     * 
     */
    private String description;
    /**
     * @return A filter to return only the resources with their system defined, unique name matching the given name.
     * 
     */
    private String name;
    /**
     * @return Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
     * 
     */
    private String parameters;
    /**
     * @return The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array. The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
     * 
     */
    private List<GetSystemMediaWorkflowItemTask> tasks;

    private GetSystemMediaWorkflowItem() {}
    /**
     * @return Description of this workflow&#39;s processing and how that processing can be customized by specifying parameter values.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only the resources with their system defined, unique name matching the given name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Data specifiying how this task is to be run. The data is a JSON object that must conform to the JSON Schema specified by the parameters of the MediaWorkflowTaskDeclaration this task references. The parameters may contain values or references to other parameters.
     * 
     */
    public String parameters() {
        return this.parameters;
    }
    /**
     * @return The processing to be done in this workflow. Each key of the MediaWorkflowTasks in this array is unique within the array. The order of the items is preserved from the order of the tasks array in CreateMediaWorkflowDetails or UpdateMediaWorkflowDetails.
     * 
     */
    public List<GetSystemMediaWorkflowItemTask> tasks() {
        return this.tasks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSystemMediaWorkflowItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String name;
        private String parameters;
        private List<GetSystemMediaWorkflowItemTask> tasks;
        public Builder() {}
        public Builder(GetSystemMediaWorkflowItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.tasks = defaults.tasks;
        }

        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder parameters(String parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }
        @CustomType.Setter
        public Builder tasks(List<GetSystemMediaWorkflowItemTask> tasks) {
            this.tasks = Objects.requireNonNull(tasks);
            return this;
        }
        public Builder tasks(GetSystemMediaWorkflowItemTask... tasks) {
            return tasks(List.of(tasks));
        }
        public GetSystemMediaWorkflowItem build() {
            final var o = new GetSystemMediaWorkflowItem();
            o.description = description;
            o.name = name;
            o.parameters = parameters;
            o.tasks = tasks;
            return o;
        }
    }
}
