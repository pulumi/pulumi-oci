// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.oci.MeteringComputation.inputs.GetAverageCarbonEmissionArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetAverageCarbonEmissionPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetCleanEnergyUsageArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetCleanEnergyUsagePlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetConfigurationArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetConfigurationPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetCustomTableArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetCustomTablePlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetCustomTablesArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetCustomTablesPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetQueriesArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetQueriesPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetQueryArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetQueryPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetScheduleArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetSchedulePlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunsArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunsPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetSchedulesArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetSchedulesPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsConfigArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsConfigPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueriesArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueriesPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueryArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueryPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupPlainArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupsArgs;
import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupsPlainArgs;
import com.pulumi.oci.MeteringComputation.outputs.GetAverageCarbonEmissionResult;
import com.pulumi.oci.MeteringComputation.outputs.GetCleanEnergyUsageResult;
import com.pulumi.oci.MeteringComputation.outputs.GetConfigurationResult;
import com.pulumi.oci.MeteringComputation.outputs.GetCustomTableResult;
import com.pulumi.oci.MeteringComputation.outputs.GetCustomTablesResult;
import com.pulumi.oci.MeteringComputation.outputs.GetQueriesResult;
import com.pulumi.oci.MeteringComputation.outputs.GetQueryResult;
import com.pulumi.oci.MeteringComputation.outputs.GetScheduleResult;
import com.pulumi.oci.MeteringComputation.outputs.GetScheduledRunResult;
import com.pulumi.oci.MeteringComputation.outputs.GetScheduledRunsResult;
import com.pulumi.oci.MeteringComputation.outputs.GetSchedulesResult;
import com.pulumi.oci.MeteringComputation.outputs.GetUsageCarbonEmissionsConfigResult;
import com.pulumi.oci.MeteringComputation.outputs.GetUsageCarbonEmissionsQueriesResult;
import com.pulumi.oci.MeteringComputation.outputs.GetUsageCarbonEmissionsQueryResult;
import com.pulumi.oci.MeteringComputation.outputs.GetUsageStatementEmailRecipientsGroupResult;
import com.pulumi.oci.MeteringComputation.outputs.GetUsageStatementEmailRecipientsGroupsResult;
import com.pulumi.oci.Utilities;
import java.util.concurrent.CompletableFuture;

public final class MeteringComputationFunctions {
    /**
     * This data source provides details about a specific Average Carbon Emission resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the average carbon emissions summary by SKU.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetAverageCarbonEmissionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAverageCarbonEmission = MeteringComputationFunctions.getAverageCarbonEmission(GetAverageCarbonEmissionArgs.builder()
     *             .skuPartNumber(averageCarbonEmissionSkuPartNumber)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAverageCarbonEmissionResult> getAverageCarbonEmission(GetAverageCarbonEmissionArgs args) {
        return getAverageCarbonEmission(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Average Carbon Emission resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the average carbon emissions summary by SKU.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetAverageCarbonEmissionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAverageCarbonEmission = MeteringComputationFunctions.getAverageCarbonEmission(GetAverageCarbonEmissionArgs.builder()
     *             .skuPartNumber(averageCarbonEmissionSkuPartNumber)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAverageCarbonEmissionResult> getAverageCarbonEmissionPlain(GetAverageCarbonEmissionPlainArgs args) {
        return getAverageCarbonEmissionPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Average Carbon Emission resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the average carbon emissions summary by SKU.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetAverageCarbonEmissionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAverageCarbonEmission = MeteringComputationFunctions.getAverageCarbonEmission(GetAverageCarbonEmissionArgs.builder()
     *             .skuPartNumber(averageCarbonEmissionSkuPartNumber)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAverageCarbonEmissionResult> getAverageCarbonEmission(GetAverageCarbonEmissionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getAverageCarbonEmission:getAverageCarbonEmission", TypeShape.of(GetAverageCarbonEmissionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Average Carbon Emission resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the average carbon emissions summary by SKU.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetAverageCarbonEmissionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testAverageCarbonEmission = MeteringComputationFunctions.getAverageCarbonEmission(GetAverageCarbonEmissionArgs.builder()
     *             .skuPartNumber(averageCarbonEmissionSkuPartNumber)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAverageCarbonEmissionResult> getAverageCarbonEmissionPlain(GetAverageCarbonEmissionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getAverageCarbonEmission:getAverageCarbonEmission", TypeShape.of(GetAverageCarbonEmissionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Clean Energy Usage resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the clean energy usage summary by region.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCleanEnergyUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCleanEnergyUsage = MeteringComputationFunctions.getCleanEnergyUsage(GetCleanEnergyUsageArgs.builder()
     *             .region(cleanEnergyUsageRegion)
     *             .ad(cleanEnergyUsageAd)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCleanEnergyUsageResult> getCleanEnergyUsage(GetCleanEnergyUsageArgs args) {
        return getCleanEnergyUsage(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Clean Energy Usage resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the clean energy usage summary by region.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCleanEnergyUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCleanEnergyUsage = MeteringComputationFunctions.getCleanEnergyUsage(GetCleanEnergyUsageArgs.builder()
     *             .region(cleanEnergyUsageRegion)
     *             .ad(cleanEnergyUsageAd)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCleanEnergyUsageResult> getCleanEnergyUsagePlain(GetCleanEnergyUsagePlainArgs args) {
        return getCleanEnergyUsagePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Clean Energy Usage resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the clean energy usage summary by region.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCleanEnergyUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCleanEnergyUsage = MeteringComputationFunctions.getCleanEnergyUsage(GetCleanEnergyUsageArgs.builder()
     *             .region(cleanEnergyUsageRegion)
     *             .ad(cleanEnergyUsageAd)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCleanEnergyUsageResult> getCleanEnergyUsage(GetCleanEnergyUsageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getCleanEnergyUsage:getCleanEnergyUsage", TypeShape.of(GetCleanEnergyUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Clean Energy Usage resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the clean energy usage summary by region.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCleanEnergyUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCleanEnergyUsage = MeteringComputationFunctions.getCleanEnergyUsage(GetCleanEnergyUsageArgs.builder()
     *             .region(cleanEnergyUsageRegion)
     *             .ad(cleanEnergyUsageAd)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCleanEnergyUsageResult> getCleanEnergyUsagePlain(GetCleanEnergyUsagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getCleanEnergyUsage:getCleanEnergyUsage", TypeShape.of(GetCleanEnergyUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Configuration resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the configurations list for the UI drop-down list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConfiguration = MeteringComputationFunctions.getConfiguration(GetConfigurationArgs.builder()
     *             .tenantId(testTenant.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConfigurationResult> getConfiguration(GetConfigurationArgs args) {
        return getConfiguration(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Configuration resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the configurations list for the UI drop-down list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConfiguration = MeteringComputationFunctions.getConfiguration(GetConfigurationArgs.builder()
     *             .tenantId(testTenant.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConfigurationResult> getConfigurationPlain(GetConfigurationPlainArgs args) {
        return getConfigurationPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Configuration resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the configurations list for the UI drop-down list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConfiguration = MeteringComputationFunctions.getConfiguration(GetConfigurationArgs.builder()
     *             .tenantId(testTenant.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetConfigurationResult> getConfiguration(GetConfigurationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getConfiguration:getConfiguration", TypeShape.of(GetConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Configuration resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the configurations list for the UI drop-down list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetConfigurationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testConfiguration = MeteringComputationFunctions.getConfiguration(GetConfigurationArgs.builder()
     *             .tenantId(testTenant.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetConfigurationResult> getConfigurationPlain(GetConfigurationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getConfiguration:getConfiguration", TypeShape.of(GetConfigurationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Custom Table resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved custom table.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCustomTableArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCustomTable = MeteringComputationFunctions.getCustomTable(GetCustomTableArgs.builder()
     *             .customTableId(testCustomTableOciMeteringComputationCustomTable.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomTableResult> getCustomTable(GetCustomTableArgs args) {
        return getCustomTable(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Custom Table resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved custom table.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCustomTableArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCustomTable = MeteringComputationFunctions.getCustomTable(GetCustomTableArgs.builder()
     *             .customTableId(testCustomTableOciMeteringComputationCustomTable.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomTableResult> getCustomTablePlain(GetCustomTablePlainArgs args) {
        return getCustomTablePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Custom Table resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved custom table.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCustomTableArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCustomTable = MeteringComputationFunctions.getCustomTable(GetCustomTableArgs.builder()
     *             .customTableId(testCustomTableOciMeteringComputationCustomTable.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomTableResult> getCustomTable(GetCustomTableArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getCustomTable:getCustomTable", TypeShape.of(GetCustomTableResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Custom Table resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved custom table.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCustomTableArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCustomTable = MeteringComputationFunctions.getCustomTable(GetCustomTableArgs.builder()
     *             .customTableId(testCustomTableOciMeteringComputationCustomTable.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomTableResult> getCustomTablePlain(GetCustomTablePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getCustomTable:getCustomTable", TypeShape.of(GetCustomTableResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Custom Tables in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved custom table list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCustomTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCustomTables = MeteringComputationFunctions.getCustomTables(GetCustomTablesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .savedReportId(testSavedReport.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomTablesResult> getCustomTables(GetCustomTablesArgs args) {
        return getCustomTables(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Custom Tables in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved custom table list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCustomTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCustomTables = MeteringComputationFunctions.getCustomTables(GetCustomTablesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .savedReportId(testSavedReport.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomTablesResult> getCustomTablesPlain(GetCustomTablesPlainArgs args) {
        return getCustomTablesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Custom Tables in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved custom table list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCustomTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCustomTables = MeteringComputationFunctions.getCustomTables(GetCustomTablesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .savedReportId(testSavedReport.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCustomTablesResult> getCustomTables(GetCustomTablesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getCustomTables:getCustomTables", TypeShape.of(GetCustomTablesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Custom Tables in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved custom table list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetCustomTablesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCustomTables = MeteringComputationFunctions.getCustomTables(GetCustomTablesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .savedReportId(testSavedReport.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCustomTablesResult> getCustomTablesPlain(GetCustomTablesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getCustomTables:getCustomTables", TypeShape.of(GetCustomTablesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Queries in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved query list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetQueriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testQueries = MeteringComputationFunctions.getQueries(GetQueriesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueriesResult> getQueries(GetQueriesArgs args) {
        return getQueries(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Queries in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved query list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetQueriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testQueries = MeteringComputationFunctions.getQueries(GetQueriesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQueriesResult> getQueriesPlain(GetQueriesPlainArgs args) {
        return getQueriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Queries in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved query list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetQueriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testQueries = MeteringComputationFunctions.getQueries(GetQueriesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueriesResult> getQueries(GetQueriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getQueries:getQueries", TypeShape.of(GetQueriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Queries in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved query list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetQueriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testQueries = MeteringComputationFunctions.getQueries(GetQueriesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQueriesResult> getQueriesPlain(GetQueriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getQueries:getQueries", TypeShape.of(GetQueriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Query resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved query.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetQueryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testQuery = MeteringComputationFunctions.getQuery(GetQueryArgs.builder()
     *             .queryId(testQueryOciMeteringComputationQuery.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueryResult> getQuery(GetQueryArgs args) {
        return getQuery(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Query resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved query.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetQueryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testQuery = MeteringComputationFunctions.getQuery(GetQueryArgs.builder()
     *             .queryId(testQueryOciMeteringComputationQuery.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQueryResult> getQueryPlain(GetQueryPlainArgs args) {
        return getQueryPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Query resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved query.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetQueryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testQuery = MeteringComputationFunctions.getQuery(GetQueryArgs.builder()
     *             .queryId(testQueryOciMeteringComputationQuery.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetQueryResult> getQuery(GetQueryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getQuery:getQuery", TypeShape.of(GetQueryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Query resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved query.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetQueryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testQuery = MeteringComputationFunctions.getQuery(GetQueryArgs.builder()
     *             .queryId(testQueryOciMeteringComputationQuery.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetQueryResult> getQueryPlain(GetQueryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getQuery:getQuery", TypeShape.of(GetQueryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSchedule = MeteringComputationFunctions.getSchedule(GetScheduleArgs.builder()
     *             .scheduleId(testScheduleOciMeteringComputationSchedule.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduleResult> getSchedule(GetScheduleArgs args) {
        return getSchedule(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSchedule = MeteringComputationFunctions.getSchedule(GetScheduleArgs.builder()
     *             .scheduleId(testScheduleOciMeteringComputationSchedule.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduleResult> getSchedulePlain(GetSchedulePlainArgs args) {
        return getSchedulePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSchedule = MeteringComputationFunctions.getSchedule(GetScheduleArgs.builder()
     *             .scheduleId(testScheduleOciMeteringComputationSchedule.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduleResult> getSchedule(GetScheduleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getSchedule:getSchedule", TypeShape.of(GetScheduleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Schedule resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSchedule = MeteringComputationFunctions.getSchedule(GetScheduleArgs.builder()
     *             .scheduleId(testScheduleOciMeteringComputationSchedule.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduleResult> getSchedulePlain(GetSchedulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getSchedule:getSchedule", TypeShape.of(GetScheduleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Scheduled Run resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule run.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testScheduledRun = MeteringComputationFunctions.getScheduledRun(GetScheduledRunArgs.builder()
     *             .scheduledRunId(testScheduledRunOciMeteringComputationScheduledRun.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduledRunResult> getScheduledRun(GetScheduledRunArgs args) {
        return getScheduledRun(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Scheduled Run resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule run.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testScheduledRun = MeteringComputationFunctions.getScheduledRun(GetScheduledRunArgs.builder()
     *             .scheduledRunId(testScheduledRunOciMeteringComputationScheduledRun.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduledRunResult> getScheduledRunPlain(GetScheduledRunPlainArgs args) {
        return getScheduledRunPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Scheduled Run resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule run.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testScheduledRun = MeteringComputationFunctions.getScheduledRun(GetScheduledRunArgs.builder()
     *             .scheduledRunId(testScheduledRunOciMeteringComputationScheduledRun.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduledRunResult> getScheduledRun(GetScheduledRunArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getScheduledRun:getScheduledRun", TypeShape.of(GetScheduledRunResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Scheduled Run resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule run.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testScheduledRun = MeteringComputationFunctions.getScheduledRun(GetScheduledRunArgs.builder()
     *             .scheduledRunId(testScheduledRunOciMeteringComputationScheduledRun.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduledRunResult> getScheduledRunPlain(GetScheduledRunPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getScheduledRun:getScheduledRun", TypeShape.of(GetScheduledRunResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Scheduled Runs in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns schedule history list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testScheduledRuns = MeteringComputationFunctions.getScheduledRuns(GetScheduledRunsArgs.builder()
     *             .scheduleId(testSchedule.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduledRunsResult> getScheduledRuns(GetScheduledRunsArgs args) {
        return getScheduledRuns(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Scheduled Runs in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns schedule history list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testScheduledRuns = MeteringComputationFunctions.getScheduledRuns(GetScheduledRunsArgs.builder()
     *             .scheduleId(testSchedule.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduledRunsResult> getScheduledRunsPlain(GetScheduledRunsPlainArgs args) {
        return getScheduledRunsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Scheduled Runs in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns schedule history list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testScheduledRuns = MeteringComputationFunctions.getScheduledRuns(GetScheduledRunsArgs.builder()
     *             .scheduleId(testSchedule.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetScheduledRunsResult> getScheduledRuns(GetScheduledRunsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getScheduledRuns:getScheduledRuns", TypeShape.of(GetScheduledRunsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Scheduled Runs in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns schedule history list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetScheduledRunsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testScheduledRuns = MeteringComputationFunctions.getScheduledRuns(GetScheduledRunsArgs.builder()
     *             .scheduleId(testSchedule.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetScheduledRunsResult> getScheduledRunsPlain(GetScheduledRunsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getScheduledRuns:getScheduledRuns", TypeShape.of(GetScheduledRunsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Schedules in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSchedules = MeteringComputationFunctions.getSchedules(GetSchedulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .name(scheduleName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSchedulesResult> getSchedules(GetSchedulesArgs args) {
        return getSchedules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Schedules in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSchedules = MeteringComputationFunctions.getSchedules(GetSchedulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .name(scheduleName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSchedulesResult> getSchedulesPlain(GetSchedulesPlainArgs args) {
        return getSchedulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Schedules in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSchedules = MeteringComputationFunctions.getSchedules(GetSchedulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .name(scheduleName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSchedulesResult> getSchedules(GetSchedulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getSchedules:getSchedules", TypeShape.of(GetSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Schedules in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the saved schedule list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSchedules = MeteringComputationFunctions.getSchedules(GetSchedulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .name(scheduleName)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSchedulesResult> getSchedulesPlain(GetSchedulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getSchedules:getSchedules", TypeShape.of(GetSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Usage Carbon Emissions Config resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the configuration list for the UI drop-down list of carbon emission console.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsConfig = MeteringComputationFunctions.getUsageCarbonEmissionsConfig(GetUsageCarbonEmissionsConfigArgs.builder()
     *             .tenantId(testTenant.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsageCarbonEmissionsConfigResult> getUsageCarbonEmissionsConfig(GetUsageCarbonEmissionsConfigArgs args) {
        return getUsageCarbonEmissionsConfig(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Usage Carbon Emissions Config resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the configuration list for the UI drop-down list of carbon emission console.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsConfig = MeteringComputationFunctions.getUsageCarbonEmissionsConfig(GetUsageCarbonEmissionsConfigArgs.builder()
     *             .tenantId(testTenant.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsageCarbonEmissionsConfigResult> getUsageCarbonEmissionsConfigPlain(GetUsageCarbonEmissionsConfigPlainArgs args) {
        return getUsageCarbonEmissionsConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Usage Carbon Emissions Config resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the configuration list for the UI drop-down list of carbon emission console.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsConfig = MeteringComputationFunctions.getUsageCarbonEmissionsConfig(GetUsageCarbonEmissionsConfigArgs.builder()
     *             .tenantId(testTenant.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsageCarbonEmissionsConfigResult> getUsageCarbonEmissionsConfig(GetUsageCarbonEmissionsConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getUsageCarbonEmissionsConfig:getUsageCarbonEmissionsConfig", TypeShape.of(GetUsageCarbonEmissionsConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Usage Carbon Emissions Config resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the configuration list for the UI drop-down list of carbon emission console.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsConfig = MeteringComputationFunctions.getUsageCarbonEmissionsConfig(GetUsageCarbonEmissionsConfigArgs.builder()
     *             .tenantId(testTenant.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsageCarbonEmissionsConfigResult> getUsageCarbonEmissionsConfigPlain(GetUsageCarbonEmissionsConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getUsageCarbonEmissionsConfig:getUsageCarbonEmissionsConfig", TypeShape.of(GetUsageCarbonEmissionsConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Usage Carbon Emissions Queries in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the usage carbon emissions saved query list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsQueries = MeteringComputationFunctions.getUsageCarbonEmissionsQueries(GetUsageCarbonEmissionsQueriesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsageCarbonEmissionsQueriesResult> getUsageCarbonEmissionsQueries(GetUsageCarbonEmissionsQueriesArgs args) {
        return getUsageCarbonEmissionsQueries(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Usage Carbon Emissions Queries in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the usage carbon emissions saved query list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsQueries = MeteringComputationFunctions.getUsageCarbonEmissionsQueries(GetUsageCarbonEmissionsQueriesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsageCarbonEmissionsQueriesResult> getUsageCarbonEmissionsQueriesPlain(GetUsageCarbonEmissionsQueriesPlainArgs args) {
        return getUsageCarbonEmissionsQueriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Usage Carbon Emissions Queries in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the usage carbon emissions saved query list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsQueries = MeteringComputationFunctions.getUsageCarbonEmissionsQueries(GetUsageCarbonEmissionsQueriesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsageCarbonEmissionsQueriesResult> getUsageCarbonEmissionsQueries(GetUsageCarbonEmissionsQueriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getUsageCarbonEmissionsQueries:getUsageCarbonEmissionsQueries", TypeShape.of(GetUsageCarbonEmissionsQueriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Usage Carbon Emissions Queries in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the usage carbon emissions saved query list.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsQueries = MeteringComputationFunctions.getUsageCarbonEmissionsQueries(GetUsageCarbonEmissionsQueriesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsageCarbonEmissionsQueriesResult> getUsageCarbonEmissionsQueriesPlain(GetUsageCarbonEmissionsQueriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getUsageCarbonEmissionsQueries:getUsageCarbonEmissionsQueries", TypeShape.of(GetUsageCarbonEmissionsQueriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Usage Carbon Emissions Query resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the usage carbon emissions saved query.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsQuery = MeteringComputationFunctions.getUsageCarbonEmissionsQuery(GetUsageCarbonEmissionsQueryArgs.builder()
     *             .usageCarbonEmissionsQueryId(testUsageCarbonEmissionsQueryOciMeteringComputationUsageCarbonEmissionsQuery.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsageCarbonEmissionsQueryResult> getUsageCarbonEmissionsQuery(GetUsageCarbonEmissionsQueryArgs args) {
        return getUsageCarbonEmissionsQuery(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Usage Carbon Emissions Query resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the usage carbon emissions saved query.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsQuery = MeteringComputationFunctions.getUsageCarbonEmissionsQuery(GetUsageCarbonEmissionsQueryArgs.builder()
     *             .usageCarbonEmissionsQueryId(testUsageCarbonEmissionsQueryOciMeteringComputationUsageCarbonEmissionsQuery.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsageCarbonEmissionsQueryResult> getUsageCarbonEmissionsQueryPlain(GetUsageCarbonEmissionsQueryPlainArgs args) {
        return getUsageCarbonEmissionsQueryPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Usage Carbon Emissions Query resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the usage carbon emissions saved query.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsQuery = MeteringComputationFunctions.getUsageCarbonEmissionsQuery(GetUsageCarbonEmissionsQueryArgs.builder()
     *             .usageCarbonEmissionsQueryId(testUsageCarbonEmissionsQueryOciMeteringComputationUsageCarbonEmissionsQuery.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsageCarbonEmissionsQueryResult> getUsageCarbonEmissionsQuery(GetUsageCarbonEmissionsQueryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getUsageCarbonEmissionsQuery:getUsageCarbonEmissionsQuery", TypeShape.of(GetUsageCarbonEmissionsQueryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Usage Carbon Emissions Query resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Returns the usage carbon emissions saved query.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageCarbonEmissionsQueryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageCarbonEmissionsQuery = MeteringComputationFunctions.getUsageCarbonEmissionsQuery(GetUsageCarbonEmissionsQueryArgs.builder()
     *             .usageCarbonEmissionsQueryId(testUsageCarbonEmissionsQueryOciMeteringComputationUsageCarbonEmissionsQuery.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsageCarbonEmissionsQueryResult> getUsageCarbonEmissionsQueryPlain(GetUsageCarbonEmissionsQueryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getUsageCarbonEmissionsQuery:getUsageCarbonEmissionsQuery", TypeShape.of(GetUsageCarbonEmissionsQueryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Usage Statement Email Recipients Group resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Return the saved usage statement email recipient group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageStatementEmailRecipientsGroup = MeteringComputationFunctions.getUsageStatementEmailRecipientsGroup(GetUsageStatementEmailRecipientsGroupArgs.builder()
     *             .compartmentId(compartmentId)
     *             .emailRecipientsGroupId(testGroup.id())
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsageStatementEmailRecipientsGroupResult> getUsageStatementEmailRecipientsGroup(GetUsageStatementEmailRecipientsGroupArgs args) {
        return getUsageStatementEmailRecipientsGroup(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Usage Statement Email Recipients Group resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Return the saved usage statement email recipient group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageStatementEmailRecipientsGroup = MeteringComputationFunctions.getUsageStatementEmailRecipientsGroup(GetUsageStatementEmailRecipientsGroupArgs.builder()
     *             .compartmentId(compartmentId)
     *             .emailRecipientsGroupId(testGroup.id())
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsageStatementEmailRecipientsGroupResult> getUsageStatementEmailRecipientsGroupPlain(GetUsageStatementEmailRecipientsGroupPlainArgs args) {
        return getUsageStatementEmailRecipientsGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Usage Statement Email Recipients Group resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Return the saved usage statement email recipient group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageStatementEmailRecipientsGroup = MeteringComputationFunctions.getUsageStatementEmailRecipientsGroup(GetUsageStatementEmailRecipientsGroupArgs.builder()
     *             .compartmentId(compartmentId)
     *             .emailRecipientsGroupId(testGroup.id())
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsageStatementEmailRecipientsGroupResult> getUsageStatementEmailRecipientsGroup(GetUsageStatementEmailRecipientsGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getUsageStatementEmailRecipientsGroup:getUsageStatementEmailRecipientsGroup", TypeShape.of(GetUsageStatementEmailRecipientsGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Usage Statement Email Recipients Group resource in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Return the saved usage statement email recipient group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageStatementEmailRecipientsGroup = MeteringComputationFunctions.getUsageStatementEmailRecipientsGroup(GetUsageStatementEmailRecipientsGroupArgs.builder()
     *             .compartmentId(compartmentId)
     *             .emailRecipientsGroupId(testGroup.id())
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsageStatementEmailRecipientsGroupResult> getUsageStatementEmailRecipientsGroupPlain(GetUsageStatementEmailRecipientsGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getUsageStatementEmailRecipientsGroup:getUsageStatementEmailRecipientsGroup", TypeShape.of(GetUsageStatementEmailRecipientsGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Usage Statement Email Recipients Groups in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Return the saved usage statement email recipient group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageStatementEmailRecipientsGroups = MeteringComputationFunctions.getUsageStatementEmailRecipientsGroups(GetUsageStatementEmailRecipientsGroupsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsageStatementEmailRecipientsGroupsResult> getUsageStatementEmailRecipientsGroups(GetUsageStatementEmailRecipientsGroupsArgs args) {
        return getUsageStatementEmailRecipientsGroups(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Usage Statement Email Recipients Groups in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Return the saved usage statement email recipient group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageStatementEmailRecipientsGroups = MeteringComputationFunctions.getUsageStatementEmailRecipientsGroups(GetUsageStatementEmailRecipientsGroupsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsageStatementEmailRecipientsGroupsResult> getUsageStatementEmailRecipientsGroupsPlain(GetUsageStatementEmailRecipientsGroupsPlainArgs args) {
        return getUsageStatementEmailRecipientsGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Usage Statement Email Recipients Groups in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Return the saved usage statement email recipient group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageStatementEmailRecipientsGroups = MeteringComputationFunctions.getUsageStatementEmailRecipientsGroups(GetUsageStatementEmailRecipientsGroupsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetUsageStatementEmailRecipientsGroupsResult> getUsageStatementEmailRecipientsGroups(GetUsageStatementEmailRecipientsGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:MeteringComputation/getUsageStatementEmailRecipientsGroups:getUsageStatementEmailRecipientsGroups", TypeShape.of(GetUsageStatementEmailRecipientsGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Usage Statement Email Recipients Groups in Oracle Cloud Infrastructure Metering Computation service.
     * 
     * Return the saved usage statement email recipient group.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.MeteringComputation.MeteringComputationFunctions;
     * import com.pulumi.oci.MeteringComputation.inputs.GetUsageStatementEmailRecipientsGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testUsageStatementEmailRecipientsGroups = MeteringComputationFunctions.getUsageStatementEmailRecipientsGroups(GetUsageStatementEmailRecipientsGroupsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetUsageStatementEmailRecipientsGroupsResult> getUsageStatementEmailRecipientsGroupsPlain(GetUsageStatementEmailRecipientsGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:MeteringComputation/getUsageStatementEmailRecipientsGroups:getUsageStatementEmailRecipientsGroups", TypeShape.of(GetUsageStatementEmailRecipientsGroupsResult.class), args, Utilities.withVersion(options));
    }
}
