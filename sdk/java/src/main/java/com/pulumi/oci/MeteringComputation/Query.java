// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.MeteringComputation.QueryArgs;
import com.pulumi.oci.MeteringComputation.inputs.QueryState;
import com.pulumi.oci.MeteringComputation.outputs.QueryQueryDefinition;
import com.pulumi.oci.Utilities;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource provides the Query resource in Oracle Cloud Infrastructure Metering Computation service.
 * 
 * Returns the created query.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.MeteringComputation.Query;
 * import com.pulumi.oci.MeteringComputation.QueryArgs;
 * import com.pulumi.oci.MeteringComputation.inputs.QueryQueryDefinitionArgs;
 * import com.pulumi.oci.MeteringComputation.inputs.QueryQueryDefinitionCostAnalysisUiArgs;
 * import com.pulumi.oci.MeteringComputation.inputs.QueryQueryDefinitionReportQueryArgs;
 * import com.pulumi.oci.MeteringComputation.inputs.QueryQueryDefinitionReportQueryForecastArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testQuery = new Query(&#34;testQuery&#34;, QueryArgs.builder()        
 *             .compartmentId(var_.compartment_id())
 *             .queryDefinition(QueryQueryDefinitionArgs.builder()
 *                 .costAnalysisUi(QueryQueryDefinitionCostAnalysisUiArgs.builder()
 *                     .graph(var_.query_query_definition_cost_analysis_ui_graph())
 *                     .isCumulativeGraph(var_.query_query_definition_cost_analysis_ui_is_cumulative_graph())
 *                     .build())
 *                 .displayName(var_.query_query_definition_display_name())
 *                 .reportQuery(QueryQueryDefinitionReportQueryArgs.builder()
 *                     .granularity(var_.query_query_definition_report_query_granularity())
 *                     .tenantId(oci_metering_computation_tenant.test_tenant().id())
 *                     .compartmentDepth(var_.query_query_definition_report_query_compartment_depth())
 *                     .dateRangeName(var_.query_query_definition_report_query_date_range_name())
 *                     .filter(var_.query_query_definition_report_query_filter())
 *                     .forecast(QueryQueryDefinitionReportQueryForecastArgs.builder()
 *                         .timeForecastEnded(var_.query_query_definition_report_query_forecast_time_forecast_ended())
 *                         .forecastType(var_.query_query_definition_report_query_forecast_forecast_type())
 *                         .timeForecastStarted(var_.query_query_definition_report_query_forecast_time_forecast_started())
 *                         .build())
 *                     .groupBies(var_.query_query_definition_report_query_group_by())
 *                     .groupByTags(QueryQueryDefinitionReportQueryGroupByTagArgs.builder()
 *                         .key(var_.query_query_definition_report_query_group_by_tag_key())
 *                         .namespace(var_.query_query_definition_report_query_group_by_tag_namespace())
 *                         .value(var_.query_query_definition_report_query_group_by_tag_value())
 *                         .build())
 *                     .isAggregateByTime(var_.query_query_definition_report_query_is_aggregate_by_time())
 *                     .queryType(var_.query_query_definition_report_query_query_type())
 *                     .timeUsageEnded(var_.query_query_definition_report_query_time_usage_ended())
 *                     .timeUsageStarted(var_.query_query_definition_report_query_time_usage_started())
 *                     .build())
 *                 .version(var_.query_query_definition_version())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Queries can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:MeteringComputation/query:Query test_query &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:MeteringComputation/query:Query")
public class Query extends com.pulumi.resources.CustomResource {
    /**
     * The compartment OCID.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return The compartment OCID.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) The common fields for queries.
     * 
     */
    @Export(name="queryDefinition", type=QueryQueryDefinition.class, parameters={})
    private Output<QueryQueryDefinition> queryDefinition;

    /**
     * @return (Updatable) The common fields for queries.
     * 
     */
    public Output<QueryQueryDefinition> queryDefinition() {
        return this.queryDefinition;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Query(String name) {
        this(name, QueryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Query(String name, QueryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Query(String name, QueryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:MeteringComputation/query:Query", name, args == null ? QueryArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Query(String name, Output<String> id, @Nullable QueryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:MeteringComputation/query:Query", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Query get(String name, Output<String> id, @Nullable QueryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Query(name, id, state, options);
    }
}
