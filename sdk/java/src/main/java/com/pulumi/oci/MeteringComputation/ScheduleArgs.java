// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.MeteringComputation.inputs.ScheduleQueryPropertiesArgs;
import com.pulumi.oci.MeteringComputation.inputs.ScheduleResultLocationArgs;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScheduleArgs Empty = new ScheduleArgs();

    /**
     * The tenancy of the customer
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The tenancy of the customer
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The unique name of the schedule created by the user
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The unique name of the schedule created by the user
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The query properties.
     * 
     */
    @Import(name="queryProperties", required=true)
    private Output<ScheduleQueryPropertiesArgs> queryProperties;

    /**
     * @return The query properties.
     * 
     */
    public Output<ScheduleQueryPropertiesArgs> queryProperties() {
        return this.queryProperties;
    }

    /**
     * The location where usage/cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
     * 
     */
    @Import(name="resultLocation", required=true)
    private Output<ScheduleResultLocationArgs> resultLocation;

    /**
     * @return The location where usage/cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
     * 
     */
    public Output<ScheduleResultLocationArgs> resultLocation() {
        return this.resultLocation;
    }

    /**
     * In x-obmcs-recurring-time format shown here: https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 Describes the frequency of when the schedule will be run
     * 
     */
    @Import(name="scheduleRecurrences", required=true)
    private Output<String> scheduleRecurrences;

    /**
     * @return In x-obmcs-recurring-time format shown here: https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 Describes the frequency of when the schedule will be run
     * 
     */
    public Output<String> scheduleRecurrences() {
        return this.scheduleRecurrences;
    }

    /**
     * The date and time of the first time job execution
     * 
     */
    @Import(name="timeScheduled", required=true)
    private Output<String> timeScheduled;

    /**
     * @return The date and time of the first time job execution
     * 
     */
    public Output<String> timeScheduled() {
        return this.timeScheduled;
    }

    private ScheduleArgs() {}

    private ScheduleArgs(ScheduleArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.freeformTags = $.freeformTags;
        this.name = $.name;
        this.queryProperties = $.queryProperties;
        this.resultLocation = $.resultLocation;
        this.scheduleRecurrences = $.scheduleRecurrences;
        this.timeScheduled = $.timeScheduled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduleArgs $;

        public Builder() {
            $ = new ScheduleArgs();
        }

        public Builder(ScheduleArgs defaults) {
            $ = new ScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The tenancy of the customer
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The tenancy of the customer
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param name The unique name of the schedule created by the user
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique name of the schedule created by the user
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param queryProperties The query properties.
         * 
         * @return builder
         * 
         */
        public Builder queryProperties(Output<ScheduleQueryPropertiesArgs> queryProperties) {
            $.queryProperties = queryProperties;
            return this;
        }

        /**
         * @param queryProperties The query properties.
         * 
         * @return builder
         * 
         */
        public Builder queryProperties(ScheduleQueryPropertiesArgs queryProperties) {
            return queryProperties(Output.of(queryProperties));
        }

        /**
         * @param resultLocation The location where usage/cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
         * 
         * @return builder
         * 
         */
        public Builder resultLocation(Output<ScheduleResultLocationArgs> resultLocation) {
            $.resultLocation = resultLocation;
            return this;
        }

        /**
         * @param resultLocation The location where usage/cost CSVs will be uploaded defined by `locationType`, which corresponds with type-specific characteristics.
         * 
         * @return builder
         * 
         */
        public Builder resultLocation(ScheduleResultLocationArgs resultLocation) {
            return resultLocation(Output.of(resultLocation));
        }

        /**
         * @param scheduleRecurrences In x-obmcs-recurring-time format shown here: https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 Describes the frequency of when the schedule will be run
         * 
         * @return builder
         * 
         */
        public Builder scheduleRecurrences(Output<String> scheduleRecurrences) {
            $.scheduleRecurrences = scheduleRecurrences;
            return this;
        }

        /**
         * @param scheduleRecurrences In x-obmcs-recurring-time format shown here: https://datatracker.ietf.org/doc/html/rfc5545#section-3.3.10 Describes the frequency of when the schedule will be run
         * 
         * @return builder
         * 
         */
        public Builder scheduleRecurrences(String scheduleRecurrences) {
            return scheduleRecurrences(Output.of(scheduleRecurrences));
        }

        /**
         * @param timeScheduled The date and time of the first time job execution
         * 
         * @return builder
         * 
         */
        public Builder timeScheduled(Output<String> timeScheduled) {
            $.timeScheduled = timeScheduled;
            return this;
        }

        /**
         * @param timeScheduled The date and time of the first time job execution
         * 
         * @return builder
         * 
         */
        public Builder timeScheduled(String timeScheduled) {
            return timeScheduled(Output.of(timeScheduled));
        }

        public ScheduleArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.queryProperties = Objects.requireNonNull($.queryProperties, "expected parameter 'queryProperties' to be non-null");
            $.resultLocation = Objects.requireNonNull($.resultLocation, "expected parameter 'resultLocation' to be non-null");
            $.scheduleRecurrences = Objects.requireNonNull($.scheduleRecurrences, "expected parameter 'scheduleRecurrences' to be non-null");
            $.timeScheduled = Objects.requireNonNull($.timeScheduled, "expected parameter 'timeScheduled' to be non-null");
            return $;
        }
    }

}
