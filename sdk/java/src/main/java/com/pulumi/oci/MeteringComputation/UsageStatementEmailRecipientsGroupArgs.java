// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.MeteringComputation.inputs.UsageStatementEmailRecipientsGroupRecipientsListArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UsageStatementEmailRecipientsGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final UsageStatementEmailRecipientsGroupArgs Empty = new UsageStatementEmailRecipientsGroupArgs();

    /**
     * (Updatable) The customer tenancy.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The customer tenancy.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="emailRecipientsGroupId")
    private @Nullable Output<String> emailRecipientsGroupId;

    public Optional<Output<String>> emailRecipientsGroupId() {
        return Optional.ofNullable(this.emailRecipientsGroupId);
    }

    /**
     * (Updatable) The list of recipients that will receive usage statement emails.
     * 
     */
    @Import(name="recipientsLists", required=true)
    private Output<List<UsageStatementEmailRecipientsGroupRecipientsListArgs>> recipientsLists;

    /**
     * @return (Updatable) The list of recipients that will receive usage statement emails.
     * 
     */
    public Output<List<UsageStatementEmailRecipientsGroupRecipientsListArgs>> recipientsLists() {
        return this.recipientsLists;
    }

    /**
     * The usage statement subscription unique OCID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="subscriptionId", required=true)
    private Output<String> subscriptionId;

    /**
     * @return The usage statement subscription unique OCID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    private UsageStatementEmailRecipientsGroupArgs() {}

    private UsageStatementEmailRecipientsGroupArgs(UsageStatementEmailRecipientsGroupArgs $) {
        this.compartmentId = $.compartmentId;
        this.emailRecipientsGroupId = $.emailRecipientsGroupId;
        this.recipientsLists = $.recipientsLists;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UsageStatementEmailRecipientsGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UsageStatementEmailRecipientsGroupArgs $;

        public Builder() {
            $ = new UsageStatementEmailRecipientsGroupArgs();
        }

        public Builder(UsageStatementEmailRecipientsGroupArgs defaults) {
            $ = new UsageStatementEmailRecipientsGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The customer tenancy.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The customer tenancy.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder emailRecipientsGroupId(@Nullable Output<String> emailRecipientsGroupId) {
            $.emailRecipientsGroupId = emailRecipientsGroupId;
            return this;
        }

        public Builder emailRecipientsGroupId(String emailRecipientsGroupId) {
            return emailRecipientsGroupId(Output.of(emailRecipientsGroupId));
        }

        /**
         * @param recipientsLists (Updatable) The list of recipients that will receive usage statement emails.
         * 
         * @return builder
         * 
         */
        public Builder recipientsLists(Output<List<UsageStatementEmailRecipientsGroupRecipientsListArgs>> recipientsLists) {
            $.recipientsLists = recipientsLists;
            return this;
        }

        /**
         * @param recipientsLists (Updatable) The list of recipients that will receive usage statement emails.
         * 
         * @return builder
         * 
         */
        public Builder recipientsLists(List<UsageStatementEmailRecipientsGroupRecipientsListArgs> recipientsLists) {
            return recipientsLists(Output.of(recipientsLists));
        }

        /**
         * @param recipientsLists (Updatable) The list of recipients that will receive usage statement emails.
         * 
         * @return builder
         * 
         */
        public Builder recipientsLists(UsageStatementEmailRecipientsGroupRecipientsListArgs... recipientsLists) {
            return recipientsLists(List.of(recipientsLists));
        }

        /**
         * @param subscriptionId The usage statement subscription unique OCID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The usage statement subscription unique OCID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        public UsageStatementEmailRecipientsGroupArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("UsageStatementEmailRecipientsGroupArgs", "compartmentId");
            }
            if ($.recipientsLists == null) {
                throw new MissingRequiredPropertyException("UsageStatementEmailRecipientsGroupArgs", "recipientsLists");
            }
            if ($.subscriptionId == null) {
                throw new MissingRequiredPropertyException("UsageStatementEmailRecipientsGroupArgs", "subscriptionId");
            }
            return $;
        }
    }

}
