// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetCleanEnergyUsageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCleanEnergyUsageArgs Empty = new GetCleanEnergyUsageArgs();

    /**
     * The region.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The region.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private GetCleanEnergyUsageArgs() {}

    private GetCleanEnergyUsageArgs(GetCleanEnergyUsageArgs $) {
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCleanEnergyUsageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCleanEnergyUsageArgs $;

        public Builder() {
            $ = new GetCleanEnergyUsageArgs();
        }

        public Builder(GetCleanEnergyUsageArgs defaults) {
            $ = new GetCleanEnergyUsageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param region The region.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public GetCleanEnergyUsageArgs build() {
            if ($.region == null) {
                throw new MissingRequiredPropertyException("GetCleanEnergyUsageArgs", "region");
            }
            return $;
        }
    }

}
