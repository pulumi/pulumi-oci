// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.MeteringComputation.inputs.UsageStatementEmailRecipientsGroupRecipientsListArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UsageStatementEmailRecipientsGroupState extends com.pulumi.resources.ResourceArgs {

    public static final UsageStatementEmailRecipientsGroupState Empty = new UsageStatementEmailRecipientsGroupState();

    /**
     * (Updatable) The customer tenancy.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The customer tenancy.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="emailRecipientsGroupId")
    private @Nullable Output<String> emailRecipientsGroupId;

    public Optional<Output<String>> emailRecipientsGroupId() {
        return Optional.ofNullable(this.emailRecipientsGroupId);
    }

    /**
     * (Updatable) The list of recipient will receive the usage statement email.
     * 
     */
    @Import(name="recipientsLists")
    private @Nullable Output<List<UsageStatementEmailRecipientsGroupRecipientsListArgs>> recipientsLists;

    /**
     * @return (Updatable) The list of recipient will receive the usage statement email.
     * 
     */
    public Optional<Output<List<UsageStatementEmailRecipientsGroupRecipientsListArgs>>> recipientsLists() {
        return Optional.ofNullable(this.recipientsLists);
    }

    /**
     * (Updatable) The email recipient lifecycle state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The email recipient lifecycle state.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The UsageStatement Subscription unique OCID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return The UsageStatement Subscription unique OCID.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    private UsageStatementEmailRecipientsGroupState() {}

    private UsageStatementEmailRecipientsGroupState(UsageStatementEmailRecipientsGroupState $) {
        this.compartmentId = $.compartmentId;
        this.emailRecipientsGroupId = $.emailRecipientsGroupId;
        this.recipientsLists = $.recipientsLists;
        this.state = $.state;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UsageStatementEmailRecipientsGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UsageStatementEmailRecipientsGroupState $;

        public Builder() {
            $ = new UsageStatementEmailRecipientsGroupState();
        }

        public Builder(UsageStatementEmailRecipientsGroupState defaults) {
            $ = new UsageStatementEmailRecipientsGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The customer tenancy.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The customer tenancy.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder emailRecipientsGroupId(@Nullable Output<String> emailRecipientsGroupId) {
            $.emailRecipientsGroupId = emailRecipientsGroupId;
            return this;
        }

        public Builder emailRecipientsGroupId(String emailRecipientsGroupId) {
            return emailRecipientsGroupId(Output.of(emailRecipientsGroupId));
        }

        /**
         * @param recipientsLists (Updatable) The list of recipient will receive the usage statement email.
         * 
         * @return builder
         * 
         */
        public Builder recipientsLists(@Nullable Output<List<UsageStatementEmailRecipientsGroupRecipientsListArgs>> recipientsLists) {
            $.recipientsLists = recipientsLists;
            return this;
        }

        /**
         * @param recipientsLists (Updatable) The list of recipient will receive the usage statement email.
         * 
         * @return builder
         * 
         */
        public Builder recipientsLists(List<UsageStatementEmailRecipientsGroupRecipientsListArgs> recipientsLists) {
            return recipientsLists(Output.of(recipientsLists));
        }

        /**
         * @param recipientsLists (Updatable) The list of recipient will receive the usage statement email.
         * 
         * @return builder
         * 
         */
        public Builder recipientsLists(UsageStatementEmailRecipientsGroupRecipientsListArgs... recipientsLists) {
            return recipientsLists(List.of(recipientsLists));
        }

        /**
         * @param state (Updatable) The email recipient lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The email recipient lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param subscriptionId The UsageStatement Subscription unique OCID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The UsageStatement Subscription unique OCID.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        public UsageStatementEmailRecipientsGroupState build() {
            return $;
        }
    }

}
