// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAverageCarbonEmissionResult {
    /**
     * @return The average carbon emissions by SKU.
     * 
     */
    private Double averageCarbonEmission;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The SKU part number.
     * 
     */
    private String skuPartNumber;

    private GetAverageCarbonEmissionResult() {}
    /**
     * @return The average carbon emissions by SKU.
     * 
     */
    public Double averageCarbonEmission() {
        return this.averageCarbonEmission;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The SKU part number.
     * 
     */
    public String skuPartNumber() {
        return this.skuPartNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAverageCarbonEmissionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double averageCarbonEmission;
        private String id;
        private String skuPartNumber;
        public Builder() {}
        public Builder(GetAverageCarbonEmissionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.averageCarbonEmission = defaults.averageCarbonEmission;
    	      this.id = defaults.id;
    	      this.skuPartNumber = defaults.skuPartNumber;
        }

        @CustomType.Setter
        public Builder averageCarbonEmission(Double averageCarbonEmission) {
            if (averageCarbonEmission == null) {
              throw new MissingRequiredPropertyException("GetAverageCarbonEmissionResult", "averageCarbonEmission");
            }
            this.averageCarbonEmission = averageCarbonEmission;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAverageCarbonEmissionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder skuPartNumber(String skuPartNumber) {
            if (skuPartNumber == null) {
              throw new MissingRequiredPropertyException("GetAverageCarbonEmissionResult", "skuPartNumber");
            }
            this.skuPartNumber = skuPartNumber;
            return this;
        }
        public GetAverageCarbonEmissionResult build() {
            final var _resultValue = new GetAverageCarbonEmissionResult();
            _resultValue.averageCarbonEmission = averageCarbonEmission;
            _resultValue.id = id;
            _resultValue.skuPartNumber = skuPartNumber;
            return _resultValue;
        }
    }
}
