// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.MeteringComputation.outputs.GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi;
import com.pulumi.oci.MeteringComputation.outputs.GetQueriesQueryCollectionItemQueryDefinitionReportQuery;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetQueriesQueryCollectionItemQueryDefinition {
    /**
     * @return The common fields for Cost Analysis UI rendering.
     * 
     */
    private @Nullable List<GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi> costAnalysisUis;
    /**
     * @return The query display name. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The request of the generated Cost Analysis report.
     * 
     */
    private @Nullable List<GetQueriesQueryCollectionItemQueryDefinitionReportQuery> reportQueries;
    /**
     * @return The saved query version.
     * 
     */
    private @Nullable Double version;

    private GetQueriesQueryCollectionItemQueryDefinition() {}
    /**
     * @return The common fields for Cost Analysis UI rendering.
     * 
     */
    public List<GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi> costAnalysisUis() {
        return this.costAnalysisUis == null ? List.of() : this.costAnalysisUis;
    }
    /**
     * @return The query display name. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The request of the generated Cost Analysis report.
     * 
     */
    public List<GetQueriesQueryCollectionItemQueryDefinitionReportQuery> reportQueries() {
        return this.reportQueries == null ? List.of() : this.reportQueries;
    }
    /**
     * @return The saved query version.
     * 
     */
    public Optional<Double> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueriesQueryCollectionItemQueryDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi> costAnalysisUis;
        private @Nullable String displayName;
        private @Nullable List<GetQueriesQueryCollectionItemQueryDefinitionReportQuery> reportQueries;
        private @Nullable Double version;
        public Builder() {}
        public Builder(GetQueriesQueryCollectionItemQueryDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.costAnalysisUis = defaults.costAnalysisUis;
    	      this.displayName = defaults.displayName;
    	      this.reportQueries = defaults.reportQueries;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder costAnalysisUis(@Nullable List<GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi> costAnalysisUis) {
            this.costAnalysisUis = costAnalysisUis;
            return this;
        }
        public Builder costAnalysisUis(GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi... costAnalysisUis) {
            return costAnalysisUis(List.of(costAnalysisUis));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder reportQueries(@Nullable List<GetQueriesQueryCollectionItemQueryDefinitionReportQuery> reportQueries) {
            this.reportQueries = reportQueries;
            return this;
        }
        public Builder reportQueries(GetQueriesQueryCollectionItemQueryDefinitionReportQuery... reportQueries) {
            return reportQueries(List.of(reportQueries));
        }
        @CustomType.Setter
        public Builder version(@Nullable Double version) {
            this.version = version;
            return this;
        }
        public GetQueriesQueryCollectionItemQueryDefinition build() {
            final var o = new GetQueriesQueryCollectionItemQueryDefinition();
            o.costAnalysisUis = costAnalysisUis;
            o.displayName = displayName;
            o.reportQueries = reportQueries;
            o.version = version;
            return o;
        }
    }
}
