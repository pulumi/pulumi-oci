// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetQueryQueryDefinitionReportQueryForecast {
    /**
     * @return BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
     * 
     */
    private String forecastType;
    /**
     * @return The forecast end time.
     * 
     */
    private String timeForecastEnded;
    /**
     * @return The forecast start time. Defaults to UTC-1 if not specified.
     * 
     */
    private String timeForecastStarted;

    private GetQueryQueryDefinitionReportQueryForecast() {}
    /**
     * @return BASIC uses the exponential smoothing (ETS) model to project future usage/costs based on history data. The basis for projections is a periodic set of equivalent historical days for which the projection is being made.
     * 
     */
    public String forecastType() {
        return this.forecastType;
    }
    /**
     * @return The forecast end time.
     * 
     */
    public String timeForecastEnded() {
        return this.timeForecastEnded;
    }
    /**
     * @return The forecast start time. Defaults to UTC-1 if not specified.
     * 
     */
    public String timeForecastStarted() {
        return this.timeForecastStarted;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueryQueryDefinitionReportQueryForecast defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String forecastType;
        private String timeForecastEnded;
        private String timeForecastStarted;
        public Builder() {}
        public Builder(GetQueryQueryDefinitionReportQueryForecast defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.forecastType = defaults.forecastType;
    	      this.timeForecastEnded = defaults.timeForecastEnded;
    	      this.timeForecastStarted = defaults.timeForecastStarted;
        }

        @CustomType.Setter
        public Builder forecastType(String forecastType) {
            this.forecastType = Objects.requireNonNull(forecastType);
            return this;
        }
        @CustomType.Setter
        public Builder timeForecastEnded(String timeForecastEnded) {
            this.timeForecastEnded = Objects.requireNonNull(timeForecastEnded);
            return this;
        }
        @CustomType.Setter
        public Builder timeForecastStarted(String timeForecastStarted) {
            this.timeForecastStarted = Objects.requireNonNull(timeForecastStarted);
            return this;
        }
        public GetQueryQueryDefinitionReportQueryForecast build() {
            final var _resultValue = new GetQueryQueryDefinitionReportQueryForecast();
            _resultValue.forecastType = forecastType;
            _resultValue.timeForecastEnded = timeForecastEnded;
            _resultValue.timeForecastStarted = timeForecastStarted;
            return _resultValue;
        }
    }
}
