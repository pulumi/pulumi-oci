// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.MeteringComputation.outputs.GetQueryQueryDefinition;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetQueryResult {
    /**
     * @return The compartment OCID.
     * 
     */
    private String compartmentId;
    /**
     * @return The query OCID.
     * 
     */
    private String id;
    /**
     * @return The common fields for queries.
     * 
     */
    private List<GetQueryQueryDefinition> queryDefinitions;
    private String queryId;

    private GetQueryResult() {}
    /**
     * @return The compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The query OCID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The common fields for queries.
     * 
     */
    public List<GetQueryQueryDefinition> queryDefinitions() {
        return this.queryDefinitions;
    }
    public String queryId() {
        return this.queryId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String id;
        private List<GetQueryQueryDefinition> queryDefinitions;
        private String queryId;
        public Builder() {}
        public Builder(GetQueryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.id = defaults.id;
    	      this.queryDefinitions = defaults.queryDefinitions;
    	      this.queryId = defaults.queryId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetQueryResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetQueryResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder queryDefinitions(List<GetQueryQueryDefinition> queryDefinitions) {
            if (queryDefinitions == null) {
              throw new MissingRequiredPropertyException("GetQueryResult", "queryDefinitions");
            }
            this.queryDefinitions = queryDefinitions;
            return this;
        }
        public Builder queryDefinitions(GetQueryQueryDefinition... queryDefinitions) {
            return queryDefinitions(List.of(queryDefinitions));
        }
        @CustomType.Setter
        public Builder queryId(String queryId) {
            if (queryId == null) {
              throw new MissingRequiredPropertyException("GetQueryResult", "queryId");
            }
            this.queryId = queryId;
            return this;
        }
        public GetQueryResult build() {
            final var _resultValue = new GetQueryResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.id = id;
            _resultValue.queryDefinitions = queryDefinitions;
            _resultValue.queryId = queryId;
            return _resultValue;
        }
    }
}
