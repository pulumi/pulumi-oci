// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetScheduleResultLocation {
    /**
     * @return The bucket name where usage or cost CSVs will be uploaded.
     * 
     */
    private String bucket;
    /**
     * @return Defines the type of location where the usage or cost CSVs will be stored.
     * 
     */
    private String locationType;
    /**
     * @return The namespace needed to determine the object storage bucket.
     * 
     */
    private String namespace;
    /**
     * @return The destination Object Store Region specified by the customer.
     * 
     */
    private String region;

    private GetScheduleResultLocation() {}
    /**
     * @return The bucket name where usage or cost CSVs will be uploaded.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return Defines the type of location where the usage or cost CSVs will be stored.
     * 
     */
    public String locationType() {
        return this.locationType;
    }
    /**
     * @return The namespace needed to determine the object storage bucket.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The destination Object Store Region specified by the customer.
     * 
     */
    public String region() {
        return this.region;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduleResultLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private String locationType;
        private String namespace;
        private String region;
        public Builder() {}
        public Builder(GetScheduleResultLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.locationType = defaults.locationType;
    	      this.namespace = defaults.namespace;
    	      this.region = defaults.region;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("GetScheduleResultLocation", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder locationType(String locationType) {
            if (locationType == null) {
              throw new MissingRequiredPropertyException("GetScheduleResultLocation", "locationType");
            }
            this.locationType = locationType;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetScheduleResultLocation", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetScheduleResultLocation", "region");
            }
            this.region = region;
            return this;
        }
        public GetScheduleResultLocation build() {
            final var _resultValue = new GetScheduleResultLocation();
            _resultValue.bucket = bucket;
            _resultValue.locationType = locationType;
            _resultValue.namespace = namespace;
            _resultValue.region = region;
            return _resultValue;
        }
    }
}
