// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetScheduledRunResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return Additional details about scheduled run failure
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return The ocid representing unique shedule
     * 
     */
    private @Nullable String scheduleId;
    private String scheduledRunId;
    /**
     * @return Specifies if the schedule job was run successfully or not.
     * 
     */
    private @Nullable String state;
    /**
     * @return The time when schedule started executing
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time when schedule finished executing
     * 
     */
    private @Nullable String timeFinished;

    private GetScheduledRunResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Additional details about scheduled run failure
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return The ocid representing unique shedule
     * 
     */
    public Optional<String> scheduleId() {
        return Optional.ofNullable(this.scheduleId);
    }
    public String scheduledRunId() {
        return this.scheduledRunId;
    }
    /**
     * @return Specifies if the schedule job was run successfully or not.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The time when schedule started executing
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time when schedule finished executing
     * 
     */
    public Optional<String> timeFinished() {
        return Optional.ofNullable(this.timeFinished);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduledRunResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String id;
        private @Nullable String lifecycleDetails;
        private @Nullable String scheduleId;
        private String scheduledRunId;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeFinished;
        public Builder() {}
        public Builder(GetScheduledRunResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.scheduleId = defaults.scheduleId;
    	      this.scheduledRunId = defaults.scheduledRunId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeFinished = defaults.timeFinished;
        }

        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleId(@Nullable String scheduleId) {
            this.scheduleId = scheduleId;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledRunId(String scheduledRunId) {
            this.scheduledRunId = Objects.requireNonNull(scheduledRunId);
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(@Nullable String timeFinished) {
            this.timeFinished = timeFinished;
            return this;
        }
        public GetScheduledRunResult build() {
            final var o = new GetScheduledRunResult();
            o.id = id;
            o.lifecycleDetails = lifecycleDetails;
            o.scheduleId = scheduleId;
            o.scheduledRunId = scheduledRunId;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeFinished = timeFinished;
            return o;
        }
    }
}
