// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetScheduledRunResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Additional details about scheduled run failure
     * 
     */
    private String lifecycleDetails;
    /**
     * @return The ocid representing unique shedule
     * 
     */
    private String scheduleId;
    private String scheduledRunId;
    /**
     * @return Specifies if the schedule job was run successfully or not.
     * 
     */
    private String state;
    /**
     * @return The time when schedule started executing
     * 
     */
    private String timeCreated;
    /**
     * @return The time when schedule finished executing
     * 
     */
    private String timeFinished;

    private GetScheduledRunResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Additional details about scheduled run failure
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The ocid representing unique shedule
     * 
     */
    public String scheduleId() {
        return this.scheduleId;
    }
    public String scheduledRunId() {
        return this.scheduledRunId;
    }
    /**
     * @return Specifies if the schedule job was run successfully or not.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time when schedule started executing
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time when schedule finished executing
     * 
     */
    public String timeFinished() {
        return this.timeFinished;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduledRunResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String lifecycleDetails;
        private String scheduleId;
        private String scheduledRunId;
        private String state;
        private String timeCreated;
        private String timeFinished;
        public Builder() {}
        public Builder(GetScheduledRunResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.scheduleId = defaults.scheduleId;
    	      this.scheduledRunId = defaults.scheduledRunId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeFinished = defaults.timeFinished;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetScheduledRunResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetScheduledRunResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleId(String scheduleId) {
            if (scheduleId == null) {
              throw new MissingRequiredPropertyException("GetScheduledRunResult", "scheduleId");
            }
            this.scheduleId = scheduleId;
            return this;
        }
        @CustomType.Setter
        public Builder scheduledRunId(String scheduledRunId) {
            if (scheduledRunId == null) {
              throw new MissingRequiredPropertyException("GetScheduledRunResult", "scheduledRunId");
            }
            this.scheduledRunId = scheduledRunId;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetScheduledRunResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetScheduledRunResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeFinished(String timeFinished) {
            if (timeFinished == null) {
              throw new MissingRequiredPropertyException("GetScheduledRunResult", "timeFinished");
            }
            this.timeFinished = timeFinished;
            return this;
        }
        public GetScheduledRunResult build() {
            final var _resultValue = new GetScheduledRunResult();
            _resultValue.id = id;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.scheduleId = scheduleId;
            _resultValue.scheduledRunId = scheduledRunId;
            _resultValue.state = state;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeFinished = timeFinished;
            return _resultValue;
        }
    }
}
