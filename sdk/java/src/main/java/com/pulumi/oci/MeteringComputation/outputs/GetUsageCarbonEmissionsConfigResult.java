// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.MeteringComputation.outputs.GetUsageCarbonEmissionsConfigItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUsageCarbonEmissionsConfigResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of available configurations.
     * 
     */
    private List<GetUsageCarbonEmissionsConfigItem> items;
    private String tenantId;

    private GetUsageCarbonEmissionsConfigResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of available configurations.
     * 
     */
    public List<GetUsageCarbonEmissionsConfigItem> items() {
        return this.items;
    }
    public String tenantId() {
        return this.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsageCarbonEmissionsConfigResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetUsageCarbonEmissionsConfigItem> items;
        private String tenantId;
        public Builder() {}
        public Builder(GetUsageCarbonEmissionsConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUsageCarbonEmissionsConfigResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetUsageCarbonEmissionsConfigItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetUsageCarbonEmissionsConfigResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetUsageCarbonEmissionsConfigItem... items) {
            return items(List.of(items));
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            if (tenantId == null) {
              throw new MissingRequiredPropertyException("GetUsageCarbonEmissionsConfigResult", "tenantId");
            }
            this.tenantId = tenantId;
            return this;
        }
        public GetUsageCarbonEmissionsConfigResult build() {
            final var _resultValue = new GetUsageCarbonEmissionsConfigResult();
            _resultValue.id = id;
            _resultValue.items = items;
            _resultValue.tenantId = tenantId;
            return _resultValue;
        }
    }
}
