// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.MeteringComputation.outputs.GetUsageStatementEmailRecipientsGroupRecipientsList;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUsageStatementEmailRecipientsGroupResult {
    /**
     * @return The customer tenancy OCID.
     * 
     */
    private String compartmentId;
    private String emailRecipientsGroupId;
    /**
     * @return The usage statement email recipients group OCID.
     * 
     */
    private String id;
    /**
     * @return The list of recipients that will receive usage statement emails.
     * 
     */
    private List<GetUsageStatementEmailRecipientsGroupRecipientsList> recipientsLists;
    /**
     * @return The email recipients group lifecycle state.
     * 
     */
    private String state;
    private String subscriptionId;

    private GetUsageStatementEmailRecipientsGroupResult() {}
    /**
     * @return The customer tenancy OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String emailRecipientsGroupId() {
        return this.emailRecipientsGroupId;
    }
    /**
     * @return The usage statement email recipients group OCID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of recipients that will receive usage statement emails.
     * 
     */
    public List<GetUsageStatementEmailRecipientsGroupRecipientsList> recipientsLists() {
        return this.recipientsLists;
    }
    /**
     * @return The email recipients group lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }
    public String subscriptionId() {
        return this.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUsageStatementEmailRecipientsGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String emailRecipientsGroupId;
        private String id;
        private List<GetUsageStatementEmailRecipientsGroupRecipientsList> recipientsLists;
        private String state;
        private String subscriptionId;
        public Builder() {}
        public Builder(GetUsageStatementEmailRecipientsGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.emailRecipientsGroupId = defaults.emailRecipientsGroupId;
    	      this.id = defaults.id;
    	      this.recipientsLists = defaults.recipientsLists;
    	      this.state = defaults.state;
    	      this.subscriptionId = defaults.subscriptionId;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetUsageStatementEmailRecipientsGroupResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder emailRecipientsGroupId(String emailRecipientsGroupId) {
            if (emailRecipientsGroupId == null) {
              throw new MissingRequiredPropertyException("GetUsageStatementEmailRecipientsGroupResult", "emailRecipientsGroupId");
            }
            this.emailRecipientsGroupId = emailRecipientsGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUsageStatementEmailRecipientsGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder recipientsLists(List<GetUsageStatementEmailRecipientsGroupRecipientsList> recipientsLists) {
            if (recipientsLists == null) {
              throw new MissingRequiredPropertyException("GetUsageStatementEmailRecipientsGroupResult", "recipientsLists");
            }
            this.recipientsLists = recipientsLists;
            return this;
        }
        public Builder recipientsLists(GetUsageStatementEmailRecipientsGroupRecipientsList... recipientsLists) {
            return recipientsLists(List.of(recipientsLists));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetUsageStatementEmailRecipientsGroupResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("GetUsageStatementEmailRecipientsGroupResult", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        public GetUsageStatementEmailRecipientsGroupResult build() {
            final var _resultValue = new GetUsageStatementEmailRecipientsGroupResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.emailRecipientsGroupId = emailRecipientsGroupId;
            _resultValue.id = id;
            _resultValue.recipientsLists = recipientsLists;
            _resultValue.state = state;
            _resultValue.subscriptionId = subscriptionId;
            return _resultValue;
        }
    }
}
