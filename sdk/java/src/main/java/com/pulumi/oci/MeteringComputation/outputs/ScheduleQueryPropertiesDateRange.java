// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScheduleQueryPropertiesDateRange {
    /**
     * @return Defines whether the schedule date range is STATIC or DYNAMIC
     * 
     */
    private final String dateRangeType;
    private final @Nullable String dynamicDateRangeType;
    /**
     * @return The usage end time.
     * 
     */
    private final @Nullable String timeUsageEnded;
    /**
     * @return The usage start time.
     * 
     */
    private final @Nullable String timeUsageStarted;

    @CustomType.Constructor
    private ScheduleQueryPropertiesDateRange(
        @CustomType.Parameter("dateRangeType") String dateRangeType,
        @CustomType.Parameter("dynamicDateRangeType") @Nullable String dynamicDateRangeType,
        @CustomType.Parameter("timeUsageEnded") @Nullable String timeUsageEnded,
        @CustomType.Parameter("timeUsageStarted") @Nullable String timeUsageStarted) {
        this.dateRangeType = dateRangeType;
        this.dynamicDateRangeType = dynamicDateRangeType;
        this.timeUsageEnded = timeUsageEnded;
        this.timeUsageStarted = timeUsageStarted;
    }

    /**
     * @return Defines whether the schedule date range is STATIC or DYNAMIC
     * 
     */
    public String dateRangeType() {
        return this.dateRangeType;
    }
    public Optional<String> dynamicDateRangeType() {
        return Optional.ofNullable(this.dynamicDateRangeType);
    }
    /**
     * @return The usage end time.
     * 
     */
    public Optional<String> timeUsageEnded() {
        return Optional.ofNullable(this.timeUsageEnded);
    }
    /**
     * @return The usage start time.
     * 
     */
    public Optional<String> timeUsageStarted() {
        return Optional.ofNullable(this.timeUsageStarted);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduleQueryPropertiesDateRange defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dateRangeType;
        private @Nullable String dynamicDateRangeType;
        private @Nullable String timeUsageEnded;
        private @Nullable String timeUsageStarted;

        public Builder() {
    	      // Empty
        }

        public Builder(ScheduleQueryPropertiesDateRange defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dateRangeType = defaults.dateRangeType;
    	      this.dynamicDateRangeType = defaults.dynamicDateRangeType;
    	      this.timeUsageEnded = defaults.timeUsageEnded;
    	      this.timeUsageStarted = defaults.timeUsageStarted;
        }

        public Builder dateRangeType(String dateRangeType) {
            this.dateRangeType = Objects.requireNonNull(dateRangeType);
            return this;
        }
        public Builder dynamicDateRangeType(@Nullable String dynamicDateRangeType) {
            this.dynamicDateRangeType = dynamicDateRangeType;
            return this;
        }
        public Builder timeUsageEnded(@Nullable String timeUsageEnded) {
            this.timeUsageEnded = timeUsageEnded;
            return this;
        }
        public Builder timeUsageStarted(@Nullable String timeUsageStarted) {
            this.timeUsageStarted = timeUsageStarted;
            return this;
        }        public ScheduleQueryPropertiesDateRange build() {
            return new ScheduleQueryPropertiesDateRange(dateRangeType, dynamicDateRangeType, timeUsageEnded, timeUsageStarted);
        }
    }
}
