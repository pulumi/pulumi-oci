// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Monitoring;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Monitoring.AlarmArgs;
import com.pulumi.oci.Monitoring.inputs.AlarmState;
import com.pulumi.oci.Monitoring.outputs.AlarmSuppression;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Alarm resource in Oracle Cloud Infrastructure Monitoring service.
 * 
 * Creates a new alarm in the specified compartment.
 * For more information, see
 * [Creating an Alarm](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/create-alarm.htm).
 * For important limits information, see
 * [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#limits).
 * 
 * This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
 * Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
 * or transactions, per second (TPS) for a given tenancy.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Monitoring.Alarm;
 * import com.pulumi.oci.Monitoring.AlarmArgs;
 * import com.pulumi.oci.Monitoring.inputs.AlarmSuppressionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testAlarm = new Alarm(&#34;testAlarm&#34;, AlarmArgs.builder()        
 *             .compartmentId(var_.compartment_id())
 *             .destinations(oci_ons_notification_topic.test_notification_topic().id())
 *             .displayName(var_.alarm_display_name())
 *             .isEnabled(var_.alarm_is_enabled())
 *             .metricCompartmentId(var_.alarm_metric_compartment_id())
 *             .namespace(var_.alarm_namespace())
 *             .query(var_.alarm_query())
 *             .severity(var_.alarm_severity())
 *             .body(var_.alarm_body())
 *             .definedTags(Map.of(&#34;Operations.CostCenter&#34;, &#34;42&#34;))
 *             .freeformTags(Map.of(&#34;Department&#34;, &#34;Finance&#34;))
 *             .isNotificationsPerMetricDimensionEnabled(var_.alarm_is_notifications_per_metric_dimension_enabled())
 *             .messageFormat(var_.alarm_message_format())
 *             .metricCompartmentIdInSubtree(var_.alarm_metric_compartment_id_in_subtree())
 *             .pendingDuration(var_.alarm_pending_duration())
 *             .repeatNotificationDuration(var_.alarm_repeat_notification_duration())
 *             .resolution(var_.alarm_resolution())
 *             .resourceGroup(var_.alarm_resource_group())
 *             .suppression(AlarmSuppressionArgs.builder()
 *                 .timeSuppressFrom(var_.alarm_suppression_time_suppress_from())
 *                 .timeSuppressUntil(var_.alarm_suppression_time_suppress_until())
 *                 .description(var_.alarm_suppression_description())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Alarms can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Monitoring/alarm:Alarm test_alarm &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Monitoring/alarm:Alarm")
public class Alarm extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The human-readable content of the delivered alarm notification. Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices. Avoid entering confidential information.  Example: `High CPU usage alert. Follow runbook instructions for resolution.`
     * 
     */
    @Export(name="body", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> body;

    /**
     * @return (Updatable) The human-readable content of the delivered alarm notification. Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices. Avoid entering confidential information.  Example: `High CPU usage alert. Follow runbook instructions for resolution.`
     * 
     */
    public Output<Optional<String>> body() {
        return Codegen.optional(this.body);
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> definedTags() {
        return Codegen.optional(this.definedTags);
    }
    /**
     * (Updatable) A list of destinations for alarm notifications. Each destination is represented by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a related resource, such as a [topic](https://docs.cloud.oracle.com/iaas/api/#/en/notification/latest/NotificationTopic). Supported destination services: Notifications , Streaming.           Limit: One destination per supported destination service.
     * 
     */
    @Export(name="destinations", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> destinations;

    /**
     * @return (Updatable) A list of destinations for alarm notifications. Each destination is represented by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a related resource, such as a [topic](https://docs.cloud.oracle.com/iaas/api/#/en/notification/latest/NotificationTopic). Supported destination services: Notifications , Streaming.           Limit: One destination per supported destination service.
     * 
     */
    public Output<List<String>> destinations() {
        return this.destinations;
    }
    /**
     * (Updatable) A user-friendly name for the alarm. It does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     * This value determines the title of each alarm notification.
     * 
     * Example: `High CPU Utilization`
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name for the alarm. It does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     * This value determines the title of each alarm notification.
     * 
     * Example: `High CPU Utilization`
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Optional<Map<String,Object>>> freeformTags() {
        return Codegen.optional(this.freeformTags);
    }
    /**
     * (Updatable) Whether the alarm is enabled.  Example: `true`
     * 
     */
    @Export(name="isEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isEnabled;

    /**
     * @return (Updatable) Whether the alarm is enabled.  Example: `true`
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }
    /**
     * (Updatable) When set to `true`, splits alarm notifications per metric stream. When set to `false`, groups alarm notifications across metric streams. Example: `true`
     * 
     */
    @Export(name="isNotificationsPerMetricDimensionEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isNotificationsPerMetricDimensionEnabled;

    /**
     * @return (Updatable) When set to `true`, splits alarm notifications per metric stream. When set to `false`, groups alarm notifications across metric streams. Example: `true`
     * 
     */
    public Output<Optional<Boolean>> isNotificationsPerMetricDimensionEnabled() {
        return Codegen.optional(this.isNotificationsPerMetricDimensionEnabled);
    }
    /**
     * (Updatable) The format to use for alarm notifications. The formats are:
     * 
     */
    @Export(name="messageFormat", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> messageFormat;

    /**
     * @return (Updatable) The format to use for alarm notifications. The formats are:
     * 
     */
    public Output<Optional<String>> messageFormat() {
        return Codegen.optional(this.messageFormat);
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric being evaluated by the alarm.
     * 
     */
    @Export(name="metricCompartmentId", refs={String.class}, tree="[0]")
    private Output<String> metricCompartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric being evaluated by the alarm.
     * 
     */
    public Output<String> metricCompartmentId() {
        return this.metricCompartmentId;
    }
    /**
     * (Updatable) When true, the alarm evaluates metrics from all compartments and subcompartments. The parameter can only be set to true when metricCompartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, the alarm evaluates metrics from only the compartment specified in metricCompartmentId. Default is false.  Example: `true`
     * 
     */
    @Export(name="metricCompartmentIdInSubtree", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> metricCompartmentIdInSubtree;

    /**
     * @return (Updatable) When true, the alarm evaluates metrics from all compartments and subcompartments. The parameter can only be set to true when metricCompartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, the alarm evaluates metrics from only the compartment specified in metricCompartmentId. Default is false.  Example: `true`
     * 
     */
    public Output<Optional<Boolean>> metricCompartmentIdInSubtree() {
        return Codegen.optional(this.metricCompartmentIdInSubtree);
    }
    /**
     * (Updatable) The source service or application emitting the metric that is evaluated by the alarm.  Example: `oci_computeagent`
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output<String> namespace;

    /**
     * @return (Updatable) The source service or application emitting the metric that is evaluated by the alarm.  Example: `oci_computeagent`
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }
    /**
     * (Updatable) The period of time that the condition defined in the alarm must persist before the alarm state changes from &#34;OK&#34; to &#34;FIRING&#34;. For example, a value of 5 minutes means that the alarm must persist in breaching the condition for five minutes before the alarm updates its state to &#34;FIRING&#34;.
     * 
     * The duration is specified as a string in ISO 8601 format (`PT10M` for ten minutes or `PT1H` for one hour). Minimum: PT1M. Maximum: PT1H. Default: PT1M.
     * 
     * Under the default value of PT1M, the first evaluation that breaches the alarm updates the state to &#34;FIRING&#34;.
     * 
     * The alarm updates its status to &#34;OK&#34; when the breaching condition has been clear for the most recent minute.
     * 
     * Example: `PT5M`
     * 
     */
    @Export(name="pendingDuration", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pendingDuration;

    /**
     * @return (Updatable) The period of time that the condition defined in the alarm must persist before the alarm state changes from &#34;OK&#34; to &#34;FIRING&#34;. For example, a value of 5 minutes means that the alarm must persist in breaching the condition for five minutes before the alarm updates its state to &#34;FIRING&#34;.
     * 
     * The duration is specified as a string in ISO 8601 format (`PT10M` for ten minutes or `PT1H` for one hour). Minimum: PT1M. Maximum: PT1H. Default: PT1M.
     * 
     * Under the default value of PT1M, the first evaluation that breaches the alarm updates the state to &#34;FIRING&#34;.
     * 
     * The alarm updates its status to &#34;OK&#34; when the breaching condition has been clear for the most recent minute.
     * 
     * Example: `PT5M`
     * 
     */
    public Output<Optional<String>> pendingDuration() {
        return Codegen.optional(this.pendingDuration);
    }
    /**
     * (Updatable) The Monitoring Query Language (MQL) expression to evaluate for the alarm. The Alarms feature of the Monitoring service interprets results for each returned time series as Boolean values, where zero represents false and a non-zero value represents true. A true value means that the trigger rule condition has been met. The query must specify a metric, statistic, interval, and trigger rule (threshold or absence). Supported values for interval depend on the specified time range. More interval values are supported for smaller time ranges. You can optionally specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`. For information about writing MQL expressions, see [Editing the MQL Expression for a Query](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/query-metric-mql.htm). For details about MQL, see [Monitoring Query Language (MQL) Reference](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Reference/mql.htm). For available dimensions, review the metric definition for the supported service. See [Supported Services](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#SupportedServices).
     * 
     * Example of threshold alarm:
     * 
     * ***
     * 
     * CpuUtilization[1m]{availabilityDomain=&#34;cumS:PHX-AD-1&#34;}.groupBy(availabilityDomain).percentile(0.9) &gt; 85
     * 
     * ***
     * 
     * Example of absence alarm:
     * 
     * ***
     * 
     * CpuUtilization[1m]{availabilityDomain=&#34;cumS:PHX-AD-1&#34;}.absent()
     * 
     * ***
     * 
     */
    @Export(name="query", refs={String.class}, tree="[0]")
    private Output<String> query;

    /**
     * @return (Updatable) The Monitoring Query Language (MQL) expression to evaluate for the alarm. The Alarms feature of the Monitoring service interprets results for each returned time series as Boolean values, where zero represents false and a non-zero value represents true. A true value means that the trigger rule condition has been met. The query must specify a metric, statistic, interval, and trigger rule (threshold or absence). Supported values for interval depend on the specified time range. More interval values are supported for smaller time ranges. You can optionally specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`. For information about writing MQL expressions, see [Editing the MQL Expression for a Query](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/query-metric-mql.htm). For details about MQL, see [Monitoring Query Language (MQL) Reference](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Reference/mql.htm). For available dimensions, review the metric definition for the supported service. See [Supported Services](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#SupportedServices).
     * 
     * Example of threshold alarm:
     * 
     * ***
     * 
     * CpuUtilization[1m]{availabilityDomain=&#34;cumS:PHX-AD-1&#34;}.groupBy(availabilityDomain).percentile(0.9) &gt; 85
     * 
     * ***
     * 
     * Example of absence alarm:
     * 
     * ***
     * 
     * CpuUtilization[1m]{availabilityDomain=&#34;cumS:PHX-AD-1&#34;}.absent()
     * 
     * ***
     * 
     */
    public Output<String> query() {
        return this.query;
    }
    /**
     * (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, `PT4H` indicates four hours. Minimum: PT1M. Maximum: P30D.
     * 
     * Default value: null (notifications are not re-submitted).
     * 
     * Example: `PT2H`
     * 
     */
    @Export(name="repeatNotificationDuration", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> repeatNotificationDuration;

    /**
     * @return (Updatable) The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, `PT4H` indicates four hours. Minimum: PT1M. Maximum: P30D.
     * 
     * Default value: null (notifications are not re-submitted).
     * 
     * Example: `PT2H`
     * 
     */
    public Output<Optional<String>> repeatNotificationDuration() {
        return Codegen.optional(this.repeatNotificationDuration);
    }
    /**
     * (Updatable) The time between calculated aggregation windows for the alarm. Supported value: `1m`
     * 
     */
    @Export(name="resolution", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resolution;

    /**
     * @return (Updatable) The time between calculated aggregation windows for the alarm. Supported value: `1m`
     * 
     */
    public Output<Optional<String>> resolution() {
        return Codegen.optional(this.resolution);
    }
    /**
     * (Updatable) Resource group that you want to match. A null value returns only metric data that has no resource groups. The alarm retrieves metric data associated with the specified resource group only. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($). Avoid entering confidential information.  Example: `frontend-fleet`
     * 
     */
    @Export(name="resourceGroup", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resourceGroup;

    /**
     * @return (Updatable) Resource group that you want to match. A null value returns only metric data that has no resource groups. The alarm retrieves metric data associated with the specified resource group only. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($). Avoid entering confidential information.  Example: `frontend-fleet`
     * 
     */
    public Output<Optional<String>> resourceGroup() {
        return Codegen.optional(this.resourceGroup);
    }
    /**
     * (Updatable) The perceived type of response required when the alarm is in the &#34;FIRING&#34; state.  Example: `CRITICAL`
     * 
     */
    @Export(name="severity", refs={String.class}, tree="[0]")
    private Output<String> severity;

    /**
     * @return (Updatable) The perceived type of response required when the alarm is in the &#34;FIRING&#34; state.  Example: `CRITICAL`
     * 
     */
    public Output<String> severity() {
        return this.severity;
    }
    /**
     * The current lifecycle state of the alarm.  Example: `DELETED`
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return The current lifecycle state of the alarm.  Example: `DELETED`
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * (Updatable) The configuration details for suppressing an alarm.
     * 
     */
    @Export(name="suppression", refs={AlarmSuppression.class}, tree="[0]")
    private Output</* @Nullable */ AlarmSuppression> suppression;

    /**
     * @return (Updatable) The configuration details for suppressing an alarm.
     * 
     */
    public Output<Optional<AlarmSuppression>> suppression() {
        return Codegen.optional(this.suppression);
    }
    /**
     * The date and time the alarm was created. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeCreated;

    /**
     * @return The date and time the alarm was created. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     * 
     */
    public Output<Optional<String>> timeCreated() {
        return Codegen.optional(this.timeCreated);
    }
    /**
     * The date and time the alarm was last updated. Format defined by RFC3339.  Example: `2019-02-03T01:02:29.600Z`
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeUpdated;

    /**
     * @return The date and time the alarm was last updated. Format defined by RFC3339.  Example: `2019-02-03T01:02:29.600Z`
     * 
     */
    public Output<Optional<String>> timeUpdated() {
        return Codegen.optional(this.timeUpdated);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Alarm(String name) {
        this(name, AlarmArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Alarm(String name, AlarmArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Alarm(String name, AlarmArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Monitoring/alarm:Alarm", name, args == null ? AlarmArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Alarm(String name, Output<String> id, @Nullable AlarmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Monitoring/alarm:Alarm", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Alarm get(String name, Output<String> id, @Nullable AlarmState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Alarm(name, id, state, options);
    }
}
