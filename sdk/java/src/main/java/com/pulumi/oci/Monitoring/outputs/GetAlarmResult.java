// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Monitoring.outputs.GetAlarmSuppression;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAlarmResult {
    private String alarmId;
    /**
     * @return The human-readable content of the delivered alarm notification. Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices.  Example: `High CPU usage alert. Follow runbook instructions for resolution.`
     * 
     */
    private @Nullable String body;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A list of destinations for alarm notifications. Each destination is represented by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a related resource, such as a [topic](https://docs.cloud.oracle.com/iaas/api/#/en/notification/latest/NotificationTopic). Supported destination services: Notifications , Streaming.           Limit: One destination per supported destination service.
     * 
     */
    private @Nullable List<String> destinations;
    /**
     * @return A user-friendly name for the alarm. It does not have to be unique, and it&#39;s changeable.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether the alarm is enabled.  Example: `true`
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return When set to `true`, splits alarm notifications per metric stream. When set to `false`, groups alarm notifications across metric streams.
     * 
     */
    private @Nullable Boolean isNotificationsPerMetricDimensionEnabled;
    /**
     * @return The format to use for alarm notifications. The formats are:
     * 
     */
    private @Nullable String messageFormat;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric being evaluated by the alarm.
     * 
     */
    private @Nullable String metricCompartmentId;
    /**
     * @return When true, the alarm evaluates metrics from all compartments and subcompartments. The parameter can only be set to true when metricCompartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, the alarm evaluates metrics from only the compartment specified in metricCompartmentId. Default is false.  Example: `true`
     * 
     */
    private @Nullable Boolean metricCompartmentIdInSubtree;
    /**
     * @return The source service or application emitting the metric that is evaluated by the alarm.  Example: `oci_computeagent`
     * 
     */
    private @Nullable String namespace;
    /**
     * @return The period of time that the condition defined in the alarm must persist before the alarm state changes from &#34;OK&#34; to &#34;FIRING&#34;. For example, a value of 5 minutes means that the alarm must persist in breaching the condition for five minutes before the alarm updates its state to &#34;FIRING&#34;.
     * 
     */
    private @Nullable String pendingDuration;
    /**
     * @return The Monitoring Query Language (MQL) expression to evaluate for the alarm. The Alarms feature of the Monitoring service interprets results for each returned time series as Boolean values, where zero represents false and a non-zero value represents true. A true value means that the trigger rule condition has been met. The query must specify a metric, statistic, interval, and trigger rule (threshold or absence). Supported values for interval depend on the specified time range. More interval values are supported for smaller time ranges. You can optionally specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`. For information about writing MQL expressions, see [Editing the MQL Expression for a Query](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/query-metric-mql.htm). For details about MQL, see [Monitoring Query Language (MQL) Reference](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Reference/mql.htm). For available dimensions, review the metric definition for the supported service. See [Supported Services](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#SupportedServices).
     * 
     */
    private @Nullable String query;
    /**
     * @return The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, `PT4H` indicates four hours. Minimum: PT1M. Maximum: P30D.
     * 
     */
    private @Nullable String repeatNotificationDuration;
    /**
     * @return The time between calculated aggregation windows for the alarm. Supported value: `1m`
     * 
     */
    private @Nullable String resolution;
    /**
     * @return Resource group to match for metric data retrieved by the alarm. A resource group is a custom string that you can match when retrieving custom metrics. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
     * 
     */
    private @Nullable String resourceGroup;
    /**
     * @return The perceived type of response required when the alarm is in the &#34;FIRING&#34; state.  Example: `CRITICAL`
     * 
     */
    private @Nullable String severity;
    /**
     * @return The current lifecycle state of the alarm.  Example: `DELETED`
     * 
     */
    private @Nullable String state;
    /**
     * @return The configuration details for suppressing an alarm.
     * 
     */
    private @Nullable List<GetAlarmSuppression> suppressions;
    /**
     * @return The date and time the alarm was created. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the alarm was last updated. Format defined by RFC3339.  Example: `2019-02-03T01:02:29.600Z`
     * 
     */
    private @Nullable String timeUpdated;

    private GetAlarmResult() {}
    public String alarmId() {
        return this.alarmId;
    }
    /**
     * @return The human-readable content of the delivered alarm notification. Oracle recommends providing guidance to operators for resolving the alarm condition. Consider adding links to standard runbook practices.  Example: `High CPU usage alert. Follow runbook instructions for resolution.`
     * 
     */
    public Optional<String> body() {
        return Optional.ofNullable(this.body);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the alarm.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A list of destinations for alarm notifications. Each destination is represented by the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a related resource, such as a [topic](https://docs.cloud.oracle.com/iaas/api/#/en/notification/latest/NotificationTopic). Supported destination services: Notifications , Streaming.           Limit: One destination per supported destination service.
     * 
     */
    public List<String> destinations() {
        return this.destinations == null ? List.of() : this.destinations;
    }
    /**
     * @return A user-friendly name for the alarm. It does not have to be unique, and it&#39;s changeable.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the alarm.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether the alarm is enabled.  Example: `true`
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return When set to `true`, splits alarm notifications per metric stream. When set to `false`, groups alarm notifications across metric streams.
     * 
     */
    public Optional<Boolean> isNotificationsPerMetricDimensionEnabled() {
        return Optional.ofNullable(this.isNotificationsPerMetricDimensionEnabled);
    }
    /**
     * @return The format to use for alarm notifications. The formats are:
     * 
     */
    public Optional<String> messageFormat() {
        return Optional.ofNullable(this.messageFormat);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the metric being evaluated by the alarm.
     * 
     */
    public Optional<String> metricCompartmentId() {
        return Optional.ofNullable(this.metricCompartmentId);
    }
    /**
     * @return When true, the alarm evaluates metrics from all compartments and subcompartments. The parameter can only be set to true when metricCompartmentId is the tenancy OCID (the tenancy is the root compartment). A true value requires the user to have tenancy-level permissions. If this requirement is not met, then the call is rejected. When false, the alarm evaluates metrics from only the compartment specified in metricCompartmentId. Default is false.  Example: `true`
     * 
     */
    public Optional<Boolean> metricCompartmentIdInSubtree() {
        return Optional.ofNullable(this.metricCompartmentIdInSubtree);
    }
    /**
     * @return The source service or application emitting the metric that is evaluated by the alarm.  Example: `oci_computeagent`
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return The period of time that the condition defined in the alarm must persist before the alarm state changes from &#34;OK&#34; to &#34;FIRING&#34;. For example, a value of 5 minutes means that the alarm must persist in breaching the condition for five minutes before the alarm updates its state to &#34;FIRING&#34;.
     * 
     */
    public Optional<String> pendingDuration() {
        return Optional.ofNullable(this.pendingDuration);
    }
    /**
     * @return The Monitoring Query Language (MQL) expression to evaluate for the alarm. The Alarms feature of the Monitoring service interprets results for each returned time series as Boolean values, where zero represents false and a non-zero value represents true. A true value means that the trigger rule condition has been met. The query must specify a metric, statistic, interval, and trigger rule (threshold or absence). Supported values for interval depend on the specified time range. More interval values are supported for smaller time ranges. You can optionally specify dimensions and grouping functions. Supported grouping functions: `grouping()`, `groupBy()`. For information about writing MQL expressions, see [Editing the MQL Expression for a Query](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/query-metric-mql.htm). For details about MQL, see [Monitoring Query Language (MQL) Reference](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Reference/mql.htm). For available dimensions, review the metric definition for the supported service. See [Supported Services](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#SupportedServices).
     * 
     */
    public Optional<String> query() {
        return Optional.ofNullable(this.query);
    }
    /**
     * @return The frequency for re-submitting alarm notifications, if the alarm keeps firing without interruption. Format defined by ISO 8601. For example, `PT4H` indicates four hours. Minimum: PT1M. Maximum: P30D.
     * 
     */
    public Optional<String> repeatNotificationDuration() {
        return Optional.ofNullable(this.repeatNotificationDuration);
    }
    /**
     * @return The time between calculated aggregation windows for the alarm. Supported value: `1m`
     * 
     */
    public Optional<String> resolution() {
        return Optional.ofNullable(this.resolution);
    }
    /**
     * @return Resource group to match for metric data retrieved by the alarm. A resource group is a custom string that you can match when retrieving custom metrics. Only one resource group can be applied per metric. A valid resourceGroup value starts with an alphabetical character and includes only alphanumeric characters, periods (.), underscores (_), hyphens (-), and dollar signs ($).  Example: `frontend-fleet`
     * 
     */
    public Optional<String> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }
    /**
     * @return The perceived type of response required when the alarm is in the &#34;FIRING&#34; state.  Example: `CRITICAL`
     * 
     */
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }
    /**
     * @return The current lifecycle state of the alarm.  Example: `DELETED`
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The configuration details for suppressing an alarm.
     * 
     */
    public List<GetAlarmSuppression> suppressions() {
        return this.suppressions == null ? List.of() : this.suppressions;
    }
    /**
     * @return The date and time the alarm was created. Format defined by RFC3339.  Example: `2019-02-01T01:02:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the alarm was last updated. Format defined by RFC3339.  Example: `2019-02-03T01:02:29.600Z`
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlarmResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String alarmId;
        private @Nullable String body;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable List<String> destinations;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isEnabled;
        private @Nullable Boolean isNotificationsPerMetricDimensionEnabled;
        private @Nullable String messageFormat;
        private @Nullable String metricCompartmentId;
        private @Nullable Boolean metricCompartmentIdInSubtree;
        private @Nullable String namespace;
        private @Nullable String pendingDuration;
        private @Nullable String query;
        private @Nullable String repeatNotificationDuration;
        private @Nullable String resolution;
        private @Nullable String resourceGroup;
        private @Nullable String severity;
        private @Nullable String state;
        private @Nullable List<GetAlarmSuppression> suppressions;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetAlarmResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alarmId = defaults.alarmId;
    	      this.body = defaults.body;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.destinations = defaults.destinations;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.isNotificationsPerMetricDimensionEnabled = defaults.isNotificationsPerMetricDimensionEnabled;
    	      this.messageFormat = defaults.messageFormat;
    	      this.metricCompartmentId = defaults.metricCompartmentId;
    	      this.metricCompartmentIdInSubtree = defaults.metricCompartmentIdInSubtree;
    	      this.namespace = defaults.namespace;
    	      this.pendingDuration = defaults.pendingDuration;
    	      this.query = defaults.query;
    	      this.repeatNotificationDuration = defaults.repeatNotificationDuration;
    	      this.resolution = defaults.resolution;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.severity = defaults.severity;
    	      this.state = defaults.state;
    	      this.suppressions = defaults.suppressions;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder alarmId(String alarmId) {
            this.alarmId = Objects.requireNonNull(alarmId);
            return this;
        }
        @CustomType.Setter
        public Builder body(@Nullable String body) {
            this.body = body;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder destinations(@Nullable List<String> destinations) {
            this.destinations = destinations;
            return this;
        }
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isNotificationsPerMetricDimensionEnabled(@Nullable Boolean isNotificationsPerMetricDimensionEnabled) {
            this.isNotificationsPerMetricDimensionEnabled = isNotificationsPerMetricDimensionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder messageFormat(@Nullable String messageFormat) {
            this.messageFormat = messageFormat;
            return this;
        }
        @CustomType.Setter
        public Builder metricCompartmentId(@Nullable String metricCompartmentId) {
            this.metricCompartmentId = metricCompartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder metricCompartmentIdInSubtree(@Nullable Boolean metricCompartmentIdInSubtree) {
            this.metricCompartmentIdInSubtree = metricCompartmentIdInSubtree;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder pendingDuration(@Nullable String pendingDuration) {
            this.pendingDuration = pendingDuration;
            return this;
        }
        @CustomType.Setter
        public Builder query(@Nullable String query) {
            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder repeatNotificationDuration(@Nullable String repeatNotificationDuration) {
            this.repeatNotificationDuration = repeatNotificationDuration;
            return this;
        }
        @CustomType.Setter
        public Builder resolution(@Nullable String resolution) {
            this.resolution = resolution;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroup(@Nullable String resourceGroup) {
            this.resourceGroup = resourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder severity(@Nullable String severity) {
            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder suppressions(@Nullable List<GetAlarmSuppression> suppressions) {
            this.suppressions = suppressions;
            return this;
        }
        public Builder suppressions(GetAlarmSuppression... suppressions) {
            return suppressions(List.of(suppressions));
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetAlarmResult build() {
            final var o = new GetAlarmResult();
            o.alarmId = alarmId;
            o.body = body;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.destinations = destinations;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isEnabled = isEnabled;
            o.isNotificationsPerMetricDimensionEnabled = isNotificationsPerMetricDimensionEnabled;
            o.messageFormat = messageFormat;
            o.metricCompartmentId = metricCompartmentId;
            o.metricCompartmentIdInSubtree = metricCompartmentIdInSubtree;
            o.namespace = namespace;
            o.pendingDuration = pendingDuration;
            o.query = query;
            o.repeatNotificationDuration = repeatNotificationDuration;
            o.resolution = resolution;
            o.resourceGroup = resourceGroup;
            o.severity = severity;
            o.state = state;
            o.suppressions = suppressions;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
