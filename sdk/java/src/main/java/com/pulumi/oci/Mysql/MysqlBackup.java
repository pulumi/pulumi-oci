// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Mysql.MysqlBackupArgs;
import com.pulumi.oci.Mysql.inputs.MysqlBackupState;
import com.pulumi.oci.Mysql.outputs.MysqlBackupBackupValidationDetail;
import com.pulumi.oci.Mysql.outputs.MysqlBackupDbSystemSnapshot;
import com.pulumi.oci.Mysql.outputs.MysqlBackupDbSystemSnapshotSummary;
import com.pulumi.oci.Mysql.outputs.MysqlBackupEncryptData;
import com.pulumi.oci.Mysql.outputs.MysqlBackupSourceDetails;
import com.pulumi.oci.Mysql.outputs.MysqlBackupValidateBackupDetail;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Mysql Backup resource in Oracle Cloud Infrastructure MySQL Database service.
 * 
 * Create a backup of a DB System.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Mysql.MysqlBackup;
 * import com.pulumi.oci.Mysql.MysqlBackupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testMysqlBackup = new MysqlBackup("testMysqlBackup", MysqlBackupArgs.builder()
 *             .dbSystemId(testDbSystem.id())
 *             .backupType(mysqlBackupBackupType)
 *             .definedTags(Map.of("foo-namespace.bar-key", "value"))
 *             .description(mysqlBackupDescription)
 *             .displayName(mysqlBackupDisplayName)
 *             .freeformTags(Map.of("bar-key", "value"))
 *             .retentionInDays(mysqlBackupRetentionInDays)
 *             .softDelete(mysqlBackupSoftDelete)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * MysqlBackups can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Mysql/mysqlBackup:MysqlBackup test_mysql_backup &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Mysql/mysqlBackup:MysqlBackup")
public class MysqlBackup extends com.pulumi.resources.CustomResource {
    /**
     * The size of the backup in base-2 (IEC) gibibytes. (GiB).
     * 
     */
    @Export(name="backupSizeInGbs", refs={Integer.class}, tree="[0]")
    private Output<Integer> backupSizeInGbs;

    /**
     * @return The size of the backup in base-2 (IEC) gibibytes. (GiB).
     * 
     */
    public Output<Integer> backupSizeInGbs() {
        return this.backupSizeInGbs;
    }
    /**
     * The type of backup.
     * 
     */
    @Export(name="backupType", refs={String.class}, tree="[0]")
    private Output<String> backupType;

    /**
     * @return The type of backup.
     * 
     */
    public Output<String> backupType() {
        return this.backupType;
    }
    /**
     * Backup validation details.
     * 
     */
    @Export(name="backupValidationDetails", refs={List.class,MysqlBackupBackupValidationDetail.class}, tree="[0,1]")
    private Output<List<MysqlBackupBackupValidationDetail>> backupValidationDetails;

    /**
     * @return Backup validation details.
     * 
     */
    public Output<List<MysqlBackupBackupValidationDetail>> backupValidationDetails() {
        return this.backupValidationDetails;
    }
    /**
     * (Updatable) The OCID of the compartment the backup exists in.
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment the backup exists in.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * Indicates how the backup was created: manually, automatic, or by an Operator.
     * 
     */
    @Export(name="creationType", refs={String.class}, tree="[0]")
    private Output<String> creationType;

    /**
     * @return Indicates how the backup was created: manually, automatic, or by an Operator.
     * 
     */
    public Output<String> creationType() {
        return this.creationType;
    }
    /**
     * DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
     * 
     */
    @Export(name="dataStorageSizeInGb", refs={Integer.class}, tree="[0]")
    private Output<Integer> dataStorageSizeInGb;

    /**
     * @return DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
     * 
     */
    public Output<Integer> dataStorageSizeInGb() {
        return this.dataStorageSizeInGb;
    }
    /**
     * The OCID of the DB System the Backup is associated with.
     * 
     */
    @Export(name="dbSystemId", refs={String.class}, tree="[0]")
    private Output<String> dbSystemId;

    /**
     * @return The OCID of the DB System the Backup is associated with.
     * 
     */
    public Output<String> dbSystemId() {
        return this.dbSystemId;
    }
    @Export(name="dbSystemSnapshotSummaries", refs={List.class,MysqlBackupDbSystemSnapshotSummary.class}, tree="[0,1]")
    private Output<List<MysqlBackupDbSystemSnapshotSummary>> dbSystemSnapshotSummaries;

    public Output<List<MysqlBackupDbSystemSnapshotSummary>> dbSystemSnapshotSummaries() {
        return this.dbSystemSnapshotSummaries;
    }
    /**
     * Snapshot of the DbSystem details at the time of the backup
     * 
     */
    @Export(name="dbSystemSnapshots", refs={List.class,MysqlBackupDbSystemSnapshot.class}, tree="[0,1]")
    private Output<List<MysqlBackupDbSystemSnapshot>> dbSystemSnapshots;

    /**
     * @return Snapshot of the DbSystem details at the time of the backup
     * 
     */
    public Output<List<MysqlBackupDbSystemSnapshot>> dbSystemSnapshots() {
        return this.dbSystemSnapshots;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A user-supplied description for the backup.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return (Updatable) A user-supplied description for the backup.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) A user-supplied display name for the backup.
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-supplied display name for the backup.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Encrypt data details.
     * 
     */
    @Export(name="encryptData", refs={MysqlBackupEncryptData.class}, tree="[0]")
    private Output<MysqlBackupEncryptData> encryptData;

    /**
     * @return Encrypt data details.
     * 
     */
    public Output<MysqlBackupEncryptData> encryptData() {
        return this.encryptData;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,String>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * The OCID of the immediate source DB system backup from which this DB system backup was copied.
     * 
     */
    @Export(name="immediateSourceBackupId", refs={String.class}, tree="[0]")
    private Output<String> immediateSourceBackupId;

    /**
     * @return The OCID of the immediate source DB system backup from which this DB system backup was copied.
     * 
     */
    public Output<String> immediateSourceBackupId() {
        return this.immediateSourceBackupId;
    }
    /**
     * Additional information about the current lifecycleState.
     * 
     */
    @Export(name="lifecycleDetails", refs={String.class}, tree="[0]")
    private Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycleState.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * The MySQL server version of the DB System used for backup.
     * 
     */
    @Export(name="mysqlVersion", refs={String.class}, tree="[0]")
    private Output<String> mysqlVersion;

    /**
     * @return The MySQL server version of the DB System used for backup.
     * 
     */
    public Output<String> mysqlVersion() {
        return this.mysqlVersion;
    }
    /**
     * The OCID of the original source DB system backup from which this DB system backup was copied.
     * 
     */
    @Export(name="originalSourceBackupId", refs={String.class}, tree="[0]")
    private Output<String> originalSourceBackupId;

    /**
     * @return The OCID of the original source DB system backup from which this DB system backup was copied.
     * 
     */
    public Output<String> originalSourceBackupId() {
        return this.originalSourceBackupId;
    }
    /**
     * (Updatable) Number of days to retain this backup.
     * 
     */
    @Export(name="retentionInDays", refs={Integer.class}, tree="[0]")
    private Output<Integer> retentionInDays;

    /**
     * @return (Updatable) Number of days to retain this backup.
     * 
     */
    public Output<Integer> retentionInDays() {
        return this.retentionInDays;
    }
    /**
     * The shape of the DB System instance used for backup.
     * 
     */
    @Export(name="shapeName", refs={String.class}, tree="[0]")
    private Output<String> shapeName;

    /**
     * @return The shape of the DB System instance used for backup.
     * 
     */
    public Output<String> shapeName() {
        return this.shapeName;
    }
    /**
     * (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
     * 
     */
    @Export(name="softDelete", refs={String.class}, tree="[0]")
    private Output<String> softDelete;

    /**
     * @return (Updatable) Retains the backup to be deleted due to the retention policy in DELETE SCHEDULED state for 7 days before permanently deleting it.
     * 
     */
    public Output<String> softDelete() {
        return this.softDelete;
    }
    /**
     * Details of backup source in the cloud.
     * 
     */
    @Export(name="sourceDetails", refs={MysqlBackupSourceDetails.class}, tree="[0]")
    private Output</* @Nullable */ MysqlBackupSourceDetails> sourceDetails;

    /**
     * @return Details of backup source in the cloud.
     * 
     */
    public Output<Optional<MysqlBackupSourceDetails>> sourceDetails() {
        return Codegen.optional(this.sourceDetails);
    }
    /**
     * The state of the backup.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the backup.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,String>> systemTags() {
        return this.systemTags;
    }
    /**
     * The date and time the DB system backup copy was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    @Export(name="timeCopyCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCopyCreated;

    /**
     * @return The date and time the DB system backup copy was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    public Output<String> timeCopyCreated() {
        return this.timeCopyCreated;
    }
    /**
     * The time the backup record was created.
     * 
     */
    @Export(name="timeCreated", refs={String.class}, tree="[0]")
    private Output<String> timeCreated;

    /**
     * @return The time the backup record was created.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time at which the backup was updated.
     * 
     */
    @Export(name="timeUpdated", refs={String.class}, tree="[0]")
    private Output<String> timeUpdated;

    /**
     * @return The time at which the backup was updated.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    @Export(name="validateBackupDetails", refs={List.class,MysqlBackupValidateBackupDetail.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MysqlBackupValidateBackupDetail>> validateBackupDetails;

    public Output<Optional<List<MysqlBackupValidateBackupDetail>>> validateBackupDetails() {
        return Codegen.optional(this.validateBackupDetails);
    }
    /**
     * (Updatable) An optional integer property when incremented will trigger a validation of the backup. Set the integer to 1 initially and increment it by 1 to re-trigger validation.
     * * `validate-backup-details` - Details required to validate backup. **Note:** Validate action can only be called from update resource operation.
     * 
     */
    @Export(name="validateTrigger", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> validateTrigger;

    /**
     * @return (Updatable) An optional integer property when incremented will trigger a validation of the backup. Set the integer to 1 initially and increment it by 1 to re-trigger validation.
     * * `validate-backup-details` - Details required to validate backup. **Note:** Validate action can only be called from update resource operation.
     * 
     */
    public Output<Optional<Integer>> validateTrigger() {
        return Codegen.optional(this.validateTrigger);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MysqlBackup(java.lang.String name) {
        this(name, MysqlBackupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MysqlBackup(java.lang.String name, @Nullable MysqlBackupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MysqlBackup(java.lang.String name, @Nullable MysqlBackupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Mysql/mysqlBackup:MysqlBackup", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private MysqlBackup(java.lang.String name, Output<java.lang.String> id, @Nullable MysqlBackupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Mysql/mysqlBackup:MysqlBackup", name, state, makeResourceOptions(options, id), false);
    }

    private static MysqlBackupArgs makeArgs(@Nullable MysqlBackupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MysqlBackupArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MysqlBackup get(java.lang.String name, Output<java.lang.String> id, @Nullable MysqlBackupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MysqlBackup(name, id, state, options);
    }
}
