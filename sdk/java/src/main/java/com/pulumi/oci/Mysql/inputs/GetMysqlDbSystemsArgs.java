// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Mysql.inputs.GetMysqlDbSystemsFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMysqlDbSystemsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetMysqlDbSystemsArgs Empty = new GetMysqlDbSystemsArgs();

    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The requested Configuration instance.
     * 
     */
    @Import(name="configurationId")
    private @Nullable Output<String> configurationId;

    /**
     * @return The requested Configuration instance.
     * 
     */
    public Optional<Output<String>> configurationId() {
        return Optional.ofNullable(this.configurationId);
    }

    /**
     * Filter DB Systems by their Database Management configuration.
     * 
     */
    @Import(name="databaseManagements")
    private @Nullable Output<List<String>> databaseManagements;

    /**
     * @return Filter DB Systems by their Database Management configuration.
     * 
     */
    public Optional<Output<List<String>>> databaseManagements() {
        return Optional.ofNullable(this.databaseManagements);
    }

    /**
     * The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="dbSystemId")
    private @Nullable Output<String> dbSystemId;

    /**
     * @return The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<Output<String>> dbSystemId() {
        return Optional.ofNullable(this.dbSystemId);
    }

    /**
     * A filter to return only the resource matching the given display name exactly.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only the resource matching the given display name exactly.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetMysqlDbSystemsFilterArgs>> filters;

    public Optional<Output<List<GetMysqlDbSystemsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
     * 
     */
    @Import(name="isHeatWaveClusterAttached")
    private @Nullable Output<Boolean> isHeatWaveClusterAttached;

    /**
     * @return If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
     * 
     */
    public Optional<Output<Boolean>> isHeatWaveClusterAttached() {
        return Optional.ofNullable(this.isHeatWaveClusterAttached);
    }

    /**
     * Filter instances if they are using the latest revision of the Configuration they are associated with.
     * 
     */
    @Import(name="isUpToDate")
    private @Nullable Output<Boolean> isUpToDate;

    /**
     * @return Filter instances if they are using the latest revision of the Configuration they are associated with.
     * 
     */
    public Optional<Output<Boolean>> isUpToDate() {
        return Optional.ofNullable(this.isUpToDate);
    }

    /**
     * DbSystem Lifecycle State
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return DbSystem Lifecycle State
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetMysqlDbSystemsArgs() {}

    private GetMysqlDbSystemsArgs(GetMysqlDbSystemsArgs $) {
        this.compartmentId = $.compartmentId;
        this.configurationId = $.configurationId;
        this.databaseManagements = $.databaseManagements;
        this.dbSystemId = $.dbSystemId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.isHeatWaveClusterAttached = $.isHeatWaveClusterAttached;
        this.isUpToDate = $.isUpToDate;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetMysqlDbSystemsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetMysqlDbSystemsArgs $;

        public Builder() {
            $ = new GetMysqlDbSystemsArgs();
        }

        public Builder(GetMysqlDbSystemsArgs defaults) {
            $ = new GetMysqlDbSystemsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param configurationId The requested Configuration instance.
         * 
         * @return builder
         * 
         */
        public Builder configurationId(@Nullable Output<String> configurationId) {
            $.configurationId = configurationId;
            return this;
        }

        /**
         * @param configurationId The requested Configuration instance.
         * 
         * @return builder
         * 
         */
        public Builder configurationId(String configurationId) {
            return configurationId(Output.of(configurationId));
        }

        /**
         * @param databaseManagements Filter DB Systems by their Database Management configuration.
         * 
         * @return builder
         * 
         */
        public Builder databaseManagements(@Nullable Output<List<String>> databaseManagements) {
            $.databaseManagements = databaseManagements;
            return this;
        }

        /**
         * @param databaseManagements Filter DB Systems by their Database Management configuration.
         * 
         * @return builder
         * 
         */
        public Builder databaseManagements(List<String> databaseManagements) {
            return databaseManagements(Output.of(databaseManagements));
        }

        /**
         * @param databaseManagements Filter DB Systems by their Database Management configuration.
         * 
         * @return builder
         * 
         */
        public Builder databaseManagements(String... databaseManagements) {
            return databaseManagements(List.of(databaseManagements));
        }

        /**
         * @param dbSystemId The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder dbSystemId(@Nullable Output<String> dbSystemId) {
            $.dbSystemId = dbSystemId;
            return this;
        }

        /**
         * @param dbSystemId The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder dbSystemId(String dbSystemId) {
            return dbSystemId(Output.of(dbSystemId));
        }

        /**
         * @param displayName A filter to return only the resource matching the given display name exactly.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only the resource matching the given display name exactly.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetMysqlDbSystemsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetMysqlDbSystemsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetMysqlDbSystemsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isHeatWaveClusterAttached If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
         * 
         * @return builder
         * 
         */
        public Builder isHeatWaveClusterAttached(@Nullable Output<Boolean> isHeatWaveClusterAttached) {
            $.isHeatWaveClusterAttached = isHeatWaveClusterAttached;
            return this;
        }

        /**
         * @param isHeatWaveClusterAttached If true, return only DB Systems with a HeatWave cluster attached, if false return only DB Systems with no HeatWave cluster attached. If not present, return all DB Systems.
         * 
         * @return builder
         * 
         */
        public Builder isHeatWaveClusterAttached(Boolean isHeatWaveClusterAttached) {
            return isHeatWaveClusterAttached(Output.of(isHeatWaveClusterAttached));
        }

        /**
         * @param isUpToDate Filter instances if they are using the latest revision of the Configuration they are associated with.
         * 
         * @return builder
         * 
         */
        public Builder isUpToDate(@Nullable Output<Boolean> isUpToDate) {
            $.isUpToDate = isUpToDate;
            return this;
        }

        /**
         * @param isUpToDate Filter instances if they are using the latest revision of the Configuration they are associated with.
         * 
         * @return builder
         * 
         */
        public Builder isUpToDate(Boolean isUpToDate) {
            return isUpToDate(Output.of(isUpToDate));
        }

        /**
         * @param state DbSystem Lifecycle State
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state DbSystem Lifecycle State
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetMysqlDbSystemsArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetMysqlDbSystemsArgs", "compartmentId");
            }
            return $;
        }
    }

}
