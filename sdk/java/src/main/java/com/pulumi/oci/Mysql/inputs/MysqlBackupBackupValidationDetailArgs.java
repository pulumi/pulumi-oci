// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Mysql.inputs.MysqlBackupBackupValidationDetailPreparedBackupDetailArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MysqlBackupBackupValidationDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final MysqlBackupBackupValidationDetailArgs Empty = new MysqlBackupBackupValidationDetailArgs();

    /**
     * Indicates whether the backup has been prepared successfully.  PREPARED: The backup is prepared one. NOT_PREPARED: The backup is not prepared.
     * 
     */
    @Import(name="backupPreparationStatus")
    private @Nullable Output<String> backupPreparationStatus;

    /**
     * @return Indicates whether the backup has been prepared successfully.  PREPARED: The backup is prepared one. NOT_PREPARED: The backup is not prepared.
     * 
     */
    public Optional<Output<String>> backupPreparationStatus() {
        return Optional.ofNullable(this.backupPreparationStatus);
    }

    /**
     * Error message if the backup validation has failed.
     * 
     */
    @Import(name="errorMessage")
    private @Nullable Output<String> errorMessage;

    /**
     * @return Error message if the backup validation has failed.
     * 
     */
    public Optional<Output<String>> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }

    /**
     * The estimated restore duration of the backup.
     * 
     */
    @Import(name="estimatedRestoreDuration")
    private @Nullable Output<String> estimatedRestoreDuration;

    /**
     * @return The estimated restore duration of the backup.
     * 
     */
    public Optional<Output<String>> estimatedRestoreDuration() {
        return Optional.ofNullable(this.estimatedRestoreDuration);
    }

    /**
     * Prepared backup details.
     * 
     */
    @Import(name="preparedBackupDetails")
    private @Nullable Output<List<MysqlBackupBackupValidationDetailPreparedBackupDetailArgs>> preparedBackupDetails;

    /**
     * @return Prepared backup details.
     * 
     */
    public Optional<Output<List<MysqlBackupBackupValidationDetailPreparedBackupDetailArgs>>> preparedBackupDetails() {
        return Optional.ofNullable(this.preparedBackupDetails);
    }

    /**
     * The date and time of the most recent validation performed on the backup.
     * 
     */
    @Import(name="timeLastValidated")
    private @Nullable Output<String> timeLastValidated;

    /**
     * @return The date and time of the most recent validation performed on the backup.
     * 
     */
    public Optional<Output<String>> timeLastValidated() {
        return Optional.ofNullable(this.timeLastValidated);
    }

    /**
     * The status of backup validation:  NOT_VALIDATED (Default): The backup has not been validated.  VALIDATED: The backup has been validated successfully.  NEEDS_ATTENTION: The backup validation failed due to a transient issue. Validation should be retried.  FAILED: The backup cannot be restored.
     * 
     */
    @Import(name="validationStatus")
    private @Nullable Output<String> validationStatus;

    /**
     * @return The status of backup validation:  NOT_VALIDATED (Default): The backup has not been validated.  VALIDATED: The backup has been validated successfully.  NEEDS_ATTENTION: The backup validation failed due to a transient issue. Validation should be retried.  FAILED: The backup cannot be restored.
     * 
     */
    public Optional<Output<String>> validationStatus() {
        return Optional.ofNullable(this.validationStatus);
    }

    private MysqlBackupBackupValidationDetailArgs() {}

    private MysqlBackupBackupValidationDetailArgs(MysqlBackupBackupValidationDetailArgs $) {
        this.backupPreparationStatus = $.backupPreparationStatus;
        this.errorMessage = $.errorMessage;
        this.estimatedRestoreDuration = $.estimatedRestoreDuration;
        this.preparedBackupDetails = $.preparedBackupDetails;
        this.timeLastValidated = $.timeLastValidated;
        this.validationStatus = $.validationStatus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MysqlBackupBackupValidationDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MysqlBackupBackupValidationDetailArgs $;

        public Builder() {
            $ = new MysqlBackupBackupValidationDetailArgs();
        }

        public Builder(MysqlBackupBackupValidationDetailArgs defaults) {
            $ = new MysqlBackupBackupValidationDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupPreparationStatus Indicates whether the backup has been prepared successfully.  PREPARED: The backup is prepared one. NOT_PREPARED: The backup is not prepared.
         * 
         * @return builder
         * 
         */
        public Builder backupPreparationStatus(@Nullable Output<String> backupPreparationStatus) {
            $.backupPreparationStatus = backupPreparationStatus;
            return this;
        }

        /**
         * @param backupPreparationStatus Indicates whether the backup has been prepared successfully.  PREPARED: The backup is prepared one. NOT_PREPARED: The backup is not prepared.
         * 
         * @return builder
         * 
         */
        public Builder backupPreparationStatus(String backupPreparationStatus) {
            return backupPreparationStatus(Output.of(backupPreparationStatus));
        }

        /**
         * @param errorMessage Error message if the backup validation has failed.
         * 
         * @return builder
         * 
         */
        public Builder errorMessage(@Nullable Output<String> errorMessage) {
            $.errorMessage = errorMessage;
            return this;
        }

        /**
         * @param errorMessage Error message if the backup validation has failed.
         * 
         * @return builder
         * 
         */
        public Builder errorMessage(String errorMessage) {
            return errorMessage(Output.of(errorMessage));
        }

        /**
         * @param estimatedRestoreDuration The estimated restore duration of the backup.
         * 
         * @return builder
         * 
         */
        public Builder estimatedRestoreDuration(@Nullable Output<String> estimatedRestoreDuration) {
            $.estimatedRestoreDuration = estimatedRestoreDuration;
            return this;
        }

        /**
         * @param estimatedRestoreDuration The estimated restore duration of the backup.
         * 
         * @return builder
         * 
         */
        public Builder estimatedRestoreDuration(String estimatedRestoreDuration) {
            return estimatedRestoreDuration(Output.of(estimatedRestoreDuration));
        }

        /**
         * @param preparedBackupDetails Prepared backup details.
         * 
         * @return builder
         * 
         */
        public Builder preparedBackupDetails(@Nullable Output<List<MysqlBackupBackupValidationDetailPreparedBackupDetailArgs>> preparedBackupDetails) {
            $.preparedBackupDetails = preparedBackupDetails;
            return this;
        }

        /**
         * @param preparedBackupDetails Prepared backup details.
         * 
         * @return builder
         * 
         */
        public Builder preparedBackupDetails(List<MysqlBackupBackupValidationDetailPreparedBackupDetailArgs> preparedBackupDetails) {
            return preparedBackupDetails(Output.of(preparedBackupDetails));
        }

        /**
         * @param preparedBackupDetails Prepared backup details.
         * 
         * @return builder
         * 
         */
        public Builder preparedBackupDetails(MysqlBackupBackupValidationDetailPreparedBackupDetailArgs... preparedBackupDetails) {
            return preparedBackupDetails(List.of(preparedBackupDetails));
        }

        /**
         * @param timeLastValidated The date and time of the most recent validation performed on the backup.
         * 
         * @return builder
         * 
         */
        public Builder timeLastValidated(@Nullable Output<String> timeLastValidated) {
            $.timeLastValidated = timeLastValidated;
            return this;
        }

        /**
         * @param timeLastValidated The date and time of the most recent validation performed on the backup.
         * 
         * @return builder
         * 
         */
        public Builder timeLastValidated(String timeLastValidated) {
            return timeLastValidated(Output.of(timeLastValidated));
        }

        /**
         * @param validationStatus The status of backup validation:  NOT_VALIDATED (Default): The backup has not been validated.  VALIDATED: The backup has been validated successfully.  NEEDS_ATTENTION: The backup validation failed due to a transient issue. Validation should be retried.  FAILED: The backup cannot be restored.
         * 
         * @return builder
         * 
         */
        public Builder validationStatus(@Nullable Output<String> validationStatus) {
            $.validationStatus = validationStatus;
            return this;
        }

        /**
         * @param validationStatus The status of backup validation:  NOT_VALIDATED (Default): The backup has not been validated.  VALIDATED: The backup has been validated successfully.  NEEDS_ATTENTION: The backup validation failed due to a transient issue. Validation should be retried.  FAILED: The backup cannot be restored.
         * 
         * @return builder
         * 
         */
        public Builder validationStatus(String validationStatus) {
            return validationStatus(Output.of(validationStatus));
        }

        public MysqlBackupBackupValidationDetailArgs build() {
            return $;
        }
    }

}
