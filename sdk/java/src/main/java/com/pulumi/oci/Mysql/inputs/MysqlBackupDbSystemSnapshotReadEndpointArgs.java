// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MysqlBackupDbSystemSnapshotReadEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final MysqlBackupDbSystemSnapshotReadEndpointArgs Empty = new MysqlBackupDbSystemSnapshotReadEndpointArgs();

    /**
     * A list of IP addresses of read replicas that are excluded from serving read requests.
     * 
     */
    @Import(name="excludeIps")
    private @Nullable Output<List<String>> excludeIps;

    /**
     * @return A list of IP addresses of read replicas that are excluded from serving read requests.
     * 
     */
    public Optional<Output<List<String>>> excludeIps() {
        return Optional.ofNullable(this.excludeIps);
    }

    /**
     * Specifies if the DB System read endpoint is enabled or not.
     * 
     */
    @Import(name="isEnabled")
    private @Nullable Output<Boolean> isEnabled;

    /**
     * @return Specifies if the DB System read endpoint is enabled or not.
     * 
     */
    public Optional<Output<Boolean>> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }

    /**
     * The hostname for the read endpoint of the DB System. Used for DNS.
     * 
     */
    @Import(name="readEndpointHostnameLabel")
    private @Nullable Output<String> readEndpointHostnameLabel;

    /**
     * @return The hostname for the read endpoint of the DB System. Used for DNS.
     * 
     */
    public Optional<Output<String>> readEndpointHostnameLabel() {
        return Optional.ofNullable(this.readEndpointHostnameLabel);
    }

    /**
     * The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet&#39;s CIDR. If you don&#39;t specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a &#34;dotted-quad&#34; style IPv4 address.
     * 
     */
    @Import(name="readEndpointIpAddress")
    private @Nullable Output<String> readEndpointIpAddress;

    /**
     * @return The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet&#39;s CIDR. If you don&#39;t specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a &#34;dotted-quad&#34; style IPv4 address.
     * 
     */
    public Optional<Output<String>> readEndpointIpAddress() {
        return Optional.ofNullable(this.readEndpointIpAddress);
    }

    private MysqlBackupDbSystemSnapshotReadEndpointArgs() {}

    private MysqlBackupDbSystemSnapshotReadEndpointArgs(MysqlBackupDbSystemSnapshotReadEndpointArgs $) {
        this.excludeIps = $.excludeIps;
        this.isEnabled = $.isEnabled;
        this.readEndpointHostnameLabel = $.readEndpointHostnameLabel;
        this.readEndpointIpAddress = $.readEndpointIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MysqlBackupDbSystemSnapshotReadEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MysqlBackupDbSystemSnapshotReadEndpointArgs $;

        public Builder() {
            $ = new MysqlBackupDbSystemSnapshotReadEndpointArgs();
        }

        public Builder(MysqlBackupDbSystemSnapshotReadEndpointArgs defaults) {
            $ = new MysqlBackupDbSystemSnapshotReadEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param excludeIps A list of IP addresses of read replicas that are excluded from serving read requests.
         * 
         * @return builder
         * 
         */
        public Builder excludeIps(@Nullable Output<List<String>> excludeIps) {
            $.excludeIps = excludeIps;
            return this;
        }

        /**
         * @param excludeIps A list of IP addresses of read replicas that are excluded from serving read requests.
         * 
         * @return builder
         * 
         */
        public Builder excludeIps(List<String> excludeIps) {
            return excludeIps(Output.of(excludeIps));
        }

        /**
         * @param excludeIps A list of IP addresses of read replicas that are excluded from serving read requests.
         * 
         * @return builder
         * 
         */
        public Builder excludeIps(String... excludeIps) {
            return excludeIps(List.of(excludeIps));
        }

        /**
         * @param isEnabled Specifies if the DB System read endpoint is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(@Nullable Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled Specifies if the DB System read endpoint is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param readEndpointHostnameLabel The hostname for the read endpoint of the DB System. Used for DNS.
         * 
         * @return builder
         * 
         */
        public Builder readEndpointHostnameLabel(@Nullable Output<String> readEndpointHostnameLabel) {
            $.readEndpointHostnameLabel = readEndpointHostnameLabel;
            return this;
        }

        /**
         * @param readEndpointHostnameLabel The hostname for the read endpoint of the DB System. Used for DNS.
         * 
         * @return builder
         * 
         */
        public Builder readEndpointHostnameLabel(String readEndpointHostnameLabel) {
            return readEndpointHostnameLabel(Output.of(readEndpointHostnameLabel));
        }

        /**
         * @param readEndpointIpAddress The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet&#39;s CIDR. If you don&#39;t specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a &#34;dotted-quad&#34; style IPv4 address.
         * 
         * @return builder
         * 
         */
        public Builder readEndpointIpAddress(@Nullable Output<String> readEndpointIpAddress) {
            $.readEndpointIpAddress = readEndpointIpAddress;
            return this;
        }

        /**
         * @param readEndpointIpAddress The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet&#39;s CIDR. If you don&#39;t specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a &#34;dotted-quad&#34; style IPv4 address.
         * 
         * @return builder
         * 
         */
        public Builder readEndpointIpAddress(String readEndpointIpAddress) {
            return readEndpointIpAddress(Output.of(readEndpointIpAddress));
        }

        public MysqlBackupDbSystemSnapshotReadEndpointArgs build() {
            return $;
        }
    }

}
