// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MysqlBackupDbSystemSnapshotSecureConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final MysqlBackupDbSystemSnapshotSecureConnectionArgs Empty = new MysqlBackupDbSystemSnapshotSecureConnectionArgs();

    /**
     * Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
     * 
     */
    @Import(name="certificateGenerationType")
    private @Nullable Output<String> certificateGenerationType;

    /**
     * @return Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
     * 
     */
    public Optional<Output<String>> certificateGenerationType() {
        return Optional.ofNullable(this.certificateGenerationType);
    }

    /**
     * The OCID of the certificate to use.
     * 
     */
    @Import(name="certificateId")
    private @Nullable Output<String> certificateId;

    /**
     * @return The OCID of the certificate to use.
     * 
     */
    public Optional<Output<String>> certificateId() {
        return Optional.ofNullable(this.certificateId);
    }

    private MysqlBackupDbSystemSnapshotSecureConnectionArgs() {}

    private MysqlBackupDbSystemSnapshotSecureConnectionArgs(MysqlBackupDbSystemSnapshotSecureConnectionArgs $) {
        this.certificateGenerationType = $.certificateGenerationType;
        this.certificateId = $.certificateId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MysqlBackupDbSystemSnapshotSecureConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MysqlBackupDbSystemSnapshotSecureConnectionArgs $;

        public Builder() {
            $ = new MysqlBackupDbSystemSnapshotSecureConnectionArgs();
        }

        public Builder(MysqlBackupDbSystemSnapshotSecureConnectionArgs defaults) {
            $ = new MysqlBackupDbSystemSnapshotSecureConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateGenerationType Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
         * 
         * @return builder
         * 
         */
        public Builder certificateGenerationType(@Nullable Output<String> certificateGenerationType) {
            $.certificateGenerationType = certificateGenerationType;
            return this;
        }

        /**
         * @param certificateGenerationType Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
         * 
         * @return builder
         * 
         */
        public Builder certificateGenerationType(String certificateGenerationType) {
            return certificateGenerationType(Output.of(certificateGenerationType));
        }

        /**
         * @param certificateId The OCID of the certificate to use.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(@Nullable Output<String> certificateId) {
            $.certificateId = certificateId;
            return this;
        }

        /**
         * @param certificateId The OCID of the certificate to use.
         * 
         * @return builder
         * 
         */
        public Builder certificateId(String certificateId) {
            return certificateId(Output.of(certificateId));
        }

        public MysqlBackupDbSystemSnapshotSecureConnectionArgs build() {
            return $;
        }
    }

}
