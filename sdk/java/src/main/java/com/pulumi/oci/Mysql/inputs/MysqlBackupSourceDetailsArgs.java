// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MysqlBackupSourceDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MysqlBackupSourceDetailsArgs Empty = new MysqlBackupSourceDetailsArgs();

    /**
     * The OCID of the source backup.
     * 
     */
    @Import(name="backupId", required=true)
    private Output<String> backupId;

    /**
     * @return The OCID of the source backup.
     * 
     */
    public Output<String> backupId() {
        return this.backupId;
    }

    /**
     * (Updatable) The OCID of the compartment the backup exists in.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment the backup exists in.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The region of the backup source.
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return The region of the backup source.
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private MysqlBackupSourceDetailsArgs() {}

    private MysqlBackupSourceDetailsArgs(MysqlBackupSourceDetailsArgs $) {
        this.backupId = $.backupId;
        this.compartmentId = $.compartmentId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MysqlBackupSourceDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MysqlBackupSourceDetailsArgs $;

        public Builder() {
            $ = new MysqlBackupSourceDetailsArgs();
        }

        public Builder(MysqlBackupSourceDetailsArgs defaults) {
            $ = new MysqlBackupSourceDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupId The OCID of the source backup.
         * 
         * @return builder
         * 
         */
        public Builder backupId(Output<String> backupId) {
            $.backupId = backupId;
            return this;
        }

        /**
         * @param backupId The OCID of the source backup.
         * 
         * @return builder
         * 
         */
        public Builder backupId(String backupId) {
            return backupId(Output.of(backupId));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment the backup exists in.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment the backup exists in.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param region The region of the backup source.
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region of the backup source.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public MysqlBackupSourceDetailsArgs build() {
            if ($.backupId == null) {
                throw new MissingRequiredPropertyException("MysqlBackupSourceDetailsArgs", "backupId");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("MysqlBackupSourceDetailsArgs", "compartmentId");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("MysqlBackupSourceDetailsArgs", "region");
            }
            return $;
        }
    }

}
