// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class MysqlBackupValidateBackupDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final MysqlBackupValidateBackupDetailArgs Empty = new MysqlBackupValidateBackupDetailArgs();

    /**
     * Specifies whether the backup needs to be prepared for fast restore or not. Set to true to prepare the backup **Note:** Prepare backup is a one time operation, therefore this field can be set to true only once.
     * 
     */
    @Import(name="isPreparedBackupRequired", required=true)
    private Output<Boolean> isPreparedBackupRequired;

    /**
     * @return Specifies whether the backup needs to be prepared for fast restore or not. Set to true to prepare the backup **Note:** Prepare backup is a one time operation, therefore this field can be set to true only once.
     * 
     */
    public Output<Boolean> isPreparedBackupRequired() {
        return this.isPreparedBackupRequired;
    }

    private MysqlBackupValidateBackupDetailArgs() {}

    private MysqlBackupValidateBackupDetailArgs(MysqlBackupValidateBackupDetailArgs $) {
        this.isPreparedBackupRequired = $.isPreparedBackupRequired;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MysqlBackupValidateBackupDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MysqlBackupValidateBackupDetailArgs $;

        public Builder() {
            $ = new MysqlBackupValidateBackupDetailArgs();
        }

        public Builder(MysqlBackupValidateBackupDetailArgs defaults) {
            $ = new MysqlBackupValidateBackupDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isPreparedBackupRequired Specifies whether the backup needs to be prepared for fast restore or not. Set to true to prepare the backup **Note:** Prepare backup is a one time operation, therefore this field can be set to true only once.
         * 
         * @return builder
         * 
         */
        public Builder isPreparedBackupRequired(Output<Boolean> isPreparedBackupRequired) {
            $.isPreparedBackupRequired = isPreparedBackupRequired;
            return this;
        }

        /**
         * @param isPreparedBackupRequired Specifies whether the backup needs to be prepared for fast restore or not. Set to true to prepare the backup **Note:** Prepare backup is a one time operation, therefore this field can be set to true only once.
         * 
         * @return builder
         * 
         */
        public Builder isPreparedBackupRequired(Boolean isPreparedBackupRequired) {
            return isPreparedBackupRequired(Output.of(isPreparedBackupRequired));
        }

        public MysqlBackupValidateBackupDetailArgs build() {
            if ($.isPreparedBackupRequired == null) {
                throw new MissingRequiredPropertyException("MysqlBackupValidateBackupDetailArgs", "isPreparedBackupRequired");
            }
            return $;
        }
    }

}
