// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MysqlDbSystemBackupPolicyCopyPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final MysqlDbSystemBackupPolicyCopyPolicyArgs Empty = new MysqlDbSystemBackupPolicyCopyPolicyArgs();

    /**
     * (Updatable) Number of days to retain the copied DB system backup.
     * 
     */
    @Import(name="backupCopyRetentionInDays")
    private @Nullable Output<Integer> backupCopyRetentionInDays;

    /**
     * @return (Updatable) Number of days to retain the copied DB system backup.
     * 
     */
    public Optional<Output<Integer>> backupCopyRetentionInDays() {
        return Optional.ofNullable(this.backupCopyRetentionInDays);
    }

    /**
     * (Updatable) The destination region name to which the DB system backup will be copied.
     * 
     */
    @Import(name="copyToRegion", required=true)
    private Output<String> copyToRegion;

    /**
     * @return (Updatable) The destination region name to which the DB system backup will be copied.
     * 
     */
    public Output<String> copyToRegion() {
        return this.copyToRegion;
    }

    private MysqlDbSystemBackupPolicyCopyPolicyArgs() {}

    private MysqlDbSystemBackupPolicyCopyPolicyArgs(MysqlDbSystemBackupPolicyCopyPolicyArgs $) {
        this.backupCopyRetentionInDays = $.backupCopyRetentionInDays;
        this.copyToRegion = $.copyToRegion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MysqlDbSystemBackupPolicyCopyPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MysqlDbSystemBackupPolicyCopyPolicyArgs $;

        public Builder() {
            $ = new MysqlDbSystemBackupPolicyCopyPolicyArgs();
        }

        public Builder(MysqlDbSystemBackupPolicyCopyPolicyArgs defaults) {
            $ = new MysqlDbSystemBackupPolicyCopyPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupCopyRetentionInDays (Updatable) Number of days to retain the copied DB system backup.
         * 
         * @return builder
         * 
         */
        public Builder backupCopyRetentionInDays(@Nullable Output<Integer> backupCopyRetentionInDays) {
            $.backupCopyRetentionInDays = backupCopyRetentionInDays;
            return this;
        }

        /**
         * @param backupCopyRetentionInDays (Updatable) Number of days to retain the copied DB system backup.
         * 
         * @return builder
         * 
         */
        public Builder backupCopyRetentionInDays(Integer backupCopyRetentionInDays) {
            return backupCopyRetentionInDays(Output.of(backupCopyRetentionInDays));
        }

        /**
         * @param copyToRegion (Updatable) The destination region name to which the DB system backup will be copied.
         * 
         * @return builder
         * 
         */
        public Builder copyToRegion(Output<String> copyToRegion) {
            $.copyToRegion = copyToRegion;
            return this;
        }

        /**
         * @param copyToRegion (Updatable) The destination region name to which the DB system backup will be copied.
         * 
         * @return builder
         * 
         */
        public Builder copyToRegion(String copyToRegion) {
            return copyToRegion(Output.of(copyToRegion));
        }

        public MysqlDbSystemBackupPolicyCopyPolicyArgs build() {
            if ($.copyToRegion == null) {
                throw new MissingRequiredPropertyException("MysqlDbSystemBackupPolicyCopyPolicyArgs", "copyToRegion");
            }
            return $;
        }
    }

}
