// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Mysql.outputs.GetChannelsChannelTargetFilter;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetChannelsChannelTarget {
    /**
     * @return The username for the replication applier of the target MySQL DB System.
     * 
     */
    private @Nullable String applierUsername;
    /**
     * @return The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
     * 
     */
    private @Nullable String channelName;
    /**
     * @return The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String dbSystemId;
    /**
     * @return Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
     * 
     */
    private @Nullable Integer delayInSeconds;
    /**
     * @return Replication filter rules to be applied at the DB System Channel target.
     * 
     */
    private @Nullable List<GetChannelsChannelTargetFilter> filters;
    /**
     * @return Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
     * 
     */
    private @Nullable String tablesWithoutPrimaryKeyHandling;
    /**
     * @return The specific target identifier.
     * 
     */
    private @Nullable String targetType;

    private GetChannelsChannelTarget() {}
    /**
     * @return The username for the replication applier of the target MySQL DB System.
     * 
     */
    public Optional<String> applierUsername() {
        return Optional.ofNullable(this.applierUsername);
    }
    /**
     * @return The case-insensitive name that identifies the replication channel. Channel names must follow the rules defined for [MySQL identifiers](https://dev.mysql.com/doc/refman/8.0/en/identifiers.html). The names of non-Deleted Channels must be unique for each DB System.
     * 
     */
    public Optional<String> channelName() {
        return Optional.ofNullable(this.channelName);
    }
    /**
     * @return The DB System [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> dbSystemId() {
        return Optional.ofNullable(this.dbSystemId);
    }
    /**
     * @return Specifies the amount of time, in seconds, that the channel waits before  applying a transaction received from the source.
     * 
     */
    public Optional<Integer> delayInSeconds() {
        return Optional.ofNullable(this.delayInSeconds);
    }
    /**
     * @return Replication filter rules to be applied at the DB System Channel target.
     * 
     */
    public List<GetChannelsChannelTargetFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return Specifies how a replication channel handles the creation and alteration of tables  that do not have a primary key.
     * 
     */
    public Optional<String> tablesWithoutPrimaryKeyHandling() {
        return Optional.ofNullable(this.tablesWithoutPrimaryKeyHandling);
    }
    /**
     * @return The specific target identifier.
     * 
     */
    public Optional<String> targetType() {
        return Optional.ofNullable(this.targetType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetChannelsChannelTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String applierUsername;
        private @Nullable String channelName;
        private @Nullable String dbSystemId;
        private @Nullable Integer delayInSeconds;
        private @Nullable List<GetChannelsChannelTargetFilter> filters;
        private @Nullable String tablesWithoutPrimaryKeyHandling;
        private @Nullable String targetType;
        public Builder() {}
        public Builder(GetChannelsChannelTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applierUsername = defaults.applierUsername;
    	      this.channelName = defaults.channelName;
    	      this.dbSystemId = defaults.dbSystemId;
    	      this.delayInSeconds = defaults.delayInSeconds;
    	      this.filters = defaults.filters;
    	      this.tablesWithoutPrimaryKeyHandling = defaults.tablesWithoutPrimaryKeyHandling;
    	      this.targetType = defaults.targetType;
        }

        @CustomType.Setter
        public Builder applierUsername(@Nullable String applierUsername) {
            this.applierUsername = applierUsername;
            return this;
        }
        @CustomType.Setter
        public Builder channelName(@Nullable String channelName) {
            this.channelName = channelName;
            return this;
        }
        @CustomType.Setter
        public Builder dbSystemId(@Nullable String dbSystemId) {
            this.dbSystemId = dbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder delayInSeconds(@Nullable Integer delayInSeconds) {
            this.delayInSeconds = delayInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetChannelsChannelTargetFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetChannelsChannelTargetFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder tablesWithoutPrimaryKeyHandling(@Nullable String tablesWithoutPrimaryKeyHandling) {
            this.tablesWithoutPrimaryKeyHandling = tablesWithoutPrimaryKeyHandling;
            return this;
        }
        @CustomType.Setter
        public Builder targetType(@Nullable String targetType) {
            this.targetType = targetType;
            return this;
        }
        public GetChannelsChannelTarget build() {
            final var o = new GetChannelsChannelTarget();
            o.applierUsername = applierUsername;
            o.channelName = channelName;
            o.dbSystemId = dbSystemId;
            o.delayInSeconds = delayInSeconds;
            o.filters = filters;
            o.tablesWithoutPrimaryKeyHandling = tablesWithoutPrimaryKeyHandling;
            o.targetType = targetType;
            return o;
        }
    }
}
