// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Mysql.outputs.GetChannelsChannel;
import com.pulumi.oci.Mysql.outputs.GetChannelsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetChannelsResult {
    private @Nullable String channelId;
    /**
     * @return The list of channels.
     * 
     */
    private List<GetChannelsChannel> channels;
    /**
     * @return The OCID of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The OCID of the source DB System.
     * 
     */
    private @Nullable String dbSystemId;
    /**
     * @return The user-friendly name for the Channel. It does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    private @Nullable List<GetChannelsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Whether the Channel has been enabled by the user.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return The state of the Channel.
     * 
     */
    private @Nullable String state;

    private GetChannelsResult() {}
    public Optional<String> channelId() {
        return Optional.ofNullable(this.channelId);
    }
    /**
     * @return The list of channels.
     * 
     */
    public List<GetChannelsChannel> channels() {
        return this.channels;
    }
    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The OCID of the source DB System.
     * 
     */
    public Optional<String> dbSystemId() {
        return Optional.ofNullable(this.dbSystemId);
    }
    /**
     * @return The user-friendly name for the Channel. It does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetChannelsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether the Channel has been enabled by the user.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return The state of the Channel.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetChannelsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String channelId;
        private List<GetChannelsChannel> channels;
        private String compartmentId;
        private @Nullable String dbSystemId;
        private @Nullable String displayName;
        private @Nullable List<GetChannelsFilter> filters;
        private String id;
        private @Nullable Boolean isEnabled;
        private @Nullable String state;
        public Builder() {}
        public Builder(GetChannelsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelId = defaults.channelId;
    	      this.channels = defaults.channels;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbSystemId = defaults.dbSystemId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder channelId(@Nullable String channelId) {
            this.channelId = channelId;
            return this;
        }
        @CustomType.Setter
        public Builder channels(List<GetChannelsChannel> channels) {
            this.channels = Objects.requireNonNull(channels);
            return this;
        }
        public Builder channels(GetChannelsChannel... channels) {
            return channels(List.of(channels));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder dbSystemId(@Nullable String dbSystemId) {
            this.dbSystemId = dbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetChannelsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetChannelsFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public GetChannelsResult build() {
            final var _resultValue = new GetChannelsResult();
            _resultValue.channelId = channelId;
            _resultValue.channels = channels;
            _resultValue.compartmentId = compartmentId;
            _resultValue.dbSystemId = dbSystemId;
            _resultValue.displayName = displayName;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.isEnabled = isEnabled;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
