// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Mysql.outputs.GetMysqlConfigurationsConfigurationInitVariable;
import com.pulumi.oci.Mysql.outputs.GetMysqlConfigurationsConfigurationVariable;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMysqlConfigurationsConfiguration {
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return User-provided data about the Configuration.
     * 
     */
    private @Nullable String description;
    /**
     * @return A filter to return only the resource matching the given display name exactly.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the Configuration.
     * 
     */
    private @Nullable String id;
    /**
     * @return User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
     * 
     */
    private @Nullable List<GetMysqlConfigurationsConfigurationInitVariable> initVariables;
    /**
     * @return The OCID of the Configuration from which this Configuration is &#34;derived&#34;. This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
     * 
     */
    private @Nullable String parentConfigurationId;
    /**
     * @return The requested Shape name.
     * 
     */
    private @Nullable String shapeName;
    /**
     * @return Configuration Lifecycle State
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return The requested Configuration types.
     * 
     */
    private @Nullable String type;
    /**
     * @return User-defined service variables.
     * 
     */
    private @Nullable List<GetMysqlConfigurationsConfigurationVariable> variables;

    private GetMysqlConfigurationsConfiguration() {}
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return User-provided data about the Configuration.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A filter to return only the resource matching the given display name exactly.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the Configuration.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return User-defined service variables set only at DB system initialization. These variables cannot be changed later at runtime.
     * 
     */
    public List<GetMysqlConfigurationsConfigurationInitVariable> initVariables() {
        return this.initVariables == null ? List.of() : this.initVariables;
    }
    /**
     * @return The OCID of the Configuration from which this Configuration is &#34;derived&#34;. This is entirely a metadata relationship. There is no relation between the values in this Configuration and its parent.
     * 
     */
    public Optional<String> parentConfigurationId() {
        return Optional.ofNullable(this.parentConfigurationId);
    }
    /**
     * @return The requested Shape name.
     * 
     */
    public Optional<String> shapeName() {
        return Optional.ofNullable(this.shapeName);
    }
    /**
     * @return Configuration Lifecycle State
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the Configuration was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time the Configuration was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return The requested Configuration types.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return User-defined service variables.
     * 
     */
    public List<GetMysqlConfigurationsConfigurationVariable> variables() {
        return this.variables == null ? List.of() : this.variables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMysqlConfigurationsConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable List<GetMysqlConfigurationsConfigurationInitVariable> initVariables;
        private @Nullable String parentConfigurationId;
        private @Nullable String shapeName;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String type;
        private @Nullable List<GetMysqlConfigurationsConfigurationVariable> variables;
        public Builder() {}
        public Builder(GetMysqlConfigurationsConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.initVariables = defaults.initVariables;
    	      this.parentConfigurationId = defaults.parentConfigurationId;
    	      this.shapeName = defaults.shapeName;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
    	      this.variables = defaults.variables;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder initVariables(@Nullable List<GetMysqlConfigurationsConfigurationInitVariable> initVariables) {
            this.initVariables = initVariables;
            return this;
        }
        public Builder initVariables(GetMysqlConfigurationsConfigurationInitVariable... initVariables) {
            return initVariables(List.of(initVariables));
        }
        @CustomType.Setter
        public Builder parentConfigurationId(@Nullable String parentConfigurationId) {
            this.parentConfigurationId = parentConfigurationId;
            return this;
        }
        @CustomType.Setter
        public Builder shapeName(@Nullable String shapeName) {
            this.shapeName = shapeName;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder variables(@Nullable List<GetMysqlConfigurationsConfigurationVariable> variables) {
            this.variables = variables;
            return this;
        }
        public Builder variables(GetMysqlConfigurationsConfigurationVariable... variables) {
            return variables(List.of(variables));
        }
        public GetMysqlConfigurationsConfiguration build() {
            final var o = new GetMysqlConfigurationsConfiguration();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.initVariables = initVariables;
            o.parentConfigurationId = parentConfigurationId;
            o.shapeName = shapeName;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.type = type;
            o.variables = variables;
            return o;
        }
    }
}
