// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Mysql.outputs.GetMysqlDbSystemChannelSource;
import com.pulumi.oci.Mysql.outputs.GetMysqlDbSystemChannelTarget;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMysqlDbSystemChannel {
    /**
     * @return The OCID of the compartment the DB System belongs in.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return The user-friendly name for the DB System. It does not have to be unique.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return The OCID of the DB System.
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether the Channel has been enabled by the user.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return Additional information about the current lifecycleState.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return Parameters detailing how to provision the initial data of the DB System.
     * 
     */
    private @Nullable List<GetMysqlDbSystemChannelSource> sources;
    /**
     * @return The current state of the DB System.
     * 
     */
    private @Nullable String state;
    /**
     * @return Details about the Channel target.
     * 
     */
    private @Nullable List<GetMysqlDbSystemChannelTarget> targets;
    /**
     * @return The date and time the DB System was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the DB System was last updated.
     * 
     */
    private @Nullable String timeUpdated;

    private GetMysqlDbSystemChannel() {}
    /**
     * @return The OCID of the compartment the DB System belongs in.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return The user-friendly name for the DB System. It does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return The OCID of the DB System.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether the Channel has been enabled by the user.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return Additional information about the current lifecycleState.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return Parameters detailing how to provision the initial data of the DB System.
     * 
     */
    public List<GetMysqlDbSystemChannelSource> sources() {
        return this.sources == null ? List.of() : this.sources;
    }
    /**
     * @return The current state of the DB System.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return Details about the Channel target.
     * 
     */
    public List<GetMysqlDbSystemChannelTarget> targets() {
        return this.targets == null ? List.of() : this.targets;
    }
    /**
     * @return The date and time the DB System was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the DB System was last updated.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMysqlDbSystemChannel defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String id;
        private @Nullable Boolean isEnabled;
        private @Nullable String lifecycleDetails;
        private @Nullable List<GetMysqlDbSystemChannelSource> sources;
        private @Nullable String state;
        private @Nullable List<GetMysqlDbSystemChannelTarget> targets;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetMysqlDbSystemChannel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isEnabled = defaults.isEnabled;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.sources = defaults.sources;
    	      this.state = defaults.state;
    	      this.targets = defaults.targets;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder sources(@Nullable List<GetMysqlDbSystemChannelSource> sources) {
            this.sources = sources;
            return this;
        }
        public Builder sources(GetMysqlDbSystemChannelSource... sources) {
            return sources(List.of(sources));
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder targets(@Nullable List<GetMysqlDbSystemChannelTarget> targets) {
            this.targets = targets;
            return this;
        }
        public Builder targets(GetMysqlDbSystemChannelTarget... targets) {
            return targets(List.of(targets));
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetMysqlDbSystemChannel build() {
            final var o = new GetMysqlDbSystemChannel();
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.isEnabled = isEnabled;
            o.lifecycleDetails = lifecycleDetails;
            o.sources = sources;
            o.state = state;
            o.targets = targets;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
