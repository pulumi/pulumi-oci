// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMysqlDbSystemHeatWaveCluster {
    /**
     * @return The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
     * 
     */
    private @Nullable Integer clusterSize;
    /**
     * @return Lakehouse enabled status for the HeatWave cluster.
     * 
     */
    private @Nullable Boolean isLakehouseEnabled;
    /**
     * @return The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
     * 
     */
    private @Nullable String shapeName;
    /**
     * @return The current state of the DB System.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the DB System was created.
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the DB System was last updated.
     * 
     */
    private @Nullable String timeUpdated;

    private GetMysqlDbSystemHeatWaveCluster() {}
    /**
     * @return The number of analytics-processing compute instances, of the specified shape, in the HeatWave cluster.
     * 
     */
    public Optional<Integer> clusterSize() {
        return Optional.ofNullable(this.clusterSize);
    }
    /**
     * @return Lakehouse enabled status for the HeatWave cluster.
     * 
     */
    public Optional<Boolean> isLakehouseEnabled() {
        return Optional.ofNullable(this.isLakehouseEnabled);
    }
    /**
     * @return The shape of the primary instances of the DB System. The shape determines resources allocated to a DB System - CPU cores and memory for VM shapes; CPU cores, memory and storage for non-VM (or bare metal) shapes. To get a list of shapes, use (the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20181021/ShapeSummary/ListShapes) operation.
     * 
     */
    public Optional<String> shapeName() {
        return Optional.ofNullable(this.shapeName);
    }
    /**
     * @return The current state of the DB System.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the DB System was created.
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the DB System was last updated.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMysqlDbSystemHeatWaveCluster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer clusterSize;
        private @Nullable Boolean isLakehouseEnabled;
        private @Nullable String shapeName;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        public Builder() {}
        public Builder(GetMysqlDbSystemHeatWaveCluster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterSize = defaults.clusterSize;
    	      this.isLakehouseEnabled = defaults.isLakehouseEnabled;
    	      this.shapeName = defaults.shapeName;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder clusterSize(@Nullable Integer clusterSize) {
            this.clusterSize = clusterSize;
            return this;
        }
        @CustomType.Setter
        public Builder isLakehouseEnabled(@Nullable Boolean isLakehouseEnabled) {
            this.isLakehouseEnabled = isLakehouseEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder shapeName(@Nullable String shapeName) {
            this.shapeName = shapeName;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetMysqlDbSystemHeatWaveCluster build() {
            final var o = new GetMysqlDbSystemHeatWaveCluster();
            o.clusterSize = clusterSize;
            o.isLakehouseEnabled = isLakehouseEnabled;
            o.shapeName = shapeName;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            return o;
        }
    }
}
