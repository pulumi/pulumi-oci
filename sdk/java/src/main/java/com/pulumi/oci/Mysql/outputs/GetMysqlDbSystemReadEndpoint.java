// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMysqlDbSystemReadEndpoint {
    /**
     * @return A list of IP addresses of read replicas that are excluded from serving read requests.
     * 
     */
    private List<String> excludeIps;
    /**
     * @return Specifies if the DB System read endpoint is enabled or not.
     * 
     */
    private Boolean isEnabled;
    /**
     * @return The hostname for the read endpoint of the DB System. Used for DNS.
     * 
     */
    private String readEndpointHostnameLabel;
    /**
     * @return The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet&#39;s CIDR. If you don&#39;t specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a &#34;dotted-quad&#34; style IPv4 address.
     * 
     */
    private String readEndpointIpAddress;

    private GetMysqlDbSystemReadEndpoint() {}
    /**
     * @return A list of IP addresses of read replicas that are excluded from serving read requests.
     * 
     */
    public List<String> excludeIps() {
        return this.excludeIps;
    }
    /**
     * @return Specifies if the DB System read endpoint is enabled or not.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return The hostname for the read endpoint of the DB System. Used for DNS.
     * 
     */
    public String readEndpointHostnameLabel() {
        return this.readEndpointHostnameLabel;
    }
    /**
     * @return The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet&#39;s CIDR. If you don&#39;t specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a &#34;dotted-quad&#34; style IPv4 address.
     * 
     */
    public String readEndpointIpAddress() {
        return this.readEndpointIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMysqlDbSystemReadEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> excludeIps;
        private Boolean isEnabled;
        private String readEndpointHostnameLabel;
        private String readEndpointIpAddress;
        public Builder() {}
        public Builder(GetMysqlDbSystemReadEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludeIps = defaults.excludeIps;
    	      this.isEnabled = defaults.isEnabled;
    	      this.readEndpointHostnameLabel = defaults.readEndpointHostnameLabel;
    	      this.readEndpointIpAddress = defaults.readEndpointIpAddress;
        }

        @CustomType.Setter
        public Builder excludeIps(List<String> excludeIps) {
            if (excludeIps == null) {
              throw new MissingRequiredPropertyException("GetMysqlDbSystemReadEndpoint", "excludeIps");
            }
            this.excludeIps = excludeIps;
            return this;
        }
        public Builder excludeIps(String... excludeIps) {
            return excludeIps(List.of(excludeIps));
        }
        @CustomType.Setter
        public Builder isEnabled(Boolean isEnabled) {
            if (isEnabled == null) {
              throw new MissingRequiredPropertyException("GetMysqlDbSystemReadEndpoint", "isEnabled");
            }
            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder readEndpointHostnameLabel(String readEndpointHostnameLabel) {
            if (readEndpointHostnameLabel == null) {
              throw new MissingRequiredPropertyException("GetMysqlDbSystemReadEndpoint", "readEndpointHostnameLabel");
            }
            this.readEndpointHostnameLabel = readEndpointHostnameLabel;
            return this;
        }
        @CustomType.Setter
        public Builder readEndpointIpAddress(String readEndpointIpAddress) {
            if (readEndpointIpAddress == null) {
              throw new MissingRequiredPropertyException("GetMysqlDbSystemReadEndpoint", "readEndpointIpAddress");
            }
            this.readEndpointIpAddress = readEndpointIpAddress;
            return this;
        }
        public GetMysqlDbSystemReadEndpoint build() {
            final var _resultValue = new GetMysqlDbSystemReadEndpoint();
            _resultValue.excludeIps = excludeIps;
            _resultValue.isEnabled = isEnabled;
            _resultValue.readEndpointHostnameLabel = readEndpointHostnameLabel;
            _resultValue.readEndpointIpAddress = readEndpointIpAddress;
            return _resultValue;
        }
    }
}
