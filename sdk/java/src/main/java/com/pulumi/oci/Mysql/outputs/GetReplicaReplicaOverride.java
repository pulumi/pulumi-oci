// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReplicaReplicaOverride {
    /**
     * @return The OCID of the Configuration to be used by the read replica.
     * 
     */
    private @Nullable String configurationId;
    /**
     * @return The MySQL version to be used by the read replica.
     * 
     */
    private @Nullable String mysqlVersion;
    /**
     * @return The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
     * 
     */
    private @Nullable String shapeName;

    private GetReplicaReplicaOverride() {}
    /**
     * @return The OCID of the Configuration to be used by the read replica.
     * 
     */
    public Optional<String> configurationId() {
        return Optional.ofNullable(this.configurationId);
    }
    /**
     * @return The MySQL version to be used by the read replica.
     * 
     */
    public Optional<String> mysqlVersion() {
        return Optional.ofNullable(this.mysqlVersion);
    }
    /**
     * @return The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
     * 
     */
    public Optional<String> shapeName() {
        return Optional.ofNullable(this.shapeName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicaReplicaOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String configurationId;
        private @Nullable String mysqlVersion;
        private @Nullable String shapeName;
        public Builder() {}
        public Builder(GetReplicaReplicaOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationId = defaults.configurationId;
    	      this.mysqlVersion = defaults.mysqlVersion;
    	      this.shapeName = defaults.shapeName;
        }

        @CustomType.Setter
        public Builder configurationId(@Nullable String configurationId) {
            this.configurationId = configurationId;
            return this;
        }
        @CustomType.Setter
        public Builder mysqlVersion(@Nullable String mysqlVersion) {
            this.mysqlVersion = mysqlVersion;
            return this;
        }
        @CustomType.Setter
        public Builder shapeName(@Nullable String shapeName) {
            this.shapeName = shapeName;
            return this;
        }
        public GetReplicaReplicaOverride build() {
            final var o = new GetReplicaReplicaOverride();
            o.configurationId = configurationId;
            o.mysqlVersion = mysqlVersion;
            o.shapeName = shapeName;
            return o;
        }
    }
}
