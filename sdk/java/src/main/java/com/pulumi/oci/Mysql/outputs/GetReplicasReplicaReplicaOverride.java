// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetReplicasReplicaReplicaOverride {
    /**
     * @return The requested Configuration instance.
     * 
     */
    private String configurationId;
    /**
     * @return The MySQL version to be used by the read replica.
     * 
     */
    private String mysqlVersion;
    /**
     * @return Network Security Group OCIDs used for the VNIC attachment.
     * 
     */
    private List<String> nsgIds;
    /**
     * @return The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
     * 
     */
    private String shapeName;

    private GetReplicasReplicaReplicaOverride() {}
    /**
     * @return The requested Configuration instance.
     * 
     */
    public String configurationId() {
        return this.configurationId;
    }
    /**
     * @return The MySQL version to be used by the read replica.
     * 
     */
    public String mysqlVersion() {
        return this.mysqlVersion;
    }
    /**
     * @return Network Security Group OCIDs used for the VNIC attachment.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return The shape currently in use by the read replica. The shape determines the resources allocated:  CPU cores and memory for VM shapes, CPU cores, memory and storage for non-VM (bare metal) shapes.  To get a list of shapes, use the [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/mysql/20190415/ShapeSummary/ListShapes) operation.
     * 
     */
    public String shapeName() {
        return this.shapeName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicasReplicaReplicaOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configurationId;
        private String mysqlVersion;
        private List<String> nsgIds;
        private String shapeName;
        public Builder() {}
        public Builder(GetReplicasReplicaReplicaOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationId = defaults.configurationId;
    	      this.mysqlVersion = defaults.mysqlVersion;
    	      this.nsgIds = defaults.nsgIds;
    	      this.shapeName = defaults.shapeName;
        }

        @CustomType.Setter
        public Builder configurationId(String configurationId) {
            if (configurationId == null) {
              throw new MissingRequiredPropertyException("GetReplicasReplicaReplicaOverride", "configurationId");
            }
            this.configurationId = configurationId;
            return this;
        }
        @CustomType.Setter
        public Builder mysqlVersion(String mysqlVersion) {
            if (mysqlVersion == null) {
              throw new MissingRequiredPropertyException("GetReplicasReplicaReplicaOverride", "mysqlVersion");
            }
            this.mysqlVersion = mysqlVersion;
            return this;
        }
        @CustomType.Setter
        public Builder nsgIds(List<String> nsgIds) {
            if (nsgIds == null) {
              throw new MissingRequiredPropertyException("GetReplicasReplicaReplicaOverride", "nsgIds");
            }
            this.nsgIds = nsgIds;
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        @CustomType.Setter
        public Builder shapeName(String shapeName) {
            if (shapeName == null) {
              throw new MissingRequiredPropertyException("GetReplicasReplicaReplicaOverride", "shapeName");
            }
            this.shapeName = shapeName;
            return this;
        }
        public GetReplicasReplicaReplicaOverride build() {
            final var _resultValue = new GetReplicasReplicaReplicaOverride();
            _resultValue.configurationId = configurationId;
            _resultValue.mysqlVersion = mysqlVersion;
            _resultValue.nsgIds = nsgIds;
            _resultValue.shapeName = shapeName;
            return _resultValue;
        }
    }
}
