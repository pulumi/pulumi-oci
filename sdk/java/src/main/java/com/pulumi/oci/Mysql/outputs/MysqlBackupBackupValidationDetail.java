// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Mysql.outputs.MysqlBackupBackupValidationDetailPreparedBackupDetail;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MysqlBackupBackupValidationDetail {
    /**
     * @return Indicates whether the backup has been prepared successfully.  PREPARED: The backup is prepared one. NOT_PREPARED: The backup is not prepared.
     * 
     */
    private @Nullable String backupPreparationStatus;
    /**
     * @return Error message if the backup validation has failed.
     * 
     */
    private @Nullable String errorMessage;
    /**
     * @return The estimated restore duration of the backup.
     * 
     */
    private @Nullable String estimatedRestoreDuration;
    /**
     * @return Prepared backup details.
     * 
     */
    private @Nullable List<MysqlBackupBackupValidationDetailPreparedBackupDetail> preparedBackupDetails;
    /**
     * @return The date and time of the most recent validation performed on the backup.
     * 
     */
    private @Nullable String timeLastValidated;
    /**
     * @return The status of backup validation:  NOT_VALIDATED (Default): The backup has not been validated.  VALIDATED: The backup has been validated successfully.  NEEDS_ATTENTION: The backup validation failed due to a transient issue. Validation should be retried.  FAILED: The backup cannot be restored.
     * 
     */
    private @Nullable String validationStatus;

    private MysqlBackupBackupValidationDetail() {}
    /**
     * @return Indicates whether the backup has been prepared successfully.  PREPARED: The backup is prepared one. NOT_PREPARED: The backup is not prepared.
     * 
     */
    public Optional<String> backupPreparationStatus() {
        return Optional.ofNullable(this.backupPreparationStatus);
    }
    /**
     * @return Error message if the backup validation has failed.
     * 
     */
    public Optional<String> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }
    /**
     * @return The estimated restore duration of the backup.
     * 
     */
    public Optional<String> estimatedRestoreDuration() {
        return Optional.ofNullable(this.estimatedRestoreDuration);
    }
    /**
     * @return Prepared backup details.
     * 
     */
    public List<MysqlBackupBackupValidationDetailPreparedBackupDetail> preparedBackupDetails() {
        return this.preparedBackupDetails == null ? List.of() : this.preparedBackupDetails;
    }
    /**
     * @return The date and time of the most recent validation performed on the backup.
     * 
     */
    public Optional<String> timeLastValidated() {
        return Optional.ofNullable(this.timeLastValidated);
    }
    /**
     * @return The status of backup validation:  NOT_VALIDATED (Default): The backup has not been validated.  VALIDATED: The backup has been validated successfully.  NEEDS_ATTENTION: The backup validation failed due to a transient issue. Validation should be retried.  FAILED: The backup cannot be restored.
     * 
     */
    public Optional<String> validationStatus() {
        return Optional.ofNullable(this.validationStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MysqlBackupBackupValidationDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupPreparationStatus;
        private @Nullable String errorMessage;
        private @Nullable String estimatedRestoreDuration;
        private @Nullable List<MysqlBackupBackupValidationDetailPreparedBackupDetail> preparedBackupDetails;
        private @Nullable String timeLastValidated;
        private @Nullable String validationStatus;
        public Builder() {}
        public Builder(MysqlBackupBackupValidationDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupPreparationStatus = defaults.backupPreparationStatus;
    	      this.errorMessage = defaults.errorMessage;
    	      this.estimatedRestoreDuration = defaults.estimatedRestoreDuration;
    	      this.preparedBackupDetails = defaults.preparedBackupDetails;
    	      this.timeLastValidated = defaults.timeLastValidated;
    	      this.validationStatus = defaults.validationStatus;
        }

        @CustomType.Setter
        public Builder backupPreparationStatus(@Nullable String backupPreparationStatus) {

            this.backupPreparationStatus = backupPreparationStatus;
            return this;
        }
        @CustomType.Setter
        public Builder errorMessage(@Nullable String errorMessage) {

            this.errorMessage = errorMessage;
            return this;
        }
        @CustomType.Setter
        public Builder estimatedRestoreDuration(@Nullable String estimatedRestoreDuration) {

            this.estimatedRestoreDuration = estimatedRestoreDuration;
            return this;
        }
        @CustomType.Setter
        public Builder preparedBackupDetails(@Nullable List<MysqlBackupBackupValidationDetailPreparedBackupDetail> preparedBackupDetails) {

            this.preparedBackupDetails = preparedBackupDetails;
            return this;
        }
        public Builder preparedBackupDetails(MysqlBackupBackupValidationDetailPreparedBackupDetail... preparedBackupDetails) {
            return preparedBackupDetails(List.of(preparedBackupDetails));
        }
        @CustomType.Setter
        public Builder timeLastValidated(@Nullable String timeLastValidated) {

            this.timeLastValidated = timeLastValidated;
            return this;
        }
        @CustomType.Setter
        public Builder validationStatus(@Nullable String validationStatus) {

            this.validationStatus = validationStatus;
            return this;
        }
        public MysqlBackupBackupValidationDetail build() {
            final var _resultValue = new MysqlBackupBackupValidationDetail();
            _resultValue.backupPreparationStatus = backupPreparationStatus;
            _resultValue.errorMessage = errorMessage;
            _resultValue.estimatedRestoreDuration = estimatedRestoreDuration;
            _resultValue.preparedBackupDetails = preparedBackupDetails;
            _resultValue.timeLastValidated = timeLastValidated;
            _resultValue.validationStatus = validationStatus;
            return _resultValue;
        }
    }
}
