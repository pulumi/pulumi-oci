// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MysqlBackupDbSystemSnapshotDataStorage {
    /**
     * @return The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
     * 
     */
    private @Nullable Integer allocatedStorageSizeInGbs;
    /**
     * @return DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
     * 
     */
    private @Nullable Integer dataStorageSizeInGb;
    /**
     * @return The absolute limit the DB System&#39;s storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
     * 
     */
    private @Nullable Integer dataStorageSizeLimitInGbs;
    /**
     * @return Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
     * 
     */
    private @Nullable Boolean isAutoExpandStorageEnabled;
    /**
     * @return Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
     * 
     */
    private @Nullable Integer maxStorageSizeInGbs;

    private MysqlBackupDbSystemSnapshotDataStorage() {}
    /**
     * @return The actual allocated storage size for the DB System. This may be higher than dataStorageSizeInGBs if an automatic storage expansion has occurred.
     * 
     */
    public Optional<Integer> allocatedStorageSizeInGbs() {
        return Optional.ofNullable(this.allocatedStorageSizeInGbs);
    }
    /**
     * @return DEPRECATED: User specified size of the data volume. May be less than current allocatedStorageSizeInGBs. Replaced by dataStorage.dataStorageSizeInGBs.
     * 
     */
    public Optional<Integer> dataStorageSizeInGb() {
        return Optional.ofNullable(this.dataStorageSizeInGb);
    }
    /**
     * @return The absolute limit the DB System&#39;s storage size may ever expand to, either manually or automatically. This limit is based based on the initial dataStorageSizeInGBs when the DB System was first created. Both dataStorageSizeInGBs and maxDataStorageSizeInGBs can not exceed this value.
     * 
     */
    public Optional<Integer> dataStorageSizeLimitInGbs() {
        return Optional.ofNullable(this.dataStorageSizeLimitInGbs);
    }
    /**
     * @return Enable/disable automatic storage expansion. When set to true, the DB System will automatically add storage incrementally up to the value specified in maxStorageSizeInGBs.
     * 
     */
    public Optional<Boolean> isAutoExpandStorageEnabled() {
        return Optional.ofNullable(this.isAutoExpandStorageEnabled);
    }
    /**
     * @return Maximum storage size this DB System can expand to. When isAutoExpandStorageEnabled is set to true, the DB System will add storage incrementally up to this value.
     * 
     */
    public Optional<Integer> maxStorageSizeInGbs() {
        return Optional.ofNullable(this.maxStorageSizeInGbs);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MysqlBackupDbSystemSnapshotDataStorage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer allocatedStorageSizeInGbs;
        private @Nullable Integer dataStorageSizeInGb;
        private @Nullable Integer dataStorageSizeLimitInGbs;
        private @Nullable Boolean isAutoExpandStorageEnabled;
        private @Nullable Integer maxStorageSizeInGbs;
        public Builder() {}
        public Builder(MysqlBackupDbSystemSnapshotDataStorage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocatedStorageSizeInGbs = defaults.allocatedStorageSizeInGbs;
    	      this.dataStorageSizeInGb = defaults.dataStorageSizeInGb;
    	      this.dataStorageSizeLimitInGbs = defaults.dataStorageSizeLimitInGbs;
    	      this.isAutoExpandStorageEnabled = defaults.isAutoExpandStorageEnabled;
    	      this.maxStorageSizeInGbs = defaults.maxStorageSizeInGbs;
        }

        @CustomType.Setter
        public Builder allocatedStorageSizeInGbs(@Nullable Integer allocatedStorageSizeInGbs) {

            this.allocatedStorageSizeInGbs = allocatedStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeInGb(@Nullable Integer dataStorageSizeInGb) {

            this.dataStorageSizeInGb = dataStorageSizeInGb;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeLimitInGbs(@Nullable Integer dataStorageSizeLimitInGbs) {

            this.dataStorageSizeLimitInGbs = dataStorageSizeLimitInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoExpandStorageEnabled(@Nullable Boolean isAutoExpandStorageEnabled) {

            this.isAutoExpandStorageEnabled = isAutoExpandStorageEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder maxStorageSizeInGbs(@Nullable Integer maxStorageSizeInGbs) {

            this.maxStorageSizeInGbs = maxStorageSizeInGbs;
            return this;
        }
        public MysqlBackupDbSystemSnapshotDataStorage build() {
            final var _resultValue = new MysqlBackupDbSystemSnapshotDataStorage();
            _resultValue.allocatedStorageSizeInGbs = allocatedStorageSizeInGbs;
            _resultValue.dataStorageSizeInGb = dataStorageSizeInGb;
            _resultValue.dataStorageSizeLimitInGbs = dataStorageSizeLimitInGbs;
            _resultValue.isAutoExpandStorageEnabled = isAutoExpandStorageEnabled;
            _resultValue.maxStorageSizeInGbs = maxStorageSizeInGbs;
            return _resultValue;
        }
    }
}
