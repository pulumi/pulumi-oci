// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class MysqlBackupValidateBackupDetail {
    /**
     * @return Specifies whether the backup needs to be prepared for fast restore or not. Set to true to prepare the backup **Note:** Prepare backup is a one time operation, therefore this field can be set to true only once.
     * 
     */
    private Boolean isPreparedBackupRequired;

    private MysqlBackupValidateBackupDetail() {}
    /**
     * @return Specifies whether the backup needs to be prepared for fast restore or not. Set to true to prepare the backup **Note:** Prepare backup is a one time operation, therefore this field can be set to true only once.
     * 
     */
    public Boolean isPreparedBackupRequired() {
        return this.isPreparedBackupRequired;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MysqlBackupValidateBackupDetail defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean isPreparedBackupRequired;
        public Builder() {}
        public Builder(MysqlBackupValidateBackupDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isPreparedBackupRequired = defaults.isPreparedBackupRequired;
        }

        @CustomType.Setter
        public Builder isPreparedBackupRequired(Boolean isPreparedBackupRequired) {
            if (isPreparedBackupRequired == null) {
              throw new MissingRequiredPropertyException("MysqlBackupValidateBackupDetail", "isPreparedBackupRequired");
            }
            this.isPreparedBackupRequired = isPreparedBackupRequired;
            return this;
        }
        public MysqlBackupValidateBackupDetail build() {
            final var _resultValue = new MysqlBackupValidateBackupDetail();
            _resultValue.isPreparedBackupRequired = isPreparedBackupRequired;
            return _resultValue;
        }
    }
}
