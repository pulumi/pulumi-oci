// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MysqlConfigurationInitVariables {
    /**
     * @return Represents the MySQL server system variable lower_case_table_names (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
     * 
     * lowerCaseTableNames controls case-sensitivity of tables and schema names and how they are stored in the DB System.
     * 
     * Valid values are:
     * * CASE_SENSITIVE - (default) Table and schema name comparisons are case-sensitive and stored as specified. (lower_case_table_names=0)
     * * CASE_INSENSITIVE_LOWERCASE - Table and schema name comparisons are not case-sensitive and stored in lowercase. (lower_case_table_names=1)
     * 
     */
    private @Nullable String lowerCaseTableNames;

    private MysqlConfigurationInitVariables() {}
    /**
     * @return Represents the MySQL server system variable lower_case_table_names (https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_lower_case_table_names).
     * 
     * lowerCaseTableNames controls case-sensitivity of tables and schema names and how they are stored in the DB System.
     * 
     * Valid values are:
     * * CASE_SENSITIVE - (default) Table and schema name comparisons are case-sensitive and stored as specified. (lower_case_table_names=0)
     * * CASE_INSENSITIVE_LOWERCASE - Table and schema name comparisons are not case-sensitive and stored in lowercase. (lower_case_table_names=1)
     * 
     */
    public Optional<String> lowerCaseTableNames() {
        return Optional.ofNullable(this.lowerCaseTableNames);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MysqlConfigurationInitVariables defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String lowerCaseTableNames;
        public Builder() {}
        public Builder(MysqlConfigurationInitVariables defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lowerCaseTableNames = defaults.lowerCaseTableNames;
        }

        @CustomType.Setter
        public Builder lowerCaseTableNames(@Nullable String lowerCaseTableNames) {
            this.lowerCaseTableNames = lowerCaseTableNames;
            return this;
        }
        public MysqlConfigurationInitVariables build() {
            final var _resultValue = new MysqlConfigurationInitVariables();
            _resultValue.lowerCaseTableNames = lowerCaseTableNames;
            return _resultValue;
        }
    }
}
