// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MysqlDbSystemReadEndpoint {
    /**
     * @return (Updatable) A list of IP addresses of read replicas that are excluded from serving read requests.
     * 
     */
    private @Nullable List<String> excludeIps;
    /**
     * @return (Updatable) Specifies if the DB System read endpoint is enabled or not.
     * 
     */
    private @Nullable Boolean isEnabled;
    /**
     * @return (Updatable) The hostname for the read endpoint of the DB System. Used for DNS.
     * 
     * The value is the hostname portion of the primary private IP&#39;s fully qualified domain name (FQDN)  (for example, &#34;dbsystem-1&#34; in FQDN &#34;dbsystem-1.subnet123.vcn1.oraclevcn.com&#34;).
     * 
     * Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
     * 
     */
    private @Nullable String readEndpointHostnameLabel;
    /**
     * @return (Updatable) The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet&#39;s CIDR. If you don&#39;t specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a &#34;dotted-quad&#34; style IPv4 address.
     * 
     */
    private @Nullable String readEndpointIpAddress;

    private MysqlDbSystemReadEndpoint() {}
    /**
     * @return (Updatable) A list of IP addresses of read replicas that are excluded from serving read requests.
     * 
     */
    public List<String> excludeIps() {
        return this.excludeIps == null ? List.of() : this.excludeIps;
    }
    /**
     * @return (Updatable) Specifies if the DB System read endpoint is enabled or not.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return (Updatable) The hostname for the read endpoint of the DB System. Used for DNS.
     * 
     * The value is the hostname portion of the primary private IP&#39;s fully qualified domain name (FQDN)  (for example, &#34;dbsystem-1&#34; in FQDN &#34;dbsystem-1.subnet123.vcn1.oraclevcn.com&#34;).
     * 
     * Must be unique across all VNICs in the subnet and comply with RFC 952 and RFC 1123.
     * 
     */
    public Optional<String> readEndpointHostnameLabel() {
        return Optional.ofNullable(this.readEndpointHostnameLabel);
    }
    /**
     * @return (Updatable) The IP address the DB System read endpoint is configured to listen on. A private IP address of your choice to assign to the read endpoint of the DB System. Must be an available IP address within the subnet&#39;s CIDR. If you don&#39;t specify a value, Oracle automatically assigns a private IP address from the subnet. This should be a &#34;dotted-quad&#34; style IPv4 address.
     * 
     */
    public Optional<String> readEndpointIpAddress() {
        return Optional.ofNullable(this.readEndpointIpAddress);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MysqlDbSystemReadEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> excludeIps;
        private @Nullable Boolean isEnabled;
        private @Nullable String readEndpointHostnameLabel;
        private @Nullable String readEndpointIpAddress;
        public Builder() {}
        public Builder(MysqlDbSystemReadEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludeIps = defaults.excludeIps;
    	      this.isEnabled = defaults.isEnabled;
    	      this.readEndpointHostnameLabel = defaults.readEndpointHostnameLabel;
    	      this.readEndpointIpAddress = defaults.readEndpointIpAddress;
        }

        @CustomType.Setter
        public Builder excludeIps(@Nullable List<String> excludeIps) {

            this.excludeIps = excludeIps;
            return this;
        }
        public Builder excludeIps(String... excludeIps) {
            return excludeIps(List.of(excludeIps));
        }
        @CustomType.Setter
        public Builder isEnabled(@Nullable Boolean isEnabled) {

            this.isEnabled = isEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder readEndpointHostnameLabel(@Nullable String readEndpointHostnameLabel) {

            this.readEndpointHostnameLabel = readEndpointHostnameLabel;
            return this;
        }
        @CustomType.Setter
        public Builder readEndpointIpAddress(@Nullable String readEndpointIpAddress) {

            this.readEndpointIpAddress = readEndpointIpAddress;
            return this;
        }
        public MysqlDbSystemReadEndpoint build() {
            final var _resultValue = new MysqlDbSystemReadEndpoint();
            _resultValue.excludeIps = excludeIps;
            _resultValue.isEnabled = isEnabled;
            _resultValue.readEndpointHostnameLabel = readEndpointHostnameLabel;
            _resultValue.readEndpointIpAddress = readEndpointIpAddress;
            return _resultValue;
        }
    }
}
