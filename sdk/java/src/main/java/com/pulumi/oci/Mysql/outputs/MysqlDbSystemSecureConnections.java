// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MysqlDbSystemSecureConnections {
    /**
     * @return (Updatable) Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
     * 
     */
    private String certificateGenerationType;
    /**
     * @return (Updatable) The OCID of the certificate to use.
     * 
     */
    private @Nullable String certificateId;

    private MysqlDbSystemSecureConnections() {}
    /**
     * @return (Updatable) Select whether to use MySQL Database Service-managed certificate (SYSTEM) or your own certificate (BYOC).
     * 
     */
    public String certificateGenerationType() {
        return this.certificateGenerationType;
    }
    /**
     * @return (Updatable) The OCID of the certificate to use.
     * 
     */
    public Optional<String> certificateId() {
        return Optional.ofNullable(this.certificateId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MysqlDbSystemSecureConnections defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificateGenerationType;
        private @Nullable String certificateId;
        public Builder() {}
        public Builder(MysqlDbSystemSecureConnections defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateGenerationType = defaults.certificateGenerationType;
    	      this.certificateId = defaults.certificateId;
        }

        @CustomType.Setter
        public Builder certificateGenerationType(String certificateGenerationType) {
            if (certificateGenerationType == null) {
              throw new MissingRequiredPropertyException("MysqlDbSystemSecureConnections", "certificateGenerationType");
            }
            this.certificateGenerationType = certificateGenerationType;
            return this;
        }
        @CustomType.Setter
        public Builder certificateId(@Nullable String certificateId) {

            this.certificateId = certificateId;
            return this;
        }
        public MysqlDbSystemSecureConnections build() {
            final var _resultValue = new MysqlDbSystemSecureConnections();
            _resultValue.certificateGenerationType = certificateGenerationType;
            _resultValue.certificateId = certificateId;
            return _resultValue;
        }
    }
}
