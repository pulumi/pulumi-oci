// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MysqlDbSystemSource {
    /**
     * @return The OCID of the backup to be used as the source for the new DB System.
     * 
     */
    private @Nullable String backupId;
    /**
     * @return The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
     * 
     */
    private @Nullable String dbSystemId;
    /**
     * @return The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
     * 
     */
    private @Nullable String recoveryPoint;
    /**
     * @return The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup. Use `IMPORTURL` for creating a new database from a URL Object Storage PAR.
     * 
     */
    private String sourceType;
    /**
     * @return The Pre-Authenticated Request (PAR) of a bucket/prefix or PAR of a {@literal @}.manifest.json object from the Object Storage. Check [Using Pre-Authenticated Requests](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/usingpreauthenticatedrequests.htm) for information related to PAR creation. Please create PAR with &#34;Permit object reads&#34; access type and &#34;Enable Object Listing&#34; permission when using a bucket/prefix PAR. Please create PAR with &#34;Permit object reads&#34; access type when using a {@literal @}.manifest.json object PAR.
     * 
     */
    private @Nullable String sourceUrl;

    private MysqlDbSystemSource() {}
    /**
     * @return The OCID of the backup to be used as the source for the new DB System.
     * 
     */
    public Optional<String> backupId() {
        return Optional.ofNullable(this.backupId);
    }
    /**
     * @return The OCID of the DB System from which a backup shall be selected to be restored when creating the new DB System. Use this together with recovery point to perform a point in time recovery operation.
     * 
     */
    public Optional<String> dbSystemId() {
        return Optional.ofNullable(this.dbSystemId);
    }
    /**
     * @return The date and time, as per RFC 3339, of the change up to which the new DB System shall be restored to, using a backup and logs from the original DB System. In case no point in time is specified, then this new DB System shall be restored up to the latest change recorded for the original DB System.
     * 
     */
    public Optional<String> recoveryPoint() {
        return Optional.ofNullable(this.recoveryPoint);
    }
    /**
     * @return The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup. Use `IMPORTURL` for creating a new database from a URL Object Storage PAR.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return The Pre-Authenticated Request (PAR) of a bucket/prefix or PAR of a {@literal @}.manifest.json object from the Object Storage. Check [Using Pre-Authenticated Requests](https://docs.oracle.com/en-us/iaas/Content/Object/Tasks/usingpreauthenticatedrequests.htm) for information related to PAR creation. Please create PAR with &#34;Permit object reads&#34; access type and &#34;Enable Object Listing&#34; permission when using a bucket/prefix PAR. Please create PAR with &#34;Permit object reads&#34; access type when using a {@literal @}.manifest.json object PAR.
     * 
     */
    public Optional<String> sourceUrl() {
        return Optional.ofNullable(this.sourceUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MysqlDbSystemSource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backupId;
        private @Nullable String dbSystemId;
        private @Nullable String recoveryPoint;
        private String sourceType;
        private @Nullable String sourceUrl;
        public Builder() {}
        public Builder(MysqlDbSystemSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupId = defaults.backupId;
    	      this.dbSystemId = defaults.dbSystemId;
    	      this.recoveryPoint = defaults.recoveryPoint;
    	      this.sourceType = defaults.sourceType;
    	      this.sourceUrl = defaults.sourceUrl;
        }

        @CustomType.Setter
        public Builder backupId(@Nullable String backupId) {

            this.backupId = backupId;
            return this;
        }
        @CustomType.Setter
        public Builder dbSystemId(@Nullable String dbSystemId) {

            this.dbSystemId = dbSystemId;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryPoint(@Nullable String recoveryPoint) {

            this.recoveryPoint = recoveryPoint;
            return this;
        }
        @CustomType.Setter
        public Builder sourceType(String sourceType) {
            if (sourceType == null) {
              throw new MissingRequiredPropertyException("MysqlDbSystemSource", "sourceType");
            }
            this.sourceType = sourceType;
            return this;
        }
        @CustomType.Setter
        public Builder sourceUrl(@Nullable String sourceUrl) {

            this.sourceUrl = sourceUrl;
            return this;
        }
        public MysqlDbSystemSource build() {
            final var _resultValue = new MysqlDbSystemSource();
            _resultValue.backupId = backupId;
            _resultValue.dbSystemId = dbSystemId;
            _resultValue.recoveryPoint = recoveryPoint;
            _resultValue.sourceType = sourceType;
            _resultValue.sourceUrl = sourceUrl;
            return _resultValue;
        }
    }
}
