// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.NetworkFirewall.NetworkFirewallPolicyDecryptionProfileArgs;
import com.pulumi.oci.NetworkFirewall.inputs.NetworkFirewallPolicyDecryptionProfileState;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource provides the Network Firewall Policy Decryption Profile resource in Oracle Cloud Infrastructure Network Firewall service.
 * 
 * Creates a new Decryption Profile for the Network Firewall Policy.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.NetworkFirewall.NetworkFirewallPolicyDecryptionProfile;
 * import com.pulumi.oci.NetworkFirewall.NetworkFirewallPolicyDecryptionProfileArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testNetworkFirewallPolicyDecryptionProfile = new NetworkFirewallPolicyDecryptionProfile("testNetworkFirewallPolicyDecryptionProfile", NetworkFirewallPolicyDecryptionProfileArgs.builder()
 *             .name(networkFirewallPolicyDecryptionProfileName)
 *             .networkFirewallPolicyId(testNetworkFirewallPolicy.id())
 *             .type(networkFirewallPolicyDecryptionProfileType)
 *             .areCertificateExtensionsRestricted(networkFirewallPolicyDecryptionProfileAreCertificateExtensionsRestricted)
 *             .isAutoIncludeAltName(networkFirewallPolicyDecryptionProfileIsAutoIncludeAltName)
 *             .isExpiredCertificateBlocked(networkFirewallPolicyDecryptionProfileIsExpiredCertificateBlocked)
 *             .isOutOfCapacityBlocked(networkFirewallPolicyDecryptionProfileIsOutOfCapacityBlocked)
 *             .isRevocationStatusTimeoutBlocked(networkFirewallPolicyDecryptionProfileIsRevocationStatusTimeoutBlocked)
 *             .isUnknownRevocationStatusBlocked(networkFirewallPolicyDecryptionProfileIsUnknownRevocationStatusBlocked)
 *             .isUnsupportedCipherBlocked(networkFirewallPolicyDecryptionProfileIsUnsupportedCipherBlocked)
 *             .isUnsupportedVersionBlocked(networkFirewallPolicyDecryptionProfileIsUnsupportedVersionBlocked)
 *             .isUntrustedIssuerBlocked(networkFirewallPolicyDecryptionProfileIsUntrustedIssuerBlocked)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * NetworkFirewallPolicyDecryptionProfiles can be imported using the `name`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:NetworkFirewall/networkFirewallPolicyDecryptionProfile:NetworkFirewallPolicyDecryptionProfile test_network_firewall_policy_decryption_profile &#34;networkFirewallPolicies/{networkFirewallPolicyId}/decryptionProfiles/{decryptionProfileName}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:NetworkFirewall/networkFirewallPolicyDecryptionProfile:NetworkFirewallPolicyDecryptionProfile")
public class NetworkFirewallPolicyDecryptionProfile extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) Whether to block sessions if the server&#39;s certificate uses extensions other than key usage and/or extended key usage.
     * 
     */
    @Export(name="areCertificateExtensionsRestricted", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> areCertificateExtensionsRestricted;

    /**
     * @return (Updatable) Whether to block sessions if the server&#39;s certificate uses extensions other than key usage and/or extended key usage.
     * 
     */
    public Output<Boolean> areCertificateExtensionsRestricted() {
        return this.areCertificateExtensionsRestricted;
    }
    /**
     * (Updatable) Whether to automatically append SAN to impersonating certificate if server certificate is missing SAN.
     * 
     */
    @Export(name="isAutoIncludeAltName", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isAutoIncludeAltName;

    /**
     * @return (Updatable) Whether to automatically append SAN to impersonating certificate if server certificate is missing SAN.
     * 
     */
    public Output<Boolean> isAutoIncludeAltName() {
        return this.isAutoIncludeAltName;
    }
    /**
     * (Updatable) Whether to block sessions if server&#39;s certificate is expired.
     * 
     */
    @Export(name="isExpiredCertificateBlocked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isExpiredCertificateBlocked;

    /**
     * @return (Updatable) Whether to block sessions if server&#39;s certificate is expired.
     * 
     */
    public Output<Boolean> isExpiredCertificateBlocked() {
        return this.isExpiredCertificateBlocked;
    }
    /**
     * (Updatable) Whether to block sessions if the firewall is temporarily unable to decrypt their traffic.
     * 
     */
    @Export(name="isOutOfCapacityBlocked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isOutOfCapacityBlocked;

    /**
     * @return (Updatable) Whether to block sessions if the firewall is temporarily unable to decrypt their traffic.
     * 
     */
    public Output<Boolean> isOutOfCapacityBlocked() {
        return this.isOutOfCapacityBlocked;
    }
    /**
     * (Updatable) Whether to block sessions if the revocation status check for server&#39;s certificate does not succeed within the maximum allowed time (defaulting to 5 seconds).
     * 
     */
    @Export(name="isRevocationStatusTimeoutBlocked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isRevocationStatusTimeoutBlocked;

    /**
     * @return (Updatable) Whether to block sessions if the revocation status check for server&#39;s certificate does not succeed within the maximum allowed time (defaulting to 5 seconds).
     * 
     */
    public Output<Boolean> isRevocationStatusTimeoutBlocked() {
        return this.isRevocationStatusTimeoutBlocked;
    }
    /**
     * (Updatable) Whether to block sessions if the revocation status check for server&#39;s certificate results in &#34;unknown&#34;.
     * 
     */
    @Export(name="isUnknownRevocationStatusBlocked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isUnknownRevocationStatusBlocked;

    /**
     * @return (Updatable) Whether to block sessions if the revocation status check for server&#39;s certificate results in &#34;unknown&#34;.
     * 
     */
    public Output<Boolean> isUnknownRevocationStatusBlocked() {
        return this.isUnknownRevocationStatusBlocked;
    }
    /**
     * (Updatable) Whether to block sessions if SSL cipher suite is not supported.
     * 
     */
    @Export(name="isUnsupportedCipherBlocked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isUnsupportedCipherBlocked;

    /**
     * @return (Updatable) Whether to block sessions if SSL cipher suite is not supported.
     * 
     */
    public Output<Boolean> isUnsupportedCipherBlocked() {
        return this.isUnsupportedCipherBlocked;
    }
    /**
     * (Updatable) Whether to block sessions if SSL version is not supported.
     * 
     */
    @Export(name="isUnsupportedVersionBlocked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isUnsupportedVersionBlocked;

    /**
     * @return (Updatable) Whether to block sessions if SSL version is not supported.
     * 
     */
    public Output<Boolean> isUnsupportedVersionBlocked() {
        return this.isUnsupportedVersionBlocked;
    }
    /**
     * (Updatable) Whether to block sessions if server&#39;s certificate is issued by an untrusted certificate authority (CA).
     * 
     */
    @Export(name="isUntrustedIssuerBlocked", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isUntrustedIssuerBlocked;

    /**
     * @return (Updatable) Whether to block sessions if server&#39;s certificate is issued by an untrusted certificate authority (CA).
     * 
     */
    public Output<Boolean> isUntrustedIssuerBlocked() {
        return this.isUntrustedIssuerBlocked;
    }
    /**
     * Name of the decryption profile.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the decryption profile.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique Network Firewall Policy identifier
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Export(name="networkFirewallPolicyId", refs={String.class}, tree="[0]")
    private Output<String> networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }
    /**
     * OCID of the Network Firewall Policy this decryption profile belongs to.
     * 
     */
    @Export(name="parentResourceId", refs={String.class}, tree="[0]")
    private Output<String> parentResourceId;

    /**
     * @return OCID of the Network Firewall Policy this decryption profile belongs to.
     * 
     */
    public Output<String> parentResourceId() {
        return this.parentResourceId;
    }
    /**
     * Describes the type of decryption profile. The accepted values are - * SSL_FORWARD_PROXY * SSL_INBOUND_INSPECTION
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Describes the type of decryption profile. The accepted values are - * SSL_FORWARD_PROXY * SSL_INBOUND_INSPECTION
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkFirewallPolicyDecryptionProfile(java.lang.String name) {
        this(name, NetworkFirewallPolicyDecryptionProfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkFirewallPolicyDecryptionProfile(java.lang.String name, NetworkFirewallPolicyDecryptionProfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkFirewallPolicyDecryptionProfile(java.lang.String name, NetworkFirewallPolicyDecryptionProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:NetworkFirewall/networkFirewallPolicyDecryptionProfile:NetworkFirewallPolicyDecryptionProfile", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NetworkFirewallPolicyDecryptionProfile(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkFirewallPolicyDecryptionProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:NetworkFirewall/networkFirewallPolicyDecryptionProfile:NetworkFirewallPolicyDecryptionProfile", name, state, makeResourceOptions(options, id), false);
    }

    private static NetworkFirewallPolicyDecryptionProfileArgs makeArgs(NetworkFirewallPolicyDecryptionProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NetworkFirewallPolicyDecryptionProfileArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkFirewallPolicyDecryptionProfile get(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkFirewallPolicyDecryptionProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkFirewallPolicyDecryptionProfile(name, id, state, options);
    }
}
