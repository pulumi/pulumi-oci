// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.NetworkFirewall.inputs.NetworkFirewallPolicyNatRuleConditionArgs;
import com.pulumi.oci.NetworkFirewall.inputs.NetworkFirewallPolicyNatRulePositionArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicyNatRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicyNatRuleArgs Empty = new NetworkFirewallPolicyNatRuleArgs();

    /**
     * (Updatable) action:
     * * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return (Updatable) action:
     * * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * (Updatable) Match criteria used in NAT Rule used on the firewall policy.
     * 
     */
    @Import(name="condition", required=true)
    private Output<NetworkFirewallPolicyNatRuleConditionArgs> condition;

    /**
     * @return (Updatable) Match criteria used in NAT Rule used on the firewall policy.
     * 
     */
    public Output<NetworkFirewallPolicyNatRuleConditionArgs> condition() {
        return this.condition;
    }

    /**
     * (Updatable) Description of a NAT rule. This field can be used to add additional info.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description of a NAT rule. This field can be used to add additional info.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name for the NAT rule, must be unique within the policy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name for the NAT rule, must be unique within the policy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique Network Firewall Policy identifier
     * 
     */
    @Import(name="networkFirewallPolicyId", required=true)
    private Output<String> networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public Output<String> networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }

    /**
     * (Updatable) An object which defines the position of the rule.
     * 
     */
    @Import(name="position")
    private @Nullable Output<NetworkFirewallPolicyNatRulePositionArgs> position;

    /**
     * @return (Updatable) An object which defines the position of the rule.
     * 
     */
    public Optional<Output<NetworkFirewallPolicyNatRulePositionArgs>> position() {
        return Optional.ofNullable(this.position);
    }

    /**
     * (Updatable) NAT type:
     * * NATV4 - NATV4 type NAT.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) NAT type:
     * * NATV4 - NATV4 type NAT.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private NetworkFirewallPolicyNatRuleArgs() {}

    private NetworkFirewallPolicyNatRuleArgs(NetworkFirewallPolicyNatRuleArgs $) {
        this.action = $.action;
        this.condition = $.condition;
        this.description = $.description;
        this.name = $.name;
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
        this.position = $.position;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicyNatRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicyNatRuleArgs $;

        public Builder() {
            $ = new NetworkFirewallPolicyNatRuleArgs();
        }

        public Builder(NetworkFirewallPolicyNatRuleArgs defaults) {
            $ = new NetworkFirewallPolicyNatRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action (Updatable) action:
         * * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action (Updatable) action:
         * * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param condition (Updatable) Match criteria used in NAT Rule used on the firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder condition(Output<NetworkFirewallPolicyNatRuleConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition (Updatable) Match criteria used in NAT Rule used on the firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder condition(NetworkFirewallPolicyNatRuleConditionArgs condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param description (Updatable) Description of a NAT rule. This field can be used to add additional info.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of a NAT rule. This field can be used to add additional info.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name for the NAT rule, must be unique within the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name for the NAT rule, must be unique within the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(Output<String> networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            return networkFirewallPolicyId(Output.of(networkFirewallPolicyId));
        }

        /**
         * @param position (Updatable) An object which defines the position of the rule.
         * 
         * @return builder
         * 
         */
        public Builder position(@Nullable Output<NetworkFirewallPolicyNatRulePositionArgs> position) {
            $.position = position;
            return this;
        }

        /**
         * @param position (Updatable) An object which defines the position of the rule.
         * 
         * @return builder
         * 
         */
        public Builder position(NetworkFirewallPolicyNatRulePositionArgs position) {
            return position(Output.of(position));
        }

        /**
         * @param type (Updatable) NAT type:
         * * NATV4 - NATV4 type NAT.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) NAT type:
         * * NATV4 - NATV4 type NAT.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public NetworkFirewallPolicyNatRuleArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("NetworkFirewallPolicyNatRuleArgs", "action");
            }
            if ($.condition == null) {
                throw new MissingRequiredPropertyException("NetworkFirewallPolicyNatRuleArgs", "condition");
            }
            if ($.networkFirewallPolicyId == null) {
                throw new MissingRequiredPropertyException("NetworkFirewallPolicyNatRuleArgs", "networkFirewallPolicyId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("NetworkFirewallPolicyNatRuleArgs", "type");
            }
            return $;
        }
    }

}
