// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.NetworkFirewall.inputs.NetworkFirewallPolicyServicePortRangeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicyServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicyServiceArgs Empty = new NetworkFirewallPolicyServiceArgs();

    /**
     * Name of the service
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the service
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique Network Firewall Policy identifier
     * 
     */
    @Import(name="networkFirewallPolicyId", required=true)
    private Output<String> networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public Output<String> networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }

    /**
     * (Updatable) List of port-ranges to be used.
     * 
     */
    @Import(name="portRanges", required=true)
    private Output<List<NetworkFirewallPolicyServicePortRangeArgs>> portRanges;

    /**
     * @return (Updatable) List of port-ranges to be used.
     * 
     */
    public Output<List<NetworkFirewallPolicyServicePortRangeArgs>> portRanges() {
        return this.portRanges;
    }

    /**
     * Describes the type of Service. The accepted values are
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Describes the type of Service. The accepted values are
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private NetworkFirewallPolicyServiceArgs() {}

    private NetworkFirewallPolicyServiceArgs(NetworkFirewallPolicyServiceArgs $) {
        this.name = $.name;
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
        this.portRanges = $.portRanges;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicyServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicyServiceArgs $;

        public Builder() {
            $ = new NetworkFirewallPolicyServiceArgs();
        }

        public Builder(NetworkFirewallPolicyServiceArgs defaults) {
            $ = new NetworkFirewallPolicyServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the service
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the service
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(Output<String> networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            return networkFirewallPolicyId(Output.of(networkFirewallPolicyId));
        }

        /**
         * @param portRanges (Updatable) List of port-ranges to be used.
         * 
         * @return builder
         * 
         */
        public Builder portRanges(Output<List<NetworkFirewallPolicyServicePortRangeArgs>> portRanges) {
            $.portRanges = portRanges;
            return this;
        }

        /**
         * @param portRanges (Updatable) List of port-ranges to be used.
         * 
         * @return builder
         * 
         */
        public Builder portRanges(List<NetworkFirewallPolicyServicePortRangeArgs> portRanges) {
            return portRanges(Output.of(portRanges));
        }

        /**
         * @param portRanges (Updatable) List of port-ranges to be used.
         * 
         * @return builder
         * 
         */
        public Builder portRanges(NetworkFirewallPolicyServicePortRangeArgs... portRanges) {
            return portRanges(List.of(portRanges));
        }

        /**
         * @param type Describes the type of Service. The accepted values are
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Describes the type of Service. The accepted values are
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public NetworkFirewallPolicyServiceArgs build() {
            $.networkFirewallPolicyId = Objects.requireNonNull($.networkFirewallPolicyId, "expected parameter 'networkFirewallPolicyId' to be non-null");
            $.portRanges = Objects.requireNonNull($.portRanges, "expected parameter 'portRanges' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
