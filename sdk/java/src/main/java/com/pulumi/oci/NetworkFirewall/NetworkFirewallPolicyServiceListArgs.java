// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicyServiceListArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicyServiceListArgs Empty = new NetworkFirewallPolicyServiceListArgs();

    /**
     * Name of the service Group.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the service Group.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique Network Firewall Policy identifier
     * 
     */
    @Import(name="networkFirewallPolicyId", required=true)
    private Output<String> networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public Output<String> networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }

    /**
     * (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="services", required=true)
    private Output<List<String>> services;

    /**
     * @return (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Output<List<String>> services() {
        return this.services;
    }

    private NetworkFirewallPolicyServiceListArgs() {}

    private NetworkFirewallPolicyServiceListArgs(NetworkFirewallPolicyServiceListArgs $) {
        this.name = $.name;
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
        this.services = $.services;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicyServiceListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicyServiceListArgs $;

        public Builder() {
            $ = new NetworkFirewallPolicyServiceListArgs();
        }

        public Builder(NetworkFirewallPolicyServiceListArgs defaults) {
            $ = new NetworkFirewallPolicyServiceListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the service Group.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the service Group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(Output<String> networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            return networkFirewallPolicyId(Output.of(networkFirewallPolicyId));
        }

        /**
         * @param services (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder services(Output<List<String>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder services(List<String> services) {
            return services(Output.of(services));
        }

        /**
         * @param services (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder services(String... services) {
            return services(List.of(services));
        }

        public NetworkFirewallPolicyServiceListArgs build() {
            if ($.networkFirewallPolicyId == null) {
                throw new MissingRequiredPropertyException("NetworkFirewallPolicyServiceListArgs", "networkFirewallPolicyId");
            }
            if ($.services == null) {
                throw new MissingRequiredPropertyException("NetworkFirewallPolicyServiceListArgs", "services");
            }
            return $;
        }
    }

}
