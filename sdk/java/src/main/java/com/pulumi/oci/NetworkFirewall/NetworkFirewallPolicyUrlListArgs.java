// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.NetworkFirewall.inputs.NetworkFirewallPolicyUrlListUrlArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicyUrlListArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicyUrlListArgs Empty = new NetworkFirewallPolicyUrlListArgs();

    /**
     * Unique name to identify the group of urls to be used in the policy rules.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Unique name to identify the group of urls to be used in the policy rules.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique Network Firewall Policy identifier
     * 
     */
    @Import(name="networkFirewallPolicyId", required=true)
    private Output<String> networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public Output<String> networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }

    /**
     * (Updatable) List of urls.
     * 
     */
    @Import(name="urls", required=true)
    private Output<List<NetworkFirewallPolicyUrlListUrlArgs>> urls;

    /**
     * @return (Updatable) List of urls.
     * 
     */
    public Output<List<NetworkFirewallPolicyUrlListUrlArgs>> urls() {
        return this.urls;
    }

    private NetworkFirewallPolicyUrlListArgs() {}

    private NetworkFirewallPolicyUrlListArgs(NetworkFirewallPolicyUrlListArgs $) {
        this.name = $.name;
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
        this.urls = $.urls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicyUrlListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicyUrlListArgs $;

        public Builder() {
            $ = new NetworkFirewallPolicyUrlListArgs();
        }

        public Builder(NetworkFirewallPolicyUrlListArgs defaults) {
            $ = new NetworkFirewallPolicyUrlListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Unique name to identify the group of urls to be used in the policy rules.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Unique name to identify the group of urls to be used in the policy rules.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(Output<String> networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            return networkFirewallPolicyId(Output.of(networkFirewallPolicyId));
        }

        /**
         * @param urls (Updatable) List of urls.
         * 
         * @return builder
         * 
         */
        public Builder urls(Output<List<NetworkFirewallPolicyUrlListUrlArgs>> urls) {
            $.urls = urls;
            return this;
        }

        /**
         * @param urls (Updatable) List of urls.
         * 
         * @return builder
         * 
         */
        public Builder urls(List<NetworkFirewallPolicyUrlListUrlArgs> urls) {
            return urls(Output.of(urls));
        }

        /**
         * @param urls (Updatable) List of urls.
         * 
         * @return builder
         * 
         */
        public Builder urls(NetworkFirewallPolicyUrlListUrlArgs... urls) {
            return urls(List.of(urls));
        }

        public NetworkFirewallPolicyUrlListArgs build() {
            if ($.networkFirewallPolicyId == null) {
                throw new MissingRequiredPropertyException("NetworkFirewallPolicyUrlListArgs", "networkFirewallPolicyId");
            }
            if ($.urls == null) {
                throw new MissingRequiredPropertyException("NetworkFirewallPolicyUrlListArgs", "urls");
            }
            return $;
        }
    }

}
