// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNetworkFirewallPolicyMappedSecretsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkFirewallPolicyMappedSecretsPlainArgs Empty = new GetNetworkFirewallPolicyMappedSecretsPlainArgs();

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Unique Network Firewall Policy identifier
     * 
     */
    @Import(name="networkFirewallPolicyId", required=true)
    private String networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public String networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }

    private GetNetworkFirewallPolicyMappedSecretsPlainArgs() {}

    private GetNetworkFirewallPolicyMappedSecretsPlainArgs(GetNetworkFirewallPolicyMappedSecretsPlainArgs $) {
        this.displayName = $.displayName;
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkFirewallPolicyMappedSecretsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkFirewallPolicyMappedSecretsPlainArgs $;

        public Builder() {
            $ = new GetNetworkFirewallPolicyMappedSecretsPlainArgs();
        }

        public Builder(GetNetworkFirewallPolicyMappedSecretsPlainArgs defaults) {
            $ = new GetNetworkFirewallPolicyMappedSecretsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        public GetNetworkFirewallPolicyMappedSecretsPlainArgs build() {
            if ($.networkFirewallPolicyId == null) {
                throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyMappedSecretsPlainArgs", "networkFirewallPolicyId");
            }
            return $;
        }
    }

}
