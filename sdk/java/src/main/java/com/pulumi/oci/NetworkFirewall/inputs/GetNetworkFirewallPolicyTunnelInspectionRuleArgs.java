// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetNetworkFirewallPolicyTunnelInspectionRuleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkFirewallPolicyTunnelInspectionRuleArgs Empty = new GetNetworkFirewallPolicyTunnelInspectionRuleArgs();

    /**
     * Unique Network Firewall Policy identifier
     * 
     */
    @Import(name="networkFirewallPolicyId", required=true)
    private Output<String> networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public Output<String> networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }

    /**
     * Unique identifier for Tunnel Inspection Rules in the network firewall policy.
     * 
     */
    @Import(name="tunnelInspectionRuleName", required=true)
    private Output<String> tunnelInspectionRuleName;

    /**
     * @return Unique identifier for Tunnel Inspection Rules in the network firewall policy.
     * 
     */
    public Output<String> tunnelInspectionRuleName() {
        return this.tunnelInspectionRuleName;
    }

    private GetNetworkFirewallPolicyTunnelInspectionRuleArgs() {}

    private GetNetworkFirewallPolicyTunnelInspectionRuleArgs(GetNetworkFirewallPolicyTunnelInspectionRuleArgs $) {
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
        this.tunnelInspectionRuleName = $.tunnelInspectionRuleName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkFirewallPolicyTunnelInspectionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkFirewallPolicyTunnelInspectionRuleArgs $;

        public Builder() {
            $ = new GetNetworkFirewallPolicyTunnelInspectionRuleArgs();
        }

        public Builder(GetNetworkFirewallPolicyTunnelInspectionRuleArgs defaults) {
            $ = new GetNetworkFirewallPolicyTunnelInspectionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(Output<String> networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            return networkFirewallPolicyId(Output.of(networkFirewallPolicyId));
        }

        /**
         * @param tunnelInspectionRuleName Unique identifier for Tunnel Inspection Rules in the network firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder tunnelInspectionRuleName(Output<String> tunnelInspectionRuleName) {
            $.tunnelInspectionRuleName = tunnelInspectionRuleName;
            return this;
        }

        /**
         * @param tunnelInspectionRuleName Unique identifier for Tunnel Inspection Rules in the network firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder tunnelInspectionRuleName(String tunnelInspectionRuleName) {
            return tunnelInspectionRuleName(Output.of(tunnelInspectionRuleName));
        }

        public GetNetworkFirewallPolicyTunnelInspectionRuleArgs build() {
            if ($.networkFirewallPolicyId == null) {
                throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRuleArgs", "networkFirewallPolicyId");
            }
            if ($.tunnelInspectionRuleName == null) {
                throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRuleArgs", "tunnelInspectionRuleName");
            }
            return $;
        }
    }

}
