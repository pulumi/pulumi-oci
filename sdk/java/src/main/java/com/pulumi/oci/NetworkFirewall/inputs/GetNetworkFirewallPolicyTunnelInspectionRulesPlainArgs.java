// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.NetworkFirewall.inputs.GetNetworkFirewallPolicyTunnelInspectionRulesFilter;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs Empty = new GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs();

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetNetworkFirewallPolicyTunnelInspectionRulesFilter> filters;

    public Optional<List<GetNetworkFirewallPolicyTunnelInspectionRulesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Unique Network Firewall Policy identifier
     * 
     */
    @Import(name="networkFirewallPolicyId", required=true)
    private String networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public String networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }

    /**
     * Unique priority order for Tunnel Inspection rules in the network firewall policy.
     * 
     */
    @Import(name="tunnelInspectionRulePriorityOrder")
    private @Nullable Integer tunnelInspectionRulePriorityOrder;

    /**
     * @return Unique priority order for Tunnel Inspection rules in the network firewall policy.
     * 
     */
    public Optional<Integer> tunnelInspectionRulePriorityOrder() {
        return Optional.ofNullable(this.tunnelInspectionRulePriorityOrder);
    }

    private GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs() {}

    private GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs(GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs $) {
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
        this.tunnelInspectionRulePriorityOrder = $.tunnelInspectionRulePriorityOrder;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs $;

        public Builder() {
            $ = new GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs();
        }

        public Builder(GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs defaults) {
            $ = new GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetNetworkFirewallPolicyTunnelInspectionRulesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetNetworkFirewallPolicyTunnelInspectionRulesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        /**
         * @param tunnelInspectionRulePriorityOrder Unique priority order for Tunnel Inspection rules in the network firewall policy.
         * 
         * @return builder
         * 
         */
        public Builder tunnelInspectionRulePriorityOrder(@Nullable Integer tunnelInspectionRulePriorityOrder) {
            $.tunnelInspectionRulePriorityOrder = tunnelInspectionRulePriorityOrder;
            return this;
        }

        public GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs build() {
            if ($.networkFirewallPolicyId == null) {
                throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRulesPlainArgs", "networkFirewallPolicyId");
            }
            return $;
        }
    }

}
