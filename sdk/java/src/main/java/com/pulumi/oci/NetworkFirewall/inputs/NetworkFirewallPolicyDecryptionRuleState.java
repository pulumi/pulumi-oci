// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.NetworkFirewall.inputs.NetworkFirewallPolicyDecryptionRuleConditionArgs;
import com.pulumi.oci.NetworkFirewall.inputs.NetworkFirewallPolicyDecryptionRulePositionArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicyDecryptionRuleState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicyDecryptionRuleState Empty = new NetworkFirewallPolicyDecryptionRuleState();

    /**
     * (Updatable) Action:
     * * NO_DECRYPT - Matching traffic is not decrypted.
     * * DECRYPT - Matching traffic is decrypted with the specified `secret` according to the specified `decryptionProfile`.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return (Updatable) Action:
     * * NO_DECRYPT - Matching traffic is not decrypted.
     * * DECRYPT - Matching traffic is decrypted with the specified `secret` according to the specified `decryptionProfile`.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * (Updatable) Match criteria used in Decryption Rule used on the firewall policy rules. The resources mentioned must already be present in the policy before being referenced in the rule.
     * 
     */
    @Import(name="condition")
    private @Nullable Output<NetworkFirewallPolicyDecryptionRuleConditionArgs> condition;

    /**
     * @return (Updatable) Match criteria used in Decryption Rule used on the firewall policy rules. The resources mentioned must already be present in the policy before being referenced in the rule.
     * 
     */
    public Optional<Output<NetworkFirewallPolicyDecryptionRuleConditionArgs>> condition() {
        return Optional.ofNullable(this.condition);
    }

    /**
     * (Updatable) The name of the decryption profile to use.
     * 
     */
    @Import(name="decryptionProfile")
    private @Nullable Output<String> decryptionProfile;

    /**
     * @return (Updatable) The name of the decryption profile to use.
     * 
     */
    public Optional<Output<String>> decryptionProfile() {
        return Optional.ofNullable(this.decryptionProfile);
    }

    /**
     * Name for the decryption rule, must be unique within the policy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name for the decryption rule, must be unique within the policy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique Network Firewall Policy identifier
     * 
     */
    @Import(name="networkFirewallPolicyId")
    private @Nullable Output<String> networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public Optional<Output<String>> networkFirewallPolicyId() {
        return Optional.ofNullable(this.networkFirewallPolicyId);
    }

    /**
     * OCID of the Network Firewall Policy this decryption rule belongs to.
     * 
     */
    @Import(name="parentResourceId")
    private @Nullable Output<String> parentResourceId;

    /**
     * @return OCID of the Network Firewall Policy this decryption rule belongs to.
     * 
     */
    public Optional<Output<String>> parentResourceId() {
        return Optional.ofNullable(this.parentResourceId);
    }

    /**
     * (Updatable) An object which defines the position of the rule. Only one of `afterRule` or `beforeRule` should be provided.
     * 
     */
    @Import(name="position")
    private @Nullable Output<NetworkFirewallPolicyDecryptionRulePositionArgs> position;

    /**
     * @return (Updatable) An object which defines the position of the rule. Only one of `afterRule` or `beforeRule` should be provided.
     * 
     */
    public Optional<Output<NetworkFirewallPolicyDecryptionRulePositionArgs>> position() {
        return Optional.ofNullable(this.position);
    }

    @Import(name="priorityOrder")
    private @Nullable Output<String> priorityOrder;

    public Optional<Output<String>> priorityOrder() {
        return Optional.ofNullable(this.priorityOrder);
    }

    /**
     * (Updatable) The name of a mapped secret. Its `type` must match that of the specified decryption profile.
     * 
     */
    @Import(name="secret")
    private @Nullable Output<String> secret;

    /**
     * @return (Updatable) The name of a mapped secret. Its `type` must match that of the specified decryption profile.
     * 
     */
    public Optional<Output<String>> secret() {
        return Optional.ofNullable(this.secret);
    }

    private NetworkFirewallPolicyDecryptionRuleState() {}

    private NetworkFirewallPolicyDecryptionRuleState(NetworkFirewallPolicyDecryptionRuleState $) {
        this.action = $.action;
        this.condition = $.condition;
        this.decryptionProfile = $.decryptionProfile;
        this.name = $.name;
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
        this.parentResourceId = $.parentResourceId;
        this.position = $.position;
        this.priorityOrder = $.priorityOrder;
        this.secret = $.secret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicyDecryptionRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicyDecryptionRuleState $;

        public Builder() {
            $ = new NetworkFirewallPolicyDecryptionRuleState();
        }

        public Builder(NetworkFirewallPolicyDecryptionRuleState defaults) {
            $ = new NetworkFirewallPolicyDecryptionRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param action (Updatable) Action:
         * * NO_DECRYPT - Matching traffic is not decrypted.
         * * DECRYPT - Matching traffic is decrypted with the specified `secret` according to the specified `decryptionProfile`.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action (Updatable) Action:
         * * NO_DECRYPT - Matching traffic is not decrypted.
         * * DECRYPT - Matching traffic is decrypted with the specified `secret` according to the specified `decryptionProfile`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param condition (Updatable) Match criteria used in Decryption Rule used on the firewall policy rules. The resources mentioned must already be present in the policy before being referenced in the rule.
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<NetworkFirewallPolicyDecryptionRuleConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition (Updatable) Match criteria used in Decryption Rule used on the firewall policy rules. The resources mentioned must already be present in the policy before being referenced in the rule.
         * 
         * @return builder
         * 
         */
        public Builder condition(NetworkFirewallPolicyDecryptionRuleConditionArgs condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param decryptionProfile (Updatable) The name of the decryption profile to use.
         * 
         * @return builder
         * 
         */
        public Builder decryptionProfile(@Nullable Output<String> decryptionProfile) {
            $.decryptionProfile = decryptionProfile;
            return this;
        }

        /**
         * @param decryptionProfile (Updatable) The name of the decryption profile to use.
         * 
         * @return builder
         * 
         */
        public Builder decryptionProfile(String decryptionProfile) {
            return decryptionProfile(Output.of(decryptionProfile));
        }

        /**
         * @param name Name for the decryption rule, must be unique within the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name for the decryption rule, must be unique within the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(@Nullable Output<String> networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            return networkFirewallPolicyId(Output.of(networkFirewallPolicyId));
        }

        /**
         * @param parentResourceId OCID of the Network Firewall Policy this decryption rule belongs to.
         * 
         * @return builder
         * 
         */
        public Builder parentResourceId(@Nullable Output<String> parentResourceId) {
            $.parentResourceId = parentResourceId;
            return this;
        }

        /**
         * @param parentResourceId OCID of the Network Firewall Policy this decryption rule belongs to.
         * 
         * @return builder
         * 
         */
        public Builder parentResourceId(String parentResourceId) {
            return parentResourceId(Output.of(parentResourceId));
        }

        /**
         * @param position (Updatable) An object which defines the position of the rule. Only one of `afterRule` or `beforeRule` should be provided.
         * 
         * @return builder
         * 
         */
        public Builder position(@Nullable Output<NetworkFirewallPolicyDecryptionRulePositionArgs> position) {
            $.position = position;
            return this;
        }

        /**
         * @param position (Updatable) An object which defines the position of the rule. Only one of `afterRule` or `beforeRule` should be provided.
         * 
         * @return builder
         * 
         */
        public Builder position(NetworkFirewallPolicyDecryptionRulePositionArgs position) {
            return position(Output.of(position));
        }

        public Builder priorityOrder(@Nullable Output<String> priorityOrder) {
            $.priorityOrder = priorityOrder;
            return this;
        }

        public Builder priorityOrder(String priorityOrder) {
            return priorityOrder(Output.of(priorityOrder));
        }

        /**
         * @param secret (Updatable) The name of a mapped secret. Its `type` must match that of the specified decryption profile.
         * 
         * @return builder
         * 
         */
        public Builder secret(@Nullable Output<String> secret) {
            $.secret = secret;
            return this;
        }

        /**
         * @param secret (Updatable) The name of a mapped secret. Its `type` must match that of the specified decryption profile.
         * 
         * @return builder
         * 
         */
        public Builder secret(String secret) {
            return secret(Output.of(secret));
        }

        public NetworkFirewallPolicyDecryptionRuleState build() {
            return $;
        }
    }

}
