// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicySecurityRuleConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicySecurityRuleConditionArgs Empty = new NetworkFirewallPolicySecurityRuleConditionArgs();

    /**
     * (Updatable) An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
     * 
     */
    @Import(name="applications")
    private @Nullable Output<List<String>> applications;

    /**
     * @return (Updatable) An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
     * 
     */
    public Optional<Output<List<String>>> applications() {
        return Optional.ofNullable(this.applications);
    }

    /**
     * (Updatable) An array of IP address list names to be evaluated against the traffic destination address.
     * 
     */
    @Import(name="destinations")
    private @Nullable Output<List<String>> destinations;

    /**
     * @return (Updatable) An array of IP address list names to be evaluated against the traffic destination address.
     * 
     */
    public Optional<Output<List<String>>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * (Updatable) An array of IP address list names to be evaluated against the traffic source address.
     * 
     */
    @Import(name="sources")
    private @Nullable Output<List<String>> sources;

    /**
     * @return (Updatable) An array of IP address list names to be evaluated against the traffic source address.
     * 
     */
    public Optional<Output<List<String>>> sources() {
        return Optional.ofNullable(this.sources);
    }

    /**
     * (Updatable) An array of URL pattern list names to be evaluated against the HTTP(S) request target.
     * 
     */
    @Import(name="urls")
    private @Nullable Output<List<String>> urls;

    /**
     * @return (Updatable) An array of URL pattern list names to be evaluated against the HTTP(S) request target.
     * 
     */
    public Optional<Output<List<String>>> urls() {
        return Optional.ofNullable(this.urls);
    }

    private NetworkFirewallPolicySecurityRuleConditionArgs() {}

    private NetworkFirewallPolicySecurityRuleConditionArgs(NetworkFirewallPolicySecurityRuleConditionArgs $) {
        this.applications = $.applications;
        this.destinations = $.destinations;
        this.sources = $.sources;
        this.urls = $.urls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicySecurityRuleConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicySecurityRuleConditionArgs $;

        public Builder() {
            $ = new NetworkFirewallPolicySecurityRuleConditionArgs();
        }

        public Builder(NetworkFirewallPolicySecurityRuleConditionArgs defaults) {
            $ = new NetworkFirewallPolicySecurityRuleConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applications (Updatable) An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
         * 
         * @return builder
         * 
         */
        public Builder applications(@Nullable Output<List<String>> applications) {
            $.applications = applications;
            return this;
        }

        /**
         * @param applications (Updatable) An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
         * 
         * @return builder
         * 
         */
        public Builder applications(List<String> applications) {
            return applications(Output.of(applications));
        }

        /**
         * @param applications (Updatable) An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
         * 
         * @return builder
         * 
         */
        public Builder applications(String... applications) {
            return applications(List.of(applications));
        }

        /**
         * @param destinations (Updatable) An array of IP address list names to be evaluated against the traffic destination address.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable Output<List<String>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations (Updatable) An array of IP address list names to be evaluated against the traffic destination address.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<String> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations (Updatable) An array of IP address list names to be evaluated against the traffic destination address.
         * 
         * @return builder
         * 
         */
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param sources (Updatable) An array of IP address list names to be evaluated against the traffic source address.
         * 
         * @return builder
         * 
         */
        public Builder sources(@Nullable Output<List<String>> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @param sources (Updatable) An array of IP address list names to be evaluated against the traffic source address.
         * 
         * @return builder
         * 
         */
        public Builder sources(List<String> sources) {
            return sources(Output.of(sources));
        }

        /**
         * @param sources (Updatable) An array of IP address list names to be evaluated against the traffic source address.
         * 
         * @return builder
         * 
         */
        public Builder sources(String... sources) {
            return sources(List.of(sources));
        }

        /**
         * @param urls (Updatable) An array of URL pattern list names to be evaluated against the HTTP(S) request target.
         * 
         * @return builder
         * 
         */
        public Builder urls(@Nullable Output<List<String>> urls) {
            $.urls = urls;
            return this;
        }

        /**
         * @param urls (Updatable) An array of URL pattern list names to be evaluated against the HTTP(S) request target.
         * 
         * @return builder
         * 
         */
        public Builder urls(List<String> urls) {
            return urls(Output.of(urls));
        }

        /**
         * @param urls (Updatable) An array of URL pattern list names to be evaluated against the HTTP(S) request target.
         * 
         * @return builder
         * 
         */
        public Builder urls(String... urls) {
            return urls(List.of(urls));
        }

        public NetworkFirewallPolicySecurityRuleConditionArgs build() {
            return $;
        }
    }

}
