// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicySecurityRuleConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicySecurityRuleConditionArgs Empty = new NetworkFirewallPolicySecurityRuleConditionArgs();

    /**
     * (Updatable) An array of application group names to be evaluated against the traffic protocol and protocol-specific parameters.
     * 
     */
    @Import(name="applications")
    private @Nullable Output<List<String>> applications;

    /**
     * @return (Updatable) An array of application group names to be evaluated against the traffic protocol and protocol-specific parameters.
     * 
     */
    public Optional<Output<List<String>>> applications() {
        return Optional.ofNullable(this.applications);
    }

    /**
     * (Updatable) An array of address list names to be evaluated against the traffic destination address.
     * 
     */
    @Import(name="destinationAddresses")
    private @Nullable Output<List<String>> destinationAddresses;

    /**
     * @return (Updatable) An array of address list names to be evaluated against the traffic destination address.
     * 
     */
    public Optional<Output<List<String>>> destinationAddresses() {
        return Optional.ofNullable(this.destinationAddresses);
    }

    /**
     * (Updatable) An array of service list names to be evaluated against the traffic protocol and protocol-specific parameters.
     * 
     */
    @Import(name="services")
    private @Nullable Output<List<String>> services;

    /**
     * @return (Updatable) An array of service list names to be evaluated against the traffic protocol and protocol-specific parameters.
     * 
     */
    public Optional<Output<List<String>>> services() {
        return Optional.ofNullable(this.services);
    }

    /**
     * (Updatable) An array of address list names to be evaluated against the traffic source address.
     * 
     */
    @Import(name="sourceAddresses")
    private @Nullable Output<List<String>> sourceAddresses;

    /**
     * @return (Updatable) An array of address list names to be evaluated against the traffic source address.
     * 
     */
    public Optional<Output<List<String>>> sourceAddresses() {
        return Optional.ofNullable(this.sourceAddresses);
    }

    /**
     * (Updatable) An array of URL list names to be evaluated against the HTTP(S) request target.
     * 
     */
    @Import(name="urls")
    private @Nullable Output<List<String>> urls;

    /**
     * @return (Updatable) An array of URL list names to be evaluated against the HTTP(S) request target.
     * 
     */
    public Optional<Output<List<String>>> urls() {
        return Optional.ofNullable(this.urls);
    }

    private NetworkFirewallPolicySecurityRuleConditionArgs() {}

    private NetworkFirewallPolicySecurityRuleConditionArgs(NetworkFirewallPolicySecurityRuleConditionArgs $) {
        this.applications = $.applications;
        this.destinationAddresses = $.destinationAddresses;
        this.services = $.services;
        this.sourceAddresses = $.sourceAddresses;
        this.urls = $.urls;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicySecurityRuleConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicySecurityRuleConditionArgs $;

        public Builder() {
            $ = new NetworkFirewallPolicySecurityRuleConditionArgs();
        }

        public Builder(NetworkFirewallPolicySecurityRuleConditionArgs defaults) {
            $ = new NetworkFirewallPolicySecurityRuleConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applications (Updatable) An array of application group names to be evaluated against the traffic protocol and protocol-specific parameters.
         * 
         * @return builder
         * 
         */
        public Builder applications(@Nullable Output<List<String>> applications) {
            $.applications = applications;
            return this;
        }

        /**
         * @param applications (Updatable) An array of application group names to be evaluated against the traffic protocol and protocol-specific parameters.
         * 
         * @return builder
         * 
         */
        public Builder applications(List<String> applications) {
            return applications(Output.of(applications));
        }

        /**
         * @param applications (Updatable) An array of application group names to be evaluated against the traffic protocol and protocol-specific parameters.
         * 
         * @return builder
         * 
         */
        public Builder applications(String... applications) {
            return applications(List.of(applications));
        }

        /**
         * @param destinationAddresses (Updatable) An array of address list names to be evaluated against the traffic destination address.
         * 
         * @return builder
         * 
         */
        public Builder destinationAddresses(@Nullable Output<List<String>> destinationAddresses) {
            $.destinationAddresses = destinationAddresses;
            return this;
        }

        /**
         * @param destinationAddresses (Updatable) An array of address list names to be evaluated against the traffic destination address.
         * 
         * @return builder
         * 
         */
        public Builder destinationAddresses(List<String> destinationAddresses) {
            return destinationAddresses(Output.of(destinationAddresses));
        }

        /**
         * @param destinationAddresses (Updatable) An array of address list names to be evaluated against the traffic destination address.
         * 
         * @return builder
         * 
         */
        public Builder destinationAddresses(String... destinationAddresses) {
            return destinationAddresses(List.of(destinationAddresses));
        }

        /**
         * @param services (Updatable) An array of service list names to be evaluated against the traffic protocol and protocol-specific parameters.
         * 
         * @return builder
         * 
         */
        public Builder services(@Nullable Output<List<String>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services (Updatable) An array of service list names to be evaluated against the traffic protocol and protocol-specific parameters.
         * 
         * @return builder
         * 
         */
        public Builder services(List<String> services) {
            return services(Output.of(services));
        }

        /**
         * @param services (Updatable) An array of service list names to be evaluated against the traffic protocol and protocol-specific parameters.
         * 
         * @return builder
         * 
         */
        public Builder services(String... services) {
            return services(List.of(services));
        }

        /**
         * @param sourceAddresses (Updatable) An array of address list names to be evaluated against the traffic source address.
         * 
         * @return builder
         * 
         */
        public Builder sourceAddresses(@Nullable Output<List<String>> sourceAddresses) {
            $.sourceAddresses = sourceAddresses;
            return this;
        }

        /**
         * @param sourceAddresses (Updatable) An array of address list names to be evaluated against the traffic source address.
         * 
         * @return builder
         * 
         */
        public Builder sourceAddresses(List<String> sourceAddresses) {
            return sourceAddresses(Output.of(sourceAddresses));
        }

        /**
         * @param sourceAddresses (Updatable) An array of address list names to be evaluated against the traffic source address.
         * 
         * @return builder
         * 
         */
        public Builder sourceAddresses(String... sourceAddresses) {
            return sourceAddresses(List.of(sourceAddresses));
        }

        /**
         * @param urls (Updatable) An array of URL list names to be evaluated against the HTTP(S) request target.
         * 
         * @return builder
         * 
         */
        public Builder urls(@Nullable Output<List<String>> urls) {
            $.urls = urls;
            return this;
        }

        /**
         * @param urls (Updatable) An array of URL list names to be evaluated against the HTTP(S) request target.
         * 
         * @return builder
         * 
         */
        public Builder urls(List<String> urls) {
            return urls(Output.of(urls));
        }

        /**
         * @param urls (Updatable) An array of URL list names to be evaluated against the HTTP(S) request target.
         * 
         * @return builder
         * 
         */
        public Builder urls(String... urls) {
            return urls(List.of(urls));
        }

        public NetworkFirewallPolicySecurityRuleConditionArgs build() {
            return $;
        }
    }

}
