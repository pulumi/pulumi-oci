// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicyServiceListState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicyServiceListState Empty = new NetworkFirewallPolicyServiceListState();

    /**
     * Name of the service Group.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the service Group.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique Network Firewall Policy identifier
     * 
     */
    @Import(name="networkFirewallPolicyId")
    private @Nullable Output<String> networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public Optional<Output<String>> networkFirewallPolicyId() {
        return Optional.ofNullable(this.networkFirewallPolicyId);
    }

    /**
     * OCID of the Network Firewall Policy this serviceList belongs to.
     * 
     */
    @Import(name="parentResourceId")
    private @Nullable Output<String> parentResourceId;

    /**
     * @return OCID of the Network Firewall Policy this serviceList belongs to.
     * 
     */
    public Optional<Output<String>> parentResourceId() {
        return Optional.ofNullable(this.parentResourceId);
    }

    /**
     * (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="services")
    private @Nullable Output<List<String>> services;

    /**
     * @return (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<List<String>>> services() {
        return Optional.ofNullable(this.services);
    }

    /**
     * Count of total services in the given service List.
     * 
     */
    @Import(name="totalServices")
    private @Nullable Output<Integer> totalServices;

    /**
     * @return Count of total services in the given service List.
     * 
     */
    public Optional<Output<Integer>> totalServices() {
        return Optional.ofNullable(this.totalServices);
    }

    private NetworkFirewallPolicyServiceListState() {}

    private NetworkFirewallPolicyServiceListState(NetworkFirewallPolicyServiceListState $) {
        this.name = $.name;
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
        this.parentResourceId = $.parentResourceId;
        this.services = $.services;
        this.totalServices = $.totalServices;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicyServiceListState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicyServiceListState $;

        public Builder() {
            $ = new NetworkFirewallPolicyServiceListState();
        }

        public Builder(NetworkFirewallPolicyServiceListState defaults) {
            $ = new NetworkFirewallPolicyServiceListState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the service Group.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the service Group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(@Nullable Output<String> networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            return networkFirewallPolicyId(Output.of(networkFirewallPolicyId));
        }

        /**
         * @param parentResourceId OCID of the Network Firewall Policy this serviceList belongs to.
         * 
         * @return builder
         * 
         */
        public Builder parentResourceId(@Nullable Output<String> parentResourceId) {
            $.parentResourceId = parentResourceId;
            return this;
        }

        /**
         * @param parentResourceId OCID of the Network Firewall Policy this serviceList belongs to.
         * 
         * @return builder
         * 
         */
        public Builder parentResourceId(String parentResourceId) {
            return parentResourceId(Output.of(parentResourceId));
        }

        /**
         * @param services (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder services(@Nullable Output<List<String>> services) {
            $.services = services;
            return this;
        }

        /**
         * @param services (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder services(List<String> services) {
            return services(Output.of(services));
        }

        /**
         * @param services (Updatable) Collection of service names. The services referenced in the service list must already be present in the policy before being used in the service list.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder services(String... services) {
            return services(List.of(services));
        }

        /**
         * @param totalServices Count of total services in the given service List.
         * 
         * @return builder
         * 
         */
        public Builder totalServices(@Nullable Output<Integer> totalServices) {
            $.totalServices = totalServices;
            return this;
        }

        /**
         * @param totalServices Count of total services in the given service List.
         * 
         * @return builder
         * 
         */
        public Builder totalServices(Integer totalServices) {
            return totalServices(Output.of(totalServices));
        }

        public NetworkFirewallPolicyServiceListState build() {
            return $;
        }
    }

}
