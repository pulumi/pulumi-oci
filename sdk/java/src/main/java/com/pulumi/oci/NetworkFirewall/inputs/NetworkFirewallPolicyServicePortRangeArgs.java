// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicyServicePortRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicyServicePortRangeArgs Empty = new NetworkFirewallPolicyServicePortRangeArgs();

    /**
     * (Updatable) The maximum port in the range (inclusive), which may be absent for a single-port range.
     * 
     */
    @Import(name="maximumPort")
    private @Nullable Output<Integer> maximumPort;

    /**
     * @return (Updatable) The maximum port in the range (inclusive), which may be absent for a single-port range.
     * 
     */
    public Optional<Output<Integer>> maximumPort() {
        return Optional.ofNullable(this.maximumPort);
    }

    /**
     * (Updatable) The minimum port in the range (inclusive), or the sole port of a single-port range.
     * 
     */
    @Import(name="minimumPort", required=true)
    private Output<Integer> minimumPort;

    /**
     * @return (Updatable) The minimum port in the range (inclusive), or the sole port of a single-port range.
     * 
     */
    public Output<Integer> minimumPort() {
        return this.minimumPort;
    }

    private NetworkFirewallPolicyServicePortRangeArgs() {}

    private NetworkFirewallPolicyServicePortRangeArgs(NetworkFirewallPolicyServicePortRangeArgs $) {
        this.maximumPort = $.maximumPort;
        this.minimumPort = $.minimumPort;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicyServicePortRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicyServicePortRangeArgs $;

        public Builder() {
            $ = new NetworkFirewallPolicyServicePortRangeArgs();
        }

        public Builder(NetworkFirewallPolicyServicePortRangeArgs defaults) {
            $ = new NetworkFirewallPolicyServicePortRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maximumPort (Updatable) The maximum port in the range (inclusive), which may be absent for a single-port range.
         * 
         * @return builder
         * 
         */
        public Builder maximumPort(@Nullable Output<Integer> maximumPort) {
            $.maximumPort = maximumPort;
            return this;
        }

        /**
         * @param maximumPort (Updatable) The maximum port in the range (inclusive), which may be absent for a single-port range.
         * 
         * @return builder
         * 
         */
        public Builder maximumPort(Integer maximumPort) {
            return maximumPort(Output.of(maximumPort));
        }

        /**
         * @param minimumPort (Updatable) The minimum port in the range (inclusive), or the sole port of a single-port range.
         * 
         * @return builder
         * 
         */
        public Builder minimumPort(Output<Integer> minimumPort) {
            $.minimumPort = minimumPort;
            return this;
        }

        /**
         * @param minimumPort (Updatable) The minimum port in the range (inclusive), or the sole port of a single-port range.
         * 
         * @return builder
         * 
         */
        public Builder minimumPort(Integer minimumPort) {
            return minimumPort(Output.of(minimumPort));
        }

        public NetworkFirewallPolicyServicePortRangeArgs build() {
            if ($.minimumPort == null) {
                throw new MissingRequiredPropertyException("NetworkFirewallPolicyServicePortRangeArgs", "minimumPort");
            }
            return $;
        }
    }

}
