// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.NetworkFirewall.inputs.NetworkFirewallPolicyServicePortRangeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicyServiceState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicyServiceState Empty = new NetworkFirewallPolicyServiceState();

    /**
     * Name of the service
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the service
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Unique Network Firewall Policy identifier
     * 
     */
    @Import(name="networkFirewallPolicyId")
    private @Nullable Output<String> networkFirewallPolicyId;

    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public Optional<Output<String>> networkFirewallPolicyId() {
        return Optional.ofNullable(this.networkFirewallPolicyId);
    }

    /**
     * OCID of the Network Firewall Policy this service belongs to.
     * 
     */
    @Import(name="parentResourceId")
    private @Nullable Output<String> parentResourceId;

    /**
     * @return OCID of the Network Firewall Policy this service belongs to.
     * 
     */
    public Optional<Output<String>> parentResourceId() {
        return Optional.ofNullable(this.parentResourceId);
    }

    /**
     * (Updatable) List of port-ranges to be used.
     * 
     */
    @Import(name="portRanges")
    private @Nullable Output<List<NetworkFirewallPolicyServicePortRangeArgs>> portRanges;

    /**
     * @return (Updatable) List of port-ranges to be used.
     * 
     */
    public Optional<Output<List<NetworkFirewallPolicyServicePortRangeArgs>>> portRanges() {
        return Optional.ofNullable(this.portRanges);
    }

    /**
     * Describes the type of Service. The accepted values are
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Describes the type of Service. The accepted values are
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private NetworkFirewallPolicyServiceState() {}

    private NetworkFirewallPolicyServiceState(NetworkFirewallPolicyServiceState $) {
        this.name = $.name;
        this.networkFirewallPolicyId = $.networkFirewallPolicyId;
        this.parentResourceId = $.parentResourceId;
        this.portRanges = $.portRanges;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicyServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicyServiceState $;

        public Builder() {
            $ = new NetworkFirewallPolicyServiceState();
        }

        public Builder(NetworkFirewallPolicyServiceState defaults) {
            $ = new NetworkFirewallPolicyServiceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name of the service
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the service
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(@Nullable Output<String> networkFirewallPolicyId) {
            $.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }

        /**
         * @param networkFirewallPolicyId Unique Network Firewall Policy identifier
         * 
         * @return builder
         * 
         */
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            return networkFirewallPolicyId(Output.of(networkFirewallPolicyId));
        }

        /**
         * @param parentResourceId OCID of the Network Firewall Policy this service belongs to.
         * 
         * @return builder
         * 
         */
        public Builder parentResourceId(@Nullable Output<String> parentResourceId) {
            $.parentResourceId = parentResourceId;
            return this;
        }

        /**
         * @param parentResourceId OCID of the Network Firewall Policy this service belongs to.
         * 
         * @return builder
         * 
         */
        public Builder parentResourceId(String parentResourceId) {
            return parentResourceId(Output.of(parentResourceId));
        }

        /**
         * @param portRanges (Updatable) List of port-ranges to be used.
         * 
         * @return builder
         * 
         */
        public Builder portRanges(@Nullable Output<List<NetworkFirewallPolicyServicePortRangeArgs>> portRanges) {
            $.portRanges = portRanges;
            return this;
        }

        /**
         * @param portRanges (Updatable) List of port-ranges to be used.
         * 
         * @return builder
         * 
         */
        public Builder portRanges(List<NetworkFirewallPolicyServicePortRangeArgs> portRanges) {
            return portRanges(Output.of(portRanges));
        }

        /**
         * @param portRanges (Updatable) List of port-ranges to be used.
         * 
         * @return builder
         * 
         */
        public Builder portRanges(NetworkFirewallPolicyServicePortRangeArgs... portRanges) {
            return portRanges(List.of(portRanges));
        }

        /**
         * @param type Describes the type of Service. The accepted values are
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Describes the type of Service. The accepted values are
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public NetworkFirewallPolicyServiceState build() {
            return $;
        }
    }

}
