// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkFirewallPolicyUrlListArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkFirewallPolicyUrlListArgs Empty = new NetworkFirewallPolicyUrlListArgs();

    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    @Import(name="pattern")
    private @Nullable Output<String> pattern;

    public Optional<Output<String>> pattern() {
        return Optional.ofNullable(this.pattern);
    }

    /**
     * (Updatable) Type of the secrets mapped based on the policy.
     * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
     * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Type of the secrets mapped based on the policy.
     * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
     * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private NetworkFirewallPolicyUrlListArgs() {}

    private NetworkFirewallPolicyUrlListArgs(NetworkFirewallPolicyUrlListArgs $) {
        this.key = $.key;
        this.pattern = $.pattern;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkFirewallPolicyUrlListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkFirewallPolicyUrlListArgs $;

        public Builder() {
            $ = new NetworkFirewallPolicyUrlListArgs();
        }

        public Builder(NetworkFirewallPolicyUrlListArgs defaults) {
            $ = new NetworkFirewallPolicyUrlListArgs(Objects.requireNonNull(defaults));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public Builder pattern(@Nullable Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        /**
         * @param type (Updatable) Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Type of the secrets mapped based on the policy.
         * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
         * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public NetworkFirewallPolicyUrlListArgs build() {
            $.key = Objects.requireNonNull($.key, "expected parameter 'key' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
