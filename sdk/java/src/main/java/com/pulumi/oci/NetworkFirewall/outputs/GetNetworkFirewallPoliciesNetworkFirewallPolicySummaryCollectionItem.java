// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemApplicationList;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionProfile;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionRule;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemIpAddressList;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRule;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemUrlList;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItem {
    /**
     * @return Map defining application lists of the policy. The value of an entry is a list of &#34;applications&#34;, each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
     * 
     */
    private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemApplicationList> applicationLists;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private String compartmentId;
    /**
     * @return Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
     * 
     */
    private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionProfile> decryptionProfiles;
    /**
     * @return List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
     * 
     */
    private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionRule> decryptionRules;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    private String id;
    /**
     * @return Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
     * 
     */
    private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemIpAddressList> ipAddressLists;
    /**
     * @return To determine if any Network Firewall is associated with this Network Firewall Policy.
     * 
     */
    private Boolean isFirewallAttached;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Map defining secrets of the policy. The value of an entry is a &#34;mapped secret&#34; consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
     * 
     */
    private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret> mappedSecrets;
    /**
     * @return List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
     * 
     */
    private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRule> securityRules;
    /**
     * @return A filter to return only resources with a lifecycleState matching the given value.
     * 
     */
    private String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private Map<String,Object> systemTags;
    /**
     * @return The time instant at which the Network Firewall Policy was created in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The time instant at which the Network Firewall Policy was updated in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeUpdated;
    /**
     * @return Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
     * 
     */
    private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemUrlList> urlLists;

    private GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItem() {}
    /**
     * @return Map defining application lists of the policy. The value of an entry is a list of &#34;applications&#34;, each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
     * 
     */
    public List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemApplicationList> applicationLists() {
        return this.applicationLists;
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
     * 
     */
    public List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionProfile> decryptionProfiles() {
        return this.decryptionProfiles;
    }
    /**
     * @return List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
     * 
     */
    public List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionRule> decryptionRules() {
        return this.decryptionRules;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
     * 
     */
    public List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemIpAddressList> ipAddressLists() {
        return this.ipAddressLists;
    }
    /**
     * @return To determine if any Network Firewall is associated with this Network Firewall Policy.
     * 
     */
    public Boolean isFirewallAttached() {
        return this.isFirewallAttached;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Map defining secrets of the policy. The value of an entry is a &#34;mapped secret&#34; consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
     * 
     */
    public List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret> mappedSecrets() {
        return this.mappedSecrets;
    }
    /**
     * @return List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
     * 
     */
    public List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRule> securityRules() {
        return this.securityRules;
    }
    /**
     * @return A filter to return only resources with a lifecycleState matching the given value.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time instant at which the Network Firewall Policy was created in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time instant at which the Network Firewall Policy was updated in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
     * 
     */
    public List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemUrlList> urlLists() {
        return this.urlLists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemApplicationList> applicationLists;
        private String compartmentId;
        private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionProfile> decryptionProfiles;
        private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionRule> decryptionRules;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemIpAddressList> ipAddressLists;
        private Boolean isFirewallAttached;
        private String lifecycleDetails;
        private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret> mappedSecrets;
        private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRule> securityRules;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemUrlList> urlLists;
        public Builder() {}
        public Builder(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationLists = defaults.applicationLists;
    	      this.compartmentId = defaults.compartmentId;
    	      this.decryptionProfiles = defaults.decryptionProfiles;
    	      this.decryptionRules = defaults.decryptionRules;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.ipAddressLists = defaults.ipAddressLists;
    	      this.isFirewallAttached = defaults.isFirewallAttached;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.mappedSecrets = defaults.mappedSecrets;
    	      this.securityRules = defaults.securityRules;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.urlLists = defaults.urlLists;
        }

        @CustomType.Setter
        public Builder applicationLists(List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemApplicationList> applicationLists) {
            this.applicationLists = Objects.requireNonNull(applicationLists);
            return this;
        }
        public Builder applicationLists(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemApplicationList... applicationLists) {
            return applicationLists(List.of(applicationLists));
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder decryptionProfiles(List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionProfile> decryptionProfiles) {
            this.decryptionProfiles = Objects.requireNonNull(decryptionProfiles);
            return this;
        }
        public Builder decryptionProfiles(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionProfile... decryptionProfiles) {
            return decryptionProfiles(List.of(decryptionProfiles));
        }
        @CustomType.Setter
        public Builder decryptionRules(List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionRule> decryptionRules) {
            this.decryptionRules = Objects.requireNonNull(decryptionRules);
            return this;
        }
        public Builder decryptionRules(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemDecryptionRule... decryptionRules) {
            return decryptionRules(List.of(decryptionRules));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddressLists(List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemIpAddressList> ipAddressLists) {
            this.ipAddressLists = Objects.requireNonNull(ipAddressLists);
            return this;
        }
        public Builder ipAddressLists(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemIpAddressList... ipAddressLists) {
            return ipAddressLists(List.of(ipAddressLists));
        }
        @CustomType.Setter
        public Builder isFirewallAttached(Boolean isFirewallAttached) {
            this.isFirewallAttached = Objects.requireNonNull(isFirewallAttached);
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        @CustomType.Setter
        public Builder mappedSecrets(List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret> mappedSecrets) {
            this.mappedSecrets = Objects.requireNonNull(mappedSecrets);
            return this;
        }
        public Builder mappedSecrets(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret... mappedSecrets) {
            return mappedSecrets(List.of(mappedSecrets));
        }
        @CustomType.Setter
        public Builder securityRules(List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRule> securityRules) {
            this.securityRules = Objects.requireNonNull(securityRules);
            return this;
        }
        public Builder securityRules(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRule... securityRules) {
            return securityRules(List.of(securityRules));
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder urlLists(List<GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemUrlList> urlLists) {
            this.urlLists = Objects.requireNonNull(urlLists);
            return this;
        }
        public Builder urlLists(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemUrlList... urlLists) {
            return urlLists(List.of(urlLists));
        }
        public GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItem build() {
            final var o = new GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItem();
            o.applicationLists = applicationLists;
            o.compartmentId = compartmentId;
            o.decryptionProfiles = decryptionProfiles;
            o.decryptionRules = decryptionRules;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.freeformTags = freeformTags;
            o.id = id;
            o.ipAddressLists = ipAddressLists;
            o.isFirewallAttached = isFirewallAttached;
            o.lifecycleDetails = lifecycleDetails;
            o.mappedSecrets = mappedSecrets;
            o.securityRules = securityRules;
            o.state = state;
            o.systemTags = systemTags;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.urlLists = urlLists;
            return o;
        }
    }
}
