// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret {
    private final String key;
    /**
     * @return Type of the secrets mapped based on the policy.
     * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
     * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
     * 
     */
    private final String type;
    /**
     * @return OCID for the Vault Secret to be used.
     * 
     */
    private final String vaultSecretId;
    /**
     * @return Version number of the secret to be used.
     * 
     */
    private final Integer versionNumber;

    @CustomType.Constructor
    private GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret(
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("vaultSecretId") String vaultSecretId,
        @CustomType.Parameter("versionNumber") Integer versionNumber) {
        this.key = key;
        this.type = type;
        this.vaultSecretId = vaultSecretId;
        this.versionNumber = versionNumber;
    }

    public String key() {
        return this.key;
    }
    /**
     * @return Type of the secrets mapped based on the policy.
     * * `SSL_INBOUND_INSPECTION`: For Inbound inspection of SSL traffic.
     * * `SSL_FORWARD_PROXY`: For forward proxy certificates for SSL inspection.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return OCID for the Vault Secret to be used.
     * 
     */
    public String vaultSecretId() {
        return this.vaultSecretId;
    }
    /**
     * @return Version number of the secret to be used.
     * 
     */
    public Integer versionNumber() {
        return this.versionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String key;
        private String type;
        private String vaultSecretId;
        private Integer versionNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.type = defaults.type;
    	      this.vaultSecretId = defaults.vaultSecretId;
    	      this.versionNumber = defaults.versionNumber;
        }

        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder vaultSecretId(String vaultSecretId) {
            this.vaultSecretId = Objects.requireNonNull(vaultSecretId);
            return this;
        }
        public Builder versionNumber(Integer versionNumber) {
            this.versionNumber = Objects.requireNonNull(versionNumber);
            return this;
        }        public GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret build() {
            return new GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemMappedSecret(key, type, vaultSecretId, versionNumber);
        }
    }
}
