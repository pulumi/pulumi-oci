// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRuleCondition {
    /**
     * @return An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
     * 
     */
    private List<String> applications;
    /**
     * @return An array of IP address list names to be evaluated against the traffic destination address.
     * 
     */
    private List<String> destinations;
    /**
     * @return An array of IP address list names to be evaluated against the traffic source address.
     * 
     */
    private List<String> sources;
    /**
     * @return An array of URL pattern list names to be evaluated against the HTTP(S) request target.
     * 
     */
    private List<String> urls;

    private GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRuleCondition() {}
    /**
     * @return An array of application list names to be evaluated against the traffic protocol and protocol-specific parameters.
     * 
     */
    public List<String> applications() {
        return this.applications;
    }
    /**
     * @return An array of IP address list names to be evaluated against the traffic destination address.
     * 
     */
    public List<String> destinations() {
        return this.destinations;
    }
    /**
     * @return An array of IP address list names to be evaluated against the traffic source address.
     * 
     */
    public List<String> sources() {
        return this.sources;
    }
    /**
     * @return An array of URL pattern list names to be evaluated against the HTTP(S) request target.
     * 
     */
    public List<String> urls() {
        return this.urls;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRuleCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> applications;
        private List<String> destinations;
        private List<String> sources;
        private List<String> urls;
        public Builder() {}
        public Builder(GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRuleCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applications = defaults.applications;
    	      this.destinations = defaults.destinations;
    	      this.sources = defaults.sources;
    	      this.urls = defaults.urls;
        }

        @CustomType.Setter
        public Builder applications(List<String> applications) {
            this.applications = Objects.requireNonNull(applications);
            return this;
        }
        public Builder applications(String... applications) {
            return applications(List.of(applications));
        }
        @CustomType.Setter
        public Builder destinations(List<String> destinations) {
            this.destinations = Objects.requireNonNull(destinations);
            return this;
        }
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }
        @CustomType.Setter
        public Builder sources(List<String> sources) {
            this.sources = Objects.requireNonNull(sources);
            return this;
        }
        public Builder sources(String... sources) {
            return sources(List.of(sources));
        }
        @CustomType.Setter
        public Builder urls(List<String> urls) {
            this.urls = Objects.requireNonNull(urls);
            return this;
        }
        public Builder urls(String... urls) {
            return urls(List.of(urls));
        }
        public GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRuleCondition build() {
            final var o = new GetNetworkFirewallPoliciesNetworkFirewallPolicySummaryCollectionItemSecurityRuleCondition();
            o.applications = applications;
            o.destinations = destinations;
            o.sources = sources;
            o.urls = urls;
            return o;
        }
    }
}
