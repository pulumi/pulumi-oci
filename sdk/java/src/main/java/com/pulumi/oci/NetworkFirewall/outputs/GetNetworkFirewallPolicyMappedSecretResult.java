// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNetworkFirewallPolicyMappedSecretResult {
    private String id;
    /**
     * @return Name of the secret.
     * 
     */
    private String name;
    private String networkFirewallPolicyId;
    /**
     * @return OCID of the Network Firewall Policy this Mapped Secret belongs to.
     * 
     */
    private String parentResourceId;
    /**
     * @return Source of the secrets, where the secrets are stored.
     * 
     */
    private String source;
    /**
     * @return Type of the secrets mapped based on the policy.
     * 
     */
    private String type;
    /**
     * @return OCID for the Vault Secret to be used.
     * 
     */
    private String vaultSecretId;
    /**
     * @return Version number of the secret to be used.
     * 
     */
    private Integer versionNumber;

    private GetNetworkFirewallPolicyMappedSecretResult() {}
    public String id() {
        return this.id;
    }
    /**
     * @return Name of the secret.
     * 
     */
    public String name() {
        return this.name;
    }
    public String networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }
    /**
     * @return OCID of the Network Firewall Policy this Mapped Secret belongs to.
     * 
     */
    public String parentResourceId() {
        return this.parentResourceId;
    }
    /**
     * @return Source of the secrets, where the secrets are stored.
     * 
     */
    public String source() {
        return this.source;
    }
    /**
     * @return Type of the secrets mapped based on the policy.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return OCID for the Vault Secret to be used.
     * 
     */
    public String vaultSecretId() {
        return this.vaultSecretId;
    }
    /**
     * @return Version number of the secret to be used.
     * 
     */
    public Integer versionNumber() {
        return this.versionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkFirewallPolicyMappedSecretResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String networkFirewallPolicyId;
        private String parentResourceId;
        private String source;
        private String type;
        private String vaultSecretId;
        private Integer versionNumber;
        public Builder() {}
        public Builder(GetNetworkFirewallPolicyMappedSecretResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.networkFirewallPolicyId = defaults.networkFirewallPolicyId;
    	      this.parentResourceId = defaults.parentResourceId;
    	      this.source = defaults.source;
    	      this.type = defaults.type;
    	      this.vaultSecretId = defaults.vaultSecretId;
    	      this.versionNumber = defaults.versionNumber;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyMappedSecretResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyMappedSecretResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            if (networkFirewallPolicyId == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyMappedSecretResult", "networkFirewallPolicyId");
            }
            this.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder parentResourceId(String parentResourceId) {
            if (parentResourceId == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyMappedSecretResult", "parentResourceId");
            }
            this.parentResourceId = parentResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyMappedSecretResult", "source");
            }
            this.source = source;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyMappedSecretResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vaultSecretId(String vaultSecretId) {
            if (vaultSecretId == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyMappedSecretResult", "vaultSecretId");
            }
            this.vaultSecretId = vaultSecretId;
            return this;
        }
        @CustomType.Setter
        public Builder versionNumber(Integer versionNumber) {
            if (versionNumber == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyMappedSecretResult", "versionNumber");
            }
            this.versionNumber = versionNumber;
            return this;
        }
        public GetNetworkFirewallPolicyMappedSecretResult build() {
            final var _resultValue = new GetNetworkFirewallPolicyMappedSecretResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.networkFirewallPolicyId = networkFirewallPolicyId;
            _resultValue.parentResourceId = parentResourceId;
            _resultValue.source = source;
            _resultValue.type = type;
            _resultValue.vaultSecretId = vaultSecretId;
            _resultValue.versionNumber = versionNumber;
            return _resultValue;
        }
    }
}
