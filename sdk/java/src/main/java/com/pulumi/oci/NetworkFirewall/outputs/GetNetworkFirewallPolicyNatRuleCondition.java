// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkFirewallPolicyNatRuleCondition {
    /**
     * @return An array of IP address list names to be evaluated against the traffic destination address.
     * 
     */
    private List<String> destinationAddresses;
    /**
     * @return A Service name to be evaluated against the traffic protocol and protocol-specific parameters.
     * 
     */
    private String service;
    /**
     * @return An array of IP address list names to be evaluated against the traffic source address.
     * 
     */
    private List<String> sourceAddresses;

    private GetNetworkFirewallPolicyNatRuleCondition() {}
    /**
     * @return An array of IP address list names to be evaluated against the traffic destination address.
     * 
     */
    public List<String> destinationAddresses() {
        return this.destinationAddresses;
    }
    /**
     * @return A Service name to be evaluated against the traffic protocol and protocol-specific parameters.
     * 
     */
    public String service() {
        return this.service;
    }
    /**
     * @return An array of IP address list names to be evaluated against the traffic source address.
     * 
     */
    public List<String> sourceAddresses() {
        return this.sourceAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkFirewallPolicyNatRuleCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> destinationAddresses;
        private String service;
        private List<String> sourceAddresses;
        public Builder() {}
        public Builder(GetNetworkFirewallPolicyNatRuleCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinationAddresses = defaults.destinationAddresses;
    	      this.service = defaults.service;
    	      this.sourceAddresses = defaults.sourceAddresses;
        }

        @CustomType.Setter
        public Builder destinationAddresses(List<String> destinationAddresses) {
            if (destinationAddresses == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRuleCondition", "destinationAddresses");
            }
            this.destinationAddresses = destinationAddresses;
            return this;
        }
        public Builder destinationAddresses(String... destinationAddresses) {
            return destinationAddresses(List.of(destinationAddresses));
        }
        @CustomType.Setter
        public Builder service(String service) {
            if (service == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRuleCondition", "service");
            }
            this.service = service;
            return this;
        }
        @CustomType.Setter
        public Builder sourceAddresses(List<String> sourceAddresses) {
            if (sourceAddresses == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRuleCondition", "sourceAddresses");
            }
            this.sourceAddresses = sourceAddresses;
            return this;
        }
        public Builder sourceAddresses(String... sourceAddresses) {
            return sourceAddresses(List.of(sourceAddresses));
        }
        public GetNetworkFirewallPolicyNatRuleCondition build() {
            final var _resultValue = new GetNetworkFirewallPolicyNatRuleCondition();
            _resultValue.destinationAddresses = destinationAddresses;
            _resultValue.service = service;
            _resultValue.sourceAddresses = sourceAddresses;
            return _resultValue;
        }
    }
}
