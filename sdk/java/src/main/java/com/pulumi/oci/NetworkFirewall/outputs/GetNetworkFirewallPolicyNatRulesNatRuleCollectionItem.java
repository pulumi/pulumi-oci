// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemCondition;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemPosition;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem {
    /**
     * @return action:
     * * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
     * 
     */
    private String action;
    /**
     * @return Match criteria used in NAT Rule used on the firewall policy.
     * 
     */
    private GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemCondition condition;
    /**
     * @return Description of a NAT rule. This field can be used to add additional info.
     * 
     */
    private @Nullable String description;
    /**
     * @return Name for the NAT rule, must be unique within the policy.
     * 
     */
    private String name;
    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    private String networkFirewallPolicyId;
    /**
     * @return OCID of the Network Firewall Policy this decryption profile belongs to.
     * 
     */
    private String parentResourceId;
    /**
     * @return An object which defines the position of the rule.
     * 
     */
    private GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemPosition position;
    /**
     * @return The priority order in which this rule should be evaluated
     * 
     */
    private String priorityOrder;
    /**
     * @return NAT type:
     * * NATV4 - NATV4 type NAT.
     * 
     */
    private String type;

    private GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem() {}
    /**
     * @return action:
     * * DIPP_SRC_NAT - Dynamic-ip-port source NAT.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Match criteria used in NAT Rule used on the firewall policy.
     * 
     */
    public GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemCondition condition() {
        return this.condition;
    }
    /**
     * @return Description of a NAT rule. This field can be used to add additional info.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Name for the NAT rule, must be unique within the policy.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public String networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }
    /**
     * @return OCID of the Network Firewall Policy this decryption profile belongs to.
     * 
     */
    public String parentResourceId() {
        return this.parentResourceId;
    }
    /**
     * @return An object which defines the position of the rule.
     * 
     */
    public GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemPosition position() {
        return this.position;
    }
    /**
     * @return The priority order in which this rule should be evaluated
     * 
     */
    public String priorityOrder() {
        return this.priorityOrder;
    }
    /**
     * @return NAT type:
     * * NATV4 - NATV4 type NAT.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemCondition condition;
        private @Nullable String description;
        private String name;
        private String networkFirewallPolicyId;
        private String parentResourceId;
        private GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemPosition position;
        private String priorityOrder;
        private String type;
        public Builder() {}
        public Builder(GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.condition = defaults.condition;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
    	      this.networkFirewallPolicyId = defaults.networkFirewallPolicyId;
    	      this.parentResourceId = defaults.parentResourceId;
    	      this.position = defaults.position;
    	      this.priorityOrder = defaults.priorityOrder;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder condition(GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemCondition condition) {
            if (condition == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem", "condition");
            }
            this.condition = condition;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            if (networkFirewallPolicyId == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem", "networkFirewallPolicyId");
            }
            this.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder parentResourceId(String parentResourceId) {
            if (parentResourceId == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem", "parentResourceId");
            }
            this.parentResourceId = parentResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder position(GetNetworkFirewallPolicyNatRulesNatRuleCollectionItemPosition position) {
            if (position == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem", "position");
            }
            this.position = position;
            return this;
        }
        @CustomType.Setter
        public Builder priorityOrder(String priorityOrder) {
            if (priorityOrder == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem", "priorityOrder");
            }
            this.priorityOrder = priorityOrder;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem", "type");
            }
            this.type = type;
            return this;
        }
        public GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem build() {
            final var _resultValue = new GetNetworkFirewallPolicyNatRulesNatRuleCollectionItem();
            _resultValue.action = action;
            _resultValue.condition = condition;
            _resultValue.description = description;
            _resultValue.name = name;
            _resultValue.networkFirewallPolicyId = networkFirewallPolicyId;
            _resultValue.parentResourceId = parentResourceId;
            _resultValue.position = position;
            _resultValue.priorityOrder = priorityOrder;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
