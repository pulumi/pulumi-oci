// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyApplicationList;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyDecryptionProfile;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyDecryptionRule;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyIpAddressList;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyMappedSecret;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicySecurityRule;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyUrlList;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNetworkFirewallPolicyResult {
    /**
     * @return Map defining application lists of the policy. The value of an entry is a list of &#34;applications&#34;, each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
     * 
     */
    private final List<GetNetworkFirewallPolicyApplicationList> applicationLists;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the NetworkFirewall Policy.
     * 
     */
    private final String compartmentId;
    /**
     * @return Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
     * 
     */
    private final List<GetNetworkFirewallPolicyDecryptionProfile> decryptionProfiles;
    /**
     * @return List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
     * 
     */
    private final List<GetNetworkFirewallPolicyDecryptionRule> decryptionRules;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return A user-friendly optional name for the firewall policy. Avoid entering confidential information.
     * 
     */
    private final String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource - Network Firewall Policy.
     * 
     */
    private final String id;
    /**
     * @return Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
     * 
     */
    private final List<GetNetworkFirewallPolicyIpAddressList> ipAddressLists;
    /**
     * @return To determine if any Network Firewall is associated with this Network Firewall Policy.
     * 
     */
    private final Boolean isFirewallAttached;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return Map defining secrets of the policy. The value of an entry is a &#34;mapped secret&#34; consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
     * 
     */
    private final List<GetNetworkFirewallPolicyMappedSecret> mappedSecrets;
    private final String networkFirewallPolicyId;
    /**
     * @return List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
     * 
     */
    private final List<GetNetworkFirewallPolicySecurityRule> securityRules;
    /**
     * @return The current state of the Network Firewall Policy.
     * 
     */
    private final String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The time instant at which the Network Firewall Policy was created in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private final String timeCreated;
    /**
     * @return The time instant at which the Network Firewall Policy was updated in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private final String timeUpdated;
    /**
     * @return Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
     * 
     */
    private final List<GetNetworkFirewallPolicyUrlList> urlLists;

    @CustomType.Constructor
    private GetNetworkFirewallPolicyResult(
        @CustomType.Parameter("applicationLists") List<GetNetworkFirewallPolicyApplicationList> applicationLists,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("decryptionProfiles") List<GetNetworkFirewallPolicyDecryptionProfile> decryptionProfiles,
        @CustomType.Parameter("decryptionRules") List<GetNetworkFirewallPolicyDecryptionRule> decryptionRules,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ipAddressLists") List<GetNetworkFirewallPolicyIpAddressList> ipAddressLists,
        @CustomType.Parameter("isFirewallAttached") Boolean isFirewallAttached,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("mappedSecrets") List<GetNetworkFirewallPolicyMappedSecret> mappedSecrets,
        @CustomType.Parameter("networkFirewallPolicyId") String networkFirewallPolicyId,
        @CustomType.Parameter("securityRules") List<GetNetworkFirewallPolicySecurityRule> securityRules,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("urlLists") List<GetNetworkFirewallPolicyUrlList> urlLists) {
        this.applicationLists = applicationLists;
        this.compartmentId = compartmentId;
        this.decryptionProfiles = decryptionProfiles;
        this.decryptionRules = decryptionRules;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.ipAddressLists = ipAddressLists;
        this.isFirewallAttached = isFirewallAttached;
        this.lifecycleDetails = lifecycleDetails;
        this.mappedSecrets = mappedSecrets;
        this.networkFirewallPolicyId = networkFirewallPolicyId;
        this.securityRules = securityRules;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.urlLists = urlLists;
    }

    /**
     * @return Map defining application lists of the policy. The value of an entry is a list of &#34;applications&#34;, each consisting of a protocol identifier (such as TCP, UDP, or ICMP) and protocol-specific parameters (such as a port range). The associated key is the identifier by which the application list is referenced.
     * 
     */
    public List<GetNetworkFirewallPolicyApplicationList> applicationLists() {
        return this.applicationLists;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the NetworkFirewall Policy.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Map defining decryption profiles of the policy. The value of an entry is a decryption profile. The associated key is the identifier by which the decryption profile is referenced.
     * 
     */
    public List<GetNetworkFirewallPolicyDecryptionProfile> decryptionProfiles() {
        return this.decryptionProfiles;
    }
    /**
     * @return List of Decryption Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
     * 
     */
    public List<GetNetworkFirewallPolicyDecryptionRule> decryptionRules() {
        return this.decryptionRules;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly optional name for the firewall policy. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the resource - Network Firewall Policy.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Map defining IP address lists of the policy. The value of an entry is a list of IP addresses or prefixes in CIDR notation. The associated key is the identifier by which the IP address list is referenced.
     * 
     */
    public List<GetNetworkFirewallPolicyIpAddressList> ipAddressLists() {
        return this.ipAddressLists;
    }
    /**
     * @return To determine if any Network Firewall is associated with this Network Firewall Policy.
     * 
     */
    public Boolean isFirewallAttached() {
        return this.isFirewallAttached;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Map defining secrets of the policy. The value of an entry is a &#34;mapped secret&#34; consisting of a purpose and source. The associated key is the identifier by which the mapped secret is referenced.
     * 
     */
    public List<GetNetworkFirewallPolicyMappedSecret> mappedSecrets() {
        return this.mappedSecrets;
    }
    public String networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }
    /**
     * @return List of Security Rules defining the behavior of the policy. The first rule with a matching condition determines the action taken upon network traffic.
     * 
     */
    public List<GetNetworkFirewallPolicySecurityRule> securityRules() {
        return this.securityRules;
    }
    /**
     * @return The current state of the Network Firewall Policy.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time instant at which the Network Firewall Policy was created in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time instant at which the Network Firewall Policy was updated in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Map defining URL pattern lists of the policy. The value of an entry is a list of URL patterns. The associated key is the identifier by which the URL pattern list is referenced.
     * 
     */
    public List<GetNetworkFirewallPolicyUrlList> urlLists() {
        return this.urlLists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkFirewallPolicyResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetNetworkFirewallPolicyApplicationList> applicationLists;
        private String compartmentId;
        private List<GetNetworkFirewallPolicyDecryptionProfile> decryptionProfiles;
        private List<GetNetworkFirewallPolicyDecryptionRule> decryptionRules;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private List<GetNetworkFirewallPolicyIpAddressList> ipAddressLists;
        private Boolean isFirewallAttached;
        private String lifecycleDetails;
        private List<GetNetworkFirewallPolicyMappedSecret> mappedSecrets;
        private String networkFirewallPolicyId;
        private List<GetNetworkFirewallPolicySecurityRule> securityRules;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private List<GetNetworkFirewallPolicyUrlList> urlLists;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNetworkFirewallPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationLists = defaults.applicationLists;
    	      this.compartmentId = defaults.compartmentId;
    	      this.decryptionProfiles = defaults.decryptionProfiles;
    	      this.decryptionRules = defaults.decryptionRules;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.ipAddressLists = defaults.ipAddressLists;
    	      this.isFirewallAttached = defaults.isFirewallAttached;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.mappedSecrets = defaults.mappedSecrets;
    	      this.networkFirewallPolicyId = defaults.networkFirewallPolicyId;
    	      this.securityRules = defaults.securityRules;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.urlLists = defaults.urlLists;
        }

        public Builder applicationLists(List<GetNetworkFirewallPolicyApplicationList> applicationLists) {
            this.applicationLists = Objects.requireNonNull(applicationLists);
            return this;
        }
        public Builder applicationLists(GetNetworkFirewallPolicyApplicationList... applicationLists) {
            return applicationLists(List.of(applicationLists));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder decryptionProfiles(List<GetNetworkFirewallPolicyDecryptionProfile> decryptionProfiles) {
            this.decryptionProfiles = Objects.requireNonNull(decryptionProfiles);
            return this;
        }
        public Builder decryptionProfiles(GetNetworkFirewallPolicyDecryptionProfile... decryptionProfiles) {
            return decryptionProfiles(List.of(decryptionProfiles));
        }
        public Builder decryptionRules(List<GetNetworkFirewallPolicyDecryptionRule> decryptionRules) {
            this.decryptionRules = Objects.requireNonNull(decryptionRules);
            return this;
        }
        public Builder decryptionRules(GetNetworkFirewallPolicyDecryptionRule... decryptionRules) {
            return decryptionRules(List.of(decryptionRules));
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ipAddressLists(List<GetNetworkFirewallPolicyIpAddressList> ipAddressLists) {
            this.ipAddressLists = Objects.requireNonNull(ipAddressLists);
            return this;
        }
        public Builder ipAddressLists(GetNetworkFirewallPolicyIpAddressList... ipAddressLists) {
            return ipAddressLists(List.of(ipAddressLists));
        }
        public Builder isFirewallAttached(Boolean isFirewallAttached) {
            this.isFirewallAttached = Objects.requireNonNull(isFirewallAttached);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder mappedSecrets(List<GetNetworkFirewallPolicyMappedSecret> mappedSecrets) {
            this.mappedSecrets = Objects.requireNonNull(mappedSecrets);
            return this;
        }
        public Builder mappedSecrets(GetNetworkFirewallPolicyMappedSecret... mappedSecrets) {
            return mappedSecrets(List.of(mappedSecrets));
        }
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            this.networkFirewallPolicyId = Objects.requireNonNull(networkFirewallPolicyId);
            return this;
        }
        public Builder securityRules(List<GetNetworkFirewallPolicySecurityRule> securityRules) {
            this.securityRules = Objects.requireNonNull(securityRules);
            return this;
        }
        public Builder securityRules(GetNetworkFirewallPolicySecurityRule... securityRules) {
            return securityRules(List.of(securityRules));
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder urlLists(List<GetNetworkFirewallPolicyUrlList> urlLists) {
            this.urlLists = Objects.requireNonNull(urlLists);
            return this;
        }
        public Builder urlLists(GetNetworkFirewallPolicyUrlList... urlLists) {
            return urlLists(List.of(urlLists));
        }        public GetNetworkFirewallPolicyResult build() {
            return new GetNetworkFirewallPolicyResult(applicationLists, compartmentId, decryptionProfiles, decryptionRules, definedTags, displayName, freeformTags, id, ipAddressLists, isFirewallAttached, lifecycleDetails, mappedSecrets, networkFirewallPolicyId, securityRules, state, systemTags, timeCreated, timeUpdated, urlLists);
        }
    }
}
