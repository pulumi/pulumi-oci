// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicySecurityRuleCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkFirewallPolicySecurityRule {
    /**
     * @return Types of Action on the Traffic flow.
     * * ALLOW - Allows the traffic.
     * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
     * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
     * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
     * 
     */
    private String action;
    /**
     * @return Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
     * 
     */
    private List<GetNetworkFirewallPolicySecurityRuleCondition> conditions;
    /**
     * @return Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
     * * INTRUSION_DETECTION - Intrusion Detection.
     * * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
     * 
     */
    private String inspection;
    /**
     * @return Name for the Security rule, must be unique within the policy.
     * 
     */
    private String name;

    private GetNetworkFirewallPolicySecurityRule() {}
    /**
     * @return Types of Action on the Traffic flow.
     * * ALLOW - Allows the traffic.
     * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
     * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
     * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
     * 
     */
    public List<GetNetworkFirewallPolicySecurityRuleCondition> conditions() {
        return this.conditions;
    }
    /**
     * @return Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
     * * INTRUSION_DETECTION - Intrusion Detection.
     * * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
     * 
     */
    public String inspection() {
        return this.inspection;
    }
    /**
     * @return Name for the Security rule, must be unique within the policy.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkFirewallPolicySecurityRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private List<GetNetworkFirewallPolicySecurityRuleCondition> conditions;
        private String inspection;
        private String name;
        public Builder() {}
        public Builder(GetNetworkFirewallPolicySecurityRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.conditions = defaults.conditions;
    	      this.inspection = defaults.inspection;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        @CustomType.Setter
        public Builder conditions(List<GetNetworkFirewallPolicySecurityRuleCondition> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(GetNetworkFirewallPolicySecurityRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder inspection(String inspection) {
            this.inspection = Objects.requireNonNull(inspection);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GetNetworkFirewallPolicySecurityRule build() {
            final var o = new GetNetworkFirewallPolicySecurityRule();
            o.action = action;
            o.conditions = conditions;
            o.inspection = inspection;
            o.name = name;
            return o;
        }
    }
}
