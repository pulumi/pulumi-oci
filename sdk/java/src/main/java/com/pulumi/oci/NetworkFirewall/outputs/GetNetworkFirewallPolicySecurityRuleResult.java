// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicySecurityRuleCondition;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicySecurityRulePosition;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkFirewallPolicySecurityRuleResult {
    /**
     * @return Types of Action on the Traffic flow.
     * * ALLOW - Allows the traffic.
     * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
     * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
     * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
     * 
     */
    private String action;
    /**
     * @return Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
     * 
     */
    private List<GetNetworkFirewallPolicySecurityRuleCondition> conditions;
    private String id;
    /**
     * @return Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
     * * INTRUSION_DETECTION - Intrusion Detection.
     * * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
     * 
     */
    private String inspection;
    /**
     * @return Name for the Security rule, must be unique within the policy.
     * 
     */
    private String name;
    private String networkFirewallPolicyId;
    /**
     * @return OCID of the Network Firewall Policy this security rule belongs to.
     * 
     */
    private String parentResourceId;
    /**
     * @return An object which defines the position of the rule.
     * 
     */
    private List<GetNetworkFirewallPolicySecurityRulePosition> positions;
    private String priorityOrder;

    private GetNetworkFirewallPolicySecurityRuleResult() {}
    /**
     * @return Types of Action on the Traffic flow.
     * * ALLOW - Allows the traffic.
     * * DROP - Silently drops the traffic, e.g. without sending a TCP reset.
     * * REJECT - Rejects the traffic, sending a TCP reset to client and/or server as applicable.
     * * INSPECT - Inspects traffic for vulnerability as specified in `inspection`, which may result in rejection.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Criteria to evaluate against network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
     * 
     */
    public List<GetNetworkFirewallPolicySecurityRuleCondition> conditions() {
        return this.conditions;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Type of inspection to affect the Traffic flow. This is only applicable if action is INSPECT.
     * * INTRUSION_DETECTION - Intrusion Detection.
     * * INTRUSION_PREVENTION - Intrusion Detection and Prevention. Traffic classified as potentially malicious will be rejected as described in `type`.
     * 
     */
    public String inspection() {
        return this.inspection;
    }
    /**
     * @return Name for the Security rule, must be unique within the policy.
     * 
     */
    public String name() {
        return this.name;
    }
    public String networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }
    /**
     * @return OCID of the Network Firewall Policy this security rule belongs to.
     * 
     */
    public String parentResourceId() {
        return this.parentResourceId;
    }
    /**
     * @return An object which defines the position of the rule.
     * 
     */
    public List<GetNetworkFirewallPolicySecurityRulePosition> positions() {
        return this.positions;
    }
    public String priorityOrder() {
        return this.priorityOrder;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkFirewallPolicySecurityRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private List<GetNetworkFirewallPolicySecurityRuleCondition> conditions;
        private String id;
        private String inspection;
        private String name;
        private String networkFirewallPolicyId;
        private String parentResourceId;
        private List<GetNetworkFirewallPolicySecurityRulePosition> positions;
        private String priorityOrder;
        public Builder() {}
        public Builder(GetNetworkFirewallPolicySecurityRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.conditions = defaults.conditions;
    	      this.id = defaults.id;
    	      this.inspection = defaults.inspection;
    	      this.name = defaults.name;
    	      this.networkFirewallPolicyId = defaults.networkFirewallPolicyId;
    	      this.parentResourceId = defaults.parentResourceId;
    	      this.positions = defaults.positions;
    	      this.priorityOrder = defaults.priorityOrder;
        }

        @CustomType.Setter
        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        @CustomType.Setter
        public Builder conditions(List<GetNetworkFirewallPolicySecurityRuleCondition> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(GetNetworkFirewallPolicySecurityRuleCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inspection(String inspection) {
            this.inspection = Objects.requireNonNull(inspection);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            this.networkFirewallPolicyId = Objects.requireNonNull(networkFirewallPolicyId);
            return this;
        }
        @CustomType.Setter
        public Builder parentResourceId(String parentResourceId) {
            this.parentResourceId = Objects.requireNonNull(parentResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder positions(List<GetNetworkFirewallPolicySecurityRulePosition> positions) {
            this.positions = Objects.requireNonNull(positions);
            return this;
        }
        public Builder positions(GetNetworkFirewallPolicySecurityRulePosition... positions) {
            return positions(List.of(positions));
        }
        @CustomType.Setter
        public Builder priorityOrder(String priorityOrder) {
            this.priorityOrder = Objects.requireNonNull(priorityOrder);
            return this;
        }
        public GetNetworkFirewallPolicySecurityRuleResult build() {
            final var o = new GetNetworkFirewallPolicySecurityRuleResult();
            o.action = action;
            o.conditions = conditions;
            o.id = id;
            o.inspection = inspection;
            o.name = name;
            o.networkFirewallPolicyId = networkFirewallPolicyId;
            o.parentResourceId = parentResourceId;
            o.positions = positions;
            o.priorityOrder = priorityOrder;
            return o;
        }
    }
}
