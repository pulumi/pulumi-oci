// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkFirewall.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemCondition;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemPosition;
import com.pulumi.oci.NetworkFirewall.outputs.GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemProfile;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem {
    /**
     * @return Types of Inspect Action on the Traffic flow.
     * * INSPECT - Inspect the traffic.
     * * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
     * 
     */
    private String action;
    /**
     * @return Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
     * 
     */
    private GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemCondition condition;
    /**
     * @return Name for the Tunnel Inspection Rule, must be unique within the policy.
     * 
     */
    private String name;
    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    private String networkFirewallPolicyId;
    /**
     * @return OCID of the Network Firewall Policy this Tunnel Inspection Rule belongs to.
     * 
     */
    private String parentResourceId;
    /**
     * @return An object which defines the position of the rule.
     * 
     */
    private GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemPosition position;
    /**
     * @return The priority order in which this rule should be evaluated
     * 
     */
    private String priorityOrder;
    /**
     * @return Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
     * 
     */
    private GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemProfile profile;
    /**
     * @return Types of Tunnel Inspection Protocol to be applied on the traffic.
     * * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
     * 
     */
    private String protocol;

    private GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem() {}
    /**
     * @return Types of Inspect Action on the Traffic flow.
     * * INSPECT - Inspect the traffic.
     * * INSPECT_AND_CAPTURE_LOG - Inspect and capture logs for the traffic.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Criteria to evaluate against incoming network traffic. A match occurs when at least one item in the array associated with each specified property corresponds with the relevant aspect of the traffic.
     * 
     */
    public GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemCondition condition() {
        return this.condition;
    }
    /**
     * @return Name for the Tunnel Inspection Rule, must be unique within the policy.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Unique Network Firewall Policy identifier
     * 
     */
    public String networkFirewallPolicyId() {
        return this.networkFirewallPolicyId;
    }
    /**
     * @return OCID of the Network Firewall Policy this Tunnel Inspection Rule belongs to.
     * 
     */
    public String parentResourceId() {
        return this.parentResourceId;
    }
    /**
     * @return An object which defines the position of the rule.
     * 
     */
    public GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemPosition position() {
        return this.position;
    }
    /**
     * @return The priority order in which this rule should be evaluated
     * 
     */
    public String priorityOrder() {
        return this.priorityOrder;
    }
    /**
     * @return Vxlan Inspect profile used in Vxlan Tunnel Inspection Rules.
     * 
     */
    public GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemProfile profile() {
        return this.profile;
    }
    /**
     * @return Types of Tunnel Inspection Protocol to be applied on the traffic.
     * * VXLAN - VXLAN Tunnel Inspection Protocol will be applied on the traffic.
     * 
     */
    public String protocol() {
        return this.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemCondition condition;
        private String name;
        private String networkFirewallPolicyId;
        private String parentResourceId;
        private GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemPosition position;
        private String priorityOrder;
        private GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemProfile profile;
        private String protocol;
        public Builder() {}
        public Builder(GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.condition = defaults.condition;
    	      this.name = defaults.name;
    	      this.networkFirewallPolicyId = defaults.networkFirewallPolicyId;
    	      this.parentResourceId = defaults.parentResourceId;
    	      this.position = defaults.position;
    	      this.priorityOrder = defaults.priorityOrder;
    	      this.profile = defaults.profile;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder condition(GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemCondition condition) {
            if (condition == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem", "condition");
            }
            this.condition = condition;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkFirewallPolicyId(String networkFirewallPolicyId) {
            if (networkFirewallPolicyId == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem", "networkFirewallPolicyId");
            }
            this.networkFirewallPolicyId = networkFirewallPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder parentResourceId(String parentResourceId) {
            if (parentResourceId == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem", "parentResourceId");
            }
            this.parentResourceId = parentResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder position(GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemPosition position) {
            if (position == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem", "position");
            }
            this.position = position;
            return this;
        }
        @CustomType.Setter
        public Builder priorityOrder(String priorityOrder) {
            if (priorityOrder == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem", "priorityOrder");
            }
            this.priorityOrder = priorityOrder;
            return this;
        }
        @CustomType.Setter
        public Builder profile(GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItemProfile profile) {
            if (profile == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem", "profile");
            }
            this.profile = profile;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        public GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem build() {
            final var _resultValue = new GetNetworkFirewallPolicyTunnelInspectionRulesTunnelInspectionRuleSummaryCollectionItem();
            _resultValue.action = action;
            _resultValue.condition = condition;
            _resultValue.name = name;
            _resultValue.networkFirewallPolicyId = networkFirewallPolicyId;
            _resultValue.parentResourceId = parentResourceId;
            _resultValue.position = position;
            _resultValue.priorityOrder = priorityOrder;
            _resultValue.profile = profile;
            _resultValue.protocol = protocol;
            return _resultValue;
        }
    }
}
