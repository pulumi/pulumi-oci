// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkLoadBalancer;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.NetworkLoadBalancer.inputs.NetworkLoadBalancerReservedIpArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkLoadBalancerArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkLoadBalancerArgs Empty = new NetworkLoadBalancerArgs();

    /**
     * IPv6 address to be assigned to the network load balancer being created. This IP address has to be part of one of the prefixes supported by the subnet. Example: &#34;2607:9b80:9a0a:9a7e:abcd:ef01:2345:6789&#34;
     * 
     */
    @Import(name="assignedIpv6")
    private @Nullable Output<String> assignedIpv6;

    /**
     * @return IPv6 address to be assigned to the network load balancer being created. This IP address has to be part of one of the prefixes supported by the subnet. Example: &#34;2607:9b80:9a0a:9a7e:abcd:ef01:2345:6789&#34;
     * 
     */
    public Optional<Output<String>> assignedIpv6() {
        return Optional.ofNullable(this.assignedIpv6);
    }

    /**
     * Private IP address to be assigned to the network load balancer being created. This IP address has to be in the CIDR range of the subnet where network load balancer is being created Example: &#34;10.0.0.1&#34;
     * 
     */
    @Import(name="assignedPrivateIpv4")
    private @Nullable Output<String> assignedPrivateIpv4;

    /**
     * @return Private IP address to be assigned to the network load balancer being created. This IP address has to be in the CIDR range of the subnet where network load balancer is being created Example: &#34;10.0.0.1&#34;
     * 
     */
    public Optional<Output<String>> assignedPrivateIpv4() {
        return Optional.ofNullable(this.assignedPrivateIpv4);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Network load balancer identifier, which can be renamed.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) Network load balancer identifier, which can be renamed.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
     * 
     */
    @Import(name="isPreserveSourceDestination")
    private @Nullable Output<Boolean> isPreserveSourceDestination;

    /**
     * @return (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
     * 
     */
    public Optional<Output<Boolean>> isPreserveSourceDestination() {
        return Optional.ofNullable(this.isPreserveSourceDestination);
    }

    /**
     * Whether the network load balancer has a virtual cloud network-local (private) IP address.
     * 
     * If &#34;true&#34;, then the service assigns a private IP address to the network load balancer.
     * 
     * If &#34;false&#34;, then the service assigns a public IP address to the network load balancer.
     * 
     * A public network load balancer is accessible from the internet, depending on the [security list rules](https://docs.cloud.oracle.com/iaas/Content/network/Concepts/securitylists.htm) for your virtual cloud network. For more information about public and private network load balancers, see [How Network Load Balancing Works](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/overview.htm). This value is true by default.
     * 
     * Example: `true`
     * 
     */
    @Import(name="isPrivate")
    private @Nullable Output<Boolean> isPrivate;

    /**
     * @return Whether the network load balancer has a virtual cloud network-local (private) IP address.
     * 
     * If &#34;true&#34;, then the service assigns a private IP address to the network load balancer.
     * 
     * If &#34;false&#34;, then the service assigns a public IP address to the network load balancer.
     * 
     * A public network load balancer is accessible from the internet, depending on the [security list rules](https://docs.cloud.oracle.com/iaas/Content/network/Concepts/securitylists.htm) for your virtual cloud network. For more information about public and private network load balancers, see [How Network Load Balancing Works](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/overview.htm). This value is true by default.
     * 
     * Example: `true`
     * 
     */
    public Optional<Output<Boolean>> isPrivate() {
        return Optional.ofNullable(this.isPrivate);
    }

    /**
     * (Updatable) This can only be enabled when NLB is working in transparent mode with source destination header preservation enabled.  This removes the additional dependency from NLB backends(like Firewalls) to perform SNAT.
     * 
     * Example: `true`
     * Example: `true`
     * 
     */
    @Import(name="isSymmetricHashEnabled")
    private @Nullable Output<Boolean> isSymmetricHashEnabled;

    /**
     * @return (Updatable) This can only be enabled when NLB is working in transparent mode with source destination header preservation enabled.  This removes the additional dependency from NLB backends(like Firewalls) to perform SNAT.
     * 
     * Example: `true`
     * Example: `true`
     * 
     */
    public Optional<Output<Boolean>> isSymmetricHashEnabled() {
        return Optional.ofNullable(this.isSymmetricHashEnabled);
    }

    /**
     * (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
     * 
     * During the creation of the network load balancer, the service adds the new load balancer to the specified network security groups.
     * 
     * The benefits of associating the network load balancer with network security groups include:
     * *  Network security groups define network security rules to govern ingress and egress traffic for the network load balancer.
     * *  The network security rules of other resources can reference the network security groups associated with the network load balancer to ensure access.
     * 
     * Example: [&#34;ocid1.nsg.oc1.phx.unique_ID&#34;]
     * 
     */
    @Import(name="networkSecurityGroupIds")
    private @Nullable Output<List<String>> networkSecurityGroupIds;

    /**
     * @return (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
     * 
     * During the creation of the network load balancer, the service adds the new load balancer to the specified network security groups.
     * 
     * The benefits of associating the network load balancer with network security groups include:
     * *  Network security groups define network security rules to govern ingress and egress traffic for the network load balancer.
     * *  The network security rules of other resources can reference the network security groups associated with the network load balancer to ensure access.
     * 
     * Example: [&#34;ocid1.nsg.oc1.phx.unique_ID&#34;]
     * 
     */
    public Optional<Output<List<String>>> networkSecurityGroupIds() {
        return Optional.ofNullable(this.networkSecurityGroupIds);
    }

    /**
     * (Updatable) IP version associated with the NLB.
     * 
     */
    @Import(name="nlbIpVersion")
    private @Nullable Output<String> nlbIpVersion;

    /**
     * @return (Updatable) IP version associated with the NLB.
     * 
     */
    public Optional<Output<String>> nlbIpVersion() {
        return Optional.ofNullable(this.nlbIpVersion);
    }

    /**
     * An array of reserved Ips.
     * 
     */
    @Import(name="reservedIps")
    private @Nullable Output<List<NetworkLoadBalancerReservedIpArgs>> reservedIps;

    /**
     * @return An array of reserved Ips.
     * 
     */
    public Optional<Output<List<NetworkLoadBalancerReservedIpArgs>>> reservedIps() {
        return Optional.ofNullable(this.reservedIps);
    }

    /**
     * The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * IPv6 subnet prefix selection. If Ipv6 subnet prefix is passed, Nlb Ipv6 Address would be assign within the cidr block. NLB has to be dual or single stack ipv6 to support this.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="subnetIpv6cidr")
    private @Nullable Output<String> subnetIpv6cidr;

    /**
     * @return IPv6 subnet prefix selection. If Ipv6 subnet prefix is passed, Nlb Ipv6 Address would be assign within the cidr block. NLB has to be dual or single stack ipv6 to support this.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> subnetIpv6cidr() {
        return Optional.ofNullable(this.subnetIpv6cidr);
    }

    private NetworkLoadBalancerArgs() {}

    private NetworkLoadBalancerArgs(NetworkLoadBalancerArgs $) {
        this.assignedIpv6 = $.assignedIpv6;
        this.assignedPrivateIpv4 = $.assignedPrivateIpv4;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.isPreserveSourceDestination = $.isPreserveSourceDestination;
        this.isPrivate = $.isPrivate;
        this.isSymmetricHashEnabled = $.isSymmetricHashEnabled;
        this.networkSecurityGroupIds = $.networkSecurityGroupIds;
        this.nlbIpVersion = $.nlbIpVersion;
        this.reservedIps = $.reservedIps;
        this.subnetId = $.subnetId;
        this.subnetIpv6cidr = $.subnetIpv6cidr;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkLoadBalancerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkLoadBalancerArgs $;

        public Builder() {
            $ = new NetworkLoadBalancerArgs();
        }

        public Builder(NetworkLoadBalancerArgs defaults) {
            $ = new NetworkLoadBalancerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assignedIpv6 IPv6 address to be assigned to the network load balancer being created. This IP address has to be part of one of the prefixes supported by the subnet. Example: &#34;2607:9b80:9a0a:9a7e:abcd:ef01:2345:6789&#34;
         * 
         * @return builder
         * 
         */
        public Builder assignedIpv6(@Nullable Output<String> assignedIpv6) {
            $.assignedIpv6 = assignedIpv6;
            return this;
        }

        /**
         * @param assignedIpv6 IPv6 address to be assigned to the network load balancer being created. This IP address has to be part of one of the prefixes supported by the subnet. Example: &#34;2607:9b80:9a0a:9a7e:abcd:ef01:2345:6789&#34;
         * 
         * @return builder
         * 
         */
        public Builder assignedIpv6(String assignedIpv6) {
            return assignedIpv6(Output.of(assignedIpv6));
        }

        /**
         * @param assignedPrivateIpv4 Private IP address to be assigned to the network load balancer being created. This IP address has to be in the CIDR range of the subnet where network load balancer is being created Example: &#34;10.0.0.1&#34;
         * 
         * @return builder
         * 
         */
        public Builder assignedPrivateIpv4(@Nullable Output<String> assignedPrivateIpv4) {
            $.assignedPrivateIpv4 = assignedPrivateIpv4;
            return this;
        }

        /**
         * @param assignedPrivateIpv4 Private IP address to be assigned to the network load balancer being created. This IP address has to be in the CIDR range of the subnet where network load balancer is being created Example: &#34;10.0.0.1&#34;
         * 
         * @return builder
         * 
         */
        public Builder assignedPrivateIpv4(String assignedPrivateIpv4) {
            return assignedPrivateIpv4(Output.of(assignedPrivateIpv4));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the network load balancer.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Network load balancer identifier, which can be renamed.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Network load balancer identifier, which can be renamed.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isPreserveSourceDestination (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
         * 
         * @return builder
         * 
         */
        public Builder isPreserveSourceDestination(@Nullable Output<Boolean> isPreserveSourceDestination) {
            $.isPreserveSourceDestination = isPreserveSourceDestination;
            return this;
        }

        /**
         * @param isPreserveSourceDestination (Updatable) This parameter can be enabled only if backends are compute OCIDs. When enabled, the skipSourceDestinationCheck parameter is automatically enabled on the load balancer VNIC, and packets are sent to the backend with the entire IP header intact.
         * 
         * @return builder
         * 
         */
        public Builder isPreserveSourceDestination(Boolean isPreserveSourceDestination) {
            return isPreserveSourceDestination(Output.of(isPreserveSourceDestination));
        }

        /**
         * @param isPrivate Whether the network load balancer has a virtual cloud network-local (private) IP address.
         * 
         * If &#34;true&#34;, then the service assigns a private IP address to the network load balancer.
         * 
         * If &#34;false&#34;, then the service assigns a public IP address to the network load balancer.
         * 
         * A public network load balancer is accessible from the internet, depending on the [security list rules](https://docs.cloud.oracle.com/iaas/Content/network/Concepts/securitylists.htm) for your virtual cloud network. For more information about public and private network load balancers, see [How Network Load Balancing Works](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/overview.htm). This value is true by default.
         * 
         * Example: `true`
         * 
         * @return builder
         * 
         */
        public Builder isPrivate(@Nullable Output<Boolean> isPrivate) {
            $.isPrivate = isPrivate;
            return this;
        }

        /**
         * @param isPrivate Whether the network load balancer has a virtual cloud network-local (private) IP address.
         * 
         * If &#34;true&#34;, then the service assigns a private IP address to the network load balancer.
         * 
         * If &#34;false&#34;, then the service assigns a public IP address to the network load balancer.
         * 
         * A public network load balancer is accessible from the internet, depending on the [security list rules](https://docs.cloud.oracle.com/iaas/Content/network/Concepts/securitylists.htm) for your virtual cloud network. For more information about public and private network load balancers, see [How Network Load Balancing Works](https://docs.cloud.oracle.com/iaas/Content/NetworkLoadBalancer/overview.htm). This value is true by default.
         * 
         * Example: `true`
         * 
         * @return builder
         * 
         */
        public Builder isPrivate(Boolean isPrivate) {
            return isPrivate(Output.of(isPrivate));
        }

        /**
         * @param isSymmetricHashEnabled (Updatable) This can only be enabled when NLB is working in transparent mode with source destination header preservation enabled.  This removes the additional dependency from NLB backends(like Firewalls) to perform SNAT.
         * 
         * Example: `true`
         * Example: `true`
         * 
         * @return builder
         * 
         */
        public Builder isSymmetricHashEnabled(@Nullable Output<Boolean> isSymmetricHashEnabled) {
            $.isSymmetricHashEnabled = isSymmetricHashEnabled;
            return this;
        }

        /**
         * @param isSymmetricHashEnabled (Updatable) This can only be enabled when NLB is working in transparent mode with source destination header preservation enabled.  This removes the additional dependency from NLB backends(like Firewalls) to perform SNAT.
         * 
         * Example: `true`
         * Example: `true`
         * 
         * @return builder
         * 
         */
        public Builder isSymmetricHashEnabled(Boolean isSymmetricHashEnabled) {
            return isSymmetricHashEnabled(Output.of(isSymmetricHashEnabled));
        }

        /**
         * @param networkSecurityGroupIds (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
         * 
         * During the creation of the network load balancer, the service adds the new load balancer to the specified network security groups.
         * 
         * The benefits of associating the network load balancer with network security groups include:
         * *  Network security groups define network security rules to govern ingress and egress traffic for the network load balancer.
         * *  The network security rules of other resources can reference the network security groups associated with the network load balancer to ensure access.
         * 
         * Example: [&#34;ocid1.nsg.oc1.phx.unique_ID&#34;]
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(@Nullable Output<List<String>> networkSecurityGroupIds) {
            $.networkSecurityGroupIds = networkSecurityGroupIds;
            return this;
        }

        /**
         * @param networkSecurityGroupIds (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
         * 
         * During the creation of the network load balancer, the service adds the new load balancer to the specified network security groups.
         * 
         * The benefits of associating the network load balancer with network security groups include:
         * *  Network security groups define network security rules to govern ingress and egress traffic for the network load balancer.
         * *  The network security rules of other resources can reference the network security groups associated with the network load balancer to ensure access.
         * 
         * Example: [&#34;ocid1.nsg.oc1.phx.unique_ID&#34;]
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(List<String> networkSecurityGroupIds) {
            return networkSecurityGroupIds(Output.of(networkSecurityGroupIds));
        }

        /**
         * @param networkSecurityGroupIds (Updatable) An array of network security groups [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) associated with the network load balancer.
         * 
         * During the creation of the network load balancer, the service adds the new load balancer to the specified network security groups.
         * 
         * The benefits of associating the network load balancer with network security groups include:
         * *  Network security groups define network security rules to govern ingress and egress traffic for the network load balancer.
         * *  The network security rules of other resources can reference the network security groups associated with the network load balancer to ensure access.
         * 
         * Example: [&#34;ocid1.nsg.oc1.phx.unique_ID&#34;]
         * 
         * @return builder
         * 
         */
        public Builder networkSecurityGroupIds(String... networkSecurityGroupIds) {
            return networkSecurityGroupIds(List.of(networkSecurityGroupIds));
        }

        /**
         * @param nlbIpVersion (Updatable) IP version associated with the NLB.
         * 
         * @return builder
         * 
         */
        public Builder nlbIpVersion(@Nullable Output<String> nlbIpVersion) {
            $.nlbIpVersion = nlbIpVersion;
            return this;
        }

        /**
         * @param nlbIpVersion (Updatable) IP version associated with the NLB.
         * 
         * @return builder
         * 
         */
        public Builder nlbIpVersion(String nlbIpVersion) {
            return nlbIpVersion(Output.of(nlbIpVersion));
        }

        /**
         * @param reservedIps An array of reserved Ips.
         * 
         * @return builder
         * 
         */
        public Builder reservedIps(@Nullable Output<List<NetworkLoadBalancerReservedIpArgs>> reservedIps) {
            $.reservedIps = reservedIps;
            return this;
        }

        /**
         * @param reservedIps An array of reserved Ips.
         * 
         * @return builder
         * 
         */
        public Builder reservedIps(List<NetworkLoadBalancerReservedIpArgs> reservedIps) {
            return reservedIps(Output.of(reservedIps));
        }

        /**
         * @param reservedIps An array of reserved Ips.
         * 
         * @return builder
         * 
         */
        public Builder reservedIps(NetworkLoadBalancerReservedIpArgs... reservedIps) {
            return reservedIps(List.of(reservedIps));
        }

        /**
         * @param subnetId The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The subnet in which the network load balancer is spawned [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param subnetIpv6cidr IPv6 subnet prefix selection. If Ipv6 subnet prefix is passed, Nlb Ipv6 Address would be assign within the cidr block. NLB has to be dual or single stack ipv6 to support this.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder subnetIpv6cidr(@Nullable Output<String> subnetIpv6cidr) {
            $.subnetIpv6cidr = subnetIpv6cidr;
            return this;
        }

        /**
         * @param subnetIpv6cidr IPv6 subnet prefix selection. If Ipv6 subnet prefix is passed, Nlb Ipv6 Address would be assign within the cidr block. NLB has to be dual or single stack ipv6 to support this.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder subnetIpv6cidr(String subnetIpv6cidr) {
            return subnetIpv6cidr(Output.of(subnetIpv6cidr));
        }

        public NetworkLoadBalancerArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("NetworkLoadBalancerArgs", "compartmentId");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("NetworkLoadBalancerArgs", "displayName");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("NetworkLoadBalancerArgs", "subnetId");
            }
            return $;
        }
    }

}
