// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkLoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.NetworkLoadBalancer.outputs.GetBackendHealthHealthCheckResult;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBackendHealthResult {
    private String backendName;
    private String backendSetName;
    /**
     * @return A list of the most recent health check results returned for the specified backend server.
     * 
     */
    private @Nullable List<GetBackendHealthHealthCheckResult> healthCheckResults;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    private String networkLoadBalancerId;
    /**
     * @return The general health status of the specified backend server.
     * *   **OK:**  All health check probes return `OK`
     * *   **WARNING:** At least one of the health check probes does not return `OK`
     * *   **CRITICAL:** None of the health check probes return `OK`. *
     * *   **UNKNOWN:** One of the health checks probes return `UNKNOWN`,
     * *   or the system is unable to retrieve metrics at this time.
     * 
     */
    private @Nullable String status;

    private GetBackendHealthResult() {}
    public String backendName() {
        return this.backendName;
    }
    public String backendSetName() {
        return this.backendSetName;
    }
    /**
     * @return A list of the most recent health check results returned for the specified backend server.
     * 
     */
    public List<GetBackendHealthHealthCheckResult> healthCheckResults() {
        return this.healthCheckResults == null ? List.of() : this.healthCheckResults;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String networkLoadBalancerId() {
        return this.networkLoadBalancerId;
    }
    /**
     * @return The general health status of the specified backend server.
     * *   **OK:**  All health check probes return `OK`
     * *   **WARNING:** At least one of the health check probes does not return `OK`
     * *   **CRITICAL:** None of the health check probes return `OK`. *
     * *   **UNKNOWN:** One of the health checks probes return `UNKNOWN`,
     * *   or the system is unable to retrieve metrics at this time.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendHealthResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backendName;
        private String backendSetName;
        private @Nullable List<GetBackendHealthHealthCheckResult> healthCheckResults;
        private @Nullable String id;
        private String networkLoadBalancerId;
        private @Nullable String status;
        public Builder() {}
        public Builder(GetBackendHealthResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendName = defaults.backendName;
    	      this.backendSetName = defaults.backendSetName;
    	      this.healthCheckResults = defaults.healthCheckResults;
    	      this.id = defaults.id;
    	      this.networkLoadBalancerId = defaults.networkLoadBalancerId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder backendName(String backendName) {
            this.backendName = Objects.requireNonNull(backendName);
            return this;
        }
        @CustomType.Setter
        public Builder backendSetName(String backendSetName) {
            this.backendSetName = Objects.requireNonNull(backendSetName);
            return this;
        }
        @CustomType.Setter
        public Builder healthCheckResults(@Nullable List<GetBackendHealthHealthCheckResult> healthCheckResults) {
            this.healthCheckResults = healthCheckResults;
            return this;
        }
        public Builder healthCheckResults(GetBackendHealthHealthCheckResult... healthCheckResults) {
            return healthCheckResults(List.of(healthCheckResults));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder networkLoadBalancerId(String networkLoadBalancerId) {
            this.networkLoadBalancerId = Objects.requireNonNull(networkLoadBalancerId);
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public GetBackendHealthResult build() {
            final var o = new GetBackendHealthResult();
            o.backendName = backendName;
            o.backendSetName = backendSetName;
            o.healthCheckResults = healthCheckResults;
            o.id = id;
            o.networkLoadBalancerId = networkLoadBalancerId;
            o.status = status;
            return o;
        }
    }
}
