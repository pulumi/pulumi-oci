// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkLoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.NetworkLoadBalancer.outputs.GetBackendSetBackend;
import com.pulumi.oci.NetworkLoadBalancer.outputs.GetBackendSetHealthChecker;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBackendSetResult {
    private String backendSetName;
    /**
     * @return Array of backends.
     * 
     */
    private @Nullable List<GetBackendSetBackend> backends;
    /**
     * @return The health check policy configuration. For more information, see [Editing Health Check Policies](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/editinghealthcheck.htm).
     * 
     */
    private @Nullable List<GetBackendSetHealthChecker> healthCheckers;
    private @Nullable String id;
    /**
     * @return IP version associated with the backend set.
     * 
     */
    private @Nullable String ipVersion;
    /**
     * @return If this parameter is enabled, then the network load balancer preserves the source IP of the packet when it is forwarded to backends. Backends see the original source IP. If the isPreserveSourceDestination parameter is enabled for the network load balancer resource, then this parameter cannot be disabled. The value is true by default.
     * 
     */
    private @Nullable Boolean isPreserveSource;
    /**
     * @return A user-friendly name for the backend set that must be unique and cannot be changed.
     * 
     */
    private @Nullable String name;
    private String networkLoadBalancerId;
    /**
     * @return The network load balancer policy for the backend set.  Example: `FIVE_TUPLE`
     * 
     */
    private @Nullable String policy;

    private GetBackendSetResult() {}
    public String backendSetName() {
        return this.backendSetName;
    }
    /**
     * @return Array of backends.
     * 
     */
    public List<GetBackendSetBackend> backends() {
        return this.backends == null ? List.of() : this.backends;
    }
    /**
     * @return The health check policy configuration. For more information, see [Editing Health Check Policies](https://docs.cloud.oracle.com/iaas/Content/Balance/Tasks/editinghealthcheck.htm).
     * 
     */
    public List<GetBackendSetHealthChecker> healthCheckers() {
        return this.healthCheckers == null ? List.of() : this.healthCheckers;
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return IP version associated with the backend set.
     * 
     */
    public Optional<String> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }
    /**
     * @return If this parameter is enabled, then the network load balancer preserves the source IP of the packet when it is forwarded to backends. Backends see the original source IP. If the isPreserveSourceDestination parameter is enabled for the network load balancer resource, then this parameter cannot be disabled. The value is true by default.
     * 
     */
    public Optional<Boolean> isPreserveSource() {
        return Optional.ofNullable(this.isPreserveSource);
    }
    /**
     * @return A user-friendly name for the backend set that must be unique and cannot be changed.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String networkLoadBalancerId() {
        return this.networkLoadBalancerId;
    }
    /**
     * @return The network load balancer policy for the backend set.  Example: `FIVE_TUPLE`
     * 
     */
    public Optional<String> policy() {
        return Optional.ofNullable(this.policy);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendSetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backendSetName;
        private @Nullable List<GetBackendSetBackend> backends;
        private @Nullable List<GetBackendSetHealthChecker> healthCheckers;
        private @Nullable String id;
        private @Nullable String ipVersion;
        private @Nullable Boolean isPreserveSource;
        private @Nullable String name;
        private String networkLoadBalancerId;
        private @Nullable String policy;
        public Builder() {}
        public Builder(GetBackendSetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendSetName = defaults.backendSetName;
    	      this.backends = defaults.backends;
    	      this.healthCheckers = defaults.healthCheckers;
    	      this.id = defaults.id;
    	      this.ipVersion = defaults.ipVersion;
    	      this.isPreserveSource = defaults.isPreserveSource;
    	      this.name = defaults.name;
    	      this.networkLoadBalancerId = defaults.networkLoadBalancerId;
    	      this.policy = defaults.policy;
        }

        @CustomType.Setter
        public Builder backendSetName(String backendSetName) {
            this.backendSetName = Objects.requireNonNull(backendSetName);
            return this;
        }
        @CustomType.Setter
        public Builder backends(@Nullable List<GetBackendSetBackend> backends) {
            this.backends = backends;
            return this;
        }
        public Builder backends(GetBackendSetBackend... backends) {
            return backends(List.of(backends));
        }
        @CustomType.Setter
        public Builder healthCheckers(@Nullable List<GetBackendSetHealthChecker> healthCheckers) {
            this.healthCheckers = healthCheckers;
            return this;
        }
        public Builder healthCheckers(GetBackendSetHealthChecker... healthCheckers) {
            return healthCheckers(List.of(healthCheckers));
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipVersion(@Nullable String ipVersion) {
            this.ipVersion = ipVersion;
            return this;
        }
        @CustomType.Setter
        public Builder isPreserveSource(@Nullable Boolean isPreserveSource) {
            this.isPreserveSource = isPreserveSource;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkLoadBalancerId(String networkLoadBalancerId) {
            this.networkLoadBalancerId = Objects.requireNonNull(networkLoadBalancerId);
            return this;
        }
        @CustomType.Setter
        public Builder policy(@Nullable String policy) {
            this.policy = policy;
            return this;
        }
        public GetBackendSetResult build() {
            final var o = new GetBackendSetResult();
            o.backendSetName = backendSetName;
            o.backends = backends;
            o.healthCheckers = healthCheckers;
            o.id = id;
            o.ipVersion = ipVersion;
            o.isPreserveSource = isPreserveSource;
            o.name = name;
            o.networkLoadBalancerId = networkLoadBalancerId;
            o.policy = policy;
            return o;
        }
    }
}
