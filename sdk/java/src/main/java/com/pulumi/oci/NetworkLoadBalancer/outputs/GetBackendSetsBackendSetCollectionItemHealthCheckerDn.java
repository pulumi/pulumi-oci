// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkLoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBackendSetsBackendSetCollectionItemHealthCheckerDn {
    /**
     * @return The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
     * 
     */
    private String domainName;
    /**
     * @return The class the dns health check query to use; either IN or CH.  Example: `IN`
     * 
     */
    private String queryClass;
    /**
     * @return The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
     * 
     */
    private String queryType;
    /**
     * @return An array that represents accepetable RCODE values for DNS query response. Example: [&#34;NOERROR&#34;, &#34;NXDOMAIN&#34;]
     * 
     */
    private List<String> rcodes;
    /**
     * @return DNS transport protocol; either UDP or TCP.  Example: `UDP`
     * 
     */
    private String transportProtocol;

    private GetBackendSetsBackendSetCollectionItemHealthCheckerDn() {}
    /**
     * @return The absolute fully-qualified domain name to perform periodic DNS queries. If not provided, an extra dot will be added at the end of a domain name during the query.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return The class the dns health check query to use; either IN or CH.  Example: `IN`
     * 
     */
    public String queryClass() {
        return this.queryClass;
    }
    /**
     * @return The type the dns health check query to use; A, AAAA, TXT.  Example: `A`
     * 
     */
    public String queryType() {
        return this.queryType;
    }
    /**
     * @return An array that represents accepetable RCODE values for DNS query response. Example: [&#34;NOERROR&#34;, &#34;NXDOMAIN&#34;]
     * 
     */
    public List<String> rcodes() {
        return this.rcodes;
    }
    /**
     * @return DNS transport protocol; either UDP or TCP.  Example: `UDP`
     * 
     */
    public String transportProtocol() {
        return this.transportProtocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendSetsBackendSetCollectionItemHealthCheckerDn defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String domainName;
        private String queryClass;
        private String queryType;
        private List<String> rcodes;
        private String transportProtocol;
        public Builder() {}
        public Builder(GetBackendSetsBackendSetCollectionItemHealthCheckerDn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domainName = defaults.domainName;
    	      this.queryClass = defaults.queryClass;
    	      this.queryType = defaults.queryType;
    	      this.rcodes = defaults.rcodes;
    	      this.transportProtocol = defaults.transportProtocol;
        }

        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("GetBackendSetsBackendSetCollectionItemHealthCheckerDn", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder queryClass(String queryClass) {
            if (queryClass == null) {
              throw new MissingRequiredPropertyException("GetBackendSetsBackendSetCollectionItemHealthCheckerDn", "queryClass");
            }
            this.queryClass = queryClass;
            return this;
        }
        @CustomType.Setter
        public Builder queryType(String queryType) {
            if (queryType == null) {
              throw new MissingRequiredPropertyException("GetBackendSetsBackendSetCollectionItemHealthCheckerDn", "queryType");
            }
            this.queryType = queryType;
            return this;
        }
        @CustomType.Setter
        public Builder rcodes(List<String> rcodes) {
            if (rcodes == null) {
              throw new MissingRequiredPropertyException("GetBackendSetsBackendSetCollectionItemHealthCheckerDn", "rcodes");
            }
            this.rcodes = rcodes;
            return this;
        }
        public Builder rcodes(String... rcodes) {
            return rcodes(List.of(rcodes));
        }
        @CustomType.Setter
        public Builder transportProtocol(String transportProtocol) {
            if (transportProtocol == null) {
              throw new MissingRequiredPropertyException("GetBackendSetsBackendSetCollectionItemHealthCheckerDn", "transportProtocol");
            }
            this.transportProtocol = transportProtocol;
            return this;
        }
        public GetBackendSetsBackendSetCollectionItemHealthCheckerDn build() {
            final var _resultValue = new GetBackendSetsBackendSetCollectionItemHealthCheckerDn();
            _resultValue.domainName = domainName;
            _resultValue.queryClass = queryClass;
            _resultValue.queryType = queryType;
            _resultValue.rcodes = rcodes;
            _resultValue.transportProtocol = transportProtocol;
            return _resultValue;
        }
    }
}
