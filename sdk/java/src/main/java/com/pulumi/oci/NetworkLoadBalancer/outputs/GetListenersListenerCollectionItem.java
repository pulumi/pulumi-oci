// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkLoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetListenersListenerCollectionItem {
    /**
     * @return The name of the associated backend set.  Example: `example_backend_set`
     * 
     */
    private @Nullable String defaultBackendSetName;
    private @Nullable String id;
    /**
     * @return IP version associated with the listener.
     * 
     */
    private @Nullable String ipVersion;
    /**
     * @return A friendly name for the listener. It must be unique and it cannot be changed.  Example: `example_listener`
     * 
     */
    private @Nullable String name;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     * 
     */
    private @Nullable String networkLoadBalancerId;
    /**
     * @return The communication port for the listener.  Example: `80`
     * 
     */
    private @Nullable Integer port;
    /**
     * @return The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). To get a list of valid protocols, use the [ListNetworkLoadBalancersProtocols](https://docs.cloud.oracle.com/iaas/api/#/en/NetworkLoadBalancer/20200501/networkLoadBalancerProtocol/ListNetworkLoadBalancersProtocols) operation.  Example: `TCP`
     * 
     */
    private @Nullable String protocol;

    private GetListenersListenerCollectionItem() {}
    /**
     * @return The name of the associated backend set.  Example: `example_backend_set`
     * 
     */
    public Optional<String> defaultBackendSetName() {
        return Optional.ofNullable(this.defaultBackendSetName);
    }
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return IP version associated with the listener.
     * 
     */
    public Optional<String> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }
    /**
     * @return A friendly name for the listener. It must be unique and it cannot be changed.  Example: `example_listener`
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network load balancer to update.
     * 
     */
    public Optional<String> networkLoadBalancerId() {
        return Optional.ofNullable(this.networkLoadBalancerId);
    }
    /**
     * @return The communication port for the listener.  Example: `80`
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return The protocol on which the listener accepts connection requests. For public network load balancers, ANY protocol refers to TCP/UDP. For private network load balancers, ANY protocol refers to TCP/UDP/ICMP (note that ICMP requires isPreserveSourceDestination to be set to true). To get a list of valid protocols, use the [ListNetworkLoadBalancersProtocols](https://docs.cloud.oracle.com/iaas/api/#/en/NetworkLoadBalancer/20200501/networkLoadBalancerProtocol/ListNetworkLoadBalancersProtocols) operation.  Example: `TCP`
     * 
     */
    public Optional<String> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenersListenerCollectionItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String defaultBackendSetName;
        private @Nullable String id;
        private @Nullable String ipVersion;
        private @Nullable String name;
        private @Nullable String networkLoadBalancerId;
        private @Nullable Integer port;
        private @Nullable String protocol;
        public Builder() {}
        public Builder(GetListenersListenerCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultBackendSetName = defaults.defaultBackendSetName;
    	      this.id = defaults.id;
    	      this.ipVersion = defaults.ipVersion;
    	      this.name = defaults.name;
    	      this.networkLoadBalancerId = defaults.networkLoadBalancerId;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder defaultBackendSetName(@Nullable String defaultBackendSetName) {
            this.defaultBackendSetName = defaultBackendSetName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipVersion(@Nullable String ipVersion) {
            this.ipVersion = ipVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkLoadBalancerId(@Nullable String networkLoadBalancerId) {
            this.networkLoadBalancerId = networkLoadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(@Nullable String protocol) {
            this.protocol = protocol;
            return this;
        }
        public GetListenersListenerCollectionItem build() {
            final var o = new GetListenersListenerCollectionItem();
            o.defaultBackendSetName = defaultBackendSetName;
            o.id = id;
            o.ipVersion = ipVersion;
            o.name = name;
            o.networkLoadBalancerId = networkLoadBalancerId;
            o.port = port;
            o.protocol = protocol;
            return o;
        }
    }
}
