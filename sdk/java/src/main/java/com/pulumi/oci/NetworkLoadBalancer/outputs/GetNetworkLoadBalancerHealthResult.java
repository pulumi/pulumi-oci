// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkLoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkLoadBalancerHealthResult {
    /**
     * @return A list of backend sets that are currently in the `CRITICAL` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `example_backend_set`
     * 
     */
    private List<String> criticalStateBackendSetNames;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String networkLoadBalancerId;
    /**
     * @return The overall health status of the network load balancer.
     * * **OK:** All backend sets associated with the network load balancer return a status of `OK`.
     * * **WARNING:** At least one of the backend sets associated with the network load balancer returns a status of `WARNING`, no backend sets return a status of `CRITICAL`, and the network load balancer life cycle state is `ACTIVE`.
     * * **CRITICAL:** One or more of the backend sets associated with the network load balancer return a status of `CRITICAL`.
     * * **UNKNOWN:** If any one of the following conditions is true:
     * * The network load balancer life cycle state is not `ACTIVE`.
     * * No backend sets are defined for the network load balancer.
     * * More than half of the backend sets associated with the network load balancer return a status of `UNKNOWN`, none of the backend sets return a status of `WARNING` or `CRITICAL`, and the network load balancer life cycle state is `ACTIVE`.
     * * The system could not retrieve metrics for any reason.
     * 
     */
    private String status;
    /**
     * @return The total number of backend sets associated with this network load balancer.  Example: `4`
     * 
     */
    private Integer totalBackendSetCount;
    /**
     * @return A list of backend sets that are currently in the `UNKNOWN` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `example_backend_set2`
     * 
     */
    private List<String> unknownStateBackendSetNames;
    /**
     * @return A list of backend sets that are currently in the `WARNING` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `example_backend_set3`
     * 
     */
    private List<String> warningStateBackendSetNames;

    private GetNetworkLoadBalancerHealthResult() {}
    /**
     * @return A list of backend sets that are currently in the `CRITICAL` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `example_backend_set`
     * 
     */
    public List<String> criticalStateBackendSetNames() {
        return this.criticalStateBackendSetNames;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String networkLoadBalancerId() {
        return this.networkLoadBalancerId;
    }
    /**
     * @return The overall health status of the network load balancer.
     * * **OK:** All backend sets associated with the network load balancer return a status of `OK`.
     * * **WARNING:** At least one of the backend sets associated with the network load balancer returns a status of `WARNING`, no backend sets return a status of `CRITICAL`, and the network load balancer life cycle state is `ACTIVE`.
     * * **CRITICAL:** One or more of the backend sets associated with the network load balancer return a status of `CRITICAL`.
     * * **UNKNOWN:** If any one of the following conditions is true:
     * * The network load balancer life cycle state is not `ACTIVE`.
     * * No backend sets are defined for the network load balancer.
     * * More than half of the backend sets associated with the network load balancer return a status of `UNKNOWN`, none of the backend sets return a status of `WARNING` or `CRITICAL`, and the network load balancer life cycle state is `ACTIVE`.
     * * The system could not retrieve metrics for any reason.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The total number of backend sets associated with this network load balancer.  Example: `4`
     * 
     */
    public Integer totalBackendSetCount() {
        return this.totalBackendSetCount;
    }
    /**
     * @return A list of backend sets that are currently in the `UNKNOWN` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `example_backend_set2`
     * 
     */
    public List<String> unknownStateBackendSetNames() {
        return this.unknownStateBackendSetNames;
    }
    /**
     * @return A list of backend sets that are currently in the `WARNING` health state. The list identifies each backend set by the user-friendly name you assigned when you created the backend set.  Example: `example_backend_set3`
     * 
     */
    public List<String> warningStateBackendSetNames() {
        return this.warningStateBackendSetNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkLoadBalancerHealthResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> criticalStateBackendSetNames;
        private String id;
        private String networkLoadBalancerId;
        private String status;
        private Integer totalBackendSetCount;
        private List<String> unknownStateBackendSetNames;
        private List<String> warningStateBackendSetNames;
        public Builder() {}
        public Builder(GetNetworkLoadBalancerHealthResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.criticalStateBackendSetNames = defaults.criticalStateBackendSetNames;
    	      this.id = defaults.id;
    	      this.networkLoadBalancerId = defaults.networkLoadBalancerId;
    	      this.status = defaults.status;
    	      this.totalBackendSetCount = defaults.totalBackendSetCount;
    	      this.unknownStateBackendSetNames = defaults.unknownStateBackendSetNames;
    	      this.warningStateBackendSetNames = defaults.warningStateBackendSetNames;
        }

        @CustomType.Setter
        public Builder criticalStateBackendSetNames(List<String> criticalStateBackendSetNames) {
            if (criticalStateBackendSetNames == null) {
              throw new MissingRequiredPropertyException("GetNetworkLoadBalancerHealthResult", "criticalStateBackendSetNames");
            }
            this.criticalStateBackendSetNames = criticalStateBackendSetNames;
            return this;
        }
        public Builder criticalStateBackendSetNames(String... criticalStateBackendSetNames) {
            return criticalStateBackendSetNames(List.of(criticalStateBackendSetNames));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNetworkLoadBalancerHealthResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder networkLoadBalancerId(String networkLoadBalancerId) {
            if (networkLoadBalancerId == null) {
              throw new MissingRequiredPropertyException("GetNetworkLoadBalancerHealthResult", "networkLoadBalancerId");
            }
            this.networkLoadBalancerId = networkLoadBalancerId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetNetworkLoadBalancerHealthResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder totalBackendSetCount(Integer totalBackendSetCount) {
            if (totalBackendSetCount == null) {
              throw new MissingRequiredPropertyException("GetNetworkLoadBalancerHealthResult", "totalBackendSetCount");
            }
            this.totalBackendSetCount = totalBackendSetCount;
            return this;
        }
        @CustomType.Setter
        public Builder unknownStateBackendSetNames(List<String> unknownStateBackendSetNames) {
            if (unknownStateBackendSetNames == null) {
              throw new MissingRequiredPropertyException("GetNetworkLoadBalancerHealthResult", "unknownStateBackendSetNames");
            }
            this.unknownStateBackendSetNames = unknownStateBackendSetNames;
            return this;
        }
        public Builder unknownStateBackendSetNames(String... unknownStateBackendSetNames) {
            return unknownStateBackendSetNames(List.of(unknownStateBackendSetNames));
        }
        @CustomType.Setter
        public Builder warningStateBackendSetNames(List<String> warningStateBackendSetNames) {
            if (warningStateBackendSetNames == null) {
              throw new MissingRequiredPropertyException("GetNetworkLoadBalancerHealthResult", "warningStateBackendSetNames");
            }
            this.warningStateBackendSetNames = warningStateBackendSetNames;
            return this;
        }
        public Builder warningStateBackendSetNames(String... warningStateBackendSetNames) {
            return warningStateBackendSetNames(List.of(warningStateBackendSetNames));
        }
        public GetNetworkLoadBalancerHealthResult build() {
            final var _resultValue = new GetNetworkLoadBalancerHealthResult();
            _resultValue.criticalStateBackendSetNames = criticalStateBackendSetNames;
            _resultValue.id = id;
            _resultValue.networkLoadBalancerId = networkLoadBalancerId;
            _resultValue.status = status;
            _resultValue.totalBackendSetCount = totalBackendSetCount;
            _resultValue.unknownStateBackendSetNames = unknownStateBackendSetNames;
            _resultValue.warningStateBackendSetNames = warningStateBackendSetNames;
            return _resultValue;
        }
    }
}
