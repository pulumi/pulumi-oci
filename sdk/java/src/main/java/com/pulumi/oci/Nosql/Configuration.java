// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Nosql.ConfigurationArgs;
import com.pulumi.oci.Nosql.inputs.ConfigurationState;
import com.pulumi.oci.Nosql.outputs.ConfigurationKmsKey;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource provides the Configuration in Oracle Cloud Infrastructure NoSQL Database service.
 * 
 * Updates the service-level configuration.  The discriminator value
 * `UpdateConfigurationDetails.environment` must match the service&#39;s
 * environment type.
 * 
 * A configuration serves as a centralized repository for global parameters that
 * affect the NoSQL service. Currently, there is only one such parameter: a
 * customer-provided key for encrypting NoSQL data at rest.
 * 
 * The Customer-Managed Encryption Keys (CMEK) feature is exclusively available
 * in private NoSQL environments dedicated to a single tenancy, where the CMEK
 * option has been enabled. Updating the configuration of the default, regional,
 * multi-tenancy NoSQL service is not supported.
 * 
 * To specify the dedicated environment, set the environment variable
 * CLIENT_HOST_OVERRIDES=oci_nosql.NosqlClient=$ENDPOINT
 * Where $ENDPOINT is the endpoint of the dedicated NoSQL environment.
 * For example:
 * $ export CLIENT_HOST_OVERRIDES=oci_nosql.NosqlClient=https://acme-widgets.nosql.oci.oraclecloud.com
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.Nosql.Configuration;
 * import com.pulumi.oci.Nosql.ConfigurationArgs;
 * import com.pulumi.oci.Nosql.inputs.ConfigurationKmsKeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testConfiguration = new Configuration("testConfiguration", ConfigurationArgs.builder()
 *             .compartmentId(compartmentId)
 *             .environment("HOSTED")
 *             .isOpcDryRun(configurationIsOpcDryRun)
 *             .kmsKey(ConfigurationKmsKeyArgs.builder()
 *                 .id(configurationKmsKeyId)
 *                 .kmsVaultId(testVault.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Configurations can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:Nosql/configuration:Configuration test_configuration &#34;configuration/compartmentId/{compartmentId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Nosql/configuration:Configuration")
public class Configuration extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The tenancy&#39;s OCID
     * 
     */
    @Export(name="compartmentId", refs={String.class}, tree="[0]")
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The tenancy&#39;s OCID
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) The service environment type.
     * 
     */
    @Export(name="environment", refs={String.class}, tree="[0]")
    private Output<String> environment;

    /**
     * @return (Updatable) The service environment type.
     * 
     */
    public Output<String> environment() {
        return this.environment;
    }
    /**
     * (Updatable) If true, indicates that the request is a dry run. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     * 
     */
    @Export(name="isOpcDryRun", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isOpcDryRun;

    /**
     * @return (Updatable) If true, indicates that the request is a dry run. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     * 
     */
    public Output<Boolean> isOpcDryRun() {
        return this.isOpcDryRun;
    }
    /**
     * (Updatable) Information about the state of the service&#39;s encryption key management. The following properties are read-only and ignored when this object is used in UpdateConfiguration: kmsKeyState, timeCreated, timeUpdated.
     * 
     */
    @Export(name="kmsKey", refs={ConfigurationKmsKey.class}, tree="[0]")
    private Output<ConfigurationKmsKey> kmsKey;

    /**
     * @return (Updatable) Information about the state of the service&#39;s encryption key management. The following properties are read-only and ignored when this object is used in UpdateConfiguration: kmsKeyState, timeCreated, timeUpdated.
     * 
     */
    public Output<ConfigurationKmsKey> kmsKey() {
        return this.kmsKey;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Configuration(java.lang.String name) {
        this(name, ConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Configuration(java.lang.String name, ConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Configuration(java.lang.String name, ConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Nosql/configuration:Configuration", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Configuration(java.lang.String name, Output<java.lang.String> id, @Nullable ConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Nosql/configuration:Configuration", name, state, makeResourceOptions(options, id), false);
    }

    private static ConfigurationArgs makeArgs(ConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ConfigurationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Configuration get(java.lang.String name, Output<java.lang.String> id, @Nullable ConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Configuration(name, id, state, options);
    }
}
