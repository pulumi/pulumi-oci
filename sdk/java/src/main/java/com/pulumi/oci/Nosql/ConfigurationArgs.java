// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Nosql.inputs.ConfigurationKmsKeyArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationArgs Empty = new ConfigurationArgs();

    /**
     * (Updatable) The tenancy&#39;s OCID
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The tenancy&#39;s OCID
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) The service environment type.
     * 
     */
    @Import(name="environment", required=true)
    private Output<String> environment;

    /**
     * @return (Updatable) The service environment type.
     * 
     */
    public Output<String> environment() {
        return this.environment;
    }

    /**
     * (Updatable) If true, indicates that the request is a dry run. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     * 
     */
    @Import(name="isOpcDryRun")
    private @Nullable Output<Boolean> isOpcDryRun;

    /**
     * @return (Updatable) If true, indicates that the request is a dry run. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
     * 
     */
    public Optional<Output<Boolean>> isOpcDryRun() {
        return Optional.ofNullable(this.isOpcDryRun);
    }

    /**
     * (Updatable) Information about the state of the service&#39;s encryption key management. The following properties are read-only and ignored when this object is used in UpdateConfiguration: kmsKeyState, timeCreated, timeUpdated.
     * 
     */
    @Import(name="kmsKey")
    private @Nullable Output<ConfigurationKmsKeyArgs> kmsKey;

    /**
     * @return (Updatable) Information about the state of the service&#39;s encryption key management. The following properties are read-only and ignored when this object is used in UpdateConfiguration: kmsKeyState, timeCreated, timeUpdated.
     * 
     */
    public Optional<Output<ConfigurationKmsKeyArgs>> kmsKey() {
        return Optional.ofNullable(this.kmsKey);
    }

    private ConfigurationArgs() {}

    private ConfigurationArgs(ConfigurationArgs $) {
        this.compartmentId = $.compartmentId;
        this.environment = $.environment;
        this.isOpcDryRun = $.isOpcDryRun;
        this.kmsKey = $.kmsKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationArgs $;

        public Builder() {
            $ = new ConfigurationArgs();
        }

        public Builder(ConfigurationArgs defaults) {
            $ = new ConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The tenancy&#39;s OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The tenancy&#39;s OCID
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param environment (Updatable) The service environment type.
         * 
         * @return builder
         * 
         */
        public Builder environment(Output<String> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment (Updatable) The service environment type.
         * 
         * @return builder
         * 
         */
        public Builder environment(String environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param isOpcDryRun (Updatable) If true, indicates that the request is a dry run. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
         * 
         * @return builder
         * 
         */
        public Builder isOpcDryRun(@Nullable Output<Boolean> isOpcDryRun) {
            $.isOpcDryRun = isOpcDryRun;
            return this;
        }

        /**
         * @param isOpcDryRun (Updatable) If true, indicates that the request is a dry run. A dry run request does not modify the configuration item details and is used only to perform validation on the submitted data.
         * 
         * @return builder
         * 
         */
        public Builder isOpcDryRun(Boolean isOpcDryRun) {
            return isOpcDryRun(Output.of(isOpcDryRun));
        }

        /**
         * @param kmsKey (Updatable) Information about the state of the service&#39;s encryption key management. The following properties are read-only and ignored when this object is used in UpdateConfiguration: kmsKeyState, timeCreated, timeUpdated.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(@Nullable Output<ConfigurationKmsKeyArgs> kmsKey) {
            $.kmsKey = kmsKey;
            return this;
        }

        /**
         * @param kmsKey (Updatable) Information about the state of the service&#39;s encryption key management. The following properties are read-only and ignored when this object is used in UpdateConfiguration: kmsKeyState, timeCreated, timeUpdated.
         * 
         * @return builder
         * 
         */
        public Builder kmsKey(ConfigurationKmsKeyArgs kmsKey) {
            return kmsKey(Output.of(kmsKey));
        }

        public ConfigurationArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("ConfigurationArgs", "compartmentId");
            }
            if ($.environment == null) {
                throw new MissingRequiredPropertyException("ConfigurationArgs", "environment");
            }
            return $;
        }
    }

}
