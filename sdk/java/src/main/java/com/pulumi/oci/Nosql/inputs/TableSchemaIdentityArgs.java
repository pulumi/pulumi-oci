// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableSchemaIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableSchemaIdentityArgs Empty = new TableSchemaIdentityArgs();

    /**
     * The name of the identity column.
     * 
     */
    @Import(name="columnName")
    private @Nullable Output<String> columnName;

    /**
     * @return The name of the identity column.
     * 
     */
    public Optional<Output<String>> columnName() {
        return Optional.ofNullable(this.columnName);
    }

    /**
     * True if the identity value is GENERATED ALWAYS.
     * 
     */
    @Import(name="isAlways")
    private @Nullable Output<Boolean> isAlways;

    /**
     * @return True if the identity value is GENERATED ALWAYS.
     * 
     */
    public Optional<Output<Boolean>> isAlways() {
        return Optional.ofNullable(this.isAlways);
    }

    /**
     * True if the identity value is GENERATED BY DEFAULT ON NULL.
     * 
     */
    @Import(name="isNull")
    private @Nullable Output<Boolean> isNull;

    /**
     * @return True if the identity value is GENERATED BY DEFAULT ON NULL.
     * 
     */
    public Optional<Output<Boolean>> isNull() {
        return Optional.ofNullable(this.isNull);
    }

    private TableSchemaIdentityArgs() {}

    private TableSchemaIdentityArgs(TableSchemaIdentityArgs $) {
        this.columnName = $.columnName;
        this.isAlways = $.isAlways;
        this.isNull = $.isNull;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableSchemaIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableSchemaIdentityArgs $;

        public Builder() {
            $ = new TableSchemaIdentityArgs();
        }

        public Builder(TableSchemaIdentityArgs defaults) {
            $ = new TableSchemaIdentityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param columnName The name of the identity column.
         * 
         * @return builder
         * 
         */
        public Builder columnName(@Nullable Output<String> columnName) {
            $.columnName = columnName;
            return this;
        }

        /**
         * @param columnName The name of the identity column.
         * 
         * @return builder
         * 
         */
        public Builder columnName(String columnName) {
            return columnName(Output.of(columnName));
        }

        /**
         * @param isAlways True if the identity value is GENERATED ALWAYS.
         * 
         * @return builder
         * 
         */
        public Builder isAlways(@Nullable Output<Boolean> isAlways) {
            $.isAlways = isAlways;
            return this;
        }

        /**
         * @param isAlways True if the identity value is GENERATED ALWAYS.
         * 
         * @return builder
         * 
         */
        public Builder isAlways(Boolean isAlways) {
            return isAlways(Output.of(isAlways));
        }

        /**
         * @param isNull True if the identity value is GENERATED BY DEFAULT ON NULL.
         * 
         * @return builder
         * 
         */
        public Builder isNull(@Nullable Output<Boolean> isNull) {
            $.isNull = isNull;
            return this;
        }

        /**
         * @param isNull True if the identity value is GENERATED BY DEFAULT ON NULL.
         * 
         * @return builder
         * 
         */
        public Builder isNull(Boolean isNull) {
            return isNull(Output.of(isNull));
        }

        public TableSchemaIdentityArgs build() {
            return $;
        }
    }

}
