// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetConfigurationKmsKey {
    /**
     * @return The OCID of the KMS encryption key assigned to this Hosted Environment. If the Hosted Environment is using an Oracle-managed Key (i.e., not a CMEK), then the id will be a null string.
     * 
     */
    private String id;
    /**
     * @return The current state of the encryption key assigned to this Hosted Environment. Oracle-managed keys will always report an ACTIVE state.
     * 
     */
    private String kmsKeyState;
    /**
     * @return The OCID of the vault containing the encryption key assigned to this Hosted Environment. If the Hosted Environment is using an Oracle-managed Key (i.e., not a CMEK), then the kmsVaultId will be a null string.
     * 
     */
    private String kmsVaultId;
    /**
     * @return The timestamp when encryption key was first enabled for this Hosted Environment. RFC3339 formatted.
     * 
     */
    private String timeCreated;
    /**
     * @return The timestamp of the last update to the encryption key status. RFC3339 formatted.
     * 
     */
    private String timeUpdated;

    private GetConfigurationKmsKey() {}
    /**
     * @return The OCID of the KMS encryption key assigned to this Hosted Environment. If the Hosted Environment is using an Oracle-managed Key (i.e., not a CMEK), then the id will be a null string.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of the encryption key assigned to this Hosted Environment. Oracle-managed keys will always report an ACTIVE state.
     * 
     */
    public String kmsKeyState() {
        return this.kmsKeyState;
    }
    /**
     * @return The OCID of the vault containing the encryption key assigned to this Hosted Environment. If the Hosted Environment is using an Oracle-managed Key (i.e., not a CMEK), then the kmsVaultId will be a null string.
     * 
     */
    public String kmsVaultId() {
        return this.kmsVaultId;
    }
    /**
     * @return The timestamp when encryption key was first enabled for this Hosted Environment. RFC3339 formatted.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The timestamp of the last update to the encryption key status. RFC3339 formatted.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationKmsKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String kmsKeyState;
        private String kmsVaultId;
        private String timeCreated;
        private String timeUpdated;
        public Builder() {}
        public Builder(GetConfigurationKmsKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.kmsKeyState = defaults.kmsKeyState;
    	      this.kmsVaultId = defaults.kmsVaultId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConfigurationKmsKey", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyState(String kmsKeyState) {
            if (kmsKeyState == null) {
              throw new MissingRequiredPropertyException("GetConfigurationKmsKey", "kmsKeyState");
            }
            this.kmsKeyState = kmsKeyState;
            return this;
        }
        @CustomType.Setter
        public Builder kmsVaultId(String kmsVaultId) {
            if (kmsVaultId == null) {
              throw new MissingRequiredPropertyException("GetConfigurationKmsKey", "kmsVaultId");
            }
            this.kmsVaultId = kmsVaultId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetConfigurationKmsKey", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            if (timeUpdated == null) {
              throw new MissingRequiredPropertyException("GetConfigurationKmsKey", "timeUpdated");
            }
            this.timeUpdated = timeUpdated;
            return this;
        }
        public GetConfigurationKmsKey build() {
            final var _resultValue = new GetConfigurationKmsKey();
            _resultValue.id = id;
            _resultValue.kmsKeyState = kmsKeyState;
            _resultValue.kmsVaultId = kmsVaultId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            return _resultValue;
        }
    }
}
