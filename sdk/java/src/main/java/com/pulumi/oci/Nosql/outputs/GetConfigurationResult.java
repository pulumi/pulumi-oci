// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Nosql.outputs.GetConfigurationKmsKey;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConfigurationResult {
    private String compartmentId;
    /**
     * @return The service environment type.
     * 
     */
    private String environment;
    /**
     * @return The OCID of the KMS encryption key assigned to this Hosted Environment. If the Hosted Environment is using an Oracle-managed Key (i.e., not a CMEK), then the id will be a null string.
     * 
     */
    private String id;
    private Boolean isOpcDryRun;
    /**
     * @return Information about the state of the service&#39;s encryption key management. The following properties are read-only and ignored when this object is used in UpdateConfiguration: kmsKeyState, timeCreated, timeUpdated.
     * 
     */
    private List<GetConfigurationKmsKey> kmsKeys;

    private GetConfigurationResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The service environment type.
     * 
     */
    public String environment() {
        return this.environment;
    }
    /**
     * @return The OCID of the KMS encryption key assigned to this Hosted Environment. If the Hosted Environment is using an Oracle-managed Key (i.e., not a CMEK), then the id will be a null string.
     * 
     */
    public String id() {
        return this.id;
    }
    public Boolean isOpcDryRun() {
        return this.isOpcDryRun;
    }
    /**
     * @return Information about the state of the service&#39;s encryption key management. The following properties are read-only and ignored when this object is used in UpdateConfiguration: kmsKeyState, timeCreated, timeUpdated.
     * 
     */
    public List<GetConfigurationKmsKey> kmsKeys() {
        return this.kmsKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private String environment;
        private String id;
        private Boolean isOpcDryRun;
        private List<GetConfigurationKmsKey> kmsKeys;
        public Builder() {}
        public Builder(GetConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
    	      this.isOpcDryRun = defaults.isOpcDryRun;
    	      this.kmsKeys = defaults.kmsKeys;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetConfigurationResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder environment(String environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetConfigurationResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConfigurationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isOpcDryRun(Boolean isOpcDryRun) {
            if (isOpcDryRun == null) {
              throw new MissingRequiredPropertyException("GetConfigurationResult", "isOpcDryRun");
            }
            this.isOpcDryRun = isOpcDryRun;
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeys(List<GetConfigurationKmsKey> kmsKeys) {
            if (kmsKeys == null) {
              throw new MissingRequiredPropertyException("GetConfigurationResult", "kmsKeys");
            }
            this.kmsKeys = kmsKeys;
            return this;
        }
        public Builder kmsKeys(GetConfigurationKmsKey... kmsKeys) {
            return kmsKeys(List.of(kmsKeys));
        }
        public GetConfigurationResult build() {
            final var _resultValue = new GetConfigurationResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.environment = environment;
            _resultValue.id = id;
            _resultValue.isOpcDryRun = isOpcDryRun;
            _resultValue.kmsKeys = kmsKeys;
            return _resultValue;
        }
    }
}
