// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetIndexesIndexCollectionKey {
    /**
     * @return The name of a column to be included as an index key.
     * 
     */
    private String columnName;
    /**
     * @return If the specified column is of type JSON, jsonFieldType contains the type of the field indicated by jsonPath.
     * 
     */
    private String jsonFieldType;
    /**
     * @return If the specified column is of type JSON, jsonPath contains a dotted path indicating the field within the JSON object that will be the index key.
     * 
     */
    private String jsonPath;

    private GetIndexesIndexCollectionKey() {}
    /**
     * @return The name of a column to be included as an index key.
     * 
     */
    public String columnName() {
        return this.columnName;
    }
    /**
     * @return If the specified column is of type JSON, jsonFieldType contains the type of the field indicated by jsonPath.
     * 
     */
    public String jsonFieldType() {
        return this.jsonFieldType;
    }
    /**
     * @return If the specified column is of type JSON, jsonPath contains a dotted path indicating the field within the JSON object that will be the index key.
     * 
     */
    public String jsonPath() {
        return this.jsonPath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIndexesIndexCollectionKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String columnName;
        private String jsonFieldType;
        private String jsonPath;
        public Builder() {}
        public Builder(GetIndexesIndexCollectionKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnName = defaults.columnName;
    	      this.jsonFieldType = defaults.jsonFieldType;
    	      this.jsonPath = defaults.jsonPath;
        }

        @CustomType.Setter
        public Builder columnName(String columnName) {
            if (columnName == null) {
              throw new MissingRequiredPropertyException("GetIndexesIndexCollectionKey", "columnName");
            }
            this.columnName = columnName;
            return this;
        }
        @CustomType.Setter
        public Builder jsonFieldType(String jsonFieldType) {
            if (jsonFieldType == null) {
              throw new MissingRequiredPropertyException("GetIndexesIndexCollectionKey", "jsonFieldType");
            }
            this.jsonFieldType = jsonFieldType;
            return this;
        }
        @CustomType.Setter
        public Builder jsonPath(String jsonPath) {
            if (jsonPath == null) {
              throw new MissingRequiredPropertyException("GetIndexesIndexCollectionKey", "jsonPath");
            }
            this.jsonPath = jsonPath;
            return this;
        }
        public GetIndexesIndexCollectionKey build() {
            final var _resultValue = new GetIndexesIndexCollectionKey();
            _resultValue.columnName = columnName;
            _resultValue.jsonFieldType = jsonFieldType;
            _resultValue.jsonPath = jsonPath;
            return _resultValue;
        }
    }
}
