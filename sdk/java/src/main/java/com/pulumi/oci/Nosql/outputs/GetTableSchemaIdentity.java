// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTableSchemaIdentity {
    /**
     * @return The name of the identity column.
     * 
     */
    private String columnName;
    /**
     * @return True if the identity value is GENERATED ALWAYS.
     * 
     */
    private Boolean isAlways;
    /**
     * @return True if the identity value is GENERATED BY DEFAULT ON NULL.
     * 
     */
    private Boolean isNull;

    private GetTableSchemaIdentity() {}
    /**
     * @return The name of the identity column.
     * 
     */
    public String columnName() {
        return this.columnName;
    }
    /**
     * @return True if the identity value is GENERATED ALWAYS.
     * 
     */
    public Boolean isAlways() {
        return this.isAlways;
    }
    /**
     * @return True if the identity value is GENERATED BY DEFAULT ON NULL.
     * 
     */
    public Boolean isNull() {
        return this.isNull;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableSchemaIdentity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String columnName;
        private Boolean isAlways;
        private Boolean isNull;
        public Builder() {}
        public Builder(GetTableSchemaIdentity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnName = defaults.columnName;
    	      this.isAlways = defaults.isAlways;
    	      this.isNull = defaults.isNull;
        }

        @CustomType.Setter
        public Builder columnName(String columnName) {
            if (columnName == null) {
              throw new MissingRequiredPropertyException("GetTableSchemaIdentity", "columnName");
            }
            this.columnName = columnName;
            return this;
        }
        @CustomType.Setter
        public Builder isAlways(Boolean isAlways) {
            if (isAlways == null) {
              throw new MissingRequiredPropertyException("GetTableSchemaIdentity", "isAlways");
            }
            this.isAlways = isAlways;
            return this;
        }
        @CustomType.Setter
        public Builder isNull(Boolean isNull) {
            if (isNull == null) {
              throw new MissingRequiredPropertyException("GetTableSchemaIdentity", "isNull");
            }
            this.isNull = isNull;
            return this;
        }
        public GetTableSchemaIdentity build() {
            final var _resultValue = new GetTableSchemaIdentity();
            _resultValue.columnName = columnName;
            _resultValue.isAlways = isAlways;
            _resultValue.isNull = isNull;
            return _resultValue;
        }
    }
}
