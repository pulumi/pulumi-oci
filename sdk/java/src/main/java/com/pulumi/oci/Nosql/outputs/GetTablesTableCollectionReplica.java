// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTablesTableCollectionReplica {
    /**
     * @return The capacity mode of the table.  If capacityMode = ON_DEMAND, maxReadUnits and maxWriteUnits are not used, and both will have the value of zero.
     * 
     */
    private String capacityMode;
    /**
     * @return A message describing the current state in more detail.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Maximum sustained write throughput limit for the table.
     * 
     */
    private Integer maxWriteUnits;
    private String region;
    /**
     * @return Filter list by the lifecycle state of the item.
     * 
     */
    private String state;
    private String tableId;

    private GetTablesTableCollectionReplica() {}
    /**
     * @return The capacity mode of the table.  If capacityMode = ON_DEMAND, maxReadUnits and maxWriteUnits are not used, and both will have the value of zero.
     * 
     */
    public String capacityMode() {
        return this.capacityMode;
    }
    /**
     * @return A message describing the current state in more detail.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Maximum sustained write throughput limit for the table.
     * 
     */
    public Integer maxWriteUnits() {
        return this.maxWriteUnits;
    }
    public String region() {
        return this.region;
    }
    /**
     * @return Filter list by the lifecycle state of the item.
     * 
     */
    public String state() {
        return this.state;
    }
    public String tableId() {
        return this.tableId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTablesTableCollectionReplica defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String capacityMode;
        private String lifecycleDetails;
        private Integer maxWriteUnits;
        private String region;
        private String state;
        private String tableId;
        public Builder() {}
        public Builder(GetTablesTableCollectionReplica defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityMode = defaults.capacityMode;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maxWriteUnits = defaults.maxWriteUnits;
    	      this.region = defaults.region;
    	      this.state = defaults.state;
    	      this.tableId = defaults.tableId;
        }

        @CustomType.Setter
        public Builder capacityMode(String capacityMode) {
            if (capacityMode == null) {
              throw new MissingRequiredPropertyException("GetTablesTableCollectionReplica", "capacityMode");
            }
            this.capacityMode = capacityMode;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetTablesTableCollectionReplica", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder maxWriteUnits(Integer maxWriteUnits) {
            if (maxWriteUnits == null) {
              throw new MissingRequiredPropertyException("GetTablesTableCollectionReplica", "maxWriteUnits");
            }
            this.maxWriteUnits = maxWriteUnits;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetTablesTableCollectionReplica", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetTablesTableCollectionReplica", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tableId(String tableId) {
            if (tableId == null) {
              throw new MissingRequiredPropertyException("GetTablesTableCollectionReplica", "tableId");
            }
            this.tableId = tableId;
            return this;
        }
        public GetTablesTableCollectionReplica build() {
            final var _resultValue = new GetTablesTableCollectionReplica();
            _resultValue.capacityMode = capacityMode;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.maxWriteUnits = maxWriteUnits;
            _resultValue.region = region;
            _resultValue.state = state;
            _resultValue.tableId = tableId;
            return _resultValue;
        }
    }
}
