// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTablesTableCollectionSchemaIdentity {
    private @Nullable String columnName;
    private @Nullable Boolean isAlways;
    private @Nullable Boolean isNull;

    private GetTablesTableCollectionSchemaIdentity() {}
    public Optional<String> columnName() {
        return Optional.ofNullable(this.columnName);
    }
    public Optional<Boolean> isAlways() {
        return Optional.ofNullable(this.isAlways);
    }
    public Optional<Boolean> isNull() {
        return Optional.ofNullable(this.isNull);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTablesTableCollectionSchemaIdentity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String columnName;
        private @Nullable Boolean isAlways;
        private @Nullable Boolean isNull;
        public Builder() {}
        public Builder(GetTablesTableCollectionSchemaIdentity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnName = defaults.columnName;
    	      this.isAlways = defaults.isAlways;
    	      this.isNull = defaults.isNull;
        }

        @CustomType.Setter
        public Builder columnName(@Nullable String columnName) {
            this.columnName = columnName;
            return this;
        }
        @CustomType.Setter
        public Builder isAlways(@Nullable Boolean isAlways) {
            this.isAlways = isAlways;
            return this;
        }
        @CustomType.Setter
        public Builder isNull(@Nullable Boolean isNull) {
            this.isNull = isNull;
            return this;
        }
        public GetTablesTableCollectionSchemaIdentity build() {
            final var o = new GetTablesTableCollectionSchemaIdentity();
            o.columnName = columnName;
            o.isAlways = isAlways;
            o.isNull = isNull;
            return o;
        }
    }
}
