// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TableReplica {
    /**
     * @return (Updatable) The capacity mode of the table.  If capacityMode = ON_DEMAND, maxReadUnits and maxWriteUnits are not used, and both will have the value of zero.
     * 
     */
    private @Nullable String capacityMode;
    /**
     * @return A message describing the current state in more detail.
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return (Updatable) Maximum sustained write throughput limit for the table.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable Integer maxWriteUnits;
    /**
     * @return A customer-facing region identifier
     * 
     */
    private @Nullable String region;
    /**
     * @return The state of a table.
     * 
     */
    private @Nullable String state;
    /**
     * @return The OCID of the replica table
     * 
     */
    private @Nullable String tableId;

    private TableReplica() {}
    /**
     * @return (Updatable) The capacity mode of the table.  If capacityMode = ON_DEMAND, maxReadUnits and maxWriteUnits are not used, and both will have the value of zero.
     * 
     */
    public Optional<String> capacityMode() {
        return Optional.ofNullable(this.capacityMode);
    }
    /**
     * @return A message describing the current state in more detail.
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return (Updatable) Maximum sustained write throughput limit for the table.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Integer> maxWriteUnits() {
        return Optional.ofNullable(this.maxWriteUnits);
    }
    /**
     * @return A customer-facing region identifier
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return The state of a table.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The OCID of the replica table
     * 
     */
    public Optional<String> tableId() {
        return Optional.ofNullable(this.tableId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableReplica defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String capacityMode;
        private @Nullable String lifecycleDetails;
        private @Nullable Integer maxWriteUnits;
        private @Nullable String region;
        private @Nullable String state;
        private @Nullable String tableId;
        public Builder() {}
        public Builder(TableReplica defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityMode = defaults.capacityMode;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maxWriteUnits = defaults.maxWriteUnits;
    	      this.region = defaults.region;
    	      this.state = defaults.state;
    	      this.tableId = defaults.tableId;
        }

        @CustomType.Setter
        public Builder capacityMode(@Nullable String capacityMode) {
            this.capacityMode = capacityMode;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder maxWriteUnits(@Nullable Integer maxWriteUnits) {
            this.maxWriteUnits = maxWriteUnits;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder tableId(@Nullable String tableId) {
            this.tableId = tableId;
            return this;
        }
        public TableReplica build() {
            final var o = new TableReplica();
            o.capacityMode = capacityMode;
            o.lifecycleDetails = lifecycleDetails;
            o.maxWriteUnits = maxWriteUnits;
            o.region = region;
            o.state = state;
            o.tableId = tableId;
            return o;
        }
    }
}
