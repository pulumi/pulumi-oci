// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Nosql.outputs.TableSchemaColumn;
import com.pulumi.oci.Nosql.outputs.TableSchemaIdentity;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TableSchema {
    /**
     * @return The columns of a table.
     * 
     */
    private @Nullable List<TableSchemaColumn> columns;
    /**
     * @return The identity properties of a table, if any.
     * 
     */
    private @Nullable List<TableSchemaIdentity> identities;
    /**
     * @return A list of column names that make up a key.
     * 
     */
    private @Nullable List<String> primaryKeys;
    /**
     * @return A list of column names that make up a key.
     * 
     */
    private @Nullable List<String> shardKeys;
    /**
     * @return The default Time-to-Live for the table, in days.
     * 
     */
    private @Nullable Integer ttl;

    private TableSchema() {}
    /**
     * @return The columns of a table.
     * 
     */
    public List<TableSchemaColumn> columns() {
        return this.columns == null ? List.of() : this.columns;
    }
    /**
     * @return The identity properties of a table, if any.
     * 
     */
    public List<TableSchemaIdentity> identities() {
        return this.identities == null ? List.of() : this.identities;
    }
    /**
     * @return A list of column names that make up a key.
     * 
     */
    public List<String> primaryKeys() {
        return this.primaryKeys == null ? List.of() : this.primaryKeys;
    }
    /**
     * @return A list of column names that make up a key.
     * 
     */
    public List<String> shardKeys() {
        return this.shardKeys == null ? List.of() : this.shardKeys;
    }
    /**
     * @return The default Time-to-Live for the table, in days.
     * 
     */
    public Optional<Integer> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableSchema defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<TableSchemaColumn> columns;
        private @Nullable List<TableSchemaIdentity> identities;
        private @Nullable List<String> primaryKeys;
        private @Nullable List<String> shardKeys;
        private @Nullable Integer ttl;
        public Builder() {}
        public Builder(TableSchema defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columns = defaults.columns;
    	      this.identities = defaults.identities;
    	      this.primaryKeys = defaults.primaryKeys;
    	      this.shardKeys = defaults.shardKeys;
    	      this.ttl = defaults.ttl;
        }

        @CustomType.Setter
        public Builder columns(@Nullable List<TableSchemaColumn> columns) {
            this.columns = columns;
            return this;
        }
        public Builder columns(TableSchemaColumn... columns) {
            return columns(List.of(columns));
        }
        @CustomType.Setter
        public Builder identities(@Nullable List<TableSchemaIdentity> identities) {
            this.identities = identities;
            return this;
        }
        public Builder identities(TableSchemaIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder primaryKeys(@Nullable List<String> primaryKeys) {
            this.primaryKeys = primaryKeys;
            return this;
        }
        public Builder primaryKeys(String... primaryKeys) {
            return primaryKeys(List.of(primaryKeys));
        }
        @CustomType.Setter
        public Builder shardKeys(@Nullable List<String> shardKeys) {
            this.shardKeys = shardKeys;
            return this;
        }
        public Builder shardKeys(String... shardKeys) {
            return shardKeys(List.of(shardKeys));
        }
        @CustomType.Setter
        public Builder ttl(@Nullable Integer ttl) {
            this.ttl = ttl;
            return this;
        }
        public TableSchema build() {
            final var o = new TableSchema();
            o.columns = columns;
            o.identities = identities;
            o.primaryKeys = primaryKeys;
            o.shardKeys = shardKeys;
            o.ttl = ttl;
            return o;
        }
    }
}
