// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.ObjectStorage.StorageObjectArgs;
import com.pulumi.oci.ObjectStorage.inputs.StorageObjectState;
import com.pulumi.oci.ObjectStorage.outputs.StorageObjectSourceUriDetails;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Object resource in Oracle Cloud Infrastructure Object Storage service.
 * 
 * Creates a new object or overwrites an existing object with the same name. The maximum object size allowed by
 * PutObject is 50 GiB.
 * 
 * See [Object Names](https://docs.cloud.oracle.com/iaas/Content/Object/Tasks/managingobjects.htm#namerequirements)
 * for object naming requirements.
 * 
 * See [Special Instructions for Object Storage PUT](https://docs.cloud.oracle.com/iaas/Content/API/Concepts/signingrequests.htm#ObjectStoragePut)
 * for request signature requirements.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.oci.ObjectStorage.StorageObject;
 * import com.pulumi.oci.ObjectStorage.StorageObjectArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var testObject = new StorageObject("testObject", StorageObjectArgs.builder()
 *             .bucket(objectBucket)
 *             .content(objectContent)
 *             .namespace(objectNamespace)
 *             .object(objectObject)
 *             .cacheControl(objectCacheControl)
 *             .contentDisposition(objectContentDisposition)
 *             .contentEncoding(objectContentEncoding)
 *             .contentLanguage(objectContentLanguage)
 *             .contentType(objectContentType)
 *             .deleteAllObjectVersions(objectDeleteAllObjectVersions)
 *             .metadata(objectMetadata)
 *             .storageTier(objectStorageTier)
 *             .opcSseKmsKeyId(objectOpcSseKmsKeyId)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Objects can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import oci:ObjectStorage/storageObject:StorageObject test_object &#34;n/{namespaceName}/b/{bucketName}/o/{objectName}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:ObjectStorage/storageObject:StorageObject")
public class StorageObject extends com.pulumi.resources.CustomResource {
    /**
     * The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    @Export(name="bucket", refs={String.class}, tree="[0]")
    private Output<String> bucket;

    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }
    /**
     * The optional Cache-Control header that defines the caching behavior value to be returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify objects that require caching restrictions.
     * 
     */
    @Export(name="cacheControl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cacheControl;

    /**
     * @return The optional Cache-Control header that defines the caching behavior value to be returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify objects that require caching restrictions.
     * 
     */
    public Output<Optional<String>> cacheControl() {
        return Codegen.optional(this.cacheControl);
    }
    /**
     * The object to upload to the object store. Cannot be defined if `source` or `source_uri_details` is defined.
     * 
     */
    @Export(name="content", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> content;

    /**
     * @return The object to upload to the object store. Cannot be defined if `source` or `source_uri_details` is defined.
     * 
     */
    public Output<Optional<String>> content() {
        return Codegen.optional(this.content);
    }
    /**
     * The optional Content-Disposition header that defines presentational information for the object to be returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to let users download objects with custom filenames in a browser.
     * 
     */
    @Export(name="contentDisposition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> contentDisposition;

    /**
     * @return The optional Content-Disposition header that defines presentational information for the object to be returned in GetObject and HeadObject responses. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to let users download objects with custom filenames in a browser.
     * 
     */
    public Output<Optional<String>> contentDisposition() {
        return Codegen.optional(this.contentDisposition);
    }
    /**
     * The optional Content-Encoding header that defines the content encodings that were applied to the object to upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to determine what decoding mechanisms need to be applied to obtain the media-type specified by the Content-Type header of the object.
     * 
     */
    @Export(name="contentEncoding", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> contentEncoding;

    /**
     * @return The optional Content-Encoding header that defines the content encodings that were applied to the object to upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to determine what decoding mechanisms need to be applied to obtain the media-type specified by the Content-Type header of the object.
     * 
     */
    public Output<Optional<String>> contentEncoding() {
        return Codegen.optional(this.contentEncoding);
    }
    /**
     * The optional Content-Language header that defines the content language of the object to upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify and differentiate objects based on a particular language.
     * 
     */
    @Export(name="contentLanguage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> contentLanguage;

    /**
     * @return The optional Content-Language header that defines the content language of the object to upload. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify and differentiate objects based on a particular language.
     * 
     */
    public Output<Optional<String>> contentLanguage() {
        return Codegen.optional(this.contentLanguage);
    }
    /**
     * (Updatable) The content length of the body.
     * 
     */
    @Export(name="contentLength", refs={String.class}, tree="[0]")
    private Output<String> contentLength;

    /**
     * @return (Updatable) The content length of the body.
     * 
     */
    public Output<String> contentLength() {
        return this.contentLength;
    }
    /**
     * (Updatable) The optional base-64 header that defines the encoded MD5 hash of the body. If the optional Content-MD5 header is present, Object Storage performs an integrity check on the body of the HTTP request by computing the MD5 hash for the body and comparing it to the MD5 hash supplied in the header. If the two hashes do not match, the object is rejected and an HTTP-400 Unmatched Content MD5 error is returned with the message:
     * 
     * &#34;The computed MD5 of the request body (ACTUAL_MD5) does not match the Content-MD5 header (HEADER_MD5)&#34;
     * 
     */
    @Export(name="contentMd5", refs={String.class}, tree="[0]")
    private Output<String> contentMd5;

    /**
     * @return (Updatable) The optional base-64 header that defines the encoded MD5 hash of the body. If the optional Content-MD5 header is present, Object Storage performs an integrity check on the body of the HTTP request by computing the MD5 hash for the body and comparing it to the MD5 hash supplied in the header. If the two hashes do not match, the object is rejected and an HTTP-400 Unmatched Content MD5 error is returned with the message:
     * 
     * &#34;The computed MD5 of the request body (ACTUAL_MD5) does not match the Content-MD5 header (HEADER_MD5)&#34;
     * 
     */
    public Output<String> contentMd5() {
        return this.contentMd5;
    }
    /**
     * The optional Content-Type header that defines the standard MIME type format of the object. Content type defaults to &#39;application/octet-stream&#39; if not specified in the PutObject call. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify and perform special operations on text only objects.
     * 
     */
    @Export(name="contentType", refs={String.class}, tree="[0]")
    private Output<String> contentType;

    /**
     * @return The optional Content-Type header that defines the standard MIME type format of the object. Content type defaults to &#39;application/octet-stream&#39; if not specified in the PutObject call. Specifying values for this header has no effect on Object Storage behavior. Programs that read the object determine what to do based on the value provided. For example, you could use this header to identify and perform special operations on text only objects.
     * 
     */
    public Output<String> contentType() {
        return this.contentType;
    }
    /**
     * (Updatable) A boolean to delete all object versions for an object in a bucket that has or ever had versioning enabled.
     * 
     */
    @Export(name="deleteAllObjectVersions", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deleteAllObjectVersions;

    /**
     * @return (Updatable) A boolean to delete all object versions for an object in a bucket that has or ever had versioning enabled.
     * 
     */
    public Output<Optional<Boolean>> deleteAllObjectVersions() {
        return Codegen.optional(this.deleteAllObjectVersions);
    }
    /**
     * Optional user-defined metadata key and value.
     * Note: All specified keys must be in lower case.
     * 
     */
    @Export(name="metadata", refs={Map.class,String.class,Object.class}, tree="[0,1,2]")
    private Output</* @Nullable */ Map<String,Object>> metadata;

    /**
     * @return Optional user-defined metadata key and value.
     * Note: All specified keys must be in lower case.
     * 
     */
    public Output<Optional<Map<String,Object>>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * The Object Storage namespace used for the request.
     * 
     */
    @Export(name="namespace", refs={String.class}, tree="[0]")
    private Output<String> namespace;

    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }
    /**
     * (Updatable) The name of the object. Avoid entering confidential information. Example: `test/object1.log`
     * 
     */
    @Export(name="object", refs={String.class}, tree="[0]")
    private Output<String> object;

    /**
     * @return (Updatable) The name of the object. Avoid entering confidential information. Example: `test/object1.log`
     * 
     */
    public Output<String> object() {
        return this.object;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a master encryption key used to call the Key Management service to generate a data encryption key or to encrypt or decrypt a data encryption key.
     * 
     */
    @Export(name="opcSseKmsKeyId", refs={String.class}, tree="[0]")
    private Output<String> opcSseKmsKeyId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a master encryption key used to call the Key Management service to generate a data encryption key or to encrypt or decrypt a data encryption key.
     * 
     */
    public Output<String> opcSseKmsKeyId() {
        return this.opcSseKmsKeyId;
    }
    /**
     * An absolute path to a file on the local system. Cannot be defined if `content` or `source_uri_details` is defined.
     * 
     */
    @Export(name="source", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> source;

    /**
     * @return An absolute path to a file on the local system. Cannot be defined if `content` or `source_uri_details` is defined.
     * 
     */
    public Output<Optional<String>> source() {
        return Codegen.optional(this.source);
    }
    /**
     * Details of the source URI of the object in the cloud. Cannot be defined if `content` or `source` is defined.
     * Note: To enable object copy, you must authorize the service to manage objects on your behalf.
     * 
     */
    @Export(name="sourceUriDetails", refs={StorageObjectSourceUriDetails.class}, tree="[0]")
    private Output</* @Nullable */ StorageObjectSourceUriDetails> sourceUriDetails;

    /**
     * @return Details of the source URI of the object in the cloud. Cannot be defined if `content` or `source` is defined.
     * Note: To enable object copy, you must authorize the service to manage objects on your behalf.
     * 
     */
    public Output<Optional<StorageObjectSourceUriDetails>> sourceUriDetails() {
        return Codegen.optional(this.sourceUriDetails);
    }
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    public Output<String> state() {
        return this.state;
    }
    /**
     * (Updatable) The storage tier that the object should be stored in. If not specified, the object will be stored in the same storage tier as the bucket.
     * 
     */
    @Export(name="storageTier", refs={String.class}, tree="[0]")
    private Output<String> storageTier;

    /**
     * @return (Updatable) The storage tier that the object should be stored in. If not specified, the object will be stored in the same storage tier as the bucket.
     * 
     */
    public Output<String> storageTier() {
        return this.storageTier;
    }
    @Export(name="versionId", refs={String.class}, tree="[0]")
    private Output<String> versionId;

    public Output<String> versionId() {
        return this.versionId;
    }
    @Export(name="workRequestId", refs={String.class}, tree="[0]")
    private Output<String> workRequestId;

    public Output<String> workRequestId() {
        return this.workRequestId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StorageObject(String name) {
        this(name, StorageObjectArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StorageObject(String name, StorageObjectArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StorageObject(String name, StorageObjectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:ObjectStorage/storageObject:StorageObject", name, args == null ? StorageObjectArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StorageObject(String name, Output<String> id, @Nullable StorageObjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:ObjectStorage/storageObject:StorageObject", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StorageObject get(String name, Output<String> id, @Nullable StorageObjectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StorageObject(name, id, state, options);
    }
}
