// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PrivateEndpointAccessTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateEndpointAccessTargetArgs Empty = new PrivateEndpointAccessTargetArgs();

    @Import(name="bucket", required=true)
    private Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="namespace", required=true)
    private Output<String> namespace;

    public Output<String> namespace() {
        return this.namespace;
    }

    private PrivateEndpointAccessTargetArgs() {}

    private PrivateEndpointAccessTargetArgs(PrivateEndpointAccessTargetArgs $) {
        this.bucket = $.bucket;
        this.compartmentId = $.compartmentId;
        this.namespace = $.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateEndpointAccessTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateEndpointAccessTargetArgs $;

        public Builder() {
            $ = new PrivateEndpointAccessTargetArgs();
        }

        public Builder(PrivateEndpointAccessTargetArgs defaults) {
            $ = new PrivateEndpointAccessTargetArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        public PrivateEndpointAccessTargetArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("PrivateEndpointAccessTargetArgs", "bucket");
            }
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("PrivateEndpointAccessTargetArgs", "compartmentId");
            }
            if ($.namespace == null) {
                throw new MissingRequiredPropertyException("PrivateEndpointAccessTargetArgs", "namespace");
            }
            return $;
        }
    }

}
