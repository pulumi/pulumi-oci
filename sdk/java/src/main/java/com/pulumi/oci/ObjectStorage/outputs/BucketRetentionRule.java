// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.ObjectStorage.outputs.BucketRetentionRuleDuration;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BucketRetentionRule {
    /**
     * @return A user-specified name for the retention rule. Names can be helpful in identifying retention rules. The name should be unique. This attribute is a forcenew attribute
     * 
     */
    private String displayName;
    /**
     * @return (Updatable)
     * 
     */
    private @Nullable BucketRetentionRuleDuration duration;
    /**
     * @return Unique identifier for the retention rule.
     * 
     */
    private @Nullable String retentionRuleId;
    /**
     * @return The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time that the retention rule was modified as per [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeModified;
    /**
     * @return (Updatable) The date and time as per [RFC 3339](https://tools.ietf.org/html/rfc3339) after which this rule is locked and can only be deleted by deleting the bucket. Once a rule is locked, only increases in the duration are allowed and no other properties can be changed. This property cannot be updated for rules that are in a locked state. Specifying it when a duration is not specified is considered an error.
     * 
     */
    private @Nullable String timeRuleLocked;

    private BucketRetentionRule() {}
    /**
     * @return A user-specified name for the retention rule. Names can be helpful in identifying retention rules. The name should be unique. This attribute is a forcenew attribute
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return (Updatable)
     * 
     */
    public Optional<BucketRetentionRuleDuration> duration() {
        return Optional.ofNullable(this.duration);
    }
    /**
     * @return Unique identifier for the retention rule.
     * 
     */
    public Optional<String> retentionRuleId() {
        return Optional.ofNullable(this.retentionRuleId);
    }
    /**
     * @return The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time that the retention rule was modified as per [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeModified() {
        return Optional.ofNullable(this.timeModified);
    }
    /**
     * @return (Updatable) The date and time as per [RFC 3339](https://tools.ietf.org/html/rfc3339) after which this rule is locked and can only be deleted by deleting the bucket. Once a rule is locked, only increases in the duration are allowed and no other properties can be changed. This property cannot be updated for rules that are in a locked state. Specifying it when a duration is not specified is considered an error.
     * 
     */
    public Optional<String> timeRuleLocked() {
        return Optional.ofNullable(this.timeRuleLocked);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketRetentionRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private @Nullable BucketRetentionRuleDuration duration;
        private @Nullable String retentionRuleId;
        private @Nullable String timeCreated;
        private @Nullable String timeModified;
        private @Nullable String timeRuleLocked;
        public Builder() {}
        public Builder(BucketRetentionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.duration = defaults.duration;
    	      this.retentionRuleId = defaults.retentionRuleId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeModified = defaults.timeModified;
    	      this.timeRuleLocked = defaults.timeRuleLocked;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("BucketRetentionRule", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder duration(@Nullable BucketRetentionRuleDuration duration) {

            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder retentionRuleId(@Nullable String retentionRuleId) {

            this.retentionRuleId = retentionRuleId;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {

            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeModified(@Nullable String timeModified) {

            this.timeModified = timeModified;
            return this;
        }
        @CustomType.Setter
        public Builder timeRuleLocked(@Nullable String timeRuleLocked) {

            this.timeRuleLocked = timeRuleLocked;
            return this;
        }
        public BucketRetentionRule build() {
            final var _resultValue = new BucketRetentionRule();
            _resultValue.displayName = displayName;
            _resultValue.duration = duration;
            _resultValue.retentionRuleId = retentionRuleId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeModified = timeModified;
            _resultValue.timeRuleLocked = timeRuleLocked;
            return _resultValue;
        }
    }
}
