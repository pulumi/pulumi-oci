// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ObjectStorage.outputs.GetBucketSummariesBucketSummaryRetentionRule;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBucketSummariesBucketSummary {
    /**
     * @return The type of public access enabled on this bucket. A bucket is set to `NoPublicAccess` by default, which only allows an authenticated caller to access the bucket and its contents. When `ObjectRead` is enabled on the bucket, public access is allowed for the `GetObject`, `HeadObject`, and `ListObjects` operations. When `ObjectReadWithoutList` is enabled on the bucket, public access is allowed for the `GetObject` and `HeadObject` operations.
     * 
     */
    private String accessType;
    /**
     * @return The approximate number of objects in the bucket. Count statistics are reported periodically. You will see a lag between what is displayed and the actual object count.
     * 
     */
    private String approximateCount;
    /**
     * @return The approximate total size in bytes of all objects in the bucket. Size statistics are reported periodically. You will see a lag between what is displayed and the actual size of the bucket.
     * 
     */
    private String approximateSize;
    /**
     * @return The auto tiering status on the bucket. A bucket is created with auto tiering `Disabled` by default. For auto tiering `InfrequentAccess`, objects are transitioned automatically between the &#39;Standard&#39; and &#39;InfrequentAccess&#39; tiers based on the access pattern of the objects.
     * 
     */
    private String autoTiering;
    private String bucketId;
    /**
     * @return The ID of the compartment in which to list buckets.
     * 
     */
    private String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the bucket.
     * 
     */
    private String createdBy;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return The entity tag (ETag) for the bucket.
     * 
     */
    private String etag;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    private String id;
    /**
     * @return Whether or not this bucket is read only. By default, `isReadOnly` is set to `false`. This will be set to &#39;true&#39; when this bucket is configured as a destination in a replication policy.
     * 
     */
    private Boolean isReadOnly;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a master encryption key used to call the Key Management service to generate a data encryption key or to encrypt or decrypt a data encryption key.
     * 
     */
    private String kmsKeyId;
    /**
     * @return Arbitrary string keys and values for user-defined metadata.
     * 
     */
    private Map<String,Object> metadata;
    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: my-new-bucket1
     * 
     */
    private String name;
    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    private String namespace;
    /**
     * @return Whether or not events are emitted for object state changes in this bucket. By default, `objectEventsEnabled` is set to `false`. Set `objectEventsEnabled` to `true` to emit events for object state changes. For more information about events, see [Overview of Events](https://docs.cloud.oracle.com/iaas/Content/Events/Concepts/eventsoverview.htm).
     * 
     */
    private Boolean objectEventsEnabled;
    /**
     * @return The entity tag (ETag) for the live object lifecycle policy on the bucket.
     * 
     */
    private String objectLifecyclePolicyEtag;
    /**
     * @return Whether or not this bucket is a replication source. By default, `replicationEnabled` is set to `false`. This will be set to &#39;true&#39; when you create a replication policy for the bucket.
     * 
     */
    private Boolean replicationEnabled;
    private List<GetBucketSummariesBucketSummaryRetentionRule> retentionRules;
    /**
     * @return The storage tier type assigned to the bucket. A bucket is set to `Standard` tier by default, which means objects uploaded or copied to the bucket will be in the standard storage tier. When the `Archive` tier type is set explicitly for a bucket, objects uploaded or copied to the bucket will be stored in archive storage. The `storageTier` property is immutable after bucket is created.
     * 
     */
    private String storageTier;
    /**
     * @return The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
     * 
     */
    private String timeCreated;
    /**
     * @return The versioning status on the bucket. A bucket is created with versioning `Disabled` by default. For versioning `Enabled`, objects are protected from overwrites and deletes, by maintaining their version history. When versioning is `Suspended`, the previous versions will still remain but new versions will no longer be created when overwitten or deleted.
     * 
     */
    private String versioning;

    private GetBucketSummariesBucketSummary() {}
    /**
     * @return The type of public access enabled on this bucket. A bucket is set to `NoPublicAccess` by default, which only allows an authenticated caller to access the bucket and its contents. When `ObjectRead` is enabled on the bucket, public access is allowed for the `GetObject`, `HeadObject`, and `ListObjects` operations. When `ObjectReadWithoutList` is enabled on the bucket, public access is allowed for the `GetObject` and `HeadObject` operations.
     * 
     */
    public String accessType() {
        return this.accessType;
    }
    /**
     * @return The approximate number of objects in the bucket. Count statistics are reported periodically. You will see a lag between what is displayed and the actual object count.
     * 
     */
    public String approximateCount() {
        return this.approximateCount;
    }
    /**
     * @return The approximate total size in bytes of all objects in the bucket. Size statistics are reported periodically. You will see a lag between what is displayed and the actual size of the bucket.
     * 
     */
    public String approximateSize() {
        return this.approximateSize;
    }
    /**
     * @return The auto tiering status on the bucket. A bucket is created with auto tiering `Disabled` by default. For auto tiering `InfrequentAccess`, objects are transitioned automatically between the &#39;Standard&#39; and &#39;InfrequentAccess&#39; tiers based on the access pattern of the objects.
     * 
     */
    public String autoTiering() {
        return this.autoTiering;
    }
    public String bucketId() {
        return this.bucketId;
    }
    /**
     * @return The ID of the compartment in which to list buckets.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the user who created the bucket.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The entity tag (ETag) for the bucket.
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Whether or not this bucket is read only. By default, `isReadOnly` is set to `false`. This will be set to &#39;true&#39; when this bucket is configured as a destination in a replication policy.
     * 
     */
    public Boolean isReadOnly() {
        return this.isReadOnly;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a master encryption key used to call the Key Management service to generate a data encryption key or to encrypt or decrypt a data encryption key.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return Arbitrary string keys and values for user-defined metadata.
     * 
     */
    public Map<String,Object> metadata() {
        return this.metadata;
    }
    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: my-new-bucket1
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return Whether or not events are emitted for object state changes in this bucket. By default, `objectEventsEnabled` is set to `false`. Set `objectEventsEnabled` to `true` to emit events for object state changes. For more information about events, see [Overview of Events](https://docs.cloud.oracle.com/iaas/Content/Events/Concepts/eventsoverview.htm).
     * 
     */
    public Boolean objectEventsEnabled() {
        return this.objectEventsEnabled;
    }
    /**
     * @return The entity tag (ETag) for the live object lifecycle policy on the bucket.
     * 
     */
    public String objectLifecyclePolicyEtag() {
        return this.objectLifecyclePolicyEtag;
    }
    /**
     * @return Whether or not this bucket is a replication source. By default, `replicationEnabled` is set to `false`. This will be set to &#39;true&#39; when you create a replication policy for the bucket.
     * 
     */
    public Boolean replicationEnabled() {
        return this.replicationEnabled;
    }
    public List<GetBucketSummariesBucketSummaryRetentionRule> retentionRules() {
        return this.retentionRules;
    }
    /**
     * @return The storage tier type assigned to the bucket. A bucket is set to `Standard` tier by default, which means objects uploaded or copied to the bucket will be in the standard storage tier. When the `Archive` tier type is set explicitly for a bucket, objects uploaded or copied to the bucket will be stored in archive storage. The `storageTier` property is immutable after bucket is created.
     * 
     */
    public String storageTier() {
        return this.storageTier;
    }
    /**
     * @return The date and time the bucket was created, as described in [RFC 2616](https://tools.ietf.org/html/rfc2616#section-14.29).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The versioning status on the bucket. A bucket is created with versioning `Disabled` by default. For versioning `Enabled`, objects are protected from overwrites and deletes, by maintaining their version history. When versioning is `Suspended`, the previous versions will still remain but new versions will no longer be created when overwitten or deleted.
     * 
     */
    public String versioning() {
        return this.versioning;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketSummariesBucketSummary defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessType;
        private String approximateCount;
        private String approximateSize;
        private String autoTiering;
        private String bucketId;
        private String compartmentId;
        private String createdBy;
        private Map<String,Object> definedTags;
        private String etag;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isReadOnly;
        private String kmsKeyId;
        private Map<String,Object> metadata;
        private String name;
        private String namespace;
        private Boolean objectEventsEnabled;
        private String objectLifecyclePolicyEtag;
        private Boolean replicationEnabled;
        private List<GetBucketSummariesBucketSummaryRetentionRule> retentionRules;
        private String storageTier;
        private String timeCreated;
        private String versioning;
        public Builder() {}
        public Builder(GetBucketSummariesBucketSummary defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessType = defaults.accessType;
    	      this.approximateCount = defaults.approximateCount;
    	      this.approximateSize = defaults.approximateSize;
    	      this.autoTiering = defaults.autoTiering;
    	      this.bucketId = defaults.bucketId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdBy = defaults.createdBy;
    	      this.definedTags = defaults.definedTags;
    	      this.etag = defaults.etag;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isReadOnly = defaults.isReadOnly;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.objectEventsEnabled = defaults.objectEventsEnabled;
    	      this.objectLifecyclePolicyEtag = defaults.objectLifecyclePolicyEtag;
    	      this.replicationEnabled = defaults.replicationEnabled;
    	      this.retentionRules = defaults.retentionRules;
    	      this.storageTier = defaults.storageTier;
    	      this.timeCreated = defaults.timeCreated;
    	      this.versioning = defaults.versioning;
        }

        @CustomType.Setter
        public Builder accessType(String accessType) {
            this.accessType = Objects.requireNonNull(accessType);
            return this;
        }
        @CustomType.Setter
        public Builder approximateCount(String approximateCount) {
            this.approximateCount = Objects.requireNonNull(approximateCount);
            return this;
        }
        @CustomType.Setter
        public Builder approximateSize(String approximateSize) {
            this.approximateSize = Objects.requireNonNull(approximateSize);
            return this;
        }
        @CustomType.Setter
        public Builder autoTiering(String autoTiering) {
            this.autoTiering = Objects.requireNonNull(autoTiering);
            return this;
        }
        @CustomType.Setter
        public Builder bucketId(String bucketId) {
            this.bucketId = Objects.requireNonNull(bucketId);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder createdBy(String createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isReadOnly(Boolean isReadOnly) {
            this.isReadOnly = Objects.requireNonNull(isReadOnly);
            return this;
        }
        @CustomType.Setter
        public Builder kmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }
        @CustomType.Setter
        public Builder metadata(Map<String,Object> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        @CustomType.Setter
        public Builder objectEventsEnabled(Boolean objectEventsEnabled) {
            this.objectEventsEnabled = Objects.requireNonNull(objectEventsEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder objectLifecyclePolicyEtag(String objectLifecyclePolicyEtag) {
            this.objectLifecyclePolicyEtag = Objects.requireNonNull(objectLifecyclePolicyEtag);
            return this;
        }
        @CustomType.Setter
        public Builder replicationEnabled(Boolean replicationEnabled) {
            this.replicationEnabled = Objects.requireNonNull(replicationEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder retentionRules(List<GetBucketSummariesBucketSummaryRetentionRule> retentionRules) {
            this.retentionRules = Objects.requireNonNull(retentionRules);
            return this;
        }
        public Builder retentionRules(GetBucketSummariesBucketSummaryRetentionRule... retentionRules) {
            return retentionRules(List.of(retentionRules));
        }
        @CustomType.Setter
        public Builder storageTier(String storageTier) {
            this.storageTier = Objects.requireNonNull(storageTier);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder versioning(String versioning) {
            this.versioning = Objects.requireNonNull(versioning);
            return this;
        }
        public GetBucketSummariesBucketSummary build() {
            final var _resultValue = new GetBucketSummariesBucketSummary();
            _resultValue.accessType = accessType;
            _resultValue.approximateCount = approximateCount;
            _resultValue.approximateSize = approximateSize;
            _resultValue.autoTiering = autoTiering;
            _resultValue.bucketId = bucketId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.createdBy = createdBy;
            _resultValue.definedTags = definedTags;
            _resultValue.etag = etag;
            _resultValue.freeformTags = freeformTags;
            _resultValue.id = id;
            _resultValue.isReadOnly = isReadOnly;
            _resultValue.kmsKeyId = kmsKeyId;
            _resultValue.metadata = metadata;
            _resultValue.name = name;
            _resultValue.namespace = namespace;
            _resultValue.objectEventsEnabled = objectEventsEnabled;
            _resultValue.objectLifecyclePolicyEtag = objectLifecyclePolicyEtag;
            _resultValue.replicationEnabled = replicationEnabled;
            _resultValue.retentionRules = retentionRules;
            _resultValue.storageTier = storageTier;
            _resultValue.timeCreated = timeCreated;
            _resultValue.versioning = versioning;
            return _resultValue;
        }
    }
}
