// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetObjectHeadResult {
    private @Nullable String archivalState;
    private String bucket;
    /**
     * @return The content-length of the object
     * 
     */
    private @Nullable Integer contentLength;
    /**
     * @return The content-type of the object
     * 
     */
    private @Nullable String contentType;
    /**
     * @return The etag of the object
     * 
     */
    private @Nullable String etag;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private @Nullable String id;
    /**
     * @return The metadata of the object
     * 
     */
    private @Nullable Map<String,Object> metadata;
    private String namespace;
    private String object;
    /**
     * @return The storage tier that the object is stored in.
     * * `archival-state` - Archival state of an object. This field is set only for objects in Archive tier.
     * 
     */
    private @Nullable String storageTier;

    private GetObjectHeadResult() {}
    public Optional<String> archivalState() {
        return Optional.ofNullable(this.archivalState);
    }
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The content-length of the object
     * 
     */
    public Optional<Integer> contentLength() {
        return Optional.ofNullable(this.contentLength);
    }
    /**
     * @return The content-type of the object
     * 
     */
    public Optional<String> contentType() {
        return Optional.ofNullable(this.contentType);
    }
    /**
     * @return The etag of the object
     * 
     */
    public Optional<String> etag() {
        return Optional.ofNullable(this.etag);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The metadata of the object
     * 
     */
    public Map<String,Object> metadata() {
        return this.metadata == null ? Map.of() : this.metadata;
    }
    public String namespace() {
        return this.namespace;
    }
    public String object() {
        return this.object;
    }
    /**
     * @return The storage tier that the object is stored in.
     * * `archival-state` - Archival state of an object. This field is set only for objects in Archive tier.
     * 
     */
    public Optional<String> storageTier() {
        return Optional.ofNullable(this.storageTier);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetObjectHeadResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String archivalState;
        private String bucket;
        private @Nullable Integer contentLength;
        private @Nullable String contentType;
        private @Nullable String etag;
        private @Nullable String id;
        private @Nullable Map<String,Object> metadata;
        private String namespace;
        private String object;
        private @Nullable String storageTier;
        public Builder() {}
        public Builder(GetObjectHeadResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archivalState = defaults.archivalState;
    	      this.bucket = defaults.bucket;
    	      this.contentLength = defaults.contentLength;
    	      this.contentType = defaults.contentType;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.metadata = defaults.metadata;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.storageTier = defaults.storageTier;
        }

        @CustomType.Setter
        public Builder archivalState(@Nullable String archivalState) {
            this.archivalState = archivalState;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        @CustomType.Setter
        public Builder contentLength(@Nullable Integer contentLength) {
            this.contentLength = contentLength;
            return this;
        }
        @CustomType.Setter
        public Builder contentType(@Nullable String contentType) {
            this.contentType = contentType;
            return this;
        }
        @CustomType.Setter
        public Builder etag(@Nullable String etag) {
            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(@Nullable Map<String,Object> metadata) {
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        @CustomType.Setter
        public Builder object(String object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }
        @CustomType.Setter
        public Builder storageTier(@Nullable String storageTier) {
            this.storageTier = storageTier;
            return this;
        }
        public GetObjectHeadResult build() {
            final var o = new GetObjectHeadResult();
            o.archivalState = archivalState;
            o.bucket = bucket;
            o.contentLength = contentLength;
            o.contentType = contentType;
            o.etag = etag;
            o.id = id;
            o.metadata = metadata;
            o.namespace = namespace;
            o.object = object;
            o.storageTier = storageTier;
            return o;
        }
    }
}
