// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetObjectResult {
    private @Nullable Boolean base64EncodeContent;
    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    private String bucket;
    private String cacheControl;
    /**
     * @return The object to upload to the object store.
     * 
     */
    private String content;
    private String contentDisposition;
    /**
     * @return The content encoding of the object.
     * 
     */
    private String contentEncoding;
    /**
     * @return The content language of the object.
     * 
     */
    private String contentLanguage;
    /**
     * @return The content length of the body.
     * 
     */
    private String contentLength;
    private @Nullable Integer contentLengthLimit;
    /**
     * @return The base-64 encoded MD5 hash of the body.
     * 
     */
    private String contentMd5;
    /**
     * @return The content type of the object.  Defaults to &#39;application/octet-stream&#39; if not overridden during the PutObject call.
     * 
     */
    private String contentType;
    private @Nullable String httpResponseCacheControl;
    private @Nullable String httpResponseContentDisposition;
    private @Nullable String httpResponseContentEncoding;
    private @Nullable String httpResponseContentLanguage;
    private @Nullable String httpResponseContentType;
    private @Nullable String httpResponseExpires;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Optional user-defined metadata key and value. Note: Metadata keys are case-insensitive and all returned keys will be lower case.
     * 
     */
    private Map<String,String> metadata;
    /**
     * @return The top-level namespace used for the request.
     * 
     */
    private String namespace;
    /**
     * @return The name of the object. Avoid entering confidential information. Example: `test/object1.log`
     * 
     */
    private String object;
    /**
     * @return The storage tier that the object is stored in.
     * 
     */
    private String storageTier;
    private String versionId;

    private GetObjectResult() {}
    public Optional<Boolean> base64EncodeContent() {
        return Optional.ofNullable(this.base64EncodeContent);
    }
    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    public String cacheControl() {
        return this.cacheControl;
    }
    /**
     * @return The object to upload to the object store.
     * 
     */
    public String content() {
        return this.content;
    }
    public String contentDisposition() {
        return this.contentDisposition;
    }
    /**
     * @return The content encoding of the object.
     * 
     */
    public String contentEncoding() {
        return this.contentEncoding;
    }
    /**
     * @return The content language of the object.
     * 
     */
    public String contentLanguage() {
        return this.contentLanguage;
    }
    /**
     * @return The content length of the body.
     * 
     */
    public String contentLength() {
        return this.contentLength;
    }
    public Optional<Integer> contentLengthLimit() {
        return Optional.ofNullable(this.contentLengthLimit);
    }
    /**
     * @return The base-64 encoded MD5 hash of the body.
     * 
     */
    public String contentMd5() {
        return this.contentMd5;
    }
    /**
     * @return The content type of the object.  Defaults to &#39;application/octet-stream&#39; if not overridden during the PutObject call.
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    public Optional<String> httpResponseCacheControl() {
        return Optional.ofNullable(this.httpResponseCacheControl);
    }
    public Optional<String> httpResponseContentDisposition() {
        return Optional.ofNullable(this.httpResponseContentDisposition);
    }
    public Optional<String> httpResponseContentEncoding() {
        return Optional.ofNullable(this.httpResponseContentEncoding);
    }
    public Optional<String> httpResponseContentLanguage() {
        return Optional.ofNullable(this.httpResponseContentLanguage);
    }
    public Optional<String> httpResponseContentType() {
        return Optional.ofNullable(this.httpResponseContentType);
    }
    public Optional<String> httpResponseExpires() {
        return Optional.ofNullable(this.httpResponseExpires);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Optional user-defined metadata key and value. Note: Metadata keys are case-insensitive and all returned keys will be lower case.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata;
    }
    /**
     * @return The top-level namespace used for the request.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The name of the object. Avoid entering confidential information. Example: `test/object1.log`
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return The storage tier that the object is stored in.
     * 
     */
    public String storageTier() {
        return this.storageTier;
    }
    public String versionId() {
        return this.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetObjectResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean base64EncodeContent;
        private String bucket;
        private String cacheControl;
        private String content;
        private String contentDisposition;
        private String contentEncoding;
        private String contentLanguage;
        private String contentLength;
        private @Nullable Integer contentLengthLimit;
        private String contentMd5;
        private String contentType;
        private @Nullable String httpResponseCacheControl;
        private @Nullable String httpResponseContentDisposition;
        private @Nullable String httpResponseContentEncoding;
        private @Nullable String httpResponseContentLanguage;
        private @Nullable String httpResponseContentType;
        private @Nullable String httpResponseExpires;
        private String id;
        private Map<String,String> metadata;
        private String namespace;
        private String object;
        private String storageTier;
        private String versionId;
        public Builder() {}
        public Builder(GetObjectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.base64EncodeContent = defaults.base64EncodeContent;
    	      this.bucket = defaults.bucket;
    	      this.cacheControl = defaults.cacheControl;
    	      this.content = defaults.content;
    	      this.contentDisposition = defaults.contentDisposition;
    	      this.contentEncoding = defaults.contentEncoding;
    	      this.contentLanguage = defaults.contentLanguage;
    	      this.contentLength = defaults.contentLength;
    	      this.contentLengthLimit = defaults.contentLengthLimit;
    	      this.contentMd5 = defaults.contentMd5;
    	      this.contentType = defaults.contentType;
    	      this.httpResponseCacheControl = defaults.httpResponseCacheControl;
    	      this.httpResponseContentDisposition = defaults.httpResponseContentDisposition;
    	      this.httpResponseContentEncoding = defaults.httpResponseContentEncoding;
    	      this.httpResponseContentLanguage = defaults.httpResponseContentLanguage;
    	      this.httpResponseContentType = defaults.httpResponseContentType;
    	      this.httpResponseExpires = defaults.httpResponseExpires;
    	      this.id = defaults.id;
    	      this.metadata = defaults.metadata;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.storageTier = defaults.storageTier;
    	      this.versionId = defaults.versionId;
        }

        @CustomType.Setter
        public Builder base64EncodeContent(@Nullable Boolean base64EncodeContent) {

            this.base64EncodeContent = base64EncodeContent;
            return this;
        }
        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder cacheControl(String cacheControl) {
            if (cacheControl == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "cacheControl");
            }
            this.cacheControl = cacheControl;
            return this;
        }
        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder contentDisposition(String contentDisposition) {
            if (contentDisposition == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "contentDisposition");
            }
            this.contentDisposition = contentDisposition;
            return this;
        }
        @CustomType.Setter
        public Builder contentEncoding(String contentEncoding) {
            if (contentEncoding == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "contentEncoding");
            }
            this.contentEncoding = contentEncoding;
            return this;
        }
        @CustomType.Setter
        public Builder contentLanguage(String contentLanguage) {
            if (contentLanguage == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "contentLanguage");
            }
            this.contentLanguage = contentLanguage;
            return this;
        }
        @CustomType.Setter
        public Builder contentLength(String contentLength) {
            if (contentLength == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "contentLength");
            }
            this.contentLength = contentLength;
            return this;
        }
        @CustomType.Setter
        public Builder contentLengthLimit(@Nullable Integer contentLengthLimit) {

            this.contentLengthLimit = contentLengthLimit;
            return this;
        }
        @CustomType.Setter
        public Builder contentMd5(String contentMd5) {
            if (contentMd5 == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "contentMd5");
            }
            this.contentMd5 = contentMd5;
            return this;
        }
        @CustomType.Setter
        public Builder contentType(String contentType) {
            if (contentType == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "contentType");
            }
            this.contentType = contentType;
            return this;
        }
        @CustomType.Setter
        public Builder httpResponseCacheControl(@Nullable String httpResponseCacheControl) {

            this.httpResponseCacheControl = httpResponseCacheControl;
            return this;
        }
        @CustomType.Setter
        public Builder httpResponseContentDisposition(@Nullable String httpResponseContentDisposition) {

            this.httpResponseContentDisposition = httpResponseContentDisposition;
            return this;
        }
        @CustomType.Setter
        public Builder httpResponseContentEncoding(@Nullable String httpResponseContentEncoding) {

            this.httpResponseContentEncoding = httpResponseContentEncoding;
            return this;
        }
        @CustomType.Setter
        public Builder httpResponseContentLanguage(@Nullable String httpResponseContentLanguage) {

            this.httpResponseContentLanguage = httpResponseContentLanguage;
            return this;
        }
        @CustomType.Setter
        public Builder httpResponseContentType(@Nullable String httpResponseContentType) {

            this.httpResponseContentType = httpResponseContentType;
            return this;
        }
        @CustomType.Setter
        public Builder httpResponseExpires(@Nullable String httpResponseExpires) {

            this.httpResponseExpires = httpResponseExpires;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(Map<String,String> metadata) {
            if (metadata == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "metadata");
            }
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder object(String object) {
            if (object == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "object");
            }
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder storageTier(String storageTier) {
            if (storageTier == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "storageTier");
            }
            this.storageTier = storageTier;
            return this;
        }
        @CustomType.Setter
        public Builder versionId(String versionId) {
            if (versionId == null) {
              throw new MissingRequiredPropertyException("GetObjectResult", "versionId");
            }
            this.versionId = versionId;
            return this;
        }
        public GetObjectResult build() {
            final var _resultValue = new GetObjectResult();
            _resultValue.base64EncodeContent = base64EncodeContent;
            _resultValue.bucket = bucket;
            _resultValue.cacheControl = cacheControl;
            _resultValue.content = content;
            _resultValue.contentDisposition = contentDisposition;
            _resultValue.contentEncoding = contentEncoding;
            _resultValue.contentLanguage = contentLanguage;
            _resultValue.contentLength = contentLength;
            _resultValue.contentLengthLimit = contentLengthLimit;
            _resultValue.contentMd5 = contentMd5;
            _resultValue.contentType = contentType;
            _resultValue.httpResponseCacheControl = httpResponseCacheControl;
            _resultValue.httpResponseContentDisposition = httpResponseContentDisposition;
            _resultValue.httpResponseContentEncoding = httpResponseContentEncoding;
            _resultValue.httpResponseContentLanguage = httpResponseContentLanguage;
            _resultValue.httpResponseContentType = httpResponseContentType;
            _resultValue.httpResponseExpires = httpResponseExpires;
            _resultValue.id = id;
            _resultValue.metadata = metadata;
            _resultValue.namespace = namespace;
            _resultValue.object = object;
            _resultValue.storageTier = storageTier;
            _resultValue.versionId = versionId;
            return _resultValue;
        }
    }
}
