// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetReplicationPoliciesReplicationPolicy {
    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    private @Nullable String bucket;
    /**
     * @deprecated
     * The &#39;delete_object_in_destination_bucket&#39; field has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'delete_object_in_destination_bucket' field has been deprecated. It is no longer supported. */
    private @Nullable String deleteObjectInDestinationBucket;
    /**
     * @return The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
     * 
     */
    private @Nullable String destinationBucketName;
    /**
     * @return The destination region to replicate to, for example &#34;us-ashburn-1&#34;.
     * 
     */
    private @Nullable String destinationRegionName;
    /**
     * @return The id of the replication policy.
     * 
     */
    private @Nullable String id;
    /**
     * @return The name of the policy.
     * 
     */
    private @Nullable String name;
    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
     * 
     */
    private @Nullable String status;
    /**
     * @return A human-readable description of the status.
     * 
     */
    private @Nullable String statusMessage;
    /**
     * @return The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return Changes made to the source bucket before this time has been replicated.
     * 
     */
    private @Nullable String timeLastSync;

    private GetReplicationPoliciesReplicationPolicy() {}
    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @deprecated
     * The &#39;delete_object_in_destination_bucket&#39; field has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'delete_object_in_destination_bucket' field has been deprecated. It is no longer supported. */
    public Optional<String> deleteObjectInDestinationBucket() {
        return Optional.ofNullable(this.deleteObjectInDestinationBucket);
    }
    /**
     * @return The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
     * 
     */
    public Optional<String> destinationBucketName() {
        return Optional.ofNullable(this.destinationBucketName);
    }
    /**
     * @return The destination region to replicate to, for example &#34;us-ashburn-1&#34;.
     * 
     */
    public Optional<String> destinationRegionName() {
        return Optional.ofNullable(this.destinationRegionName);
    }
    /**
     * @return The id of the replication policy.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the policy.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return A human-readable description of the status.
     * 
     */
    public Optional<String> statusMessage() {
        return Optional.ofNullable(this.statusMessage);
    }
    /**
     * @return The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Changes made to the source bucket before this time has been replicated.
     * 
     */
    public Optional<String> timeLastSync() {
        return Optional.ofNullable(this.timeLastSync);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReplicationPoliciesReplicationPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bucket;
        private @Nullable String deleteObjectInDestinationBucket;
        private @Nullable String destinationBucketName;
        private @Nullable String destinationRegionName;
        private @Nullable String id;
        private @Nullable String name;
        private @Nullable String namespace;
        private @Nullable String status;
        private @Nullable String statusMessage;
        private @Nullable String timeCreated;
        private @Nullable String timeLastSync;
        public Builder() {}
        public Builder(GetReplicationPoliciesReplicationPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.deleteObjectInDestinationBucket = defaults.deleteObjectInDestinationBucket;
    	      this.destinationBucketName = defaults.destinationBucketName;
    	      this.destinationRegionName = defaults.destinationRegionName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.status = defaults.status;
    	      this.statusMessage = defaults.statusMessage;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastSync = defaults.timeLastSync;
        }

        @CustomType.Setter
        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder deleteObjectInDestinationBucket(@Nullable String deleteObjectInDestinationBucket) {
            this.deleteObjectInDestinationBucket = deleteObjectInDestinationBucket;
            return this;
        }
        @CustomType.Setter
        public Builder destinationBucketName(@Nullable String destinationBucketName) {
            this.destinationBucketName = destinationBucketName;
            return this;
        }
        @CustomType.Setter
        public Builder destinationRegionName(@Nullable String destinationRegionName) {
            this.destinationRegionName = destinationRegionName;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusMessage(@Nullable String statusMessage) {
            this.statusMessage = statusMessage;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeLastSync(@Nullable String timeLastSync) {
            this.timeLastSync = timeLastSync;
            return this;
        }
        public GetReplicationPoliciesReplicationPolicy build() {
            final var o = new GetReplicationPoliciesReplicationPolicy();
            o.bucket = bucket;
            o.deleteObjectInDestinationBucket = deleteObjectInDestinationBucket;
            o.destinationBucketName = destinationBucketName;
            o.destinationRegionName = destinationRegionName;
            o.id = id;
            o.name = name;
            o.namespace = namespace;
            o.status = status;
            o.statusMessage = statusMessage;
            o.timeCreated = timeCreated;
            o.timeLastSync = timeLastSync;
            return o;
        }
    }
}
