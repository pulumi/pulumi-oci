// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StorageObjectSourceUriDetails {
    /**
     * @return The name of the bucket for the source object.
     * 
     */
    private String bucket;
    /**
     * @return The entity tag to match the target object.
     * 
     */
    private @Nullable String destinationObjectIfMatchEtag;
    /**
     * @return The entity tag to not match the target object.
     * 
     */
    private @Nullable String destinationObjectIfNoneMatchEtag;
    /**
     * @return The top-level namespace of the source object.
     * 
     */
    private String namespace;
    /**
     * @return The name of the source object.
     * 
     */
    private String object;
    /**
     * @return The region of the source object.
     * 
     */
    private String region;
    /**
     * @return The entity tag to match the source object.
     * 
     */
    private @Nullable String sourceObjectIfMatchEtag;
    /**
     * @return The version id of the object to be restored.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    private @Nullable String sourceVersionId;

    private StorageObjectSourceUriDetails() {}
    /**
     * @return The name of the bucket for the source object.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The entity tag to match the target object.
     * 
     */
    public Optional<String> destinationObjectIfMatchEtag() {
        return Optional.ofNullable(this.destinationObjectIfMatchEtag);
    }
    /**
     * @return The entity tag to not match the target object.
     * 
     */
    public Optional<String> destinationObjectIfNoneMatchEtag() {
        return Optional.ofNullable(this.destinationObjectIfNoneMatchEtag);
    }
    /**
     * @return The top-level namespace of the source object.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return The name of the source object.
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return The region of the source object.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The entity tag to match the source object.
     * 
     */
    public Optional<String> sourceObjectIfMatchEtag() {
        return Optional.ofNullable(this.sourceObjectIfMatchEtag);
    }
    /**
     * @return The version id of the object to be restored.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<String> sourceVersionId() {
        return Optional.ofNullable(this.sourceVersionId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageObjectSourceUriDetails defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private @Nullable String destinationObjectIfMatchEtag;
        private @Nullable String destinationObjectIfNoneMatchEtag;
        private String namespace;
        private String object;
        private String region;
        private @Nullable String sourceObjectIfMatchEtag;
        private @Nullable String sourceVersionId;
        public Builder() {}
        public Builder(StorageObjectSourceUriDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.destinationObjectIfMatchEtag = defaults.destinationObjectIfMatchEtag;
    	      this.destinationObjectIfNoneMatchEtag = defaults.destinationObjectIfNoneMatchEtag;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.region = defaults.region;
    	      this.sourceObjectIfMatchEtag = defaults.sourceObjectIfMatchEtag;
    	      this.sourceVersionId = defaults.sourceVersionId;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("StorageObjectSourceUriDetails", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder destinationObjectIfMatchEtag(@Nullable String destinationObjectIfMatchEtag) {

            this.destinationObjectIfMatchEtag = destinationObjectIfMatchEtag;
            return this;
        }
        @CustomType.Setter
        public Builder destinationObjectIfNoneMatchEtag(@Nullable String destinationObjectIfNoneMatchEtag) {

            this.destinationObjectIfNoneMatchEtag = destinationObjectIfNoneMatchEtag;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(String namespace) {
            if (namespace == null) {
              throw new MissingRequiredPropertyException("StorageObjectSourceUriDetails", "namespace");
            }
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder object(String object) {
            if (object == null) {
              throw new MissingRequiredPropertyException("StorageObjectSourceUriDetails", "object");
            }
            this.object = object;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("StorageObjectSourceUriDetails", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder sourceObjectIfMatchEtag(@Nullable String sourceObjectIfMatchEtag) {

            this.sourceObjectIfMatchEtag = sourceObjectIfMatchEtag;
            return this;
        }
        @CustomType.Setter
        public Builder sourceVersionId(@Nullable String sourceVersionId) {

            this.sourceVersionId = sourceVersionId;
            return this;
        }
        public StorageObjectSourceUriDetails build() {
            final var _resultValue = new StorageObjectSourceUriDetails();
            _resultValue.bucket = bucket;
            _resultValue.destinationObjectIfMatchEtag = destinationObjectIfMatchEtag;
            _resultValue.destinationObjectIfNoneMatchEtag = destinationObjectIfNoneMatchEtag;
            _resultValue.namespace = namespace;
            _resultValue.object = object;
            _resultValue.region = region;
            _resultValue.sourceObjectIfMatchEtag = sourceObjectIfMatchEtag;
            _resultValue.sourceVersionId = sourceVersionId;
            return _resultValue;
        }
    }
}
