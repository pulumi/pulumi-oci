// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Oce.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetOceInstanceResult {
    /**
     * @return a list of add-on features for the ocm instance
     * 
     */
    private @Nullable List<String> addOnFeatures;
    /**
     * @return Admin Email for Notification
     * 
     */
    private @Nullable String adminEmail;
    /**
     * @return Compartment Identifier
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return OceInstance description, can be updated
     * 
     */
    private @Nullable String description;
    /**
     * @return disaster recovery paired ragion name
     * 
     */
    private @Nullable String drRegion;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    /**
     * @return Unique GUID identifier that is immutable on creation
     * 
     */
    private @Nullable String guid;
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    private @Nullable String id;
    private @Nullable String idcsAccessToken;
    /**
     * @return IDCS Tenancy Identifier
     * 
     */
    private @Nullable String idcsTenancy;
    /**
     * @return Flag indicating whether the instance access is private or public
     * 
     */
    private @Nullable String instanceAccessType;
    /**
     * @return Flag indicating whether the instance license is new cloud or bring your own license
     * 
     */
    private @Nullable String instanceLicenseType;
    /**
     * @return Instance type based on its usage
     * 
     */
    private @Nullable String instanceUsageType;
    /**
     * @return Details of the current state of the instance lifecycle
     * 
     */
    private @Nullable String lifecycleDetails;
    /**
     * @return OceInstance Name
     * 
     */
    private @Nullable String name;
    /**
     * @return Object Storage Namespace of tenancy
     * 
     */
    private @Nullable String objectStorageNamespace;
    private String oceInstanceId;
    /**
     * @return SERVICE data. Example: `{&#34;service&#34;: {&#34;IDCS&#34;: &#34;value&#34;}}`
     * 
     */
    private @Nullable Map<String,Object> service;
    /**
     * @return The current state of the instance lifecycle.
     * 
     */
    private @Nullable String state;
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private @Nullable String stateMessage;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private @Nullable Map<String,Object> systemTags;
    /**
     * @return Tenancy Identifier
     * 
     */
    private @Nullable String tenancyId;
    /**
     * @return Tenancy Name
     * 
     */
    private @Nullable String tenancyName;
    /**
     * @return The time the the OceInstance was created. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The time the OceInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
     * 
     */
    private @Nullable String upgradeSchedule;
    /**
     * @return Web Application Firewall(WAF) primary domain
     * 
     */
    private @Nullable String wafPrimaryDomain;

    private GetOceInstanceResult() {}
    /**
     * @return a list of add-on features for the ocm instance
     * 
     */
    public List<String> addOnFeatures() {
        return this.addOnFeatures == null ? List.of() : this.addOnFeatures;
    }
    /**
     * @return Admin Email for Notification
     * 
     */
    public Optional<String> adminEmail() {
        return Optional.ofNullable(this.adminEmail);
    }
    /**
     * @return Compartment Identifier
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return OceInstance description, can be updated
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return disaster recovery paired ragion name
     * 
     */
    public Optional<String> drRegion() {
        return Optional.ofNullable(this.drRegion);
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    /**
     * @return Unique GUID identifier that is immutable on creation
     * 
     */
    public Optional<String> guid() {
        return Optional.ofNullable(this.guid);
    }
    /**
     * @return Unique identifier that is immutable on creation
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public Optional<String> idcsAccessToken() {
        return Optional.ofNullable(this.idcsAccessToken);
    }
    /**
     * @return IDCS Tenancy Identifier
     * 
     */
    public Optional<String> idcsTenancy() {
        return Optional.ofNullable(this.idcsTenancy);
    }
    /**
     * @return Flag indicating whether the instance access is private or public
     * 
     */
    public Optional<String> instanceAccessType() {
        return Optional.ofNullable(this.instanceAccessType);
    }
    /**
     * @return Flag indicating whether the instance license is new cloud or bring your own license
     * 
     */
    public Optional<String> instanceLicenseType() {
        return Optional.ofNullable(this.instanceLicenseType);
    }
    /**
     * @return Instance type based on its usage
     * 
     */
    public Optional<String> instanceUsageType() {
        return Optional.ofNullable(this.instanceUsageType);
    }
    /**
     * @return Details of the current state of the instance lifecycle
     * 
     */
    public Optional<String> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }
    /**
     * @return OceInstance Name
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Object Storage Namespace of tenancy
     * 
     */
    public Optional<String> objectStorageNamespace() {
        return Optional.ofNullable(this.objectStorageNamespace);
    }
    public String oceInstanceId() {
        return this.oceInstanceId;
    }
    /**
     * @return SERVICE data. Example: `{&#34;service&#34;: {&#34;IDCS&#34;: &#34;value&#34;}}`
     * 
     */
    public Map<String,Object> service() {
        return this.service == null ? Map.of() : this.service;
    }
    /**
     * @return The current state of the instance lifecycle.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<String> stateMessage() {
        return Optional.ofNullable(this.stateMessage);
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags == null ? Map.of() : this.systemTags;
    }
    /**
     * @return Tenancy Identifier
     * 
     */
    public Optional<String> tenancyId() {
        return Optional.ofNullable(this.tenancyId);
    }
    /**
     * @return Tenancy Name
     * 
     */
    public Optional<String> tenancyName() {
        return Optional.ofNullable(this.tenancyName);
    }
    /**
     * @return The time the the OceInstance was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The time the OceInstance was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
     * 
     */
    public Optional<String> upgradeSchedule() {
        return Optional.ofNullable(this.upgradeSchedule);
    }
    /**
     * @return Web Application Firewall(WAF) primary domain
     * 
     */
    public Optional<String> wafPrimaryDomain() {
        return Optional.ofNullable(this.wafPrimaryDomain);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOceInstanceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> addOnFeatures;
        private @Nullable String adminEmail;
        private @Nullable String compartmentId;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String description;
        private @Nullable String drRegion;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String guid;
        private @Nullable String id;
        private @Nullable String idcsAccessToken;
        private @Nullable String idcsTenancy;
        private @Nullable String instanceAccessType;
        private @Nullable String instanceLicenseType;
        private @Nullable String instanceUsageType;
        private @Nullable String lifecycleDetails;
        private @Nullable String name;
        private @Nullable String objectStorageNamespace;
        private String oceInstanceId;
        private @Nullable Map<String,Object> service;
        private @Nullable String state;
        private @Nullable String stateMessage;
        private @Nullable Map<String,Object> systemTags;
        private @Nullable String tenancyId;
        private @Nullable String tenancyName;
        private @Nullable String timeCreated;
        private @Nullable String timeUpdated;
        private @Nullable String upgradeSchedule;
        private @Nullable String wafPrimaryDomain;
        public Builder() {}
        public Builder(GetOceInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addOnFeatures = defaults.addOnFeatures;
    	      this.adminEmail = defaults.adminEmail;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.drRegion = defaults.drRegion;
    	      this.freeformTags = defaults.freeformTags;
    	      this.guid = defaults.guid;
    	      this.id = defaults.id;
    	      this.idcsAccessToken = defaults.idcsAccessToken;
    	      this.idcsTenancy = defaults.idcsTenancy;
    	      this.instanceAccessType = defaults.instanceAccessType;
    	      this.instanceLicenseType = defaults.instanceLicenseType;
    	      this.instanceUsageType = defaults.instanceUsageType;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.name = defaults.name;
    	      this.objectStorageNamespace = defaults.objectStorageNamespace;
    	      this.oceInstanceId = defaults.oceInstanceId;
    	      this.service = defaults.service;
    	      this.state = defaults.state;
    	      this.stateMessage = defaults.stateMessage;
    	      this.systemTags = defaults.systemTags;
    	      this.tenancyId = defaults.tenancyId;
    	      this.tenancyName = defaults.tenancyName;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.upgradeSchedule = defaults.upgradeSchedule;
    	      this.wafPrimaryDomain = defaults.wafPrimaryDomain;
        }

        @CustomType.Setter
        public Builder addOnFeatures(@Nullable List<String> addOnFeatures) {
            this.addOnFeatures = addOnFeatures;
            return this;
        }
        public Builder addOnFeatures(String... addOnFeatures) {
            return addOnFeatures(List.of(addOnFeatures));
        }
        @CustomType.Setter
        public Builder adminEmail(@Nullable String adminEmail) {
            this.adminEmail = adminEmail;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder drRegion(@Nullable String drRegion) {
            this.drRegion = drRegion;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder guid(@Nullable String guid) {
            this.guid = guid;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder idcsAccessToken(@Nullable String idcsAccessToken) {
            this.idcsAccessToken = idcsAccessToken;
            return this;
        }
        @CustomType.Setter
        public Builder idcsTenancy(@Nullable String idcsTenancy) {
            this.idcsTenancy = idcsTenancy;
            return this;
        }
        @CustomType.Setter
        public Builder instanceAccessType(@Nullable String instanceAccessType) {
            this.instanceAccessType = instanceAccessType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceLicenseType(@Nullable String instanceLicenseType) {
            this.instanceLicenseType = instanceLicenseType;
            return this;
        }
        @CustomType.Setter
        public Builder instanceUsageType(@Nullable String instanceUsageType) {
            this.instanceUsageType = instanceUsageType;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(@Nullable String lifecycleDetails) {
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder objectStorageNamespace(@Nullable String objectStorageNamespace) {
            this.objectStorageNamespace = objectStorageNamespace;
            return this;
        }
        @CustomType.Setter
        public Builder oceInstanceId(String oceInstanceId) {
            this.oceInstanceId = Objects.requireNonNull(oceInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder service(@Nullable Map<String,Object> service) {
            this.service = service;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder stateMessage(@Nullable String stateMessage) {
            this.stateMessage = stateMessage;
            return this;
        }
        @CustomType.Setter
        public Builder systemTags(@Nullable Map<String,Object> systemTags) {
            this.systemTags = systemTags;
            return this;
        }
        @CustomType.Setter
        public Builder tenancyId(@Nullable String tenancyId) {
            this.tenancyId = tenancyId;
            return this;
        }
        @CustomType.Setter
        public Builder tenancyName(@Nullable String tenancyName) {
            this.tenancyName = tenancyName;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder upgradeSchedule(@Nullable String upgradeSchedule) {
            this.upgradeSchedule = upgradeSchedule;
            return this;
        }
        @CustomType.Setter
        public Builder wafPrimaryDomain(@Nullable String wafPrimaryDomain) {
            this.wafPrimaryDomain = wafPrimaryDomain;
            return this;
        }
        public GetOceInstanceResult build() {
            final var o = new GetOceInstanceResult();
            o.addOnFeatures = addOnFeatures;
            o.adminEmail = adminEmail;
            o.compartmentId = compartmentId;
            o.definedTags = definedTags;
            o.description = description;
            o.drRegion = drRegion;
            o.freeformTags = freeformTags;
            o.guid = guid;
            o.id = id;
            o.idcsAccessToken = idcsAccessToken;
            o.idcsTenancy = idcsTenancy;
            o.instanceAccessType = instanceAccessType;
            o.instanceLicenseType = instanceLicenseType;
            o.instanceUsageType = instanceUsageType;
            o.lifecycleDetails = lifecycleDetails;
            o.name = name;
            o.objectStorageNamespace = objectStorageNamespace;
            o.oceInstanceId = oceInstanceId;
            o.service = service;
            o.state = state;
            o.stateMessage = stateMessage;
            o.systemTags = systemTags;
            o.tenancyId = tenancyId;
            o.tenancyName = tenancyName;
            o.timeCreated = timeCreated;
            o.timeUpdated = timeUpdated;
            o.upgradeSchedule = upgradeSchedule;
            o.wafPrimaryDomain = wafPrimaryDomain;
            return o;
        }
    }
}
