// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Ocvp.inputs.GetSupportedHostShapesFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSupportedHostShapesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSupportedHostShapesArgs Empty = new GetSupportedHostShapesArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetSupportedHostShapesFilterArgs>> filters;

    public Optional<Output<List<GetSupportedHostShapesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only the shapes compatible with the initial host shape of the Cluster.
     * 
     */
    @Import(name="initialHostShapeName")
    private @Nullable Output<String> initialHostShapeName;

    /**
     * @return A filter to return only the shapes compatible with the initial host shape of the Cluster.
     * 
     */
    public Optional<Output<String>> initialHostShapeName() {
        return Optional.ofNullable(this.initialHostShapeName);
    }

    /**
     * A filter to return only resources that support single host SDDC.
     * 
     */
    @Import(name="isSingleHostSddcSupported")
    private @Nullable Output<Boolean> isSingleHostSddcSupported;

    /**
     * @return A filter to return only resources that support single host SDDC.
     * 
     */
    public Optional<Output<Boolean>> isSingleHostSddcSupported() {
        return Optional.ofNullable(this.isSingleHostSddcSupported);
    }

    /**
     * A filter to return only resources that match the given name exactly.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Optional) A filter to return only resources that match the given SDDC type exactly.
     * 
     * @deprecated
     * The &#39;sddc_type&#39; field has been deprecated. Please use &#39;is_single_host_sddc_supported&#39; instead.
     * 
     */
    @Deprecated /* The 'sddc_type' field has been deprecated. Please use 'is_single_host_sddc_supported' instead. */
    @Import(name="sddcType")
    private @Nullable Output<String> sddcType;

    /**
     * @return (Optional) A filter to return only resources that match the given SDDC type exactly.
     * 
     * @deprecated
     * The &#39;sddc_type&#39; field has been deprecated. Please use &#39;is_single_host_sddc_supported&#39; instead.
     * 
     */
    @Deprecated /* The 'sddc_type' field has been deprecated. Please use 'is_single_host_sddc_supported' instead. */
    public Optional<Output<String>> sddcType() {
        return Optional.ofNullable(this.sddcType);
    }

    private GetSupportedHostShapesArgs() {}

    private GetSupportedHostShapesArgs(GetSupportedHostShapesArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.initialHostShapeName = $.initialHostShapeName;
        this.isSingleHostSddcSupported = $.isSingleHostSddcSupported;
        this.name = $.name;
        this.sddcType = $.sddcType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSupportedHostShapesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSupportedHostShapesArgs $;

        public Builder() {
            $ = new GetSupportedHostShapesArgs();
        }

        public Builder(GetSupportedHostShapesArgs defaults) {
            $ = new GetSupportedHostShapesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(@Nullable Output<List<GetSupportedHostShapesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetSupportedHostShapesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSupportedHostShapesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param initialHostShapeName A filter to return only the shapes compatible with the initial host shape of the Cluster.
         * 
         * @return builder
         * 
         */
        public Builder initialHostShapeName(@Nullable Output<String> initialHostShapeName) {
            $.initialHostShapeName = initialHostShapeName;
            return this;
        }

        /**
         * @param initialHostShapeName A filter to return only the shapes compatible with the initial host shape of the Cluster.
         * 
         * @return builder
         * 
         */
        public Builder initialHostShapeName(String initialHostShapeName) {
            return initialHostShapeName(Output.of(initialHostShapeName));
        }

        /**
         * @param isSingleHostSddcSupported A filter to return only resources that support single host SDDC.
         * 
         * @return builder
         * 
         */
        public Builder isSingleHostSddcSupported(@Nullable Output<Boolean> isSingleHostSddcSupported) {
            $.isSingleHostSddcSupported = isSingleHostSddcSupported;
            return this;
        }

        /**
         * @param isSingleHostSddcSupported A filter to return only resources that support single host SDDC.
         * 
         * @return builder
         * 
         */
        public Builder isSingleHostSddcSupported(Boolean isSingleHostSddcSupported) {
            return isSingleHostSddcSupported(Output.of(isSingleHostSddcSupported));
        }

        /**
         * @param name A filter to return only resources that match the given name exactly.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A filter to return only resources that match the given name exactly.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sddcType (Optional) A filter to return only resources that match the given SDDC type exactly.
         * 
         * @return builder
         * 
         * @deprecated
         * The &#39;sddc_type&#39; field has been deprecated. Please use &#39;is_single_host_sddc_supported&#39; instead.
         * 
         */
        @Deprecated /* The 'sddc_type' field has been deprecated. Please use 'is_single_host_sddc_supported' instead. */
        public Builder sddcType(@Nullable Output<String> sddcType) {
            $.sddcType = sddcType;
            return this;
        }

        /**
         * @param sddcType (Optional) A filter to return only resources that match the given SDDC type exactly.
         * 
         * @return builder
         * 
         * @deprecated
         * The &#39;sddc_type&#39; field has been deprecated. Please use &#39;is_single_host_sddc_supported&#39; instead.
         * 
         */
        @Deprecated /* The 'sddc_type' field has been deprecated. Please use 'is_single_host_sddc_supported' instead. */
        public Builder sddcType(String sddcType) {
            return sddcType(Output.of(sddcType));
        }

        public GetSupportedHostShapesArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetSupportedHostShapesArgs", "compartmentId");
            }
            return $;
        }
    }

}
