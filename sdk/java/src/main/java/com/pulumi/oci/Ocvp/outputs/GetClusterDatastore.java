// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetClusterDatastore {
    /**
     * @return A list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of Block Storage Volumes.
     * 
     */
    private List<String> blockVolumeIds;
    /**
     * @return Size of the Block Storage Volume in GB.
     * 
     */
    private Double capacity;
    /**
     * @return Type of the datastore.
     * 
     */
    private String datastoreType;

    private GetClusterDatastore() {}
    /**
     * @return A list of [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of Block Storage Volumes.
     * 
     */
    public List<String> blockVolumeIds() {
        return this.blockVolumeIds;
    }
    /**
     * @return Size of the Block Storage Volume in GB.
     * 
     */
    public Double capacity() {
        return this.capacity;
    }
    /**
     * @return Type of the datastore.
     * 
     */
    public String datastoreType() {
        return this.datastoreType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterDatastore defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> blockVolumeIds;
        private Double capacity;
        private String datastoreType;
        public Builder() {}
        public Builder(GetClusterDatastore defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockVolumeIds = defaults.blockVolumeIds;
    	      this.capacity = defaults.capacity;
    	      this.datastoreType = defaults.datastoreType;
        }

        @CustomType.Setter
        public Builder blockVolumeIds(List<String> blockVolumeIds) {
            if (blockVolumeIds == null) {
              throw new MissingRequiredPropertyException("GetClusterDatastore", "blockVolumeIds");
            }
            this.blockVolumeIds = blockVolumeIds;
            return this;
        }
        public Builder blockVolumeIds(String... blockVolumeIds) {
            return blockVolumeIds(List.of(blockVolumeIds));
        }
        @CustomType.Setter
        public Builder capacity(Double capacity) {
            if (capacity == null) {
              throw new MissingRequiredPropertyException("GetClusterDatastore", "capacity");
            }
            this.capacity = capacity;
            return this;
        }
        @CustomType.Setter
        public Builder datastoreType(String datastoreType) {
            if (datastoreType == null) {
              throw new MissingRequiredPropertyException("GetClusterDatastore", "datastoreType");
            }
            this.datastoreType = datastoreType;
            return this;
        }
        public GetClusterDatastore build() {
            final var _resultValue = new GetClusterDatastore();
            _resultValue.blockVolumeIds = blockVolumeIds;
            _resultValue.capacity = capacity;
            _resultValue.datastoreType = datastoreType;
            return _resultValue;
        }
    }
}
