// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetExsiHostsEsxiHostCollection {
    /**
     * @return Current billing cycle end date. If the value in `currentCommitment` and `nextCommitment` are different, the value specified in `nextCommitment` becomes the new `currentCommitment` when the `contractEndDate` is reached. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String billingContractEndDate;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deleted ESXi Host with LeftOver billing cycle.
     * 
     * @deprecated
     * This &#39;billing_donor_host_id&#39; argument has been deprecated and will be computed only.
     * 
     */
    @Deprecated /* This 'billing_donor_host_id' argument has been deprecated and will be computed only. */
    private String billingDonorHostId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
     * 
     */
    private String capacityReservationId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cluster.
     * 
     */
    private String clusterId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment as optional parameter.
     * 
     */
    private String compartmentId;
    /**
     * @return The availability domain of the ESXi host.
     * 
     */
    private String computeAvailabilityDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute instance.
     * 
     */
    private String computeInstanceId;
    /**
     * @return The billing option currently used by the ESXi host. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedCommitmentSummary/ListSupportedCommitments).
     * 
     */
    private String currentCommitment;
    /**
     * @return (**Deprecated**) The billing option currently used by the ESXi host. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).  **Deprecated**. Please use `current_commitment` instead.
     * 
     * @deprecated
     * The &#39;current_sku&#39; field has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'current_sku' field has been deprecated. It is no longer supported. */
    private String currentSku;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private String displayName;
    /**
     * @return The version of ESXi software that Oracle Cloud VMware Solution installed on the ESXi hosts.
     * 
     */
    private String esxiSoftwareVersion;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host that failed.
     * 
     * @deprecated
     * This &#39;failed_esxi_host_id&#39; argument has been deprecated and will be computed only.
     * 
     */
    @Deprecated /* This 'failed_esxi_host_id' argument has been deprecated and will be computed only. */
    private String failedEsxiHostId;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    /**
     * @return The date and time when the new esxi host should start billing cycle. [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2021-07-25T21:10:29.600Z`
     * 
     */
    private String gracePeriodEndDate;
    /**
     * @return The OCPU count of the ESXi host.
     * 
     */
    private Double hostOcpuCount;
    /**
     * @return The compute shape name of the ESXi host. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedHostShapes/ListSupportedHostShapes).
     * 
     */
    private String hostShapeName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host.
     * 
     */
    private String id;
    /**
     * @return Indicates whether this host is in the progress of billing continuation.
     * 
     */
    private Boolean isBillingContinuationInProgress;
    /**
     * @return Indicates whether this host is in the progress of swapping billing.
     * 
     */
    private Boolean isBillingSwappingInProgress;
    /**
     * @return The billing option to switch to after the current billing cycle ends. If `nextCommitment` is null or empty, `currentCommitment` continues to the next billing cycle. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedCommitmentSummary/ListSupportedCommitments).
     * 
     */
    private String nextCommitment;
    /**
     * @return (**Deprecated**) The billing option to switch to after the current billing cycle ends. If `nextSku` is null or empty, `currentSku` continues to the next billing cycle. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).  **Deprecated**. Please use `next_commitment` instead.
     * 
     * @deprecated
     * The &#39;next_sku&#39; field has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'next_sku' field has been deprecated. It is no longer supported. */
    private String nextSku;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host that will be upgraded.
     * 
     * @deprecated
     * This &#39;non_upgraded_esxi_host_id&#39; argument has been deprecated and will be computed only.
     * 
     */
    @Deprecated /* This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only. */
    private String nonUpgradedEsxiHostId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the esxi host that is newly created to replace the failed node.
     * 
     */
    private String replacementEsxiHostId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
     * 
     * @deprecated
     * The &#39;sddc_id&#39; field has been deprecated. Please use &#39;cluster_id&#39; instead.
     * 
     */
    @Deprecated /* The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead. */
    private String sddcId;
    /**
     * @return The lifecycle state of the resource.
     * 
     */
    private String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the active ESXi Host to swap billing with current host.
     * 
     */
    private String swapBillingHostId;
    /**
     * @return The date and time the ESXi host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the ESXi host was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeUpdated;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host that is newly created to upgrade the original host.
     * 
     */
    private String upgradedReplacementEsxiHostId;
    /**
     * @return The version of VMware software that Oracle Cloud VMware Solution installed on the ESXi hosts.
     * 
     */
    private String vmwareSoftwareVersion;

    private GetExsiHostsEsxiHostCollection() {}
    /**
     * @return Current billing cycle end date. If the value in `currentCommitment` and `nextCommitment` are different, the value specified in `nextCommitment` becomes the new `currentCommitment` when the `contractEndDate` is reached. Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String billingContractEndDate() {
        return this.billingContractEndDate;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the deleted ESXi Host with LeftOver billing cycle.
     * 
     * @deprecated
     * This &#39;billing_donor_host_id&#39; argument has been deprecated and will be computed only.
     * 
     */
    @Deprecated /* This 'billing_donor_host_id' argument has been deprecated and will be computed only. */
    public String billingDonorHostId() {
        return this.billingDonorHostId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
     * 
     */
    public String capacityReservationId() {
        return this.capacityReservationId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Cluster.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment as optional parameter.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The availability domain of the ESXi host.
     * 
     */
    public String computeAvailabilityDomain() {
        return this.computeAvailabilityDomain;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Compute instance.
     * 
     */
    public String computeInstanceId() {
        return this.computeInstanceId;
    }
    /**
     * @return The billing option currently used by the ESXi host. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedCommitmentSummary/ListSupportedCommitments).
     * 
     */
    public String currentCommitment() {
        return this.currentCommitment;
    }
    /**
     * @return (**Deprecated**) The billing option currently used by the ESXi host. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).  **Deprecated**. Please use `current_commitment` instead.
     * 
     * @deprecated
     * The &#39;current_sku&#39; field has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'current_sku' field has been deprecated. It is no longer supported. */
    public String currentSku() {
        return this.currentSku;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The version of ESXi software that Oracle Cloud VMware Solution installed on the ESXi hosts.
     * 
     */
    public String esxiSoftwareVersion() {
        return this.esxiSoftwareVersion;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host that failed.
     * 
     * @deprecated
     * This &#39;failed_esxi_host_id&#39; argument has been deprecated and will be computed only.
     * 
     */
    @Deprecated /* This 'failed_esxi_host_id' argument has been deprecated and will be computed only. */
    public String failedEsxiHostId() {
        return this.failedEsxiHostId;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The date and time when the new esxi host should start billing cycle. [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2021-07-25T21:10:29.600Z`
     * 
     */
    public String gracePeriodEndDate() {
        return this.gracePeriodEndDate;
    }
    /**
     * @return The OCPU count of the ESXi host.
     * 
     */
    public Double hostOcpuCount() {
        return this.hostOcpuCount;
    }
    /**
     * @return The compute shape name of the ESXi host. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedHostShapes/ListSupportedHostShapes).
     * 
     */
    public String hostShapeName() {
        return this.hostShapeName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether this host is in the progress of billing continuation.
     * 
     */
    public Boolean isBillingContinuationInProgress() {
        return this.isBillingContinuationInProgress;
    }
    /**
     * @return Indicates whether this host is in the progress of swapping billing.
     * 
     */
    public Boolean isBillingSwappingInProgress() {
        return this.isBillingSwappingInProgress;
    }
    /**
     * @return The billing option to switch to after the current billing cycle ends. If `nextCommitment` is null or empty, `currentCommitment` continues to the next billing cycle. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedCommitmentSummary/ListSupportedCommitments).
     * 
     */
    public String nextCommitment() {
        return this.nextCommitment;
    }
    /**
     * @return (**Deprecated**) The billing option to switch to after the current billing cycle ends. If `nextSku` is null or empty, `currentSku` continues to the next billing cycle. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).  **Deprecated**. Please use `next_commitment` instead.
     * 
     * @deprecated
     * The &#39;next_sku&#39; field has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'next_sku' field has been deprecated. It is no longer supported. */
    public String nextSku() {
        return this.nextSku;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host that will be upgraded.
     * 
     * @deprecated
     * This &#39;non_upgraded_esxi_host_id&#39; argument has been deprecated and will be computed only.
     * 
     */
    @Deprecated /* This 'non_upgraded_esxi_host_id' argument has been deprecated and will be computed only. */
    public String nonUpgradedEsxiHostId() {
        return this.nonUpgradedEsxiHostId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the esxi host that is newly created to replace the failed node.
     * 
     */
    public String replacementEsxiHostId() {
        return this.replacementEsxiHostId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
     * 
     * @deprecated
     * The &#39;sddc_id&#39; field has been deprecated. Please use &#39;cluster_id&#39; instead.
     * 
     */
    @Deprecated /* The 'sddc_id' field has been deprecated. Please use 'cluster_id' instead. */
    public String sddcId() {
        return this.sddcId;
    }
    /**
     * @return The lifecycle state of the resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the active ESXi Host to swap billing with current host.
     * 
     */
    public String swapBillingHostId() {
        return this.swapBillingHostId;
    }
    /**
     * @return The date and time the ESXi host was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the ESXi host was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the ESXi host that is newly created to upgrade the original host.
     * 
     */
    public String upgradedReplacementEsxiHostId() {
        return this.upgradedReplacementEsxiHostId;
    }
    /**
     * @return The version of VMware software that Oracle Cloud VMware Solution installed on the ESXi hosts.
     * 
     */
    public String vmwareSoftwareVersion() {
        return this.vmwareSoftwareVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExsiHostsEsxiHostCollection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String billingContractEndDate;
        private String billingDonorHostId;
        private String capacityReservationId;
        private String clusterId;
        private String compartmentId;
        private String computeAvailabilityDomain;
        private String computeInstanceId;
        private String currentCommitment;
        private String currentSku;
        private Map<String,Object> definedTags;
        private String displayName;
        private String esxiSoftwareVersion;
        private String failedEsxiHostId;
        private Map<String,Object> freeformTags;
        private String gracePeriodEndDate;
        private Double hostOcpuCount;
        private String hostShapeName;
        private String id;
        private Boolean isBillingContinuationInProgress;
        private Boolean isBillingSwappingInProgress;
        private String nextCommitment;
        private String nextSku;
        private String nonUpgradedEsxiHostId;
        private String replacementEsxiHostId;
        private String sddcId;
        private String state;
        private String swapBillingHostId;
        private String timeCreated;
        private String timeUpdated;
        private String upgradedReplacementEsxiHostId;
        private String vmwareSoftwareVersion;
        public Builder() {}
        public Builder(GetExsiHostsEsxiHostCollection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingContractEndDate = defaults.billingContractEndDate;
    	      this.billingDonorHostId = defaults.billingDonorHostId;
    	      this.capacityReservationId = defaults.capacityReservationId;
    	      this.clusterId = defaults.clusterId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeAvailabilityDomain = defaults.computeAvailabilityDomain;
    	      this.computeInstanceId = defaults.computeInstanceId;
    	      this.currentCommitment = defaults.currentCommitment;
    	      this.currentSku = defaults.currentSku;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.esxiSoftwareVersion = defaults.esxiSoftwareVersion;
    	      this.failedEsxiHostId = defaults.failedEsxiHostId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.gracePeriodEndDate = defaults.gracePeriodEndDate;
    	      this.hostOcpuCount = defaults.hostOcpuCount;
    	      this.hostShapeName = defaults.hostShapeName;
    	      this.id = defaults.id;
    	      this.isBillingContinuationInProgress = defaults.isBillingContinuationInProgress;
    	      this.isBillingSwappingInProgress = defaults.isBillingSwappingInProgress;
    	      this.nextCommitment = defaults.nextCommitment;
    	      this.nextSku = defaults.nextSku;
    	      this.nonUpgradedEsxiHostId = defaults.nonUpgradedEsxiHostId;
    	      this.replacementEsxiHostId = defaults.replacementEsxiHostId;
    	      this.sddcId = defaults.sddcId;
    	      this.state = defaults.state;
    	      this.swapBillingHostId = defaults.swapBillingHostId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.upgradedReplacementEsxiHostId = defaults.upgradedReplacementEsxiHostId;
    	      this.vmwareSoftwareVersion = defaults.vmwareSoftwareVersion;
        }

        @CustomType.Setter
        public Builder billingContractEndDate(String billingContractEndDate) {
            this.billingContractEndDate = Objects.requireNonNull(billingContractEndDate);
            return this;
        }
        @CustomType.Setter
        public Builder billingDonorHostId(String billingDonorHostId) {
            this.billingDonorHostId = Objects.requireNonNull(billingDonorHostId);
            return this;
        }
        @CustomType.Setter
        public Builder capacityReservationId(String capacityReservationId) {
            this.capacityReservationId = Objects.requireNonNull(capacityReservationId);
            return this;
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder computeAvailabilityDomain(String computeAvailabilityDomain) {
            this.computeAvailabilityDomain = Objects.requireNonNull(computeAvailabilityDomain);
            return this;
        }
        @CustomType.Setter
        public Builder computeInstanceId(String computeInstanceId) {
            this.computeInstanceId = Objects.requireNonNull(computeInstanceId);
            return this;
        }
        @CustomType.Setter
        public Builder currentCommitment(String currentCommitment) {
            this.currentCommitment = Objects.requireNonNull(currentCommitment);
            return this;
        }
        @CustomType.Setter
        public Builder currentSku(String currentSku) {
            this.currentSku = Objects.requireNonNull(currentSku);
            return this;
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder esxiSoftwareVersion(String esxiSoftwareVersion) {
            this.esxiSoftwareVersion = Objects.requireNonNull(esxiSoftwareVersion);
            return this;
        }
        @CustomType.Setter
        public Builder failedEsxiHostId(String failedEsxiHostId) {
            this.failedEsxiHostId = Objects.requireNonNull(failedEsxiHostId);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder gracePeriodEndDate(String gracePeriodEndDate) {
            this.gracePeriodEndDate = Objects.requireNonNull(gracePeriodEndDate);
            return this;
        }
        @CustomType.Setter
        public Builder hostOcpuCount(Double hostOcpuCount) {
            this.hostOcpuCount = Objects.requireNonNull(hostOcpuCount);
            return this;
        }
        @CustomType.Setter
        public Builder hostShapeName(String hostShapeName) {
            this.hostShapeName = Objects.requireNonNull(hostShapeName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder isBillingContinuationInProgress(Boolean isBillingContinuationInProgress) {
            this.isBillingContinuationInProgress = Objects.requireNonNull(isBillingContinuationInProgress);
            return this;
        }
        @CustomType.Setter
        public Builder isBillingSwappingInProgress(Boolean isBillingSwappingInProgress) {
            this.isBillingSwappingInProgress = Objects.requireNonNull(isBillingSwappingInProgress);
            return this;
        }
        @CustomType.Setter
        public Builder nextCommitment(String nextCommitment) {
            this.nextCommitment = Objects.requireNonNull(nextCommitment);
            return this;
        }
        @CustomType.Setter
        public Builder nextSku(String nextSku) {
            this.nextSku = Objects.requireNonNull(nextSku);
            return this;
        }
        @CustomType.Setter
        public Builder nonUpgradedEsxiHostId(String nonUpgradedEsxiHostId) {
            this.nonUpgradedEsxiHostId = Objects.requireNonNull(nonUpgradedEsxiHostId);
            return this;
        }
        @CustomType.Setter
        public Builder replacementEsxiHostId(String replacementEsxiHostId) {
            this.replacementEsxiHostId = Objects.requireNonNull(replacementEsxiHostId);
            return this;
        }
        @CustomType.Setter
        public Builder sddcId(String sddcId) {
            this.sddcId = Objects.requireNonNull(sddcId);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder swapBillingHostId(String swapBillingHostId) {
            this.swapBillingHostId = Objects.requireNonNull(swapBillingHostId);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder upgradedReplacementEsxiHostId(String upgradedReplacementEsxiHostId) {
            this.upgradedReplacementEsxiHostId = Objects.requireNonNull(upgradedReplacementEsxiHostId);
            return this;
        }
        @CustomType.Setter
        public Builder vmwareSoftwareVersion(String vmwareSoftwareVersion) {
            this.vmwareSoftwareVersion = Objects.requireNonNull(vmwareSoftwareVersion);
            return this;
        }
        public GetExsiHostsEsxiHostCollection build() {
            final var _resultValue = new GetExsiHostsEsxiHostCollection();
            _resultValue.billingContractEndDate = billingContractEndDate;
            _resultValue.billingDonorHostId = billingDonorHostId;
            _resultValue.capacityReservationId = capacityReservationId;
            _resultValue.clusterId = clusterId;
            _resultValue.compartmentId = compartmentId;
            _resultValue.computeAvailabilityDomain = computeAvailabilityDomain;
            _resultValue.computeInstanceId = computeInstanceId;
            _resultValue.currentCommitment = currentCommitment;
            _resultValue.currentSku = currentSku;
            _resultValue.definedTags = definedTags;
            _resultValue.displayName = displayName;
            _resultValue.esxiSoftwareVersion = esxiSoftwareVersion;
            _resultValue.failedEsxiHostId = failedEsxiHostId;
            _resultValue.freeformTags = freeformTags;
            _resultValue.gracePeriodEndDate = gracePeriodEndDate;
            _resultValue.hostOcpuCount = hostOcpuCount;
            _resultValue.hostShapeName = hostShapeName;
            _resultValue.id = id;
            _resultValue.isBillingContinuationInProgress = isBillingContinuationInProgress;
            _resultValue.isBillingSwappingInProgress = isBillingSwappingInProgress;
            _resultValue.nextCommitment = nextCommitment;
            _resultValue.nextSku = nextSku;
            _resultValue.nonUpgradedEsxiHostId = nonUpgradedEsxiHostId;
            _resultValue.replacementEsxiHostId = replacementEsxiHostId;
            _resultValue.sddcId = sddcId;
            _resultValue.state = state;
            _resultValue.swapBillingHostId = swapBillingHostId;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeUpdated = timeUpdated;
            _resultValue.upgradedReplacementEsxiHostId = upgradedReplacementEsxiHostId;
            _resultValue.vmwareSoftwareVersion = vmwareSoftwareVersion;
            return _resultValue;
        }
    }
}
