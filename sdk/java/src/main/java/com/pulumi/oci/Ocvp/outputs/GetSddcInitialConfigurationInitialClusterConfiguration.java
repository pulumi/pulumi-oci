// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Ocvp.outputs.GetSddcInitialConfigurationInitialClusterConfigurationDatastore;
import com.pulumi.oci.Ocvp.outputs.GetSddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSddcInitialConfigurationInitialClusterConfiguration {
    /**
     * @return (**Deprecated**) The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC. **Deprecated**. Please use `actualEsxiHostsCount` of `initialClusterConfigurations` instead.
     * 
     */
    private Integer actualEsxiHostsCount;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
     * 
     */
    private String capacityReservationId;
    /**
     * @return The availability domain to create the Cluster&#39;s ESXi hosts in. For multi-AD Cluster deployment, set to `multi-AD`.
     * 
     */
    private String computeAvailabilityDomain;
    /**
     * @return A list of datastore info for the Cluster. This value is required only when `initialHostShapeName` is a standard shape.
     * 
     */
    private List<GetSddcInitialConfigurationInitialClusterConfigurationDatastore> datastores;
    /**
     * @return A descriptive name for the Cluster. Cluster name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
     * 
     */
    private String displayName;
    /**
     * @return The number of ESXi hosts to create in the Cluster. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)). Creating a Cluster with a ESXi host count of 1 will be considered a single ESXi host Cluster.
     * 
     */
    private Integer esxiHostsCount;
    /**
     * @return The billing option selected during Cluster creation. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedCommitmentSummary/ListSupportedCommitments).
     * 
     */
    private String initialCommitment;
    /**
     * @return (**Deprecated**) The initial OCPU count of the SDDC&#39;s ESXi hosts. **Deprecated**. Please use `initialHostOcpuCount` of `initialClusterConfigurations` instead.
     * 
     */
    private Double initialHostOcpuCount;
    /**
     * @return (**Deprecated**) The initial compute shape of the SDDC&#39;s ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes). **Deprecated**. Please use `initialHostShapeName` of `initialClusterConfigurations` instead.
     * 
     */
    private String initialHostShapeName;
    /**
     * @return (**Deprecated**) A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn&#39;t set, the SDDC&#39;s `displayName` is used as the prefix.
     * 
     */
    private String instanceDisplayNamePrefix;
    /**
     * @return (**Deprecated**) Indicates whether shielded instance is enabled at the SDDC level. **Deprecated**. Please use `isShieldedInstanceEnabled` of `initialClusterConfigurations` instead.
     * 
     */
    private Boolean isShieldedInstanceEnabled;
    /**
     * @return The network configurations used by Cluster, including [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet and VLANs.
     * 
     */
    private List<GetSddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration> networkConfigurations;
    /**
     * @return vSphere Cluster types.
     * 
     */
    private String vsphereType;
    /**
     * @return (**Deprecated**) The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads. **Deprecated**. Please use `workloadNetworkCidr` of `initialClusterConfigurations` instead.
     * 
     */
    private String workloadNetworkCidr;

    private GetSddcInitialConfigurationInitialClusterConfiguration() {}
    /**
     * @return (**Deprecated**) The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC. **Deprecated**. Please use `actualEsxiHostsCount` of `initialClusterConfigurations` instead.
     * 
     */
    public Integer actualEsxiHostsCount() {
        return this.actualEsxiHostsCount;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
     * 
     */
    public String capacityReservationId() {
        return this.capacityReservationId;
    }
    /**
     * @return The availability domain to create the Cluster&#39;s ESXi hosts in. For multi-AD Cluster deployment, set to `multi-AD`.
     * 
     */
    public String computeAvailabilityDomain() {
        return this.computeAvailabilityDomain;
    }
    /**
     * @return A list of datastore info for the Cluster. This value is required only when `initialHostShapeName` is a standard shape.
     * 
     */
    public List<GetSddcInitialConfigurationInitialClusterConfigurationDatastore> datastores() {
        return this.datastores;
    }
    /**
     * @return A descriptive name for the Cluster. Cluster name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The number of ESXi hosts to create in the Cluster. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)). Creating a Cluster with a ESXi host count of 1 will be considered a single ESXi host Cluster.
     * 
     */
    public Integer esxiHostsCount() {
        return this.esxiHostsCount;
    }
    /**
     * @return The billing option selected during Cluster creation. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedCommitmentSummary/ListSupportedCommitments).
     * 
     */
    public String initialCommitment() {
        return this.initialCommitment;
    }
    /**
     * @return (**Deprecated**) The initial OCPU count of the SDDC&#39;s ESXi hosts. **Deprecated**. Please use `initialHostOcpuCount` of `initialClusterConfigurations` instead.
     * 
     */
    public Double initialHostOcpuCount() {
        return this.initialHostOcpuCount;
    }
    /**
     * @return (**Deprecated**) The initial compute shape of the SDDC&#39;s ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes). **Deprecated**. Please use `initialHostShapeName` of `initialClusterConfigurations` instead.
     * 
     */
    public String initialHostShapeName() {
        return this.initialHostShapeName;
    }
    /**
     * @return (**Deprecated**) A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn&#39;t set, the SDDC&#39;s `displayName` is used as the prefix.
     * 
     */
    public String instanceDisplayNamePrefix() {
        return this.instanceDisplayNamePrefix;
    }
    /**
     * @return (**Deprecated**) Indicates whether shielded instance is enabled at the SDDC level. **Deprecated**. Please use `isShieldedInstanceEnabled` of `initialClusterConfigurations` instead.
     * 
     */
    public Boolean isShieldedInstanceEnabled() {
        return this.isShieldedInstanceEnabled;
    }
    /**
     * @return The network configurations used by Cluster, including [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet and VLANs.
     * 
     */
    public List<GetSddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration> networkConfigurations() {
        return this.networkConfigurations;
    }
    /**
     * @return vSphere Cluster types.
     * 
     */
    public String vsphereType() {
        return this.vsphereType;
    }
    /**
     * @return (**Deprecated**) The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads. **Deprecated**. Please use `workloadNetworkCidr` of `initialClusterConfigurations` instead.
     * 
     */
    public String workloadNetworkCidr() {
        return this.workloadNetworkCidr;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSddcInitialConfigurationInitialClusterConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer actualEsxiHostsCount;
        private String capacityReservationId;
        private String computeAvailabilityDomain;
        private List<GetSddcInitialConfigurationInitialClusterConfigurationDatastore> datastores;
        private String displayName;
        private Integer esxiHostsCount;
        private String initialCommitment;
        private Double initialHostOcpuCount;
        private String initialHostShapeName;
        private String instanceDisplayNamePrefix;
        private Boolean isShieldedInstanceEnabled;
        private List<GetSddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration> networkConfigurations;
        private String vsphereType;
        private String workloadNetworkCidr;
        public Builder() {}
        public Builder(GetSddcInitialConfigurationInitialClusterConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actualEsxiHostsCount = defaults.actualEsxiHostsCount;
    	      this.capacityReservationId = defaults.capacityReservationId;
    	      this.computeAvailabilityDomain = defaults.computeAvailabilityDomain;
    	      this.datastores = defaults.datastores;
    	      this.displayName = defaults.displayName;
    	      this.esxiHostsCount = defaults.esxiHostsCount;
    	      this.initialCommitment = defaults.initialCommitment;
    	      this.initialHostOcpuCount = defaults.initialHostOcpuCount;
    	      this.initialHostShapeName = defaults.initialHostShapeName;
    	      this.instanceDisplayNamePrefix = defaults.instanceDisplayNamePrefix;
    	      this.isShieldedInstanceEnabled = defaults.isShieldedInstanceEnabled;
    	      this.networkConfigurations = defaults.networkConfigurations;
    	      this.vsphereType = defaults.vsphereType;
    	      this.workloadNetworkCidr = defaults.workloadNetworkCidr;
        }

        @CustomType.Setter
        public Builder actualEsxiHostsCount(Integer actualEsxiHostsCount) {
            if (actualEsxiHostsCount == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "actualEsxiHostsCount");
            }
            this.actualEsxiHostsCount = actualEsxiHostsCount;
            return this;
        }
        @CustomType.Setter
        public Builder capacityReservationId(String capacityReservationId) {
            if (capacityReservationId == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "capacityReservationId");
            }
            this.capacityReservationId = capacityReservationId;
            return this;
        }
        @CustomType.Setter
        public Builder computeAvailabilityDomain(String computeAvailabilityDomain) {
            if (computeAvailabilityDomain == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "computeAvailabilityDomain");
            }
            this.computeAvailabilityDomain = computeAvailabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder datastores(List<GetSddcInitialConfigurationInitialClusterConfigurationDatastore> datastores) {
            if (datastores == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "datastores");
            }
            this.datastores = datastores;
            return this;
        }
        public Builder datastores(GetSddcInitialConfigurationInitialClusterConfigurationDatastore... datastores) {
            return datastores(List.of(datastores));
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder esxiHostsCount(Integer esxiHostsCount) {
            if (esxiHostsCount == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "esxiHostsCount");
            }
            this.esxiHostsCount = esxiHostsCount;
            return this;
        }
        @CustomType.Setter
        public Builder initialCommitment(String initialCommitment) {
            if (initialCommitment == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "initialCommitment");
            }
            this.initialCommitment = initialCommitment;
            return this;
        }
        @CustomType.Setter
        public Builder initialHostOcpuCount(Double initialHostOcpuCount) {
            if (initialHostOcpuCount == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "initialHostOcpuCount");
            }
            this.initialHostOcpuCount = initialHostOcpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder initialHostShapeName(String initialHostShapeName) {
            if (initialHostShapeName == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "initialHostShapeName");
            }
            this.initialHostShapeName = initialHostShapeName;
            return this;
        }
        @CustomType.Setter
        public Builder instanceDisplayNamePrefix(String instanceDisplayNamePrefix) {
            if (instanceDisplayNamePrefix == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "instanceDisplayNamePrefix");
            }
            this.instanceDisplayNamePrefix = instanceDisplayNamePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder isShieldedInstanceEnabled(Boolean isShieldedInstanceEnabled) {
            if (isShieldedInstanceEnabled == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "isShieldedInstanceEnabled");
            }
            this.isShieldedInstanceEnabled = isShieldedInstanceEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder networkConfigurations(List<GetSddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration> networkConfigurations) {
            if (networkConfigurations == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "networkConfigurations");
            }
            this.networkConfigurations = networkConfigurations;
            return this;
        }
        public Builder networkConfigurations(GetSddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration... networkConfigurations) {
            return networkConfigurations(List.of(networkConfigurations));
        }
        @CustomType.Setter
        public Builder vsphereType(String vsphereType) {
            if (vsphereType == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "vsphereType");
            }
            this.vsphereType = vsphereType;
            return this;
        }
        @CustomType.Setter
        public Builder workloadNetworkCidr(String workloadNetworkCidr) {
            if (workloadNetworkCidr == null) {
              throw new MissingRequiredPropertyException("GetSddcInitialConfigurationInitialClusterConfiguration", "workloadNetworkCidr");
            }
            this.workloadNetworkCidr = workloadNetworkCidr;
            return this;
        }
        public GetSddcInitialConfigurationInitialClusterConfiguration build() {
            final var _resultValue = new GetSddcInitialConfigurationInitialClusterConfiguration();
            _resultValue.actualEsxiHostsCount = actualEsxiHostsCount;
            _resultValue.capacityReservationId = capacityReservationId;
            _resultValue.computeAvailabilityDomain = computeAvailabilityDomain;
            _resultValue.datastores = datastores;
            _resultValue.displayName = displayName;
            _resultValue.esxiHostsCount = esxiHostsCount;
            _resultValue.initialCommitment = initialCommitment;
            _resultValue.initialHostOcpuCount = initialHostOcpuCount;
            _resultValue.initialHostShapeName = initialHostShapeName;
            _resultValue.instanceDisplayNamePrefix = instanceDisplayNamePrefix;
            _resultValue.isShieldedInstanceEnabled = isShieldedInstanceEnabled;
            _resultValue.networkConfigurations = networkConfigurations;
            _resultValue.vsphereType = vsphereType;
            _resultValue.workloadNetworkCidr = workloadNetworkCidr;
            return _resultValue;
        }
    }
}
