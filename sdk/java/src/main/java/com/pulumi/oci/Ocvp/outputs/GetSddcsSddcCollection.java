// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Ocvp.outputs.GetSddcsSddcCollectionDatastore;
import com.pulumi.oci.Ocvp.outputs.GetSddcsSddcCollectionHcxOnPremLicense;
import com.pulumi.oci.Ocvp.outputs.GetSddcsSddcCollectionUpgradeLicense;
import com.pulumi.oci.Ocvp.outputs.GetSddcsSddcCollectionVsphereUpgradeObject;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSddcsSddcCollection {
    /**
     * @return (**Deprecated**) The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
     * 
     * @deprecated
     * The &#39;actual_esxi_hosts_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'actual_esxi_hosts_count' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable Integer actualEsxiHostsCount;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
     * 
     * @deprecated
     * The &#39;capacity_reservation_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'capacity_reservation_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String capacityReservationId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private @Nullable String compartmentId;
    /**
     * @return The name of the availability domain that the Compute instances are running in.  Example: `Uocm:PHX-AD-1`
     * 
     * @deprecated
     * The &#39;compute_availability_domain&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'compute_availability_domain' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String computeAvailabilityDomain;
    /**
     * @return (**Deprecated**) Datastores used for the Sddc.
     * 
     * @deprecated
     * The &#39;datastores&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'datastores' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable List<GetSddcsSddcCollectionDatastore> datastores;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private @Nullable Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return (**Deprecated**) The number of ESXi hosts in the SDDC.
     * 
     * @deprecated
     * The &#39;esxi_hosts_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'esxi_hosts_count' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable Integer esxiHostsCount;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private @Nullable Map<String,Object> freeformTags;
    private @Nullable String hcxAction;
    /**
     * @return The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    private @Nullable String hcxFqdn;
    /**
     * @return (**Deprecated**) The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
     * 
     * @deprecated
     * The &#39;hcx_initial_password&#39; field has been deprecated. Please use the &#39;ocvp_sddc_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'hcx_initial_password' field has been deprecated. Please use the 'ocvp_sddc_password' data source instead. */
    private @Nullable String hcxInitialPassword;
    /**
     * @return (**Deprecated**) The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys.
     * 
     * @deprecated
     * The &#39;hcx_on_prem_key&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'hcx_on_prem_key' field has been deprecated and may be removed in a future version. Do not use this field. */
    private @Nullable String hcxOnPremKey;
    /**
     * @return The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
     * 
     */
    private @Nullable List<GetSddcsSddcCollectionHcxOnPremLicense> hcxOnPremLicenses;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    private @Nullable String hcxPrivateIpId;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the HCX component of the VMware environment.
     * 
     * @deprecated
     * The &#39;hcx_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'hcx_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String hcxVlanId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
     * 
     */
    private @Nullable String id;
    /**
     * @return (**Deprecated**) The initial OCPU count of the SDDC&#39;s ESXi hosts.
     * 
     * @deprecated
     * The &#39;initial_host_ocpu_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_host_ocpu_count' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable Double initialHostOcpuCount;
    /**
     * @return (**Deprecated**) The initial compute shape of the SDDC&#39;s ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
     * 
     * @deprecated
     * The &#39;initial_host_shape_name&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_host_shape_name' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String initialHostShapeName;
    /**
     * @return (**Deprecated**) The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
     * 
     * @deprecated
     * The &#39;initial_sku&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_sku' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String initialSku;
    /**
     * @return (**Deprecated**) A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn&#39;t set, the SDDC&#39;s `displayName` is used as the prefix.
     * 
     * @deprecated
     * The &#39;instance_display_name_prefix&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'instance_display_name_prefix' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String instanceDisplayNamePrefix;
    /**
     * @return (**Deprecated**) Indicates whether HCX is enabled for this SDDC.
     * 
     * @deprecated
     * The &#39;is_hcx_enabled&#39; field has been deprecated. Please use &#39;hcx_mode&#39; instead.
     * 
     */
    @Deprecated /* The 'is_hcx_enabled' field has been deprecated. Please use 'hcx_mode' instead. */
    private @Nullable Boolean isHcxEnabled;
    /**
     * @return (**Deprecated**) Indicates whether HCX Enterprise is enabled for this SDDC.
     * 
     * @deprecated
     * The &#39;is_hcx_enabled&#39; field has been deprecated. Please use &#39;actual_hcx_mode&#39; instead.
     * 
     */
    @Deprecated /* The 'is_hcx_enabled' field has been deprecated. Please use 'actual_hcx_mode' instead. */
    private @Nullable Boolean isHcxEnterpriseEnabled;
    /**
     * @return Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
     * 
     */
    private @Nullable Boolean isHcxPendingDowngrade;
    /**
     * @return (**Deprecated**) Indicates whether shielded instance is enabled at the SDDC level.
     * 
     * @deprecated
     * The &#39;is_shielded_instance_enabled&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'is_shielded_instance_enabled' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable Boolean isShieldedInstanceEnabled;
    /**
     * @return Indicates whether this SDDC is designated for only single ESXi host.
     * 
     */
    private @Nullable Boolean isSingleHostSddc;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 1 component of the VMware environment.
     * 
     * @deprecated
     * The &#39;nsx_edge_uplink1vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_uplink1vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String nsxEdgeUplink1vlanId;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 2 component of the VMware environment.
     * 
     * @deprecated
     * The &#39;nsx_edge_uplink2vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_uplink2vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String nsxEdgeUplink2vlanId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    private @Nullable String nsxEdgeUplinkIpId;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge VTEP component of the VMware environment.
     * 
     * @deprecated
     * The &#39;nsx_edge_vtep_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_vtep_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String nsxEdgeVtepVlanId;
    /**
     * @return The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    private @Nullable String nsxManagerFqdn;
    /**
     * @return (**Deprecated**) The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
     * 
     * @deprecated
     * The &#39;nsx_manager_initial_password&#39; field has been deprecated. Please use the &#39;ocvp_sddc_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'nsx_manager_initial_password' field has been deprecated. Please use the 'ocvp_sddc_password' data source instead. */
    private @Nullable String nsxManagerInitialPassword;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    private @Nullable String nsxManagerPrivateIpId;
    /**
     * @return The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
     * 
     */
    private @Nullable String nsxManagerUsername;
    /**
     * @return (**Deprecated**) The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
     * 
     * @deprecated
     * The &#39;nsx_overlay_segment_name&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'nsx_overlay_segment_name' field has been deprecated and may be removed in a future version. Do not use this field. */
    private @Nullable String nsxOverlaySegmentName;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX VTEP component of the VMware environment.
     * 
     * @deprecated
     * The &#39;nsx_vtep_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_vtep_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String nsxVtepVlanId;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet used to provision the SDDC.
     * 
     * @deprecated
     * The &#39;provisioning_subnet_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'provisioning_subnet_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String provisioningSubnetId;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
     * 
     * @deprecated
     * The &#39;provisioning_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'provisioning_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String provisioningVlanId;
    private @Nullable Boolean refreshHcxLicenseStatus;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
     * 
     * @deprecated
     * The &#39;replication_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'replication_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String replicationVlanId;
    private @Nullable List<String> reservingHcxOnPremiseLicenseKeys;
    /**
     * @return One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorized_keys` file.
     * 
     */
    private @Nullable String sshAuthorizedKeys;
    /**
     * @return The lifecycle state of the resource.
     * 
     */
    private @Nullable String state;
    /**
     * @return The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeCreated;
    /**
     * @return The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeHcxBillingCycleEnd;
    /**
     * @return The date and time the SDDC&#39;s HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private @Nullable String timeHcxLicenseStatusUpdated;
    /**
     * @return The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private @Nullable String timeUpdated;
    /**
     * @return (**Deprecated**) The vSphere licenses to use when upgrading the SDDC.
     * 
     * @deprecated
     * The &#39;upgrade_licenses&#39; field has been deprecated. Please use the &#39;ocvp_cluster_resource&#39; resource instead.
     * 
     */
    @Deprecated /* The 'upgrade_licenses' field has been deprecated. Please use the 'ocvp_cluster_resource' resource instead. */
    private @Nullable List<GetSddcsSddcCollectionUpgradeLicense> upgradeLicenses;
    /**
     * @return The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    private @Nullable String vcenterFqdn;
    /**
     * @return (**Deprecated**) The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
     * 
     * @deprecated
     * The &#39;vcenter_initial_password&#39; field has been deprecated. Please use the &#39;ocvp_sddc_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'vcenter_initial_password' field has been deprecated. Please use the 'ocvp_sddc_password' data source instead. */
    private @Nullable String vcenterInitialPassword;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    private @Nullable String vcenterPrivateIpId;
    /**
     * @return The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
     * 
     */
    private @Nullable String vcenterUsername;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vMotion component of the VMware environment.
     * 
     * @deprecated
     * The &#39;vmotion_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vmotion_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String vmotionVlanId;
    /**
     * @return In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
     * 
     */
    private @Nullable String vmwareSoftwareVersion;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSAN component of the VMware environment.
     * 
     * @deprecated
     * The &#39;vsan_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vsan_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String vsanVlanId;
    /**
     * @return (**Deprecated**) The link to guidance for upgrading vSphere.
     * 
     * @deprecated
     * The &#39;vsphere_upgrade_guide&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'vsphere_upgrade_guide' field has been deprecated and may be removed in a future version. Do not use this field. */
    private @Nullable String vsphereUpgradeGuide;
    /**
     * @return (**Deprecated**) The links to binary objects needed to upgrade vSphere.
     * 
     * @deprecated
     * The &#39;upgrade_licenses&#39; field has been deprecated. Please use the &#39;ocvp_cluster_resource&#39; resource instead.
     * 
     */
    @Deprecated /* The 'upgrade_licenses' field has been deprecated. Please use the 'ocvp_cluster_resource' resource instead. */
    private @Nullable List<GetSddcsSddcCollectionVsphereUpgradeObject> vsphereUpgradeObjects;
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere component of the VMware environment.
     * 
     * @deprecated
     * The &#39;vsphere_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vsphere_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String vsphereVlanId;
    /**
     * @return (**Deprecated**) The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
     * 
     * @deprecated
     * The &#39;workload_network_cidr&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'workload_network_cidr' field has been deprecated. Please use 'initial_configuration' instead. */
    private @Nullable String workloadNetworkCidr;

    private GetSddcsSddcCollection() {}
    /**
     * @return (**Deprecated**) The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
     * 
     * @deprecated
     * The &#39;actual_esxi_hosts_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'actual_esxi_hosts_count' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<Integer> actualEsxiHostsCount() {
        return Optional.ofNullable(this.actualEsxiHostsCount);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
     * 
     * @deprecated
     * The &#39;capacity_reservation_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'capacity_reservation_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> capacityReservationId() {
        return Optional.ofNullable(this.capacityReservationId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    /**
     * @return The name of the availability domain that the Compute instances are running in.  Example: `Uocm:PHX-AD-1`
     * 
     * @deprecated
     * The &#39;compute_availability_domain&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'compute_availability_domain' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> computeAvailabilityDomain() {
        return Optional.ofNullable(this.computeAvailabilityDomain);
    }
    /**
     * @return (**Deprecated**) Datastores used for the Sddc.
     * 
     * @deprecated
     * The &#39;datastores&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'datastores' field has been deprecated. Please use 'initial_configuration' instead. */
    public List<GetSddcsSddcCollectionDatastore> datastores() {
        return this.datastores == null ? List.of() : this.datastores;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags == null ? Map.of() : this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return (**Deprecated**) The number of ESXi hosts in the SDDC.
     * 
     * @deprecated
     * The &#39;esxi_hosts_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'esxi_hosts_count' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<Integer> esxiHostsCount() {
        return Optional.ofNullable(this.esxiHostsCount);
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags == null ? Map.of() : this.freeformTags;
    }
    public Optional<String> hcxAction() {
        return Optional.ofNullable(this.hcxAction);
    }
    /**
     * @return The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    public Optional<String> hcxFqdn() {
        return Optional.ofNullable(this.hcxFqdn);
    }
    /**
     * @return (**Deprecated**) The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
     * 
     * @deprecated
     * The &#39;hcx_initial_password&#39; field has been deprecated. Please use the &#39;ocvp_sddc_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'hcx_initial_password' field has been deprecated. Please use the 'ocvp_sddc_password' data source instead. */
    public Optional<String> hcxInitialPassword() {
        return Optional.ofNullable(this.hcxInitialPassword);
    }
    /**
     * @return (**Deprecated**) The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys.
     * 
     * @deprecated
     * The &#39;hcx_on_prem_key&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'hcx_on_prem_key' field has been deprecated and may be removed in a future version. Do not use this field. */
    public Optional<String> hcxOnPremKey() {
        return Optional.ofNullable(this.hcxOnPremKey);
    }
    /**
     * @return The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
     * 
     */
    public List<GetSddcsSddcCollectionHcxOnPremLicense> hcxOnPremLicenses() {
        return this.hcxOnPremLicenses == null ? List.of() : this.hcxOnPremLicenses;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    public Optional<String> hcxPrivateIpId() {
        return Optional.ofNullable(this.hcxPrivateIpId);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the HCX component of the VMware environment.
     * 
     * @deprecated
     * The &#39;hcx_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'hcx_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> hcxVlanId() {
        return Optional.ofNullable(this.hcxVlanId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return (**Deprecated**) The initial OCPU count of the SDDC&#39;s ESXi hosts.
     * 
     * @deprecated
     * The &#39;initial_host_ocpu_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_host_ocpu_count' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<Double> initialHostOcpuCount() {
        return Optional.ofNullable(this.initialHostOcpuCount);
    }
    /**
     * @return (**Deprecated**) The initial compute shape of the SDDC&#39;s ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
     * 
     * @deprecated
     * The &#39;initial_host_shape_name&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_host_shape_name' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> initialHostShapeName() {
        return Optional.ofNullable(this.initialHostShapeName);
    }
    /**
     * @return (**Deprecated**) The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
     * 
     * @deprecated
     * The &#39;initial_sku&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_sku' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> initialSku() {
        return Optional.ofNullable(this.initialSku);
    }
    /**
     * @return (**Deprecated**) A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn&#39;t set, the SDDC&#39;s `displayName` is used as the prefix.
     * 
     * @deprecated
     * The &#39;instance_display_name_prefix&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'instance_display_name_prefix' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> instanceDisplayNamePrefix() {
        return Optional.ofNullable(this.instanceDisplayNamePrefix);
    }
    /**
     * @return (**Deprecated**) Indicates whether HCX is enabled for this SDDC.
     * 
     * @deprecated
     * The &#39;is_hcx_enabled&#39; field has been deprecated. Please use &#39;hcx_mode&#39; instead.
     * 
     */
    @Deprecated /* The 'is_hcx_enabled' field has been deprecated. Please use 'hcx_mode' instead. */
    public Optional<Boolean> isHcxEnabled() {
        return Optional.ofNullable(this.isHcxEnabled);
    }
    /**
     * @return (**Deprecated**) Indicates whether HCX Enterprise is enabled for this SDDC.
     * 
     * @deprecated
     * The &#39;is_hcx_enabled&#39; field has been deprecated. Please use &#39;actual_hcx_mode&#39; instead.
     * 
     */
    @Deprecated /* The 'is_hcx_enabled' field has been deprecated. Please use 'actual_hcx_mode' instead. */
    public Optional<Boolean> isHcxEnterpriseEnabled() {
        return Optional.ofNullable(this.isHcxEnterpriseEnabled);
    }
    /**
     * @return Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
     * 
     */
    public Optional<Boolean> isHcxPendingDowngrade() {
        return Optional.ofNullable(this.isHcxPendingDowngrade);
    }
    /**
     * @return (**Deprecated**) Indicates whether shielded instance is enabled at the SDDC level.
     * 
     * @deprecated
     * The &#39;is_shielded_instance_enabled&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'is_shielded_instance_enabled' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<Boolean> isShieldedInstanceEnabled() {
        return Optional.ofNullable(this.isShieldedInstanceEnabled);
    }
    /**
     * @return Indicates whether this SDDC is designated for only single ESXi host.
     * 
     */
    public Optional<Boolean> isSingleHostSddc() {
        return Optional.ofNullable(this.isSingleHostSddc);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 1 component of the VMware environment.
     * 
     * @deprecated
     * The &#39;nsx_edge_uplink1vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_uplink1vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> nsxEdgeUplink1vlanId() {
        return Optional.ofNullable(this.nsxEdgeUplink1vlanId);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge Uplink 2 component of the VMware environment.
     * 
     * @deprecated
     * The &#39;nsx_edge_uplink2vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_uplink2vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> nsxEdgeUplink2vlanId() {
        return Optional.ofNullable(this.nsxEdgeUplink2vlanId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    public Optional<String> nsxEdgeUplinkIpId() {
        return Optional.ofNullable(this.nsxEdgeUplinkIpId);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX Edge VTEP component of the VMware environment.
     * 
     * @deprecated
     * The &#39;nsx_edge_vtep_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_vtep_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> nsxEdgeVtepVlanId() {
        return Optional.ofNullable(this.nsxEdgeVtepVlanId);
    }
    /**
     * @return The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    public Optional<String> nsxManagerFqdn() {
        return Optional.ofNullable(this.nsxManagerFqdn);
    }
    /**
     * @return (**Deprecated**) The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
     * 
     * @deprecated
     * The &#39;nsx_manager_initial_password&#39; field has been deprecated. Please use the &#39;ocvp_sddc_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'nsx_manager_initial_password' field has been deprecated. Please use the 'ocvp_sddc_password' data source instead. */
    public Optional<String> nsxManagerInitialPassword() {
        return Optional.ofNullable(this.nsxManagerInitialPassword);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    public Optional<String> nsxManagerPrivateIpId() {
        return Optional.ofNullable(this.nsxManagerPrivateIpId);
    }
    /**
     * @return The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
     * 
     */
    public Optional<String> nsxManagerUsername() {
        return Optional.ofNullable(this.nsxManagerUsername);
    }
    /**
     * @return (**Deprecated**) The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
     * 
     * @deprecated
     * The &#39;nsx_overlay_segment_name&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'nsx_overlay_segment_name' field has been deprecated and may be removed in a future version. Do not use this field. */
    public Optional<String> nsxOverlaySegmentName() {
        return Optional.ofNullable(this.nsxOverlaySegmentName);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the NSX VTEP component of the VMware environment.
     * 
     * @deprecated
     * The &#39;nsx_vtep_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_vtep_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> nsxVtepVlanId() {
        return Optional.ofNullable(this.nsxVtepVlanId);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet used to provision the SDDC.
     * 
     * @deprecated
     * The &#39;provisioning_subnet_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'provisioning_subnet_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> provisioningSubnetId() {
        return Optional.ofNullable(this.provisioningSubnetId);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
     * 
     * @deprecated
     * The &#39;provisioning_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'provisioning_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> provisioningVlanId() {
        return Optional.ofNullable(this.provisioningVlanId);
    }
    public Optional<Boolean> refreshHcxLicenseStatus() {
        return Optional.ofNullable(this.refreshHcxLicenseStatus);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
     * 
     * @deprecated
     * The &#39;replication_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'replication_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> replicationVlanId() {
        return Optional.ofNullable(this.replicationVlanId);
    }
    public List<String> reservingHcxOnPremiseLicenseKeys() {
        return this.reservingHcxOnPremiseLicenseKeys == null ? List.of() : this.reservingHcxOnPremiseLicenseKeys;
    }
    /**
     * @return One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorized_keys` file.
     * 
     */
    public Optional<String> sshAuthorizedKeys() {
        return Optional.ofNullable(this.sshAuthorizedKeys);
    }
    /**
     * @return The lifecycle state of the resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeHcxBillingCycleEnd() {
        return Optional.ofNullable(this.timeHcxBillingCycleEnd);
    }
    /**
     * @return The date and time the SDDC&#39;s HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeHcxLicenseStatusUpdated() {
        return Optional.ofNullable(this.timeHcxLicenseStatusUpdated);
    }
    /**
     * @return The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return (**Deprecated**) The vSphere licenses to use when upgrading the SDDC.
     * 
     * @deprecated
     * The &#39;upgrade_licenses&#39; field has been deprecated. Please use the &#39;ocvp_cluster_resource&#39; resource instead.
     * 
     */
    @Deprecated /* The 'upgrade_licenses' field has been deprecated. Please use the 'ocvp_cluster_resource' resource instead. */
    public List<GetSddcsSddcCollectionUpgradeLicense> upgradeLicenses() {
        return this.upgradeLicenses == null ? List.of() : this.upgradeLicenses;
    }
    /**
     * @return The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    public Optional<String> vcenterFqdn() {
        return Optional.ofNullable(this.vcenterFqdn);
    }
    /**
     * @return (**Deprecated**) The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
     * 
     * @deprecated
     * The &#39;vcenter_initial_password&#39; field has been deprecated. Please use the &#39;ocvp_sddc_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'vcenter_initial_password' field has been deprecated. Please use the 'ocvp_sddc_password' data source instead. */
    public Optional<String> vcenterInitialPassword() {
        return Optional.ofNullable(this.vcenterInitialPassword);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    public Optional<String> vcenterPrivateIpId() {
        return Optional.ofNullable(this.vcenterPrivateIpId);
    }
    /**
     * @return The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
     * 
     */
    public Optional<String> vcenterUsername() {
        return Optional.ofNullable(this.vcenterUsername);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vMotion component of the VMware environment.
     * 
     * @deprecated
     * The &#39;vmotion_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vmotion_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> vmotionVlanId() {
        return Optional.ofNullable(this.vmotionVlanId);
    }
    /**
     * @return In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
     * 
     */
    public Optional<String> vmwareSoftwareVersion() {
        return Optional.ofNullable(this.vmwareSoftwareVersion);
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSAN component of the VMware environment.
     * 
     * @deprecated
     * The &#39;vsan_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vsan_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> vsanVlanId() {
        return Optional.ofNullable(this.vsanVlanId);
    }
    /**
     * @return (**Deprecated**) The link to guidance for upgrading vSphere.
     * 
     * @deprecated
     * The &#39;vsphere_upgrade_guide&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'vsphere_upgrade_guide' field has been deprecated and may be removed in a future version. Do not use this field. */
    public Optional<String> vsphereUpgradeGuide() {
        return Optional.ofNullable(this.vsphereUpgradeGuide);
    }
    /**
     * @return (**Deprecated**) The links to binary objects needed to upgrade vSphere.
     * 
     * @deprecated
     * The &#39;upgrade_licenses&#39; field has been deprecated. Please use the &#39;ocvp_cluster_resource&#39; resource instead.
     * 
     */
    @Deprecated /* The 'upgrade_licenses' field has been deprecated. Please use the 'ocvp_cluster_resource' resource instead. */
    public List<GetSddcsSddcCollectionVsphereUpgradeObject> vsphereUpgradeObjects() {
        return this.vsphereUpgradeObjects == null ? List.of() : this.vsphereUpgradeObjects;
    }
    /**
     * @return (**Deprecated**) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere component of the VMware environment.
     * 
     * @deprecated
     * The &#39;vsphere_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vsphere_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> vsphereVlanId() {
        return Optional.ofNullable(this.vsphereVlanId);
    }
    /**
     * @return (**Deprecated**) The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
     * 
     * @deprecated
     * The &#39;workload_network_cidr&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'workload_network_cidr' field has been deprecated. Please use 'initial_configuration' instead. */
    public Optional<String> workloadNetworkCidr() {
        return Optional.ofNullable(this.workloadNetworkCidr);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSddcsSddcCollection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer actualEsxiHostsCount;
        private @Nullable String capacityReservationId;
        private @Nullable String compartmentId;
        private @Nullable String computeAvailabilityDomain;
        private @Nullable List<GetSddcsSddcCollectionDatastore> datastores;
        private @Nullable Map<String,Object> definedTags;
        private @Nullable String displayName;
        private @Nullable Integer esxiHostsCount;
        private @Nullable Map<String,Object> freeformTags;
        private @Nullable String hcxAction;
        private @Nullable String hcxFqdn;
        private @Nullable String hcxInitialPassword;
        private @Nullable String hcxOnPremKey;
        private @Nullable List<GetSddcsSddcCollectionHcxOnPremLicense> hcxOnPremLicenses;
        private @Nullable String hcxPrivateIpId;
        private @Nullable String hcxVlanId;
        private @Nullable String id;
        private @Nullable Double initialHostOcpuCount;
        private @Nullable String initialHostShapeName;
        private @Nullable String initialSku;
        private @Nullable String instanceDisplayNamePrefix;
        private @Nullable Boolean isHcxEnabled;
        private @Nullable Boolean isHcxEnterpriseEnabled;
        private @Nullable Boolean isHcxPendingDowngrade;
        private @Nullable Boolean isShieldedInstanceEnabled;
        private @Nullable Boolean isSingleHostSddc;
        private @Nullable String nsxEdgeUplink1vlanId;
        private @Nullable String nsxEdgeUplink2vlanId;
        private @Nullable String nsxEdgeUplinkIpId;
        private @Nullable String nsxEdgeVtepVlanId;
        private @Nullable String nsxManagerFqdn;
        private @Nullable String nsxManagerInitialPassword;
        private @Nullable String nsxManagerPrivateIpId;
        private @Nullable String nsxManagerUsername;
        private @Nullable String nsxOverlaySegmentName;
        private @Nullable String nsxVtepVlanId;
        private @Nullable String provisioningSubnetId;
        private @Nullable String provisioningVlanId;
        private @Nullable Boolean refreshHcxLicenseStatus;
        private @Nullable String replicationVlanId;
        private @Nullable List<String> reservingHcxOnPremiseLicenseKeys;
        private @Nullable String sshAuthorizedKeys;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeHcxBillingCycleEnd;
        private @Nullable String timeHcxLicenseStatusUpdated;
        private @Nullable String timeUpdated;
        private @Nullable List<GetSddcsSddcCollectionUpgradeLicense> upgradeLicenses;
        private @Nullable String vcenterFqdn;
        private @Nullable String vcenterInitialPassword;
        private @Nullable String vcenterPrivateIpId;
        private @Nullable String vcenterUsername;
        private @Nullable String vmotionVlanId;
        private @Nullable String vmwareSoftwareVersion;
        private @Nullable String vsanVlanId;
        private @Nullable String vsphereUpgradeGuide;
        private @Nullable List<GetSddcsSddcCollectionVsphereUpgradeObject> vsphereUpgradeObjects;
        private @Nullable String vsphereVlanId;
        private @Nullable String workloadNetworkCidr;
        public Builder() {}
        public Builder(GetSddcsSddcCollection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actualEsxiHostsCount = defaults.actualEsxiHostsCount;
    	      this.capacityReservationId = defaults.capacityReservationId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeAvailabilityDomain = defaults.computeAvailabilityDomain;
    	      this.datastores = defaults.datastores;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.esxiHostsCount = defaults.esxiHostsCount;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hcxAction = defaults.hcxAction;
    	      this.hcxFqdn = defaults.hcxFqdn;
    	      this.hcxInitialPassword = defaults.hcxInitialPassword;
    	      this.hcxOnPremKey = defaults.hcxOnPremKey;
    	      this.hcxOnPremLicenses = defaults.hcxOnPremLicenses;
    	      this.hcxPrivateIpId = defaults.hcxPrivateIpId;
    	      this.hcxVlanId = defaults.hcxVlanId;
    	      this.id = defaults.id;
    	      this.initialHostOcpuCount = defaults.initialHostOcpuCount;
    	      this.initialHostShapeName = defaults.initialHostShapeName;
    	      this.initialSku = defaults.initialSku;
    	      this.instanceDisplayNamePrefix = defaults.instanceDisplayNamePrefix;
    	      this.isHcxEnabled = defaults.isHcxEnabled;
    	      this.isHcxEnterpriseEnabled = defaults.isHcxEnterpriseEnabled;
    	      this.isHcxPendingDowngrade = defaults.isHcxPendingDowngrade;
    	      this.isShieldedInstanceEnabled = defaults.isShieldedInstanceEnabled;
    	      this.isSingleHostSddc = defaults.isSingleHostSddc;
    	      this.nsxEdgeUplink1vlanId = defaults.nsxEdgeUplink1vlanId;
    	      this.nsxEdgeUplink2vlanId = defaults.nsxEdgeUplink2vlanId;
    	      this.nsxEdgeUplinkIpId = defaults.nsxEdgeUplinkIpId;
    	      this.nsxEdgeVtepVlanId = defaults.nsxEdgeVtepVlanId;
    	      this.nsxManagerFqdn = defaults.nsxManagerFqdn;
    	      this.nsxManagerInitialPassword = defaults.nsxManagerInitialPassword;
    	      this.nsxManagerPrivateIpId = defaults.nsxManagerPrivateIpId;
    	      this.nsxManagerUsername = defaults.nsxManagerUsername;
    	      this.nsxOverlaySegmentName = defaults.nsxOverlaySegmentName;
    	      this.nsxVtepVlanId = defaults.nsxVtepVlanId;
    	      this.provisioningSubnetId = defaults.provisioningSubnetId;
    	      this.provisioningVlanId = defaults.provisioningVlanId;
    	      this.refreshHcxLicenseStatus = defaults.refreshHcxLicenseStatus;
    	      this.replicationVlanId = defaults.replicationVlanId;
    	      this.reservingHcxOnPremiseLicenseKeys = defaults.reservingHcxOnPremiseLicenseKeys;
    	      this.sshAuthorizedKeys = defaults.sshAuthorizedKeys;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeHcxBillingCycleEnd = defaults.timeHcxBillingCycleEnd;
    	      this.timeHcxLicenseStatusUpdated = defaults.timeHcxLicenseStatusUpdated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.upgradeLicenses = defaults.upgradeLicenses;
    	      this.vcenterFqdn = defaults.vcenterFqdn;
    	      this.vcenterInitialPassword = defaults.vcenterInitialPassword;
    	      this.vcenterPrivateIpId = defaults.vcenterPrivateIpId;
    	      this.vcenterUsername = defaults.vcenterUsername;
    	      this.vmotionVlanId = defaults.vmotionVlanId;
    	      this.vmwareSoftwareVersion = defaults.vmwareSoftwareVersion;
    	      this.vsanVlanId = defaults.vsanVlanId;
    	      this.vsphereUpgradeGuide = defaults.vsphereUpgradeGuide;
    	      this.vsphereUpgradeObjects = defaults.vsphereUpgradeObjects;
    	      this.vsphereVlanId = defaults.vsphereVlanId;
    	      this.workloadNetworkCidr = defaults.workloadNetworkCidr;
        }

        @CustomType.Setter
        public Builder actualEsxiHostsCount(@Nullable Integer actualEsxiHostsCount) {
            this.actualEsxiHostsCount = actualEsxiHostsCount;
            return this;
        }
        @CustomType.Setter
        public Builder capacityReservationId(@Nullable String capacityReservationId) {
            this.capacityReservationId = capacityReservationId;
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder computeAvailabilityDomain(@Nullable String computeAvailabilityDomain) {
            this.computeAvailabilityDomain = computeAvailabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder datastores(@Nullable List<GetSddcsSddcCollectionDatastore> datastores) {
            this.datastores = datastores;
            return this;
        }
        public Builder datastores(GetSddcsSddcCollectionDatastore... datastores) {
            return datastores(List.of(datastores));
        }
        @CustomType.Setter
        public Builder definedTags(@Nullable Map<String,Object> definedTags) {
            this.definedTags = definedTags;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder esxiHostsCount(@Nullable Integer esxiHostsCount) {
            this.esxiHostsCount = esxiHostsCount;
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(@Nullable Map<String,Object> freeformTags) {
            this.freeformTags = freeformTags;
            return this;
        }
        @CustomType.Setter
        public Builder hcxAction(@Nullable String hcxAction) {
            this.hcxAction = hcxAction;
            return this;
        }
        @CustomType.Setter
        public Builder hcxFqdn(@Nullable String hcxFqdn) {
            this.hcxFqdn = hcxFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder hcxInitialPassword(@Nullable String hcxInitialPassword) {
            this.hcxInitialPassword = hcxInitialPassword;
            return this;
        }
        @CustomType.Setter
        public Builder hcxOnPremKey(@Nullable String hcxOnPremKey) {
            this.hcxOnPremKey = hcxOnPremKey;
            return this;
        }
        @CustomType.Setter
        public Builder hcxOnPremLicenses(@Nullable List<GetSddcsSddcCollectionHcxOnPremLicense> hcxOnPremLicenses) {
            this.hcxOnPremLicenses = hcxOnPremLicenses;
            return this;
        }
        public Builder hcxOnPremLicenses(GetSddcsSddcCollectionHcxOnPremLicense... hcxOnPremLicenses) {
            return hcxOnPremLicenses(List.of(hcxOnPremLicenses));
        }
        @CustomType.Setter
        public Builder hcxPrivateIpId(@Nullable String hcxPrivateIpId) {
            this.hcxPrivateIpId = hcxPrivateIpId;
            return this;
        }
        @CustomType.Setter
        public Builder hcxVlanId(@Nullable String hcxVlanId) {
            this.hcxVlanId = hcxVlanId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder initialHostOcpuCount(@Nullable Double initialHostOcpuCount) {
            this.initialHostOcpuCount = initialHostOcpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder initialHostShapeName(@Nullable String initialHostShapeName) {
            this.initialHostShapeName = initialHostShapeName;
            return this;
        }
        @CustomType.Setter
        public Builder initialSku(@Nullable String initialSku) {
            this.initialSku = initialSku;
            return this;
        }
        @CustomType.Setter
        public Builder instanceDisplayNamePrefix(@Nullable String instanceDisplayNamePrefix) {
            this.instanceDisplayNamePrefix = instanceDisplayNamePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder isHcxEnabled(@Nullable Boolean isHcxEnabled) {
            this.isHcxEnabled = isHcxEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isHcxEnterpriseEnabled(@Nullable Boolean isHcxEnterpriseEnabled) {
            this.isHcxEnterpriseEnabled = isHcxEnterpriseEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isHcxPendingDowngrade(@Nullable Boolean isHcxPendingDowngrade) {
            this.isHcxPendingDowngrade = isHcxPendingDowngrade;
            return this;
        }
        @CustomType.Setter
        public Builder isShieldedInstanceEnabled(@Nullable Boolean isShieldedInstanceEnabled) {
            this.isShieldedInstanceEnabled = isShieldedInstanceEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder isSingleHostSddc(@Nullable Boolean isSingleHostSddc) {
            this.isSingleHostSddc = isSingleHostSddc;
            return this;
        }
        @CustomType.Setter
        public Builder nsxEdgeUplink1vlanId(@Nullable String nsxEdgeUplink1vlanId) {
            this.nsxEdgeUplink1vlanId = nsxEdgeUplink1vlanId;
            return this;
        }
        @CustomType.Setter
        public Builder nsxEdgeUplink2vlanId(@Nullable String nsxEdgeUplink2vlanId) {
            this.nsxEdgeUplink2vlanId = nsxEdgeUplink2vlanId;
            return this;
        }
        @CustomType.Setter
        public Builder nsxEdgeUplinkIpId(@Nullable String nsxEdgeUplinkIpId) {
            this.nsxEdgeUplinkIpId = nsxEdgeUplinkIpId;
            return this;
        }
        @CustomType.Setter
        public Builder nsxEdgeVtepVlanId(@Nullable String nsxEdgeVtepVlanId) {
            this.nsxEdgeVtepVlanId = nsxEdgeVtepVlanId;
            return this;
        }
        @CustomType.Setter
        public Builder nsxManagerFqdn(@Nullable String nsxManagerFqdn) {
            this.nsxManagerFqdn = nsxManagerFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder nsxManagerInitialPassword(@Nullable String nsxManagerInitialPassword) {
            this.nsxManagerInitialPassword = nsxManagerInitialPassword;
            return this;
        }
        @CustomType.Setter
        public Builder nsxManagerPrivateIpId(@Nullable String nsxManagerPrivateIpId) {
            this.nsxManagerPrivateIpId = nsxManagerPrivateIpId;
            return this;
        }
        @CustomType.Setter
        public Builder nsxManagerUsername(@Nullable String nsxManagerUsername) {
            this.nsxManagerUsername = nsxManagerUsername;
            return this;
        }
        @CustomType.Setter
        public Builder nsxOverlaySegmentName(@Nullable String nsxOverlaySegmentName) {
            this.nsxOverlaySegmentName = nsxOverlaySegmentName;
            return this;
        }
        @CustomType.Setter
        public Builder nsxVtepVlanId(@Nullable String nsxVtepVlanId) {
            this.nsxVtepVlanId = nsxVtepVlanId;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningSubnetId(@Nullable String provisioningSubnetId) {
            this.provisioningSubnetId = provisioningSubnetId;
            return this;
        }
        @CustomType.Setter
        public Builder provisioningVlanId(@Nullable String provisioningVlanId) {
            this.provisioningVlanId = provisioningVlanId;
            return this;
        }
        @CustomType.Setter
        public Builder refreshHcxLicenseStatus(@Nullable Boolean refreshHcxLicenseStatus) {
            this.refreshHcxLicenseStatus = refreshHcxLicenseStatus;
            return this;
        }
        @CustomType.Setter
        public Builder replicationVlanId(@Nullable String replicationVlanId) {
            this.replicationVlanId = replicationVlanId;
            return this;
        }
        @CustomType.Setter
        public Builder reservingHcxOnPremiseLicenseKeys(@Nullable List<String> reservingHcxOnPremiseLicenseKeys) {
            this.reservingHcxOnPremiseLicenseKeys = reservingHcxOnPremiseLicenseKeys;
            return this;
        }
        public Builder reservingHcxOnPremiseLicenseKeys(String... reservingHcxOnPremiseLicenseKeys) {
            return reservingHcxOnPremiseLicenseKeys(List.of(reservingHcxOnPremiseLicenseKeys));
        }
        @CustomType.Setter
        public Builder sshAuthorizedKeys(@Nullable String sshAuthorizedKeys) {
            this.sshAuthorizedKeys = sshAuthorizedKeys;
            return this;
        }
        @CustomType.Setter
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeHcxBillingCycleEnd(@Nullable String timeHcxBillingCycleEnd) {
            this.timeHcxBillingCycleEnd = timeHcxBillingCycleEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeHcxLicenseStatusUpdated(@Nullable String timeHcxLicenseStatusUpdated) {
            this.timeHcxLicenseStatusUpdated = timeHcxLicenseStatusUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        @CustomType.Setter
        public Builder upgradeLicenses(@Nullable List<GetSddcsSddcCollectionUpgradeLicense> upgradeLicenses) {
            this.upgradeLicenses = upgradeLicenses;
            return this;
        }
        public Builder upgradeLicenses(GetSddcsSddcCollectionUpgradeLicense... upgradeLicenses) {
            return upgradeLicenses(List.of(upgradeLicenses));
        }
        @CustomType.Setter
        public Builder vcenterFqdn(@Nullable String vcenterFqdn) {
            this.vcenterFqdn = vcenterFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder vcenterInitialPassword(@Nullable String vcenterInitialPassword) {
            this.vcenterInitialPassword = vcenterInitialPassword;
            return this;
        }
        @CustomType.Setter
        public Builder vcenterPrivateIpId(@Nullable String vcenterPrivateIpId) {
            this.vcenterPrivateIpId = vcenterPrivateIpId;
            return this;
        }
        @CustomType.Setter
        public Builder vcenterUsername(@Nullable String vcenterUsername) {
            this.vcenterUsername = vcenterUsername;
            return this;
        }
        @CustomType.Setter
        public Builder vmotionVlanId(@Nullable String vmotionVlanId) {
            this.vmotionVlanId = vmotionVlanId;
            return this;
        }
        @CustomType.Setter
        public Builder vmwareSoftwareVersion(@Nullable String vmwareSoftwareVersion) {
            this.vmwareSoftwareVersion = vmwareSoftwareVersion;
            return this;
        }
        @CustomType.Setter
        public Builder vsanVlanId(@Nullable String vsanVlanId) {
            this.vsanVlanId = vsanVlanId;
            return this;
        }
        @CustomType.Setter
        public Builder vsphereUpgradeGuide(@Nullable String vsphereUpgradeGuide) {
            this.vsphereUpgradeGuide = vsphereUpgradeGuide;
            return this;
        }
        @CustomType.Setter
        public Builder vsphereUpgradeObjects(@Nullable List<GetSddcsSddcCollectionVsphereUpgradeObject> vsphereUpgradeObjects) {
            this.vsphereUpgradeObjects = vsphereUpgradeObjects;
            return this;
        }
        public Builder vsphereUpgradeObjects(GetSddcsSddcCollectionVsphereUpgradeObject... vsphereUpgradeObjects) {
            return vsphereUpgradeObjects(List.of(vsphereUpgradeObjects));
        }
        @CustomType.Setter
        public Builder vsphereVlanId(@Nullable String vsphereVlanId) {
            this.vsphereVlanId = vsphereVlanId;
            return this;
        }
        @CustomType.Setter
        public Builder workloadNetworkCidr(@Nullable String workloadNetworkCidr) {
            this.workloadNetworkCidr = workloadNetworkCidr;
            return this;
        }
        public GetSddcsSddcCollection build() {
            final var o = new GetSddcsSddcCollection();
            o.actualEsxiHostsCount = actualEsxiHostsCount;
            o.capacityReservationId = capacityReservationId;
            o.compartmentId = compartmentId;
            o.computeAvailabilityDomain = computeAvailabilityDomain;
            o.datastores = datastores;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.esxiHostsCount = esxiHostsCount;
            o.freeformTags = freeformTags;
            o.hcxAction = hcxAction;
            o.hcxFqdn = hcxFqdn;
            o.hcxInitialPassword = hcxInitialPassword;
            o.hcxOnPremKey = hcxOnPremKey;
            o.hcxOnPremLicenses = hcxOnPremLicenses;
            o.hcxPrivateIpId = hcxPrivateIpId;
            o.hcxVlanId = hcxVlanId;
            o.id = id;
            o.initialHostOcpuCount = initialHostOcpuCount;
            o.initialHostShapeName = initialHostShapeName;
            o.initialSku = initialSku;
            o.instanceDisplayNamePrefix = instanceDisplayNamePrefix;
            o.isHcxEnabled = isHcxEnabled;
            o.isHcxEnterpriseEnabled = isHcxEnterpriseEnabled;
            o.isHcxPendingDowngrade = isHcxPendingDowngrade;
            o.isShieldedInstanceEnabled = isShieldedInstanceEnabled;
            o.isSingleHostSddc = isSingleHostSddc;
            o.nsxEdgeUplink1vlanId = nsxEdgeUplink1vlanId;
            o.nsxEdgeUplink2vlanId = nsxEdgeUplink2vlanId;
            o.nsxEdgeUplinkIpId = nsxEdgeUplinkIpId;
            o.nsxEdgeVtepVlanId = nsxEdgeVtepVlanId;
            o.nsxManagerFqdn = nsxManagerFqdn;
            o.nsxManagerInitialPassword = nsxManagerInitialPassword;
            o.nsxManagerPrivateIpId = nsxManagerPrivateIpId;
            o.nsxManagerUsername = nsxManagerUsername;
            o.nsxOverlaySegmentName = nsxOverlaySegmentName;
            o.nsxVtepVlanId = nsxVtepVlanId;
            o.provisioningSubnetId = provisioningSubnetId;
            o.provisioningVlanId = provisioningVlanId;
            o.refreshHcxLicenseStatus = refreshHcxLicenseStatus;
            o.replicationVlanId = replicationVlanId;
            o.reservingHcxOnPremiseLicenseKeys = reservingHcxOnPremiseLicenseKeys;
            o.sshAuthorizedKeys = sshAuthorizedKeys;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeHcxBillingCycleEnd = timeHcxBillingCycleEnd;
            o.timeHcxLicenseStatusUpdated = timeHcxLicenseStatusUpdated;
            o.timeUpdated = timeUpdated;
            o.upgradeLicenses = upgradeLicenses;
            o.vcenterFqdn = vcenterFqdn;
            o.vcenterInitialPassword = vcenterInitialPassword;
            o.vcenterPrivateIpId = vcenterPrivateIpId;
            o.vcenterUsername = vcenterUsername;
            o.vmotionVlanId = vmotionVlanId;
            o.vmwareSoftwareVersion = vmwareSoftwareVersion;
            o.vsanVlanId = vsanVlanId;
            o.vsphereUpgradeGuide = vsphereUpgradeGuide;
            o.vsphereUpgradeObjects = vsphereUpgradeObjects;
            o.vsphereVlanId = vsphereVlanId;
            o.workloadNetworkCidr = workloadNetworkCidr;
            return o;
        }
    }
}
