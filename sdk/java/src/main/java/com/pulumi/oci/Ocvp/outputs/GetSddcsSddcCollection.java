// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Ocvp.outputs.GetSddcsSddcCollectionDatastore;
import com.pulumi.oci.Ocvp.outputs.GetSddcsSddcCollectionHcxOnPremLicense;
import com.pulumi.oci.Ocvp.outputs.GetSddcsSddcCollectionInitialConfiguration;
import com.pulumi.oci.Ocvp.outputs.GetSddcsSddcCollectionUpgradeLicense;
import com.pulumi.oci.Ocvp.outputs.GetSddcsSddcCollectionVsphereUpgradeObject;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSddcsSddcCollection {
    /**
     * @return (**Deprecated**) The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
     * 
     * @deprecated
     * The &#39;actual_esxi_hosts_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'actual_esxi_hosts_count' field has been deprecated. Please use 'initial_configuration' instead. */
    private Integer actualEsxiHostsCount;
    /**
     * @deprecated
     * The &#39;capacity_reservation_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'capacity_reservation_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String capacityReservationId;
    /**
     * @return The number of Clusters in the SDDC.
     * 
     */
    private Integer clustersCount;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private String compartmentId;
    /**
     * @return The name of the availability domain that the Compute instances are running in.  Example: `Uocm:PHX-AD-1`
     * 
     * @deprecated
     * The &#39;compute_availability_domain&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'compute_availability_domain' field has been deprecated. Please use 'initial_configuration' instead. */
    private String computeAvailabilityDomain;
    /**
     * @deprecated
     * The &#39;datastores&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'datastores' field has been deprecated. Please use 'initial_configuration' instead. */
    private List<GetSddcsSddcCollectionDatastore> datastores;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private String displayName;
    /**
     * @return (**Deprecated**) The number of ESXi hosts in the SDDC.
     * 
     * @deprecated
     * The &#39;esxi_hosts_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'esxi_hosts_count' field has been deprecated. Please use 'initial_configuration' instead. */
    private Integer esxiHostsCount;
    /**
     * @return In general, this is a specific version of bundled ESXi software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
     * 
     */
    private String esxiSoftwareVersion;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private Map<String,Object> freeformTags;
    private String hcxAction;
    /**
     * @return The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    private String hcxFqdn;
    /**
     * @deprecated
     * The &#39;hcx_initial_password&#39; field has been deprecated. Please use the &#39;oci_ocvp_retrieve_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'hcx_initial_password' field has been deprecated. Please use the 'oci_ocvp_retrieve_password' data source instead. */
    private String hcxInitialPassword;
    /**
     * @return HCX configuration of the SDDC.
     * 
     */
    private String hcxMode;
    /**
     * @deprecated
     * The &#39;hcx_on_prem_key&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'hcx_on_prem_key' field has been deprecated and may be removed in a future version. Do not use this field. */
    private String hcxOnPremKey;
    /**
     * @return The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
     * 
     */
    private List<GetSddcsSddcCollectionHcxOnPremLicense> hcxOnPremLicenses;
    private String hcxPrivateIpId;
    /**
     * @deprecated
     * The &#39;hcx_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'hcx_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String hcxVlanId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
     * 
     */
    private String id;
    private List<GetSddcsSddcCollectionInitialConfiguration> initialConfigurations;
    /**
     * @return (**Deprecated**) The initial OCPU count of the SDDC&#39;s ESXi hosts.
     * 
     * @deprecated
     * The &#39;initial_host_ocpu_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_host_ocpu_count' field has been deprecated. Please use 'initial_configuration' instead. */
    private Double initialHostOcpuCount;
    /**
     * @return (**Deprecated**) The initial compute shape of the SDDC&#39;s ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
     * 
     * @deprecated
     * The &#39;initial_host_shape_name&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_host_shape_name' field has been deprecated. Please use 'initial_configuration' instead. */
    private String initialHostShapeName;
    /**
     * @deprecated
     * The &#39;initial_sku&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_sku' field has been deprecated. Please use 'initial_configuration' instead. */
    private String initialSku;
    /**
     * @deprecated
     * The &#39;instance_display_name_prefix&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'instance_display_name_prefix' field has been deprecated. Please use 'initial_configuration' instead. */
    private String instanceDisplayNamePrefix;
    /**
     * @return (**Deprecated**) Indicates whether HCX is enabled for this SDDC. **Deprecated**. Please use `hcx_mode` instead.
     * 
     */
    private Boolean isHcxEnabled;
    /**
     * @return (**Deprecated**) Indicates whether HCX Enterprise is enabled for this SDDC.  **Deprecated**. Please use `hcx_mode` instead.
     * 
     * @deprecated
     * The &#39;is_hcx_enterprise_enabled&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'is_hcx_enterprise_enabled' field has been deprecated and may be removed in a future version. Do not use this field. */
    private Boolean isHcxEnterpriseEnabled;
    /**
     * @return Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
     * 
     */
    private Boolean isHcxPendingDowngrade;
    /**
     * @return (**Deprecated**) Indicates whether shielded instance is enabled at the SDDC level.
     * 
     * @deprecated
     * The &#39;is_shielded_instance_enabled&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'is_shielded_instance_enabled' field has been deprecated. Please use 'initial_configuration' instead. */
    private Boolean isShieldedInstanceEnabled;
    /**
     * @return Indicates whether this SDDC is designated for only single ESXi host.
     * 
     */
    private Boolean isSingleHostSddc;
    /**
     * @deprecated
     * The &#39;nsx_edge_uplink1vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_uplink1vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String nsxEdgeUplink1vlanId;
    /**
     * @deprecated
     * The &#39;nsx_edge_uplink2vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_uplink2vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String nsxEdgeUplink2vlanId;
    private String nsxEdgeUplinkIpId;
    /**
     * @deprecated
     * The &#39;nsx_edge_vtep_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_vtep_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String nsxEdgeVtepVlanId;
    /**
     * @return The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    private String nsxManagerFqdn;
    /**
     * @deprecated
     * The &#39;nsx_manager_initial_password&#39; field has been deprecated. Please use the &#39;oci_ocvp_retrieve_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'nsx_manager_initial_password' field has been deprecated. Please use the 'oci_ocvp_retrieve_password' data source instead. */
    private String nsxManagerInitialPassword;
    private String nsxManagerPrivateIpId;
    /**
     * @return The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
     * 
     */
    private String nsxManagerUsername;
    /**
     * @deprecated
     * The &#39;nsx_overlay_segment_name&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'nsx_overlay_segment_name' field has been deprecated and may be removed in a future version. Do not use this field. */
    private String nsxOverlaySegmentName;
    /**
     * @deprecated
     * The &#39;nsx_vtep_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_vtep_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String nsxVtepVlanId;
    /**
     * @deprecated
     * The &#39;provisioning_subnet_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'provisioning_subnet_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String provisioningSubnetId;
    /**
     * @deprecated
     * The &#39;provisioning_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'provisioning_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String provisioningVlanId;
    private Boolean refreshHcxLicenseStatus;
    /**
     * @deprecated
     * The &#39;replication_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'replication_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String replicationVlanId;
    private List<String> reservingHcxOnPremiseLicenseKeys;
    private String sshAuthorizedKeys;
    /**
     * @return The lifecycle state of the resource.
     * 
     */
    private String state;
    /**
     * @return The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private String timeCreated;
    private String timeHcxBillingCycleEnd;
    private String timeHcxLicenseStatusUpdated;
    /**
     * @return The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private String timeUpdated;
    /**
     * @deprecated
     * The &#39;upgrade_licenses&#39; field has been deprecated. Please use the &#39;ocvp_cluster_resource&#39; resource instead.
     * 
     */
    @Deprecated /* The 'upgrade_licenses' field has been deprecated. Please use the 'ocvp_cluster_resource' resource instead. */
    private List<GetSddcsSddcCollectionUpgradeLicense> upgradeLicenses;
    /**
     * @return The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    private String vcenterFqdn;
    /**
     * @deprecated
     * The &#39;vcenter_initial_password&#39; field has been deprecated. Please use the &#39;oci_ocvp_retrieve_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'vcenter_initial_password' field has been deprecated. Please use the 'oci_ocvp_retrieve_password' data source instead. */
    private String vcenterInitialPassword;
    private String vcenterPrivateIpId;
    private String vcenterUsername;
    /**
     * @deprecated
     * The &#39;vmotion_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vmotion_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String vmotionVlanId;
    /**
     * @return In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
     * 
     */
    private String vmwareSoftwareVersion;
    /**
     * @deprecated
     * The &#39;vsan_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vsan_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String vsanVlanId;
    /**
     * @deprecated
     * The &#39;vsphere_upgrade_guide&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'vsphere_upgrade_guide' field has been deprecated and may be removed in a future version. Do not use this field. */
    private String vsphereUpgradeGuide;
    /**
     * @deprecated
     * The &#39;vsphere_upgrade_objects&#39; field has been deprecated. Please use the &#39;ocvp_cluster_resource&#39; resource instead.
     * 
     */
    @Deprecated /* The 'vsphere_upgrade_objects' field has been deprecated. Please use the 'ocvp_cluster_resource' resource instead. */
    private List<GetSddcsSddcCollectionVsphereUpgradeObject> vsphereUpgradeObjects;
    /**
     * @deprecated
     * The &#39;vsphere_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vsphere_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    private String vsphereVlanId;
    /**
     * @deprecated
     * The &#39;workload_network_cidr&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'workload_network_cidr' field has been deprecated. Please use 'initial_configuration' instead. */
    private String workloadNetworkCidr;

    private GetSddcsSddcCollection() {}
    /**
     * @return (**Deprecated**) The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
     * 
     * @deprecated
     * The &#39;actual_esxi_hosts_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'actual_esxi_hosts_count' field has been deprecated. Please use 'initial_configuration' instead. */
    public Integer actualEsxiHostsCount() {
        return this.actualEsxiHostsCount;
    }
    /**
     * @deprecated
     * The &#39;capacity_reservation_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'capacity_reservation_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String capacityReservationId() {
        return this.capacityReservationId;
    }
    /**
     * @return The number of Clusters in the SDDC.
     * 
     */
    public Integer clustersCount() {
        return this.clustersCount;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The name of the availability domain that the Compute instances are running in.  Example: `Uocm:PHX-AD-1`
     * 
     * @deprecated
     * The &#39;compute_availability_domain&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'compute_availability_domain' field has been deprecated. Please use 'initial_configuration' instead. */
    public String computeAvailabilityDomain() {
        return this.computeAvailabilityDomain;
    }
    /**
     * @deprecated
     * The &#39;datastores&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'datastores' field has been deprecated. Please use 'initial_configuration' instead. */
    public List<GetSddcsSddcCollectionDatastore> datastores() {
        return this.datastores;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return (**Deprecated**) The number of ESXi hosts in the SDDC.
     * 
     * @deprecated
     * The &#39;esxi_hosts_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'esxi_hosts_count' field has been deprecated. Please use 'initial_configuration' instead. */
    public Integer esxiHostsCount() {
        return this.esxiHostsCount;
    }
    /**
     * @return In general, this is a specific version of bundled ESXi software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
     * 
     */
    public String esxiSoftwareVersion() {
        return this.esxiSoftwareVersion;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    public String hcxAction() {
        return this.hcxAction;
    }
    /**
     * @return The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    public String hcxFqdn() {
        return this.hcxFqdn;
    }
    /**
     * @deprecated
     * The &#39;hcx_initial_password&#39; field has been deprecated. Please use the &#39;oci_ocvp_retrieve_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'hcx_initial_password' field has been deprecated. Please use the 'oci_ocvp_retrieve_password' data source instead. */
    public String hcxInitialPassword() {
        return this.hcxInitialPassword;
    }
    /**
     * @return HCX configuration of the SDDC.
     * 
     */
    public String hcxMode() {
        return this.hcxMode;
    }
    /**
     * @deprecated
     * The &#39;hcx_on_prem_key&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'hcx_on_prem_key' field has been deprecated and may be removed in a future version. Do not use this field. */
    public String hcxOnPremKey() {
        return this.hcxOnPremKey;
    }
    /**
     * @return The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
     * 
     */
    public List<GetSddcsSddcCollectionHcxOnPremLicense> hcxOnPremLicenses() {
        return this.hcxOnPremLicenses;
    }
    public String hcxPrivateIpId() {
        return this.hcxPrivateIpId;
    }
    /**
     * @deprecated
     * The &#39;hcx_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'hcx_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String hcxVlanId() {
        return this.hcxVlanId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the SDDC.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetSddcsSddcCollectionInitialConfiguration> initialConfigurations() {
        return this.initialConfigurations;
    }
    /**
     * @return (**Deprecated**) The initial OCPU count of the SDDC&#39;s ESXi hosts.
     * 
     * @deprecated
     * The &#39;initial_host_ocpu_count&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_host_ocpu_count' field has been deprecated. Please use 'initial_configuration' instead. */
    public Double initialHostOcpuCount() {
        return this.initialHostOcpuCount;
    }
    /**
     * @return (**Deprecated**) The initial compute shape of the SDDC&#39;s ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
     * 
     * @deprecated
     * The &#39;initial_host_shape_name&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_host_shape_name' field has been deprecated. Please use 'initial_configuration' instead. */
    public String initialHostShapeName() {
        return this.initialHostShapeName;
    }
    /**
     * @deprecated
     * The &#39;initial_sku&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'initial_sku' field has been deprecated. Please use 'initial_configuration' instead. */
    public String initialSku() {
        return this.initialSku;
    }
    /**
     * @deprecated
     * The &#39;instance_display_name_prefix&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'instance_display_name_prefix' field has been deprecated. Please use 'initial_configuration' instead. */
    public String instanceDisplayNamePrefix() {
        return this.instanceDisplayNamePrefix;
    }
    /**
     * @return (**Deprecated**) Indicates whether HCX is enabled for this SDDC. **Deprecated**. Please use `hcx_mode` instead.
     * 
     */
    public Boolean isHcxEnabled() {
        return this.isHcxEnabled;
    }
    /**
     * @return (**Deprecated**) Indicates whether HCX Enterprise is enabled for this SDDC.  **Deprecated**. Please use `hcx_mode` instead.
     * 
     * @deprecated
     * The &#39;is_hcx_enterprise_enabled&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'is_hcx_enterprise_enabled' field has been deprecated and may be removed in a future version. Do not use this field. */
    public Boolean isHcxEnterpriseEnabled() {
        return this.isHcxEnterpriseEnabled;
    }
    /**
     * @return Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
     * 
     */
    public Boolean isHcxPendingDowngrade() {
        return this.isHcxPendingDowngrade;
    }
    /**
     * @return (**Deprecated**) Indicates whether shielded instance is enabled at the SDDC level.
     * 
     * @deprecated
     * The &#39;is_shielded_instance_enabled&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'is_shielded_instance_enabled' field has been deprecated. Please use 'initial_configuration' instead. */
    public Boolean isShieldedInstanceEnabled() {
        return this.isShieldedInstanceEnabled;
    }
    /**
     * @return Indicates whether this SDDC is designated for only single ESXi host.
     * 
     */
    public Boolean isSingleHostSddc() {
        return this.isSingleHostSddc;
    }
    /**
     * @deprecated
     * The &#39;nsx_edge_uplink1vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_uplink1vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String nsxEdgeUplink1vlanId() {
        return this.nsxEdgeUplink1vlanId;
    }
    /**
     * @deprecated
     * The &#39;nsx_edge_uplink2vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_uplink2vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String nsxEdgeUplink2vlanId() {
        return this.nsxEdgeUplink2vlanId;
    }
    public String nsxEdgeUplinkIpId() {
        return this.nsxEdgeUplinkIpId;
    }
    /**
     * @deprecated
     * The &#39;nsx_edge_vtep_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_edge_vtep_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String nsxEdgeVtepVlanId() {
        return this.nsxEdgeVtepVlanId;
    }
    /**
     * @return The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    public String nsxManagerFqdn() {
        return this.nsxManagerFqdn;
    }
    /**
     * @deprecated
     * The &#39;nsx_manager_initial_password&#39; field has been deprecated. Please use the &#39;oci_ocvp_retrieve_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'nsx_manager_initial_password' field has been deprecated. Please use the 'oci_ocvp_retrieve_password' data source instead. */
    public String nsxManagerInitialPassword() {
        return this.nsxManagerInitialPassword;
    }
    public String nsxManagerPrivateIpId() {
        return this.nsxManagerPrivateIpId;
    }
    /**
     * @return The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
     * 
     */
    public String nsxManagerUsername() {
        return this.nsxManagerUsername;
    }
    /**
     * @deprecated
     * The &#39;nsx_overlay_segment_name&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'nsx_overlay_segment_name' field has been deprecated and may be removed in a future version. Do not use this field. */
    public String nsxOverlaySegmentName() {
        return this.nsxOverlaySegmentName;
    }
    /**
     * @deprecated
     * The &#39;nsx_vtep_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'nsx_vtep_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String nsxVtepVlanId() {
        return this.nsxVtepVlanId;
    }
    /**
     * @deprecated
     * The &#39;provisioning_subnet_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'provisioning_subnet_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String provisioningSubnetId() {
        return this.provisioningSubnetId;
    }
    /**
     * @deprecated
     * The &#39;provisioning_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'provisioning_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String provisioningVlanId() {
        return this.provisioningVlanId;
    }
    public Boolean refreshHcxLicenseStatus() {
        return this.refreshHcxLicenseStatus;
    }
    /**
     * @deprecated
     * The &#39;replication_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'replication_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String replicationVlanId() {
        return this.replicationVlanId;
    }
    public List<String> reservingHcxOnPremiseLicenseKeys() {
        return this.reservingHcxOnPremiseLicenseKeys;
    }
    public String sshAuthorizedKeys() {
        return this.sshAuthorizedKeys;
    }
    /**
     * @return The lifecycle state of the resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    public String timeHcxBillingCycleEnd() {
        return this.timeHcxBillingCycleEnd;
    }
    public String timeHcxLicenseStatusUpdated() {
        return this.timeHcxLicenseStatusUpdated;
    }
    /**
     * @return The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @deprecated
     * The &#39;upgrade_licenses&#39; field has been deprecated. Please use the &#39;ocvp_cluster_resource&#39; resource instead.
     * 
     */
    @Deprecated /* The 'upgrade_licenses' field has been deprecated. Please use the 'ocvp_cluster_resource' resource instead. */
    public List<GetSddcsSddcCollectionUpgradeLicense> upgradeLicenses() {
        return this.upgradeLicenses;
    }
    /**
     * @return The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    public String vcenterFqdn() {
        return this.vcenterFqdn;
    }
    /**
     * @deprecated
     * The &#39;vcenter_initial_password&#39; field has been deprecated. Please use the &#39;oci_ocvp_retrieve_password&#39; data source instead.
     * 
     */
    @Deprecated /* The 'vcenter_initial_password' field has been deprecated. Please use the 'oci_ocvp_retrieve_password' data source instead. */
    public String vcenterInitialPassword() {
        return this.vcenterInitialPassword;
    }
    public String vcenterPrivateIpId() {
        return this.vcenterPrivateIpId;
    }
    public String vcenterUsername() {
        return this.vcenterUsername;
    }
    /**
     * @deprecated
     * The &#39;vmotion_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vmotion_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String vmotionVlanId() {
        return this.vmotionVlanId;
    }
    /**
     * @return In general, this is a specific version of bundled VMware software supported by Oracle Cloud VMware Solution (see [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20230701/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions)).
     * 
     */
    public String vmwareSoftwareVersion() {
        return this.vmwareSoftwareVersion;
    }
    /**
     * @deprecated
     * The &#39;vsan_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vsan_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String vsanVlanId() {
        return this.vsanVlanId;
    }
    /**
     * @deprecated
     * The &#39;vsphere_upgrade_guide&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'vsphere_upgrade_guide' field has been deprecated and may be removed in a future version. Do not use this field. */
    public String vsphereUpgradeGuide() {
        return this.vsphereUpgradeGuide;
    }
    /**
     * @deprecated
     * The &#39;vsphere_upgrade_objects&#39; field has been deprecated. Please use the &#39;ocvp_cluster_resource&#39; resource instead.
     * 
     */
    @Deprecated /* The 'vsphere_upgrade_objects' field has been deprecated. Please use the 'ocvp_cluster_resource' resource instead. */
    public List<GetSddcsSddcCollectionVsphereUpgradeObject> vsphereUpgradeObjects() {
        return this.vsphereUpgradeObjects;
    }
    /**
     * @deprecated
     * The &#39;vsphere_vlan_id&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'vsphere_vlan_id' field has been deprecated. Please use 'initial_configuration' instead. */
    public String vsphereVlanId() {
        return this.vsphereVlanId;
    }
    /**
     * @deprecated
     * The &#39;workload_network_cidr&#39; field has been deprecated. Please use &#39;initial_configuration&#39; instead.
     * 
     */
    @Deprecated /* The 'workload_network_cidr' field has been deprecated. Please use 'initial_configuration' instead. */
    public String workloadNetworkCidr() {
        return this.workloadNetworkCidr;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSddcsSddcCollection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer actualEsxiHostsCount;
        private String capacityReservationId;
        private Integer clustersCount;
        private String compartmentId;
        private String computeAvailabilityDomain;
        private List<GetSddcsSddcCollectionDatastore> datastores;
        private Map<String,Object> definedTags;
        private String displayName;
        private Integer esxiHostsCount;
        private String esxiSoftwareVersion;
        private Map<String,Object> freeformTags;
        private String hcxAction;
        private String hcxFqdn;
        private String hcxInitialPassword;
        private String hcxMode;
        private String hcxOnPremKey;
        private List<GetSddcsSddcCollectionHcxOnPremLicense> hcxOnPremLicenses;
        private String hcxPrivateIpId;
        private String hcxVlanId;
        private String id;
        private List<GetSddcsSddcCollectionInitialConfiguration> initialConfigurations;
        private Double initialHostOcpuCount;
        private String initialHostShapeName;
        private String initialSku;
        private String instanceDisplayNamePrefix;
        private Boolean isHcxEnabled;
        private Boolean isHcxEnterpriseEnabled;
        private Boolean isHcxPendingDowngrade;
        private Boolean isShieldedInstanceEnabled;
        private Boolean isSingleHostSddc;
        private String nsxEdgeUplink1vlanId;
        private String nsxEdgeUplink2vlanId;
        private String nsxEdgeUplinkIpId;
        private String nsxEdgeVtepVlanId;
        private String nsxManagerFqdn;
        private String nsxManagerInitialPassword;
        private String nsxManagerPrivateIpId;
        private String nsxManagerUsername;
        private String nsxOverlaySegmentName;
        private String nsxVtepVlanId;
        private String provisioningSubnetId;
        private String provisioningVlanId;
        private Boolean refreshHcxLicenseStatus;
        private String replicationVlanId;
        private List<String> reservingHcxOnPremiseLicenseKeys;
        private String sshAuthorizedKeys;
        private String state;
        private String timeCreated;
        private String timeHcxBillingCycleEnd;
        private String timeHcxLicenseStatusUpdated;
        private String timeUpdated;
        private List<GetSddcsSddcCollectionUpgradeLicense> upgradeLicenses;
        private String vcenterFqdn;
        private String vcenterInitialPassword;
        private String vcenterPrivateIpId;
        private String vcenterUsername;
        private String vmotionVlanId;
        private String vmwareSoftwareVersion;
        private String vsanVlanId;
        private String vsphereUpgradeGuide;
        private List<GetSddcsSddcCollectionVsphereUpgradeObject> vsphereUpgradeObjects;
        private String vsphereVlanId;
        private String workloadNetworkCidr;
        public Builder() {}
        public Builder(GetSddcsSddcCollection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actualEsxiHostsCount = defaults.actualEsxiHostsCount;
    	      this.capacityReservationId = defaults.capacityReservationId;
    	      this.clustersCount = defaults.clustersCount;
    	      this.compartmentId = defaults.compartmentId;
    	      this.computeAvailabilityDomain = defaults.computeAvailabilityDomain;
    	      this.datastores = defaults.datastores;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.esxiHostsCount = defaults.esxiHostsCount;
    	      this.esxiSoftwareVersion = defaults.esxiSoftwareVersion;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hcxAction = defaults.hcxAction;
    	      this.hcxFqdn = defaults.hcxFqdn;
    	      this.hcxInitialPassword = defaults.hcxInitialPassword;
    	      this.hcxMode = defaults.hcxMode;
    	      this.hcxOnPremKey = defaults.hcxOnPremKey;
    	      this.hcxOnPremLicenses = defaults.hcxOnPremLicenses;
    	      this.hcxPrivateIpId = defaults.hcxPrivateIpId;
    	      this.hcxVlanId = defaults.hcxVlanId;
    	      this.id = defaults.id;
    	      this.initialConfigurations = defaults.initialConfigurations;
    	      this.initialHostOcpuCount = defaults.initialHostOcpuCount;
    	      this.initialHostShapeName = defaults.initialHostShapeName;
    	      this.initialSku = defaults.initialSku;
    	      this.instanceDisplayNamePrefix = defaults.instanceDisplayNamePrefix;
    	      this.isHcxEnabled = defaults.isHcxEnabled;
    	      this.isHcxEnterpriseEnabled = defaults.isHcxEnterpriseEnabled;
    	      this.isHcxPendingDowngrade = defaults.isHcxPendingDowngrade;
    	      this.isShieldedInstanceEnabled = defaults.isShieldedInstanceEnabled;
    	      this.isSingleHostSddc = defaults.isSingleHostSddc;
    	      this.nsxEdgeUplink1vlanId = defaults.nsxEdgeUplink1vlanId;
    	      this.nsxEdgeUplink2vlanId = defaults.nsxEdgeUplink2vlanId;
    	      this.nsxEdgeUplinkIpId = defaults.nsxEdgeUplinkIpId;
    	      this.nsxEdgeVtepVlanId = defaults.nsxEdgeVtepVlanId;
    	      this.nsxManagerFqdn = defaults.nsxManagerFqdn;
    	      this.nsxManagerInitialPassword = defaults.nsxManagerInitialPassword;
    	      this.nsxManagerPrivateIpId = defaults.nsxManagerPrivateIpId;
    	      this.nsxManagerUsername = defaults.nsxManagerUsername;
    	      this.nsxOverlaySegmentName = defaults.nsxOverlaySegmentName;
    	      this.nsxVtepVlanId = defaults.nsxVtepVlanId;
    	      this.provisioningSubnetId = defaults.provisioningSubnetId;
    	      this.provisioningVlanId = defaults.provisioningVlanId;
    	      this.refreshHcxLicenseStatus = defaults.refreshHcxLicenseStatus;
    	      this.replicationVlanId = defaults.replicationVlanId;
    	      this.reservingHcxOnPremiseLicenseKeys = defaults.reservingHcxOnPremiseLicenseKeys;
    	      this.sshAuthorizedKeys = defaults.sshAuthorizedKeys;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeHcxBillingCycleEnd = defaults.timeHcxBillingCycleEnd;
    	      this.timeHcxLicenseStatusUpdated = defaults.timeHcxLicenseStatusUpdated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.upgradeLicenses = defaults.upgradeLicenses;
    	      this.vcenterFqdn = defaults.vcenterFqdn;
    	      this.vcenterInitialPassword = defaults.vcenterInitialPassword;
    	      this.vcenterPrivateIpId = defaults.vcenterPrivateIpId;
    	      this.vcenterUsername = defaults.vcenterUsername;
    	      this.vmotionVlanId = defaults.vmotionVlanId;
    	      this.vmwareSoftwareVersion = defaults.vmwareSoftwareVersion;
    	      this.vsanVlanId = defaults.vsanVlanId;
    	      this.vsphereUpgradeGuide = defaults.vsphereUpgradeGuide;
    	      this.vsphereUpgradeObjects = defaults.vsphereUpgradeObjects;
    	      this.vsphereVlanId = defaults.vsphereVlanId;
    	      this.workloadNetworkCidr = defaults.workloadNetworkCidr;
        }

        @CustomType.Setter
        public Builder actualEsxiHostsCount(Integer actualEsxiHostsCount) {
            this.actualEsxiHostsCount = Objects.requireNonNull(actualEsxiHostsCount);
            return this;
        }
        @CustomType.Setter
        public Builder capacityReservationId(String capacityReservationId) {
            this.capacityReservationId = Objects.requireNonNull(capacityReservationId);
            return this;
        }
        @CustomType.Setter
        public Builder clustersCount(Integer clustersCount) {
            this.clustersCount = Objects.requireNonNull(clustersCount);
            return this;
        }
        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        @CustomType.Setter
        public Builder computeAvailabilityDomain(String computeAvailabilityDomain) {
            this.computeAvailabilityDomain = Objects.requireNonNull(computeAvailabilityDomain);
            return this;
        }
        @CustomType.Setter
        public Builder datastores(List<GetSddcsSddcCollectionDatastore> datastores) {
            this.datastores = Objects.requireNonNull(datastores);
            return this;
        }
        public Builder datastores(GetSddcsSddcCollectionDatastore... datastores) {
            return datastores(List.of(datastores));
        }
        @CustomType.Setter
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder esxiHostsCount(Integer esxiHostsCount) {
            this.esxiHostsCount = Objects.requireNonNull(esxiHostsCount);
            return this;
        }
        @CustomType.Setter
        public Builder esxiSoftwareVersion(String esxiSoftwareVersion) {
            this.esxiSoftwareVersion = Objects.requireNonNull(esxiSoftwareVersion);
            return this;
        }
        @CustomType.Setter
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        @CustomType.Setter
        public Builder hcxAction(String hcxAction) {
            this.hcxAction = Objects.requireNonNull(hcxAction);
            return this;
        }
        @CustomType.Setter
        public Builder hcxFqdn(String hcxFqdn) {
            this.hcxFqdn = Objects.requireNonNull(hcxFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder hcxInitialPassword(String hcxInitialPassword) {
            this.hcxInitialPassword = Objects.requireNonNull(hcxInitialPassword);
            return this;
        }
        @CustomType.Setter
        public Builder hcxMode(String hcxMode) {
            this.hcxMode = Objects.requireNonNull(hcxMode);
            return this;
        }
        @CustomType.Setter
        public Builder hcxOnPremKey(String hcxOnPremKey) {
            this.hcxOnPremKey = Objects.requireNonNull(hcxOnPremKey);
            return this;
        }
        @CustomType.Setter
        public Builder hcxOnPremLicenses(List<GetSddcsSddcCollectionHcxOnPremLicense> hcxOnPremLicenses) {
            this.hcxOnPremLicenses = Objects.requireNonNull(hcxOnPremLicenses);
            return this;
        }
        public Builder hcxOnPremLicenses(GetSddcsSddcCollectionHcxOnPremLicense... hcxOnPremLicenses) {
            return hcxOnPremLicenses(List.of(hcxOnPremLicenses));
        }
        @CustomType.Setter
        public Builder hcxPrivateIpId(String hcxPrivateIpId) {
            this.hcxPrivateIpId = Objects.requireNonNull(hcxPrivateIpId);
            return this;
        }
        @CustomType.Setter
        public Builder hcxVlanId(String hcxVlanId) {
            this.hcxVlanId = Objects.requireNonNull(hcxVlanId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder initialConfigurations(List<GetSddcsSddcCollectionInitialConfiguration> initialConfigurations) {
            this.initialConfigurations = Objects.requireNonNull(initialConfigurations);
            return this;
        }
        public Builder initialConfigurations(GetSddcsSddcCollectionInitialConfiguration... initialConfigurations) {
            return initialConfigurations(List.of(initialConfigurations));
        }
        @CustomType.Setter
        public Builder initialHostOcpuCount(Double initialHostOcpuCount) {
            this.initialHostOcpuCount = Objects.requireNonNull(initialHostOcpuCount);
            return this;
        }
        @CustomType.Setter
        public Builder initialHostShapeName(String initialHostShapeName) {
            this.initialHostShapeName = Objects.requireNonNull(initialHostShapeName);
            return this;
        }
        @CustomType.Setter
        public Builder initialSku(String initialSku) {
            this.initialSku = Objects.requireNonNull(initialSku);
            return this;
        }
        @CustomType.Setter
        public Builder instanceDisplayNamePrefix(String instanceDisplayNamePrefix) {
            this.instanceDisplayNamePrefix = Objects.requireNonNull(instanceDisplayNamePrefix);
            return this;
        }
        @CustomType.Setter
        public Builder isHcxEnabled(Boolean isHcxEnabled) {
            this.isHcxEnabled = Objects.requireNonNull(isHcxEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isHcxEnterpriseEnabled(Boolean isHcxEnterpriseEnabled) {
            this.isHcxEnterpriseEnabled = Objects.requireNonNull(isHcxEnterpriseEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isHcxPendingDowngrade(Boolean isHcxPendingDowngrade) {
            this.isHcxPendingDowngrade = Objects.requireNonNull(isHcxPendingDowngrade);
            return this;
        }
        @CustomType.Setter
        public Builder isShieldedInstanceEnabled(Boolean isShieldedInstanceEnabled) {
            this.isShieldedInstanceEnabled = Objects.requireNonNull(isShieldedInstanceEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder isSingleHostSddc(Boolean isSingleHostSddc) {
            this.isSingleHostSddc = Objects.requireNonNull(isSingleHostSddc);
            return this;
        }
        @CustomType.Setter
        public Builder nsxEdgeUplink1vlanId(String nsxEdgeUplink1vlanId) {
            this.nsxEdgeUplink1vlanId = Objects.requireNonNull(nsxEdgeUplink1vlanId);
            return this;
        }
        @CustomType.Setter
        public Builder nsxEdgeUplink2vlanId(String nsxEdgeUplink2vlanId) {
            this.nsxEdgeUplink2vlanId = Objects.requireNonNull(nsxEdgeUplink2vlanId);
            return this;
        }
        @CustomType.Setter
        public Builder nsxEdgeUplinkIpId(String nsxEdgeUplinkIpId) {
            this.nsxEdgeUplinkIpId = Objects.requireNonNull(nsxEdgeUplinkIpId);
            return this;
        }
        @CustomType.Setter
        public Builder nsxEdgeVtepVlanId(String nsxEdgeVtepVlanId) {
            this.nsxEdgeVtepVlanId = Objects.requireNonNull(nsxEdgeVtepVlanId);
            return this;
        }
        @CustomType.Setter
        public Builder nsxManagerFqdn(String nsxManagerFqdn) {
            this.nsxManagerFqdn = Objects.requireNonNull(nsxManagerFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder nsxManagerInitialPassword(String nsxManagerInitialPassword) {
            this.nsxManagerInitialPassword = Objects.requireNonNull(nsxManagerInitialPassword);
            return this;
        }
        @CustomType.Setter
        public Builder nsxManagerPrivateIpId(String nsxManagerPrivateIpId) {
            this.nsxManagerPrivateIpId = Objects.requireNonNull(nsxManagerPrivateIpId);
            return this;
        }
        @CustomType.Setter
        public Builder nsxManagerUsername(String nsxManagerUsername) {
            this.nsxManagerUsername = Objects.requireNonNull(nsxManagerUsername);
            return this;
        }
        @CustomType.Setter
        public Builder nsxOverlaySegmentName(String nsxOverlaySegmentName) {
            this.nsxOverlaySegmentName = Objects.requireNonNull(nsxOverlaySegmentName);
            return this;
        }
        @CustomType.Setter
        public Builder nsxVtepVlanId(String nsxVtepVlanId) {
            this.nsxVtepVlanId = Objects.requireNonNull(nsxVtepVlanId);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningSubnetId(String provisioningSubnetId) {
            this.provisioningSubnetId = Objects.requireNonNull(provisioningSubnetId);
            return this;
        }
        @CustomType.Setter
        public Builder provisioningVlanId(String provisioningVlanId) {
            this.provisioningVlanId = Objects.requireNonNull(provisioningVlanId);
            return this;
        }
        @CustomType.Setter
        public Builder refreshHcxLicenseStatus(Boolean refreshHcxLicenseStatus) {
            this.refreshHcxLicenseStatus = Objects.requireNonNull(refreshHcxLicenseStatus);
            return this;
        }
        @CustomType.Setter
        public Builder replicationVlanId(String replicationVlanId) {
            this.replicationVlanId = Objects.requireNonNull(replicationVlanId);
            return this;
        }
        @CustomType.Setter
        public Builder reservingHcxOnPremiseLicenseKeys(List<String> reservingHcxOnPremiseLicenseKeys) {
            this.reservingHcxOnPremiseLicenseKeys = Objects.requireNonNull(reservingHcxOnPremiseLicenseKeys);
            return this;
        }
        public Builder reservingHcxOnPremiseLicenseKeys(String... reservingHcxOnPremiseLicenseKeys) {
            return reservingHcxOnPremiseLicenseKeys(List.of(reservingHcxOnPremiseLicenseKeys));
        }
        @CustomType.Setter
        public Builder sshAuthorizedKeys(String sshAuthorizedKeys) {
            this.sshAuthorizedKeys = Objects.requireNonNull(sshAuthorizedKeys);
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        @CustomType.Setter
        public Builder timeHcxBillingCycleEnd(String timeHcxBillingCycleEnd) {
            this.timeHcxBillingCycleEnd = Objects.requireNonNull(timeHcxBillingCycleEnd);
            return this;
        }
        @CustomType.Setter
        public Builder timeHcxLicenseStatusUpdated(String timeHcxLicenseStatusUpdated) {
            this.timeHcxLicenseStatusUpdated = Objects.requireNonNull(timeHcxLicenseStatusUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        @CustomType.Setter
        public Builder upgradeLicenses(List<GetSddcsSddcCollectionUpgradeLicense> upgradeLicenses) {
            this.upgradeLicenses = Objects.requireNonNull(upgradeLicenses);
            return this;
        }
        public Builder upgradeLicenses(GetSddcsSddcCollectionUpgradeLicense... upgradeLicenses) {
            return upgradeLicenses(List.of(upgradeLicenses));
        }
        @CustomType.Setter
        public Builder vcenterFqdn(String vcenterFqdn) {
            this.vcenterFqdn = Objects.requireNonNull(vcenterFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder vcenterInitialPassword(String vcenterInitialPassword) {
            this.vcenterInitialPassword = Objects.requireNonNull(vcenterInitialPassword);
            return this;
        }
        @CustomType.Setter
        public Builder vcenterPrivateIpId(String vcenterPrivateIpId) {
            this.vcenterPrivateIpId = Objects.requireNonNull(vcenterPrivateIpId);
            return this;
        }
        @CustomType.Setter
        public Builder vcenterUsername(String vcenterUsername) {
            this.vcenterUsername = Objects.requireNonNull(vcenterUsername);
            return this;
        }
        @CustomType.Setter
        public Builder vmotionVlanId(String vmotionVlanId) {
            this.vmotionVlanId = Objects.requireNonNull(vmotionVlanId);
            return this;
        }
        @CustomType.Setter
        public Builder vmwareSoftwareVersion(String vmwareSoftwareVersion) {
            this.vmwareSoftwareVersion = Objects.requireNonNull(vmwareSoftwareVersion);
            return this;
        }
        @CustomType.Setter
        public Builder vsanVlanId(String vsanVlanId) {
            this.vsanVlanId = Objects.requireNonNull(vsanVlanId);
            return this;
        }
        @CustomType.Setter
        public Builder vsphereUpgradeGuide(String vsphereUpgradeGuide) {
            this.vsphereUpgradeGuide = Objects.requireNonNull(vsphereUpgradeGuide);
            return this;
        }
        @CustomType.Setter
        public Builder vsphereUpgradeObjects(List<GetSddcsSddcCollectionVsphereUpgradeObject> vsphereUpgradeObjects) {
            this.vsphereUpgradeObjects = Objects.requireNonNull(vsphereUpgradeObjects);
            return this;
        }
        public Builder vsphereUpgradeObjects(GetSddcsSddcCollectionVsphereUpgradeObject... vsphereUpgradeObjects) {
            return vsphereUpgradeObjects(List.of(vsphereUpgradeObjects));
        }
        @CustomType.Setter
        public Builder vsphereVlanId(String vsphereVlanId) {
            this.vsphereVlanId = Objects.requireNonNull(vsphereVlanId);
            return this;
        }
        @CustomType.Setter
        public Builder workloadNetworkCidr(String workloadNetworkCidr) {
            this.workloadNetworkCidr = Objects.requireNonNull(workloadNetworkCidr);
            return this;
        }
        public GetSddcsSddcCollection build() {
            final var o = new GetSddcsSddcCollection();
            o.actualEsxiHostsCount = actualEsxiHostsCount;
            o.capacityReservationId = capacityReservationId;
            o.clustersCount = clustersCount;
            o.compartmentId = compartmentId;
            o.computeAvailabilityDomain = computeAvailabilityDomain;
            o.datastores = datastores;
            o.definedTags = definedTags;
            o.displayName = displayName;
            o.esxiHostsCount = esxiHostsCount;
            o.esxiSoftwareVersion = esxiSoftwareVersion;
            o.freeformTags = freeformTags;
            o.hcxAction = hcxAction;
            o.hcxFqdn = hcxFqdn;
            o.hcxInitialPassword = hcxInitialPassword;
            o.hcxMode = hcxMode;
            o.hcxOnPremKey = hcxOnPremKey;
            o.hcxOnPremLicenses = hcxOnPremLicenses;
            o.hcxPrivateIpId = hcxPrivateIpId;
            o.hcxVlanId = hcxVlanId;
            o.id = id;
            o.initialConfigurations = initialConfigurations;
            o.initialHostOcpuCount = initialHostOcpuCount;
            o.initialHostShapeName = initialHostShapeName;
            o.initialSku = initialSku;
            o.instanceDisplayNamePrefix = instanceDisplayNamePrefix;
            o.isHcxEnabled = isHcxEnabled;
            o.isHcxEnterpriseEnabled = isHcxEnterpriseEnabled;
            o.isHcxPendingDowngrade = isHcxPendingDowngrade;
            o.isShieldedInstanceEnabled = isShieldedInstanceEnabled;
            o.isSingleHostSddc = isSingleHostSddc;
            o.nsxEdgeUplink1vlanId = nsxEdgeUplink1vlanId;
            o.nsxEdgeUplink2vlanId = nsxEdgeUplink2vlanId;
            o.nsxEdgeUplinkIpId = nsxEdgeUplinkIpId;
            o.nsxEdgeVtepVlanId = nsxEdgeVtepVlanId;
            o.nsxManagerFqdn = nsxManagerFqdn;
            o.nsxManagerInitialPassword = nsxManagerInitialPassword;
            o.nsxManagerPrivateIpId = nsxManagerPrivateIpId;
            o.nsxManagerUsername = nsxManagerUsername;
            o.nsxOverlaySegmentName = nsxOverlaySegmentName;
            o.nsxVtepVlanId = nsxVtepVlanId;
            o.provisioningSubnetId = provisioningSubnetId;
            o.provisioningVlanId = provisioningVlanId;
            o.refreshHcxLicenseStatus = refreshHcxLicenseStatus;
            o.replicationVlanId = replicationVlanId;
            o.reservingHcxOnPremiseLicenseKeys = reservingHcxOnPremiseLicenseKeys;
            o.sshAuthorizedKeys = sshAuthorizedKeys;
            o.state = state;
            o.timeCreated = timeCreated;
            o.timeHcxBillingCycleEnd = timeHcxBillingCycleEnd;
            o.timeHcxLicenseStatusUpdated = timeHcxLicenseStatusUpdated;
            o.timeUpdated = timeUpdated;
            o.upgradeLicenses = upgradeLicenses;
            o.vcenterFqdn = vcenterFqdn;
            o.vcenterInitialPassword = vcenterInitialPassword;
            o.vcenterPrivateIpId = vcenterPrivateIpId;
            o.vcenterUsername = vcenterUsername;
            o.vmotionVlanId = vmotionVlanId;
            o.vmwareSoftwareVersion = vmwareSoftwareVersion;
            o.vsanVlanId = vsanVlanId;
            o.vsphereUpgradeGuide = vsphereUpgradeGuide;
            o.vsphereUpgradeObjects = vsphereUpgradeObjects;
            o.vsphereVlanId = vsphereVlanId;
            o.workloadNetworkCidr = workloadNetworkCidr;
            return o;
        }
    }
}
