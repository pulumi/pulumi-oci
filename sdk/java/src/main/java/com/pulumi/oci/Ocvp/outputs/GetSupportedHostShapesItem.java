// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSupportedHostShapesItem {
    /**
     * @return The default OCPU count of the shape.
     * 
     */
    private Double defaultOcpuCount;
    /**
     * @return Description of the shape.
     * 
     */
    private String description;
    /**
     * @return Whether the shape supports &#34;MONTH&#34; SKU.
     * 
     */
    private Boolean isSupportMonthlySku;
    /**
     * @return Indicates whether the shape supports shielded instances.
     * 
     */
    private Boolean isSupportShieldedInstances;
    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    private String name;
    /**
     * @return The family of the shape. ESXi hosts of one SDDC must have the same shape family.
     * 
     */
    private String shapeFamily;
    /**
     * @return Support OCPU count of the shape.
     * 
     */
    private List<Double> supportedOcpuCounts;
    /**
     * @return The operations where you can use the shape. The operations can be CREATE_SDDC or CREATE_ESXI_HOST.
     * 
     */
    private List<String> supportedOperations;
    /**
     * @return The supported SDDC types for the shape.
     * 
     * @deprecated
     * The &#39;supported_sddc_types&#39; field has been deprecated. Please use &#39;is_single_host_sddc_supported&#39; instead.
     * 
     */
    @Deprecated /* The 'supported_sddc_types' field has been deprecated. Please use 'is_single_host_sddc_supported' instead. */
    private List<String> supportedSddcTypes;
    /**
     * @return The VMware software versions supported by the shape.
     * 
     */
    private List<String> supportedVmwareSoftwareVersions;

    private GetSupportedHostShapesItem() {}
    /**
     * @return The default OCPU count of the shape.
     * 
     */
    public Double defaultOcpuCount() {
        return this.defaultOcpuCount;
    }
    /**
     * @return Description of the shape.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Whether the shape supports &#34;MONTH&#34; SKU.
     * 
     */
    public Boolean isSupportMonthlySku() {
        return this.isSupportMonthlySku;
    }
    /**
     * @return Indicates whether the shape supports shielded instances.
     * 
     */
    public Boolean isSupportShieldedInstances() {
        return this.isSupportShieldedInstances;
    }
    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The family of the shape. ESXi hosts of one SDDC must have the same shape family.
     * 
     */
    public String shapeFamily() {
        return this.shapeFamily;
    }
    /**
     * @return Support OCPU count of the shape.
     * 
     */
    public List<Double> supportedOcpuCounts() {
        return this.supportedOcpuCounts;
    }
    /**
     * @return The operations where you can use the shape. The operations can be CREATE_SDDC or CREATE_ESXI_HOST.
     * 
     */
    public List<String> supportedOperations() {
        return this.supportedOperations;
    }
    /**
     * @return The supported SDDC types for the shape.
     * 
     * @deprecated
     * The &#39;supported_sddc_types&#39; field has been deprecated. Please use &#39;is_single_host_sddc_supported&#39; instead.
     * 
     */
    @Deprecated /* The 'supported_sddc_types' field has been deprecated. Please use 'is_single_host_sddc_supported' instead. */
    public List<String> supportedSddcTypes() {
        return this.supportedSddcTypes;
    }
    /**
     * @return The VMware software versions supported by the shape.
     * 
     */
    public List<String> supportedVmwareSoftwareVersions() {
        return this.supportedVmwareSoftwareVersions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSupportedHostShapesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double defaultOcpuCount;
        private String description;
        private Boolean isSupportMonthlySku;
        private Boolean isSupportShieldedInstances;
        private String name;
        private String shapeFamily;
        private List<Double> supportedOcpuCounts;
        private List<String> supportedOperations;
        private List<String> supportedSddcTypes;
        private List<String> supportedVmwareSoftwareVersions;
        public Builder() {}
        public Builder(GetSupportedHostShapesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultOcpuCount = defaults.defaultOcpuCount;
    	      this.description = defaults.description;
    	      this.isSupportMonthlySku = defaults.isSupportMonthlySku;
    	      this.isSupportShieldedInstances = defaults.isSupportShieldedInstances;
    	      this.name = defaults.name;
    	      this.shapeFamily = defaults.shapeFamily;
    	      this.supportedOcpuCounts = defaults.supportedOcpuCounts;
    	      this.supportedOperations = defaults.supportedOperations;
    	      this.supportedSddcTypes = defaults.supportedSddcTypes;
    	      this.supportedVmwareSoftwareVersions = defaults.supportedVmwareSoftwareVersions;
        }

        @CustomType.Setter
        public Builder defaultOcpuCount(Double defaultOcpuCount) {
            this.defaultOcpuCount = Objects.requireNonNull(defaultOcpuCount);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder isSupportMonthlySku(Boolean isSupportMonthlySku) {
            this.isSupportMonthlySku = Objects.requireNonNull(isSupportMonthlySku);
            return this;
        }
        @CustomType.Setter
        public Builder isSupportShieldedInstances(Boolean isSupportShieldedInstances) {
            this.isSupportShieldedInstances = Objects.requireNonNull(isSupportShieldedInstances);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder shapeFamily(String shapeFamily) {
            this.shapeFamily = Objects.requireNonNull(shapeFamily);
            return this;
        }
        @CustomType.Setter
        public Builder supportedOcpuCounts(List<Double> supportedOcpuCounts) {
            this.supportedOcpuCounts = Objects.requireNonNull(supportedOcpuCounts);
            return this;
        }
        public Builder supportedOcpuCounts(Double... supportedOcpuCounts) {
            return supportedOcpuCounts(List.of(supportedOcpuCounts));
        }
        @CustomType.Setter
        public Builder supportedOperations(List<String> supportedOperations) {
            this.supportedOperations = Objects.requireNonNull(supportedOperations);
            return this;
        }
        public Builder supportedOperations(String... supportedOperations) {
            return supportedOperations(List.of(supportedOperations));
        }
        @CustomType.Setter
        public Builder supportedSddcTypes(List<String> supportedSddcTypes) {
            this.supportedSddcTypes = Objects.requireNonNull(supportedSddcTypes);
            return this;
        }
        public Builder supportedSddcTypes(String... supportedSddcTypes) {
            return supportedSddcTypes(List.of(supportedSddcTypes));
        }
        @CustomType.Setter
        public Builder supportedVmwareSoftwareVersions(List<String> supportedVmwareSoftwareVersions) {
            this.supportedVmwareSoftwareVersions = Objects.requireNonNull(supportedVmwareSoftwareVersions);
            return this;
        }
        public Builder supportedVmwareSoftwareVersions(String... supportedVmwareSoftwareVersions) {
            return supportedVmwareSoftwareVersions(List.of(supportedVmwareSoftwareVersions));
        }
        public GetSupportedHostShapesItem build() {
            final var o = new GetSupportedHostShapesItem();
            o.defaultOcpuCount = defaultOcpuCount;
            o.description = description;
            o.isSupportMonthlySku = isSupportMonthlySku;
            o.isSupportShieldedInstances = isSupportShieldedInstances;
            o.name = name;
            o.shapeFamily = shapeFamily;
            o.supportedOcpuCounts = supportedOcpuCounts;
            o.supportedOperations = supportedOperations;
            o.supportedSddcTypes = supportedSddcTypes;
            o.supportedVmwareSoftwareVersions = supportedVmwareSoftwareVersions;
            return o;
        }
    }
}
