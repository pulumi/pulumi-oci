// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSupportedHostShapesItem {
    /**
     * @return The default OCPU count of the shape.
     * 
     */
    private @Nullable Double defaultOcpuCount;
    /**
     * @return Description of the shape.
     * 
     */
    private @Nullable String description;
    /**
     * @return Whether the shape supports &#34;MONTH&#34; SKU.
     * 
     */
    private @Nullable Boolean isSupportMonthlySku;
    /**
     * @return Indicates whether the shape supports shielded instances.
     * 
     */
    private @Nullable Boolean isSupportShieldedInstances;
    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    private @Nullable String name;
    /**
     * @return The family of the shape. ESXi hosts of one SDDC must have the same shape family.
     * 
     */
    private @Nullable String shapeFamily;
    /**
     * @return Support OCPU count of the shape.
     * 
     */
    private @Nullable List<Double> supportedOcpuCounts;
    /**
     * @return The operations where you can use the shape. The operations can be CREATE_SDDC or CREATE_ESXI_HOST.
     * 
     */
    private @Nullable List<String> supportedOperations;
    /**
     * @return The supported SDDC types for the shape.
     * 
     * @deprecated
     * The &#39;supported_sddc_types&#39; field has been deprecated. Please use &#39;is_single_host_sddc_supported&#39; instead.
     * 
     */
    @Deprecated /* The 'supported_sddc_types' field has been deprecated. Please use 'is_single_host_sddc_supported' instead. */
    private @Nullable List<String> supportedSddcTypes;
    /**
     * @return The VMware software versions supported by the shape.
     * 
     */
    private @Nullable List<String> supportedVmwareSoftwareVersions;

    private GetSupportedHostShapesItem() {}
    /**
     * @return The default OCPU count of the shape.
     * 
     */
    public Optional<Double> defaultOcpuCount() {
        return Optional.ofNullable(this.defaultOcpuCount);
    }
    /**
     * @return Description of the shape.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Whether the shape supports &#34;MONTH&#34; SKU.
     * 
     */
    public Optional<Boolean> isSupportMonthlySku() {
        return Optional.ofNullable(this.isSupportMonthlySku);
    }
    /**
     * @return Indicates whether the shape supports shielded instances.
     * 
     */
    public Optional<Boolean> isSupportShieldedInstances() {
        return Optional.ofNullable(this.isSupportShieldedInstances);
    }
    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The family of the shape. ESXi hosts of one SDDC must have the same shape family.
     * 
     */
    public Optional<String> shapeFamily() {
        return Optional.ofNullable(this.shapeFamily);
    }
    /**
     * @return Support OCPU count of the shape.
     * 
     */
    public List<Double> supportedOcpuCounts() {
        return this.supportedOcpuCounts == null ? List.of() : this.supportedOcpuCounts;
    }
    /**
     * @return The operations where you can use the shape. The operations can be CREATE_SDDC or CREATE_ESXI_HOST.
     * 
     */
    public List<String> supportedOperations() {
        return this.supportedOperations == null ? List.of() : this.supportedOperations;
    }
    /**
     * @return The supported SDDC types for the shape.
     * 
     * @deprecated
     * The &#39;supported_sddc_types&#39; field has been deprecated. Please use &#39;is_single_host_sddc_supported&#39; instead.
     * 
     */
    @Deprecated /* The 'supported_sddc_types' field has been deprecated. Please use 'is_single_host_sddc_supported' instead. */
    public List<String> supportedSddcTypes() {
        return this.supportedSddcTypes == null ? List.of() : this.supportedSddcTypes;
    }
    /**
     * @return The VMware software versions supported by the shape.
     * 
     */
    public List<String> supportedVmwareSoftwareVersions() {
        return this.supportedVmwareSoftwareVersions == null ? List.of() : this.supportedVmwareSoftwareVersions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSupportedHostShapesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double defaultOcpuCount;
        private @Nullable String description;
        private @Nullable Boolean isSupportMonthlySku;
        private @Nullable Boolean isSupportShieldedInstances;
        private @Nullable String name;
        private @Nullable String shapeFamily;
        private @Nullable List<Double> supportedOcpuCounts;
        private @Nullable List<String> supportedOperations;
        private @Nullable List<String> supportedSddcTypes;
        private @Nullable List<String> supportedVmwareSoftwareVersions;
        public Builder() {}
        public Builder(GetSupportedHostShapesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultOcpuCount = defaults.defaultOcpuCount;
    	      this.description = defaults.description;
    	      this.isSupportMonthlySku = defaults.isSupportMonthlySku;
    	      this.isSupportShieldedInstances = defaults.isSupportShieldedInstances;
    	      this.name = defaults.name;
    	      this.shapeFamily = defaults.shapeFamily;
    	      this.supportedOcpuCounts = defaults.supportedOcpuCounts;
    	      this.supportedOperations = defaults.supportedOperations;
    	      this.supportedSddcTypes = defaults.supportedSddcTypes;
    	      this.supportedVmwareSoftwareVersions = defaults.supportedVmwareSoftwareVersions;
        }

        @CustomType.Setter
        public Builder defaultOcpuCount(@Nullable Double defaultOcpuCount) {
            this.defaultOcpuCount = defaultOcpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder isSupportMonthlySku(@Nullable Boolean isSupportMonthlySku) {
            this.isSupportMonthlySku = isSupportMonthlySku;
            return this;
        }
        @CustomType.Setter
        public Builder isSupportShieldedInstances(@Nullable Boolean isSupportShieldedInstances) {
            this.isSupportShieldedInstances = isSupportShieldedInstances;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder shapeFamily(@Nullable String shapeFamily) {
            this.shapeFamily = shapeFamily;
            return this;
        }
        @CustomType.Setter
        public Builder supportedOcpuCounts(@Nullable List<Double> supportedOcpuCounts) {
            this.supportedOcpuCounts = supportedOcpuCounts;
            return this;
        }
        public Builder supportedOcpuCounts(Double... supportedOcpuCounts) {
            return supportedOcpuCounts(List.of(supportedOcpuCounts));
        }
        @CustomType.Setter
        public Builder supportedOperations(@Nullable List<String> supportedOperations) {
            this.supportedOperations = supportedOperations;
            return this;
        }
        public Builder supportedOperations(String... supportedOperations) {
            return supportedOperations(List.of(supportedOperations));
        }
        @CustomType.Setter
        public Builder supportedSddcTypes(@Nullable List<String> supportedSddcTypes) {
            this.supportedSddcTypes = supportedSddcTypes;
            return this;
        }
        public Builder supportedSddcTypes(String... supportedSddcTypes) {
            return supportedSddcTypes(List.of(supportedSddcTypes));
        }
        @CustomType.Setter
        public Builder supportedVmwareSoftwareVersions(@Nullable List<String> supportedVmwareSoftwareVersions) {
            this.supportedVmwareSoftwareVersions = supportedVmwareSoftwareVersions;
            return this;
        }
        public Builder supportedVmwareSoftwareVersions(String... supportedVmwareSoftwareVersions) {
            return supportedVmwareSoftwareVersions(List.of(supportedVmwareSoftwareVersions));
        }
        public GetSupportedHostShapesItem build() {
            final var o = new GetSupportedHostShapesItem();
            o.defaultOcpuCount = defaultOcpuCount;
            o.description = description;
            o.isSupportMonthlySku = isSupportMonthlySku;
            o.isSupportShieldedInstances = isSupportShieldedInstances;
            o.name = name;
            o.shapeFamily = shapeFamily;
            o.supportedOcpuCounts = supportedOcpuCounts;
            o.supportedOperations = supportedOperations;
            o.supportedSddcTypes = supportedSddcTypes;
            o.supportedVmwareSoftwareVersions = supportedVmwareSoftwareVersions;
            return o;
        }
    }
}
