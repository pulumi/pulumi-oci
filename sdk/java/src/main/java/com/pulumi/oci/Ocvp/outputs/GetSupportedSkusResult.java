// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Ocvp.outputs.GetSupportedSkusFilter;
import com.pulumi.oci.Ocvp.outputs.GetSupportedSkusItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSupportedSkusResult {
    private String compartmentId;
    private @Nullable List<GetSupportedSkusFilter> filters;
    private @Nullable String hostShapeName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The list of the supported SKUs.
     * 
     */
    private List<GetSupportedSkusItem> items;

    private GetSupportedSkusResult() {}
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetSupportedSkusFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> hostShapeName() {
        return Optional.ofNullable(this.hostShapeName);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of the supported SKUs.
     * 
     */
    public List<GetSupportedSkusItem> items() {
        return this.items;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSupportedSkusResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetSupportedSkusFilter> filters;
        private @Nullable String hostShapeName;
        private String id;
        private List<GetSupportedSkusItem> items;
        public Builder() {}
        public Builder(GetSupportedSkusResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.hostShapeName = defaults.hostShapeName;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
        }

        @CustomType.Setter
        public Builder compartmentId(String compartmentId) {
            if (compartmentId == null) {
              throw new MissingRequiredPropertyException("GetSupportedSkusResult", "compartmentId");
            }
            this.compartmentId = compartmentId;
            return this;
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetSupportedSkusFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetSupportedSkusFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder hostShapeName(@Nullable String hostShapeName) {

            this.hostShapeName = hostShapeName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSupportedSkusResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder items(List<GetSupportedSkusItem> items) {
            if (items == null) {
              throw new MissingRequiredPropertyException("GetSupportedSkusResult", "items");
            }
            this.items = items;
            return this;
        }
        public Builder items(GetSupportedSkusItem... items) {
            return items(List.of(items));
        }
        public GetSupportedSkusResult build() {
            final var _resultValue = new GetSupportedSkusResult();
            _resultValue.compartmentId = compartmentId;
            _resultValue.filters = filters;
            _resultValue.hostShapeName = hostShapeName;
            _resultValue.id = id;
            _resultValue.items = items;
            return _resultValue;
        }
    }
}
