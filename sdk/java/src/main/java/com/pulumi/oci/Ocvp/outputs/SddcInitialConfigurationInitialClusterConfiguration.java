// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.Ocvp.outputs.SddcInitialConfigurationInitialClusterConfigurationDatastore;
import com.pulumi.oci.Ocvp.outputs.SddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SddcInitialConfigurationInitialClusterConfiguration {
    /**
     * @return The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC. **Deprecated**.
     * 
     */
    private @Nullable Integer actualEsxiHostsCount;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
     * 
     */
    private @Nullable String capacityReservationId;
    /**
     * @return The availability domain to create the Cluster&#39;s ESXi hosts in. For multi-AD Cluster deployment, set to `multi-AD`.
     * 
     */
    private String computeAvailabilityDomain;
    /**
     * @return A list of datastore info for the Cluster. This value is required only when `initialHostShapeName` is a standard shape.
     * 
     */
    private @Nullable List<SddcInitialConfigurationInitialClusterConfigurationDatastore> datastores;
    /**
     * @return A descriptive name for the Cluster. Cluster name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
     * 
     */
    private @Nullable String displayName;
    /**
     * @return The number of ESXi hosts to create in the Cluster. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)). Creating a Cluster with a ESXi host count of 1 will be considered a single ESXi host Cluster.
     * 
     * **Note:** If you later delete EXSi hosts from a production Cluster to total less than 3, you are still billed for the 3 minimum recommended ESXi hosts. Also, you cannot add more VMware workloads to the Cluster until it again has at least 3 ESXi hosts.
     * 
     */
    private Integer esxiHostsCount;
    /**
     * @return The billing option selected during Cluster creation. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedCommitmentSummary/ListSupportedCommitments).
     * 
     */
    private @Nullable String initialCommitment;
    /**
     * @return The initial OCPU count of the Cluster&#39;s ESXi hosts.
     * 
     */
    private @Nullable Double initialHostOcpuCount;
    /**
     * @return The initial compute shape of the Cluster&#39;s ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
     * 
     */
    private @Nullable String initialHostShapeName;
    /**
     * @return A prefix used in the name of each ESXi host and Compute instance in the Cluster. If this isn&#39;t set, the Cluster&#39;s `displayName` is used as the prefix.
     * 
     * For example, if the value is `myCluster`, the ESXi hosts are named `myCluster-1`, `myCluster-2`, and so on.
     * 
     */
    private @Nullable String instanceDisplayNamePrefix;
    /**
     * @return Indicates whether shielded instance is enabled for this Cluster.
     * 
     */
    private @Nullable Boolean isShieldedInstanceEnabled;
    /**
     * @return The network configurations used by Cluster, including [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet and VLANs.
     * 
     */
    private @Nullable SddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration networkConfiguration;
    /**
     * @return vSphere Cluster types.
     * 
     */
    private String vsphereType;
    /**
     * @return The CIDR block for the IP addresses that VMware VMs in the Cluster use to run application workloads.
     * 
     */
    private @Nullable String workloadNetworkCidr;

    private SddcInitialConfigurationInitialClusterConfiguration() {}
    /**
     * @return The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC. **Deprecated**.
     * 
     */
    public Optional<Integer> actualEsxiHostsCount() {
        return Optional.ofNullable(this.actualEsxiHostsCount);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Capacity Reservation.
     * 
     */
    public Optional<String> capacityReservationId() {
        return Optional.ofNullable(this.capacityReservationId);
    }
    /**
     * @return The availability domain to create the Cluster&#39;s ESXi hosts in. For multi-AD Cluster deployment, set to `multi-AD`.
     * 
     */
    public String computeAvailabilityDomain() {
        return this.computeAvailabilityDomain;
    }
    /**
     * @return A list of datastore info for the Cluster. This value is required only when `initialHostShapeName` is a standard shape.
     * 
     */
    public List<SddcInitialConfigurationInitialClusterConfigurationDatastore> datastores() {
        return this.datastores == null ? List.of() : this.datastores;
    }
    /**
     * @return A descriptive name for the Cluster. Cluster name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The number of ESXi hosts to create in the Cluster. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)). Creating a Cluster with a ESXi host count of 1 will be considered a single ESXi host Cluster.
     * 
     * **Note:** If you later delete EXSi hosts from a production Cluster to total less than 3, you are still billed for the 3 minimum recommended ESXi hosts. Also, you cannot add more VMware workloads to the Cluster until it again has at least 3 ESXi hosts.
     * 
     */
    public Integer esxiHostsCount() {
        return this.esxiHostsCount;
    }
    /**
     * @return The billing option selected during Cluster creation. [ListSupportedCommitments](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedCommitmentSummary/ListSupportedCommitments).
     * 
     */
    public Optional<String> initialCommitment() {
        return Optional.ofNullable(this.initialCommitment);
    }
    /**
     * @return The initial OCPU count of the Cluster&#39;s ESXi hosts.
     * 
     */
    public Optional<Double> initialHostOcpuCount() {
        return Optional.ofNullable(this.initialHostOcpuCount);
    }
    /**
     * @return The initial compute shape of the Cluster&#39;s ESXi hosts. [ListSupportedHostShapes](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedHostShapes/ListSupportedHostShapes).
     * 
     */
    public Optional<String> initialHostShapeName() {
        return Optional.ofNullable(this.initialHostShapeName);
    }
    /**
     * @return A prefix used in the name of each ESXi host and Compute instance in the Cluster. If this isn&#39;t set, the Cluster&#39;s `displayName` is used as the prefix.
     * 
     * For example, if the value is `myCluster`, the ESXi hosts are named `myCluster-1`, `myCluster-2`, and so on.
     * 
     */
    public Optional<String> instanceDisplayNamePrefix() {
        return Optional.ofNullable(this.instanceDisplayNamePrefix);
    }
    /**
     * @return Indicates whether shielded instance is enabled for this Cluster.
     * 
     */
    public Optional<Boolean> isShieldedInstanceEnabled() {
        return Optional.ofNullable(this.isShieldedInstanceEnabled);
    }
    /**
     * @return The network configurations used by Cluster, including [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet and VLANs.
     * 
     */
    public Optional<SddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }
    /**
     * @return vSphere Cluster types.
     * 
     */
    public String vsphereType() {
        return this.vsphereType;
    }
    /**
     * @return The CIDR block for the IP addresses that VMware VMs in the Cluster use to run application workloads.
     * 
     */
    public Optional<String> workloadNetworkCidr() {
        return Optional.ofNullable(this.workloadNetworkCidr);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SddcInitialConfigurationInitialClusterConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer actualEsxiHostsCount;
        private @Nullable String capacityReservationId;
        private String computeAvailabilityDomain;
        private @Nullable List<SddcInitialConfigurationInitialClusterConfigurationDatastore> datastores;
        private @Nullable String displayName;
        private Integer esxiHostsCount;
        private @Nullable String initialCommitment;
        private @Nullable Double initialHostOcpuCount;
        private @Nullable String initialHostShapeName;
        private @Nullable String instanceDisplayNamePrefix;
        private @Nullable Boolean isShieldedInstanceEnabled;
        private @Nullable SddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration networkConfiguration;
        private String vsphereType;
        private @Nullable String workloadNetworkCidr;
        public Builder() {}
        public Builder(SddcInitialConfigurationInitialClusterConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actualEsxiHostsCount = defaults.actualEsxiHostsCount;
    	      this.capacityReservationId = defaults.capacityReservationId;
    	      this.computeAvailabilityDomain = defaults.computeAvailabilityDomain;
    	      this.datastores = defaults.datastores;
    	      this.displayName = defaults.displayName;
    	      this.esxiHostsCount = defaults.esxiHostsCount;
    	      this.initialCommitment = defaults.initialCommitment;
    	      this.initialHostOcpuCount = defaults.initialHostOcpuCount;
    	      this.initialHostShapeName = defaults.initialHostShapeName;
    	      this.instanceDisplayNamePrefix = defaults.instanceDisplayNamePrefix;
    	      this.isShieldedInstanceEnabled = defaults.isShieldedInstanceEnabled;
    	      this.networkConfiguration = defaults.networkConfiguration;
    	      this.vsphereType = defaults.vsphereType;
    	      this.workloadNetworkCidr = defaults.workloadNetworkCidr;
        }

        @CustomType.Setter
        public Builder actualEsxiHostsCount(@Nullable Integer actualEsxiHostsCount) {

            this.actualEsxiHostsCount = actualEsxiHostsCount;
            return this;
        }
        @CustomType.Setter
        public Builder capacityReservationId(@Nullable String capacityReservationId) {

            this.capacityReservationId = capacityReservationId;
            return this;
        }
        @CustomType.Setter
        public Builder computeAvailabilityDomain(String computeAvailabilityDomain) {
            if (computeAvailabilityDomain == null) {
              throw new MissingRequiredPropertyException("SddcInitialConfigurationInitialClusterConfiguration", "computeAvailabilityDomain");
            }
            this.computeAvailabilityDomain = computeAvailabilityDomain;
            return this;
        }
        @CustomType.Setter
        public Builder datastores(@Nullable List<SddcInitialConfigurationInitialClusterConfigurationDatastore> datastores) {

            this.datastores = datastores;
            return this;
        }
        public Builder datastores(SddcInitialConfigurationInitialClusterConfigurationDatastore... datastores) {
            return datastores(List.of(datastores));
        }
        @CustomType.Setter
        public Builder displayName(@Nullable String displayName) {

            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder esxiHostsCount(Integer esxiHostsCount) {
            if (esxiHostsCount == null) {
              throw new MissingRequiredPropertyException("SddcInitialConfigurationInitialClusterConfiguration", "esxiHostsCount");
            }
            this.esxiHostsCount = esxiHostsCount;
            return this;
        }
        @CustomType.Setter
        public Builder initialCommitment(@Nullable String initialCommitment) {

            this.initialCommitment = initialCommitment;
            return this;
        }
        @CustomType.Setter
        public Builder initialHostOcpuCount(@Nullable Double initialHostOcpuCount) {

            this.initialHostOcpuCount = initialHostOcpuCount;
            return this;
        }
        @CustomType.Setter
        public Builder initialHostShapeName(@Nullable String initialHostShapeName) {

            this.initialHostShapeName = initialHostShapeName;
            return this;
        }
        @CustomType.Setter
        public Builder instanceDisplayNamePrefix(@Nullable String instanceDisplayNamePrefix) {

            this.instanceDisplayNamePrefix = instanceDisplayNamePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder isShieldedInstanceEnabled(@Nullable Boolean isShieldedInstanceEnabled) {

            this.isShieldedInstanceEnabled = isShieldedInstanceEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder networkConfiguration(@Nullable SddcInitialConfigurationInitialClusterConfigurationNetworkConfiguration networkConfiguration) {

            this.networkConfiguration = networkConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder vsphereType(String vsphereType) {
            if (vsphereType == null) {
              throw new MissingRequiredPropertyException("SddcInitialConfigurationInitialClusterConfiguration", "vsphereType");
            }
            this.vsphereType = vsphereType;
            return this;
        }
        @CustomType.Setter
        public Builder workloadNetworkCidr(@Nullable String workloadNetworkCidr) {

            this.workloadNetworkCidr = workloadNetworkCidr;
            return this;
        }
        public SddcInitialConfigurationInitialClusterConfiguration build() {
            final var _resultValue = new SddcInitialConfigurationInitialClusterConfiguration();
            _resultValue.actualEsxiHostsCount = actualEsxiHostsCount;
            _resultValue.capacityReservationId = capacityReservationId;
            _resultValue.computeAvailabilityDomain = computeAvailabilityDomain;
            _resultValue.datastores = datastores;
            _resultValue.displayName = displayName;
            _resultValue.esxiHostsCount = esxiHostsCount;
            _resultValue.initialCommitment = initialCommitment;
            _resultValue.initialHostOcpuCount = initialHostOcpuCount;
            _resultValue.initialHostShapeName = initialHostShapeName;
            _resultValue.instanceDisplayNamePrefix = instanceDisplayNamePrefix;
            _resultValue.isShieldedInstanceEnabled = isShieldedInstanceEnabled;
            _resultValue.networkConfiguration = networkConfiguration;
            _resultValue.vsphereType = vsphereType;
            _resultValue.workloadNetworkCidr = workloadNetworkCidr;
            return _resultValue;
        }
    }
}
