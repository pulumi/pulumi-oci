// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Oda.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Oda.inputs.OdaInstanceRestrictedOperationArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OdaInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final OdaInstanceState Empty = new OdaInstanceState();

    /**
     * A list of attachment identifiers for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
     * 
     */
    @Import(name="attachmentIds")
    private @Nullable Output<List<String>> attachmentIds;

    /**
     * @return A list of attachment identifiers for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
     * 
     */
    public Optional<Output<List<String>>> attachmentIds() {
        return Optional.ofNullable(this.attachmentIds);
    }

    /**
     * A list of attachment types for this instance (if any). Use attachmentIds to get the details of the attachments.
     * 
     */
    @Import(name="attachmentTypes")
    private @Nullable Output<List<String>> attachmentTypes;

    /**
     * @return A list of attachment types for this instance (if any). Use attachmentIds to get the details of the attachments.
     * 
     */
    public Optional<Output<List<String>>> attachmentTypes() {
        return Optional.ofNullable(this.attachmentTypes);
    }

    /**
     * (Updatable) Identifier of the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Identifier of the compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * URL for the connector&#39;s endpoint.
     * 
     */
    @Import(name="connectorUrl")
    private @Nullable Output<String> connectorUrl;

    /**
     * @return URL for the connector&#39;s endpoint.
     * 
     */
    public Optional<Output<String>> connectorUrl() {
        return Optional.ofNullable(this.connectorUrl);
    }

    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Description of the Digital Assistant instance.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description of the Digital Assistant instance.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * If isRoleBasedAccess is set to true, this property specifies the URL for the administration console used to manage the Identity Application instance Digital Assistant has created inside the user-specified identity domain.
     * 
     */
    @Import(name="identityAppConsoleUrl")
    private @Nullable Output<String> identityAppConsoleUrl;

    /**
     * @return If isRoleBasedAccess is set to true, this property specifies the URL for the administration console used to manage the Identity Application instance Digital Assistant has created inside the user-specified identity domain.
     * 
     */
    public Optional<Output<String>> identityAppConsoleUrl() {
        return Optional.ofNullable(this.identityAppConsoleUrl);
    }

    /**
     * If isRoleBasedAccess is set to true, this property specifies the GUID of the Identity Application instance Digital Assistant has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this Digital Assistant instance for users within the identity domain.
     * 
     */
    @Import(name="identityAppGuid")
    private @Nullable Output<String> identityAppGuid;

    /**
     * @return If isRoleBasedAccess is set to true, this property specifies the GUID of the Identity Application instance Digital Assistant has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this Digital Assistant instance for users within the identity domain.
     * 
     */
    public Optional<Output<String>> identityAppGuid() {
        return Optional.ofNullable(this.identityAppGuid);
    }

    /**
     * If isRoleBasedAccess is set to true, this property specifies the identity domain that is to be used to implement this type of authorzation. Digital Assistant will create an Identity Application instance and Application Roles within this identity domain. The caller may then perform and user roll mappings they like to grant access to users within the identity domain.
     * 
     */
    @Import(name="identityDomain")
    private @Nullable Output<String> identityDomain;

    /**
     * @return If isRoleBasedAccess is set to true, this property specifies the identity domain that is to be used to implement this type of authorzation. Digital Assistant will create an Identity Application instance and Application Roles within this identity domain. The caller may then perform and user roll mappings they like to grant access to users within the identity domain.
     * 
     */
    public Optional<Output<String>> identityDomain() {
        return Optional.ofNullable(this.identityDomain);
    }

    /**
     * A list of package ids imported into this instance (if any). Use GetImportedPackage to get the details of the imported packages.
     * 
     */
    @Import(name="importedPackageIds")
    private @Nullable Output<List<String>> importedPackageIds;

    /**
     * @return A list of package ids imported into this instance (if any). Use GetImportedPackage to get the details of the imported packages.
     * 
     */
    public Optional<Output<List<String>>> importedPackageIds() {
        return Optional.ofNullable(this.importedPackageIds);
    }

    /**
     * A list of package names imported into this instance (if any). Use importedPackageIds field to get the details of the imported packages.
     * 
     */
    @Import(name="importedPackageNames")
    private @Nullable Output<List<String>> importedPackageNames;

    /**
     * @return A list of package names imported into this instance (if any). Use importedPackageIds field to get the details of the imported packages.
     * 
     */
    public Optional<Output<List<String>>> importedPackageNames() {
        return Optional.ofNullable(this.importedPackageNames);
    }

    /**
     * Should this Digital Assistant instance use role-based authorization via an identity domain (true) or use the default policy-based authorization via IAM policies (false)
     * 
     */
    @Import(name="isRoleBasedAccess")
    private @Nullable Output<Boolean> isRoleBasedAccess;

    /**
     * @return Should this Digital Assistant instance use role-based authorization via an identity domain (true) or use the default policy-based authorization via IAM policies (false)
     * 
     */
    public Optional<Output<Boolean>> isRoleBasedAccess() {
        return Optional.ofNullable(this.isRoleBasedAccess);
    }

    /**
     * The current sub-state of the Digital Assistant instance.
     * 
     */
    @Import(name="lifecycleSubState")
    private @Nullable Output<String> lifecycleSubState;

    /**
     * @return The current sub-state of the Digital Assistant instance.
     * 
     */
    public Optional<Output<String>> lifecycleSubState() {
        return Optional.ofNullable(this.lifecycleSubState);
    }

    /**
     * A list of restricted operations (across all attachments) for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
     * 
     */
    @Import(name="restrictedOperations")
    private @Nullable Output<List<OdaInstanceRestrictedOperationArgs>> restrictedOperations;

    /**
     * @return A list of restricted operations (across all attachments) for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
     * 
     */
    public Optional<Output<List<OdaInstanceRestrictedOperationArgs>>> restrictedOperations() {
        return Optional.ofNullable(this.restrictedOperations);
    }

    /**
     * Shape or size of the instance.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    @Import(name="shapeName")
    private @Nullable Output<String> shapeName;

    /**
     * @return Shape or size of the instance.
     * 
     * ** IMPORTANT **
     * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
     * 
     */
    public Optional<Output<String>> shapeName() {
        return Optional.ofNullable(this.shapeName);
    }

    /**
     * The current state of the Digital Assistant instance.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the Digital Assistant instance.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A message that describes the current state in more detail. For example, actionable information about an instance that&#39;s in the `FAILED` state.
     * 
     */
    @Import(name="stateMessage")
    private @Nullable Output<String> stateMessage;

    /**
     * @return A message that describes the current state in more detail. For example, actionable information about an instance that&#39;s in the `FAILED` state.
     * 
     */
    public Optional<Output<String>> stateMessage() {
        return Optional.ofNullable(this.stateMessage);
    }

    /**
     * When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * URL for the Digital Assistant web application that&#39;s associated with the instance.
     * 
     */
    @Import(name="webAppUrl")
    private @Nullable Output<String> webAppUrl;

    /**
     * @return URL for the Digital Assistant web application that&#39;s associated with the instance.
     * 
     */
    public Optional<Output<String>> webAppUrl() {
        return Optional.ofNullable(this.webAppUrl);
    }

    private OdaInstanceState() {}

    private OdaInstanceState(OdaInstanceState $) {
        this.attachmentIds = $.attachmentIds;
        this.attachmentTypes = $.attachmentTypes;
        this.compartmentId = $.compartmentId;
        this.connectorUrl = $.connectorUrl;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.identityAppConsoleUrl = $.identityAppConsoleUrl;
        this.identityAppGuid = $.identityAppGuid;
        this.identityDomain = $.identityDomain;
        this.importedPackageIds = $.importedPackageIds;
        this.importedPackageNames = $.importedPackageNames;
        this.isRoleBasedAccess = $.isRoleBasedAccess;
        this.lifecycleSubState = $.lifecycleSubState;
        this.restrictedOperations = $.restrictedOperations;
        this.shapeName = $.shapeName;
        this.state = $.state;
        this.stateMessage = $.stateMessage;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.webAppUrl = $.webAppUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OdaInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OdaInstanceState $;

        public Builder() {
            $ = new OdaInstanceState();
        }

        public Builder(OdaInstanceState defaults) {
            $ = new OdaInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachmentIds A list of attachment identifiers for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
         * 
         * @return builder
         * 
         */
        public Builder attachmentIds(@Nullable Output<List<String>> attachmentIds) {
            $.attachmentIds = attachmentIds;
            return this;
        }

        /**
         * @param attachmentIds A list of attachment identifiers for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
         * 
         * @return builder
         * 
         */
        public Builder attachmentIds(List<String> attachmentIds) {
            return attachmentIds(Output.of(attachmentIds));
        }

        /**
         * @param attachmentIds A list of attachment identifiers for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
         * 
         * @return builder
         * 
         */
        public Builder attachmentIds(String... attachmentIds) {
            return attachmentIds(List.of(attachmentIds));
        }

        /**
         * @param attachmentTypes A list of attachment types for this instance (if any). Use attachmentIds to get the details of the attachments.
         * 
         * @return builder
         * 
         */
        public Builder attachmentTypes(@Nullable Output<List<String>> attachmentTypes) {
            $.attachmentTypes = attachmentTypes;
            return this;
        }

        /**
         * @param attachmentTypes A list of attachment types for this instance (if any). Use attachmentIds to get the details of the attachments.
         * 
         * @return builder
         * 
         */
        public Builder attachmentTypes(List<String> attachmentTypes) {
            return attachmentTypes(Output.of(attachmentTypes));
        }

        /**
         * @param attachmentTypes A list of attachment types for this instance (if any). Use attachmentIds to get the details of the attachments.
         * 
         * @return builder
         * 
         */
        public Builder attachmentTypes(String... attachmentTypes) {
            return attachmentTypes(List.of(attachmentTypes));
        }

        /**
         * @param compartmentId (Updatable) Identifier of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Identifier of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param connectorUrl URL for the connector&#39;s endpoint.
         * 
         * @return builder
         * 
         */
        public Builder connectorUrl(@Nullable Output<String> connectorUrl) {
            $.connectorUrl = connectorUrl;
            return this;
        }

        /**
         * @param connectorUrl URL for the connector&#39;s endpoint.
         * 
         * @return builder
         * 
         */
        public Builder connectorUrl(String connectorUrl) {
            return connectorUrl(Output.of(connectorUrl));
        }

        /**
         * @param definedTags (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Description of the Digital Assistant instance.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of the Digital Assistant instance.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) User-friendly name for the instance. Avoid entering confidential information. You can change this value anytime.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type, or scope. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param identityAppConsoleUrl If isRoleBasedAccess is set to true, this property specifies the URL for the administration console used to manage the Identity Application instance Digital Assistant has created inside the user-specified identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityAppConsoleUrl(@Nullable Output<String> identityAppConsoleUrl) {
            $.identityAppConsoleUrl = identityAppConsoleUrl;
            return this;
        }

        /**
         * @param identityAppConsoleUrl If isRoleBasedAccess is set to true, this property specifies the URL for the administration console used to manage the Identity Application instance Digital Assistant has created inside the user-specified identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityAppConsoleUrl(String identityAppConsoleUrl) {
            return identityAppConsoleUrl(Output.of(identityAppConsoleUrl));
        }

        /**
         * @param identityAppGuid If isRoleBasedAccess is set to true, this property specifies the GUID of the Identity Application instance Digital Assistant has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this Digital Assistant instance for users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityAppGuid(@Nullable Output<String> identityAppGuid) {
            $.identityAppGuid = identityAppGuid;
            return this;
        }

        /**
         * @param identityAppGuid If isRoleBasedAccess is set to true, this property specifies the GUID of the Identity Application instance Digital Assistant has created inside the user-specified identity domain. This identity application instance may be used to host user roll mappings to grant access to this Digital Assistant instance for users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityAppGuid(String identityAppGuid) {
            return identityAppGuid(Output.of(identityAppGuid));
        }

        /**
         * @param identityDomain If isRoleBasedAccess is set to true, this property specifies the identity domain that is to be used to implement this type of authorzation. Digital Assistant will create an Identity Application instance and Application Roles within this identity domain. The caller may then perform and user roll mappings they like to grant access to users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityDomain(@Nullable Output<String> identityDomain) {
            $.identityDomain = identityDomain;
            return this;
        }

        /**
         * @param identityDomain If isRoleBasedAccess is set to true, this property specifies the identity domain that is to be used to implement this type of authorzation. Digital Assistant will create an Identity Application instance and Application Roles within this identity domain. The caller may then perform and user roll mappings they like to grant access to users within the identity domain.
         * 
         * @return builder
         * 
         */
        public Builder identityDomain(String identityDomain) {
            return identityDomain(Output.of(identityDomain));
        }

        /**
         * @param importedPackageIds A list of package ids imported into this instance (if any). Use GetImportedPackage to get the details of the imported packages.
         * 
         * @return builder
         * 
         */
        public Builder importedPackageIds(@Nullable Output<List<String>> importedPackageIds) {
            $.importedPackageIds = importedPackageIds;
            return this;
        }

        /**
         * @param importedPackageIds A list of package ids imported into this instance (if any). Use GetImportedPackage to get the details of the imported packages.
         * 
         * @return builder
         * 
         */
        public Builder importedPackageIds(List<String> importedPackageIds) {
            return importedPackageIds(Output.of(importedPackageIds));
        }

        /**
         * @param importedPackageIds A list of package ids imported into this instance (if any). Use GetImportedPackage to get the details of the imported packages.
         * 
         * @return builder
         * 
         */
        public Builder importedPackageIds(String... importedPackageIds) {
            return importedPackageIds(List.of(importedPackageIds));
        }

        /**
         * @param importedPackageNames A list of package names imported into this instance (if any). Use importedPackageIds field to get the details of the imported packages.
         * 
         * @return builder
         * 
         */
        public Builder importedPackageNames(@Nullable Output<List<String>> importedPackageNames) {
            $.importedPackageNames = importedPackageNames;
            return this;
        }

        /**
         * @param importedPackageNames A list of package names imported into this instance (if any). Use importedPackageIds field to get the details of the imported packages.
         * 
         * @return builder
         * 
         */
        public Builder importedPackageNames(List<String> importedPackageNames) {
            return importedPackageNames(Output.of(importedPackageNames));
        }

        /**
         * @param importedPackageNames A list of package names imported into this instance (if any). Use importedPackageIds field to get the details of the imported packages.
         * 
         * @return builder
         * 
         */
        public Builder importedPackageNames(String... importedPackageNames) {
            return importedPackageNames(List.of(importedPackageNames));
        }

        /**
         * @param isRoleBasedAccess Should this Digital Assistant instance use role-based authorization via an identity domain (true) or use the default policy-based authorization via IAM policies (false)
         * 
         * @return builder
         * 
         */
        public Builder isRoleBasedAccess(@Nullable Output<Boolean> isRoleBasedAccess) {
            $.isRoleBasedAccess = isRoleBasedAccess;
            return this;
        }

        /**
         * @param isRoleBasedAccess Should this Digital Assistant instance use role-based authorization via an identity domain (true) or use the default policy-based authorization via IAM policies (false)
         * 
         * @return builder
         * 
         */
        public Builder isRoleBasedAccess(Boolean isRoleBasedAccess) {
            return isRoleBasedAccess(Output.of(isRoleBasedAccess));
        }

        /**
         * @param lifecycleSubState The current sub-state of the Digital Assistant instance.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleSubState(@Nullable Output<String> lifecycleSubState) {
            $.lifecycleSubState = lifecycleSubState;
            return this;
        }

        /**
         * @param lifecycleSubState The current sub-state of the Digital Assistant instance.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleSubState(String lifecycleSubState) {
            return lifecycleSubState(Output.of(lifecycleSubState));
        }

        /**
         * @param restrictedOperations A list of restricted operations (across all attachments) for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
         * 
         * @return builder
         * 
         */
        public Builder restrictedOperations(@Nullable Output<List<OdaInstanceRestrictedOperationArgs>> restrictedOperations) {
            $.restrictedOperations = restrictedOperations;
            return this;
        }

        /**
         * @param restrictedOperations A list of restricted operations (across all attachments) for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
         * 
         * @return builder
         * 
         */
        public Builder restrictedOperations(List<OdaInstanceRestrictedOperationArgs> restrictedOperations) {
            return restrictedOperations(Output.of(restrictedOperations));
        }

        /**
         * @param restrictedOperations A list of restricted operations (across all attachments) for this instance (if any). Use GetOdaInstanceAttachment to get the details of the attachments.
         * 
         * @return builder
         * 
         */
        public Builder restrictedOperations(OdaInstanceRestrictedOperationArgs... restrictedOperations) {
            return restrictedOperations(List.of(restrictedOperations));
        }

        /**
         * @param shapeName Shape or size of the instance.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder shapeName(@Nullable Output<String> shapeName) {
            $.shapeName = shapeName;
            return this;
        }

        /**
         * @param shapeName Shape or size of the instance.
         * 
         * ** IMPORTANT **
         * Any change to a property that does not support update will force the destruction and recreation of the resource with the new property values
         * 
         * @return builder
         * 
         */
        public Builder shapeName(String shapeName) {
            return shapeName(Output.of(shapeName));
        }

        /**
         * @param state The current state of the Digital Assistant instance.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the Digital Assistant instance.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param stateMessage A message that describes the current state in more detail. For example, actionable information about an instance that&#39;s in the `FAILED` state.
         * 
         * @return builder
         * 
         */
        public Builder stateMessage(@Nullable Output<String> stateMessage) {
            $.stateMessage = stateMessage;
            return this;
        }

        /**
         * @param stateMessage A message that describes the current state in more detail. For example, actionable information about an instance that&#39;s in the `FAILED` state.
         * 
         * @return builder
         * 
         */
        public Builder stateMessage(String stateMessage) {
            return stateMessage(Output.of(stateMessage));
        }

        /**
         * @param timeCreated When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated When the Digital Assistant instance was created. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated When the Digital Assistance instance was last updated. A date-time string as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param webAppUrl URL for the Digital Assistant web application that&#39;s associated with the instance.
         * 
         * @return builder
         * 
         */
        public Builder webAppUrl(@Nullable Output<String> webAppUrl) {
            $.webAppUrl = webAppUrl;
            return this;
        }

        /**
         * @param webAppUrl URL for the Digital Assistant web application that&#39;s associated with the instance.
         * 
         * @return builder
         * 
         */
        public Builder webAppUrl(String webAppUrl) {
            return webAppUrl(Output.of(webAppUrl));
        }

        public OdaInstanceState build() {
            return $;
        }
    }

}
