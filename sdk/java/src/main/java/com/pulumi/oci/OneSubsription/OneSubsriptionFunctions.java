// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.oci.OneSubsription.inputs.GetAggregatedComputedUsagesArgs;
import com.pulumi.oci.OneSubsription.inputs.GetAggregatedComputedUsagesPlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetBillingSchedulesArgs;
import com.pulumi.oci.OneSubsription.inputs.GetBillingSchedulesPlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetCommitmentArgs;
import com.pulumi.oci.OneSubsription.inputs.GetCommitmentPlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetCommitmentsArgs;
import com.pulumi.oci.OneSubsription.inputs.GetCommitmentsPlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetComputedUsageArgs;
import com.pulumi.oci.OneSubsription.inputs.GetComputedUsagePlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetComputedUsagesArgs;
import com.pulumi.oci.OneSubsription.inputs.GetComputedUsagesPlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetInvoiceLineComputedUsagesArgs;
import com.pulumi.oci.OneSubsription.inputs.GetInvoiceLineComputedUsagesPlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetInvoicesArgs;
import com.pulumi.oci.OneSubsription.inputs.GetInvoicesPlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetOrganizationSubscriptionsArgs;
import com.pulumi.oci.OneSubsription.inputs.GetOrganizationSubscriptionsPlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetRatecardsArgs;
import com.pulumi.oci.OneSubsription.inputs.GetRatecardsPlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServiceArgs;
import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServicePlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServicesArgs;
import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServicesPlainArgs;
import com.pulumi.oci.OneSubsription.inputs.GetSubscriptionsArgs;
import com.pulumi.oci.OneSubsription.inputs.GetSubscriptionsPlainArgs;
import com.pulumi.oci.OneSubsription.outputs.GetAggregatedComputedUsagesResult;
import com.pulumi.oci.OneSubsription.outputs.GetBillingSchedulesResult;
import com.pulumi.oci.OneSubsription.outputs.GetCommitmentResult;
import com.pulumi.oci.OneSubsription.outputs.GetCommitmentsResult;
import com.pulumi.oci.OneSubsription.outputs.GetComputedUsageResult;
import com.pulumi.oci.OneSubsription.outputs.GetComputedUsagesResult;
import com.pulumi.oci.OneSubsription.outputs.GetInvoiceLineComputedUsagesResult;
import com.pulumi.oci.OneSubsription.outputs.GetInvoicesResult;
import com.pulumi.oci.OneSubsription.outputs.GetOrganizationSubscriptionsResult;
import com.pulumi.oci.OneSubsription.outputs.GetRatecardsResult;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServiceResult;
import com.pulumi.oci.OneSubsription.outputs.GetSubscribedServicesResult;
import com.pulumi.oci.OneSubsription.outputs.GetSubscriptionsResult;
import com.pulumi.oci.Utilities;
import java.util.concurrent.CompletableFuture;

public final class OneSubsriptionFunctions {
    /**
     * This data source provides the list of Aggregated Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of aggregated computed usage details (there can be multiple Parent Products under a given SubID each of which is represented under Subscription Service Line # in SPM).
     * 
     */
    public static Output<GetAggregatedComputedUsagesResult> getAggregatedComputedUsages(GetAggregatedComputedUsagesArgs args) {
        return getAggregatedComputedUsages(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Aggregated Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of aggregated computed usage details (there can be multiple Parent Products under a given SubID each of which is represented under Subscription Service Line # in SPM).
     * 
     */
    public static CompletableFuture<GetAggregatedComputedUsagesResult> getAggregatedComputedUsagesPlain(GetAggregatedComputedUsagesPlainArgs args) {
        return getAggregatedComputedUsagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Aggregated Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of aggregated computed usage details (there can be multiple Parent Products under a given SubID each of which is represented under Subscription Service Line # in SPM).
     * 
     */
    public static Output<GetAggregatedComputedUsagesResult> getAggregatedComputedUsages(GetAggregatedComputedUsagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getAggregatedComputedUsages:getAggregatedComputedUsages", TypeShape.of(GetAggregatedComputedUsagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Aggregated Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of aggregated computed usage details (there can be multiple Parent Products under a given SubID each of which is represented under Subscription Service Line # in SPM).
     * 
     */
    public static Output<GetAggregatedComputedUsagesResult> getAggregatedComputedUsages(GetAggregatedComputedUsagesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getAggregatedComputedUsages:getAggregatedComputedUsages", TypeShape.of(GetAggregatedComputedUsagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Aggregated Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of aggregated computed usage details (there can be multiple Parent Products under a given SubID each of which is represented under Subscription Service Line # in SPM).
     * 
     */
    public static CompletableFuture<GetAggregatedComputedUsagesResult> getAggregatedComputedUsagesPlain(GetAggregatedComputedUsagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getAggregatedComputedUsages:getAggregatedComputedUsages", TypeShape.of(GetAggregatedComputedUsagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Billing Schedules in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all billing schedules for given subscription id and
     * for a particular Subscribed Service if provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetBillingSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testBillingSchedules = OneSubsriptionFunctions.getBillingSchedules(GetBillingSchedulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .subscribedServiceId(testSubscribedService.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBillingSchedulesResult> getBillingSchedules(GetBillingSchedulesArgs args) {
        return getBillingSchedules(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Billing Schedules in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all billing schedules for given subscription id and
     * for a particular Subscribed Service if provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetBillingSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testBillingSchedules = OneSubsriptionFunctions.getBillingSchedules(GetBillingSchedulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .subscribedServiceId(testSubscribedService.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBillingSchedulesResult> getBillingSchedulesPlain(GetBillingSchedulesPlainArgs args) {
        return getBillingSchedulesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Billing Schedules in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all billing schedules for given subscription id and
     * for a particular Subscribed Service if provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetBillingSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testBillingSchedules = OneSubsriptionFunctions.getBillingSchedules(GetBillingSchedulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .subscribedServiceId(testSubscribedService.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBillingSchedulesResult> getBillingSchedules(GetBillingSchedulesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getBillingSchedules:getBillingSchedules", TypeShape.of(GetBillingSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Billing Schedules in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all billing schedules for given subscription id and
     * for a particular Subscribed Service if provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetBillingSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testBillingSchedules = OneSubsriptionFunctions.getBillingSchedules(GetBillingSchedulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .subscribedServiceId(testSubscribedService.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBillingSchedulesResult> getBillingSchedules(GetBillingSchedulesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getBillingSchedules:getBillingSchedules", TypeShape.of(GetBillingSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Billing Schedules in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all billing schedules for given subscription id and
     * for a particular Subscribed Service if provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetBillingSchedulesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testBillingSchedules = OneSubsriptionFunctions.getBillingSchedules(GetBillingSchedulesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .subscribedServiceId(testSubscribedService.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBillingSchedulesResult> getBillingSchedulesPlain(GetBillingSchedulesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getBillingSchedules:getBillingSchedules", TypeShape.of(GetBillingSchedulesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Commitment resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This API returns the commitment details corresponding to the id provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetCommitmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCommitment = OneSubsriptionFunctions.getCommitment(GetCommitmentArgs.builder()
     *             .commitmentId(testCommitmentOciOnesubscriptionCommitment.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCommitmentResult> getCommitment(GetCommitmentArgs args) {
        return getCommitment(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Commitment resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This API returns the commitment details corresponding to the id provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetCommitmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCommitment = OneSubsriptionFunctions.getCommitment(GetCommitmentArgs.builder()
     *             .commitmentId(testCommitmentOciOnesubscriptionCommitment.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCommitmentResult> getCommitmentPlain(GetCommitmentPlainArgs args) {
        return getCommitmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Commitment resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This API returns the commitment details corresponding to the id provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetCommitmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCommitment = OneSubsriptionFunctions.getCommitment(GetCommitmentArgs.builder()
     *             .commitmentId(testCommitmentOciOnesubscriptionCommitment.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCommitmentResult> getCommitment(GetCommitmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getCommitment:getCommitment", TypeShape.of(GetCommitmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Commitment resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This API returns the commitment details corresponding to the id provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetCommitmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCommitment = OneSubsriptionFunctions.getCommitment(GetCommitmentArgs.builder()
     *             .commitmentId(testCommitmentOciOnesubscriptionCommitment.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCommitmentResult> getCommitment(GetCommitmentArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getCommitment:getCommitment", TypeShape.of(GetCommitmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Commitment resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This API returns the commitment details corresponding to the id provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetCommitmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCommitment = OneSubsriptionFunctions.getCommitment(GetCommitmentArgs.builder()
     *             .commitmentId(testCommitmentOciOnesubscriptionCommitment.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCommitmentResult> getCommitmentPlain(GetCommitmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getCommitment:getCommitment", TypeShape.of(GetCommitmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Commitments in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all commitments for a particular Subscribed Service
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetCommitmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCommitments = OneSubsriptionFunctions.getCommitments(GetCommitmentsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscribedServiceId(testSubscribedService.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCommitmentsResult> getCommitments(GetCommitmentsArgs args) {
        return getCommitments(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Commitments in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all commitments for a particular Subscribed Service
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetCommitmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCommitments = OneSubsriptionFunctions.getCommitments(GetCommitmentsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscribedServiceId(testSubscribedService.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCommitmentsResult> getCommitmentsPlain(GetCommitmentsPlainArgs args) {
        return getCommitmentsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Commitments in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all commitments for a particular Subscribed Service
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetCommitmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCommitments = OneSubsriptionFunctions.getCommitments(GetCommitmentsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscribedServiceId(testSubscribedService.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCommitmentsResult> getCommitments(GetCommitmentsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getCommitments:getCommitments", TypeShape.of(GetCommitmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Commitments in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all commitments for a particular Subscribed Service
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetCommitmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCommitments = OneSubsriptionFunctions.getCommitments(GetCommitmentsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscribedServiceId(testSubscribedService.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCommitmentsResult> getCommitments(GetCommitmentsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getCommitments:getCommitments", TypeShape.of(GetCommitmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Commitments in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all commitments for a particular Subscribed Service
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetCommitmentsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testCommitments = OneSubsriptionFunctions.getCommitments(GetCommitmentsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscribedServiceId(testSubscribedService.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCommitmentsResult> getCommitmentsPlain(GetCommitmentsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getCommitments:getCommitments", TypeShape.of(GetCommitmentsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Computed Usage resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is an API which returns Computed Usage corresponding to the id passed
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetComputedUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testComputedUsage = OneSubsriptionFunctions.getComputedUsage(GetComputedUsageArgs.builder()
     *             .compartmentId(compartmentId)
     *             .computedUsageId(testComputedUsageOciOnesubscriptionComputedUsage.id())
     *             .fields(computedUsageFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetComputedUsageResult> getComputedUsage(GetComputedUsageArgs args) {
        return getComputedUsage(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Computed Usage resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is an API which returns Computed Usage corresponding to the id passed
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetComputedUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testComputedUsage = OneSubsriptionFunctions.getComputedUsage(GetComputedUsageArgs.builder()
     *             .compartmentId(compartmentId)
     *             .computedUsageId(testComputedUsageOciOnesubscriptionComputedUsage.id())
     *             .fields(computedUsageFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetComputedUsageResult> getComputedUsagePlain(GetComputedUsagePlainArgs args) {
        return getComputedUsagePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Computed Usage resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is an API which returns Computed Usage corresponding to the id passed
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetComputedUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testComputedUsage = OneSubsriptionFunctions.getComputedUsage(GetComputedUsageArgs.builder()
     *             .compartmentId(compartmentId)
     *             .computedUsageId(testComputedUsageOciOnesubscriptionComputedUsage.id())
     *             .fields(computedUsageFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetComputedUsageResult> getComputedUsage(GetComputedUsageArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getComputedUsage:getComputedUsage", TypeShape.of(GetComputedUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Computed Usage resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is an API which returns Computed Usage corresponding to the id passed
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetComputedUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testComputedUsage = OneSubsriptionFunctions.getComputedUsage(GetComputedUsageArgs.builder()
     *             .compartmentId(compartmentId)
     *             .computedUsageId(testComputedUsageOciOnesubscriptionComputedUsage.id())
     *             .fields(computedUsageFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetComputedUsageResult> getComputedUsage(GetComputedUsageArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getComputedUsage:getComputedUsage", TypeShape.of(GetComputedUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Computed Usage resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is an API which returns Computed Usage corresponding to the id passed
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetComputedUsageArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testComputedUsage = OneSubsriptionFunctions.getComputedUsage(GetComputedUsageArgs.builder()
     *             .compartmentId(compartmentId)
     *             .computedUsageId(testComputedUsageOciOnesubscriptionComputedUsage.id())
     *             .fields(computedUsageFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetComputedUsageResult> getComputedUsagePlain(GetComputedUsagePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getComputedUsage:getComputedUsage", TypeShape.of(GetComputedUsageResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Computed Usages for given filters.
     * 
     */
    public static Output<GetComputedUsagesResult> getComputedUsages(GetComputedUsagesArgs args) {
        return getComputedUsages(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Computed Usages for given filters.
     * 
     */
    public static CompletableFuture<GetComputedUsagesResult> getComputedUsagesPlain(GetComputedUsagesPlainArgs args) {
        return getComputedUsagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Computed Usages for given filters.
     * 
     */
    public static Output<GetComputedUsagesResult> getComputedUsages(GetComputedUsagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getComputedUsages:getComputedUsages", TypeShape.of(GetComputedUsagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Computed Usages for given filters.
     * 
     */
    public static Output<GetComputedUsagesResult> getComputedUsages(GetComputedUsagesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getComputedUsages:getComputedUsages", TypeShape.of(GetComputedUsagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Computed Usages for given filters.
     * 
     */
    public static CompletableFuture<GetComputedUsagesResult> getComputedUsagesPlain(GetComputedUsagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getComputedUsages:getComputedUsages", TypeShape.of(GetComputedUsagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Invoice Line Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Invoiced Computed Usages for given Invoiceline id.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetInvoiceLineComputedUsagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testInvoiceLineComputedUsages = OneSubsriptionFunctions.getInvoiceLineComputedUsages(GetInvoiceLineComputedUsagesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .invoiceLineId(testInvoiceLine.id())
     *             .fields(invoiceLineComputedUsageFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInvoiceLineComputedUsagesResult> getInvoiceLineComputedUsages(GetInvoiceLineComputedUsagesArgs args) {
        return getInvoiceLineComputedUsages(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Invoice Line Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Invoiced Computed Usages for given Invoiceline id.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetInvoiceLineComputedUsagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testInvoiceLineComputedUsages = OneSubsriptionFunctions.getInvoiceLineComputedUsages(GetInvoiceLineComputedUsagesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .invoiceLineId(testInvoiceLine.id())
     *             .fields(invoiceLineComputedUsageFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInvoiceLineComputedUsagesResult> getInvoiceLineComputedUsagesPlain(GetInvoiceLineComputedUsagesPlainArgs args) {
        return getInvoiceLineComputedUsagesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Invoice Line Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Invoiced Computed Usages for given Invoiceline id.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetInvoiceLineComputedUsagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testInvoiceLineComputedUsages = OneSubsriptionFunctions.getInvoiceLineComputedUsages(GetInvoiceLineComputedUsagesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .invoiceLineId(testInvoiceLine.id())
     *             .fields(invoiceLineComputedUsageFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInvoiceLineComputedUsagesResult> getInvoiceLineComputedUsages(GetInvoiceLineComputedUsagesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getInvoiceLineComputedUsages:getInvoiceLineComputedUsages", TypeShape.of(GetInvoiceLineComputedUsagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Invoice Line Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Invoiced Computed Usages for given Invoiceline id.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetInvoiceLineComputedUsagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testInvoiceLineComputedUsages = OneSubsriptionFunctions.getInvoiceLineComputedUsages(GetInvoiceLineComputedUsagesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .invoiceLineId(testInvoiceLine.id())
     *             .fields(invoiceLineComputedUsageFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInvoiceLineComputedUsagesResult> getInvoiceLineComputedUsages(GetInvoiceLineComputedUsagesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getInvoiceLineComputedUsages:getInvoiceLineComputedUsages", TypeShape.of(GetInvoiceLineComputedUsagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Invoice Line Computed Usages in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Invoiced Computed Usages for given Invoiceline id.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetInvoiceLineComputedUsagesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testInvoiceLineComputedUsages = OneSubsriptionFunctions.getInvoiceLineComputedUsages(GetInvoiceLineComputedUsagesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .invoiceLineId(testInvoiceLine.id())
     *             .fields(invoiceLineComputedUsageFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInvoiceLineComputedUsagesResult> getInvoiceLineComputedUsagesPlain(GetInvoiceLineComputedUsagesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getInvoiceLineComputedUsages:getInvoiceLineComputedUsages", TypeShape.of(GetInvoiceLineComputedUsagesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Invoices in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Invoices for given filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetInvoicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testInvoices = OneSubsriptionFunctions.getInvoices(GetInvoicesArgs.builder()
     *             .arCustomerTransactionId(testArCustomerTransaction.id())
     *             .compartmentId(compartmentId)
     *             .fields(invoiceFields)
     *             .timeFrom(invoiceTimeFrom)
     *             .timeTo(invoiceTimeTo)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInvoicesResult> getInvoices(GetInvoicesArgs args) {
        return getInvoices(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Invoices in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Invoices for given filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetInvoicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testInvoices = OneSubsriptionFunctions.getInvoices(GetInvoicesArgs.builder()
     *             .arCustomerTransactionId(testArCustomerTransaction.id())
     *             .compartmentId(compartmentId)
     *             .fields(invoiceFields)
     *             .timeFrom(invoiceTimeFrom)
     *             .timeTo(invoiceTimeTo)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInvoicesResult> getInvoicesPlain(GetInvoicesPlainArgs args) {
        return getInvoicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Invoices in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Invoices for given filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetInvoicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testInvoices = OneSubsriptionFunctions.getInvoices(GetInvoicesArgs.builder()
     *             .arCustomerTransactionId(testArCustomerTransaction.id())
     *             .compartmentId(compartmentId)
     *             .fields(invoiceFields)
     *             .timeFrom(invoiceTimeFrom)
     *             .timeTo(invoiceTimeTo)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInvoicesResult> getInvoices(GetInvoicesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getInvoices:getInvoices", TypeShape.of(GetInvoicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Invoices in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Invoices for given filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetInvoicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testInvoices = OneSubsriptionFunctions.getInvoices(GetInvoicesArgs.builder()
     *             .arCustomerTransactionId(testArCustomerTransaction.id())
     *             .compartmentId(compartmentId)
     *             .fields(invoiceFields)
     *             .timeFrom(invoiceTimeFrom)
     *             .timeTo(invoiceTimeTo)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetInvoicesResult> getInvoices(GetInvoicesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getInvoices:getInvoices", TypeShape.of(GetInvoicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Invoices in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This is a collection API which returns a list of Invoices for given filters.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetInvoicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testInvoices = OneSubsriptionFunctions.getInvoices(GetInvoicesArgs.builder()
     *             .arCustomerTransactionId(testArCustomerTransaction.id())
     *             .compartmentId(compartmentId)
     *             .fields(invoiceFields)
     *             .timeFrom(invoiceTimeFrom)
     *             .timeTo(invoiceTimeTo)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetInvoicesResult> getInvoicesPlain(GetInvoicesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getInvoices:getInvoices", TypeShape.of(GetInvoicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Organization Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * API that returns data for the list of subscription ids returned from Organizations API
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetOrganizationSubscriptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testOrganizationSubscriptions = OneSubsriptionFunctions.getOrganizationSubscriptions(GetOrganizationSubscriptionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationSubscriptionsResult> getOrganizationSubscriptions(GetOrganizationSubscriptionsArgs args) {
        return getOrganizationSubscriptions(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Organization Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * API that returns data for the list of subscription ids returned from Organizations API
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetOrganizationSubscriptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testOrganizationSubscriptions = OneSubsriptionFunctions.getOrganizationSubscriptions(GetOrganizationSubscriptionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationSubscriptionsResult> getOrganizationSubscriptionsPlain(GetOrganizationSubscriptionsPlainArgs args) {
        return getOrganizationSubscriptionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Organization Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * API that returns data for the list of subscription ids returned from Organizations API
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetOrganizationSubscriptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testOrganizationSubscriptions = OneSubsriptionFunctions.getOrganizationSubscriptions(GetOrganizationSubscriptionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationSubscriptionsResult> getOrganizationSubscriptions(GetOrganizationSubscriptionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getOrganizationSubscriptions:getOrganizationSubscriptions", TypeShape.of(GetOrganizationSubscriptionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Organization Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * API that returns data for the list of subscription ids returned from Organizations API
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetOrganizationSubscriptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testOrganizationSubscriptions = OneSubsriptionFunctions.getOrganizationSubscriptions(GetOrganizationSubscriptionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetOrganizationSubscriptionsResult> getOrganizationSubscriptions(GetOrganizationSubscriptionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getOrganizationSubscriptions:getOrganizationSubscriptions", TypeShape.of(GetOrganizationSubscriptionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Organization Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * API that returns data for the list of subscription ids returned from Organizations API
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetOrganizationSubscriptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testOrganizationSubscriptions = OneSubsriptionFunctions.getOrganizationSubscriptions(GetOrganizationSubscriptionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetOrganizationSubscriptionsResult> getOrganizationSubscriptionsPlain(GetOrganizationSubscriptionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getOrganizationSubscriptions:getOrganizationSubscriptions", TypeShape.of(GetOrganizationSubscriptionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Ratecards in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * List API that returns all ratecards for given Subscription Id and Account ID (if provided) and
     * for a particular date range
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetRatecardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testRatecards = OneSubsriptionFunctions.getRatecards(GetRatecardsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .partNumber(ratecardPartNumber)
     *             .timeFrom(ratecardTimeFrom)
     *             .timeTo(ratecardTimeTo)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRatecardsResult> getRatecards(GetRatecardsArgs args) {
        return getRatecards(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Ratecards in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * List API that returns all ratecards for given Subscription Id and Account ID (if provided) and
     * for a particular date range
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetRatecardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testRatecards = OneSubsriptionFunctions.getRatecards(GetRatecardsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .partNumber(ratecardPartNumber)
     *             .timeFrom(ratecardTimeFrom)
     *             .timeTo(ratecardTimeTo)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRatecardsResult> getRatecardsPlain(GetRatecardsPlainArgs args) {
        return getRatecardsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Ratecards in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * List API that returns all ratecards for given Subscription Id and Account ID (if provided) and
     * for a particular date range
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetRatecardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testRatecards = OneSubsriptionFunctions.getRatecards(GetRatecardsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .partNumber(ratecardPartNumber)
     *             .timeFrom(ratecardTimeFrom)
     *             .timeTo(ratecardTimeTo)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRatecardsResult> getRatecards(GetRatecardsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getRatecards:getRatecards", TypeShape.of(GetRatecardsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Ratecards in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * List API that returns all ratecards for given Subscription Id and Account ID (if provided) and
     * for a particular date range
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetRatecardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testRatecards = OneSubsriptionFunctions.getRatecards(GetRatecardsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .partNumber(ratecardPartNumber)
     *             .timeFrom(ratecardTimeFrom)
     *             .timeTo(ratecardTimeTo)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetRatecardsResult> getRatecards(GetRatecardsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getRatecards:getRatecards", TypeShape.of(GetRatecardsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Ratecards in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * List API that returns all ratecards for given Subscription Id and Account ID (if provided) and
     * for a particular date range
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetRatecardsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testRatecards = OneSubsriptionFunctions.getRatecards(GetRatecardsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .partNumber(ratecardPartNumber)
     *             .timeFrom(ratecardTimeFrom)
     *             .timeTo(ratecardTimeTo)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetRatecardsResult> getRatecardsPlain(GetRatecardsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getRatecards:getRatecards", TypeShape.of(GetRatecardsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Subscribed Service resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This API returns the subscribed service details corresponding to the id provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscribedService = OneSubsriptionFunctions.getSubscribedService(GetSubscribedServiceArgs.builder()
     *             .subscribedServiceId(testSubscribedServiceOciOnesubscriptionSubscribedService.id())
     *             .fields(subscribedServiceFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubscribedServiceResult> getSubscribedService(GetSubscribedServiceArgs args) {
        return getSubscribedService(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Subscribed Service resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This API returns the subscribed service details corresponding to the id provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscribedService = OneSubsriptionFunctions.getSubscribedService(GetSubscribedServiceArgs.builder()
     *             .subscribedServiceId(testSubscribedServiceOciOnesubscriptionSubscribedService.id())
     *             .fields(subscribedServiceFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubscribedServiceResult> getSubscribedServicePlain(GetSubscribedServicePlainArgs args) {
        return getSubscribedServicePlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides details about a specific Subscribed Service resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This API returns the subscribed service details corresponding to the id provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscribedService = OneSubsriptionFunctions.getSubscribedService(GetSubscribedServiceArgs.builder()
     *             .subscribedServiceId(testSubscribedServiceOciOnesubscriptionSubscribedService.id())
     *             .fields(subscribedServiceFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubscribedServiceResult> getSubscribedService(GetSubscribedServiceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getSubscribedService:getSubscribedService", TypeShape.of(GetSubscribedServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Subscribed Service resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This API returns the subscribed service details corresponding to the id provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscribedService = OneSubsriptionFunctions.getSubscribedService(GetSubscribedServiceArgs.builder()
     *             .subscribedServiceId(testSubscribedServiceOciOnesubscriptionSubscribedService.id())
     *             .fields(subscribedServiceFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubscribedServiceResult> getSubscribedService(GetSubscribedServiceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getSubscribedService:getSubscribedService", TypeShape.of(GetSubscribedServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Subscribed Service resource in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This API returns the subscribed service details corresponding to the id provided
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServiceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscribedService = OneSubsriptionFunctions.getSubscribedService(GetSubscribedServiceArgs.builder()
     *             .subscribedServiceId(testSubscribedServiceOciOnesubscriptionSubscribedService.id())
     *             .fields(subscribedServiceFields)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubscribedServiceResult> getSubscribedServicePlain(GetSubscribedServicePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getSubscribedService:getSubscribedService", TypeShape.of(GetSubscribedServiceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Subscribed Services in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all subscribed services for given Subscription ID
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscribedServices = OneSubsriptionFunctions.getSubscribedServices(GetSubscribedServicesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .orderLineId(testOrderLine.id())
     *             .status(subscribedServiceStatus)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubscribedServicesResult> getSubscribedServices(GetSubscribedServicesArgs args) {
        return getSubscribedServices(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Subscribed Services in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all subscribed services for given Subscription ID
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscribedServices = OneSubsriptionFunctions.getSubscribedServices(GetSubscribedServicesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .orderLineId(testOrderLine.id())
     *             .status(subscribedServiceStatus)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubscribedServicesResult> getSubscribedServicesPlain(GetSubscribedServicesPlainArgs args) {
        return getSubscribedServicesPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Subscribed Services in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all subscribed services for given Subscription ID
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscribedServices = OneSubsriptionFunctions.getSubscribedServices(GetSubscribedServicesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .orderLineId(testOrderLine.id())
     *             .status(subscribedServiceStatus)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubscribedServicesResult> getSubscribedServices(GetSubscribedServicesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getSubscribedServices:getSubscribedServices", TypeShape.of(GetSubscribedServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Subscribed Services in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all subscribed services for given Subscription ID
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscribedServices = OneSubsriptionFunctions.getSubscribedServices(GetSubscribedServicesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .orderLineId(testOrderLine.id())
     *             .status(subscribedServiceStatus)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubscribedServicesResult> getSubscribedServices(GetSubscribedServicesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getSubscribedServices:getSubscribedServices", TypeShape.of(GetSubscribedServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Subscribed Services in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all subscribed services for given Subscription ID
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscribedServicesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscribedServices = OneSubsriptionFunctions.getSubscribedServices(GetSubscribedServicesArgs.builder()
     *             .compartmentId(compartmentId)
     *             .subscriptionId(testSubscription.id())
     *             .orderLineId(testOrderLine.id())
     *             .status(subscribedServiceStatus)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubscribedServicesResult> getSubscribedServicesPlain(GetSubscribedServicesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getSubscribedServices:getSubscribedServices", TypeShape.of(GetSubscribedServicesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all subscriptions for a given plan number or subscription id or buyer email
     * and provides additional parameters to include ratecard and commitment details.
     * This API expects exactly one of the above mentioned parameters as input. If more than one parameters are provided the API will throw
     * a 400 - invalid parameters exception and if no parameters are provided it will throw a 400 - missing parameter exception
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscriptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscriptions = OneSubsriptionFunctions.getSubscriptions(GetSubscriptionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .buyerEmail(subscriptionBuyerEmail)
     *             .isCommitInfoRequired(subscriptionIsCommitInfoRequired)
     *             .planNumber(subscriptionPlanNumber)
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubscriptionsResult> getSubscriptions(GetSubscriptionsArgs args) {
        return getSubscriptions(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all subscriptions for a given plan number or subscription id or buyer email
     * and provides additional parameters to include ratecard and commitment details.
     * This API expects exactly one of the above mentioned parameters as input. If more than one parameters are provided the API will throw
     * a 400 - invalid parameters exception and if no parameters are provided it will throw a 400 - missing parameter exception
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscriptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscriptions = OneSubsriptionFunctions.getSubscriptions(GetSubscriptionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .buyerEmail(subscriptionBuyerEmail)
     *             .isCommitInfoRequired(subscriptionIsCommitInfoRequired)
     *             .planNumber(subscriptionPlanNumber)
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubscriptionsResult> getSubscriptionsPlain(GetSubscriptionsPlainArgs args) {
        return getSubscriptionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all subscriptions for a given plan number or subscription id or buyer email
     * and provides additional parameters to include ratecard and commitment details.
     * This API expects exactly one of the above mentioned parameters as input. If more than one parameters are provided the API will throw
     * a 400 - invalid parameters exception and if no parameters are provided it will throw a 400 - missing parameter exception
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscriptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscriptions = OneSubsriptionFunctions.getSubscriptions(GetSubscriptionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .buyerEmail(subscriptionBuyerEmail)
     *             .isCommitInfoRequired(subscriptionIsCommitInfoRequired)
     *             .planNumber(subscriptionPlanNumber)
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubscriptionsResult> getSubscriptions(GetSubscriptionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getSubscriptions:getSubscriptions", TypeShape.of(GetSubscriptionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all subscriptions for a given plan number or subscription id or buyer email
     * and provides additional parameters to include ratecard and commitment details.
     * This API expects exactly one of the above mentioned parameters as input. If more than one parameters are provided the API will throw
     * a 400 - invalid parameters exception and if no parameters are provided it will throw a 400 - missing parameter exception
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscriptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscriptions = OneSubsriptionFunctions.getSubscriptions(GetSubscriptionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .buyerEmail(subscriptionBuyerEmail)
     *             .isCommitInfoRequired(subscriptionIsCommitInfoRequired)
     *             .planNumber(subscriptionPlanNumber)
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSubscriptionsResult> getSubscriptions(GetSubscriptionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("oci:OneSubsription/getSubscriptions:getSubscriptions", TypeShape.of(GetSubscriptionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Subscriptions in Oracle Cloud Infrastructure Onesubscription service.
     * 
     * This list API returns all subscriptions for a given plan number or subscription id or buyer email
     * and provides additional parameters to include ratecard and commitment details.
     * This API expects exactly one of the above mentioned parameters as input. If more than one parameters are provided the API will throw
     * a 400 - invalid parameters exception and if no parameters are provided it will throw a 400 - missing parameter exception
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.oci.OneSubsription.OneSubsriptionFunctions;
     * import com.pulumi.oci.OneSubsription.inputs.GetSubscriptionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var testSubscriptions = OneSubsriptionFunctions.getSubscriptions(GetSubscriptionsArgs.builder()
     *             .compartmentId(compartmentId)
     *             .buyerEmail(subscriptionBuyerEmail)
     *             .isCommitInfoRequired(subscriptionIsCommitInfoRequired)
     *             .planNumber(subscriptionPlanNumber)
     *             .subscriptionId(testSubscription.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSubscriptionsResult> getSubscriptionsPlain(GetSubscriptionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:OneSubsription/getSubscriptions:getSubscriptions", TypeShape.of(GetSubscriptionsResult.class), args, Utilities.withVersion(options));
    }
}
