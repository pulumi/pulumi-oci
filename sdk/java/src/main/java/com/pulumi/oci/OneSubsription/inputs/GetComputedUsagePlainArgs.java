// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetComputedUsagePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetComputedUsagePlainArgs Empty = new GetComputedUsagePlainArgs();

    /**
     * The OCID of the root compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * The Computed Usage Id
     * 
     */
    @Import(name="computedUsageId", required=true)
    private String computedUsageId;

    /**
     * @return The Computed Usage Id
     * 
     */
    public String computedUsageId() {
        return this.computedUsageId;
    }

    /**
     * Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
     * 
     */
    @Import(name="fields")
    private @Nullable List<String> fields;

    /**
     * @return Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
     * 
     */
    public Optional<List<String>> fields() {
        return Optional.ofNullable(this.fields);
    }

    private GetComputedUsagePlainArgs() {}

    private GetComputedUsagePlainArgs(GetComputedUsagePlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.computedUsageId = $.computedUsageId;
        this.fields = $.fields;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetComputedUsagePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetComputedUsagePlainArgs $;

        public Builder() {
            $ = new GetComputedUsagePlainArgs();
        }

        public Builder(GetComputedUsagePlainArgs defaults) {
            $ = new GetComputedUsagePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param computedUsageId The Computed Usage Id
         * 
         * @return builder
         * 
         */
        public Builder computedUsageId(String computedUsageId) {
            $.computedUsageId = computedUsageId;
            return this;
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable List<String> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
         * 
         * @return builder
         * 
         */
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }

        public GetComputedUsagePlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetComputedUsagePlainArgs", "compartmentId");
            }
            if ($.computedUsageId == null) {
                throw new MissingRequiredPropertyException("GetComputedUsagePlainArgs", "computedUsageId");
            }
            return $;
        }
    }

}
