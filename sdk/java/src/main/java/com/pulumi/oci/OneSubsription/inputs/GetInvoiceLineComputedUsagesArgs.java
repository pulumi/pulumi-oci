// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OneSubsription.inputs.GetInvoiceLineComputedUsagesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInvoiceLineComputedUsagesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInvoiceLineComputedUsagesArgs Empty = new GetInvoiceLineComputedUsagesArgs();

    /**
     * The OCID of the root compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the root compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
     * 
     */
    @Import(name="fields")
    private @Nullable Output<List<String>> fields;

    /**
     * @return Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
     * 
     */
    public Optional<Output<List<String>>> fields() {
        return Optional.ofNullable(this.fields);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetInvoiceLineComputedUsagesFilterArgs>> filters;

    public Optional<Output<List<GetInvoiceLineComputedUsagesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Invoice Line Identifier - Primary Key SPM
     * 
     */
    @Import(name="invoiceLineId", required=true)
    private Output<String> invoiceLineId;

    /**
     * @return Invoice Line Identifier - Primary Key SPM
     * 
     */
    public Output<String> invoiceLineId() {
        return this.invoiceLineId;
    }

    private GetInvoiceLineComputedUsagesArgs() {}

    private GetInvoiceLineComputedUsagesArgs(GetInvoiceLineComputedUsagesArgs $) {
        this.compartmentId = $.compartmentId;
        this.fields = $.fields;
        this.filters = $.filters;
        this.invoiceLineId = $.invoiceLineId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInvoiceLineComputedUsagesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInvoiceLineComputedUsagesArgs $;

        public Builder() {
            $ = new GetInvoiceLineComputedUsagesArgs();
        }

        public Builder(GetInvoiceLineComputedUsagesArgs defaults) {
            $ = new GetInvoiceLineComputedUsagesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable Output<List<String>> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
         * 
         * @return builder
         * 
         */
        public Builder fields(List<String> fields) {
            return fields(Output.of(fields));
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
         * 
         * @return builder
         * 
         */
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }

        public Builder filters(@Nullable Output<List<GetInvoiceLineComputedUsagesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetInvoiceLineComputedUsagesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetInvoiceLineComputedUsagesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param invoiceLineId Invoice Line Identifier - Primary Key SPM
         * 
         * @return builder
         * 
         */
        public Builder invoiceLineId(Output<String> invoiceLineId) {
            $.invoiceLineId = invoiceLineId;
            return this;
        }

        /**
         * @param invoiceLineId Invoice Line Identifier - Primary Key SPM
         * 
         * @return builder
         * 
         */
        public Builder invoiceLineId(String invoiceLineId) {
            return invoiceLineId(Output.of(invoiceLineId));
        }

        public GetInvoiceLineComputedUsagesArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.invoiceLineId = Objects.requireNonNull($.invoiceLineId, "expected parameter 'invoiceLineId' to be non-null");
            return $;
        }
    }

}
