// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.oci.OneSubsription.inputs.GetInvoiceLineComputedUsagesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInvoiceLineComputedUsagesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInvoiceLineComputedUsagesPlainArgs Empty = new GetInvoiceLineComputedUsagesPlainArgs();

    /**
     * The OCID of the root compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
     * 
     */
    @Import(name="fields")
    private @Nullable List<String> fields;

    /**
     * @return Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
     * 
     */
    public Optional<List<String>> fields() {
        return Optional.ofNullable(this.fields);
    }

    @Import(name="filters")
    private @Nullable List<GetInvoiceLineComputedUsagesFilter> filters;

    public Optional<List<GetInvoiceLineComputedUsagesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Invoice Line Identifier - Primary Key SPM
     * 
     */
    @Import(name="invoiceLineId", required=true)
    private String invoiceLineId;

    /**
     * @return Invoice Line Identifier - Primary Key SPM
     * 
     */
    public String invoiceLineId() {
        return this.invoiceLineId;
    }

    private GetInvoiceLineComputedUsagesPlainArgs() {}

    private GetInvoiceLineComputedUsagesPlainArgs(GetInvoiceLineComputedUsagesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.fields = $.fields;
        this.filters = $.filters;
        this.invoiceLineId = $.invoiceLineId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInvoiceLineComputedUsagesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInvoiceLineComputedUsagesPlainArgs $;

        public Builder() {
            $ = new GetInvoiceLineComputedUsagesPlainArgs();
        }

        public Builder(GetInvoiceLineComputedUsagesPlainArgs defaults) {
            $ = new GetInvoiceLineComputedUsagesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable List<String> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
         * 
         * @return builder
         * 
         */
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }

        public Builder filters(@Nullable List<GetInvoiceLineComputedUsagesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetInvoiceLineComputedUsagesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param invoiceLineId Invoice Line Identifier - Primary Key SPM
         * 
         * @return builder
         * 
         */
        public Builder invoiceLineId(String invoiceLineId) {
            $.invoiceLineId = invoiceLineId;
            return this;
        }

        public GetInvoiceLineComputedUsagesPlainArgs build() {
            if ($.compartmentId == null) {
                throw new MissingRequiredPropertyException("GetInvoiceLineComputedUsagesPlainArgs", "compartmentId");
            }
            if ($.invoiceLineId == null) {
                throw new MissingRequiredPropertyException("GetInvoiceLineComputedUsagesPlainArgs", "invoiceLineId");
            }
            return $;
        }
    }

}
