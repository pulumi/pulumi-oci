// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OneSubsription.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OneSubsription.inputs.GetInvoicesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInvoicesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInvoicesPlainArgs Empty = new GetInvoicesPlainArgs();

    /**
     * AR Unique identifier for an invoice .
     * 
     */
    @Import(name="arCustomerTransactionId", required=true)
    private String arCustomerTransactionId;

    /**
     * @return AR Unique identifier for an invoice .
     * 
     */
    public String arCustomerTransactionId() {
        return this.arCustomerTransactionId;
    }

    /**
     * The OCID of the root compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
     * 
     */
    @Import(name="fields")
    private @Nullable List<String> fields;

    /**
     * @return Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
     * 
     */
    public Optional<List<String>> fields() {
        return Optional.ofNullable(this.fields);
    }

    @Import(name="filters")
    private @Nullable List<GetInvoicesFilter> filters;

    public Optional<List<GetInvoicesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Initial date to filter Invoice data in SPM.
     * 
     */
    @Import(name="timeFrom")
    private @Nullable String timeFrom;

    /**
     * @return Initial date to filter Invoice data in SPM.
     * 
     */
    public Optional<String> timeFrom() {
        return Optional.ofNullable(this.timeFrom);
    }

    /**
     * Final date to filter Invoice data in SPM.
     * 
     */
    @Import(name="timeTo")
    private @Nullable String timeTo;

    /**
     * @return Final date to filter Invoice data in SPM.
     * 
     */
    public Optional<String> timeTo() {
        return Optional.ofNullable(this.timeTo);
    }

    private GetInvoicesPlainArgs() {}

    private GetInvoicesPlainArgs(GetInvoicesPlainArgs $) {
        this.arCustomerTransactionId = $.arCustomerTransactionId;
        this.compartmentId = $.compartmentId;
        this.fields = $.fields;
        this.filters = $.filters;
        this.timeFrom = $.timeFrom;
        this.timeTo = $.timeTo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInvoicesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInvoicesPlainArgs $;

        public Builder() {
            $ = new GetInvoicesPlainArgs();
        }

        public Builder(GetInvoicesPlainArgs defaults) {
            $ = new GetInvoicesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arCustomerTransactionId AR Unique identifier for an invoice .
         * 
         * @return builder
         * 
         */
        public Builder arCustomerTransactionId(String arCustomerTransactionId) {
            $.arCustomerTransactionId = arCustomerTransactionId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the root compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable List<String> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields Partial response refers to an optimization technique offered by the RESTful web APIs to return only the information  (fields) required by the client. This parameter is used to control what fields to return.
         * 
         * @return builder
         * 
         */
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }

        public Builder filters(@Nullable List<GetInvoicesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetInvoicesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param timeFrom Initial date to filter Invoice data in SPM.
         * 
         * @return builder
         * 
         */
        public Builder timeFrom(@Nullable String timeFrom) {
            $.timeFrom = timeFrom;
            return this;
        }

        /**
         * @param timeTo Final date to filter Invoice data in SPM.
         * 
         * @return builder
         * 
         */
        public Builder timeTo(@Nullable String timeTo) {
            $.timeTo = timeTo;
            return this;
        }

        public GetInvoicesPlainArgs build() {
            $.arCustomerTransactionId = Objects.requireNonNull($.arCustomerTransactionId, "expected parameter 'arCustomerTransactionId' to be non-null");
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
